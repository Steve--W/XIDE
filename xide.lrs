LazarusResources.Add('webtranspilerutils','PAS',[
  'unit WebTranspilerUtils;'#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'inter'
  +'face'#13#10#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils,XCode'
  +#13#10'  {$ifndef JScript}'#13#10'  ,dialogs'#13#10'  {$else}'#13#10'  ,webf'
  +'ilecache, pas2jswebcompiler'#13#10'  {$endif}'#13#10'  ;'#13#10#13#10'{$ifd'
  +'ef JScript}'#13#10'type'#13#10'TWebCompilerObj = Class(TObject)'#13#10'Priv'
  +'ate'#13#10'  FCompiler : TPas2JSWebCompiler;'#13#10'  FCodeEditor:TXCode;'
  +#13#10'  procedure OnUnitLoaded(Sender: TObject; aFileName: String; aError: '
  +'string);'#13#10'Protected'#13#10'Public'#13#10'  procedure DoLog(Sender: TO'
  +'bject; const Msg: String);'#13#10'  Constructor Create;'#13#10'  property m'
  +'yCodeEditor:TXCode read FCodeEditor write FCodeEditor;'#13#10'  property Co'
  +'mpiler:TPas2JSWebCompiler read FCompiler write FCompiler;'#13#10'end;'#13#10
  +#13#10'procedure LoadRTLFilesForPas2JS(lWebFS : TPas2JSWebFS);    //TWebComp'
  +'ilerObj);'#13#10#13#10'var MyWebCompiler:TWebCompilerObj;'#13#10'{$endif}'
  +#13#10#13#10'procedure WriteIncFile(Compiler:TObject;IncName,EventType,IncPa'
  +'th:String;'#13#10'                       var MainCode:TStringList;IncCode:T'
  +'StringList);'#13#10'function LoadIncludeFile(Compiler:TObject;FileName,IncP'
  +'ath:String):TStringList;'#13#10#13#10'implementation'#13#10#13#10'procedure'
  +' WriteIncFile(Compiler:TObject;IncName,EventType,IncPath:String;'#13#10'   '
  +'                    var MainCode:TStringList;IncCode:TStringList);'#13#10'v'
  +'ar'#13#10'{$ifndef JScript}'#13#10'   TheStream:TFileStream;'#13#10'   {$en'
  +'dif}'#13#10'   FileName:string;'#13#10'begin'#13#10'  if EventType<>'''' th'
  +'en IncName:=IncName+''__''+EventType;'#13#10#13#10'  if length(IncName)<251'
  +' then'#13#10'  begin'#13#10#13#10'    {$ifndef JScript}'#13#10'    FileName'
  +':=IncPath+IncName+''.inc'';'#13#10#13#10'    try'#13#10'      TheStream:=TF'
  +'ileStream.Create(Filename,fmCreate or fmOpenRead or fmOpenWrite or fmShareD'
  +'enyNone);'#13#10'      IncCode.SaveToStream(TheStream);'#13#10'      TheStr'
  +'eam.Free;'#13#10'    except'#13#10'      showmessage(''Failed to create inc'
  +'lude file ''+FileName);'#13#10'    end;'#13#10'    {$else}'#13#10'    FileN'
  +'ame:=IncName+''.inc'';'#13#10'    // save the generated inc file'#13#10'   '
  +' TPas2JSWebCompiler(Compiler).WebFS.SetFileContent(FileName,IncCode.Text);'
  +#13#10'    {$endif}'#13#10#13#10'    MainCode.Add(''{$I ''+IncName+''.inc}'''
  +');'#13#10#13#10'  end'#13#10'  else'#13#10'    showmessage(''Unable to writ'
  +'e include file; name is too long. ''+IncName);'#13#10'end;'#13#10#13#10'fun'
  +'ction LoadIncludeFile(Compiler:TObject;FileName,IncPath:String):TStringList'
  +';'#13#10'var'#13#10'  tmp1:TStringList;'#13#10'  tmp:String;'#13#10'  {$ifn'
  +'def JScript}'#13#10'  TheStream:TFileStream;'#13#10'  {$endif}'#13#10'begin'
  +#13#10'  tmp1:=TStringList.Create;'#13#10'  {$ifndef JScript}'#13#10'  try'
  +#13#10'  // find and load the include file...'#13#10'  TheStream:=TFileStrea'
  +'m.Create(IncPath+FileName,fmOpenRead or fmShareDenyNone);'#13#10'  tmp1.Loa'
  +'dFromStream(TheStream);'#13#10'  TheStream.Free;'#13#10'  except'#13#10'   '
  +' try'#13#10'    // try once more with a .inc suffix (FPC keeps this, pas2js'
  +' doesn''t (!?).....'#13#10'    TheStream:=TFileStream.Create(IncPath+FileNa'
  +'me+''.inc'',fmOpenRead or fmShareDenyNone);'#13#10'    tmp1.LoadFromStream('
  +'TheStream);'#13#10'    FileName:=FileName+''.inc'';'#13#10'    TheStream.Fr'
  +'ee;'#13#10'    except'#13#10'      showmessage(''file ''+IncPath+FileName+'
  +''' not available'');'#13#10'      tmp1.Clear;'#13#10'    end;'#13#10'  end;'
  +#13#10'  {$else}'#13#10' // tmp:=MyWebCompiler.Compiler.WebFS.GetFileContent'
  +'(FileName);'#13#10'  tmp:=TPas2JSWebCompiler(Compiler).WebFS.GetFileContent'
  +'(FileName);'#13#10'  tmp1.Text:=tmp;'#13#10'  {$endif}'#13#10'  result:=tmp'
  +'1;'#13#10'end;'#13#10#13#10#13#10'{$ifdef JScript}'#13#10'constructor TWebC'
  +'ompilerObj.Create;'#13#10'begin'#13#10'  FCompiler:=TPas2JSWebCompiler.Crea'
  +'te;'#13#10'end;'#13#10#13#10'procedure TWebCompilerObj.DoLog(Sender: TObjec'
  +'t; const Msg: String);'#13#10'begin'#13#10'  if myCodeEditor<>nil then'#13
  +#10'    myCodeEditor.MessageLines:=myCodeEditor.MessageLines+LineEnding+Msg;'
  +#13#10'end;'#13#10'procedure TWebCompilerObj.OnUnitLoaded(Sender: TObject; a'
  +'FileName: String; aError: string);'#13#10'begin'#13#10'  if myCodeEditor<>n'
  +'il then'#13#10'    if aError='''' then'#13#10'      myCodeEditor.MessageLin'
  +'es:=myCodeEditor.MessageLines+LineEnding+''Loaded: ''+aFileName'#13#10'    '
  +'else'#13#10'      myCodeEditor.MessageLines:=myCodeEditor.MessageLines+Line'
  +'Ending+''Error Loading "''+aFileName+''": ''+AError;'#13#10'end;'#13#10#13
  +#10'procedure LoadRTLFilesForPas2JS(lWebFS : TPas2JSWebFS);  //Compiler:TPas'
  +'2JSWebCompiler);    //TWebCompilerObj);'#13#10'begin'#13#10'  asm'#13#10'  '
  +'  // minimal required rtl set....'#13#10'    //lWebFS.SetFileContent(''syst'
  +'em.pas'',pas.UtilsJSCompile.systempas);'#13#10'    //lWebFS.SetFileContent('
  ,'''sysutils.pas'',pas.UtilsJSCompile.sysutilspas);'#13#10'    //lWebFS.SetFi'
  +'leContent(''classes.pas'',pas.UtilsJSCompile.classespas);'#13#10'    //lWeb'
  +'FS.SetFileContent(''rtlconsts.pas'',pas.UtilsJSCompile.rtlconstspas);'#13#10
  +'    //lWebFS.SetFileContent(''js.pas'',pas.UtilsJSCompile.jspas);'#13#10'  '
  +'  //lWebFS.SetFileContent(''types.pas'',pas.UtilsJSCompile.typespas);'#13#10
  +#13#10'    // common rtl set  (Desktop (windows/linux) and pas2js) ....'#13
  +#10'    lWebFS.SetFileContent(''classes.pas'',pas.CompileUserCode.classespas'
  +');'#13#10'    lWebFS.SetFileContent(''contnrs.pas'',pas.CompileUserCode.con'
  +'tnrspas);'#13#10'    lWebFS.SetFileContent(''dateutils.pas'',pas.CompileUse'
  +'rCode.dateutilspas);'#13#10'    lWebFS.SetFileContent(''js.pas'',pas.Compil'
  +'eUserCode.jspas);'#13#10'    lWebFS.SetFileContent(''math.pas'',pas.Compile'
  +'UserCode.mathpas);'#13#10'    lWebFS.SetFileContent(''rtlconsts.pas'',pas.C'
  +'ompileUserCode.rtlconstspas);'#13#10'//    lWebFS.SetFileContent(''rtti.pas'
  +''',pas.CompileUserCode.rttipas);'#13#10'    lWebFS.SetFileContent(''strutil'
  +'s.pas'',pas.CompileUserCode.strutilspas);'#13#10'    lWebFS.SetFileContent('
  +'''system.pas'',pas.CompileUserCode.systempas);'#13#10'    lWebFS.SetFileCon'
  +'tent(''sysutils.pas'',pas.CompileUserCode.sysutilspas);'#13#10'    lWebFS.S'
  +'etFileContent(''types.pas'',pas.CompileUserCode.typespas);'#13#10'    lWebF'
  +'S.SetFileContent(''typinfo.pas'',pas.CompileUserCode.typinfopas);'#13#10#13
  +#10'  //  lWebFS.SetFileContent(''timer.pas'',pas.UtilsJSCompile.timerpas);'
  +#13#10'  //  lWebFS.SetFileContent(''nodejs.pas'',pas.UtilsJSCompile.nodejsp'
  +'as);'#13#10'  //  lWebFS.SetFileContent(''objpas.pas'',pas.UtilsJSCompile.o'
  +'bjpaspas);'#13#10'  //  lWebFS.SetFileContent(''libjquery.pas'',pas.UtilsJS'
  +'Compile.libjquerypas);'#13#10'  //  lWebFS.SetFileContent(''hotreloadclient'
  +'.pas'',pas.UtilsJSCompile.hotreloadclientpas);'#13#10'  //  lWebFS.SetFileC'
  +'ontent(''class2pas.pas'',pas.UtilsJSCompile.class2paspas);'#13#10'  //  lWe'
  +'bFS.SetFileContent(''browserconsole.pas'',pas.UtilsJSCompile.browserconsole'
  +'pas);'#13#10'  //  lWebFS.SetFileContent(''web.pas'',pas.UtilsJSCompile.web'
  +'pas);'#13#10'  //  lWebFS.SetFileContent(''webaudio.pas'',pas.UtilsJSCompil'
  +'e.webaudiopas);'#13#10'  //  lWebFS.SetFileContent(''webbluetooth.pas'',pas'
  +'.UtilsJSCompile.webbluetoothpas);'#13#10'  //  lWebFS.SetFileContent(''webg'
  +'l.pas'',pas.UtilsJSCompile.webglpas);'#13#10'  //  lWebFS.SetFileContent('''
  +'webrouter.pas'',pas.UtilsJSCompile.webrouterpas);'#13#10'  end;'#13#10'end;'
  +#13#10'{$endif}'#13#10#13#10'begin'#13#10'{$ifdef JScript}'#13#10'MyWebCompi'
  +'ler := TWebCompilerObj.Create;'#13#10'{$endif}'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('xthreads','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XComponents package.'#13#10#13#10'    This package is distribu'
  +'ted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY'
  +'; without even the implied warranty of'#13#10'    MERCHANTABILITY or FITNES'
  +'S FOR A PARTICULAR PURPOSE.'#13#10#13#10' *********************************'
  +'*************************************'#13#10' *)'#13#10'unit XThreads;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10
  +#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, Types,NodeUti'
  +'ls,StringUtils, Events, EventsInterface,'#13#10'  {$ifndef JScript}'#13#10
  +'  Forms, Controls, StdCtrls, LResources, Graphics, Dialogs, ExtCtrls, PropE'
  +'dits, RTTICtrls,'#13#10'  LazsUtils, Dynlibs,'#13#10'    {$if defined ( win'
  +'dows)}'#13#10'    windows,'#13#10'    {$endif}'#13#10'  {$Else}'#13#10'  HT'
  +'MLUtils,'#13#10'  {$endif}'#13#10'  WrapperPanel;'#13#10#13#10'type'#13#10
  +#13#10'  {$ifndef JScript}'#13#10'//  TFunctionParameter = function() : stri'
  +'ng;'#13#10#13#10'  TMyThread = class(TThread)'#13#10'    ThreadName:string;'
  +#13#10'    active:boolean;'#13#10'    myTXThreads:TComponent;'#13#10'    Ret'
  +'urnString:String;'#13#10'    procedure Execute; override;'#13#10'  end;'#13
  +#10'  {$else}'#13#10'  TMyThread = class(TObject)'#13#10'    ThreadName:stri'
  +'ng;'#13#10'    active:boolean;'#13#10'    myTXThreads:TObject;'#13#10'    T'
  +'hreadID:String;'#13#10'    ReturnString:String;'#13#10'    CurrentWorker:TO'
  +'bject;'#13#10'    procedure Execute(TheFunc:TObject);'#13#10'  end;'#13#10
  +'  {$endif}'#13#10#13#10'  {$ifndef JScript}'#13#10'  TXThreads = class(TCom'
  +'ponent)'#13#10'  {$Else}'#13#10'  TXThreads = class(TWrapperPanel)'#13#10' '
  +' {$endif}'#13#10'  private'#13#10'    {$ifndef JScript}'#13#10'    FmyNode:'
  +'TDataNode;'#13#10'    FmyControl:TControl;'#13#10'    {$endif}'#13#10#13#10
  +'  protected'#13#10'    FBeginThreads:TEventHandler;'#13#10'    FHandleRetur'
  +'n:TEventHandler;'#13#10'    FFinaliseThreads:TEventHandler;'#13#10'    FHan'
  +'dleThread1:TEventHandler;'#13#10'    FHandleThread2:TEventHandler;'#13#10' '
  +'   FHandleThread3:TEventHandler;'#13#10'    FHandleThread4:TEventHandler;'
  +#13#10'    {$ifndef JScript}'#13#10'    function GetName:string;'#13#10'    '
  +'procedure SetMyName(AValue:string);'#13#10'    {$endif}'#13#10'    function'
  +' GetActive:Boolean;'#13#10'    function GetMaxCopiesThread1:integer;'#13#10
  +'    function GetMaxCopiesThread2:integer;'#13#10'    function GetMaxCopiesT'
  +'hread3:integer;'#13#10'    function GetMaxCopiesThread4:integer;'#13#10'   '
  +' function GetThreadVarNums:String;'#13#10#13#10'    procedure SetActive(AVa'
  +'lue:Boolean);'#13#10'    procedure SetMaxCopiesThread1(AValue:integer);'#13
  +#10'    procedure SetMaxCopiesThread2(AValue:integer);'#13#10'    procedure '
  +'SetMaxCopiesThread3(AValue:integer);'#13#10'    procedure SetMaxCopiesThrea'
  +'d4(AValue:integer);'#13#10'    procedure SetThreadVarNums(AValue:String);'
  +#13#10#13#10'  public'#13#10'    ThreadCount :integer;'#13#10'    ThreadList'
  +':array of TMyThread;'#13#10'    {$ifndef JScript}'#13#10'    myEventTypes:T'
  +'StringList;'#13#10'    procedure DoConstructor(TheOwner:TComponent;IsDynami'
  +'c:Boolean);'#13#10'    function CreateWorkerThread(ThreadNameString:string)'
  +':TMyThread;'#13#10'    function getThreadName(ThreadID:LongInt):string;'#13
  +#10'    procedure DoneThread(Sender:TObject);'#13#10'    constructor Create('
  +'TheOwner: TComponent);  override;'#13#10'    constructor Create(TheOwner: T'
  +'Component;IsDynamic:Boolean);'#13#10'    procedure CreateSetOfThreads(Threa'
  +'dSetNum:integer);'#13#10'    {$else}'#13#10'    constructor Create(MyForm:T'
  +'Form;NodeName,NameSpace:String);'#13#10'    procedure MessageReturned(Threa'
  +'dID:String; edata:TObject);'#13#10'    procedure ErrorReturned(ThreadID:Str'
  +'ing);'#13#10'    function CreateWorkerThread(ThreadNameString:string; TheFu'
  +'nc:TObject):TMyThread;'#13#10'    procedure CreateSetOfThreads(ThreadSetNum'
  +':integer; TheFunc:TObject);'#13#10'    {$endif}'#13#10'    procedure StartM'
  +'yThreads;'#13#10'    procedure SetMyEventTypes;'#13#10#13#10'  published'#13
  +#10'    {$ifndef JScript}'#13#10'    property myControl:TControl read FmyCon'
  +'trol write FmyControl;'#13#10'    property Name: String read GetName write '
  +'SetMyName;'#13#10'    property myNode:TDataNode read FmyNode write FmyNode;'
  +#13#10'    {$endif}'#13#10#13#10'    property Active:Boolean read getActive '
  +'write setActive;'#13#10'    property MaxCopiesThread1:integer read GetMaxCo'
  +'piesThread1 write SetMaxCopiesThread1;'#13#10'    property MaxCopiesThread2'
  +':integer read GetMaxCopiesThread2 write SetMaxCopiesThread2;'#13#10'    pro'
  +'perty MaxCopiesThread3:integer read GetMaxCopiesThread3 write SetMaxCopiesT'
  +'hread3;'#13#10'    property MaxCopiesThread4:integer read GetMaxCopiesThrea'
  +'d4 write SetMaxCopiesThread4;'#13#10'    property ThreadVarNums:String read'
  ,' GetThreadVarNums write SetThreadVarNums;'#13#10#13#10'    // Events to be '
  +'visible in Lazarus IDE'#13#10'    property BeginThreads:TEventHandler read '
  +'FBeginThreads write FBeginThreads;'#13#10'    property HandleReturn:TEventH'
  +'andler read FHandleReturn write FHandleReturn;'#13#10'    property Finalise'
  +'Threads:TEventHandler read FFinaliseThreads write FFinaliseThreads;'#13#10
  +'    property HandleThread1: TEventHandler read FHandleThread1 write FHandle'
  +'Thread1;'#13#10'    property HandleThread2: TEventHandler read FHandleThrea'
  +'d2 write FHandleThread2;'#13#10'    property HandleThread3: TEventHandler r'
  +'ead FHandleThread3 write FHandleThread3;'#13#10'    property HandleThread4:'
  +' TEventHandler read FHandleThread4 write FHandleThread4;'#13#10#13#10'  end'
  +';'#13#10#13#10'//  {$ifndef JScript}'#13#10'//  procedure Register;'#13#10
  +'//  {$endif}'#13#10'  var'#13#10'    myDefaultAttribs:TDefaultAttributesArr'
  +'ay;'#13#10#13#10'implementation'#13#10#13#10'const MyNodeType=''TXThreads'''
  +';'#13#10#13#10'procedure TXThreads.SetMyEventTypes;'#13#10'begin'#13#10'  M'
  +'yEventTypes.Add(''BeginThreads'');'#13#10'  MyEventTypes.Add(''HandleReturn'
  +''');'#13#10'  MyEventTypes.Add(''FinaliseThreads'');'#13#10#13#10'  MyEvent'
  +'Types.Add(''Thread1'');'#13#10'  MyEventTypes.Add(''Thread2'');'#13#10'  My'
  +'EventTypes.Add(''Thread3'');'#13#10'  MyEventTypes.Add(''Thread4'');'#13#10
  +#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'//procedure Register;'#13
  +#10'//begin'#13#10'//  {$I Icons/XThreads.lrs}'#13#10'//  RegisterComponents'
  +'(''XComponents'',[TXThreads]);'#13#10'//'#13#10'//  RegisterPropertyEditor('
  +'TypeInfo(TControl), TXThreads, ''myControl'', THiddenPropertyEditor);'#13#10
  +'//  RegisterPropertyEditor(TypeInfo(Integer), TXThreads, ''Tag'', THiddenPr'
  +'opertyEditor);'#13#10'//end;'#13#10#13#10'function TXThreads.getThreadName('
  +'ThreadID:LongInt):string;'#13#10'var i:integer;'#13#10'    tempstr:string;'
  +#13#10'begin'#13#10'  tempstr:='''';'#13#10'  for  i := 0 to length(ThreadLi'
  +'st)-1 do'#13#10'  begin'#13#10'    if (ThreadID = ThreadList[i].ThreadID)'
  +#13#10'    then tempstr:= ThreadList[i].ThreadName;'#13#10'  end;'#13#10'  g'
  +'etThreadName:=tempstr;'#13#10'end;'#13#10#13#10'procedure TMyThread.Execute'
  +';'#13#10'var'#13#10'    e:TEventStatus;'#13#10'begin'#13#10'  e:=TEventStat'
  +'us.Create(ThreadName,TXThreads(self.myTXThreads).myNode.NodeName);'#13#10' '
  +' HandleEvent(e,ThreadName,TXThreads(self.myTXThreads).myNode.NodeName,TXThr'
  +'eads(self.myTXThreads).myNode.NameSpace,'''');'#13#10'  // pick up any retu'
  +'rnstring that may have been set in the user event code'#13#10'  self.Return'
  +'String:=e.ReturnString;'#13#10'end;'#13#10#13#10'procedure TXThreads.DoCons'
  +'tructor(TheOwner:TComponent;IsDynamic:Boolean);'#13#10'var'#13#10'  NewNode'
  +':TDataNode;'#13#10'begin'#13#10'    NewNode:=TDataNode.Create(''NV'',self.N'
  +'ame,'''',''TXThreads'',false);'#13#10'    NewNode.ScreenObject:=self;'#13#10
  +'    NewNode.MyForm:=TForm(TheOwner);'#13#10'    NewNode.IsDynamic:=IsDynami'
  +'c;'#13#10#13#10'    self.MyEventTypes:=TStringList.Create;'#13#10'    self.'
  +'SetMyEventTypes;'#13#10#13#10'    SetLength(NewNode.myEventHandlers,self.my'
  +'EventTypes.Count);'#13#10'    NewNode.myEventTypes:=self.myEventTypes;'#13
  +#10#13#10#13#10'    AddChildToParentNode(SystemNodetree,NewNode,-1);'#13#10
  +#13#10'    self.myNode:=NewNode;'#13#10#13#10'    ThreadCount:=0;'#13#10'   '
  +' setlength(ThreadList,0);'#13#10'end;'#13#10#13#10'constructor TXThreads.Cr'
  +'eate(TheOwner:TComponent);'#13#10'begin'#13#10'  inherited Create(TheOwner)'
  +';'#13#10'  DoConstructor(TheOwner,false);'#13#10'end;'#13#10#13#10'construc'
  +'tor TXThreads.Create(TheOwner:TComponent;IsDynamic:Boolean);'#13#10'begin'
  +#13#10'  inherited Create(TheOwner);'#13#10'  DoConstructor(TheOwner,IsDynam'
  +'ic);'#13#10'end;'#13#10#13#10'function TXThreads.GetName:string;'#13#10'var'
  +#13#10'  myname:string;'#13#10'begin'#13#10'  result:=inherited Name;'#13#10
  +'end;'#13#10#13#10'procedure TXThreads.SetMyName(AValue:string);'#13#10'begi'
  +'n'#13#10'  inherited Name:=AValue;'#13#10#13#10'  if myNode<>nil then'#13#10
  +'     myNode.NodeName:=AValue;'#13#10'end;'#13#10#13#10'function CreateWidge'
  +'t(ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position:integer;A'
  +'lignment:String):TDataNode;'#13#10'var'#13#10'  NewNode:TDataNode;'#13#10'b'
  +'egin'#13#10'  NewNode:=CreateDynamicLazWidget(''TXThreads'',ParentNode.MyFo'
  +'rm,ParentNode,ScreenObjectName,NameSpace,Alignment,position);'#13#10'  resu'
  +'lt:=NewNode;'#13#10'end;'#13#10#13#10'function TXThreads.CreateWorkerThread'
  +'(ThreadNameString:string):TMyThread;'#13#10'var NewThread:TMyThread;'#13#10
  +'begin'#13#10#13#10'  NewThread :=  TMyThread.Create(true);       //CreateSu'
  +'spended=true'#13#10'  NewThread.ThreadName:=ThreadNameString;'#13#10#13#10
  +'  NewThread.myTXThreads:=self;'#13#10'  NewThread.OnTerminate:=@self.DoneTh'
  +'read;'#13#10'  NewThread.FreeOnTerminate := true;'#13#10#13#10'  NewThread.'
  ,'active := true;'#13#10#13#10'  ThreadCount := ThreadCount + 1;'#13#10'  set'
  +'length(ThreadList,ThreadCount);'#13#10'  ThreadList[ThreadCount-1 ]:= NewTh'
  +'read;'#13#10'  NewThread.Start;'#13#10#13#10'  result:=NewThread;'#13#10'en'
  +'d;'#13#10#13#10'procedure TXThreads.CreateSetOfThreads(ThreadSetNum:integer'
  +');'#13#10'var'#13#10'  i,max:integer;'#13#10'begin'#13#10'  max:=strToInt(m'
  +'yNode.getAttribute(''MaxCopiesThread''+intToStr(ThreadSetNum),true).AttribV'
  +'alue);'#13#10'  for i:=0 to max-1 do'#13#10'  begin'#13#10'    CreateWorker'
  +'Thread(''Thread''+intToStr(ThreadSetNum));'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'procedure TXThreads.DoneThread(Sender:TObject);'#13#10'var'#13#10'  A'
  +'nyThreadsActive :boolean;'#13#10'  CurrentThreadindex,i:integer;'#13#10'  T'
  +'iD:integer;'#13#10'  ThreadName:string;'#13#10'  ReturnString: string;'#13
  +#10'begin'#13#10'  AnyThreadsActive := false;'#13#10'  TiD:=TMyThread(Sender'
  +').ThreadID;'#13#10'  ReturnString := TMyThread(Sender).ReturnString;'#13#10
  +'  ThreadName:=getThreadName(TiD);'#13#10#13#10'  TMyThread(Sender).active:='
  +'false;'#13#10#13#10'  for  i := 0 to length(ThreadList)-1 do'#13#10'  begin'
  +#13#10'    if (ThreadList[i]<>nil) and (ThreadList[i].active = true) then'#13
  +#10'      AnyThreadsActive := true;'#13#10'  end;'#13#10#13#10'  // Run any '
  +'user-supplied message handler'#13#10'  HandleEvent(''HandleReturn'',self.My'
  +'Node.NodeName,self.MyNode.NameSpace,ReturnString);'#13#10#13#10'  if (AnyTh'
  +'readsActive = false)'#13#10'  then'#13#10'  begin'#13#10'    self.Active:=f'
  +'alse;'#13#10'    // Run any user-supplied finalisation code'#13#10'    Hand'
  +'leEvent(''FinaliseThreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'''''
  +');'#13#10'    {$ifndef JScript}'#13#10'    Screen.Cursor:=crDefault;'#13#10
  +'    {$endif}'#13#10'    ThreadCount:=0;'#13#10'    setlength(ThreadList,0);'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TXThreads.StartMyThreads;'
  +#13#10'begin'#13#10'  if (self.HandleThread1<>nil) or (myNode.HasUserEventCo'
  +'de(''Thread1'')) then CreateSetOfThreads(1);'#13#10'  if (self.HandleThread'
  +'2<>nil) or (myNode.HasUserEventCode(''Thread2'')) then CreateSetOfThreads(2'
  +');'#13#10'  if (self.HandleThread3<>nil) or (myNode.HasUserEventCode(''Thre'
  +'ad3'')) then CreateSetOfThreads(3);'#13#10'  if (self.HandleThread4<>nil) o'
  +'r (myNode.HasUserEventCode(''Thread4'')) then CreateSetOfThreads(4);'#13#10
  +'end;'#13#10#13#10'{$else}'#13#10#13#10'constructor TXThreads.Create(MyForm:'
  +'TForm;NodeName,NameSpace:String);'#13#10'begin'#13#10'  inherited Create(No'
  +'deName,NameSpace);'#13#10'  self.NodeClass:=''NV'';'#13#10'  self.NodeType:'
  +'=''TXThreads'';'#13#10'  self.MyForm:=MyForm;'#13#10#13#10'  self.myNode.My'
  +'EventTypes:=TStringList.Create;'#13#10'  self.SetMyEventTypes;'#13#10'  sel'
  +'f.IsContainer:=false;'#13#10#13#10'  ThreadCount:=0;'#13#10'  setlength(Thr'
  +'eadList,0);'#13#10'end;'#13#10#13#10'function CreateThreadsWidget(MyNode, P'
  +'arentNode:TDataNode;ScreenObjectName,NameSpace:string;position:integer;Alig'
  +'nment:String):TDataNode;'#13#10'begin'#13#10'//showmessage(''Create TXThrea'
  +'ds widget'');'#13#10#13#10'MyNode.ScreenObject:=MyNode;'#13#10#13#10'Refres'
  +'hComponentProps(myNode);'#13#10#13#10'result:=myNode;'#13#10'end;'#13#10#13
  +#10'function CreateinterfaceObj(MyForm:TForm;NodeName,NameSpace:String):TObj'
  +'ect;'#13#10'begin'#13#10'  result:=TObject(TXThreads.Create(MyForm,NodeName'
  +',NameSpace));'#13#10'end;'#13#10#13#10'(*function TXThreads.getThreadName(T'
  +'hreadID:String):string;'#13#10'var i:integer;'#13#10'    tempstr:string;'#13
  +#10'begin'#13#10'  tempstr:='''';'#13#10'  for  i := 0 to length(ThreadList)'
  +'-1 do'#13#10'  begin'#13#10'    if (ThreadID = ThreadList[i].ThreadID)'#13
  +#10'    then tempstr:= ThreadList[i].ThreadName;'#13#10'  end;'#13#10'  getT'
  +'hreadName:=tempstr;'#13#10'end; *)'#13#10#13#10'procedure TXThreads.Message'
  +'Returned(ThreadID:String; edata:TObject);'#13#10'var'#13#10'  AnyThreadsAct'
  +'ive :boolean;'#13#10'  i:integer;'#13#10'  msg:String;'#13#10'begin'#13#10
  +'  asm'#13#10'  //  msgid =edata.id;'#13#10'    msg = edata.msg;'#13#10'  en'
  +'d;'#13#10'//    showmessage(ThreadID+'' MessageReturned ''+msgid+'' ''+msg)'
  +';'#13#10#13#10'    AnyThreadsActive := false;'#13#10#13#10'    for  i := 0 '
  +'to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if (ThreadList[i]<'
  +'>nil) and (ThreadList[i].ThreadID = ThreadID) then'#13#10'      begin'#13#10
  +'        ThreadList[i].Active := false;'#13#10'        ThreadList[i].ReturnS'
  +'tring:=msg;'#13#10'      end;'#13#10'    end;'#13#10#13#10'    for  i := 0 '
  +'to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if (ThreadList[i]<'
  +'>nil) and (ThreadList[i].active = true) then'#13#10'        AnyThreadsActiv'
  +'e := true;'#13#10'    end;'#13#10#13#10'    // Run any user-supplied messag'
  +'e handler'#13#10'    HandleEvent(''HandleReturn'',self.MyNode.NodeName,self'
  +'.MyNode.NameSpace,msg);'#13#10#13#10'    if (AnyThreadsActive = false)'#13
  ,#10'    then'#13#10'    begin'#13#10'      self.Active:=false;'#13#10'      '
  +'// Run any user-supplied finalisation code'#13#10'      HandleEvent(''Final'
  +'iseThreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'''');'#13#10#13#10
  +'      for  i := 0 to length(ThreadList)-1 do'#13#10'      begin'#13#10'    '
  +'    asm'#13#10'          //alert(''cleaning up'');'#13#10'          this.Th'
  +'readList[i].CurrentWorker.terminate();'#13#10'          this.ThreadList[i].'
  +'CurrentWorker = undefined;'#13#10'        end;'#13#10'      end;'#13#10#13
  +#10#13#10'      ThreadCount:=0;'#13#10'      setlength(ThreadList,0);'#13#10
  +'    end;'#13#10'end;'#13#10#13#10'procedure TXThreads.ErrorReturned(ThreadI'
  +'D:String);'#13#10'var'#13#10'  AnyThreadsActive :boolean;'#13#10'  CurrentT'
  +'hreadindex,i:integer;'#13#10'begin'#13#10'    //showmessage(ThreadID+'' Err'
  +'orReturned '');'#13#10#13#10'    AnyThreadsActive := false;'#13#10#13#10'  '
  +'  for  i := 0 to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if ('
  +'ThreadList[i]<>nil) and (ThreadList[i].ThreadID = ThreadID) then'#13#10'   '
  +'   begin'#13#10'        ThreadList[i].Active := false;'#13#10'        Threa'
  +'dList[i].ReturnString:='''';'#13#10'      end;'#13#10'    end;'#13#10#13#10
  +'    for  i := 0 to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if'
  +' (ThreadList[i]<>nil) and (ThreadList[i].active = true) then'#13#10'       '
  +' AnyThreadsActive := true;'#13#10'    end;'#13#10#13#10'    if (AnyThreadsA'
  +'ctive = false)'#13#10'    then'#13#10'    begin'#13#10'      self.Active:=f'
  +'alse;'#13#10'      // Run any user-supplied finalisation code'#13#10'      '
  +'HandleEvent(''FinaliseThreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'
  +''''');'#13#10#13#10'      for  i := 0 to length(ThreadList)-1 do'#13#10'   '
  +'   begin'#13#10'        asm'#13#10'          //alert(''cleaning up'');'#13
  +#10'          this.ThreadList[i].CurrentWorker.terminate();'#13#10'         '
  +' this.ThreadList[i].CurrentWorker = undefined;'#13#10'        end;'#13#10' '
  +'     end;'#13#10#13#10#13#10'      ThreadCount:=0;'#13#10'      setlength(T'
  +'hreadList,0);'#13#10'    end;'#13#10'end;'#13#10#13#10'(*'#13#10'----------'
  +'--------------------------------------------------'#13#10'Thread Code Struc'
  +'ture....'#13#10#13#10'var loce=null;       // e is object of type TEventSta'
  +'tus'#13#10#13#10'function EventFunc(e,nodeid,str) {'#13#10'...user code...'
  +#13#10'}'#13#10'function setupThread() {'#13#10'   // onmessage here will ha'
  +'ndle messages received into the worker thread from the main thread...'#13#10
  +'   onmessage = function(event) {'#13#10'                                 //'
  +'eg. {''cmd'': ''start'', ''msg'': ''Hi''}'#13#10'                          '
  +'       loce=event.data;'#13#10'                                 if (loce.Ev'
  +'entType) {'#13#10'                                   // Execute user event '
  +'function...'#13#10'                                   EventFunc(loce,loce.N'
  +'odeId,"");'#13#10'                                   // Notify main thread '
  +'we are done...'#13#10'                                   postMessage({"id":'
  +'loce.EventType , "msg":loce.ReturnString});'#13#10'                        '
  +'           }'#13#10'                               };'#13#10'}'#13#10'setup'
  +'Thread();'#13#10'----------------------------------------------------------'
  +#13#10'*)'#13#10#13#10#13#10#13#10'procedure TMyThread.Execute(TheFunc:TObje'
  +'ct);'#13#10'var'#13#10'  e:TEventStatus;'#13#10'begin'#13#10'  e:=TEventSta'
  +'tus.Create(self.ThreadID,TXThreads(self.myTXThreads).NodeName);'#13#10'  e.'
  +'NameSpace:=TXThreads(self.myTXThreads).NameSpace;'#13#10'asm'#13#10'{'#13#10
  +'  var msgFun = this.myTXThreads.MessageReturned;'#13#10'  msgFun = msgFun.b'
  +'ind(this.myTXThreads);'#13#10#13#10'  var errFun = this.myTXThreads.ErrorRe'
  +'turned;'#13#10'  errFun = errFun.bind(this.myTXThreads);'#13#10#13#10'  var'
  +' myNodeName = this.myTXThreads.NodeName;'#13#10'  var doFunc = TheFunc;'#13
  +#10#13#10'  var setupThreadFunc ='#13#10'  ''function setupThread() { \n'''
  +#13#10'  +''  // onmessage here will handle messages received into the worke'
  +'r thread from the main thread... \n'''#13#10'  +''  onmessage = function(ev'
  +'ent) { \n'''#13#10'  +''          var d=event.data; \n'''#13#10'  +''      '
  +'    if (d.type="EventStart") { \n'''#13#10'  +''            loce=d.evs; \n'
  +''''#13#10'  +''            if (loce.EventType) {\n'''#13#10'  +''          '
  +'    // Execute user event function... \n'''#13#10'  +''              EventF'
  +'unc(loce,loce.NodeId,"");  \n'''#13#10'  +''              // Notify main th'
  +'read we are done... \n'''#13#10'  +''              postMessage({"id":loce.E'
  +'ventType  ,"msg":loce.ReturnString}); \n'''#13#10'  +''            } \n'''
  +#13#10'  +''        }\n'''#13#10'  +''    }; \n'''#13#10'  +''};\n'';'#13#10
  +#13#10'  //alert(''Execute Thread ID=''+this.ThreadID);'#13#10'   // create '
  +'a URL containing the inlne JavaScript Code instead of loading from a file'
  ,#13#10'   // this can be shared across multiple threads'#13#10'   function g'
  +'etInlineJS(EventFn)'#13#10'   {'#13#10'       var FuncString = EventFn.toSt'
  +'ring();'#13#10'       FuncString=FuncString.replace("function", "function E'
  +'ventFunc")'#13#10#13#10'       FuncString = ''var loce = null; \n'''#13#10
  +'                    + FuncString +''; '''#13#10'                    + setup'
  +'ThreadFunc + ''; '''#13#10'                    + ''setupThread(); '';'#13#10
  +'       alert(FuncString);'#13#10'       var CodeBlob = new Blob([FuncString'
  +'], { type: "text/javascript" });'#13#10'       var returnBlob =  URL.create'
  +'ObjectURL(CodeBlob);'#13#10'       return returnBlob ;'#13#10'   };'#13#10
  +#13#10'   var localThreadID = this.ThreadID;'#13#10'   if(typeof(Worker) !=='
  +' "undefined")'#13#10'   {'#13#10'      if ((this.CurrentWorker==null)||(typ'
  +'eof(this.CurrentWorker) == "undefined"))'#13#10'      {'#13#10'         if '
  +'((TheFunc!=null)&&(TheFunc!=undefined)) {'#13#10'         this.CurrentWorke'
  +'r =  new Worker(getInlineJS(TheFunc));'#13#10#13#10'         // handle mess'
  +'ages received FROM worker...'#13#10'         this.CurrentWorker.onmessage ='
  +' function(event) { msgFun(localThreadID, event.data)};  // event.data has i'
  +'d and msg'#13#10'         // send message TO worker...'#13#10'         this'
  +'.CurrentWorker.postMessage({"Type":"EventStart", "evs":e});'#13#10#13#10'  '
  +'       this.CurrentWorker.onerror = function(event) {alert("Error: "+  even'
  +'t.message + "<-- in thread -->"+localThreadID+"<-- at Line " + event.lineno'
  +');'#13#10'                                                        errFun(lo'
  +'calThreadID);'#13#10'                                                      '
  +' };'#13#10'         }'#13#10'         else {alert(''Function for thread ''+'
  +'this.ThreadID+'' is undefined'');}'#13#10'      }'#13#10'      else { alert'
  +'("Error in TMyThread.Execute - CurrentWorker not null"); };'#13#10'   }'#13
  +#10'   else { alert("Sorry, your browser does not support Web Workers..."); '
  +'};'#13#10'}'#13#10';'#13#10'end;'#13#10'end;'#13#10#13#10#13#10'function TX'
  +'Threads.CreateWorkerThread(ThreadNameString:string; TheFunc:TObject):TMyThr'
  +'ead;'#13#10'var NewThread:TMyThread;'#13#10'begin'#13#10'  NewThread :=  TM'
  +'yThread.Create;'#13#10'  NewThread.ThreadName:=ThreadNameString;'#13#10'  N'
  +'ewThread.ThreadID:=ThreadNameString;'#13#10#13#10'  NewThread.myTXThreads:='
  +'self;'#13#10#13#10'  ThreadCount := ThreadCount + 1;'#13#10'  setlength(Thr'
  +'eadList,ThreadCount);'#13#10'  ThreadList[ThreadCount-1 ]:= NewThread;'#13
  +#10' // showmessage(''CreateWorkerThread ID=''+ThreadNameString+'' is on Thr'
  +'eadList at index ''+inttostr(ThreadCount-1));'#13#10' // showmessage(''leng'
  +'th(ThreadList) is ''+inttostr(length(ThreadList)));'#13#10#13#10#13#10'  Ne'
  +'wThread.Execute(TheFunc);   // this creates a Worker instance'#13#10#13#10
  +'  NewThread.active := true;'#13#10#13#10'  result:=NewThread;'#13#10'end;'
  +#13#10'procedure TXThreads.CreateSetOfThreads(ThreadSetNum:integer; TheFunc:'
  +'TObject);'#13#10'var'#13#10'  i,max:integer;'#13#10'begin'#13#10'  max:=str'
  +'ToInt(myNode.getAttribute(''MaxCopiesThread''+intToStr(ThreadSetNum),true).'
  +'AttribValue);'#13#10'  for i:=0 to max-1 do'#13#10'  begin'#13#10'    Creat'
  +'eWorkerThread(self.NodeName+''Thread''+intToStr(ThreadSetNum)+''_''+intToSt'
  +'r(i),TheFunc);'#13#10'  end;'#13#10'end;'#13#10'procedure TXThreads.StartMy'
  +'Threads;'#13#10'var'#13#10'  fn:TObject;'#13#10'begin'#13#10'  fn:=FindEven'
  +'tFunction(self.NameSpace,self.NodeName,''Thread1'',self,false);'#13#10'  if'
  +' (fn<>nil) then CreateSetOfThreads(1,fn);'#13#10'  fn:=FindEventFunction(se'
  +'lf.NameSpace,self.NodeName,''Thread2'',self,false);'#13#10'  if (fn<>nil) t'
  +'hen CreateSetOfThreads(2,fn);'#13#10'  fn:=FindEventFunction(self.NameSpace'
  +',self.NodeName,''Thread3'',self,false);'#13#10'  if (fn<>nil) then CreateSe'
  +'tOfThreads(3,fn);'#13#10'  fn:=FindEventFunction(self.NameSpace,self.NodeNa'
  +'me,''Thread4'',self,false);'#13#10'  if (fn<>nil) then CreateSetOfThreads(4'
  +',fn);'#13#10'end;'#13#10'{$endif}'#13#10#13#10#13#10'function TXThreads.Get'
  +'Active:Boolean;'#13#10'begin'#13#10'  result:=MyStrToBool(MyNode.getAttribu'
  +'te(''Active'',true).AttribValue);'#13#10'end;'#13#10#13#10'function TXThrea'
  +'ds.GetMaxCopiesThread1:integer;'#13#10'begin'#13#10'  result:=StrToInt(MyNo'
  +'de.getAttribute(''MaxCopiesThread1'',true).AttribValue);'#13#10'end;'#13#10
  +#13#10'function TXThreads.GetMaxCopiesThread2:integer;'#13#10'begin'#13#10' '
  +' result:=StrToInt(MyNode.getAttribute(''MaxCopiesThread2'',true).AttribValu'
  +'e);'#13#10'end;'#13#10#13#10'function TXThreads.GetMaxCopiesThread3:integer'
  +';'#13#10'begin'#13#10'  result:=StrToInt(MyNode.getAttribute(''MaxCopiesThr'
  +'ead3'',true).AttribValue);'#13#10'end;'#13#10#13#10'function TXThreads.GetM'
  +'axCopiesThread4:integer;'#13#10'begin'#13#10'  result:=StrToInt(MyNode.getA'
  +'ttribute(''MaxCopiesThread4'',true).AttribValue);'#13#10'end;'#13#10#13#10
  ,'function TXThreads.GetThreadVarNums:String;'#13#10'begin'#13#10'  result:=M'
  +'yNode.getAttribute(''ThreadVarNums'',true).AttribValue;'#13#10'end;'#13#10
  +#13#10#13#10'procedure TXThreads.SetActive(AValue:Boolean);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''Active'',myBoolToStr(AValue),''Boolean'');'
  +#13#10'  if (StartingUp=false) and (AValue=true) then'#13#10'  begin'#13#10
  +'    showmessage(''calling event beginthreads'');'#13#10'    HandleEvent(''B'
  +'eginThreads'',self.myNode.NodeName,self.myNode.NameSpace,'''');  // do any '
  +'user-initialisation'#13#10'    showmessage(''calling startmythreads'');'#13
  +#10'    self.StartMyThreads;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedur'
  +'e TXThreads.SetMaxCopiesThread1(AValue:integer);'#13#10'begin'#13#10'  myNo'
  +'de.SetAttributeValue(''MaxCopiesThread1'',IntToStr(AValue),''Integer'');'#13
  +#10'end;'#13#10#13#10'procedure TXThreads.SetMaxCopiesThread2(AValue:integer'
  +');'#13#10'begin'#13#10'  myNode.SetAttributeValue(''MaxCopiesThread2'',IntT'
  +'oStr(AValue),''Integer'');'#13#10'end;'#13#10#13#10'procedure TXThreads.Set'
  +'MaxCopiesThread3(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttribute'
  +'Value(''MaxCopiesThread3'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10
  +#13#10'procedure TXThreads.SetMaxCopiesThread4(AValue:integer);'#13#10'begin'
  +#13#10'  myNode.SetAttributeValue(''MaxCopiesThread4'',IntToStr(AValue),''In'
  +'teger'');'#13#10'end;'#13#10#13#10'procedure TXThreads.SetThreadVarNums(AVa'
  +'lue:String);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''ThreadVarNums'
  +''',AValue,''String'');'#13#10'end;'#13#10#13#10'begin'#13#10'  AddDefaultAt'
  +'tribute(myDefaultAttribs,''Active'',''Boolean'',''True'',''Set Active to st'
  +'art all threads'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''M'
  +'axCopiesThread1'',''Integer'',''0'',''Number of repeats for the Thread1 eve'
  +'nt code'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxCopies'
  +'Thread2'',''Integer'',''0'',''Number of repeats for the Thread2 event code'
  +''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxCopiesThread3'
  +''',''Integer'',''0'',''Number of repeats for the Thread3 event code'',false'
  +');'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxCopiesThread4'',''Int'
  +'eger'',''0'',''Number of repeats for the Thread4 event code'',false);'#13#10
  +'  AddDefaultAttribute(myDefaultAttribs,''ThreadVarNums'',''String'','''','''
  +'List of variable names (float numeric)'',false);'#13#10'  AddDefaultsToTabl'
  +'e(MyNodeType,myDefaultAttribs);'#13#10#13#10'  {$ifndef JScript}'#13#10'  C'
  +'lasses.RegisterClass(TXThreads);'#13#10'  AddNodeFuncLookup(MyNodeType,@Cre'
  +'ateWidget);'#13#10'  {$else}'#13#10'  AddNodeFuncLookup(MyNodeType,@Createi'
  +'nterfaceObj,@CreateThreadsWidget);'#13#10'  SuppressDesignerProperty(MyNode'
  +'Type,''Alignment'');'#13#10'  SuppressDesignerProperty(MyNodeType,''IsVisib'
  +'le'');'#13#10'  SuppressDesignerProperty(MyNodeType,''LabelPos'');'#13#10' '
  +' SuppressDesignerProperty(MyNodeType,''LabelText'');'#13#10'  SuppressDesig'
  +'nerProperty(MyNodeType,''Hint'');'#13#10'  {$endif}'#13#10'end.'#13#10
]);
LazarusResources.Add('xgpucanvas','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XGPUCanvas;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13
  +#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, SysUtils, TypInfo,'
  +' StringUtils, NodeUtils, XIFrame, Math,'#13#10'    UtilsJSCompile, XForm, X'
  +'Code, XButton, XVBox, XTabControl, XMemo, XComboBox, EventsInterface,'#13#10
  +'    WebTranspilerUtils,'#13#10'  {$ifndef JScript}'#13#10'    LResources, F'
  +'orms, Controls, StdCtrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls'
  +','#13#10'    LazsUtils, LCLIntf,'#13#10'    LCLType, gettext,'#13#10'    {$'
  +'ifdef Chromium}'#13#10'    uCEFChromium, uCEFInterfaces, uCEFTypes, uCEFPro'
  +'cessMessage, uCEFMiscFunctions,'#13#10'    cefXUtils,'#13#10'    {$endif}'
  +#13#10'  {$else}'#13#10'    webfilecache, pas2jswebcompiler,'#13#10'    HTML'
  +'Utils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events, XGPUEditor;'#13#10
  +#13#10#13#10'type TGPUNumParam = record'#13#10'  ParamName:String;'#13#10'  '
  +'ParamValue:TNumArray;'#13#10'  end;'#13#10'type TGPU2DNumParam = record'#13
  +#10'  ParamName:String;'#13#10'  ParamValue:T2DNumArray;'#13#10'  end;'#13#10
  +'type TGPUNumParams = Array of TGPUNumParam;'#13#10'type TGPU2DNumParams = A'
  +'rray of TGPU2DNumParam;'#13#10'type TGPUIntConst = record'#13#10'  ConstNam'
  +'e:String;'#13#10'  ConstValue:integer;'#13#10'  end;'#13#10'type TGPUIntCon'
  +'sts = Array of TGPUIntConst;'#13#10#13#10'type'#13#10'  TXGPUCanvas = class'
  +'(TXIFrame)'#13#10'  private'#13#10'    { Private declarations }'#13#10'    '
  +'ParamNumArray:TGPUNumParams;'#13#10'    Param2DNumArray:TGPU2DNumParams;'#13
  +#10'    ConstIntArray:TGPUIntConsts;'#13#10'//    {$ifndef JScript}'#13#10'/'
  +'/    fHandleOnNewFrame:TEventHandler;'#13#10'//    {$endif}'#13#10#13#10'  '
  +'  function GetAnimationCode:string;'#13#10'    function GetActive:Boolean;'
  +#13#10'    function GetAnimated:Boolean;'#13#10'    function GetParamNumList'
  +':string;'#13#10'    function GetParam2DNumList:string;'#13#10'    function '
  +'GetConstIntList:string;'#13#10'    function GetMaxIterations:integer;'#13#10
  +'    function GetStartIteration:integer;'#13#10'    function GetNumFrames:in'
  +'teger;'#13#10'    function GetMaxFramesPerSec:integer;'#13#10'    function '
  +'GetNumKernels:integer;'#13#10'    function GetInitStageData:string;'#13#10
  +'    function GetKernelXDims:string;      //array of integer eg. [100,200,30'
  +'0]'#13#10'    function GetKernelYDims:string;'#13#10'    function GetKernel'
  +'ZDims:string;'#13#10#13#10'    procedure SetAnimationCode(AValue:string);'
  +#13#10'    procedure SetActive(AValue:Boolean);'#13#10'    procedure SetAnim'
  +'ated(AValue:Boolean);'#13#10'    procedure SetParamNumList(AValue:string);'
  +#13#10'    procedure SetConstIntList(AValue:string);'#13#10'    procedure Se'
  +'tParam2DNumList(AValue:string);'#13#10'    procedure SetMaxIterations(AValu'
  +'e:integer);'#13#10'    procedure SetStartIteration(AValue:integer);'#13#10
  +'    procedure SetNumFrames(AValue:integer);'#13#10'    procedure SetMaxFram'
  +'esPerSec(AValue:integer);'#13#10'    procedure SetNumKernels(AValue:integer'
  +');'#13#10'    procedure SetInitStageData(AValue:string);'#13#10'    procedu'
  +'re SetKernelXDims(AValue:string);'#13#10'    procedure SetKernelYDims(AValu'
  +'e:string);'#13#10'    procedure SetKernelZDims(AValue:string);'#13#10#13#10
  +'    procedure SetMyEventTypes;  override;'#13#10'    procedure SetPropertyD'
  +'efaults;'#13#10'    procedure StartMyGPU;'#13#10'    procedure StopMyGPU(is'
  +'destroying:Boolean);'#13#10'    function BuildPascalAnimationUnit(Compiler:'
  +'TObject):String;'#13#10'    function CompileGPUToJS(var GPUJSOutput:String)'
  +':Boolean;'#13#10'    function GPUJSCode(AnimCode:TStringList):String;'#13#10
  +'    function GPUJSAnimationFooter:String;'#13#10'    procedure setupGPUPage'
  +';'#13#10#13#10'    {$ifndef JScript}'#13#10'    procedure DoGPUCanvasConstr'
  +'uctor;'#13#10'    {$endif}'#13#10#13#10'  protected'#13#10'    { Protected '
  +'declarations }'#13#10'  public'#13#10'    { Public declarations }'#13#10'  '
  +'  GeneratedHTML:String;'#13#10'    GPUStageArray:T3DNumArray;            //'
  +' output from non-graphical nested kernels'#13#10'    GPUOutputArray:T3DNumA'
  +'rray;           // output from main graphical kernel'#13#10'    GPUStageStr'
  +'ing:String;'#13#10'    GPUOutputString:String;'#13#10'    Dimensions:TDimsA'
  +'rray;'#13#10'    {$ifndef JScript}'#13#10'    constructor Create(TheOwner: '
  +'TComponent); override;'#13#10'    constructor Create(TheOwner: TComponent;I'
  +'sDynamic:Boolean); override;'#13#10'    destructor Destroy; override;'#13#10
  ,'    procedure ReLoadURL; override;'#13#10'    {$ifdef Chromium}'#13#10'    '
  +'procedure HandleConsoleMessage(Sender: TObject; const browser: ICefBrowser;'
  +' level: TCefLogSeverity;'#13#10'                                   const me'
  +'ssage, source: ustring; line: Integer; out Result: Boolean) ;'#13#10'    pr'
  +'ocedure GPUProcessMessageReceived('#13#10'      Sender: TObject; const brow'
  +'ser: ICefBrowser;'#13#10'      const frame: ICefFrame; sourceProcess: TCefP'
  +'rocessId;'#13#10'      const message: ICefProcessMessage; out Result: Boole'
  +'an);'#13#10'    {$endif}'#13#10'    {$else}'#13#10'    constructor Create(M'
  +'yForm:TForm;NodeName,NameSpace:String);  override;'#13#10'    {$endif}'#13
  +#10'    function FullParamList:String;'#13#10'    function FullXMLString:Str'
  +'ing;'#13#10'    function GetParamNumValue(pName:String):TNumArray;'#13#10' '
  +'   function GetConstIntValue(pName:String):integer;'#13#10'    procedure Se'
  +'tParamNumValue(pName:String;pValue:TNumArray;ForwardToWidget:Boolean);'#13
  +#10'    procedure SetParam2DNumValue(pName:String;pValue:T2DNumArray;Forward'
  +'ToWidget:Boolean);'#13#10'    procedure SetConstIntValue(pName:String;pValu'
  +'e:integer);'#13#10'    function CompileAnimCode:TStringList;'#13#10'    fun'
  +'ction FetchAllAnimCode:TAnimCodeArray;'#13#10'    function BuildKernelList:'
  +'String;'#13#10'    function KernelDimsString(KNum:integer):String;'#13#10#13
  +#10'published'#13#10'    { Published declarations }'#13#10#13#10'    // Prop'
  +'erties defined for this class...'#13#10'    property Active: Boolean read G'
  +'etActive write SetActive;'#13#10'    property Animated: Boolean read GetAni'
  +'mated write SetAnimated;'#13#10'    property AnimationCode: String read Get'
  +'AnimationCode write SetAnimationCode;'#13#10'    property ParamNumList: Str'
  +'ing read GetParamNumList write SetParamNumList;'#13#10'    property Param2D'
  +'NumList: String read GetParam2DNumList write SetParam2DNumList;'#13#10'    '
  +'property ConstIntList: String read GetConstIntList write SetConstIntList;'
  +#13#10'    property MaxIterations: integer read GetMaxIterations write SetMa'
  +'xIterations;'#13#10'    property StartIteration: integer read GetStartItera'
  +'tion write SetStartIteration;'#13#10'    property NumFrames: integer read G'
  +'etNumFrames write SetNumFrames;'#13#10'    property MaxFramesPerSec: intege'
  +'r read GetMaxFramesPerSec write SetMaxFramesPerSec;'#13#10'    property Num'
  +'Kernels:integer read GetNumKernels write SetNumKernels;'#13#10'    property'
  +' InitStageData: String read GetInitStageData write SetInitStageData;'#13#10
  +'    property KernelXDims: String read GetKernelXDims write SetKernelXDims;'
  +#13#10'    property KernelYDims: String read GetKernelYDims write SetKernelY'
  +'Dims;'#13#10'    property KernelZDims: String read GetKernelZDims write Set'
  +'KernelZDims;'#13#10#13#10'  end;'#13#10#13#10#13#10'procedure SetOutputArra'
  +'yValue(NodeName:String;const AValue:String);'#13#10'procedure SetStageArray'
  +'Value(NodeName:String;const AValue:String);'#13#10'procedure SetStageArrayV'
  +'alue2(NodeName:String;AValue:T3DNumArray);'#13#10'function GetOutputArrayVa'
  +'lue(NodeName:String):T3DNumArray;'#13#10'function GetOutputArrayString(Node'
  +'Name:String):String;'#13#10'function GetStageArrayValue(NodeName:String):T3'
  +'DNumArray;'#13#10'function GetStageArrayString(NodeName:String):String;'#13
  +#10#13#10'var'#13#10'  gpujs:String;                 // contents of resource'
  +' file gpu-browser.js'#13#10#13#10'implementation'#13#10#13#10'const MyNodeT'
  +'ype=''TXGPUCanvas'';'#13#10'var'#13#10'  myDefaultAttribs:TDefaultAttribute'
  +'sArray;'#13#10#13#10'procedure TXGPUCanvas.SetMyEventTypes;'#13#10'begin'#13
  +#10'  MyEventTypes.Add(''Click'');'#13#10'  MyEventTypes.Add(''OnStart'');'
  +#13#10'  MyEventTypes.Add(''OnFirstStageDone'');'#13#10' // MyEventTypes.Add'
  +'(''OnNewFrame'');'#13#10'end;'#13#10#13#10#13#10'function TXGPUCanvas.Build'
  +'KernelList:String;'#13#10'var'#13#10'  OList:String;'#13#10'  i:integer;'#13
  +#10'begin'#13#10'  OList:=''["Graphical (Final)"'';'#13#10'  for i:=0 to num'
  +'Kernels-1 do'#13#10'    OList:=OList+'',"Kernel ''+inttostr(i+1)+''"'';'#13
  +#10'  OList:=OList+'']'';'#13#10'  result:=OList;'#13#10'end;'#13#10#13#10'f'
  +'unction TXGPUCanvas.KernelDimsString(KNum:integer):String;'#13#10'var'#13#10
  +'  xdims,ydims,zdims:TStringList;'#13#10'  str:string;'#13#10'begin'#13#10' '
  +' xdims:=JSONStringToStringList(self.KernelxDims);'#13#10'  ydims:=JSONStrin'
  +'gToStringList(self.KernelyDims);'#13#10'  zdims:=JSONStringToStringList(sel'
  +'f.KernelzDims);'#13#10'  if (xdims.count<KNum+1)'#13#10'  or (ydims.count<K'
  +'Num+1)'#13#10'  or (zdims.count<KNum+1) then'#13#10'    str:=''**err**'''#13
  +#10'  else'#13#10'  begin'#13#10'    str:=''[''+xdims[KNum]+'',''+ydims[KNum'
  +']+'',''+zdims[KNum]+'']'';'#13#10'  end;'#13#10'  xdims.Free;'#13#10'  ydim'
  +'s.Free;'#13#10'  zdims.Free;'#13#10'  result:=str;'#13#10'end;'#13#10#13#10
  +'procedure TXGPUCanvas.SetPropertyDefaults;'#13#10'begin'#13#10'end;'#13#10
  ,#13#10'{$ifndef JScript}'#13#10#13#10'function CreateGPUCanvasWidget(ParentN'
  +'ode:TDataNode;ScreenObjectName,NameSpace:string;position:integer;Alignment:'
  +'String):TDataNode;'#13#10'var'#13#10'  NewNode:TDataNode;'#13#10'begin'#13
  +#10'  NewNode:=CreateDynamicLazWidget(''TXGPUCanvas'',ParentNode.MyForm,Pare'
  +'ntNode,ScreenObjectName,NameSpace,Alignment,position);'#13#10'  result:=New'
  +'Node;'#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.DoGPUCanvasConstructor'
  +';'#13#10'begin'#13#10'  {$ifdef Chromium}'#13#10'  myChromium.OnConsoleMess'
  +'age:=@self.HandleConsoleMessage;'#13#10'  myChromium.OnProcessMessageReceiv'
  +'ed:=@self.GPUProcessMessageReceived;'#13#10'  {$endif}'#13#10#13#10'  self.'
  +'IsContainer:=false;'#13#10'  self.myNode.NodeType:=''TXGPUCanvas'';'#13#10
  +'  SetLength(ParamNumArray,0);'#13#10'  SetLength(self.GPUOutputArray,0);'#13
  +#10'  AddDefaultAttribs(self,self.myNode,mydefaultAttribs);'#13#10#13#10'  S'
  +'etPropertyDefaults;'#13#10'end;'#13#10#13#10'constructor TXGPUCanvas.Create'
  +'(TheOwner:TComponent);'#13#10'begin'#13#10'  inherited Create(TheOwner,fals'
  +'e);'#13#10'  DoGPUCanvasConstructor;'#13#10'end;'#13#10#13#10'constructor T'
  +'XGPUCanvas.Create(TheOwner:TComponent;IsDynamic:Boolean);'#13#10'begin'#13
  +#10'  inherited Create(TheOwner,IsDynamic);'#13#10'  DoGPUCanvasConstructor;'
  +#13#10'end;'#13#10#13#10'destructor TXGPUCanvas.Destroy;'#13#10'begin'#13#10
  +'  if (not (csDesigning in componentState)) then'#13#10'  begin'#13#10'    i'
  +'f Active then'#13#10'    begin'#13#10'      self.StopMyGPU(true);'#13#10'  '
  +'  end;'#13#10'    myControl.Free;'#13#10'  end;'#13#10'  inherited Destroy;'
  +#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.ReLoadURL;'#13#10'begin'#13#10
  +'  if (self.SuspendRefresh)'#13#10'  {$ifndef JScript}'#13#10'  or (GlobalSu'
  +'ppressFrameDisplay)'#13#10'  {$endif}'#13#10'  then'#13#10'    EXIT;'#13#10
  +#13#10'  if (StartingUp=false)'#13#10'  and (self.Active) then'#13#10'    se'
  +'lf.StartMyGPU;'#13#10'end;'#13#10#13#10'{$ifdef Chromium}'#13#10#13#10'proc'
  +'edure TXGPUCanvas.HandleConsoleMessage(Sender: TObject; const browser: ICef'
  +'Browser; level: TCefLogSeverity;'#13#10'                                 co'
  +'nst message, source: ustring; line: Integer; out Result: Boolean) ;'#13#10
  +'var'#13#10'  NewText:String;'#13#10'  MType:String;'#13#10'  TempMsg : ICef'
  +'ProcessMessage;'#13#10'begin'#13#10'  // A frame display has ended.'#13#10
  +'  if (not (csDesigning in componentState))'#13#10'  and (not StartingUp)'#13
  +#10'  and (self.myNode<>nil)'#13#10'  and (self.Active=true)'#13#10'  and (b'
  +'rowser<>nil)'#13#10'  and (myChromium<>nil)'#13#10'  and (FoundString(messa'
  +'ge,self.myNode.NodeName)=1)'#13#10'  then'#13#10'  begin'#13#10'    NewText'
  +':=message;'#13#10'    Delete(NewText,1,length(self.myNode.NodeName));'#13#10
  +'    MType:=NewText[1];     // might be ''O'' or ''S'''#13#10'    Delete(New'
  +'Text,1,1);'#13#10'    // converting the JSON string back to numeric array t'
  +'akes ages so just storing the'#13#10'    // string for now.  Do the convers'
  +'ion when the array is wanted.'#13#10'    // Send a cef message to fetch the'
  +' new value of the frame output array'#13#10'    // (Use the ArgumentList pr'
  +'operty if you need to pass some parameters.)'#13#10'    if MType = ''O'' th'
  +'en'#13#10'    begin'#13#10'      TempMsg := TCefProcessMessageRef.New(''get'
  +'GPUData'');'#13#10'      TempMsg.ArgumentList.SetString(0,self.myNode.NodeN'
  +'ame);'#13#10'      myChromium.SendProcessMessage(PID_RENDERER, TempMsg);'#13
  +#10'    end;'#13#10'  end;'#13#10'end;'#13#10'procedure TXGPUCanvas.GPUProce'
  +'ssMessageReceived('#13#10'  Sender: TObject; const browser: ICefBrowser;'#13
  +#10'  const frame: ICefFrame; sourceProcess: TCefProcessId;'#13#10'  const m'
  +'essage: ICefProcessMessage; out Result: Boolean);'#13#10'var'#13#10'  oText'
  +',sText:String;'#13#10'  oarr,sarr:T3DNumArray;'#13#10'begin'#13#10'  case m'
  +'essage.Name of'#13#10'    ''sendGPUarrays'':'#13#10'    begin'#13#10'      '
  +'CefDebugLog(''TXGPUCanvas.GPUProcessMessageReceived. id=''+self.Name);'#13
  +#10'      oText := message.ArgumentList.GetString(0);'#13#10'      sText := '
  +'message.ArgumentList.GetString(1);'#13#10'      // convert the array string'
  +' to 3d numeric array'#13#10'     self.GPUOutputString:=oText;'#13#10'     s'
  +'elf.GPUStageString:=sText;'#13#10'     //self.GPUStageArray:=JSONStringTo3D'
  +'NumArray(sText);    //!!!! takes ages ..... tba'#13#10'     setlength(self.'
  +'GPUStageArray,0);'#13#10'     Events.CallHandleEventLater(''OnFirstStageDon'
  +'e'','''', self);     // get back to main thread'#13#10#13#10'    end;'#13#10
  +'  else'#13#10'    inherited;'#13#10'  end;'#13#10'end;'#13#10'{$endif}'#13
  +#10#13#10#13#10#13#10'{$else} //JScript'#13#10#13#10'constructor TXGPUCanvas'
  +'.Create(MyForm:TForm;NodeName,NameSpace:String);'#13#10'begin'#13#10'  inhe'
  +'rited Create(MyForm,NodeName,NameSpace);'#13#10'  self.NodeType:=''TXGPUCan'
  +'vas'';'#13#10'  self.IsContainer:=false;'#13#10'  SetLength(ParamNumArray,0'
  ,');'#13#10#13#10'  SetNodePropDefaults(self,myDefaultAttribs);'#13#10'  SetP'
  +'ropertyDefaults;'#13#10'end;'#13#10#13#10'function CreateGPUCanvasWidget(My'
  +'Node, ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position:integ'
  +'er;Alignment:String):TDataNode;'#13#10'var'#13#10'  NewWidget:TXGPUCanvas;'
  +#13#10'  h,w:integer;'#13#10'  scr,GPUMessageHandler:String;'#13#10'begin'#13
  +#10'  DoCreateFrameWidget(MyNode, ParentNode,ScreenObjectName,position);'#13
  +#10'  NewWidget:=TXGPUCanvas(myNode);'#13#10#13#10'  asm'#13#10'    var nm ='
  +' MyNode.NodeName;'#13#10'    var ns = MyNode.NameSpace;'#13#10'    var nd ='
  +' MyNode;'#13#10'    function GPUOutputHandler(ev) {'#13#10'    if ((ev.data'
  +'.objid!=undefined)&&(ev.data.objid==ns+nm)) {'#13#10'//      console.log("h'
  +'andle GPU outbound message "+ev.data.objid+"  "+ev.data.mtype);'#13#10'    '
  +'  if (ev.data.mtype=="GPUReady") {'#13#10'        let lGPUStageArray=pas.St'
  +'ringUtils.DelChars(nd.GetAttribute(''InitStageData'',false).AttribValue,''"'
  +''');'#13#10'        let StageArrayValue = JSON.parse(lGPUStageArray);'#13#10
  +'//        console.log(''StageArrayValue =''+lGPUStageArray);'#13#10'       '
  +' lGPUStageArray='''';'#13#10'        ob = document.getElementById(ns+nm+"Co'
  +'ntents");'#13#10'        ob.contentWindow.postMessage({"objid":ns+nm, "mtyp'
  +'e":"StartTheGPU", "pName":"", "pValue":StageArrayValue},"*")'#13#10'      }'
  +#13#10'      else if (ev.data.mtype=="Debug") {'#13#10'        console.log("'
  +'Debug:"+ev.data.dets);'#13#10'      }'#13#10'      else if (ev.data.mtype=='
  +'"FrameOutput") {'#13#10'        //console.log("handle FrameOutput message "'
  +'+ev.data.outputArray);'#13#10'        //console.log("handle FrameOutput mes'
  +'sage ");'#13#10'        try {'#13#10'          pas.XGPUCanvas.SetOutputArra'
  +'yValue(ev.data.objid,ev.data.outputArray);'#13#10'            }catch(err){a'
  +'lert(err.message);'#13#10'        }'#13#10'      }'#13#10'      else if (ev'
  +'.data.mtype=="StageOutput") {'#13#10'         //console.log("handle StageOu'
  +'tput message "+ev.data.stageArray);'#13#10'         //console.log("handle S'
  +'tageOutput message from "+ns+nm);'#13#10'         try {'#13#10'           p'
  +'as.XGPUCanvas.SetStageArrayValue2(ev.data.objid,ev.data.stageArray);'#13#10
  +'           pas.Events.handleEvent(null,''OnFirstStageDone'',nm,ns, '''');'
  +#13#10'         }catch(err){alert(err.message);'#13#10'         }'#13#10'   '
  +'    }'#13#10'    }'#13#10'    }'#13#10'    var ob=document.getElementById(N'
  +'ameSpace+ScreenObjectName);'#13#10'    if (ob!=null) {'#13#10'      window.'
  +'addEventListener("message", GPUOutputHandler);'#13#10'    }'#13#10'  end;'
  +#13#10#13#10#13#10'  RefreshComponentProps(myNode);'#13#10#13#10'  // refres'
  +'h the actual h/w attributes'#13#10'  h:=NewWidget.ActualHeight;'#13#10'  w:'
  +'=NewWidget.ActualWidth;'#13#10#13#10'  setlength(NewWidget.GPUOutputArray,0'
  +');'#13#10#13#10'  result:=myNode;'#13#10'end;'#13#10#13#10#13#10'function C'
  +'reateinterfaceObjGPU(MyForm:TForm;NodeName,NameSpace:String):TObject;'#13#10
  +'begin'#13#10'  result:=TObject(TXGPUCanvas.Create(MyForm,NodeName,NameSpace'
  +'));'#13#10'end;'#13#10#13#10#13#10'{$endif}'#13#10'function TXGPUCanvas.Get'
  +'AnimationCode:string;'#13#10'begin'#13#10'  result:=myNode.getAttribute(''A'
  +'nimationCode'',true).AttribValue;'#13#10'end;'#13#10'function TXGPUCanvas.G'
  +'etActive:Boolean;'#13#10'begin'#13#10'  result:=myStrToBool(myNode.getAttri'
  +'bute(''Active'',true).AttribValue);'#13#10'end;'#13#10'function TXGPUCanvas'
  +'.GetAnimated:Boolean;'#13#10'begin'#13#10'  result:=myStrToBool(myNode.getA'
  +'ttribute(''Animated'',true).AttribValue);'#13#10'end;'#13#10'//function TXG'
  +'PUCanvas.GetFetchFrameOutput:Boolean;'#13#10'//begin'#13#10'//  result:=myS'
  +'trToBool(myNode.getAttribute(''FetchFrameOutput'',true).AttribValue);'#13#10
  +'//end;'#13#10'function TXGPUCanvas.GetParamNumList:string;'#13#10'begin'#13
  +#10'  result:=myNode.getAttribute(''ParamNumList'',true).AttribValue;'#13#10
  +'end;'#13#10'function TXGPUCanvas.GetParam2DNumList:string;'#13#10'begin'#13
  +#10'  result:=myNode.getAttribute(''Param2DNumList'',true).AttribValue;'#13
  +#10'end;'#13#10'function TXGPUCanvas.GetConstIntList:string;'#13#10'begin'#13
  +#10'  result:=myNode.getAttribute(''ConstIntList'',true).AttribValue;'#13#10
  +'end;'#13#10'function TXGPUCanvas.GetMaxIterations:integer;'#13#10'begin'#13
  +#10'  result:=StrToInt(myNode.getAttribute(''MaxIterations'',true).AttribVal'
  +'ue);'#13#10'end;'#13#10'function TXGPUCanvas.GetStartIteration:integer;'#13
  +#10'begin'#13#10'  result:=StrToInt(myNode.getAttribute(''StartIteration'',t'
  +'rue).AttribValue);'#13#10'end;'#13#10'function TXGPUCanvas.GetNumFrames:int'
  +'eger;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAttribute(''NumFrame'
  +'s'',true).AttribValue);'#13#10'end;'#13#10'function TXGPUCanvas.GetMaxFrame'
  +'sPerSec:integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAttribute'
  +'(''MaxFramesPerSec'',true).AttribValue);'#13#10'end;'#13#10'function TXGPUC'
  ,'anvas.GetNumKernels:integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode.'
  +'getAttribute(''NumKernels'',true).AttribValue);'#13#10'end;'#13#10'function'
  +' TXGPUCanvas.GetInitStageData:string;'#13#10'begin'#13#10'  result:=myNode.'
  +'getAttribute(''InitStageData'',true).AttribValue;'#13#10'end;'#13#10'functi'
  +'on TXGPUCanvas.GetKernelXDims:string;'#13#10'begin'#13#10'  result:=myNode.'
  +'getAttribute(''KernelXDims'',true).AttribValue;'#13#10'end;'#13#10'function'
  +' TXGPUCanvas.GetKernelYDims:string;'#13#10'begin'#13#10'  result:=myNode.ge'
  +'tAttribute(''KernelYDims'',true).AttribValue;'#13#10'end;'#13#10'function T'
  +'XGPUCanvas.GetKernelZDims:string;'#13#10'begin'#13#10'  result:=myNode.getA'
  +'ttribute(''KernelZDims'',true).AttribValue;'#13#10'end;'#13#10#13#10'functi'
  +'on TXGPUCanvas.FullParamList:String;'#13#10'var'#13#10'  plist:String;'#13
  +#10'begin'#13#10'  plist:='''';'#13#10'  if self.ParamNumList<>'''' then pli'
  +'st:='',''+self.ParamNumList;'#13#10'  if self.Param2DNumList<>'''' then pli'
  +'st:=plist+'',''+self.Param2DNumList;'#13#10'  result:=plist;'#13#10'end;'#13
  +#10#13#10'function TXGPUCanvas.GPUJSCode(AnimCode:TStringList):String;'#13#10
  +'//function TXGPUCanvas.GPUJSCode(AnimCode:TStringList;dims:TDimsArray):Stri'
  +'ng;'#13#10'var'#13#10'  str,vstr,cma, plist, KName,tempstr:String;'#13#10' '
  +' i,j,k,d:integer;'#13#10'  vn:TNumArray;'#13#10'  va:T2DNumArray;'#13#10'  '
  +'vi:TIntArray;'#13#10'  h,w,n:integer;'#13#10'  xdims,ydims,zdims:TStringLis'
  +'t;'#13#10#13#10'begin'#13#10'  if AnimCode.Count<1 then'#13#10'  begin'#13
  +#10'    showmessage(''Error: Unable to find any animation code block(s)'');'
  +#13#10'    result:='''';'#13#10'    EXIT;'#13#10'  end;'#13#10'  if AnimCode'
  +'.Count<numKernels+1 then'#13#10'  begin'#13#10'    showmessage(''Error: Una'
  +'ble to find ''+inttostr(numKernels+1)+'' animation code blocks'');'#13#10' '
  +'   result:='''';'#13#10'    EXIT;'#13#10'  end;'#13#10#13#10'  str:='#13#10
  +'//  ''document.domain = "/abc"; '' + LineEnding'#13#10'  ''document.title ='
  +' "''+myNode.NodeName+'' ''+myNode.NodeType+''"; '' + LineEnding'#13#10'  +'
  +'''/*/ ------------------------------------ Initialise the GPU -------------'
  +'--------------------/*/ '' + LineEnding'#13#10'  +''const ''+self.MyNode.No'
  +'deName+''Matrix = new GPU({mode: ''''gpu''''});   ''+LineEnding'#13#10'  +'
  +'''const ''+self.MyNode.NodeName+'' = new GPU({mode: ''''gpu''''});   ''+Lin'
  +'eEnding'#13#10'  +''let running=true; ''+LineEnding;'#13#10'  str:= str + '
  +'''let outputArrayString = ''''[]'''';''+LineEnding;'#13#10'//  str:= str + '
  +'''let stageArrayString = ''''[]'''';''+LineEnding;'#13#10#13#10'  str:= str'
  +' + ''/*/ -------------------------------- Initialise Parameters List ------'
  +'-------------------/*/ '' + LineEnding;'#13#10'  // Numeric parameters are '
  +'1-D arrays of values'#13#10'  for i:=0 to length(self.ParamNumArray)-1 do'
  +#13#10'  begin'#13#10'    vn:=ParamNumArray[i].ParamValue;'#13#10'    vstr:='
  +'''['';'#13#10'    for j:=0 to length(vn)-1 do'#13#10'    begin'#13#10'     '
  +' if j>0 then vstr:=vstr+'','';'#13#10'      vstr:=vstr+floattostr(vn[j]);'
  +#13#10'    end;'#13#10'    vstr:=vstr+'']'';'#13#10'    str:=str+''let ''+Pa'
  +'ramNumArray[i].ParamName+'' = ''+vstr+'';'' +LineEnding;'#13#10'  end;'#13
  +#10'  // Add the 2D arrays of values'#13#10'  for i:=0 to length(self.Param2'
  +'DNumArray)-1 do'#13#10'  begin'#13#10'    va:=Param2DNumArray[i].ParamValue'
  +';'#13#10'    vstr:=''['';'#13#10'    for j:=0 to length(va)-1 do'#13#10'   '
  +' begin'#13#10'      if j>0 then vstr:=vstr+'','';'#13#10'      vstr:=vstr+'
  +'''['';'#13#10'      for k:=0 to length(va[j])-1 do'#13#10'      begin'#13#10
  +'        if k>0 then vstr:=vstr+'','';'#13#10'        vstr:=vstr+floattostr('
  +'va[j,k]);'#13#10'      end;'#13#10'      vstr:=vstr+'']'';'#13#10'    end;'
  +#13#10'    vstr:=vstr+'']'';'#13#10'    str:=str+''let ''+Param2DNumArray[i]'
  +'.ParamName+'' = ''+vstr+'';'' +LineEnding;'#13#10'  end;'#13#10'  str:=str+'
  +'LineEnding;'#13#10#13#10'  //!! cef'#13#10'  // cef.  write to console log '
  +'to trigger a cef event...'#13#10'  str:=str'#13#10'  +''function PostMessag'
  +'eOutputArray(objid, cval) {''  + LineEnding'#13#10'  +''  var oa = document'
  +'.getElementById("oarr");'' + LineEnding'#13#10'  +''  if (oa==null) {oa=doc'
  +'ument.createElement("DIV"); oa.id="oarr"; '' + LineEnding'#13#10'  +''    o'
  +'a.style.display="none";'' + LineEnding'#13#10'  +''    document.body.append'
  +'Child(oa);}'' + LineEnding'#13#10'  +''  if (running) {oa.innerHTML=outputA'
  +'rrayString;'' + LineEnding;'#13#10'  {$ifndef JScript}'#13#10'  {$ifdef Chr'
  +'omium}'#13#10'  str:=str'#13#10'  +''    if (cval<=''+IntToStr(self.StartIt'
  +'eration)+'') {  '' + LineEnding'#13#10'  +''      // console.log triggers a'
  +' cef event - see HandleConsoleMessage... '' + LineEnding'#13#10'  +''      '
  +'console.log("''+myNode.NodeName+''O ");'' + LineEnding'#13#10'  +''    }'' '
  +'+ LineEnding;'#13#10'  {$endif}'#13#10'  {$else}'#13#10'  str:=str'#13#10' '
  ,' +''    if (cval<=''+IntToStr(self.StartIteration)+'') {  '' + LineEnding'
  +#13#10'  +''       window.parent.postMessage({"objid":objid,"mtype":"FrameOu'
  +'tput","outputArray":oa.innerHTML},"*"); '' + LineEnding'#13#10'  +''    }'''
  +' + LineEnding;'#13#10'  {$endif}'#13#10'  str:=str+''} }''+LineEnding+LineE'
  +'nding;'#13#10#13#10'  str:=str'#13#10'  +''function PostMessageStageArray(o'
  +'bjid, cval) {''  + LineEnding'#13#10'  +''  var sa = document.getElementByI'
  +'d("sarr");'' + LineEnding'#13#10'  +''  if (sa==null) {sa=document.createEl'
  +'ement("DIV"); sa.id="sarr"; '' + LineEnding'#13#10'  +''    sa.style.displa'
  +'y="none";'' + LineEnding'#13#10'  +''    document.body.appendChild(sa);}'' '
  +'+ LineEnding'#13#10'  +''  if (running) {  '' + LineEnding'#13#10'  +''    '
  +'sa.innerHTML=MyStringify(stageArray);'' + LineEnding;'#13#10'  {$ifndef JSc'
  +'ript}'#13#10'  {$ifdef Chromium}'#13#10'  str:=str'#13#10'  +''    if (cval'
  +'<=''+IntToStr(self.StartIteration)+'') {  '' + LineEnding'#13#10'  +''     '
  +' // console.log triggers a cef event - see HandleConsoleMessage... '' + Lin'
  +'eEnding'#13#10'  +''      console.log("''+myNode.NodeName+''S ");'' + LineE'
  +'nding'#13#10'  +''    }'' + LineEnding;'#13#10'  {$endif}'#13#10'  {$else}'
  +#13#10'  if numKernels>0 then'#13#10'  begin'#13#10'    str:=str+''    if (c'
  +'val<=''+IntToStr(self.StartIteration)+'') {  '' + LineEnding;'#13#10' //   '
  +'str:=str+''      console.log(objid+ " posting StageOutput message"); '' + L'
  +'ineEnding;'#13#10' //   str:=str+''      window.parent.postMessage({"objid"'
  +':objid,"mtype":"StageOutput","stageArray":sa.innerHTML},"*"); '' + LineEndi'
  +'ng;'#13#10'    str:=str+''      window.parent.postMessage({"objid":objid,"m'
  +'type":"StageOutput","stageArray":stageArray},"*"); '' + LineEnding;'#13#10
  +'    str:=str+''    }'' + LineEnding;'#13#10'  end;'#13#10'  {$endif}'#13#10
  +'  str:=str+''} }''+LineEnding+LineEnding;'#13#10#13#10#13#10'//     called '
  +'from the FrameDone function.'#13#10'//  if self.FetchFrameOutput=true then'
  +#13#10'    str:=str+''function GetPixelArray(kernel) { '' + LineEnding'#13#10
  +'    //+''return(kernel.getPixels()); '' + LineEnding          // needs gpuj'
  +'s v2'#13#10#13#10'//    +''  const theImage = kernel.getCanvas();  '' + Lin'
  +'eEnding'#13#10'    +''  const theImage = kernel.canvas;  '' + LineEnding'#13
  +#10'    +''  if (theImage==null) {console.log("''+self.MyNode.NodeName+''Bro'
  +'wserCanvas is null"); } '' + LineEnding'#13#10'    +''  else { ''  + LineEn'
  +'ding'#13#10'    //   +''  console.log(''''image height = ''''+theImage.heig'
  +'ht); '' + LineEnding'#13#10'    +''    tmpcanvas = document.createElement('
  +'''''canvas'''');  '' + LineEnding'#13#10'    +''    tmpcanvas.width=theImag'
  +'e.width;  '' + LineEnding'#13#10'    +''    tmpcanvas.height=theImage.heigh'
  +'t;  '' + LineEnding'#13#10'    +''    var ctx = tmpcanvas.getContext("2d");'
  +'  '' + LineEnding'#13#10'    +''    ctx.drawImage(theImage, 0, 0); '' + Lin'
  +'eEnding'#13#10'    +''    if (ctx==null) {console.log("Context is null"); }'
  +' '' + LineEnding'#13#10'    +''    else { ''  + LineEnding'#13#10'    +''  '
  +'    var  theImageData = ctx.getImageData(0,0,theImage.width,theImage.height'
  +');'' + LineEnding'#13#10'    //   +''    console.log("theImageData="+theIma'
  +'geData.data);'' + LineEnding'#13#10'    //   +''    console.log("height="+t'
  +'heImage.height+" width="+theImage.width+" length="+theImageData.data.length'
  +');'' + LineEnding'#13#10'    +''      var arrayString = "["; '' + LineEndin'
  +'g'#13#10'    +''      for (var h=0; h<theImage.height; h++) '' + LineEnding'
  +#13#10'    +''      {   '' + LineEnding'#13#10'    +''        if (h>0) { arr'
  +'ayString = arrayString + ","; }'' + LineEnding'#13#10'    +''        arrayS'
  +'tring = arrayString + "["; '' + LineEnding'#13#10'    +''        for (var w'
  +'=0; w<theImage.width; w++) '' + LineEnding'#13#10'    +''        {   '' + L'
  +'ineEnding'#13#10'    +''        // note the pixel colours cycle around in g'
  +'roups of four '' + LineEnding'#13#10'    +''          var i=(h*theImage.wid'
  +'th*4)+(w*4); '' + LineEnding'#13#10'    +''          var red = theImageData'
  +'.data[i];  '' + LineEnding'#13#10'    +''          var green = theImageData'
  +'.data[i+1]; '' + LineEnding'#13#10'    +''          var blue = theImageData'
  +'.data[i+2];  '' + LineEnding'#13#10'    +''          var alpha = theImageDa'
  +'ta.data[i+3]; '' + LineEnding'#13#10'    +''          if (w>0) { arrayStrin'
  +'g = arrayString + ","; }'' + LineEnding'#13#10'    +''          arrayString'
  +' = arrayString + "[" + red + "," + green + "," + blue + "," + alpha + "]";'
  +''' + LineEnding'#13#10'    +''        }   '' + LineEnding'#13#10'    +''   '
  +'     arrayString = arrayString + "]"; '' + LineEnding'#13#10'    +''      }'
  +'   '' + LineEnding'#13#10'    +''      tmpcanvas.remove(); '' + LineEnding'
  +#13#10'    +''      arrayString = arrayString + "]"; '' + LineEnding'#13#10
  +'    +''      return(arrayString); '' + LineEnding'#13#10'    +''    }'' + L'
  ,'ineEnding'#13#10'    +''  }'' + LineEnding'#13#10'    +''}''+ LineEnding;'
  +#13#10#13#10'    str:=str+''function MyStringify(myarr) { '' + LineEnding'#13
  +#10'    +''    var arrayString = "["; '' + LineEnding'#13#10'    +''    for '
  +'(var z=0; z<myarr.length; z++) '' + LineEnding'#13#10'    +''    {  '' + Li'
  +'neEnding'#13#10'    +''      if (z>0) { arrayString = arrayString + ","; }'
  +''' + LineEnding'#13#10'    +''      arrayString = arrayString + "["; '' + L'
  +'ineEnding'#13#10'    +''      for (var y=0; y<myarr[z].length; y++) '' + Li'
  +'neEnding'#13#10'    +''      {   '' + LineEnding'#13#10'    +''        if ('
  +'y>0) { arrayString = arrayString + ","; }'' + LineEnding'#13#10'    +''    '
  +'    arrayString = arrayString + "["; '' + LineEnding'#13#10'    +''        '
  +'for (var x=0; x<myarr[z][y].length; x++) '' + LineEnding'#13#10'    +''    '
  +'    {   '' + LineEnding'#13#10'    +''          if (x>0) { arrayString = ar'
  +'rayString + ","; }'' + LineEnding'#13#10'    +''          arrayString = arr'
  +'ayString + myarr[z][y][x];'' + LineEnding'#13#10'    +''        }   '' + Li'
  +'neEnding'#13#10'    +''        arrayString = arrayString + "]"; '' + LineEn'
  +'ding'#13#10'    +''      }   '' + LineEnding'#13#10'    +''      arrayStrin'
  +'g = arrayString + "]"; '' + LineEnding'#13#10'    +''    }   '' + LineEndin'
  +'g'#13#10'    +''    arrayString = arrayString + "]"; '' + LineEnding'#13#10
  +'    +''    return(arrayString); '' + LineEnding'#13#10'    +''}''+ LineEndi'
  +'ng;'#13#10#13#10#13#10'  plist:=self.FullParamList;'#13#10'  KName:=self.My'
  +'Node.NodeName+''CanvasRenderFn'';'#13#10#13#10'  // Build the Dimensions ar'
  +'ray'#13#10'  setlength(self.Dimensions,numKernels+1);'#13#10'  setlength(se'
  +'lf.Dimensions[0],3);'#13#10'  self.Dimensions[0,0]:=self.ActualWidth;'#13#10
  +'  self.Dimensions[0,1]:=self.ActualHeight;'#13#10'  self.Dimensions[0,2]:=1'
  +';'#13#10'  TempStr:=self.KernelXDims;'#13#10'  xdims:=JSONStringToStringLis'
  +'t(TempStr);'#13#10'  TempStr:=self.KernelyDims;'#13#10'  ydims:=JSONStringT'
  +'oStringList(TempStr);'#13#10'  TempStr:=self.KernelzDims;'#13#10'  zdims:=J'
  +'SONStringToStringList(TempStr);'#13#10'  // ... some validation tests ...'
  +#13#10'  if xdims.Count<>numKernels then'#13#10'  begin'#13#10'    showmessa'
  +'ge(''Number of Kernel X Dimensions must match number of kernels'');'#13#10
  +'    EXIT;'#13#10'  end;'#13#10'  if ydims.Count<>numKernels then'#13#10'  b'
  +'egin'#13#10'    showmessage(''Number of Kernel Y Dimensions must match numb'
  +'er of kernels'');'#13#10'    EXIT;'#13#10'  end;'#13#10'  if zdims.Count<>n'
  +'umKernels then'#13#10'  begin'#13#10'    showmessage(''Number of Kernel Z D'
  +'imensions must match number of kernels'');'#13#10'    EXIT;'#13#10'  end;'
  +#13#10'  for n:=1 to numKernels do'#13#10'  begin'#13#10'    if not IsStrFlo'
  +'atNum(xdims[n-1]) then'#13#10'    begin'#13#10'      showmessage(''GPU Kern'
  +'elXDims item ''+inttostr(n)+'' is not numeric'');'#13#10'      EXIT;'#13#10
  +'    end;'#13#10'    if not IsStrFloatNum(ydims[n-1]) then'#13#10'    begin'
  +#13#10'      showmessage(''GPU KernelYDims item ''+inttostr(n)+'' is not num'
  +'eric'');'#13#10'      EXIT;'#13#10'    end;'#13#10'    if not IsStrFloatNum'
  +'(zdims[n-1]) then'#13#10'    begin'#13#10'      showmessage(''GPU KernelZDi'
  +'ms item ''+inttostr(n)+'' is not numeric'');'#13#10'      EXIT;'#13#10'    '
  +'end;'#13#10'  end;'#13#10'  // set up the kernel dimensions...'#13#10'  for'
  +' n:=1 to numKernels do'#13#10'  begin'#13#10'    setlength(self.Dimensions['
  +'n],3);            //x,y,z'#13#10'    self.Dimensions[n,0]:=strtoint(xdims[n'
  +'-1]);'#13#10'    self.Dimensions[n,1]:=strtoint(ydims[n-1]);'#13#10'    sel'
  +'f.Dimensions[n,2]:=strtoint(zdims[n-1]);'#13#10'  end;'#13#10#13#10#13#10' '
  +' // Create the required set of non-graphical kernels.'#13#10'  // All these'
  +' kernels operate with the same set of parameters.'#13#10'  for n:=0 to numK'
  +'ernels-1 do'#13#10'  begin'#13#10'    str:=str'#13#10'    +''/*/-----------'
  +'- Create Kernel ''+inttostr(n)+'' -------/*/ '' + LineEnding'#13#10'    +'''
  +'const ''+KName+inttostr(n)+'' = ''+self.MyNode.NodeName+''Matrix.createKern'
  +'el(function(myArray,AnimationCounterValue''+plist'#13#10'       +'') { '' +'
  +' LineEnding;'#13#10'    str:=str + ''  var myValue=0.0;'' + LineEnding;'#13
  +#10'    str:=str + AnimCode[n+1];'#13#10'    str:=str + ''  return myValue;'
  +''' + LineEnding;   // this goes into the relevant x,y,z position in outputA'
  +'rray'#13#10'    str:= str'#13#10'    +''},''+LineEnding'#13#10'    +''{  ou'
  +'tput: ['';'#13#10'    for d:=0 to length(self.Dimensions[n+1])-1 do'#13#10
  +'    begin'#13#10'      if d>0 then str:=str+'','';'#13#10'      str:= str +'
  +' inttostr(self.Dimensions[n+1,d]);'#13#10'    end;'#13#10#13#10'    str:= s'
  +'tr'#13#10'    +''],'' + LineEnding'#13#10'    +''  graphical: false,'' + Li'
  +'neEnding;'#13#10#13#10'//    str:= str'#13#10'//    +''])'' + LineEnding'#13
  +#10'//    +''  .setGraphical(false)             '' + LineEnding'#13#10'//   '
  ,' +''  .setUseLegacyEncoder(true)       '' + LineEnding;'#13#10'    // integ'
  +'er parameters are loaded as constants'#13#10'    if length(self.ConstIntArr'
  +'ay)>0 then'#13#10'    begin'#13#10'      str:=str'#13#10'      +''  constan'
  +'ts:{'';'#13#10'      for i:=0 to length(self.ConstIntArray)-1 do'#13#10'   '
  +'   begin'#13#10'        if i>0 then str:=str+'', '';'#13#10'        str:=st'
  +'r'#13#10'        +self.ConstIntArray[i].ConstName+'': ''+inttostr(self.Cons'
  +'tIntArray[i].ConstValue);'#13#10'      end;'#13#10'      str:=str'#13#10'  '
  +'    +''},''+ LineEnding;'#13#10'    end;'#13#10'    str:=str + ''  useLegac'
  +'yEncoder: true'' + LineEnding;'#13#10'    str:= str + ''});'' + LineEnding;'
  +#13#10'    str:=str+LineEnding;'#13#10'  end;'#13#10#13#10'  //.......... Cr'
  +'eate a final Kernel (Graphical) ..............'#13#10'  h:=self.ActualHeigh'
  +'t;'#13#10'  w:=self.ActualWidth;'#13#10#13#10'  str:=str'#13#10'  +''/*/---'
  +'--------- Create Graphical Kernel -------/*/ '' + LineEnding'#13#10'  +''co'
  +'nst ''+KName+''G = ''+self.MyNode.NodeName+''.createKernel(function(myArray'
  +',AnimationCounterValue''+plist'#13#10'  +'') { '' + LineEnding'#13#10'  +'''
  +'  var r = 0  ;      '' + LineEnding'#13#10'  +''  var g = 0  ; /*/--initali'
  +'se the default colour for the GPUCanvas pixel in r,g,b,a format --/*/  '' +'
  +' LineEnding'#13#10'  +''  var b = 0  ;   '' + LineEnding'#13#10'  +''  var '
  +'a = 1  ;  '' + LineEnding;'#13#10'  str:=str + AnimCode[0];'#13#10'  str:= '
  +'str'#13#10'  +''  this.color((r),(g),(b),(a));'' + LineEnding'#13#10'  +''}'
  +')''+LineEnding'#13#10'  +''  .setOutput([''+intToStr(w)+'',''+ intToStr(h)+'
  +'''])              '' + LineEnding'#13#10'  +''  .setLoopMaxIterations([''+I'
  +'ntToStr(self.MaxIterations)+''])   '' + LineEnding'#13#10'  +''  .setGraphi'
  +'cal(true)                                         '' + LineEnding;'#13#10' '
  +' // integer parameters are loaded as constants'#13#10'  if length(self.Cons'
  +'tIntArray)>0 then'#13#10'  begin'#13#10'    str:=str'#13#10'    +''  .setCo'
  +'nstants({'';'#13#10'    for i:=0 to length(self.ConstIntArray)-1 do'#13#10
  +'    begin'#13#10'      if i>0 then str:=str+'', '';'#13#10'      str:=str'
  +#13#10'      +self.ConstIntArray[i].ConstName+'': ''+inttostr(self.ConstIntA'
  +'rray[i].ConstValue);'#13#10'    end;'#13#10'    str:=str'#13#10'    +''    '
  +'   })'' + LineEnding;'#13#10'  end;'#13#10'  str:= str + '';'' + LineEnding'
  +';'#13#10'  str:=str+LineEnding;'#13#10#13#10#13#10'  str:=str'#13#10'  +''/'
  +'*/-------------------Build the nested Kernel codes ----------------------/*'
  +'/'' + LineEnding'#13#10'  +''let AnimationCounterValue=''+IntToStr(self.Sta'
  +'rtIteration)+''; ''  +LineEnding'#13#10'  +''let AnimationCounterMax=''+Int'
  +'ToStr(self.NumFrames)+''; ''  +LineEnding;'#13#10#13#10'//combineKernels(k,'
  +'k,...,lastKernel,combinedKernel)'#13#10'  if numKernels>0 then'#13#10'  beg'
  +'in'#13#10'    str:=str'#13#10'    +''const superKernel = ''+self.MyNode.Nod'
  +'eName+''Matrix.combineKernels(''+LineEnding;'#13#10#13#10'    for n:=0 to n'
  +'umKernels-1 do'#13#10'    begin'#13#10'      str:=str'#13#10'      +''    '
  +'''+KName+inttostr(n)'#13#10'      +'', '';'#13#10'      str:=str+LineEnding'
  +';'#13#10'    end;'#13#10'    str:=str'#13#10'      +''    function(myArray,'
  +'AnimationCounterValue''+plist+'') {''+LineEnding'#13#10'      +''      var '
  +'rslt=''+LineEnding;'#13#10'    for n:=numKernels-1 downto 0 do'#13#10'    b'
  +'egin'#13#10'      str:=str'#13#10'      +''        ''+KName+inttostr(n)+''('
  +' ''+LineEnding;'#13#10'      if n=0 then'#13#10'        str:=str+''        '
  +'''+''myArray,''+LineEnding;'#13#10'    end;'#13#10'    for n:=0 to numKerne'
  +'ls-1 do'#13#10'    begin'#13#10'      str:=str'#13#10'      +''        ''+'
  +'''AnimationCounterValue''+plist+'')'';'#13#10'      if n<numKernels-1 then'
  +#13#10'        str:=str+'','''#13#10'      else'#13#10'        str:=str+'';'
  +''';'#13#10'      str:=str+LineEnding;'#13#10'    end;'#13#10'    str:=str'
  +#13#10'    +''      return rslt;''+LineEnding'#13#10'    +''    });''+LineEn'
  +'ding;'#13#10'  end;'#13#10#13#10#13#10#13#10'  // Initialise the stageArray'
  +'...   [3D array of real]'#13#10'  // Initial values come from the ''XGPU3DT'
  +'able'' component (data held in property InitStageData)'#13#10'  {$ifndef JS'
  +'cript}'#13#10'  str:=str'#13#10'  +''let stageArray=''+StringUtils.DelChars'
  +'(self.InitStageData,''"'')+'';   ''+LineEnding;'#13#10'  {$else}'#13#10'  /'
  +'/ in the HTML environment, when the GPU canvas is within an iframe element,'
  +' it appears that there is'#13#10'  // a problem loading the page when the s'
  +'tring is very long (fails). For this reason we have not initialised'#13#10
  +'  // the 3D stageArray here.  Instead, there is a message posted into the i'
  +'frame document (StartTheGPU),'#13#10'  // which is handled in the iframe, s'
  +'ets up the array, and then runs this function.'#13#10'  str:=str'#13#10'  +'
  +'''let stageArray=[[[0]]];''  +LineEnding;'#13#10'  {$endif}'#13#10'  str:=s'
  ,'tr+LineEnding;'#13#10'  str:=str+''function StartTheGPU() {''+LineEnding;'
  +#13#10#13#10#13#10#13#10'  // Run the combined non-graphical kernels...'#13
  +#10'  if numKernels>0 then'#13#10'  begin'#13#10'    // Call the build metho'
  +'d for each kernel in turn (flushes out transpile errors)'#13#10'    for n:='
  +'0 to numKernels-1 do'#13#10'    begin'#13#10'      str:=str'#13#10'      +'
  +'''    ''+KName+inttostr(n)+''.build(stageArray,AnimationCounterValue''+plis'
  +'t+'');  ''+LineEnding'#13#10'      +''    console.log("Kernel ''+inttostr(n'
  +')+'' built ok");  ''+LineEnding;'#13#10'    end;'#13#10'    str:=str+LineEn'
  +'ding;'#13#10#13#10'    str:=str'#13#10'    +''    /*/-------------------Run'
  +' the Nested Kernels ----------------------/*/    '' + LineEnding'#13#10'   '
  +' +''    stageArray = superKernel(stageArray,AnimationCounterValue''+plist+'
  +''');  ''+LineEnding'#13#10' //   +''    stageArrayString = MyStringify(stag'
  +'eArray); '' + LineEnding'#13#10'    +''    PostMessageStageArray("''+myNode'
  +'.NodeName+''",AnimationCounterValue);'' + LineEnding;'#13#10'  end;'#13#10
  +#13#10'  str:=str'#13#10'  +''    /*/-------------------Run the Graphical Ke'
  +'rnel and place the result on the web page----------------------/*/    '' + '
  +'LineEnding'#13#10'  +''    ''+KName+''G(stageArray,AnimationCounterValue''+'
  +'plist+'');               '' + LineEnding;'#13#10'//  if self.FetchFrameOutp'
  +'ut=true then'#13#10'    str:=str'#13#10'    +''    outputArrayString = GetP'
  +'ixelArray(''+self.MyNode.NodeName+''CanvasRenderFnG); '' + LineEnding'#13#10
  +'    +''    PostMessageOutputArray("''+myNode.NodeName+''",AnimationCounterV'
  +'alue);'' + LineEnding;'#13#10#13#10'  // Put the GPU bitmap on the page...'
  +#13#10'  str:=str'#13#10'  +''    var ''+self.MyNode.NodeName+''BrowserCanva'
  +'s = ''+self.MyNode.NodeName+''CanvasRenderFnG.canvas;  '' + LineEnding     '
  +'   // GPUjs V2'#13#10'//  +''    var ''+self.MyNode.NodeName+''BrowserCanva'
  +'s = ''+self.MyNode.NodeName+''CanvasRenderFnG.getCanvas();  '' + LineEnding'
  +' // GPUjs v1'#13#10'  +''    document.getElementsByTagName("body")[0].appen'
  +'dChild(''+self.MyNode.NodeName+''BrowserCanvas);     '' + LineEnding ;'#13
  +#10#13#10'  if self.Animated then'#13#10'    str:=str'#13#10'    +''    /*/-'
  +'------------------ Animate the GPUCanvas ----------------------/*/    '' + '
  +'LineEnding'#13#10'    +''    AnimationFrameID=requestAnimationFrame(animate'
  +') ; ''  + LineEnding;'#13#10#13#10'  str:=str+''}''+LineEnding;  // end of '
  +'function StartTheGPU()'#13#10#13#10#13#10'  str:=str'#13#10'  +''  function'
  +' GetMessage(msg) {''  + LineEnding'#13#10'  +''    alert("msg="+msg);  ''  '
  +'+ LineEnding'#13#10'  +''}''  + LineEnding ;'#13#10#13#10'  str:=str'#13#10
  +'  +''  function ClearDown() {''  + LineEnding'#13#10'  +''    stageArray=[['
  +'[0]]];  ''  + LineEnding'#13#10'  +''    outputArrayString="[]";  ''  + Lin'
  +'eEnding'#13#10'  +''}''  + LineEnding ;'#13#10#13#10'  str:=str'#13#10'  +'
  +'''  function RunCode(theCode) {''  + LineEnding'#13#10'  +''    eval(theCod'
  +'e);  ''  + LineEnding'#13#10'  +''}''  + LineEnding ;'#13#10#13#10'  {$ifde'
  +'f JScript}'#13#10'//    // handle an inbound message of format:{"objid":<id'
  +'>, "mtype":"SetParam", "pName":<pName>, "pValue":<pValue>}'#13#10'    str:='
  +'str'#13#10'    +''window.addEventListener("message", function(ev) { ''+Line'
  +'ending'#13#10'    + ''  if (ev.data.objid!=undefined) { ''  +LineEnding'#13
  +#10'//                + ''  console.log("handle GPU inbound message "+ev.dat'
  +'a.objid+"  "+ev.data.mtype); ''+LineEnding'#13#10'    + ''  if (ev.data.mty'
  +'pe=="StartTheGPU") {    ''+lineEnding'#13#10'    + ''    try {   ''+lineEnd'
  +'ing'#13#10'    + ''     stageArray=ev.data.pValue;  ''+lineEnding'#13#10'  '
  +'  + ''     ev.data.pValue=[];  ''+lineEnding'#13#10'    + ''     StartTheGP'
  +'U();  ''+lineEnding'#13#10'    + ''     }catch(err){alert(err.message);}  '
  +'''+lineEnding'#13#10'    + ''  } ''+LineEnding'#13#10'    + ''  if (ev.data'
  +'.mtype=="SetNumParam") {    ''+lineEnding'#13#10'//                 + ''  c'
  +'onsole.log(ev.data.pName+"=["+ev.data.pValue.toString()+"];"); ''+LineEndin'
  +'g'#13#10'    + ''    try {   ''+lineEnding'#13#10'    + ''      eval(ev.dat'
  +'a.pName+"=["+ev.data.pValue.toString()+"];");  ''+lineEnding'#13#10'    + '
  +'''     }catch(err){alert(err.message);}  ''+lineEnding'#13#10'    + ''  } '
  +'''+LineEnding'#13#10'    + ''  if (ev.data.mtype=="execCode") {    ''+lineE'
  +'nding'#13#10'//                + ''  console.log("handle execCode message "'
  +'+ev.data.code); ''+LineEnding'#13#10'    + ''    try {   ''+lineEnding'#13
  +#10'    + ''      eval(ev.data.code);  ''+lineEnding'#13#10'    + ''     }ca'
  +'tch(err){alert(err.message);}  ''+lineEnding'#13#10'    + ''  } ''+LineEndi'
  +'ng'#13#10'    + ''} ''+lineEnding'#13#10'    + ''} );''  +LineEnding;'#13#10
  +'  {$else}'#13#10'  str:=str+LineEnding;'#13#10'  {$endif}'#13#10#13#10'//Ed'
  +'itAttributeValue(''XMemo1'','''',''ItemValue'',str);        //!!!! temporar'
  ,'y for debugging'#13#10#13#10'result:=str;'#13#10#13#10#13#10#13#10'end;'#13
  +#10#13#10'procedure SetOutputArrayValue(NodeName:String;const AValue:String)'
  +';'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'  // set the pr'
  +'operty value for the relevant XGPUCanvas object'#13#10'  myNode:=FindDataNo'
  +'deById(SystemNodeTree,NodeName,'''',true);'#13#10'  if myNode<>nil then'#13
  +#10'  begin'#13#10'//    myNode.SetAttributeValue(''OutputArray'',AValue);'
  +#13#10'    {$ifndef JScript}'#13#10'    TXGPUCanvas(myNode.ScreenObject).GPU'
  +'OutputString:=AValue;'#13#10'    {$else}'#13#10'    TXGPUCanvas(myNode).GPU'
  +'OutputString:=AValue;'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'procedure SetStageArrayValue(NodeName:String;const AValue:String);'#13
  +#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'  //{$ifdef JScript}'
  +#13#10'  //asm'#13#10'  //console.log(''SetStageArrayValue ''+NodeName+'' '''
  +'+AValue);'#13#10'  //console.log(''SetStageArrayValue ''+NodeName);'#13#10
  +'  //end;'#13#10'  //{$endif}'#13#10'  // set the property value for the rel'
  +'evant XGPUCanvas object'#13#10'  myNode:=FindDataNodeById(SystemNodeTree,No'
  +'deName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10'//   '
  +' myNode.SetAttributeValue(''GPUStageArray'',AValue);'#13#10'    {$ifndef JS'
  +'cript}'#13#10'    TXGPUCanvas(myNode.ScreenObject).GPUStageString:=AValue;'
  +#13#10'    TXGPUCanvas(myNode.ScreenObject).GPUStageArray:=JsonStringTo3DNum'
  +'Array(AValue);'#13#10'    {$else}'#13#10'    TXGPUCanvas(myNode).GPUStageSt'
  +'ring:=AValue;'#13#10'    TXGPUCanvas(myNode).GPUStageArray:=JsonStringTo3DN'
  +'umArray(AValue);'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10
  +'procedure SetStageArrayValue2(NodeName:String;AValue:T3DNumArray);'#13#10'v'
  +'ar'#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'  myNode:=FindDataNodeByI'
  +'d(SystemNodeTree,NodeName,'''',true);'#13#10'  if myNode<>nil then'#13#10' '
  +' begin'#13#10'    {$ifndef JScript}'#13#10'    TXGPUCanvas(myNode.ScreenObj'
  +'ect).GPUStageArray:=AValue;'#13#10'    TXGPUCanvas(myNode).GPUStageString:='
  +''''';'#13#10'    {$else}'#13#10'    TXGPUCanvas(myNode).GPUStageArray:=AVal'
  +'ue;'#13#10'    TXGPUCanvas(myNode).GPUStageString:='''';'#13#10'    {$endif'
  +'}'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'function GetOutputArrayValue'
  +'(NodeName:String):T3DNumArray;'#13#10'var'#13#10'  myNode:TDataNode;'#13#10
  +'begin'#13#10'  result:=nil;'#13#10'  myNode:=FindDataNodeById(SystemNodeTre'
  +'e,NodeName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10' '
  +'   {$ifndef JScript}'#13#10'      {$ifdef Chromium}'#13#10'      TXGPUCanva'
  +'s(myNode.ScreenObject).GPUOutputArray:=JSONStringTo3DNumArray(TXGPUCanvas(m'
  +'yNode.ScreenObject).GPUOutputString);'#13#10'      result:=TXGPUCanvas(myNo'
  +'de.ScreenObject).GPUOutputArray;'#13#10'      {$else}'#13#10'      TXGPUCan'
  +'vas(myNode.ScreenObject).GPUOutputArray:=JSONStringTo3DNumArray(TXGPUCanvas'
  +'(myNode.ScreenObject).GPUOutputString);'#13#10'      result:=TXGPUCanvas(my'
  +'Node.ScreenObject).GPUOutputArray;'#13#10'      {$endif}'#13#10'    {$else}'
  +#13#10'    TXGPUCanvas(myNode.ScreenObject).GPUOutputArray:=JSONStringTo3DNu'
  +'mArray(TXGPUCanvas(myNode.ScreenObject).GPUOutputString);'#13#10'    result'
  +':=TXGPUCanvas(myNode).GPUOutputArray;'#13#10'    {$endif}'#13#10'  end;'#13
  +#10'end;'#13#10#13#10'function GetOutputArrayString(NodeName:String):String;'
  +#13#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'  result:='''';'#13
  +#10'  myNode:=FindDataNodeById(SystemNodeTree,NodeName,'''',true);'#13#10'  '
  +'if myNode<>nil then'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'    '
  +'  result:=TXGPUCanvas(myNode.ScreenObject).GPUOutputString;'#13#10'    {$el'
  +'se}'#13#10'    result:=TXGPUCanvas(myNode).GPUOutputString;'#13#10'    {$en'
  +'dif}'#13#10'  end;'#13#10'end;'#13#10#13#10'function GetStageArrayValue(Nod'
  +'eName:String):T3DNumArray;'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'beg'
  +'in'#13#10'  result:=nil;'#13#10'  myNode:=FindDataNodeById(SystemNodeTree,N'
  +'odeName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10'    '
  +'{$ifndef JScript}'#13#10'      if length( TXGPUCanvas(myNode.ScreenObject).'
  +'GPUStageArray)=0 then'#13#10'        TXGPUCanvas(myNode.ScreenObject).GPUSt'
  +'ageArray:=JSONStringTo3DNumArray(TXGPUCanvas(myNode.ScreenObject).GPUStageS'
  +'tring);'#13#10'      result:=TXGPUCanvas(myNode.ScreenObject).GPUStageArray'
  +';'#13#10'    {$else}'#13#10'    if length( TXGPUCanvas(myNode).GPUStageArra'
  +'y)=0 then'#13#10'      TXGPUCanvas(myNode).GPUStageArray:=JSONStringTo3DNum'
  +'Array(TXGPUCanvas(myNode).GPUStageString);'#13#10'    result:=TXGPUCanvas(m'
  +'yNode).GPUStageArray;'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'function GetStageArrayString(NodeName:String):String;'#13#10'var'#13
  +#10'  myNode:TDataNode;'#13#10'begin'#13#10'  result:='''';'#13#10'  myNode:'
  +'=FindDataNodeById(SystemNodeTree,NodeName,'''',true);'#13#10'  if myNode<>n'
  ,'il then'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'    if TXGPUCanv'
  +'as(myNode.ScreenObject).GPUStageString<>'''' then'#13#10'      result:=TXGP'
  +'UCanvas(myNode.ScreenObject).GPUStageString'#13#10'    else'#13#10'      re'
  +'sult:=Num3DArrayToJsonString( TXGPUCanvas(myNode.ScreenObject).GPUStageArra'
  +'y);'#13#10'    {$else}'#13#10'    if TXGPUCanvas(myNode).GPUStageString<>'''
  +''' then'#13#10'      result:=TXGPUCanvas(myNode).GPUStageString'#13#10'    '
  +'else'#13#10'      result:=Num3DArrayToJsonString(TXGPUCanvas(myNode).GPUSta'
  +'geArray);'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10'functi'
  +'on GetParam(NodeName:String; pindex:integer):Float;'#13#10'begin'#13#10'  s'
  +'howMessage(''GetParam'');'#13#10'  result:=0;'#13#10'end;'#13#10#13#10'func'
  +'tion TXGPUCanvas.GPUJSAnimationFooter:String;'#13#10'// This code is added '
  +'only if the ''Animated'' property is true...'#13#10'var'#13#10'  str,cma,pl'
  +'ist:String;'#13#10'begin'#13#10#13#10'  plist:=self.FullParamList;'#13#10#13
  +#10'  str:=''/*/------------------ Graphics Animation Functions ------------'
  +'---------------------/*/'' + LineEnding;'#13#10#13#10#13#10'// The FrameDon'
  +'e function is called after each animation frame is finished.'#13#10'// It i'
  +'s an async function, so that inbound messages are picked up,'#13#10'// and '
  +'we can use postMessage, eg. for passing'#13#10'// values back out from the '
  +'IFrame into the project environment.'#13#10'  str:=str'#13#10'  +''function'
  +' FrameDone(kernel) {''  + LineEnding;'#13#10'//  if self.FetchFrameOutput=t'
  +'rue then'#13#10'//  begin'#13#10'    str:=str+''    if (running) {outputArr'
  +'ayString = GetPixelArray(kernel); '' + LineEnding'#13#10'            +''   '
  +' PostMessageOutputArray("''+myNode.NodeName+''",AnimationCounterValue);}'' '
  +'+ LineEnding;'#13#10'//  end;'#13#10'  str:=str+''    return new Promise(re'
  +'solve => { ''  + LineEnding'#13#10'  +''  }); } ''+ LineEnding;'#13#10#13#10
  +'    str:=str'#13#10'   +''async function DoFrame() {  ''  + LineEnding;'#13
  +#10'   if numKernels>0 then'#13#10'   str:=str'#13#10'   +''    stageArray=s'
  +'uperKernel(stageArray,AnimationCounterValue''+plist+'');  ''+LineEnding'#13
  +#10'//   +''    PostMessageStageArray("''+myNode.NodeName+''",AnimationCount'
  +'erValue);'' + LineEnding'#13#10'   ;'#13#10'   str:=str'#13#10'   +''    '''
  +'+self.MyNode.NodeName+''CanvasRenderFnG(stageArray,AnimationCounterValue''+'
  +'plist+''); '' + LineEnding'#13#10'//   +''updateTheCanvas();  ''+LineEnding'
  +#13#10'   +''    AnimationCounterValue = AnimationCounterValue +1; ''  + Lin'
  +'eEnding'#13#10'   +''    if (AnimationCounterValue > AnimationCounterMax) {'
  +''' + LineEnding'#13#10'   +''      AnimationCounterValue = ''+IntToStr(self'
  +'.StartIteration)+'';};  ''  + LineEnding'#13#10'   +''    var xx = await Fr'
  +'ameDone(''+self.MyNode.NodeName+''CanvasRenderFnG) ; ''  + LineEnding'#13#10
  +'   +''} ''  + LineEnding;'#13#10#13#10'   str:=str'#13#10'   +''var Animati'
  +'onFrameID;  ''  + LineEnding'#13#10'   +''var GPUIntervalRunner;  ''  + Lin'
  +'eEnding'#13#10'   +''function animate(timestamp){  ''  + LineEnding'#13#10
  +'   +''    GPUIntervalRunner=setInterval(DoFrame, 1000/''+IntToStr(self.MaxF'
  +'ramesPerSec)+''); '' + LineEnding'#13#10'   +''} ''  + LineEnding;'#13#10'/'
  +'/   +''  AnimationFrameID=requestAnimationFrame(animate) ; ''  + LineEnding'
  +';'#13#10#13#10'  result:=str;'#13#10'end;'#13#10#13#10'function TXGPUCanvas'
  +'.FetchAllAnimCode:TAnimCodeArray;'#13#10'var'#13#10'  allcode:TAnimCodeArra'
  +'y;'#13#10'  bits,cdbits,dimbits:TStringList;'#13#10'  n,d:integer;'#13#10' '
  +' RevisedAnimCode:String;'#13#10'begin'#13#10'  // The property ''AnimationC'
  +'ode'' contains a string which is a concatenation of:'#13#10'  //     Code b'
  +'lock for the graphical output kernel'#13#10'  //     Code block(s) for the '
  +'non-graphical nested kernels (number of these is in property NumKernels).'
  +#13#10'  //     Delimiter between code blocks is eventListdelimiter'#13#10' '
  +' //     Each code block is further subdivided into:'#13#10'  //         Pas'
  +'cal Code block'#13#10'  //         Dimensions of output array (eg.  x,y,z)'
  +#13#10'  //         Delimiter between code block and dimensions spec is Even'
  +'tAttributeDelimiter'#13#10#13#10'  setlength(allcode,numKernels+1);'#13#10
  +'  bits:= stringsplit(self.AnimationCode,eventListdelimiter);'#13#10#13#10' '
  +' // for each kernel...'#13#10'  for n:=0 to bits.count-1 do'#13#10'  begin'
  +#13#10'    if length(allcode)<=n then'#13#10'      setlength(allcode,n+1);'
  +#13#10'    // get the code block for this kernel...'#13#10'    allcode[n].Co'
  +'deBlock:=TStringList.Create;'#13#10#13#10'    cdbits:=StringSplit(bits[n],E'
  +'ventAttributeDelimiter);'#13#10'    allcode[n].CodeBlock.Text:=cdbits[0];'
  +#13#10#13#10'  end;'#13#10#13#10'  // Add Empty code blocks for missing stag'
  +'es (number of code blocks == numKernels+1)'#13#10'  for n:=bits.Count to nu'
  +'mKernels do'#13#10'  begin'#13#10'    allcode[n].CodeBlock:=TStringList.Cre'
  ,'ate;'#13#10'    allcode[n].CodeBlock.Text:=''//Kernel ''+inttostr(n)+LineEn'
  +'ding'#13#10'      +''begin''+LineEnding'#13#10'      +''  //eg. for 3D arra'
  +'y stages, this will pass through the prior kernel result...''+LineEnding'#13
  +#10'      +''  //Note. Dimensions of myArray are as specified for the prior '
  +'kernel output.''+LineEnding'#13#10'      +''  myValue:=myArray[this.thread.'
  +'z,this.thread.y,this.thread.x]; ''+LineEnding'#13#10'      +''end;''+LineEn'
  +'ding;'#13#10#13#10'//    setlength(allcode[n].KDimensions,3);'#13#10'//    '
  +'allcode[n].KDimensionsStr:=inttostr(self.ActualWidth)+'',''+inttostr(self.A'
  +'ctualHeight)+'',''+inttostr(self.DfltZDepth);'#13#10'//    allcode[n].KDime'
  +'nsions[0]:=self.ActualWidth;'#13#10'//    allcode[n].KDimensions[1]:=self.A'
  +'ctualHeight;'#13#10'//    allcode[n].KDimensions[2]:=self.DfltZDepth;'#13#10
  +'  end;'#13#10#13#10'  // In case this has adjusted the data, save the conca'
  +'tenated code block again to the AnimationCode property'#13#10'  RevisedAnim'
  +'Code:='''';'#13#10'  for n:=0 to numKernels do'#13#10'  begin'#13#10'    if'
  +' n>0 then'#13#10'      RevisedAnimCode:=RevisedAnimCode + eventListdelimite'
  +'r;'#13#10'    RevisedAnimCode:=RevisedAnimCode + allcode[n].CodeBlock.Text;'
  +#13#10'  end;'#13#10'  self.myNode.SetAttributeValue(''AnimationCode'',Revis'
  +'edAnimCode);'#13#10'  result:=allcode;'#13#10'end;'#13#10#13#10'function TX'
  +'GPUCanvas.BuildPascalAnimationUnit(Compiler:TObject):String;'#13#10'// Wrap'
  +' the user-supplied code from the AnimationCode property in a unit, for comp'
  +'ilation to JavaScript by pas2js.'#13#10'var'#13#10'  PascalHeader:TStringLi'
  +'st;'#13#10'  UserCodeParameterList:String;'#13#10'  AllAnimationCode:TAnimC'
  +'odeArray;'#13#10'  TheAnimationCode:TStringList;'#13#10'  vstr:String;'#13
  +#10'  v:TNumArray;'#13#10'  i,j,n:integer;'#13#10'begin'#13#10'  PascalHeade'
  +'r:=TStringList.Create;'#13#10'  PascalHeader.Add('' unit GPUCode; '');'#13
  +#10'  PascalHeader.Add(''{$ifdef Dll}{$mode objfpc}{$H+}{$R+}{$endif}'');'#13
  +#10'  PascalHeader.Add(''interface'');'#13#10'  PascalHeader.Add(''uses Clas'
  +'ses, SysUtils, Math;'');'#13#10'  PascalHeader.Add('' type '');'#13#10'  Pa'
  +'scalHeader.Add(''     TNumArray = array of real;'');'#13#10'  PascalHeader.'
  +'Add(''     T2DNumArray = array of TNumArray;'');'#13#10' // PascalHeader.Ad'
  +'d(''     T3DNumArray = array of array of array of real;'');'#13#10'//  Pasc'
  +'alHeader.Add(''     TImgArray = array of string;'');'#13#10'  PascalHeader.'
  +'Add(''     TConstantsRecord=record'');'#13#10'  for i:=0 to length(self.Con'
  +'stIntArray)-1 do'#13#10'  begin'#13#10'   PascalHeader.Add(''       const '
  +'''+self.ConstIntArray[i].ConstName+'':integer=''+inttostr(self.ConstIntArra'
  +'y[i].ConstValue)+'';'');'#13#10'  end;'#13#10'  PascalHeader.Add(''     end'
  +';'');'#13#10'  PascalHeader.Add(''     TXThread = record'#9''');'#13#10'  P'
  +'ascalHeader.Add(''       x,y,z:integer;'#9''');'#13#10'  PascalHeader.Add('
  +'''     end;'#9''');'#13#10'  PascalHeader.Add(''     TGPUThread = class'#9
  +''');'#13#10'  PascalHeader.Add(''        thread:TXThread;'#9''');'#13#10'  '
  +'PascalHeader.Add(''        constants:TConstantsRecord;     '#9''');'#13#10
  +'  PascalHeader.Add(''        procedure color(r,g,b,a:real); virtual; abstra'
  +'ct;'#9''');'#13#10'  PascalHeader.Add(''     end;'#9''');'#13#10'  PascalHe'
  +'ader.Add(''     TFuncNotSupported = record'#9''');'#13#10'  PascalHeader.Ad'
  +'d(''          dummy:string; '#9''');'#13#10'  PascalHeader.Add(''     end;'
  +#9''');'#13#10'  PascalHeader.Add(''   implementation'#9''');'#13#10'   Pasc'
  +'alHeader.Add(''   function chr(b:TFuncNotSupported):TFuncNotSupported;'#9
  +''');'#13#10'  PascalHeader.Add(''   begin'#9''');'#13#10'  PascalHeader.Add'
  +'(''   end;'#9''');'#13#10'  PascalHeader.Add(''   function Ord(  X: TFuncNo'
  +'tSupported):TFuncNotSupported;'#9''');'#13#10'  PascalHeader.Add(''   begin'
  +#9''');'#13#10'  PascalHeader.Add(''   end;'#9''');'#13#10'  PascalHeader.Ad'
  +'d(''   function pred( X: TFuncNotSupported):TFuncNotSupported;'#9''');'#13
  +#10'  PascalHeader.Add(''   begin'#9''');'#13#10'  PascalHeader.Add(''   end'
  +';'#9''');'#13#10'  PascalHeader.Add(''   function Succ( X: TFuncNotSupporte'
  +'d):TFuncNotSupported;'#9''');'#13#10'  PascalHeader.Add(''   begin'#9''');'
  +#13#10'  PascalHeader.Add(''   end;'#9''');'#13#10'  PascalHeader.Add(''   f'
  +'unction tan(d: TFuncNotSupported):TFuncNotSupported;'#9''');'#13#10'  Pasca'
  +'lHeader.Add(''   begin'#9''');'#13#10'  PascalHeader.Add(''   end;'#9''');'
  +#13#10'  PascalHeader.Add(''   function sqr(d: TFuncNotSupported):TFuncNotSu'
  +'pported;'#9''');'#13#10'  PascalHeader.Add(''   begin'#9''');'#13#10'  Pasc'
  +'alHeader.Add(''   end;'#9''');'#13#10'  PascalHeader.Add(''   '#9''');'#13
  +#10#13#10'  PascalHeader.Add(''// -------------- Declare Parameters List (fo'
  +'r compilation) ---------- '');'#13#10'  for i:=0 to length(self.ParamNumArr'
  +'ay)-1 do'#13#10'  begin'#13#10'    PascalHeader.Add(''   var ''+ParamNumArr'
  ,'ay[i].ParamName+'':TNumArray;'');'#13#10'  end;'#13#10'  for i:=0 to length'
  +'(self.Param2DNumArray)-1 do'#13#10'  begin'#13#10'    PascalHeader.Add(''  '
  +' var ''+Param2DNumArray[i].ParamName+'':T2DNumArray;'');'#13#10'  end;'#13
  +#10'  PascalHeader.Add(''   var  this:TGPUThread;'');'#13#10'  PascalHeader.'
  +'Add(''   type  T2DArray=Array of Array of real;'');'#13#10'  PascalHeader.A'
  +'dd(''   type  TmyArray=Array of T2DArray;'');'#13#10'  PascalHeader.Add('' '
  +'  var  myArray:TMyArray;'');'#13#10'  PascalHeader.Add(''   var  myValue:re'
  +'al;'');'#13#10#13#10'  PascalHeader.Add(''   procedure PascalVersionOfGPUCo'
  +'de(AnimationCounterValue:integer'');'#13#10'  if UserCodeParameterList<>'''
  +''' then'#13#10'    PascalHeader.Add('';''+UserCodeParameterList);'#13#10'  '
  +'PascalHeader.Add('');'#9''');'#13#10#13#10'  PascalHeader.Add('' var       '
  +'r,g,b,a:real;'');'#13#10'  PascalHeader.Add(''        zzzzz1:integer;'') ; '
  +'         // used as position marker in resulting JS script'#13#10'  //.....'
  +'......... user code block goes here .................'#13#10'  TheAnimation'
  +'Code:=TStringList.Create;'#13#10#13#10'  AllAnimationCode:=self.FetchAllAni'
  +'mCode;'#13#10#13#10' // TheAnimationCode.Text:=self.AnimationCode;'#13#10' '
  +' for n:=0 to length(AllAnimationCode)-1 do'#13#10'  begin'#13#10'    if n=0'
  +' then'#13#10'      PascalHeader.Add(''var kkkkk''+inttostr(n)+'':integer;'''
  +')'#13#10'    else'#13#10'      PascalHeader.Add(''procedure kkkkk''+inttost'
  +'r(n)+'';'');'#13#10'    TheAnimationCode.Text:=AllAnimationCode[n].CodeBloc'
  +'k.Text;'#13#10'    WriteIncFile(Compiler,myNode.NodeName+''.''+inttostr(n),'
  +''''',''tempinc/'',PascalHeader,TheAnimationCode);'#13#10'  end;'#13#10'  //'
  +'..........................................................'#13#10'  PascalH'
  +'eader.Add(''var zzzzz2:integer;'');              // used as position marker'
  +' in resulting JS script'#13#10#13#10#13#10'  PascalHeader.Add(''begin'');'
  +#13#10'  PascalHeader.Add(''end.'');'#13#10#13#10'  //showmessage(PascalHead'
  +'er.Text);'#13#10#13#10'  result:=PascalHeader.Text;'#13#10'  FreeAndNil(Pas'
  +'calHeader);'#13#10'  FreeAndNil(TheAnimationCode);'#13#10'end;'#13#10#13#10
  +#13#10'function TXGPUCanvas.CompileGPUToJS(var GPUJSOutput:String):Boolean;'
  +#13#10'var'#13#10'  ProgPath, PasFileName,ObjectFileName,ExeFileName:String;'
  +#13#10'  UnitString:String;'#13#10'  Res,ok:Boolean;'#13#10'  args:TStringLi'
  +'st;'#13#10'  prog:TStringList;'#13#10'  {$ifdef JScript}'#13#10'  lWebFS : '
  +'TPas2JSWebFS;'#13#10'  {$endif}'#13#10'begin'#13#10'  self.GeneratedHTML:='
  +''''';'#13#10#13#10'  {$ifndef JScript}'#13#10'  UnitString:=BuildPascalAnim'
  +'ationUnit(nil);'#13#10#13#10'  ProgPath:=ExtractFilePath(Application.ExeNam'
  +'e)+''tempinc/'';'#13#10'  prog:=TStringList.Create;'#13#10'  prog.Text:=Uni'
  +'tString;'#13#10#13#10'  // clean up from previous runs'#13#10'  PASFileName'
  +':= self.myNode.NodeName+''.pas'';'#13#10'  DeleteFile(ProgPath+PASFileName)'
  +';'#13#10'  ObjectFileName:= self.myNode.NodeName+''.o'';'#13#10'  DeleteFil'
  +'e(ProgPath+ObjectFileName);'#13#10'  ExeFileName:= self.myNode.NodeName+''.'
  +'js'';'#13#10'  DeleteFile(ProgPath+ExeFileName);'#13#10#13#10' // GPUCodeEd'
  +'itor.ItemValue:=PascalCode.Text;'#13#10'  // save the text to be compiled t'
  +'o the .pas file'#13#10'  prog.SaveToFile(ProgPath+PASFileName);'#13#10'  pr'
  +'og.Free;'#13#10'  ok:=false;'#13#10#13#10'  GPUCodeEditor.MessageLines:='''
  +''';'#13#10#13#10'  TranspileMyProgram(self.myNode.NodeName,ExtractFilePath('
  +'Application.ExeName),''tempinc/'',GPUCodeEditor,true,nil);'#13#10'  // and '
  +'do checking for errors...'#13#10'  // if the JS file exists, run on browser'
  +'...'#13#10'  if FileExists(ExtractFilePath(Application.ExeName)+ExeFileName'
  +') then'#13#10'  begin'#13#10'    ok:=true;'#13#10'    // and get the GPUJSO'
  +'utput...'#13#10'    GPUJSOutput:=ReadFile(ExtractFilePath(Application.ExeNa'
  +'me)+ExeFileName);'#13#10'//    EditAttributeValue(''XMemo1'',''ItemValue'','
  +'GPUJSOutput);        //!!!! temporary for debugging'#13#10'  end'#13#10'  e'
  +'lse'#13#10'  begin'#13#10'    // GPU code failed to compile - show the edit'
  +'or with messages'#13#10'    GPUCodeEditor.ItemValue:=UnitString;'#13#10'   '
  +' GPUCodeEditor.MessagesHeight:=''30%'';'#13#10'    EditingGPUNode:=self.myN'
  +'ode;'#13#10'    GPUEditorMode:=''Unit'';'#13#10'    GPUCodeEditor.ReadOnly:'
  +'=true;'#13#10'    GPUComboBox.OptionList:=self.BuildKernelList;'#13#10'    '
  +'GPUComboBox.ItemIndex:=-1;'#13#10'    GPUComboBox.PriorIndex:=-1;'#13#10'  '
  +'  GPUEditorForm.Showing:=''Modal'';'#13#10'  end;'#13#10#13#10'  {$else}'#13
  +#10'  //showmessage(''starting compile section...'');'#13#10'  //with MyWebC'
  +'ompiler do'#13#10'  begin'#13#10'    UnitString:=BuildPascalAnimationUnit(M'
  +'yWebCompiler.Compiler);'#13#10#13#10'    MyWebCompiler.MyCodeEditor:=GPUCod'
  +'eEditor;'#13#10'    MyWebCompiler.Compiler.Log.OnLog:=@MyWebCompiler.DoLog;'
  +#13#10'    MyWebCompiler.Compiler.WebFS.LoadBaseURL:='''';'#13#10#13#10'    '
  ,'//showmessage(''FirstUnitName=''+FirstUnitName);'#13#10'    if MyWebCompile'
  +'r.MyCodeEditor<>nil then'#13#10'      MyWebCompiler.myCodeEditor.ItemValue:'
  +'=UnitString;'#13#10#13#10'    Res:=False;'#13#10#13#10'    // Load up the R'
  +'TL sources that are required for the compilation...'#13#10'    lWebFS:=MyWe'
  +'bCompiler.Compiler.WebFS;'#13#10'    LoadRTLFilesForPas2JS(lWebFS);'#13#10
  +#13#10'    lWebFS.SetFileContent(self.NodeName+''.pas'',UnitString);'#13#10
  +'//    showmessage(''done main file save'');'#13#10'    args:=TStringList.Cr'
  +'eate;'#13#10'    try'#13#10'      Args.Add(''-vwnhe'');'#13#10'      Args.A'
  +'dd(''-O-'');           //  Disable optimizations'#13#10'      Args.Add(''-J'
  +'c'');           //  Write all JavaScript concatenated into the output file'
  +#13#10'      Args.Add(''-Jirtl.js-'');         //  Remove a JS file.'#13#10
  +'      Args.Add(''-dJScript'');'#13#10'      Args.Add(self.NodeName+''.pas'''
  +');'#13#10#13#10'      //...................................................'
  +'.....'#13#10'      MyWebCompiler.Compiler.Run('''','''',Args,True);'#13#10
  +'      Res:=MyWebCompiler.Compiler.ExitCode=0;'#13#10'      //..............'
  +'..........................................'#13#10#13#10'    finally'#13#10
  +'     Args.Free;'#13#10'    end;'#13#10#13#10'    //EditAttributeValue(''XMe'
  +'mo2'','''',''ItemValue'',UnitString);        //!!!! temporary for debugging'
  +#13#10#13#10'    if res=true then'#13#10'    begin'#13#10'      //showmessag'
  +'e(''compiler all done'');'#13#10'      GPUJSOutput:=MyWebCompiler.Compiler.'
  +'WebFS.GetFileContent(self.NodeName+''.js'');'#13#10'    end'#13#10'    else'
  +#13#10'    begin'#13#10'      // GPU code failed to compile - show the edito'
  +'r with messages'#13#10'      GPUCodeEditor.ItemValue:=UnitString;'#13#10'  '
  +'    GPUCodeEditor.MessagesHeight:=''30%'';'#13#10'      EditingGPUNode:=sel'
  +'f.myNode;'#13#10'      GPUCodeEditor.ReadOnly:=true;'#13#10'      GPUEditor'
  +'Mode:=''Unit'';'#13#10'      GPUComboBox.OptionList:=self.BuildKernelList;'
  +#13#10'      GPUComboBox.ItemIndex:=-1;'#13#10'      GPUComboBox.PriorIndex:'
  +'=-1;'#13#10'      GPUEditorForm.Showing:=''Modal'';'#13#10'    end;'#13#10
  +'  end;'#13#10#13#10'  //EditAttributeValue(''XMemo1'','''',''ItemValue'',GP'
  +'UJSOutput);        //!!!! temporary for debugging'#13#10#13#10'  ok:=res;'
  +#13#10'  if res=true then'#13#10'  begin'#13#10'  end;'#13#10#13#10'//  show'
  +'message(''RunParser done.  Output=''+GPUJSOutput);'#13#10#13#10'  {$endif}'
  +#13#10#13#10'  //....decide if there are errors or not .......'#13#10'  if o'
  +'k=false then showmessage(''GPU Compilation failed'');'#13#10'  //else showm'
  +'essage(''Compilation successful'');'#13#10'  result:=ok;'#13#10'end;'#13#10
  +#13#10'function TXGPUCanvas.CompileAnimCode:TStringList;'#13#10'var'#13#10' '
  +' Pas2jsOutput:String;'#13#10'  PasString,Pas2JSRaw:String;'#13#10'  Pas2JST'
  +'rimmed:TstringList;'#13#10'  tmp:String;'#13#10'  ok:Boolean;'#13#10'  tmpL'
  +'ist:TStringList;'#13#10'  i,j:integer;'#13#10'begin'#13#10'  PasString:=myN'
  +'ode.getAttribute(''AnimationCode'',true).AttribValue;'#13#10'  Pas2JSTrimme'
  +'d:=TStringList.Create;'#13#10'  if PasString<>'''' then'#13#10'  begin'#13
  +#10#13#10'    // Compile the Pascal code'#13#10'    ok:=CompileGPUToJS(Pas2j'
  +'sOutput);'#13#10#13#10'   // EditAttributeValue(''XMemo1'','''',''ItemValue'
  +''',Pas2jsOutput,false);        //!!!! temporary for debugging'#13#10'    if'
  +' ok then'#13#10'    // Extract the bit of this that we need to keep'#13#10
  +'    begin'#13#10'      tmpList:=TStringList.Create;'#13#10'      tmpList.Te'
  +'xt:=Pas2JSOutput;'#13#10'      // delete up to the zzzzz1 line'#13#10'     '
  +' while (tmpList.Count>0) and (FoundString(tmpList[0],''zzzzz1'')<1) do'#13
  +#10'         tmpList.Delete(0);'#13#10'//      showmessage(''after search fo'
  +'r zzzzz1 ''+inttostr(tmpList.Count)+'' lines left'');'#13#10'      if tmpLi'
  +'st.Count>0 then'#13#10'      begin'#13#10'        // delete the zzzzz1 line'
  +#13#10'        tmpList.Delete(0);'#13#10'        // skip to the zzzzz2 line'
  +#13#10'        i:=0;'#13#10'        while i<tmpList.Count do'#13#10'        '
  +'begin'#13#10'          if FoundString(tmpList[i],''zzzzz2'')>0 then'#13#10
  +'          begin'#13#10'//            showmessage(''found zzzzz2 at line ''+'
  +'inttostr(i));'#13#10'            j:=i;'#13#10'            tmpList[i-1]:='''
  +''';     // replace preceding ''};'' with ''}'''#13#10'            i:=tmpLis'
  +'t.Count;'#13#10'          end'#13#10'          else'#13#10'          if (Fo'
  +'undString(tmpList[i],''kkkkk'')>0)'#13#10'          and (FoundString(tmpLis'
  +'t[i],''function'')>0) then'#13#10'          begin'#13#10'            tmpLis'
  +'t[i-1]:='''';    // remove the closing ''};'' - will be added back later.'
  +#13#10'           end;'#13#10'          i:=i+1;'#13#10'        end;'#13#10' '
  +'       // delete all after the zzzzz2 line'#13#10'        while j<tmpList.C'
  +'ount do'#13#10'        begin'#13#10'           tmpList.Delete(j);'#13#10'  '
  ,'      end;'#13#10'      end;'#13#10'      // now, tmplist has the set of ke'
  +'rnel procs, plus the graphical final kernel.'#13#10'      // These need sep'
  +'arating.'#13#10#13#10'      Pas2JSRaw:=tmpList.Text;'#13#10#13#10'      //s'
  +'howmessage(''raw=''+Pas2JSRaw);'#13#10#13#10'      // Now filter out any qu'
  +'alifiers that may have been added by pas2js'#13#10'      // eg. parameter v'
  +'ariable P1 will have translated to $impl.P1'#13#10'      // and also modify'
  +' calls to some maths ffunctions...'#13#10'      Pas2JSRaw := myStringReplac'
  +'e(Pas2JSRaw,''$impl.'','''',-1,-1);'#13#10'      Pas2JSRaw := myStringRepla'
  +'ce(Pas2JSRaw,''This.'',''this.'',-1,-1);'#13#10'      Pas2JSRaw := myString'
  +'Replace(Pas2JSRaw,''pas.System.Trunc'',''Math.floor'',-1,-1);'#13#10'      '
  +'Pas2JSRaw := myStringReplace(Pas2JSRaw,''pas.Math.Ceil'',''Math.ceil'',-1,-'
  +'1);'#13#10'      Pas2JSRaw := myStringReplace(Pas2JSRaw,''Math.log10'',''Ma'
  +'th.log'',-1,-1);'#13#10#13#10#13#10'      // Look for ''for'' loops.  Inser'
  +'t ''var'' ahead of the loop variable.   eg. for (var i=0; i<something; i++)'
  +#13#10'      // NB. for loops MUST also be coded using a constant as the com'
  +'parison element.'#13#10'      Pas2JSRaw := myStringReplace(Pas2JSRaw,'' for'
  +' ('','' for (var '',-1,-1);'#13#10'      Pas2JSRaw := myStringReplace(Pas2J'
  +'SRaw,'' for (var var'','' for (var '',-1,-1);'#13#10#13#10'      //!!!! che'
  +'ck for GPU invalid chars (eg $) here and throw error????'#13#10'      // al'
  +'so refs to rtl.'#13#10#13#10'      // now separate the kernel procs...'#13
  +#10'      //showmessage(Pas2JSRaw);'#13#10'      Pas2JSTrimmed:=TStringList.'
  +'Create;'#13#10'      tmpList.Text:= Pas2JSRaw;'#13#10'      j:=-1;'#13#10' '
  +'     tmp:='''';'#13#10'      for i:=0 to tmpList.Count-1 do'#13#10'      be'
  +'gin'#13#10'        if (FoundString(tmpList[i],''kkkkk'')>0) then'#13#10'   '
  +'     begin'#13#10'          if j>-1 then'#13#10'          begin'#13#10'    '
  +'        Pas2JSTrimmed.Add(tmp);'#13#10'          end;'#13#10'          j:=j'
  +'+1;'#13#10'          tmp:='''';'#13#10'        end'#13#10'        else'#13
  +#10'          tmp:=tmp+tmpList[i]+LineEnding;'#13#10'        if i=tmpList.Co'
  +'unt-1 then'#13#10'          Pas2JSTrimmed.Add(tmp);'#13#10'      end;'#13#10
  +#13#10'      tmpList.Free;'#13#10'    end;'#13#10'  end;'#13#10#13#10'  resu'
  +'lt:=Pas2JSTrimmed;'#13#10'  //FreeAndNil(Pas2JSTrimmed);'#13#10'end;'#13#10
  +#13#10'function TXGPUCanvas.FullXMLString:String;'#13#10'var'#13#10'  Pas2JS'
  +'Trimmed:TstringList;   // one string per kernel'#13#10'  tmp:String;'#13#10
  +'  FullString,HTMLTop,HTMLBottom:String;'#13#10'  {$ifdef JScript}'#13#10'  '
  +'GPURunnableHTML:String;'#13#10'  {$endif}'#13#10'begin'#13#10'  {$ifndef JS'
  +'cript}'#13#10'  if not (csDesigning in ComponentState) then'#13#10'  {$endi'
  +'f}'#13#10'  begin'#13#10'    Pas2JSTrimmed:=self.CompileAnimCode;'#13#10'  '
  +'  if Pas2JSTrimmed.Count<1 then'#13#10'    begin'#13#10'      result:='''';'
  +#13#10'      EXIT;'#13#10'    end;'#13#10#13#10'    // Get the set of kernel'
  +' output dimensions'#13#10'    // and wrap it with the GPU JS...'#13#10'    '
  +'//tmp:= GPUJSCode(Pas2JSTrimmed,self.Dimensions);'#13#10'    tmp:= GPUJSCod'
  +'e(Pas2JSTrimmed);'#13#10'    FullString:= tmp;'#13#10'    if self.Animated '
  +'then'#13#10'    begin'#13#10'      FullString:=FullString + GPUJSAnimationF'
  +'ooter;'#13#10'      {$ifdef JScript}'#13#10'      GPURunnableHTML:=GPURunna'
  +'bleHTML + GPUJSAnimationFooter;'#13#10'      {$endif}'#13#10'    end;'#13#10
  +#13#10#13#10'    tmp:=UnSubstituteSpecials(gpujs);'#13#10'    HTMLTop:='#13
  +#10'    ''<!DOCTYPE html>'' +  LineEnding'#13#10'    +''<html lang="en">'' +'
  +'  LineEnding'#13#10'    +''<head>'' +  LineEnding'#13#10'    +''  <meta cha'
  +'rset="utf-8"> '' +  LineEnding'#13#10'    +''  <title></title>'' +  LineEnd'
  +'ing'#13#10'    +''</head>'' +  LineEnding'#13#10'    +''<body  style="margi'
  +'n:0px; font:normal 12px Verdana, Arial, sans-serif;">'' +  LineEnding'#13#10
  +'    +''<script>''+tmp+''</script>  '' +  LineEnding'#13#10#13#10' //   +''<'
  +'script src="gpu-browser.min.js"></script>'' +  LineEnding'#13#10#13#10#13#10
  +'    +''<div  id="GPUCanvas" > ''+  LineEnding'#13#10'    +''<script>''+  Li'
  +'neEnding;'#13#10#13#10'    HTMLBottom:='#13#10'    ''</script>'' +  LineEnd'
  +'ing'#13#10'    +''</div> ''+  LineEnding'#13#10'    +''</body> '' +  LineEn'
  +'ding'#13#10'    +''</html> ''+  LineEnding;'#13#10#13#10#13#10'    {$ifdef '
  +'JScript}'#13#10'    GPURunnableHTML:='#13#10'    HTMLTop'#13#10'    +FullSt'
  +'ring +  LineEnding'#13#10'      +''stageArray=''+StringUtils.DelChars(self.'
  +'InitStageData,''"'')+'';   ''+LineEnding'#13#10'      +''window.postMessage'
  +'({"objid":"''+self.MyNode.NodeName+''", "mtype":"StartTheGPU", "pName":"", '
  +'"pValue":stageArray},"*"); ''+LineEnding'#13#10'    +HTMLBottom;'#13#10'   '
  +' {$endif}'#13#10#13#10'    FullString:='#13#10'      HTMLTop'#13#10'      +'
  +'FullString +  LineEnding'#13#10'      {$ifndef JScript}'#13#10'      + ''St'
  ,'artTheGPU();  ''+lineEnding'#13#10'      {$else}'#13#10'      +  ''window.p'
  +'arent.postMessage({"objid":"''+self.MyNode.NodeName+''","mtype":"GPUReady"}'
  +',"*"); '' + LineEnding'#13#10'      {$endif}'#13#10'      +HTMLBottom;'#13
  +#10#13#10#13#10'//    EditAttributeValue(''XMemo1'','''',''ItemValue'',FullS'
  +'tring,false);        //!!!! temporary for debugging'#13#10'    {$ifndef JSc'
  +'ript}'#13#10'    self.GeneratedHTML:=FullString;'#13#10'    {$else}'#13#10
  +'    // this is the same HTML string, but with a statement included to start'
  +' the GPU process (as this is done'#13#10'    // via a message from outside '
  +'the iframe, when embedded in the local page.'#13#10'    self.GeneratedHTML:'
  +'=GPURunnableHTML;'#13#10'    {$endif}'#13#10#13#10'  end;'#13#10'  result:='
  +'FullString;'#13#10'end;'#13#10#13#10#13#10'procedure TXGPUCanvas.setupGPUPa'
  +'ge;'#13#10'var'#13#10'  GPUString:String;'#13#10'begin'#13#10'  // called f'
  +'rom StartMyGPU'#13#10'  GPUString:=self.FullXMLString;'#13#10'  self.HTMLSo'
  +'urce:= '''';'#13#10'  self.HTMLSource:= GPUString;'#13#10'end;'#13#10#13#10
  +'function TXGPUCanvas.GetParamNumValue(pName:String):TNumArray;'#13#10'var'
  +#13#10'  i:integer;'#13#10'  tmp:String;'#13#10'  pval:TNumArray;'#13#10'beg'
  +'in'#13#10'  for i:=0 to length(ParamNumArray)-1 do'#13#10'    if ParamNumAr'
  +'ray[i].ParamName=pName then'#13#10'    begin'#13#10'      pval:=ParamNumArr'
  +'ay[i].ParamValue;'#13#10'    end;'#13#10'  result:=pval;'#13#10'end;'#13#10
  +#13#10'function TXGPUCanvas.GetConstIntValue(pName:String):integer;'#13#10'v'
  +'ar'#13#10'  i:integer;'#13#10'  tmp:String;'#13#10'  pval:integer;'#13#10'b'
  +'egin'#13#10'  for i:=0 to length(ConstIntArray)-1 do'#13#10'    if ConstInt'
  +'Array[i].ConstName=pName then'#13#10'    begin'#13#10'      pval:=ConstIntA'
  +'rray[i].ConstValue;'#13#10'    end;'#13#10'  result:=pval;'#13#10'end;'#13
  +#10#13#10'procedure TXGPUCanvas.SetParamNumValue(pName:String;pValue:TNumArr'
  +'ay;ForwardToWidget:Boolean);'#13#10'var'#13#10'  i,j:integer;'#13#10'  tmp:'
  +'String;'#13#10'  myurl:string;'#13#10'begin'#13#10'  for i:=0 to length(Par'
  +'amNumArray)-1 do'#13#10'    if uppercase(ParamNumArray[i].ParamName)=upperc'
  +'ase(pName) then'#13#10'    begin'#13#10'      SetLength(ParamNumArray[i].Pa'
  +'ramValue,length(pValue));'#13#10'      for j:=0 to length(pValue)-1 do'#13
  +#10'        ParamNumArray[i].ParamValue[j]:=pValue[j];'#13#10#13#10'      if'
  +' (ForwardToWidget)'#13#10'      and (self.Active)'#13#10'      and (self.HT'
  +'MLSource<>'''')'#13#10'      and (self.HTMLSource<>''about:blank'') then'#13
  +#10'      begin'#13#10'        {$ifndef JScript}'#13#10'        {$ifdef Chro'
  +'mium}'#13#10'        myurl:= myChromium.Browser.MainFrame.GetURL();'#13#10
  +'        if myurl<>''about:blank'' then'#13#10'        begin'#13#10'        '
  +'  tmp:=NumArrayToJSONString(pValue);'#13#10'          tmp:=''RunCode("''+pN'
  +'ame+''=''+tmp+'';")'';'#13#10'          myChromium.Browser.MainFrame.Execut'
  +'eJavaScript(tmp, myurl, 0);'#13#10'        end;'#13#10'        {$else}'#13
  +#10'        //!!!! need to refresh the GPU canvas display when it''s on a se'
  +'parate browser page....  ??'#13#10'        myurl:='''';'#13#10'        {$en'
  +'dif}'#13#10'        {$else}'#13#10'        asm'#13#10'          var ob=docu'
  +'ment.getElementById(this.NameSpace+this.NodeName+''Contents'');'#13#10'    '
  +'      if (ob!=null) {'#13#10'            //alert(''found iframe. posting pa'
  +'ram message'');'#13#10'            ob.contentWindow.postMessage({"objid":th'
  +'is.NodeName, "mtype":"SetNumParam", "pName":pName, "pValue":pValue},"*");'
  +#13#10'            }'#13#10'        end;'#13#10'        {$endif}'#13#10'    '
  +'  end;'#13#10#13#10'    end;'#13#10'end;'#13#10#13#10'procedure TXGPUCanvas'
  +'.SetParam2DNumValue(pName:String;pValue:T2DNumArray;ForwardToWidget:Boolean'
  +');'#13#10'var'#13#10'  i,j,k:integer;'#13#10'  tmp:String;'#13#10'  myurl:s'
  +'tring;'#13#10'begin'#13#10'  for i:=0 to length(Param2DNumArray)-1 do'#13#10
  +'    if uppercase(Param2DNumArray[i].ParamName)=uppercase(pName) then'#13#10
  +'    begin'#13#10'      SetLength(Param2DNumArray[i].ParamValue,length(pValu'
  +'e));'#13#10'      for j:=0 to length(pValue)-1 do'#13#10'      begin'#13#10
  +'        setLength(Param2DNumArray[i].ParamValue[j],length(pValue[j]));'#13
  +#10'        for k:=0 to length(pValue[0])-1 do'#13#10'          Param2DNumAr'
  +'ray[i].ParamValue[j,k]:=pValue[j,k];'#13#10'      end;'#13#10#13#10'      i'
  +'f (ForwardToWidget)'#13#10'      and (self.Active)'#13#10'      and (self.H'
  +'TMLSource<>'''')'#13#10'      and (self.HTMLSource<>''about:blank'') then'
  +#13#10'      begin'#13#10'        {$ifndef JScript}'#13#10'        {$ifdef C'
  +'hromium}'#13#10'        myurl:= myChromium.Browser.MainFrame.GetURL();'#13
  +#10'        if myurl<>''about:blank'' then'#13#10'        begin'#13#10'     '
  +'     tmp:=Num2dArrayToString(pValue);'#13#10'          tmp:=''RunCode("''+p'
  +'Name+''=''+tmp+'';")'';'#13#10'          myChromium.Browser.MainFrame.Execu'
  ,'teJavaScript(tmp, myurl, 0);'#13#10'        end;'#13#10'        {$else}'#13
  +#10'        //!!!! need to refresh the GPU canvas display when it''s on a se'
  +'parate browser page....  ??'#13#10'        myurl:='''';'#13#10'        {$en'
  +'dif}'#13#10'        {$else}'#13#10'        asm'#13#10'          var ob=docu'
  +'ment.getElementById(this.NameSpace+this.NodeName+''Contents'');'#13#10'    '
  +'      if (ob!=null) {'#13#10'            //alert(''found iframe. posting pa'
  +'ram message'');'#13#10'            ob.contentWindow.postMessage({"objid":th'
  +'is.NodeName, "mtype":"SetNumParam", "pName":pName, "pValue":pValue},"*");'
  +#13#10'            }'#13#10'        end;'#13#10'        {$endif}'#13#10'    '
  +'  end;'#13#10#13#10'    end;'#13#10'end;'#13#10#13#10'procedure TXGPUCanvas'
  +'.SetConstIntValue(pName:String;pValue:integer);'#13#10'var'#13#10'  i:integ'
  +'er;'#13#10'  tmp:String;'#13#10'  myurl:string;'#13#10'begin'#13#10'  for i'
  +':=0 to length(ConstIntArray)-1 do'#13#10'    if uppercase(ConstIntArray[i].'
  +'ConstName)=uppercase(pName) then'#13#10'    begin'#13#10'      ConstIntArra'
  +'y[i].ConstValue:=pValue;'#13#10#13#10'    end;'#13#10'end;'#13#10#13#10'pro'
  +'cedure TXGPUCanvas.SetAnimationCode(AValue:string);'#13#10'var'#13#10'  GPU'
  +'String:string;'#13#10'  FullString:String;'#13#10'begin'#13#10'  {$ifndef J'
  +'Script}'#13#10'  if not (csDesigning in componentState) then'#13#10'  {$end'
  +'if}'#13#10'  begin'#13#10'    GPUString:=AValue;'#13#10#13#10'    //showmes'
  +'sage(''Frame setXMLString ''+SVGString);'#13#10'    myNode.SetAttributeValu'
  +'e(''AnimationCode'',GPUString);'#13#10#13#10'    if (self.Active=true)'#13
  +#10'    and (not StartingUp) then'#13#10'    begin'#13#10'      FullString:='
  +'self.FullXMLString;'#13#10'      myNode.SetAttributeValue(''HTMLSource'',Fu'
  +'llString);'#13#10'      //showmessage(''SetAnimationCode RedisplayFrame'');'
  +#13#10'      RedisplayFrame;'#13#10#13#10'    end;'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'procedure TXGPUCanvas.StartMyGPU;'#13#10'var'#13#10'  h,w:integ'
  +'er;'#13#10'begin'#13#10'  // refresh the actual h/w attributes'#13#10'  h:='
  +'self.ActualHeight;'#13#10'  w:=self.ActualWidth;'#13#10#13#10'  // clear th'
  +'e output data'#13#10'  setlength(self.GPUOutputArray,0);'#13#10'  setlength'
  +'(self.GPUStageArray,0);'#13#10'  self.GPUStageString:='''';'#13#10'  self.G'
  +'PUOutputString:='''';'#13#10#13#10'  {$ifndef JScript}'#13#10'  if not (csD'
  +'esigning in componentState) then'#13#10'  {$endif}'#13#10'  begin'#13#10'  '
  +'  HandleEvent(''OnStart'',self.myNode.NodeName,self.myNode.NameSpace,'''');'
  +#13#10'    SetupGPUPage;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TX'
  +'GPUCanvas.StopMyGPU(isdestroying:Boolean);'#13#10'var'#13#10'  tmp,doJS,myu'
  +'rl:String;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  if not (csDesig'
  +'ning in componentState) then'#13#10'  {$endif}'#13#10'  begin'#13#10'    //'
  +' stop the gpu loop'#13#10'    doJS:=''running=false;'';'#13#10'    if self.'
  +'Animated then'#13#10'      doJS:=doJS + '' clearInterval(GPUIntervalRunner)'
  +';ClearDown();'';'#13#10'    if isdestroying then'#13#10'      doJS:=doJS + '
  +'LineEnding + myNode.NodeName+''.destroy();'';'#13#10'    {$ifndef JScript}'
  +#13#10'    {$ifdef Chromium}'#13#10'    if myChromium<>nil then'#13#10'     '
  +' if myChromium.Browser<>nil then'#13#10'      begin'#13#10'        myurl:= '
  +'myChromium.Browser.MainFrame.GetURL();'#13#10'        if myurl<>''about:bla'
  +'nk'' then'#13#10'        begin'#13#10'          tmp:=''RunCode("''+doJS+''"'
  +')'';'#13#10'          myChromium.Browser.MainFrame.ExecuteJavaScript(tmp, m'
  +'yurl, 0);'#13#10'        end;'#13#10'      end;'#13#10'      // make a chan'
  +'ge to the HTMLSource text, so that the GPU code will be fully rebuilt'#13#10
  +'      // when/if the GPU is re-started. (see SetupGPUPage and SetHTMLSource'
  +').'#13#10'      myNode.SetAttributeValue(''HTMLSource'',myNode.GetAttribute'
  +'(''HTMLSource'',true).AttribValue + ''/**/'');'#13#10'    {$else}'#13#10'  '
  +'  //!!!!  external browser ??'#13#10'    {$endif}'#13#10'    {$else}'#13#10
  +'    asm'#13#10'    var ob=document.getElementById(this.NameSpace+this.NodeN'
  +'ame+''Contents'');'#13#10'    if (ob!=null) {'#13#10'      ob.contentWindow'
  +'.postMessage({"objid":this.NodeName, "mtype":"execCode", "code":doJS},"*");'
  +#13#10'      }'#13#10'    end;'#13#10'    self.HTMLSource:='''';   //about:b'
  +'lank??  clear the canvas??'#13#10'    {$endif}'#13#10#13#10'  end;'#13#10'e'
  +'nd;'#13#10#13#10'//------------------------------- SetActive --------------'
  +'--------------'#13#10'// Setting the Active flag will build and run the GPU'
  +' code inside the IFrame'#13#10'//------------------------------------------'
  +'----------------------------'#13#10'procedure TXGPUCanvas.SetActive(AValue:'
  +'Boolean);'#13#10'begin'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10' '
  +'   myNode.SetAttributeValue(''Active'',myBoolToStr(AValue),''Boolean'');'#13
  +#10'    if (StartingUp=false) and (AValue=true) then'#13#10'    begin'#13#10
  ,'      self.StartMyGPU;'#13#10'    end'#13#10'    else'#13#10'      self.Sto'
  +'pMyGPU(false);'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'procedure TXGPU'
  +'Canvas.SetAnimated(AValue:Boolean);'#13#10'begin'#13#10'  myNode.SetAttribu'
  +'teValue(''Animated'',myBoolToStr(AValue),''Boolean'');'#13#10'end;'#13#10'p'
  +'rocedure TXGPUCanvas.SetParamNumList(AValue:string);'#13#10'var'#13#10'  pN'
  +'ames:TStringList;'#13#10'  i:integer;'#13#10'begin'#13#10'  myNode.SetAttri'
  +'buteValue(''ParamNumList'',AValue,''String'');'#13#10'  SetLength(ParamNumA'
  +'rray,0);'#13#10#13#10'  //use this comma-delimited list to initialise Param'
  +'Array.'#13#10'  if AValue<>'''' then'#13#10'  begin'#13#10'    pNames:=TStr'
  +'ingList.Create;'#13#10'    pNames.StrictDelimiter:=true;'#13#10'    pNames.'
  +'LineBreak:='','';'#13#10'    pNames.Text:=AValue;'#13#10'    SetLength(Para'
  +'mNumArray,pNames.Count);'#13#10'    for i:=0 to pNames.Count-1 do'#13#10'  '
  +'  begin'#13#10'      ParamNumArray[i].ParamName:=pNames[i];'#13#10'      Se'
  +'tLength(ParamNumArray[i].ParamValue,1);'#13#10'      ParamNumArray[i].Param'
  +'Value[0]:=0;'#13#10'    end;'#13#10'    pNames.Free;'#13#10'  end;'#13#10#13
  +#10'end;'#13#10'procedure TXGPUCanvas.SetParam2DNumList(AValue:string);'#13
  +#10'var'#13#10'  pNames:TStringList;'#13#10'  i:integer;'#13#10'begin'#13#10
  +'  myNode.SetAttributeValue(''Param2DNumList'',AValue,''String'');'#13#10'  '
  +'SetLength(Param2DNumArray,0);'#13#10#13#10'  //use this comma-delimited lis'
  +'t to initialise Param2DNumArray.'#13#10'  if AValue<>'''' then'#13#10'  beg'
  +'in'#13#10'    pNames:=TStringList.Create;'#13#10'    pNames.StrictDelimiter'
  +':=true;'#13#10'    pNames.LineBreak:='','';'#13#10'    pNames.Text:=AValue;'
  +#13#10'    SetLength(Param2DNumArray,pNames.Count);'#13#10'    for i:=0 to p'
  +'Names.Count-1 do'#13#10'    begin'#13#10'      Param2DNumArray[i].ParamName'
  +':=pNames[i];'#13#10'      SetLength(Param2DNumArray[i].ParamValue,1);'#13#10
  +'      SetLength(Param2DNumArray[i].ParamValue[0],1);'#13#10'      Param2DNu'
  +'mArray[i].ParamValue[0,0]:=0;'#13#10'    end;'#13#10'    pNames.Free;'#13#10
  +'  end;'#13#10#13#10'end;'#13#10'procedure TXGPUCanvas.SetConstIntList(AValu'
  +'e:string);'#13#10'var'#13#10'  pNames:TStringList;'#13#10'  i:integer;'#13
  +#10'begin'#13#10'  myNode.SetAttributeValue(''ConstIntList'',AValue,''String'
  +''');'#13#10'  SetLength(ConstIntArray,0);'#13#10#13#10'  //use this comma-d'
  +'elimited list to initialise ParamArray.'#13#10'  if AValue<>'''' then'#13#10
  +'  begin'#13#10'    pNames:=TStringList.Create;'#13#10'    pNames.StrictDeli'
  +'miter:=true;'#13#10'    pNames.LineBreak:='','';'#13#10'    pNames.Text:=AV'
  +'alue;'#13#10'    SetLength(ConstIntArray,pNames.Count);'#13#10'    for i:=0'
  +' to pNames.Count-1 do'#13#10'    begin'#13#10'      ConstIntArray[i].ConstN'
  +'ame:=pNames[i];'#13#10'      ConstIntArray[i].ConstValue:=0;'#13#10'    end'
  +';'#13#10'    pNames.Free;'#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'proc'
  +'edure TXGPUCanvas.SetInitStageData(AValue:string);'#13#10'begin'#13#10'  my'
  +'Node.SetAttributeValue(''InitStageData'',AValue,''String'');'#13#10'end;'#13
  +#10'procedure TXGPUCanvas.SetKernelXDims(AValue:string);'#13#10'begin'#13#10
  +'  myNode.SetAttributeValue(''KernelXDims'',AValue,''String'');'#13#10'end;'
  +#13#10'procedure TXGPUCanvas.SetKernelYDims(AValue:string);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''KernelYDims'',AValue,''String'');'#13#10'en'
  +'d;'#13#10'procedure TXGPUCanvas.SetKernelZDims(AValue:string);'#13#10'begin'
  +#13#10'  myNode.SetAttributeValue(''KernelZDims'',AValue,''String'');'#13#10
  +'end;'#13#10'procedure TXGPUCanvas.SetMaxIterations(AValue:integer);'#13#10
  +'begin'#13#10'  myNode.SetAttributeValue(''MaxIterations'',IntToStr(AValue),'
  +'''Integer'');'#13#10'end;'#13#10'procedure TXGPUCanvas.SetStartIteration(AV'
  +'alue:integer);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''StartIterat'
  +'ion'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10'procedure TXGPUCanv'
  +'as.SetNumFrames(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttributeV'
  +'alue(''NumFrames'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10'proced'
  +'ure TXGPUCanvas.SetMaxFramesPerSec(AValue:integer);'#13#10'begin'#13#10'  m'
  +'yNode.SetAttributeValue(''MaxFramesPerSec'',IntToStr(AValue),''Integer'');'
  +#13#10'end;'#13#10'procedure TXGPUCanvas.SetNumKernels(AValue:integer);'#13
  +#10'begin'#13#10'  myNode.SetAttributeValue(''NumKernels'',IntToStr(AValue),'
  +'''Integer'');'#13#10'end;'#13#10#13#10#13#10#13#10'begin'#13#10'  // this i'
  +'s the set of node attributes that each GPUCanvas instance will have (added '
  +'to the set inherited from TXIFrame).'#13#10'  AddWrapperDefaultAttribs(myDe'
  +'faultAttribs);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''ActualHeight'
  +''',''Integer'','''','''',true,false);'#13#10'  AddDefaultAttribute(myDefaul'
  +'tAttribs,''ActualWidth'',''Integer'','''','''',true,false);'#13#10'  AddDef'
  +'aultAttribute(myDefaultAttribs,''FrameWidth'',''String'',''300'','''',false'
  ,');'#13#10'  AddDefaultAttribute(myDefaultAttribs,''FrameHeight'',''String'''
  +',''300'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Borde'
  +'r'',''Boolean'',''True'','''',false);'#13#10'  AddDefaultAttribute(myDefaul'
  +'tAttribs,''SpacingAround'',''Integer'',''0'','''',false);'#13#10'  AddDefau'
  +'ltAttribute(myDefaultAttribs,''LabelPos'',''String'',''Top'','''',false);'
  +#13#10'  AddDefaultAttribute(myDefaultAttribs,''LabelText'',''String'',''GPU'
  +' Canvas'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''HTML'
  +'Source'',''String'','''','''',false,false);'#13#10'  AddDefaultAttribute(my'
  +'DefaultAttribs,''Active'',''Boolean'',''False'','''',false,false);'#13#10' '
  +' AddDefaultAttribute(myDefaultAttribs,''Animated'',''Boolean'',''False'','''
  +''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''ParamNumList'','
  +'''String'','''',''List of numeric parameters (1D arrays) to be passed in to'
  +' kernels'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Param2DN'
  +'umList'',''String'','''',''List of numeric parameters (2D arrays) to be pas'
  +'sed in to kernels'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,'
  +'''ConstIntList'',''String'','''',''List of integer constants to be passed i'
  +'n to kernels'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxI'
  +'terations'',''Integer'',''512'',''Any loops defined inside a kernel must ha'
  +'ve a maximum iteration count defined by MaxIterations'',false);'#13#10'  Ad'
  +'dDefaultAttribute(myDefaultAttribs,''StartIteration'',''Integer'',''1'',''I'
  +'nitial value for AnimationCounterValue'',false);'#13#10'  AddDefaultAttribu'
  +'te(myDefaultAttribs,''NumFrames'',''Integer'',''100'',''Number of frames af'
  +'ter which AnimationCounterValue resets to 0'',false);'#13#10'  AddDefaultAt'
  +'tribute(myDefaultAttribs,''MaxFramesPerSec'',''Integer'',''10'',''Target fr'
  +'ame rate (may be slower if kernel processing times are long)'',false);'#13
  +#10'  AddDefaultAttribute(myDefaultAttribs,''AnimationCode'',''String'','''''
  +','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''NumKernels'','
  +'''Integer'',''0'',''Number of nested non-graphical kernels'',false);'#13#10
  +'  AddDefaultAttribute(myDefaultAttribs,''InitStageData'',''String'',''[[["1'
  +'"]]]'',''3D Array string for input to the first non-graphical kernel'',fals'
  +'e,false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''KernelXDims'',''S'
  +'tring'',''[]'',''x-dimensions of output from the non-graphical kernels eg. '
  +'[100,150] for 2 kernels'',false);'#13#10'  AddDefaultAttribute(myDefaultAtt'
  +'ribs,''KernelYDims'',''String'',''[]'',''y-dimensions of output from the no'
  +'n-graphical kernels eg. [100,150] for 2 kernels'',false);'#13#10'  AddDefau'
  +'ltAttribute(myDefaultAttribs,''KernelZDims'',''String'',''[]'',''z-dimensio'
  +'ns of output from the non-graphical kernels eg. [1,2] for 2 kernels'',false'
  +');'#13#10'  AddDefaultsToTable(MyNodeType,myDefaultAttribs);'#13#10#13#10' '
  +' AddAttribOptions(MyNodeType,''Alignment'',AlignmentOptions);'#13#10'  AddA'
  +'ttribOptions(MyNodeType,''LabelPos'',LabelPosOptions);'#13#10'  {$IFndef JS'
  +'cript}'#13#10'  RegisterClass(TXGPUCanvas);'#13#10'  AddNodeFuncLookup(MyNo'
  +'deType,@CreateGPUCanvasWidget);'#13#10'  {$else}'#13#10'  AddNodeFuncLookup'
  +'(MyNodeType,@CreateInterfaceObjGPU,@CreateGPUCanvasWidget);'#13#10'  {$endi'
  +'f}'#13#10'  SuppressDesignerProperty(MyNodeType,''ContainerHeight'');'#13#10
  +'  SuppressDesignerProperty(MyNodeType,''ContainerWidth'');'#13#10'  Suppres'
  +'sDesignerProperty(MyNodeType,''SuspendRefresh'');'#13#10'  SuppressDesigner'
  +'Property(MyNodeType,''BgColor'');'#13#10'  SuppressDesignerProperty(MyNodeT'
  +'ype,''HTMLSource'');'#13#10#13#10#13#10'end.'#13#10#13#10'///////// unused '
  +'experiments ........ //////////////////////////'#13#10#13#10'// +''     con'
  +'st ''+self.MyNode.NodeName+'' = new GPU({mode: ''''webgl''''});   ''+LineEn'
  +'ding;'#13#10' //const gpu = new GPU({ mode: ''gpu'' });'#13#10'// +''     c'
  +'onst ''+self.MyNode.NodeName+'' = new GPU({mode: ''''cpu''''});   ''+LineEn'
  +'ding;'#13#10#13#10'(*'#13#10'str:=str'#13#10'+''  ParamsAsString=function()'
  +' { ''+LineEnding'#13#10'// numeric parameters'#13#10'+''     var s="nums =['
  +'"; ''+LineEnding;'#13#10'cma:=''""'';'#13#10'for i:=0 to length(self.ParamN'
  +'umArray)-1 do'#13#10'begin'#13#10'  str:=str+''s = s+''+cma+''+"["+''+Param'
  +'NumArray[i].ParamName+''.toString()+"]";''+LineEnding ;       //eg. s = s+"'
  +',"+"["+p1.toString()+"]";'#13#10'  cma:=''","'';'#13#10'end;'#13#10'str:=st'
  +'r+''    s=s+"]";''+LineEnding'#13#10'// image parameters'#13#10'+''     s=s'
  +'+" imgs =["; ''+LineEnding;'#13#10'cma:=''""'';'#13#10'for i:=0 to length(s'
  +'elf.ParamImgArray)-1 do'#13#10'begin'#13#10'  str:=str+''    s = s+''+cma+'
  +'''+"["+''+ParamImgArray[i].ParamName+''.toString()+"]";''+LineEnding ;     '
  +'  //eg. s = s+","+"["+p1.toString()+"]";'#13#10'  cma:=''","'';'#13#10'end;'
  +#13#10'str:=str+''    s=s+"]";''+LineEnding;'#13#10#13#10'str:=str+''    ret'
  ,'urn(s);''+LineEnding;'#13#10'str:=str+''}''+LineEnding;'#13#10'*)'#13#10#13
  +#10'//  {$ifdef JScript}'#13#10'//  str:=str'#13#10'//  +''  function PostPa'
  +'ramMessages(objid) {''  + LineEnding'#13#10'//  +''     var pv=[0]; ''  + L'
  +'ineEnding;'#13#10'//  for i:=0 to length(self.ParamNumArray)-1 do'#13#10'//'
  +'  begin'#13#10'//  str:=str'#13#10'//  +''          pv=''+ParamNumArray[i].'
  +'ParamName+'';''  + LineEnding'#13#10'////   +''          alert("posting msg'
  +'. pvalue="+pv);''  + LineEnding'#13#10'//  +''          parent.postMessage('
  +'{"objid":objid,"mtype":"FrameDone","pName":"''+ParamNumArray[i].ParamName+'
  +'''","pValue":pv},"*"); '' + LineEnding;'#13#10'//  end;'#13#10'//  //!!!! A'
  +'dd integers and images.....'#13#10'//  str:=str+''}''+LineEnding;'#13#10'//'
  +'  {$endif}'#13#10#13#10'//  +''  function FetchParamValuesFromParent()  {'''
  +' +LineEnding'#13#10' // +''    console.log("param 0 is "+parent.window.pas.'
  +'XGPUCanvas.GetParam(''''''+myNode.NodeName+'''''',0)); ''+LineEnding'#13#10
  +' // +''    console.log("param 0 is "+parent.testnum); ''+LineEnding'#13#10
  +'//  +''  }  ''+LineEnding;'#13#10#13#10'//   {$ifndef JScript}'#13#10'//   '
  +'// Desktop XIDE'#13#10'//   +''        var msg = ParamsAsString(); '' + Lin'
  +'eEnding'#13#10'//  // +''        alert("changing title to:"+msg); '' + Line'
  +'Ending'#13#10'//  // +''        document.title = "params ="+msg; '' + LineE'
  +'nding'#13#10'//  {$ifdef Chromium}'#13#10'//  // Desktop XIDE with CEF4'#13
  +#10'//  +''           var ob=getcomponent("paramString"); '' + LineEnding'#13
  +#10'//  +''           if (ob!=null) {ob.innerHTML=msg;} '' + LineEnding'#13
  +#10'//  // change the document title to trigger a cef titlechange event...'
  +#13#10'//  +''           document.title = "''+myNode.NodeName+'' "+Animation'
  +'CounterValue;''  + LineEnding'#13#10'//  {$else}'#13#10'//  // Desktop XIDE'
  +' - GPUCanvas running in external browser page - using polling to get title '
  +'changes'#13#10'//  {$endif}'#13#10'//   {$else}'#13#10'//   // XIDE in Brow'
  +'ser Environment'#13#10'//   //  +''      console.log("posting FrameDone mes'
  +'sage");''  + LineEnding'#13#10'//   //+''          PostParamMessages("''+se'
  +'lf.MyNode.NodeName+''");''  +LineEnding'#13#10'//   {$endif}'#13#10'//   +'
  +'''    }); ''  + LineEnding'#13#10'//   +''  } '' + LineEnding;'#13#10'//'#13
  +#10#13#10'//  .... in DoFrame.....'#13#10'//   {$ifdef JScript}'#13#10'//   '
  +'+''            try {    ''  + LineEnding'#13#10'//   +''              Fetch'
  +'ParamValuesFromParent();  ''  + LineEnding'#13#10'//   +''            }catc'
  +'h(err){alert(err.message); clearInterval(AnimationFrameID);}  ''  + LineEnd'
  +'ing'#13#10'//   {$endif}'#13#10#13#10'// ....... JS Mode.....'#13#10'//proc'
  +'edure HandleGPUMessage(gpumsg:TGPUMessage);'#13#10'//var'#13#10'//  ItemNod'
  +'e:TdataNode;'#13#10'//begin'#13#10'//  if (gpumsg.objid<>'''') then'#13#10
  +'//  begin'#13#10'//    //showmessage(''HandleMessage XGPUCanvas: ''+gpumsg.'
  +'objid+'' ''+gpumsg.mtype+'' ''+NumArrayToJSONString(gpumsg.pvalue));'#13#10
  +'//     //this is a notification sent out from within a GPU frame.'#13#10'//'
  +'     ItemNode:=findDataNodeById(systemnodetree,gpumsg.objid,false);'#13#10
  +'//     if ItemNode<>nil then'#13#10'//     begin'#13#10'//       // set the'
  +' ParamArray values from the message'#13#10'//       TXGPUCanvas(ItemNode).S'
  +'etParamNumValue(gpumsg.pName, gpumsg.pValue,false);     //!!!! + int + img'
  +#13#10'////      showmessage(TXGPUCanvas(ItemNode).ParamNumArrayToString);'
  +#13#10'//       handleEvent(''OnNewFrame'',ItemNode.NodeName, '''');'#13#10
  +'//     end;'#13#10'//  end;'#13#10'//'#13#10'//end;'#13#10#13#10'(*'#13#10
  +'function TXGPUCanvas.SetParamsFromMessage(msg:String):TNumArray;'#13#10'// '
  +'msg has format ''params =[[n,n,n],[n,n,n]....]'#13#10'//                ''i'
  +'nts =[[i,i,i],[i,i,i]....]'#13#10'//                ''strs =[[s,s,s],[s,s,s'
  +']....]'''#13#10'var'#13#10'  numstr,intstr,imgstr, str, lastbit:string;'#13
  +#10'  n,i,s,j,k:integer;'#13#10'  sets:TStringList;'#13#10'  bits:TStringLis'
  +'t;'#13#10'  bits2:TStringList;'#13#10'begin'#13#10'  str:=msg;'#13#10'  n:='
  +'FoundString(msg,''nums ='');'#13#10'  i:=FoundString(msg,''ints ='');'#13#10
  +'  s:=FoundString(msg,''strs ='');'#13#10'  if (n>0)'#13#10'  and (i>0)'#13
  +#10'  and (s>0) then'#13#10'  begin'#13#10'    imgstr:=str;'#13#10'    Delet'
  +'e(imgstr,1,s+5);'#13#10#13#10'    Delete(str,s,length(str)-s);'#13#10'    i'
  +'ntstr:=str;'#13#10'    Delete(intstr,1,i+5);'#13#10#13#10'    Delete(str,i,'
  +'length(str)-i);'#13#10'    numstr:=str;'#13#10'    Delete(numstr,1,i+5);'#13
  +#10#13#10'    i:=FoundString(numstr,''['');'#13#10'    if i>0 then'#13#10'  '
  +'  begin'#13#10'      Delete(numstr,1,i+1);             //  ''n,n,n],[n,n,n]'
  +'....]'''#13#10'      if numstr<>'''' then'#13#10'      begin'#13#10'       '
  +' bits:=stringsplit(numstr,''],['');  //  ''n,n,n /   n,n,n  / ....   ]]'''
  +#13#10'        lastbit:=bits[bits.count-1];'#13#10'        if length(lastbit'
  ,')>1 then'#13#10'        begin'#13#10'          Delete(lastbit,length(lastbi'
  +'t)-1,2);'#13#10'          bits[bits.count-1]:=lastbit;'#13#10'          for'
  +' j:=0 to bits.count-1 do'#13#10'          begin'#13#10'            bits2:=s'
  +'tringsplit(bits[j],'','');'#13#10'            for k:=0 to bits2.count-1 do'
  +#13#10'              self.ParamNumArray[j].ParamValue[k]:=StrToFloat(bits2[k'
  +']);'#13#10'          end;'#13#10'        end;'#13#10'      end;'#13#10'    '
  +'end;'#13#10#13#10'    i:=FoundString(imgstr,''['');'#13#10'    if i>0 then'
  +#13#10'    begin'#13#10'      Delete(imgstr,1,i+1);             //  ''i,i,i]'
  +',[i,i,i]....]'''#13#10'      if imgstr<>'''' then'#13#10'      begin'#13#10
  +'        bits:=stringsplit(imgstr,''],['');  //  ''i,i,i /   i,i,i  / ....  '
  +' ]]'''#13#10'        lastbit:=bits[bits.count-1];'#13#10'        if length('
  +'lastbit)>1 then'#13#10'        begin'#13#10'          Delete(lastbit,length'
  +'(lastbit)-1,2);'#13#10'          bits[bits.count-1]:=lastbit;'#13#10'      '
  +'    for j:=0 to bits.count-1 do'#13#10'          begin'#13#10'            b'
  +'its2:=stringsplit(bits[j],'','');'#13#10'            for k:=0 to bits2.coun'
  +'t-1 do'#13#10'              self.ParamImgArray[j].ParamValue[k]:='''';  //!'
  +'!!! ??'#13#10'          end;'#13#10'        end;'#13#10'      end;'#13#10' '
  +'   end;'#13#10#13#10#13#10#13#10'  end;'#13#10#13#10'end;'#13#10'*)'#13#10
  +#13#10#13#10'//function TXGPUCanvas.ParamNumArrayToString:String;    // (use'
  +'d for debugging)'#13#10'//var'#13#10'//  i,j:integer;'#13#10'//  str:String'
  +';'#13#10'//begin'#13#10'//  str:=''['';'#13#10'//  for i:=0 to length(Param'
  +'NumArray)-1 do'#13#10'//  begin'#13#10'//    if i>0 then str:=str+'','';'#13
  +#10'//    str:=str+ParamNumArray[i].ParamName+'':['';'#13#10'//    for j:=0 '
  +'to length(ParamNumArray[i].ParamValue)-1 do'#13#10'//    begin'#13#10'//   '
  +'   if j>0 then str:=str+'','';'#13#10'//      str:=str+FloatToStr(ParamNumA'
  +'rray[i].ParamValue[j]);'#13#10'//    end;'#13#10'//    str:=str+'']'';'#13
  +#10'//  end;'#13#10'//  str:=str+'']'';'#13#10'//  result:=str;'#13#10'//end'
  +';'#13#10#13#10#13#10#13#10#13#10#13#10#13#10
]);
LazarusResources.Add('xgpueditor','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XGPUEditor;'
  +#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'interface'#13#10'uses'#13#10' '
  +'   Classes, SysUtils, TypInfo, StringUtils, NodeUtils, XIFrame, Math,'#13#10
  +'    UtilsJSCompile, XForm, XCode, XButton, XVBox, XHBox, XTabControl, XMemo'
  +', XComboBox, XEditBox,'#13#10'    X3DTable, EventsInterface,'#13#10'    Web'
  +'TranspilerUtils,'#13#10'  {$ifndef JScript}'#13#10'    LResources, Forms, C'
  +'ontrols, StdCtrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls,'#13#10
  +'    LazsUtils, LCLIntf,'#13#10'    LCLType, gettext,'#13#10'    {$ifdef Chr'
  +'omium}'#13#10'    uCEFChromium, uCEFInterfaces, uCEFTypes,'#13#10'    {$end'
  +'if}'#13#10'  {$else}'#13#10'    webfilecache, pas2jswebcompiler,'#13#10'   '
  +' HTMLUtils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events;'#13#10#13#10
  +'type TAnimCodeRec = record'#13#10'  CodeBlock:TStringList;'#13#10'end;'#13
  +#10'type TAnimCodeArray = Array of TAnimCodeRec;'#13#10'type TDimsArray = Ar'
  +'ray of array of integer;'#13#10'type  TGPUEventClass = class'#13#10'    pro'
  +'cedure CloseCodeEditor(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStri'
  +'ng);'#13#10'    procedure GPUCodeEditHandleClickMessage(e:TEventStatus;node'
  +'ID: AnsiString; myValue: AnsiString);'#13#10'    procedure LaunchGPUHTML(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure'
  +' GPUComboBoxChange(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'    procedure TabChange(e:TEventStatus;nodeID: AnsiString; myValue: A'
  +'nsiString);'#13#10'    {$ifndef JScript}'#13#10'    procedure EditorResize('
  +'Sender: TObject);'#13#10'    {$endif}'#13#10'  end;'#13#10#13#10'var'#13#10
  +'  GPUEditorForm:TXForm;'#13#10'  GPUEditorTabControl:TXTabControl;'#13#10' '
  +' GPUCodeEditor:TXCode;'#13#10'  GPUComboBox:TXComboBox;'#13#10'  GPUEditBox'
  +':TXEditBox;'#13#10'  GPUMemo:TXMemo;'#13#10'  GPUTableEditor:TX3DTable;'#13
  +#10'  EditingGPUNode:TDataNode;'#13#10'  {$ifndef JScript}'#13#10'    GPUEdi'
  +'torTopControl:TWinControl;'#13#10'    {$endif}'#13#10'  GPUEditorMode:Strin'
  +'g;'#13#10'  GPUEvents:TGPUEventClass;'#13#10'  GPUEditorDoneBtn:TXButton;'
  +#13#10#13#10'procedure CreateGPUEditForm;'#13#10'procedure ShowGPUEditor(GPU'
  +'Node:TDataNode;TabPage:integer);'#13#10'procedure ShowGPUKernel(GPUNode:TDa'
  +'taNode;filename:string;targetLine:integer;CharPos:String);'#13#10#13#10#13
  +#10'implementation'#13#10'uses XGPUCanvas;'#13#10#13#10'procedure CreateGPUE'
  +'ditForm;'#13#10'var'#13#10'  FormNode,MainVBNode,TabControlNode,EditorNode,'
  +'VBNode,BtnNode,TableNode:TDataNode;'#13#10'  MemoNode,VBNode2,BtnNode2,Comb'
  +'oNode,HBTopNode,EditNode:TDataNode;'#13#10'  TabPageNode1,TabPageNode2,TabP'
  +'ageNode3:TdataNode;'#13#10'  LaunchBtn:TXButton;'#13#10'  MainVB,VB,vb2:TXV'
  +'Box;'#13#10'  HB:TXHBox;'#13#10'  tmp, Olist:String;'#13#10'begin'#13#10#13
  +#10#13#10'  // Create the popup form for editing the GPU animation code bloc'
  +'k...'#13#10'  if GPUEditorForm=nil then'#13#10'  begin'#13#10'    {$ifndef '
  +'JScript}'#13#10'    GPUEditorForm:=TXForm.CreateNew(Application);'#13#10'  '
  +'  GPUEditorForm.Name:=''XGPUCodeEditorForm'';'#13#10'    FormNode:=CreateFo'
  +'rmNode(GPUEditorForm);'#13#10'    GPUEditorForm.BorderStyle:=bsSizeable;   '
  +'        // allows resizing'#13#10'    GPUEditorForm.OnResize:=@GPUEvents.Ed'
  +'itorResize;'#13#10#13#10#13#10'    {$else}'#13#10'    FormNode:=AddDynamicW'
  +'idget(''TXForm'',nil,nil,''XGPUCodeEditorForm'','''',''Left'',-1);'#13#10' '
  +'   GPUEditorForm:=TXForm(FormNode);'#13#10'    GPUEditorForm.Name:=''XGPUCo'
  +'deEditorForm'';'#13#10'    {$endif}'#13#10'    GPUEditorForm.Caption:=''XGP'
  +'UCanvas Animation Code Editor'';'#13#10'    GPUEditorForm.Top:=100;'#13#10
  +'    GPUEditorForm.Left:=100;'#13#10'    GPUEditorForm.Height:=500;'#13#10' '
  +'   GPUEditorForm.Width:=900;'#13#10'    FormNode.IsDynamic:=false;'#13#10#13
  +#10'    addchildtoparentnode(SystemNodeTree,FormNode,-1);   //!!!! check thi'
  +'s doesn''t upset things...don''t want these in a systemsave...'#13#10#13#10
  +'    MainVBNode:=AddDynamicWidget(''TXVBox'',GPUEditorForm,FormNode,''XGPUMa'
  +'inVBox'','''',''Left'',-1);'#13#10'    MainVB:=TXVBox(MainVBNode.ScreenObje'
  +'ct);'#13#10'    MainVB.ContainerHeight:=''100%'';'#13#10'    MainVB.Border:'
  +'=false;'#13#10'    MainVBNode.IsDynamic:=false;'#13#10#13#10'    TabControl'
  +'Node:=AddDynamicWidget(''TXTabControl'',GPUEditorForm,MainVBNode,''XGPUTabC'
  +'ontrol'','''',''Left'',-1);'#13#10'    TabControlNode.IsDynamic:=false;'#13
  +#10'    GPUEditorTabControl:=TXTabControl(TabControlNode.ScreenObject);'#13
  ,#10'    GPUEditorTabControl.ContainerHeight:=''90%'';'#13#10'    GPUEditorTa'
  +'bControl.ContainerWidth:=''100%'';'#13#10'    TabControlNode.registerEvent('
  +'''Change'',@GPUEvents.TabChange);'#13#10#13#10'    TabPageNode1:=AddDynamic'
  +'Widget(''TXTabSheet'',GPUEditorForm,TabControlNode,''XGPUTabSheet1'','''','
  +'''Left'',-1);'#13#10'    TabPageNode2:=AddDynamicWidget(''TXTabSheet'',GPUE'
  +'ditorForm,TabControlNode,''XGPUTabSheet2'','''',''Left'',-1);'#13#10'    Ta'
  +'bPageNode3:=AddDynamicWidget(''TXTabSheet'',GPUEditorForm,TabControlNode,'''
  +'XGPUTabSheet3'','''',''Left'',-1);'#13#10'    TabPageNode1.IsDynamic:=false'
  +';'#13#10'    TabPageNode2.IsDynamic:=false;'#13#10'    TabPageNode3.IsDynam'
  +'ic:=false;'#13#10'    TXTabSheet(TabPageNode1.ScreenObject).Caption:=''GPU '
  +'Kernel Code'';'#13#10'    TXTabSheet(TabPageNode2.ScreenObject).Caption:='''
  +'Generated HTML'';'#13#10'    TXTabSheet(TabPageNode3.ScreenObject).Caption:'
  +'=''Initial Stage Matrix'';'#13#10'    TXTabControl(TabControlNode.ScreenObj'
  +'ect).TabIndex:=0;'#13#10#13#10#13#10#13#10'    VBNode:=AddDynamicWidget(''T'
  +'XVBox'',GPUEditorForm,TabPageNode1,''XGPUVBox'','''',''Left'',-1);'#13#10' '
  +'   VB:=TXVBox(VBNode.ScreenObject);'#13#10'    VB.ContainerHeight:=''100%'''
  +';'#13#10'    VB.Border:=false;'#13#10'    VBNode.IsDynamic:=false;'#13#10#13
  +#10'    HBTopNode:=AddDynamicWidget(''TXHBox'',GPUEditorForm,VBNode,''XGPUHB'
  +'ox'','''',''Left'',-1);'#13#10'    HB:=TXHBox(HBTopNode.ScreenObject);'#13
  +#10'    HB.ContainerHeight:='''';'#13#10'    HB.Border:=false;'#13#10'    HB'
  +'TopNode.IsDynamic:=false;'#13#10#13#10'    ComboNode:=AddDynamicWidget(''TX'
  +'ComboBox'',GPUEditorForm,HBTopNode,''XGPUComboBox'','''',''Top'',-1);'#13#10
  +'    GPUComboBox:=TXComboBox(ComboNode.ScreenObject);'#13#10'    GPUComboBox'
  +'.OptionList:=''["Graphical (Final)"]'';'#13#10'    GPUComboBox.ItemIndex:=0'
  +';'#13#10'    GPUComboBox.LabelPos:=''Left'';'#13#10'    GPUComboBox.LabelTe'
  +'xt:=''Select Kernel Code to Edit'';'#13#10'    ComboNode.IsDynamic:=false;'
  +#13#10'    GPUComboBox.myNode.registerEvent(''Change'',@GPUEvents.GPUComboBo'
  +'xChange);'#13#10#13#10'    EditNode:=AddDynamicWidget(''TXEditBox'',GPUEdit'
  +'orForm,HBTopNode,''XGPUEditBox'','''',''Top'',-1);'#13#10'    GPUEditBox:=T'
  +'XEditBox(EditNode.ScreenObject);'#13#10'    GPUEditBox.LabelPos:=''Left'';'
  +#13#10'    GPUEditBox.LabelText:=''Output Dimensions for this Kernel'';'#13
  +#10'    GPUEditBox.ReadOnly:=true;'#13#10'    GPUEditBox.Hint:=''X, Y, Z dim'
  +'ensions - from latest settings of KernelXDims, KernelYDims, KernelZDims'';'
  +#13#10'    EditNode.IsDynamic:=false;'#13#10'//    GPUEditBox.myNode.registe'
  +'rEvent(''Change'',@GPUEvents.GPUEditBoxChange);'#13#10#13#10'    EditorNode'
  +':=AddDynamicWidget(''TXCode'',GPUEditorForm,VBNode,''XGPUCodeEditor'','''','
  +'''Left'',-1);'#13#10'    GPUCodeEditor:=TXCode(EditorNode.ScreenObject);'#13
  +#10'    GPUCodeEditor.ContainerHeight:=''90%'';'#13#10'    GPUCodeEditor.Con'
  +'tainerWidth:=''100%'';'#13#10'    GPUCodeEditor.MessagesHeight:=''30%'';'#13
  +#10'    GPUCodeEditor.LabelText:='''';'#13#10'    GPUCodeEditor.myNode.regis'
  +'terEvent(''ClickMessage'',@GPUEvents.GPUCodeEditHandleClickMessage);'#13#10
  +'    EditorNode.IsDynamic:=false;'#13#10#13#10'    BtnNode:=AddDynamicWidget'
  +'(''TXButton'',GPUEditorForm,MainVBNode,''XGPUDoneBtn'','''',''Left'',-1);'
  +#13#10'    GPUEditorDoneBtn:=TXButton(BtnNode.ScreenObject);'#13#10'    GPUE'
  +'ditorDoneBtn.Caption:=''Done'';'#13#10'    GPUEditorDoneBtn.myNode.register'
  +'Event(''ButtonClick'',@GPUEvents.CloseCodeEditor);'#13#10'    BtnNode.IsDyn'
  +'amic:=false;'#13#10#13#10'    VBNode2:=AddDynamicWidget(''TXVBox'',GPUEdito'
  +'rForm,TabPageNode2,''XGPUVBox2'','''',''Left'',-1);'#13#10'    VB2:=TXVBox('
  +'VBNode2.ScreenObject);'#13#10'    VB2.ContainerHeight:=''100%'';'#13#10'   '
  +' VB2.Border:=false;'#13#10'    VBNode2.IsDynamic:=false;'#13#10#13#10'    M'
  +'emoNode:=AddDynamicWidget(''TXMemo'',GPUEditorForm,VBNode2,''XGPUHTMLMemo'''
  +','''',''Left'',-1);'#13#10'    GPUMemo:=TXMemo(MemoNode.ScreenObject);'#13
  +#10'    GPUMemo.MemoHeight:=''85%'';'#13#10'    GPUMemo.MemoWidth:=''99%'';'
  +#13#10'    GPUMemo.Border:=false;'#13#10'    GPUMemo.LabelPos:=''Top'';'#13
  +#10'    GPUMemo.LabelText:=''HTML generated at the last GPU activation'';'#13
  +#10'    MemoNode.IsDynamic:=false;'#13#10#13#10'    BtnNode2:=AddDynamicWidg'
  +'et(''TXButton'',GPUEditorForm,VBNode2,''XGPULaunchBtn'','''',''Left'',-1);'
  +#13#10'    LaunchBtn:=TXButton(BtnNode2.ScreenObject);'#13#10'    LaunchBtn.'
  +'Caption:=''Launch HTML in browser'';'#13#10'    LaunchBtn.myNode.registerEv'
  +'ent(''ButtonClick'',@GPUEvents.LaunchGPUHTML);'#13#10'    LaunchBtn.Hint:='
  +'''Launch the generated GPU HTML in a separate browser page to aid diagnosti'
  +'cs'';'#13#10'    BtnNode2.IsDynamic:=false;'#13#10#13#10'    TableNode:=Add'
  +'DynamicWidget(''TX3DTable'',GPUEditorForm,TabPageNode3,''XGPU3DTable'','''''
  +',''Left'',-1);'#13#10'    GPUTableEditor := TX3DTable(TableNode.ScreenObjec'
  ,'t);'#13#10'    TableNode.IsDynamic:=false;'#13#10'    GPUTableEditor.Contai'
  +'nerWidth:=''99%'';'#13#10'    GPUTableEditor.ContainerHeight:=''100%'';'#13
  +#10#13#10'    {$ifndef JScript}'#13#10'    GPUEditorTopControl:=MainVB;'#13
  +#10'    {$endif}'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'{$ifndef JScri'
  +'pt}'#13#10'procedure TGPUEventClass.EditorResize(Sender: TObject);'#13#10'b'
  +'egin'#13#10'  DoFormResize(TXForm(Sender), GPUEditorTopControl);'#13#10'end'
  +';'#13#10#13#10'{$endif}'#13#10#13#10'procedure SaveThisCodeBlock(idx:intege'
  +'r);'#13#10'var'#13#10'  AllKernels:TAnimCodeArray;'#13#10'  AllCode:String;'
  +#13#10'  i,d:integer;'#13#10'begin'#13#10'  AllKernels:=TXGPUCanvas(EditingG'
  +'PUNode.ScreenObject).FetchAllAnimCode;'#13#10'  // Re-concatenate the kerne'
  +'l code blocks'#13#10'  for i:=0 to length(AllKernels)-1 do'#13#10'  begin'
  +#13#10'    if i<>idx then'#13#10'    begin'#13#10'      AllCode:=AllCode+All'
  +'Kernels[i].CodeBlock.Text'#13#10'    end'#13#10'    else'#13#10'    begin'
  +#13#10'      AllCode:=AllCode+GPUCodeEditor.ItemValue;'#13#10'    end;'#13#10
  +#13#10'    if i<length(AllKernels)-1 then'#13#10'      AllCode:=AllCode+even'
  +'tListdelimiter;'#13#10'  end;'#13#10'  EditAttributeValue(EditingGPUNode,'''
  +'AnimationCode'',AllCode);'#13#10'end;'#13#10#13#10'procedure TGPUEventClass'
  +'.CloseCodeEditor(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  // careful here... if the compile has failed the edito'
  +'r may be showing the whole gpu code unit,'#13#10'  // and not just the user'
  +' code from the AnimationCode property.'#13#10'  TXGPUCanvas(EditingGPUNode.'
  +'ScreenObject).Active:=false;'#13#10#13#10'  GPUEditorForm.Showing:=''No'';'
  +#13#10'  GPUMemo.ItemValue:='''';  //!! Lazarus bug? Can''t reopen the form '
  +'(crashes) if this is pre-populated with a long string.'#13#10#13#10'  if GP'
  +'UEditorMode=''Animation'' then'#13#10'  begin'#13#10'    // Update the prop'
  +'erty value ...         !! BUT NOT IF THE WHOLE UNIT IS ON DISPLAY>>>>>'#13
  +#10'    SaveThisCodeBlock(GPUComboBox.ItemIndex);'#13#10'    // and the init'
  +' Stage Array'#13#10'    EditingGPUNode.SetAttributeValue(''InitStageData'','
  +'GPUTableEditor.Table3DData);'#13#10'  end;'#13#10'  // Clear the 3D table d'
  +'ata'#13#10'  GPUTableEditor.Table3DData:=''[[[0]]]'';'#13#10'//  if ObjectI'
  +'nspectorSelectedNavTreeNode<>nil then'#13#10'//    RefreshObjectInspector(O'
  +'bjectInspectorSelectedNavTreeNode);'#13#10'end;'#13#10#13#10'procedure TGPU'
  +'EventClass.GPUCodeEditHandleClickMessage(e:TEventStatus;nodeID: AnsiString;'
  +' myValue: AnsiString);'#13#10'var linenumber:integer;'#13#10'    SelectedLi'
  +'ne,FileName,CharPos:string;'#13#10'    FoundLineNum:Boolean;'#13#10'    Lin'
  +'eNum:String;'#13#10'    Messages:TStringList;'#13#10'begin'#13#10'   //show'
  +'message(''GPUCodeEditHandleClickMessage ''+ nodeID + '' ''+myValue);'#13#10
  +'  {$ifndef JScript}'#13#10'  linenumber:=GPUCodeEditor.TheMessages.CaretPos'
  +'.Y;'#13#10'  SelectedLine:= GPUCodeEditor.TheMessages.lines[linenumber];'#13
  +#10'  GPUCodeEditor.GetFileNameLineNumAndCharPos(FoundLineNum,SelectedLine, '
  +'''('',FileName,LineNum,CharPos );'#13#10'  {$else}'#13#10'  // Find the mes'
  +'sage line thats been clicked on'#13#10'  try'#13#10'  linenumber:=StrToInt('
  +'myValue);'#13#10'  except'#13#10'    On E : EConvertError do'#13#10'    EXI'
  +'T;'#13#10'  end;'#13#10'  Messages:=TStringList.Create;'#13#10'  Messages.T'
  +'ext:=GPUCodeEditor.MessageLines;'#13#10'  if linenumber>Messages.Count then'
  +#13#10'    EXIT;'#13#10'  SelectedLine:= Messages[linenumber-1];'#13#10'  Me'
  +'ssages.Free;'#13#10#13#10'  // Find the indicated line number from the mess'
  +'age'#13#10'  GPUCodeEditor.GetFileNameLineNumAndCharPos(FoundLineNum,Select'
  +'edLine, ''('',FileName,LineNum,CharPos );'#13#10#13#10'  //showmessage(''Fi'
  +'leName=''+FileName+'' Indicated Linenum is ''+linenum);'#13#10'  {$endif}'
  +#13#10#13#10'  //load the indicated code block into the code edit box'#13#10
  +'  if trim(FileName)<>'''' then'#13#10'  begin'#13#10'    ShowGPUKernel(Edit'
  +'ingGPUNode,FileName,linenumber,CharPos);'#13#10'  end;'#13#10'end;'#13#10#13
  +#10'procedure TGPUEventClass.LaunchGPUHTML(e:TEventStatus;nodeID: AnsiString'
  +'; myValue: AnsiString);'#13#10'var'#13#10'  myHTML:String;'#13#10'begin'#13
  +#10'  if GPUMemo.ItemValue<>'''' then'#13#10'  begin'#13#10'    myHTML:=GPUM'
  +'emo.ItemValue;'#13#10'    TXGPUCanvas(EditingGPUNode.ScreenObject).LaunchHT'
  +'ML(''Data'',myHTML,''GPU Diagnostic'');'#13#10'  end;'#13#10'end;'#13#10#13
  +#10'procedure TGPUEventClass.TabChange(e:TEventStatus;nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'begin'#13#10'  if GPUEditorTabControl.TabIndex=1'
  +' then'#13#10'    GPUMemo.ItemValue:=TXGPUCanvas(EditingGPUNode.ScreenObject'
  +').GeneratedHTML;'#13#10'  {$ifndef JScript}'#13#10'  GPUEvents.EditorResize'
  +'(GPUEditorForm);'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TGPUE'
  +'ventClass.GPUComboBoxChange(e:TEventStatus;nodeID: AnsiString; myValue: Ans'
  ,'iString);'#13#10'var'#13#10'  thisNode:TDataNode;'#13#10'  AllKernels:TAnim'
  +'CodeArray;'#13#10'  i:integer;'#13#10'begin'#13#10'  // Select the given Ke'
  +'rnel code for display in the editor.'#13#10'  if (EditingGPUNode<>nil) then'
  +#13#10'  begin'#13#10'    // Save the current code block.'#13#10'    //showm'
  +'essage(''saving prior index ''+inttostr(GPUComboBox.PriorIndex));'#13#10'  '
  +'  if (GPUComboBox.PriorIndex>-1) then'#13#10'      SaveThisCodeBlock(GPUCom'
  +'boBox.PriorIndex);'#13#10'    // Fetch the required code block'#13#10'    A'
  +'llKernels:=TXGPUCanvas(EditingGPUNode.ScreenObject).FetchAllAnimCode;'#13#10
  +'    GPUCodeEditor.ItemValue:=AllKernels[GPUComboBox.ItemIndex].CodeBlock.Te'
  +'xt;'#13#10'    if  GPUComboBox.ItemIndex>0 then'#13#10'      GPUEditBox.Ite'
  +'mValue:=TXGPUCanvas(EditingGPUNode.ScreenObject).KernelDimsString(GPUComboB'
  +'ox.ItemIndex-1)'#13#10'    else'#13#10'      GPUEditBox.ItemValue:=''* pixe'
  +'lmap size *'';'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure ShowGPUEdit'
  +'or(GPUNode:TDataNode;TabPage:integer);'#13#10'var'#13#10'  AllKernels:TAnim'
  +'CodeArray;'#13#10'  tmp:string;'#13#10'begin'#13#10'  // Edit the Animation'
  +'Code in a TXGPUCanvas component using the dedicated popup editor...'#13#10
  +'  // the animation code may consist of several kernel procedures.'#13#10'  '
  +'// These are delimited by the EventListDelimiter string.'#13#10'  // The GP'
  +'U Code Editor needs to show the first kernel proc.'#13#10'  AllKernels:=TXG'
  +'PUCanvas(GPUNode.ScreenObject).FetchAllAnimCode;'#13#10'  GPUCodeEditor.Ite'
  +'mValue:=AllKernels[0].CodeBlock.Text;'#13#10'  GPUCodeEditor.MessageLines:='
  +''''';'#13#10'  GPUCodeEditor.MessagesHeight:=''1'';'#13#10'  GPUEditBox.Ite'
  +'mValue:=''* pixelmap size *'';'#13#10'  //   GPUMemo.ItemValue:=TXGPUCanvas'
  +'(ObjectInspectorSelectedCodeTreeNode.ScreenObject).GeneratedHTML;'#13#10'  '
  +'//!! Lazarus bug?     Have to populate GPUMemo later (eg. on tab change), o'
  +'therwise the popup form crashes.'#13#10'  EditingGPUNode:=GPUNode;'#13#10' '
  +' GPUEditorMode:=''Animation'';'#13#10'  GPUComboBox.OptionList:=TXGPUCanvas'
  +'(EditingGPUNode.ScreenObject).BuildKernelList;'#13#10'  GPUComboBox.ItemInd'
  +'ex:=0;'#13#10'  GPUComboBox.PriorIndex:=0;'#13#10'  XGPUEditor.GPUCodeEdito'
  +'r.ReadOnly:=false;'#13#10#13#10'  GPUEditorTabControl.TabIndex:=TabPage;'#13
  +#10#13#10'  tmp:=EditingGPUNode.GetAttribute(''InitStageData'',true).AttribV'
  +'alue;'#13#10'  GPUTableEditor.Table3DData:=''[[[1]]]'';'#13#10'  GPUTableEd'
  +'itor.Table3DData:=EditingGPUNode.GetAttribute(''InitStageData'',true).Attri'
  +'bValue;'#13#10'  {$ifndef JScript}'#13#10'  GPUTableEditor.ResequenceCompon'
  +'ents;'#13#10'  {$endif}'#13#10#13#10'  GPUEditorForm.Showing:=''Modal'';'#13
  +#10#13#10'end;'#13#10#13#10'procedure ShowGPUKernel(GPUNode:TDataNode;filena'
  +'me:string;targetLine:integer;CharPos:String);'#13#10'var'#13#10'  bits:TStr'
  +'ingList;'#13#10'  targetKernel:integer;'#13#10'  AllKernels:TAnimCodeArray;'
  +#13#10'  i:integer;'#13#10'  tmp:string;'#13#10'begin'#13#10'  if (GPUNode<>'
  +'nil) then'#13#10'  begin'#13#10'    EditingGPUNode:=GPUNode;'#13#10'  end;'
  +#13#10'  // FileName is NodeName.num.AnimationCode  If num is zero, this is '
  +'the final kernel, otherwise one of the stage kernels.'#13#10'  // Set the c'
  +'omboBox to the relevant item.'#13#10'  bits:=stringsplit(FileName,EditingGP'
  +'UNode.NodeName+''.'');'#13#10'  for i:=0 to bits.count-1 do'#13#10'  begin'
  +#13#10'    tmp:=bits[i];'#13#10'  end;'#13#10'  if (bits.Count=2)'#13#10'  a'
  +'nd (bits[1]<>'''') then'#13#10'  begin'#13#10'    bits:=stringsplit(bits[1]'
  +',''.'');'#13#10'    targetKernel:=strtoint(bits[0]);'#13#10'    AllKernels:'
  +'=TXGPUCanvas(EditingGPUNode.ScreenObject).FetchAllAnimCode;'#13#10'    GPUC'
  +'omboBox.OptionList:=TXGPUCanvas(EditingGPUNode.ScreenObject).BuildKernelLis'
  +'t;'#13#10'    GPUComboBox.ItemIndex:=targetKernel;'#13#10'    GPUComboBox.P'
  +'riorIndex:=targetKernel;'#13#10'    GPUCodeEditor.ItemValue:=AllKernels[tar'
  +'getKernel].CodeBlock.Text;'#13#10#13#10'    GPUCodeEditor.ReadOnly:=false;'
  +#13#10'    GPUEditorMode:=''Animation'';'#13#10#13#10'    {$ifndef JScript}'
  +#13#10'    // set cursor position'#13#10'    if (CharPos<>'''') then'#13#10
  +'    begin'#13#10'      GPUCodeEditor.GoToLineCharPos(targetLine,StrToInt(Ch'
  +'arPos));'#13#10'    end;'#13#10'    {$endif}'#13#10'    if (GPUEditorForm.S'
  +'howing=''No'') then'#13#10'    begin'#13#10'      GPUCodeEditor.MessageLine'
  +'s:='''';'#13#10'      GPUCodeEditor.MessagesHeight:=''1'';'#13#10'      GPU'
  +'EditorForm.Showing:=''Modal'';'#13#10'    end;'#13#10'    {$ifdef JScript}'
  +#13#10'    // set cursor position'#13#10'    if (CharPos<>'''') then'#13#10
  +'    begin'#13#10'      GPUCodeEditor.GoToLineCharPos(targetLine,StrToInt(Ch'
  +'arPos));'#13#10'    end;'#13#10'    {$endif}'#13#10'  end'#13#10'  else'#13
  +#10'  begin'#13#10'    showmessage(''This code is not available for edit'');'
  +#13#10'  end;'#13#10'  bits.Free;'#13#10'end;'#13#10#13#10'begin'#13#10'  GP'
  ,'UEvents:=TGPUEventClass.Create;'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('xcomposite','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XComposite;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13
  +#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, SysUtils, TypInfo,'
  +' StringUtils, NodeUtils, XIFrame, Math,'#13#10'    UtilsJSCompile, XForm, X'
  +'Code, XButton, XVBox, XTabControl, XMemo, EventsInterface,'#13#10'    XComp'
  +'ositeIntf,'#13#10'  {$ifndef JScript}'#13#10'    LResources, Forms, Control'
  +'s, StdCtrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls,'#13#10'    '
  +'LazsUtils, LCLIntf,'#13#10'    LCLType, gettext,'#13#10'  {$else}'#13#10'  '
  +'  HTMLUtils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events;'#13#10#13#10
  +#13#10'type'#13#10'  TXComposite = class(TWrapperPanel)'#13#10'  private'#13
  +#10'    { Private declarations }'#13#10'    function GetInheritColor:Boolean'
  +';'#13#10'    function GetCompositeType:String;'#13#10'    function GetSourc'
  +'eString:String;'#13#10#13#10'    procedure SetInheritColor(AValue:Boolean);'
  +#13#10'    procedure SetCompositeType(AValue:String);'#13#10'    procedure S'
  +'etSourceString(AValue:String);'#13#10#13#10'    procedure SetMyEventTypes;'
  +#13#10#13#10'  protected'#13#10'    { Protected declarations }'#13#10'  publ'
  +'ic'#13#10'    { Public declarations }'#13#10'    {$ifndef JScript}'#13#10' '
  +'   procedure DoCompositeConstructor(TheOwner:TComponent);'#13#10'    constr'
  +'uctor Create(TheOwner: TComponent); override;'#13#10'    constructor Create'
  +'(TheOwner: TComponent;IsDynamic:Boolean); override;'#13#10'    destructor D'
  +'estroy; override;'#13#10'    {$else}'#13#10'    constructor Create(MyForm:T'
  +'Form;NodeName,NameSpace:String);'#13#10'    {$endif}'#13#10#13#10'  publish'
  +'ed'#13#10'    { Published declarations }'#13#10#13#10'    // Properties def'
  +'ined for this class...'#13#10'    property InheritColor:Boolean read GetInh'
  +'eritColor write SetInheritColor;'#13#10'    property CompositeType:String r'
  +'ead GetCompositeType write SetCompositeType;'#13#10'    property SourceStri'
  +'ng:String read GetSourceString write SetSourceString;'#13#10'  end;'#13#10
  +#13#10'  procedure CompositePropertyChanged(myNode:TDataNode; propName:Strin'
  +'g);'#13#10#13#10'implementation'#13#10#13#10'const MyNodeType=''TXComposite'
  +''';'#13#10'var'#13#10'  myDefaultAttribs:TDefaultAttributesArray;'#13#10#13
  +#10'procedure TXComposite.SetMyEventTypes;'#13#10'begin'#13#10'  MyEventType'
  +'s.Add(''Click'');'#13#10'end;'#13#10#13#10#13#10#13#10'{$ifndef JScript}'#13
  +#10#13#10'function CreateCompositeWidget(ParentNode:TDataNode;ScreenObjectNa'
  +'me,NameSpace:string;position:integer;Alignment:String):TDataNode;'#13#10'va'
  +'r'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10'  NewNode:=CreateDynamicL'
  +'azWidget(''TXComposite'',ParentNode.MyForm,ParentNode,ScreenObjectName,Name'
  +'Space,Alignment,position);'#13#10'  result:=NewNode;'#13#10'end;'#13#10#13
  +#10'procedure TXComposite.DoCompositeConstructor(TheOwner:TComponent);'#13#10
  +'begin'#13#10'  Caption:='''';'#13#10'  Constraints.MinHeight:=20;'#13#10'  '
  +'Constraints.MinWidth:=20;'#13#10#13#10'  self.BorderSpacing.Around:=0;'#13
  +#10'  self.ParentColor:=false;'#13#10'  self.IsContainer:=false;'#13#10#13#10
  +'  self.SetMyEventTypes;'#13#10'  CreateComponentDataNode2(self,MyNodeType,m'
  +'yDefaultAttribs, self.myEventTypes, TheOwner,true);'#13#10#13#10'  AlignChi'
  +'ldrenVertical:=true;'#13#10'end;'#13#10#13#10'constructor TXComposite.Creat'
  +'e(TheOwner:TComponent);'#13#10'begin'#13#10'  inherited Create(TheOwner,fal'
  +'se);'#13#10'  DoCompositeConstructor(TheOwner);'#13#10'end;'#13#10#13#10'co'
  +'nstructor TXComposite.Create(TheOwner:TComponent;IsDynamic:Boolean);'#13#10
  +'begin'#13#10'  inherited Create(TheOwner,IsDynamic);'#13#10'  DoCompositeCo'
  +'nstructor(TheOwner);'#13#10'end;'#13#10#13#10'destructor TXComposite.Destro'
  +'y;'#13#10'begin'#13#10'  if (not (csDesigning in componentState)) then'#13
  +#10'  begin'#13#10'    myControl.Free;'#13#10'  end;'#13#10'  inherited Dest'
  +'roy;'#13#10'end;'#13#10#13#10'{$else} //JScript'#13#10#13#10'constructor TX'
  +'Composite.Create(MyForm:TForm;NodeName,NameSpace:String);'#13#10'begin'#13
  +#10'  inherited Create(NodeName,NameSpace);'#13#10'  self.NodeType:=''TXComp'
  +'osite'';'#13#10'  self.MyForm:=MyForm;'#13#10'  self.IsContainer:=false;'#13
  +#10#13#10'  self.SetMyEventTypes;'#13#10#13#10'  SetNodePropDefaults(self,my'
  +'DefaultAttribs);'#13#10#13#10'end;'#13#10#13#10'function CreateCompositeWid'
  +'get(MyNode, ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position'
  +':integer;Alignment:String):TDataNode;'#13#10'var'#13#10'  OnClickString:Str'
  ,'ing;'#13#10'begin'#13#10#13#10'  OnClickString:=''onclick="event.stopPropag'
  +'ation();pas.Events.handleEvent(null,''''Click'''',''''''+ScreenObjectName+'
  +''''''',''''''+NameSpace+'''''', '''''''');" '';'#13#10#13#10'  asm'#13#10' '
  +' try{'#13#10'      var wrapper = pas.HTMLUtils.CreateWrapperDiv(MyNode,Pare'
  +'ntNode,''UI'',ScreenObjectName,NameSpace,$impl.MyNodeType,position);'#13#10
  +#13#10'      var HTMLString='''';'#13#10'      var wrapperid = NameSpace+Scr'
  +'eenObjectName;'#13#10'      var MyObjectName=wrapperid+''Contents'';'#13#10
  +#13#10'      HTMLString = ''<div  id="''+MyObjectName+''" class="vboxNoStret'
  +'ch ''+NameSpace+ScreenObjectName+''" ''  +'#13#10'                     '' s'
  +'tyle="height:100%;width:100%; "'' +'#13#10'                     OnClickStri'
  +'ng +'#13#10'                     ''></div>  '';'#13#10#13#10'      var wrap'
  +'per=document.getElementById(wrapperid);'#13#10'      wrapper.insertAdjacent'
  +'HTML(''beforeend'', HTMLString);'#13#10#13#10'  }catch(err) { alert(err.mes'
  +'sage+''  in XVBox.CreateVHBox'');}'#13#10'  end;'#13#10'  MyNode.ScreenObje'
  +'ct:=MyNode;'#13#10#13#10'  RefreshComponentProps(myNode);'#13#10#13#10'  re'
  +'sult:=myNode;'#13#10'end;'#13#10#13#10#13#10'function CreateinterfaceObj(My'
  +'Form:TForm;NodeName,NameSpace:String):TObject;'#13#10'begin'#13#10'  result'
  +':=TObject(TXComposite.Create(MyForm,NodeName,NameSpace));'#13#10'end;'#13#10
  +#13#10'{$endif}'#13#10'function TXComposite.GetInheritColor:Boolean;'#13#10
  +'begin'#13#10'  result:=myStrToBool(myNode.GetAttribute(''InheritColor'',tru'
  +'e).AttribValue);'#13#10'end;'#13#10#13#10'procedure TXComposite.SetInheritC'
  +'olor(AValue:Boolean);'#13#10'var'#13#10'  clr:String;'#13#10'  parentNode:T'
  +'DataNode;'#13#10'begin'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10' '
  +'   myNode.SetAttributeValue(''InheritColor'',myBoolToStr(AValue),''Boolean'
  +''');'#13#10'    parentNode:=FindParentOfNode(SystemNodeTree,myNode);'#13#10
  +'    if parentNode<>nil then'#13#10'    begin'#13#10'      if AValue=true th'
  +'en'#13#10'      begin'#13#10'        clr:= parentNode.GetAttribute(''BgColo'
  +'r'',true).AttribValue;'#13#10'        myNode.SetAttributeValue(''BgColor'','
  +'clr,''Color'');'#13#10'        {$ifndef JScript}'#13#10'        self.Parent'
  +'Color:=true;'#13#10'        {$else}'#13#10'        asm'#13#10'          var'
  +' ob = document.getElementById(this.NameSpace+this.NodeName);'#13#10'       '
  +'   if (ob!=null) {'#13#10'            if (AValue==true ) {'#13#10'         '
  +'      ob.style.backgroundColor=''inherit'';'#13#10'          } }'#13#10'   '
  +'     end;'#13#10'        {$endif}'#13#10'      end'#13#10'      else'#13#10
  +'      begin'#13#10'        clr:= myNode.GetAttribute(''BgColor'',true).Attr'
  +'ibValue;'#13#10'        {$ifndef JScript}'#13#10'        self.ParentColor:='
  +'false;'#13#10'        self.Color:=HexRGBToColor(clr);'#13#10'        {$else'
  +'}'#13#10'        asm'#13#10'          var ob = document.getElementById(this'
  +'.NameSpace+this.NodeName);'#13#10'          if (ob!=null) {'#13#10'        '
  +'    if (AValue==true ) {'#13#10'               ob.style.backgroundColor=clr'
  +';'#13#10'          } }'#13#10'        end;'#13#10'        {$endif}'#13#10' '
  +'     end;'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'function T'
  +'XComposite.GetCompositeType:String;'#13#10'begin'#13#10'  result:=MyNode.ge'
  +'tAttribute(''CompositeType'',true).AttribValue;'#13#10'end;'#13#10#13#10'fu'
  +'nction TXComposite.GetSourceString:String;'#13#10'begin'#13#10'  result:=My'
  +'Node.getAttribute(''SourceString'',true).AttribValue;'#13#10'end;'#13#10#13
  +#10'procedure TXComposite.SetCompositeType(AValue:String);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''CompositeType'',AValue);'#13#10'end;'#13#10
  +#13#10'procedure TXComposite.SetSourceString(AValue:String);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''SourceString'',AValue);'#13#10'end;'#13#10
  +#13#10#13#10'procedure CompositePropertyChanged(myNode:TDataNode; propName:S'
  +'tring);'#13#10'var'#13#10'  TargetNode:TDataNode;'#13#10'  newValue:String;'
  +#13#10'begin'#13#10'  if (myNode.NodeType=''TXCompositeIntf'')'#13#10'  or ('
  +'myNode.NodeType=''TXComposite'') then'#13#10'  begin'#13#10'    newValue:=m'
  +'yNode.GetAttribute(propName,false).AttribValue;'#13#10'    if (myNode.NameS'
  +'pace<>'''') then'#13#10'    begin'#13#10'       // Expose new property valu'
  +'e to the outside, for an interface definition'#13#10'       if myNode.NodeT'
  +'ype=''TXCompositeIntf'' then'#13#10'       begin'#13#10'          // find t'
  +'he composite container of this namespace'#13#10'          TargetNode:=FindC'
  +'ompositeContainer(myNode);'#13#10'          // set the equivalent property'
  +#13#10'          if TargetNode<>nil then'#13#10'            TargetNode.SetAt'
  +'tributeValue(propName,newValue);'#13#10'       end;'#13#10'    end'#13#10' '
  +'   else if myNode.NodeType=''TXComposite'' then'#13#10'    begin'#13#10'   '
  +'   // update the interface property within the namespace'#13#10'      Targe'
  ,'tNode := FindInterfaceNode(myNode,myNode.NodeName,PropName);'#13#10'      i'
  +'f TargetNode<>nil then'#13#10'         EditAttributeValue(TargetNode,propNa'
  +'me,newValue);'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'begin'
  +#13#10'  AddWrapperDefaultAttribs(myDefaultAttribs);'#13#10'  AddDefaultAttr'
  +'ibute(myDefaultAttribs,''ContainerWidth'',''String'','''','''',false);'#13
  +#10'  AddDefaultAttribute(myDefaultAttribs,''ContainerHeight'',''String'','''
  +''','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Border'','''
  +'Boolean'',''True'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttri'
  +'bs,''SpacingAround'',''Integer'',''0'','''',false);'#13#10'  AddDefaultAttr'
  +'ibute(myDefaultAttribs,''CompositeType'',''String'','''','''',true);'#13#10
  +'  AddDefaultAttribute(myDefaultAttribs,''BgColor'',''Color'',''#FFFFFF'','''
  +''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''InheritColor'','
  +'''Boolean'',''False'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAt'
  +'tribs,''SourceString'',''String'','''','''',true);'#13#10'  AddDefaultsToTa'
  +'ble(MyNodeType,myDefaultAttribs);'#13#10#13#10'  AddAttribOptions(MyNodeTyp'
  +'e,''Alignment'',AlignmentOptions);'#13#10'  AddAttribOptions(MyNodeType,''L'
  +'abelPos'',LabelPosOptions);'#13#10'  {$IFndef JScript}'#13#10'  RegisterCla'
  +'ss(TXComposite);'#13#10'  AddNodeFuncLookup(MyNodeType,@CreateCompositeWidg'
  +'et);'#13#10'  {$else}'#13#10'  AddNodeFuncLookup(MyNodeType,@CreateInterfac'
  +'eObj,@CreateCompositeWidget);'#13#10'  {$endif}'#13#10#13#10#13#10'end.'#13
  +#10
]);
LazarusResources.Add('xcompositeintf','PAS',[
  'unit XCompositeIntf;'#13#10#13#10'//Non-visual component to provide dynamic '
  +'interface properties and events when encapsulating a system.'#13#10'// Also'
  +' see XComposite.pas.'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$'
  +'H+}'#13#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'    Cla'
  +'sses, SysUtils, Types,NodeUtils,StringUtils,'#13#10'    {$ifndef JScript}'
  +#13#10'    Forms, Controls, StdCtrls, LResources, Graphics, Dialogs, ExtCtrl'
  +'s, PropEdits, RTTICtrls,'#13#10'    LazsUtils,'#13#10'    {$Else}'#13#10'  '
  +'  HTMLUtils,'#13#10'    {$endif}'#13#10'    WrapperPanel;'#13#10#13#10#13#10
  +'type'#13#10'    {$ifndef JScript}'#13#10'    TXCompositeIntf = class(TCompo'
  +'nent)'#13#10'    {$Else}'#13#10'    TXCompositeIntf = class(TWrapperPanel)'
  +#13#10'    {$endif}'#13#10'  private'#13#10'  {$ifndef JScript}'#13#10'  Fmy'
  +'Node:TDataNode;'#13#10'  FmyControl:TControl;'#13#10'  {$endif}'#13#10'    '
  +'{ Private declarations }'#13#10#13#10'    procedure SetMyEventTypes;'#13#10
  +#13#10'  protected'#13#10'    { Protected declarations }'#13#10'  {$ifndef J'
  +'Script}'#13#10'  function GetName:string;'#13#10'  procedure SetMyName(AVal'
  +'ue:string);'#13#10'  {$endif}'#13#10'  public'#13#10'    { Public declarati'
  +'ons }'#13#10'    {$ifndef JScript}'#13#10'    procedure DoConstructor(TheOw'
  +'ner:TComponent;IsDynamic:Boolean);'#13#10'    constructor Create(TheOwner: '
  +'TComponent); override;'#13#10'    constructor Create(TheOwner: TComponent;I'
  +'sDynamic:Boolean);'#13#10'    destructor Destroy; override;'#13#10'    {$el'
  +'se}'#13#10'    constructor Create(MyForm:TForm;NodeName,NameSpace:String);'
  +#13#10'    {$endif}'#13#10#13#10'    function PropertyNameIsUnique(NewName:S'
  +'tring):Boolean;'#13#10'    function EventNameIsUnique(NewName:String):Boole'
  +'an;'#13#10#13#10'  published'#13#10'    { Published declarations }'#13#10' '
  +'   {$ifndef JScript}'#13#10'    property myControl:TControl read FmyControl'
  +' write FmyControl;'#13#10'    property Name: String read GetName write SetM'
  +'yName;'#13#10'    property myNode:TDataNode read FmyNode write FmyNode;'#13
  +#10'    {$endif}'#13#10#13#10'    // Properties defined for this class...'#13
  +#10'  end;'#13#10#13#10#13#10'implementation'#13#10#13#10'var'#13#10'  myDef'
  +'aultAttribs:TDefaultAttributesArray;'#13#10#13#10'procedure TXCompositeIntf'
  +'.SetMyEventTypes;'#13#10'begin'#13#10'end;'#13#10#13#10'{$ifndef JScript}'
  +#13#10#13#10'procedure TXCompositeIntf.DoConstructor(TheOwner:TComponent;IsD'
  +'ynamic:Boolean);'#13#10'var'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10
  +#13#10'    NewNode:=TDataNode.Create(''NV'',self.Name,'''',''TXCompositeIntf'
  +''',false);'#13#10'    NewNode.ScreenObject:=self;'#13#10'    NewNode.MyEven'
  +'tTypes:=TStringList.Create;'#13#10'    SetLength(NewNode.myEventHandlers,0)'
  +';'#13#10'    NewNode.MyForm:=TForm(TheOwner);'#13#10'    NewNode.IsDynamic:'
  +'=IsDynamic;'#13#10'    self.myNode:=NewNode;'#13#10'    // temporarily set '
  +'as child of root node, so that name uniqueness checks can be done during de'
  +'sign'#13#10'    AddChildToParentNode(SystemNodetree,NewNode,-1);'#13#10#13
  +#10'    AddDefaultAttribs(self,NewNode,mydefaultAttribs);'#13#10#13#10'end;'
  +#13#10#13#10'constructor TXCompositeIntf.Create(TheOwner:TComponent);'#13#10
  +'begin'#13#10'  inherited Create(TheOwner);'#13#10'  DoConstructor(TheOwner,'
  +'false);'#13#10'end;'#13#10#13#10'constructor TXCompositeIntf.Create(TheOwne'
  +'r:TComponent;IsDynamic:Boolean);'#13#10'begin'#13#10'  inherited Create(The'
  +'Owner);'#13#10'  DoConstructor(TheOwner,IsDynamic);'#13#10'end;'#13#10#13#10
  +'destructor TXCompositeIntf.Destroy;'#13#10'begin'#13#10'  //ClearLocalStore'
  +'(KeyName);'#13#10'  inherited Destroy;'#13#10'end;'#13#10#13#10'function TX'
  +'CompositeIntf.GetName:string;'#13#10'var'#13#10'  myname:string;'#13#10'beg'
  +'in'#13#10'  result:=inherited Name;'#13#10'end;'#13#10#13#10'procedure TXCo'
  +'mpositeIntf.SetMyName(AValue:string);'#13#10'begin'#13#10'  inherited Name:'
  +'=AValue;'#13#10#13#10'  if  (csLoading in componentState) then'#13#10'    i'
  +'f myNode<>nil then'#13#10'      myNode.NodeName:=AValue;'#13#10'end;'#13#10
  +#13#10'function CreateIntf(ParentNode:TDataNode;ScreenObjectName,NameSpace:s'
  +'tring;position:integer;Alignment:String):TDataNode;'#13#10'var'#13#10'  New'
  +'Node:TDataNode;'#13#10'begin'#13#10'  NewNode:=CreateDynamicLazWidget(''TXC'
  +'ompositeIntf'',ParentNode.MyForm,ParentNode,ScreenObjectName,NameSpace,Alig'
  +'nment,position);'#13#10'  result:=NewNode;'#13#10'end;'#13#10#13#10'{$else}'
  +#13#10#13#10'constructor TXCompositeIntf.Create(MyForm:TForm;NodeName,NameSp'
  +'ace:String);'#13#10'begin'#13#10'  inherited Create(NodeName,NameSpace);'#13
  +#10'  self.NodeClass:=''NV'';'#13#10'  self.NodeType:=''TXCompositeIntf'';'
  +#13#10'  self.MyForm:=MyForm;'#13#10#13#10'  self.myNode.MyEventTypes:=TStri'
  +'ngList.Create;'#13#10'  self.IsContainer:=false;'#13#10'  SetNodePropDefaul'
  +'ts(self,myDefaultAttribs);'#13#10#13#10'end;'#13#10#13#10'function CreateIn'
  ,'tf(MyNode, ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position:'
  +'integer;Alignment:String):TDataNode;'#13#10'begin'#13#10#13#10'MyNode.Scree'
  +'nObject:=MyNode;'#13#10#13#10'result:=myNode;'#13#10'end;'#13#10#13#10'func'
  +'tion CreateinterfaceObj(MyForm:TForm;NodeName,NameSpace:String):TObject;'#13
  +#10'begin'#13#10'  result:=TObject(TXCompositeIntf.Create(MyForm,NodeName,Na'
  +'meSpace));'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'function TXCompos'
  +'iteIntf.PropertyNameIsUnique(NewName:String):Boolean;'#13#10'var'#13#10'  i'
  +':integer;'#13#10'begin'#13#10'  result:=true;'#13#10'  for i:=0 to length(m'
  +'yNode.NodeAttributes)-1 do'#13#10'    if myNode.NodeAttributes[i].AttribNam'
  +'e=NewName then'#13#10'      result:=false;'#13#10'end;'#13#10#13#10'functio'
  +'n TXCompositeIntf.EventNameIsUnique(NewName:String):Boolean;'#13#10'var'#13
  +#10'  i:integer;'#13#10'begin'#13#10'  result:=true;'#13#10'  for i:=0 to my'
  +'Node.myEventTypes.Count-1 do'#13#10'    if myNode.myEventTypes[i]=NewName t'
  +'hen'#13#10'      result:=false;'#13#10'end;'#13#10#13#10'begin'#13#10'// th'
  +'is is the set of node attributes that each instance will have.'#13#10'//Add'
  +'DefaultAttribute(myDefaultAttribs,''KeyName'',''String'','''','''',false);'
  +#13#10'//AddDefaultAttribute(myDefaultAttribs,''DataValue'',''String'','''','
  +''''',false);'#13#10#13#10'{$ifndef JScript}'#13#10'RegisterClass(TXComposit'
  +'eIntf);'#13#10'AddNodeFuncLookup(''TXCompositeIntf'',@CreateIntf);'#13#10'{'
  +'$else}'#13#10'AddNodeFuncLookup(''TXCompositeIntf'',@CreateinterfaceObj,@Cr'
  +'eateIntf);'#13#10'SuppressDesignerProperty(''TXCompositeIntf'',''Alignment'
  +''');'#13#10'SuppressDesignerProperty(''TXCompositeIntf'',''IsVisible'');'#13
  +#10'SuppressDesignerProperty(''TXCompositeIntf'',''LabelPos'');'#13#10'Suppr'
  +'essDesignerProperty(''TXCompositeIntf'',''LabelText'');'#13#10'SuppressDesi'
  +'gnerProperty(''TXCompositeIntf'',''Hint'');'#13#10'{$endif}'#13#10'end.'#13
  +#10#13#10
]);
LazarusResources.Add('x3dtable','PAS',[
  'unit X3DTable;'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13
  +#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, Sy'
  +'sUtils, TypInfo, StringUtils, NodeUtils, XIFrame, Math,'#13#10'    UtilsJSC'
  +'ompile, XForm, XButton, XVBox, XTabControl, XEditBox, XNumberSpinner,XCombo'
  +'Box, EventsInterface,'#13#10'    PasteDialogUnit,'#13#10'  {$ifndef JScript'
  +'}'#13#10'    fpjson  , jsonparser,'#13#10'    LResources, Forms, Controls, '
  +'StdCtrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls,'#13#10'    Laz'
  +'sUtils, LCLIntf,'#13#10'    LCLType, gettext,'#13#10'  {$else}'#13#10'    H'
  +'TMLUtils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events, XTable;'#13#10
  +#13#10#13#10'type'#13#10'  TX3DTable = class(TXVBox)'#13#10'  private'#13#10
  +'    { Private declarations }'#13#10'    IsBuilt:Boolean;'#13#10#13#10'    f'
  +'unction GetZIndex:integer;'#13#10'    function GetXDimension:integer;'#13#10
  +'    function GetYDimension:integer;'#13#10'    function GetZDimension:integ'
  +'er;'#13#10'    function GetTable3DData:string;'#13#10#13#10'    procedure S'
  +'etZIndex(AValue:integer);'#13#10'    procedure SetXDimension(AValue:integer'
  +');'#13#10'    procedure SetYDimension(AValue:integer);'#13#10'    procedure'
  +' SetZDimension(AValue:integer);'#13#10'    procedure SetTable3DData(const A'
  +'Value:string);'#13#10#13#10'    procedure SetPropertyDefaults;'#13#10'    p'
  +'rocedure BuildWidget;'#13#10'    procedure ReBuild3DTableData;'#13#10'    p'
  +'rocedure SetNew3DTableData;'#13#10'    function Construct3DTableStringFromA'
  +'rray(arr:T3DStringArray):String;'#13#10'    procedure Resize3DData;'#13#10
  +#13#10'    {$ifndef JScript}'#13#10'    procedure DoConstructor;'#13#10'    '
  +'{$endif}'#13#10#13#10'    procedure ZSelectorChange(e:TEventStatus;nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'    procedure TableChange(e:TEvent'
  +'Status;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure XEdit'
  +'BoxChange(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10' '
  +'   procedure YEditBoxChange(e:TEventStatus;nodeID: AnsiString; myValue: Ans'
  +'iString);'#13#10'    procedure ZEditBoxChange(e:TEventStatus;nodeID: AnsiSt'
  +'ring; myValue: AnsiString);'#13#10'    procedure PasteData(e:TEventStatus;n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10#13#10'  protected'#13#10'  '
  +'  { Protected declarations }'#13#10'  public'#13#10'    { Public declaratio'
  +'ns }'#13#10'    myTableView:TXTable;'#13#10'    PasteBtn:TXButton;'#13#10' '
  +'   ZSelector:TXComboBox;'#13#10'    XDimEdit:TXEditBox;'#13#10'    YDimEdit'
  +':TXEditBox;'#13#10'    ZDimEdit:TXEditBox;'#13#10'    {$ifndef JScript}'#13
  +#10'    constructor Create(TheOwner: TComponent); override;'#13#10'    const'
  +'ructor Create(TheOwner: TComponent;IsDynamic:Boolean); override;'#13#10'   '
  +' destructor Destroy; override;'#13#10'    procedure ResequenceComponents;'
  +#13#10'    {$else}'#13#10'    constructor Create(MyForm:TForm;NodeName,NameS'
  +'pace:String);  override;'#13#10'    {$endif}'#13#10#13#10'published'#13#10
  +'    { Published declarations }'#13#10#13#10'    // Properties defined for t'
  +'his class...'#13#10'    property ZIndex: integer read GetZIndex write SetZI'
  +'ndex;'#13#10'    property XDimension: integer read GetXDimension write SetX'
  +'Dimension;'#13#10'    property YDimension: integer read GetYDimension write'
  +' SetYDimension;'#13#10'    property ZDimension: integer read GetZDimension '
  +'write SetZDimension;'#13#10'    property Table3DData:string read GetTable3D'
  +'Data write SetTable3DData;'#13#10#13#10'  end;'#13#10#13#10'implementation'
  +#13#10#13#10'const MyNodeType=''TX3DTable'';'#13#10'var'#13#10'  myDefaultAt'
  +'tribs:TDefaultAttributesArray;'#13#10#13#10'//procedure TXGPUCanvas.SetMyEv'
  +'entTypes;'#13#10'//begin'#13#10'//  MyEventTypes.Add(''Click'');'#13#10'//e'
  +'nd;'#13#10#13#10'procedure TX3DTable.SetPropertyDefaults;'#13#10'begin'#13
  +#10'end;'#13#10#13#10'procedure TX3DTable.BuildWidget;'#13#10'var'#13#10'  T'
  +'blNode,ZNumNode,XEditNode,YEditNode,ZEditNode,BtnNode:TDataNode;'#13#10'  z'
  +'eds:string;'#13#10'  i:integer;'#13#10'begin'#13#10#13#10'//  ZNumNode:=Add'
  +'DynamicWidget(''TXNumberSpinner'',self.myNode.MyForm,self.myNode,''ZSelecto'
  +'r'',self.myNode.NodeName,''Left'',-1);'#13#10'//  ZSelector:=TXNumberSpinne'
  +'r(ZNumNode.ScreenObject);'#13#10'//  ZSelector.MinVal:=0;'#13#10'//  ZSelec'
  +'tor.MaxVal:=self.ZDimension-1;'#13#10'//  ZSelector.ItemValue:=0;'#13#10'//'
  +'  ZSelector.LabelPos:=''Left'';'#13#10'//  ZSelector.LabelText:=''Select Z '
  +'Index:'';'#13#10'//  ZNumNode.IsDynamic:=false;'#13#10'//  ZSelector.myNode'
  +'.registerEvent(''Change'',@self.ZSelectorChange);'#13#10#13#10'  zeds:=''['
  +''';'#13#10'  for i:=0 to self.ZDimension-1 do'#13#10'  begin'#13#10'    if '
  +'i>0 then zeds:=zeds+'','';'#13#10'    zeds:=zeds + inttostr(i);'#13#10'  en'
  +'d;'#13#10'  zeds:=zeds+'']'';'#13#10#13#10'  ZNumNode:=AddDynamicWidget(''T'
  +'XComboBox'',self.myNode.MyForm,self.myNode,''ZSelector'',self.myNode.NodeNa'
  ,'me,''Left'',-1);'#13#10'  ZSelector:=TXComboBox(ZNumNode.ScreenObject);'#13
  +#10'  ZSelector.OptionList:=zeds;'#13#10'  ZSelector.ItemValue:=''0'';'#13#10
  +'  ZSelector.LabelPos:=''Left'';'#13#10'  ZSelector.LabelText:=''Select Z In'
  +'dex:'';'#13#10'  ZNumNode.IsDynamic:=false;'#13#10'  ZSelector.myNode.regis'
  +'terEvent(''Change'',@self.ZSelectorChange);'#13#10#13#10'  TblNode:=AddDyna'
  +'micWidget(''TXTable'',self.myNode.MyForm,self.myNode,''Table'',self.myNode.'
  +'NodeName,''Left'',-1);'#13#10'  TblNode.IsDynamic:=false;'#13#10'  myTableV'
  +'iew:=TXTable(TblNode.ScreenObject);'#13#10'  myTableView.TableHeight:=''70%'
  +''';'#13#10'  myTableView.TableWidth:=''98%'';'#13#10'  myTableView.LabelTex'
  +'t:='''';'#13#10'  myTableView.HasHeaderRow:=false;'#13#10'  myTableView.IsN'
  +'umeric:=true;'#13#10'  TblNode.registerEvent(''Change'',@self.TableChange);'
  +#13#10#13#10'  BtnNode:=AddDynamicWidget(''TXButton'',self.myNode.MyForm,sel'
  +'f.myNode,''PasteBtn'',self.myNode.NodeName,''Left'',-1);'#13#10'  PasteBtn:'
  +'=TXButton(BtnNode.ScreenObject);'#13#10'  PasteBtn.Caption:=''Paste Grid'';'
  +#13#10'  PasteBtn.Hint:=''Paste grid data from clipboard (eg. as copied from'
  +' Excel)'';'#13#10'  PasteBtn.myNode.registerEvent(''ButtonClick'',@self.Pas'
  +'teData);'#13#10'  BtnNode.IsDynamic:=false;'#13#10#13#10'  XEditNode:=AddDy'
  +'namicWidget(''TXEditBox'',self.myNode.MyForm,self.myNode,''XNum'',self.myNo'
  +'de.NodeName,''Left'',-1);'#13#10'  XDimEdit:=TXEditBox(XEditNode.ScreenObje'
  +'ct);'#13#10'  XDimEdit.LabelPos:=''Left'';'#13#10'  XDimEdit.LabelText:=''S'
  +'et X Dimension (number of Columns):'';'#13#10'  XEditNode.IsDynamic:=false;'
  +#13#10'  XDimEdit.ItemValue:=''1'';'#13#10'  XDimEdit.myNode.registerEvent('
  +'''Change'',@self.XEditBoxChange);'#13#10#13#10'  YEditNode:=AddDynamicWidge'
  +'t(''TXEditBox'',self.myNode.MyForm,self.myNode,''YNum'',self.myNode.NodeNam'
  +'e,''Left'',-1);'#13#10'  YDimEdit:=TXEditBox(YEditNode.ScreenObject);'#13#10
  +'  YDimEdit.LabelPos:=''Left'';'#13#10'  YDimEdit.LabelText:=''Set Y Dimensi'
  +'on (number of Rows):'';'#13#10'  YEditNode.IsDynamic:=false;'#13#10'  YDimE'
  +'dit.ItemValue:=''1'';'#13#10'  YDimEdit.myNode.registerEvent(''Change'',@se'
  +'lf.YEditBoxChange);'#13#10#13#10'  ZEditNode:=AddDynamicWidget(''TXEditBox'
  +''',self.myNode.MyForm,self.myNode,''ZNum'',self.myNode.NodeName,''Left'',-1'
  +');'#13#10'  ZDimEdit:=TXEditBox(ZEditNode.ScreenObject);'#13#10'  ZDimEdit.'
  +'LabelPos:=''Left'';'#13#10'  ZDimEdit.LabelText:=''Set Z Dimension (Z Depth'
  +'):'';'#13#10'  ZEditNode.IsDynamic:=false;'#13#10'  ZDimEdit.ItemValue:=''1'
  +''';'#13#10'  ZDimEdit.myNode.registerEvent(''Change'',@self.ZEditBoxChange)'
  +';'#13#10#13#10'  IsBuilt:=true;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'
  +#13#10'procedure TX3DTable.ResequenceComponents;'#13#10'begin      // fix fo'
  +'r Lazarus ''feature''....'#13#10'  self.RemoveControl(ZSelector);'#13#10'  '
  +'self.RemoveControl(myTableView);'#13#10'  self.RemoveControl(PasteBtn);'#13
  +#10'  self.RemoveControl(XDimEdit);'#13#10'  self.RemoveControl(YDimEdit);'
  +#13#10'  self.InsertControl(YDimEdit,0);'#13#10'  self.InsertControl(XDimEdi'
  +'t,0);'#13#10'  self.InsertControl(PasteBtn,0);'#13#10'  self.InsertControl('
  +'myTableView,0);'#13#10'  self.InsertControl(ZSelector,0);'#13#10'end;'#13#10
  +#13#10'function Create3DTableWidget(ParentNode:TDataNode;ScreenObjectName,Na'
  +'meSpace:string;position:integer;Alignment:String):TDataNode;'#13#10'var'#13
  +#10'  NewNode:TDataNode;'#13#10'begin'#13#10'  NewNode:=CreateDynamicLazWidg'
  +'et(''TX3DTable'',ParentNode.MyForm,ParentNode,ScreenObjectName,NameSpace,Al'
  +'ignment,position);'#13#10'  TX3DTable(NewNode.ScreenObject).BuildWidget;'#13
  +#10#13#10'  result:=NewNode;'#13#10'end;'#13#10#13#10'procedure TX3DTable.Do'
  +'Constructor;'#13#10'begin'#13#10'  IsBuilt:=false;'#13#10#13#10'  self.IsCo'
  +'ntainer:=false;'#13#10'  self.myNode.NodeType:=''TX3DTable'';'#13#10'  AddD'
  +'efaultAttribs(self,self.myNode,mydefaultAttribs);'#13#10#13#10'  SetPropert'
  +'yDefaults;'#13#10'end;'#13#10#13#10'constructor TX3DTable.Create(TheOwner:T'
  +'Component);'#13#10'begin'#13#10'  inherited Create(TheOwner,false);'#13#10
  +'  DoConstructor;'#13#10'end;'#13#10#13#10'constructor TX3DTable.Create(TheO'
  +'wner:TComponent;IsDynamic:Boolean);'#13#10'begin'#13#10'  inherited Create('
  +'TheOwner,IsDynamic);'#13#10'  DoConstructor;'#13#10'end;'#13#10#13#10'destr'
  +'uctor TX3DTable.Destroy;'#13#10'begin'#13#10'  if (not (csDesigning in comp'
  +'onentState)) then'#13#10'  begin'#13#10'  end;'#13#10'  inherited Destroy;'
  +#13#10'end;'#13#10#13#10'{$else}'#13#10'constructor TX3DTable.Create(MyForm:'
  +'TForm;NodeName,NameSpace:String);'#13#10'begin'#13#10'  inherited Create(My'
  +'Form,NodeName,NameSpace);'#13#10'  self.NodeType:=''TX3DTable'';'#13#10'  s'
  +'elf.IsContainer:=false;'#13#10'  IsBuilt:=false;'#13#10#13#10'  SetNodeProp'
  +'Defaults(self,myDefaultAttribs);'#13#10'  SetPropertyDefaults;'#13#10'end;'
  +#13#10#13#10'function Create3DTableWidget(MyNode, ParentNode:TDataNode;Scree'
  ,'nObjectName,NameSpace:string;position:integer;Alignment:String):TDataNode;'
  +#13#10'var'#13#10'  ShowBorder:boolean;'#13#10'  myObj:TX3DTable;'#13#10'  O'
  +'nClickString:String;'#13#10'begin'#13#10#13#10'  OnClickString:=''onclick="'
  +'event.stopPropagation();pas.Events.handleEvent(null,''''Click'''',''''''+Sc'
  +'reenObjectName+'''''',''''''+NameSpace+'''''', '''''''');" '';'#13#10#13#10
  +'  asm'#13#10'  try{'#13#10'      var wrapper = pas.HTMLUtils.CreateWrapperD'
  +'iv(MyNode,ParentNode,''UI'',ScreenObjectName,NameSpace,$impl.MyNodeType,pos'
  +'ition);'#13#10#13#10'      var HTMLString='''';'#13#10'      var wrapperid '
  +'= NameSpace+ScreenObjectName;'#13#10'      var MyObjectName=wrapperid+''Con'
  +'tents'';'#13#10#13#10'      HTMLString = ''<div  id="''+MyObjectName+''" cl'
  +'ass="vboxNoStretch ''+NameSpace+ScreenObjectName+''" ''  +'#13#10'         '
  +'            '' style="height:100%;width:100%; "'' +'#13#10'                '
  +'     OnClickString +'#13#10'                     ''></div>  '';'#13#10#13#10
  +'      var wrapper=document.getElementById(wrapperid);'#13#10'      wrapper.'
  +'insertAdjacentHTML(''beforeend'', HTMLString);'#13#10#13#10'  }catch(err) {'
  +' alert(err.message+''  in XVBox.CreateVHBox'');}'#13#10'  end;'#13#10'  MyN'
  +'ode.ScreenObject:=MyNode;'#13#10#13#10#13#10'  TX3DTable(MyNode.ScreenObjec'
  +'t).BuildWidget;'#13#10'  RefreshComponentProps(myNode);'#13#10#13#10'  resu'
  +'lt:=myNode;'#13#10'end;'#13#10#13#10#13#10#13#10'function CreateinterfaceOb'
  +'j3DTable(MyForm:TForm;NodeName,NameSpace:String):TObject;'#13#10'begin'#13
  +#10'  result:=TObject(TX3DTable.Create(MyForm,NodeName,NameSpace));'#13#10'e'
  +'nd;'#13#10'{$endif}'#13#10#13#10'function JsonStringTo3DStringArray(const s'
  +'tr:String):T3DStringArray;'#13#10'{$ifndef JScript}'#13#10'var'#13#10'   zD'
  +'ata : TJSONData;'#13#10'   zCount:integer;'#13#10'   arr:T3DStringArray;'#13
  +#10'    zItem,yItem,xItem : TJSONData;'#13#10'    z,y,x:integer;'#13#10'    '
  +'object_type:string;'#13#10#13#10'begin'#13#10'  // "[[[...],[...]],[[...]]]'
  +'"'#13#10'  setlength(arr,0);'#13#10'  try'#13#10'  zData := GetJSON(str);'
  +#13#10'  except'#13#10'    on E: Exception do'#13#10'    begin'#13#10'      '
  +'showmessage(''JSON error: ''+e.Message);'#13#10'      FreeAndNil(zData);'#13
  +#10'      EXIT;'#13#10'    end;'#13#10'  end;'#13#10'  zcount:=zData.Count;'
  +#13#10'  setlength(arr,zCount);'#13#10'  for z :=0 to zcount-1 do'#13#10'  b'
  +'egin'#13#10'    zItem := zData.Items[z];'#13#10'    setlength(arr[z],zItem.'
  +'Count);'#13#10'    for y:=0 to zItem.Count-1 do'#13#10'    begin'#13#10'   '
  +'   yItem := zItem.Items[y];'#13#10'      setlength(arr[z,y],yItem.Count);'
  +#13#10'      object_type := GetEnumName(TypeInfo(TJSONtype), Ord(yItem.JSONT'
  +'ype));'#13#10'      if object_type=''jtArray'' then'#13#10'      begin'#13
  +#10'        for x:=0 to yItem.Count-1 do'#13#10'        begin'#13#10'       '
  +'   xItem:= yItem.Items[x];'#13#10'          object_type := GetEnumName(Type'
  +'Info(TJSONtype), Ord(xItem.JSONType));'#13#10'          if object_type=''jt'
  +'String'' then'#13#10'          begin'#13#10'            arr[z,y,x]:=QuoteIt'
  +'(xItem.AsString);'#13#10'          end'#13#10'          else if object_type'
  +'=''jtNumber'' then'#13#10'          begin'#13#10'            arr[z,y,x]:=xI'
  +'tem.AsString;'#13#10'          end'#13#10'          else'#13#10'           '
  +' arr[z,y,x]:=''""'';'#13#10'        end;'#13#10'      end;'#13#10'    end;'
  +#13#10'  end;'#13#10'  zData.Free;'#13#10#13#10'  result:=arr;'#13#10'end;'
  +#13#10'{$else}'#13#10'var'#13#10'   arr:T3DStringArray;'#13#10'begin'#13#10
  +'  // "[[[...],[...]],[[...]]]"'#13#10'  setlength(arr,0);'#13#10'  asm'#13
  +#10'    arr = JSON.parse(str);'#13#10'  end;'#13#10'  result:=arr;'#13#10'en'
  +'d;'#13#10'{$endif}'#13#10#13#10#13#10'function TX3DTable.Construct3DTableSt'
  +'ringFromArray(arr:T3DStringArray):String;'#13#10'var'#13#10'    z:integer;'
  +#13#10'    str:String;'#13#10'begin'#13#10'  //strl:=TStringList.Create;'#13
  +#10'  str:='''';'#13#10'  for z:=0 to length(arr)-1 do'#13#10'  begin'#13#10
  +'    if z>0 then'#13#10'      str:=str+'','';'#13#10'    str:=str+myTableVie'
  +'w.ConstructTableStringFromArray(arr[z]);'#13#10'  end;'#13#10'  result:=''['
  +'''+str+'']'';'#13#10'end;'#13#10#13#10'procedure TX3DTable.SetNew3DTableDat'
  +'a;'#13#10'var'#13#10'    arr:T3DStringArray;'#13#10'    z:integer;'#13#10'b'
  +'egin'#13#10'//  Redisplay the data for the current Z index, from new 3d dat'
  +'a string'#13#10'  arr:=JsonStringTo3DStringArray(self.Table3DData);'#13#10
  +'  z:=self.ZSelector.ItemIndex;'#13#10'  if z>length(arr)-1 then'#13#10'  be'
  +'gin'#13#10'    z:=length(arr)-1;'#13#10'    self.ZSelector.ItemIndex:=z;   '
  +'     // !!!!fires ZSelectorChange...comes back here'#13#10'  end;'#13#10'  '
  +'if z<0 then z:=0;'#13#10'  self.ZDimEdit.ItemValue:=inttostr(length(arr));'
  +#13#10'  if length(arr)>0 then'#13#10'  begin'#13#10'    self.YDimEdit.ItemV'
  +'alue:=inttostr(length(arr[0]));'#13#10'    if length(arr[0])>0 then'#13#10
  ,'      self.XDimEdit.ItemValue:=inttostr(length(arr[0,0]))'#13#10'    else'
  +#13#10'      self.XDimEdit.ItemValue:='''';'#13#10'  end'#13#10'  else'#13#10
  +'  begin'#13#10'    self.YDimEdit.ItemValue:='''';'#13#10'    self.XDimEdit.'
  +'ItemValue:='''';'#13#10'  end;'#13#10'(*  {$ifdef JScript}'#13#10'  asm'#13
  +#10'  console.log(''ZDIM=''+arr.length);'#13#10'  console.log(''YDIM=''+arr['
  +'0].length);'#13#10'  console.log(''XDIM=''+arr[0][0].length);'#13#10'  var '
  +'s='''';'#13#10'  for (var i=0; i<arr.length; i++) {'#13#10'    console.log('
  +'''i=''+i);'#13#10'    for (var j=0; j<arr[i].length; j++) {'#13#10'      co'
  +'nsole.log(''s=>''+s+''<'');'#13#10'      console.log(''j=''+j);'#13#10'    '
  +'  s='''';'#13#10'      for (var k=0; k<arr[i][j].length; k++) {'#13#10'    '
  +'    if (k>0) {s=s+'','';}'#13#10'        s=s+arr[i][j][k];'#13#10'      }'
  +#13#10'    }'#13#10'    console.log(''s=>''+s+''<'');'#13#10'  }'#13#10'  co'
  +'nsole.log(''calling ConstructTableStringFromArray. z=''+z);'#13#10'  consol'
  +'e.log(''arr[z]=''+arr[z]);'#13#10'  end;'#13#10'  {$endif}'#13#10'  *)'#13
  +#10#13#10'  if length(arr)>0 then'#13#10'  begin'#13#10'    self.myTableView'
  +'.TableData:=myTableView.ConstructTableStringFromArray(arr[z]);'#13#10'  end'
  +';'#13#10'end;'#13#10#13#10'procedure TX3DTable.ReBuild3DTableData;'#13#10'v'
  +'ar'#13#10'    arr:T3DStringArray;'#13#10'    z:integer;'#13#10'    zData:T2'
  +'DStringArray;'#13#10'    NewData:String;'#13#10'begin'#13#10'//  Rebuild th'
  +'e full TableData string, substituting the current Z Table''s data at the re'
  +'levant Z-index'#13#10'  arr:=JsonStringTo3DStringArray(self.Table3DData);'
  +#13#10'  z:=self.ZSelector.ItemIndex;'#13#10'  zData:=self.myTableView.GetCe'
  +'llsAsArray(false);'#13#10'  arr[z]:=zData;'#13#10'  self.myNode.SetAttribut'
  +'eValue(''Table3DData'',''[[[0]]]''); // free some memory??'#13#10'  NewData'
  +':=self.Construct3DTableStringFromArray(arr);'#13#10'  self.myNode.SetAttrib'
  +'uteValue(''Table3DData'',NewData);'#13#10'end;'#13#10#13#10'procedure TX3DT'
  +'able.Resize3DData;'#13#10'var'#13#10'    arr,newArr:T3DStringArray;'#13#10
  +'    x,y,z:integer;'#13#10'    xdim,ydim,zdim:integer;'#13#10'    NewData:St'
  +'ring;'#13#10'begin'#13#10'  //myTableView.TableData:=''[1,2,3]'';   // to f'
  +'ree some memory?'#13#10'  // X or Y or Z dimension has been changed'#13#10
  +'  ydim:=strtoint(self.YDimEdit.ItemValue);'#13#10'  xdim:=strtoint(self.XDi'
  +'mEdit.ItemValue);'#13#10'  zdim:=strtoint(self.ZDimEdit.ItemValue);'#13#10
  +'//  setlength(newArr,self.ZSelector.MaxVal+1);'#13#10'  setlength(newArr,zd'
  +'im);'#13#10'  arr:=JsonStringTo3DStringArray(self.Table3DData);'#13#10'  fo'
  +'r z:=0 to length(newArr)-1 do'#13#10'  begin'#13#10'    setlength(NewArr[z]'
  +',ydim);'#13#10'    if z<length(arr) then'#13#10'    begin'#13#10'      for '
  +'y:=0 to ydim-1 do'#13#10'      begin'#13#10'        setlength(NewArr[z,y],x'
  +'dim);'#13#10'        if y<length(arr[z]) then'#13#10'        begin'#13#10' '
  +'         for x:=0 to xdim-1 do'#13#10'          begin'#13#10'            if'
  +' x<length(arr[z,y]) then'#13#10'              NewArr[z,y,x]:=arr[z,y,x]'#13
  +#10'            else'#13#10'              NewArr[z,y,x]:='''';'#13#10'      '
  +'    end;'#13#10'        end'#13#10'        else'#13#10'          for x:=0 t'
  +'o xdim-1 do'#13#10'            NewArr[z,y,x]:='''';'#13#10'      end;'#13#10
  +'    end'#13#10'    else'#13#10'    begin'#13#10'      for y:=0 to ydim-1 do'
  +#13#10'      begin'#13#10'        setlength(NewArr[z,y],xdim);'#13#10'      '
  +'  for x:=0 to xdim-1 do'#13#10'          NewArr[z,y,x]:='''';'#13#10'      '
  +'end;'#13#10'    end;'#13#10'  end;'#13#10'  NewData:=self.Construct3DTableS'
  +'tringFromArray(NewArr);'#13#10'  self.Table3DData:=NewData;'#13#10'end;'#13
  +#10#13#10'procedure TX3DTable.ZSelectorChange(e:TEventStatus;nodeID: AnsiStr'
  +'ing; myValue: AnsiString);'#13#10'begin'#13#10'  //{$ifdef JScript}showmess'
  +'age(''3d ZSelectorChange'');{$endif}'#13#10'  // Get the table data layer f'
  +'or this Z index, and display.'#13#10'  self.SetNew3DTableData;'#13#10'end;'
  +#13#10'procedure TX3DTable.TableChange(e:TEventStatus;nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'begin'#13#10'  //{$ifdef JScript}showmessage(''3'
  +'d TableChange'');{$endif}'#13#10'  self.ReBuild3DTableData;'#13#10'end;'#13
  +#10'procedure TX3DTable.XEditBoxChange(e:TEventStatus;nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'begin'#13#10'  //{$ifdef JScript}showmessage(''3'
  +'d XDim Change'');{$endif}'#13#10'  self.XDimension:=strtoint(myValue);'#13
  +#10'  self.ReSize3DData;'#13#10'end;'#13#10'procedure TX3DTable.YEditBoxChan'
  +'ge(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13
  +#10' // {$ifdef JScript}showmessage(''3d YDim Change'');{$endif}'#13#10'  se'
  +'lf.YDimension:=strtoint(myValue);'#13#10'  self.ReSize3DData;'#13#10'end;'
  +#13#10'procedure TX3DTable.ZEditBoxChange(e:TEventStatus;nodeID: AnsiString;'
  +' myValue: AnsiString);'#13#10'var'#13#10'    zeds:string;'#13#10'    i:inte'
  ,'ger;'#13#10'begin'#13#10' // {$ifdef JScript}showmessage(''3d ZDim Change'''
  +');{$endif}'#13#10'  self.ZDimension:=strtoint(myValue);'#13#10'//  self.ZSe'
  +'lector.MaxVal:=strtoint(myValue)-1;'#13#10'  zeds:=''['';'#13#10'  for i:=0'
  +' to self.ZDimension-1 do'#13#10'  begin'#13#10'    if i>0 then zeds:=zeds+'
  +''','';'#13#10'    zeds:=zeds + inttostr(i);'#13#10'  end;'#13#10'  zeds:=ze'
  +'ds+'']'';'#13#10'  self.ZSelector.OptionList:=zeds;'#13#10'  self.ReSize3DD'
  +'ata;'#13#10'end;'#13#10'procedure TX3DTable.PasteData(e:TEventStatus;nodeID'
  +': AnsiString; myValue: AnsiString);'#13#10'var'#13#10'    str:String;'#13#10
  +'    msg:string;'#13#10'    i:integer;'#13#10'begin'#13#10'  //paste Excel-f'
  +'ormat data to this grid'#13#10'   if (e=nil)  or (e.InitRunning=false) then'
  +#13#10'   begin'#13#10'     //showmessage(''new e'');'#13#10'     if (e=nil)'
  +' then'#13#10'     begin'#13#10'       e:=TEventStatus.Create(''Click'',node'
  +'Id);'#13#10'     end;'#13#10'     e.initRunning:=true;'#13#10'     PasteDia'
  +'logUnit.CompletionEvent:=e;'#13#10'     {$ifdef JScript}'#13#10'     e.Asyn'
  +'cProcsRunning.Add(''CopyFromClip'');'#13#10'     {$endif}'#13#10#13#10'   e'
  +'nd'#13#10'   else'#13#10'   begin'#13#10'     e.InitRunning:=false;'#13#10
  +'   end;'#13#10#13#10'   if e.InitRunning then'#13#10'   begin'#13#10'     P'
  +'asteDoneBtn.IsVisible:=false;'#13#10'     str:=mygetClipboardData(''Grid'')'
  +';'#13#10'   end;'#13#10#13#10'   if e.EventHasWaitingAsyncProcs = false the'
  +'n'#13#10'   // this is lazarus and a confirm dialog is not needed'#13#10'  '
  +' // otherwise this is HTML and we have waited for a ctrl-V event from the P'
  +'asteDialog form'#13#10'   begin'#13#10'     {$ifdef JScript}'#13#10'     as'
  +'m'#13#10'       pas.NodeUtils.StartingUp=false;'#13#10'       var pasteTarg'
  +'et = document.getElementById(''PasteTargetContents'');'#13#10'       str = '
  +'pasteTarget.value;'#13#10'       //alert(''Paste string = >''+str+''<'' );'
  +#13#10'     end;'#13#10'     {$endif}'#13#10'//     ShowAllChars(str);'#13#10
  +'     if trim(str)<>'''' then'#13#10'     begin'#13#10'       self.myTableVi'
  +'ew.LoadTableFromExcelCopy(str);'#13#10'       if (self.ZDimension>1)'#13#10
  +'       and ((self.XDimension<>self.myTableView.NumCols)'#13#10'       or (s'
  +'elf.YDimension<>self.myTableView.NumRows)) then'#13#10'         showmessage'
  +'(''X,Y dimensions have changed - this will affect data at all Z levels'');'
  +#13#10'       self.XDimension:=self.myTableView.NumCols;'#13#10'       self.'
  +'YDimension:=self.myTableView.NumRows;'#13#10'       self.XDimEdit.ItemValue'
  +':=inttostr(self.XDimension);'#13#10'       self.YDimEdit.ItemValue:=inttost'
  +'r(self.YDimension);'#13#10'       self.ReBuild3DTableData;'#13#10'       se'
  +'lf.ReSize3DData;'#13#10'     end'#13#10'     else'#13#10'       showmessage'
  +'(''Nothing on clipboard to paste'');'#13#10'   end;'#13#10' end;'#13#10#13
  +#10#13#10'function TX3DTable.GetZIndex:integer;'#13#10'begin'#13#10'  result'
  +':=StrToInt(myNode.getAttribute(''ZIndex'',true).AttribValue);'#13#10'end;'
  +#13#10'function TX3DTable.GetXDimension:integer;'#13#10'begin'#13#10'  resul'
  +'t:=StrToInt(myNode.getAttribute(''XDimension'',true).AttribValue);'#13#10'e'
  +'nd;'#13#10'function TX3DTable.GetYDimension:integer;'#13#10'begin'#13#10'  '
  +'result:=StrToInt(myNode.getAttribute(''YDimension'',true).AttribValue);'#13
  +#10'end;'#13#10'function TX3DTable.GetZDimension:integer;'#13#10'var'#13#10
  +'    v:String;'#13#10'begin'#13#10'  v:=myNode.getAttribute(''ZDimension'',t'
  +'rue).AttribValue;'#13#10'  if v<>'''' then'#13#10'    result:=StrToInt(v)'
  +#13#10'  else'#13#10'    result:=0;'#13#10'end;'#13#10'function TX3DTable.Ge'
  +'tTable3DData:string;'#13#10'begin'#13#10'  result:=myNode.getAttribute(''Ta'
  +'ble3DData'',true).AttribValue;'#13#10'end;'#13#10#13#10'procedure TX3DTable'
  +'.SetZIndex(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttributeValue('
  +'''ZIndex'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10'procedure TX3D'
  +'Table.SetXDimension(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttrib'
  +'uteValue(''XDimension'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10'p'
  +'rocedure TX3DTable.SetYDimension(AValue:integer);'#13#10'begin'#13#10'  myN'
  +'ode.SetAttributeValue(''YDimension'',IntToStr(AValue),''Integer'');'#13#10
  +'end;'#13#10'procedure TX3DTable.SetZDimension(AValue:integer);'#13#10'begin'
  +#13#10'  myNode.SetAttributeValue(''ZDimension'',IntToStr(AValue),''Integer'
  +''');'#13#10'end;'#13#10'procedure TX3DTable.SetTable3DData(const AValue:str'
  +'ing);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''Table3DData'',AValue'
  +',''String'');'#13#10'  if self.ZSelector<>nil then'#13#10'    SetNew3DTable'
  +'Data;'#13#10#13#10'end;'#13#10#13#10'begin'#13#10'AddWrapperDefaultAttribs('
  +'myDefaultAttribs);'#13#10'AddDefaultAttribute(myDefaultAttribs,''ContainerW'
  +'idth'',''String'','''','''',false);'#13#10'AddDefaultAttribute(myDefaultAtt'
  +'ribs,''ContainerHeight'',''String'','''','''',false);'#13#10'AddDefaultAttr'
  ,'ibute(myDefaultAttribs,''Border'',''Boolean'',''True'','''',false);'#13#10
  +'AddDefaultAttribute(myDefaultAttribs,''SpacingAround'',''Integer'',''0'','''
  +''',false);'#13#10'AddDefaultAttribute(myDefaultAttribs,''BgColor'',''Color'
  +''',''#FFFFFF'','''',false);'#13#10'AddDefaultAttribute(myDefaultAttribs,''I'
  +'nheritColor'',''Boolean'',''False'','''',false);'#13#10'AddDefaultAttribute'
  +'(myDefaultAttribs,''Table3DData'',''String'',''[[["z"]]]'','''',false);'#13
  +#10'AddDefaultAttribute(myDefaultAttribs,''XDimension'',''Integer'',''1'','''
  +''',false,false);'#13#10'AddDefaultAttribute(myDefaultAttribs,''YDimension'''
  +',''Integer'',''1'','''',false,false);'#13#10'AddDefaultAttribute(myDefaultA'
  +'ttribs,''ZDimension'',''Integer'',''1'','''',false,false);'#13#10'AddDefaul'
  +'tAttribute(myDefaultAttribs,''ZIndex'',''Integer'',''0'','''',false);'#13#10
  +#13#10'AddDefaultsToTable(MyNodeType,myDefaultAttribs);'#13#10#13#10'AddAttr'
  +'ibOptions(MyNodeType,''Alignment'',AlignmentOptions);'#13#10'{$ifndef JScri'
  +'pt}'#13#10'RegisterClass(TX3DTable);'#13#10'AddNodeFuncLookup(MyNodeType,@C'
  +'reate3DTableWidget);'#13#10'{$else}'#13#10'AddNodeFuncLookup(MyNodeType,@Cr'
  +'eateinterfaceObj3DTable,@Create3DTableWidget);'#13#10'{$endif}'#13#10#13#10
  +'end.'#13#10#13#10
]);
LazarusResources.Add('gpu-browser','JS',[
  '/**'#10' * gpu.js'#10' * http://gpu.rocks/'#10' *'#10' * GPU Accelerated Jav'
  +'aScript'#10' *'#10' * @version 2.9.3'#10' * @date Wed Apr 01 2020 07:53:27 '
  +'GMT-0400 (Eastern Daylight Time)'#10' *'#10' * @license MIT'#10' * The MIT '
  +'License'#10' *'#10' * Copyright (c) 2020 gpu.js Team'#10' */(function(f){if'
  +'(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()'
  +'}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if'
  +'(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined")'
  +'{g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.GPU = f()'
  +'}})(function(){var define,module,exports;return (function(){function r(e,n,'
  +'t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&re'
  +'quire;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot f'
  +'ind module ''"+i+"''");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={export'
  +'s:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p'
  +',p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof requir'
  +'e&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(re'
  +'quire,module,exports){'#10'(function (global, factory) {'#10'  typeof expor'
  +'ts === ''object'' && typeof module !== ''undefined'' ? factory(exports) :'
  +#10'  typeof define === ''function'' && define.amd ? define([''exports''], f'
  +'actory) :'#10'  (global = global || self, factory(global.acorn = {}));'#10
  +'}(this, function (exports) { ''use strict'';'#10#10#10'  var reservedWords '
  +'= {'#10'    3: "abstract boolean byte char class double enum export extends'
  +' final float goto implements import int interface long native package priva'
  +'te protected public short static super synchronized throws transient volati'
  +'le",'#10'    5: "class enum extends super const export import",'#10'    6: '
  +'"enum",'#10'    strict: "implements interface let package private protected'
  +' public static yield",'#10'    strictBind: "eval arguments"'#10'  };'#10#10
  +#10'  var ecma5AndLessKeywords = "break case catch continue debugger default'
  +' do else finally for function if return switch throw try var while with nul'
  +'l true false instanceof typeof void delete new in this";'#10#10'  var keywo'
  +'rds = {'#10'    5: ecma5AndLessKeywords,'#10'    "5module": ecma5AndLessKey'
  +'words + " export import",'#10'    6: ecma5AndLessKeywords + " const class e'
  +'xtends export import super"'#10'  };'#10#10'  var keywordRelationalOperator'
  +' = /^in(stanceof)?$/;'#10#10#10'  var nonASCIIidentifierStartChars = "\xaa\'
  +'xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\'
  +'u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-'
  +'\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u05'
  +'88\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u0'
  +'6e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u0'
  +'7b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0'
  +'858\u0860-\u086a\u08a0-\u08b4\u08b6-\u08bd\u0904-\u0939\u093d\u0950\u0958-\'
  +'u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2'
  +'\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-'
  +'\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\'
  +'u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa'
  +'8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05'
  +'-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3'
  +'d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b'
  +'95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd'
  +'0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0'
  +'c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\'
  +'u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\'
  +'u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a'
  +'-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e'
  +'46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0e'
  +'b3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0'
  +'f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u'
  +'106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-'
  +'\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u12'
  +'8d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u'
  +'12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13f'
  +'d\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u'
  +'170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780'
  +'-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u19'
  +'1e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\'
  ,'u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5'
  +'\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1'
  +'cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u'
  +'1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-'
  +'\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1f'
  +'d3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u'
  +'209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u'
  +'2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e'
  +'\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d6'
  +'7\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2'
  +'dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029'
  +'\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u3'
  +'0ff\u3105-\u312f\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-'
  +'\u9fef\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua64'
  +'0-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7bf\u'
  +'a7c2-\ua7c6\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua87'
  +'3\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua9'
  +'60-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\'
  +'uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5'
  +'\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab0'
  +'1-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\u'
  +'ab5c-\uab67\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6'
  +'d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\uf'
  +'b38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\u'
  +'fd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41'
  +'-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";'
  +#10'  var nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u04'
  +'83-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u06'
  +'4b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u'
  +'06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-'
  +'\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08d3-\u08e1\u08'
  +'e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u'
  +'0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u'
  +'09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\'
  +'u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb'
  +'-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b'
  +'44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bb'
  +'e-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3e-\u'
  +'0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\'
  +'u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\'
  +'u0ce6-\u0cef\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4'
  +'d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8'
  +'-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e'
  +'59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0'
  +'f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0'
  +'fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\'
  +'u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u13'
  +'71\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17'
  +'e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\'
  +'u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a9'
  +'0-\u1a99\u1ab0-\u1abd\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u'
  +'1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c4'
  +'9\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1'
  +'df9\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u'
  +'2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\'
  +'ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua'
  +'8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953'
  +'\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa'
  +'43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaa'
  +'be\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uab'
  +'f9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uf'
  +'f3f";'#10#10'  var nonASCIIidentifierStart = new RegExp("[" + nonASCIIident'
  +'ifierStartChars + "]");'#10'  var nonASCIIidentifier = new RegExp("[" + non'
  +'ASCIIidentifierStartChars + nonASCIIidentifierChars + "]");'#10#10'  nonASC'
  ,'IIidentifierStartChars = nonASCIIidentifierChars = null;'#10#10#10'  var as'
  +'tralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,2'
  +'8,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,'
  +'310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,2'
  +'5,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17'
  +',111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,3'
  +'0,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,'
  +'7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46'
  +',42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29'
  +',0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,'
  +'0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,'
  +'568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6'
  +'135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3'
  +',0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,'
  +'24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,130'
  +'1,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2'
  +',2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2'
  +',16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];'#10#10'  var astral'
  +'IdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,57'
  +'4,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2'
  +',49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,'
  +'193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,24'
  +'3,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21'
  +',2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,2'
  +'6,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,'
  +'49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,'
  +'6,6,9,792487,239];'#10#10'  function isInAstralSet(code, set) {'#10'    var'
  +' pos = 0x10000;'#10'    for (var i = 0; i < set.length; i += 2) {'#10'     '
  +' pos += set[i];'#10'      if (pos > code) { return false }'#10'      pos +='
  +' set[i + 1];'#10'      if (pos >= code) { return true }'#10'    }'#10'  }'
  +#10#10#10'  function isIdentifierStart(code, astral) {'#10'    if (code < 65'
  +') { return code === 36 }'#10'    if (code < 91) { return true }'#10'    if '
  +'(code < 97) { return code === 95 }'#10'    if (code < 123) { return true }'
  +#10'    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart'
  +'.test(String.fromCharCode(code)) }'#10'    if (astral === false) { return f'
  +'alse }'#10'    return isInAstralSet(code, astralIdentifierStartCodes)'#10' '
  +' }'#10#10#10'  function isIdentifierChar(code, astral) {'#10'    if (code <'
  +' 48) { return code === 36 }'#10'    if (code < 58) { return true }'#10'    '
  +'if (code < 65) { return false }'#10'    if (code < 91) { return true }'#10
  +'    if (code < 97) { return code === 95 }'#10'    if (code < 123) { return '
  +'true }'#10'    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentif'
  +'ier.test(String.fromCharCode(code)) }'#10'    if (astral === false) { retur'
  +'n false }'#10'    return isInAstralSet(code, astralIdentifierStartCodes) ||'
  +' isInAstralSet(code, astralIdentifierCodes)'#10'  }'#10#10#10#10#10#10'  va'
  +'r TokenType = function TokenType(label, conf) {'#10'    if ( conf === void '
  +'0 ) conf = {};'#10#10'    this.label = label;'#10'    this.keyword = conf.k'
  +'eyword;'#10'    this.beforeExpr = !!conf.beforeExpr;'#10'    this.startsExp'
  +'r = !!conf.startsExpr;'#10'    this.isLoop = !!conf.isLoop;'#10'    this.is'
  +'Assign = !!conf.isAssign;'#10'    this.prefix = !!conf.prefix;'#10'    this'
  +'.postfix = !!conf.postfix;'#10'    this.binop = conf.binop || null;'#10'   '
  +' this.updateContext = null;'#10'  };'#10#10'  function binop(name, prec) {'
  +#10'    return new TokenType(name, {beforeExpr: true, binop: prec})'#10'  }'
  +#10'  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};'
  +#10#10#10'  var keywords$1 = {};'#10#10'  function kw(name, options) {'#10' '
  +'   if ( options === void 0 ) options = {};'#10#10'    options.keyword = nam'
  +'e;'#10'    return keywords$1[name] = new TokenType(name, options)'#10'  }'
  +#10#10'  var types = {'#10'    num: new TokenType("num", startsExpr),'#10'  '
  +'  regexp: new TokenType("regexp", startsExpr),'#10'    string: new TokenTyp'
  +'e("string", startsExpr),'#10'    name: new TokenType("name", startsExpr),'
  +#10'    eof: new TokenType("eof"),'#10#10'    bracketL: new TokenType("[", {'
  +'beforeExpr: true, startsExpr: true}),'#10'    bracketR: new TokenType("]"),'
  +#10'    braceL: new TokenType("{", {beforeExpr: true, startsExpr: true}),'#10
  +'    braceR: new TokenType("}"),'#10'    parenL: new TokenType("(", {beforeE'
  +'xpr: true, startsExpr: true}),'#10'    parenR: new TokenType(")"),'#10'    '
  ,'comma: new TokenType(",", beforeExpr),'#10'    semi: new TokenType(";", bef'
  +'oreExpr),'#10'    colon: new TokenType(":", beforeExpr),'#10'    dot: new T'
  +'okenType("."),'#10'    question: new TokenType("?", beforeExpr),'#10'    ar'
  +'row: new TokenType("=>", beforeExpr),'#10'    template: new TokenType("temp'
  +'late"),'#10'    invalidTemplate: new TokenType("invalidTemplate"),'#10'    '
  +'ellipsis: new TokenType("...", beforeExpr),'#10'    backQuote: new TokenTyp'
  +'e("`", startsExpr),'#10'    dollarBraceL: new TokenType("${", {beforeExpr: '
  +'true, startsExpr: true}),'#10#10#10'    eq: new TokenType("=", {beforeExpr:'
  +' true, isAssign: true}),'#10'    assign: new TokenType("_=", {beforeExpr: t'
  +'rue, isAssign: true}),'#10'    incDec: new TokenType("++/--", {prefix: true'
  +', postfix: true, startsExpr: true}),'#10'    prefix: new TokenType("!/~", {'
  +'beforeExpr: true, prefix: true, startsExpr: true}),'#10'    logicalOR: bino'
  +'p("||", 1),'#10'    logicalAND: binop("&&", 2),'#10'    bitwiseOR: binop("|'
  +'", 3),'#10'    bitwiseXOR: binop("^", 4),'#10'    bitwiseAND: binop("&", 5)'
  +','#10'    equality: binop("==/!=/===/!==", 6),'#10'    relational: binop("<'
  +'/>/<=/>=", 7),'#10'    bitShift: binop("<</>>/>>>", 8),'#10'    plusMin: ne'
  +'w TokenType("+/-", {beforeExpr: true, binop: 9, prefix: true, startsExpr: t'
  +'rue}),'#10'    modulo: binop("%", 10),'#10'    star: binop("*", 10),'#10'  '
  +'  slash: binop("/", 10),'#10'    starstar: new TokenType("**", {beforeExpr:'
  +' true}),'#10#10'    _break: kw("break"),'#10'    _case: kw("case", beforeEx'
  +'pr),'#10'    _catch: kw("catch"),'#10'    _continue: kw("continue"),'#10'  '
  +'  _debugger: kw("debugger"),'#10'    _default: kw("default", beforeExpr),'
  +#10'    _do: kw("do", {isLoop: true, beforeExpr: true}),'#10'    _else: kw("'
  +'else", beforeExpr),'#10'    _finally: kw("finally"),'#10'    _for: kw("for"'
  +', {isLoop: true}),'#10'    _function: kw("function", startsExpr),'#10'    _'
  +'if: kw("if"),'#10'    _return: kw("return", beforeExpr),'#10'    _switch: k'
  +'w("switch"),'#10'    _throw: kw("throw", beforeExpr),'#10'    _try: kw("try'
  +'"),'#10'    _var: kw("var"),'#10'    _const: kw("const"),'#10'    _while: k'
  +'w("while", {isLoop: true}),'#10'    _with: kw("with"),'#10'    _new: kw("ne'
  +'w", {beforeExpr: true, startsExpr: true}),'#10'    _this: kw("this", starts'
  +'Expr),'#10'    _super: kw("super", startsExpr),'#10'    _class: kw("class",'
  +' startsExpr),'#10'    _extends: kw("extends", beforeExpr),'#10'    _export:'
  +' kw("export"),'#10'    _import: kw("import", startsExpr),'#10'    _null: kw'
  +'("null", startsExpr),'#10'    _true: kw("true", startsExpr),'#10'    _false'
  +': kw("false", startsExpr),'#10'    _in: kw("in", {beforeExpr: true, binop: '
  +'7}),'#10'    _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}),'
  +#10'    _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsExpr: t'
  +'rue}),'#10'    _void: kw("void", {beforeExpr: true, prefix: true, startsExp'
  +'r: true}),'#10'    _delete: kw("delete", {beforeExpr: true, prefix: true, s'
  +'tartsExpr: true})'#10'  };'#10#10#10'  var lineBreak = /\r\n?|\n|\u2028|\u2'
  +'029/;'#10'  var lineBreakG = new RegExp(lineBreak.source, "g");'#10#10'  fu'
  +'nction isNewLine(code, ecma2019String) {'#10'    return code === 10 || code'
  +' === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))'#10'  '
  +'}'#10#10'  var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000'
  +'\ufeff]/;'#10#10'  var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;'#10
  +#10'  var ref = Object.prototype;'#10'  var hasOwnProperty = ref.hasOwnPrope'
  +'rty;'#10'  var toString = ref.toString;'#10#10#10'  function has(obj, propN'
  +'ame) {'#10'    return hasOwnProperty.call(obj, propName)'#10'  }'#10#10'  v'
  +'ar isArray = Array.isArray || (function (obj) { return ('#10'    toString.c'
  +'all(obj) === "[object Array]"'#10'  ); });'#10#10'  function wordsRegexp(wo'
  +'rds) {'#10'    return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$")'
  +#10'  }'#10#10#10'  var Position = function Position(line, col) {'#10'    th'
  +'is.line = line;'#10'    this.column = col;'#10'  };'#10#10'  Position.proto'
  +'type.offset = function offset (n) {'#10'    return new Position(this.line, '
  +'this.column + n)'#10'  };'#10#10'  var SourceLocation = function SourceLoca'
  +'tion(p, start, end) {'#10'    this.start = start;'#10'    this.end = end;'
  +#10'    if (p.sourceFile !== null) { this.source = p.sourceFile; }'#10'  };'
  +#10#10#10'  function getLineInfo(input, offset) {'#10'    for (var line = 1,'
  +' cur = 0;;) {'#10'      lineBreakG.lastIndex = cur;'#10'      var match = l'
  +'ineBreakG.exec(input);'#10'      if (match && match.index < offset) {'#10' '
  +'       ++line;'#10'        cur = match.index + match[0].length;'#10'      }'
  +' else {'#10'        return new Position(line, offset - cur)'#10'      }'#10
  +'    }'#10'  }'#10#10#10'  var defaultOptions = {'#10'    ecmaVersion: 10,'
  +#10'    sourceType: "script",'#10'    onInsertedSemicolon: null,'#10'    onT'
  ,'railingComma: null,'#10'    allowReserved: null,'#10'    allowReturnOutside'
  +'Function: false,'#10'    allowImportExportEverywhere: false,'#10'    allowA'
  +'waitOutsideFunction: false,'#10'    allowHashBang: false,'#10'    locations'
  +': false,'#10'    onToken: null,'#10'    onComment: null,'#10'    ranges: fa'
  +'lse,'#10'    program: null,'#10'    sourceFile: null,'#10'    directSourceF'
  +'ile: null,'#10'    preserveParens: false'#10'  };'#10#10#10'  function getO'
  +'ptions(opts) {'#10'    var options = {};'#10#10'    for (var opt in default'
  +'Options)'#10'      { options[opt] = opts && has(opts, opt) ? opts[opt] : de'
  +'faultOptions[opt]; }'#10#10'    if (options.ecmaVersion >= 2015)'#10'      '
  +'{ options.ecmaVersion -= 2009; }'#10#10'    if (options.allowReserved == nu'
  +'ll)'#10'      { options.allowReserved = options.ecmaVersion < 5; }'#10#10' '
  +'   if (isArray(options.onToken)) {'#10'      var tokens = options.onToken;'
  +#10'      options.onToken = function (token) { return tokens.push(token); };'
  +#10'    }'#10'    if (isArray(options.onComment))'#10'      { options.onComm'
  +'ent = pushComment(options, options.onComment); }'#10#10'    return options'
  +#10'  }'#10#10'  function pushComment(options, array) {'#10'    return funct'
  +'ion(block, text, start, end, startLoc, endLoc) {'#10'      var comment = {'
  +#10'        type: block ? "Block" : "Line",'#10'        value: text,'#10'   '
  +'     start: start,'#10'        end: end'#10'      };'#10'      if (options.'
  +'locations)'#10'        { comment.loc = new SourceLocation(this, startLoc, e'
  +'ndLoc); }'#10'      if (options.ranges)'#10'        { comment.range = [star'
  +'t, end]; }'#10'      array.push(comment);'#10'    }'#10'  }'#10#10'  var'#10
  +'      SCOPE_TOP = 1,'#10'      SCOPE_FUNCTION = 2,'#10'      SCOPE_VAR = SC'
  +'OPE_TOP | SCOPE_FUNCTION,'#10'      SCOPE_ASYNC = 4,'#10'      SCOPE_GENERA'
  +'TOR = 8,'#10'      SCOPE_ARROW = 16,'#10'      SCOPE_SIMPLE_CATCH = 32,'#10
  +'      SCOPE_SUPER = 64,'#10'      SCOPE_DIRECT_SUPER = 128;'#10#10'  functi'
  +'on functionFlags(async, generator) {'#10'    return SCOPE_FUNCTION | (async'
  +' ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)'#10'  }'#10#10'  va'
  +'r'#10'      BIND_NONE = 0, '#10'      BIND_VAR = 1, '#10'      BIND_LEXICAL'
  +' = 2, '#10'      BIND_FUNCTION = 3, '#10'      BIND_SIMPLE_CATCH = 4, '#10
  +'      BIND_OUTSIDE = 5; '#10#10'  var Parser = function Parser(options, inp'
  +'ut, startPos) {'#10'    this.options = options = getOptions(options);'#10' '
  +'   this.sourceFile = options.sourceFile;'#10'    this.keywords = wordsRegex'
  +'p(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ?'
  +' "5module" : 5]);'#10'    var reserved = "";'#10'    if (options.allowReser'
  +'ved !== true) {'#10'      for (var v = options.ecmaVersion;; v--)'#10'     '
  +'   { if (reserved = reservedWords[v]) { break } }'#10'      if (options.sou'
  +'rceType === "module") { reserved += " await"; }'#10'    }'#10'    this.rese'
  +'rvedWords = wordsRegexp(reserved);'#10'    var reservedStrict = (reserved ?'
  +' reserved + " " : "") + reservedWords.strict;'#10'    this.reservedWordsStr'
  +'ict = wordsRegexp(reservedStrict);'#10'    this.reservedWordsStrictBind = w'
  +'ordsRegexp(reservedStrict + " " + reservedWords.strictBind);'#10'    this.i'
  +'nput = String(input);'#10#10'    this.containsEsc = false;'#10#10#10'    if'
  +' (startPos) {'#10'      this.pos = startPos;'#10'      this.lineStart = thi'
  +'s.input.lastIndexOf("\n", startPos - 1) + 1;'#10'      this.curLine = this.'
  +'input.slice(0, this.lineStart).split(lineBreak).length;'#10'    } else {'#10
  +'      this.pos = this.lineStart = 0;'#10'      this.curLine = 1;'#10'    }'
  +#10#10'    this.type = types.eof;'#10'    this.value = null;'#10'    this.st'
  +'art = this.end = this.pos;'#10'    this.startLoc = this.endLoc = this.curPo'
  +'sition();'#10#10'    this.lastTokEndLoc = this.lastTokStartLoc = null;'#10
  +'    this.lastTokStart = this.lastTokEnd = this.pos;'#10#10'    this.context'
  +' = this.initialContext();'#10'    this.exprAllowed = true;'#10#10'    this.'
  +'inModule = options.sourceType === "module";'#10'    this.strict = this.inMo'
  +'dule || this.strictDirective(this.pos);'#10#10'    this.potentialArrowAt = '
  +'-1;'#10#10'    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;'#10
  +'    this.labels = [];'#10'    this.undefinedExports = {};'#10#10'    if (th'
  +'is.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!")'
  +#10'      { this.skipLineComment(2); }'#10#10'    this.scopeStack = [];'#10
  +'    this.enterScope(SCOPE_TOP);'#10#10'    this.regexpState = null;'#10'  }'
  +';'#10#10'  var prototypeAccessors = { inFunction: { configurable: true },in'
  +'Generator: { configurable: true },inAsync: { configurable: true },allowSupe'
  +'r: { configurable: true },allowDirectSuper: { configurable: true },treatFun'
  +'ctionsAsVar: { configurable: true } };'#10#10'  Parser.prototype.parse = fu'
  +'nction parse () {'#10'    var node = this.options.program || this.startNode'
  ,'();'#10'    this.nextToken();'#10'    return this.parseTopLevel(node)'#10' '
  +' };'#10#10'  prototypeAccessors.inFunction.get = function () { return (this'
  +'.currentVarScope().flags & SCOPE_FUNCTION) > 0 };'#10'  prototypeAccessors.'
  +'inGenerator.get = function () { return (this.currentVarScope().flags & SCOP'
  +'E_GENERATOR) > 0 };'#10'  prototypeAccessors.inAsync.get = function () { re'
  +'turn (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };'#10'  prototypeAcc'
  +'essors.allowSuper.get = function () { return (this.currentThisScope().flags'
  +' & SCOPE_SUPER) > 0 };'#10'  prototypeAccessors.allowDirectSuper.get = func'
  +'tion () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 }'
  +';'#10'  prototypeAccessors.treatFunctionsAsVar.get = function () { return t'
  +'his.treatFunctionsAsVarInScope(this.currentScope()) };'#10#10'  Parser.prot'
  +'otype.inNonArrowFunction = function inNonArrowFunction () { return (this.cu'
  +'rrentThisScope().flags & SCOPE_FUNCTION) > 0 };'#10#10'  Parser.extend = fu'
  +'nction extend () {'#10'      var plugins = [], len = arguments.length;'#10
  +'      while ( len-- ) plugins[ len ] = arguments[ len ];'#10#10'    var cls'
  +' = this;'#10'    for (var i = 0; i < plugins.length; i++) { cls = plugins[i'
  +'](cls); }'#10'    return cls'#10'  };'#10#10'  Parser.parse = function pars'
  +'e (input, options) {'#10'    return new this(options, input).parse()'#10'  '
  +'};'#10#10'  Parser.parseExpressionAt = function parseExpressionAt (input, p'
  +'os, options) {'#10'    var parser = new this(options, input, pos);'#10'    '
  +'parser.nextToken();'#10'    return parser.parseExpression()'#10'  };'#10#10
  +'  Parser.tokenizer = function tokenizer (input, options) {'#10'    return n'
  +'ew this(options, input)'#10'  };'#10#10'  Object.defineProperties( Parser.p'
  +'rototype, prototypeAccessors );'#10#10'  var pp = Parser.prototype;'#10#10
  +#10'  var literal = /^(?:''((?:\\.|[^''])*?)''|"((?:\\.|[^"])*?)")/;'#10'  p'
  +'p.strictDirective = function(start) {'#10'    for (;;) {'#10'      skipWhit'
  +'eSpace.lastIndex = start;'#10'      start += skipWhiteSpace.exec(this.input'
  +')[0].length;'#10'      var match = literal.exec(this.input.slice(start));'
  +#10'      if (!match) { return false }'#10'      if ((match[1] || match[2]) '
  +'=== "use strict") { return true }'#10'      start += match[0].length;'#10#10
  +'      skipWhiteSpace.lastIndex = start;'#10'      start += skipWhiteSpace.e'
  +'xec(this.input)[0].length;'#10'      if (this.input[start] === ";")'#10'   '
  +'     { start++; }'#10'    }'#10'  };'#10#10#10'  pp.eat = function(type) {'
  +#10'    if (this.type === type) {'#10'      this.next();'#10'      return tr'
  +'ue'#10'    } else {'#10'      return false'#10'    }'#10'  };'#10#10#10'  p'
  +'p.isContextual = function(name) {'#10'    return this.type === types.name &'
  +'& this.value === name && !this.containsEsc'#10'  };'#10#10#10'  pp.eatConte'
  +'xtual = function(name) {'#10'    if (!this.isContextual(name)) { return fal'
  +'se }'#10'    this.next();'#10'    return true'#10'  };'#10#10#10'  pp.expec'
  +'tContextual = function(name) {'#10'    if (!this.eatContextual(name)) { thi'
  +'s.unexpected(); }'#10'  };'#10#10#10'  pp.canInsertSemicolon = function() {'
  +#10'    return this.type === types.eof ||'#10'      this.type === types.brac'
  +'eR ||'#10'      lineBreak.test(this.input.slice(this.lastTokEnd, this.start'
  +'))'#10'  };'#10#10'  pp.insertSemicolon = function() {'#10'    if (this.can'
  +'InsertSemicolon()) {'#10'      if (this.options.onInsertedSemicolon)'#10'  '
  +'      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLo'
  +'c); }'#10'      return true'#10'    }'#10'  };'#10#10#10'  pp.semicolon = f'
  +'unction() {'#10'    if (!this.eat(types.semi) && !this.insertSemicolon()) {'
  +' this.unexpected(); }'#10'  };'#10#10'  pp.afterTrailingComma = function(to'
  +'kType, notNext) {'#10'    if (this.type === tokType) {'#10'      if (this.o'
  +'ptions.onTrailingComma)'#10'        { this.options.onTrailingComma(this.las'
  +'tTokStart, this.lastTokStartLoc); }'#10'      if (!notNext)'#10'        { t'
  +'his.next(); }'#10'      return true'#10'    }'#10'  };'#10#10#10'  pp.expec'
  +'t = function(type) {'#10'    this.eat(type) || this.unexpected();'#10'  };'
  +#10#10#10'  pp.unexpected = function(pos) {'#10'    this.raise(pos != null ?'
  +' pos : this.start, "Unexpected token");'#10'  };'#10#10'  function Destruct'
  +'uringErrors() {'#10'    this.shorthandAssign ='#10'    this.trailingComma ='
  +#10'    this.parenthesizedAssign ='#10'    this.parenthesizedBind ='#10'    '
  +'this.doubleProto ='#10'      -1;'#10'  }'#10#10'  pp.checkPatternErrors = f'
  +'unction(refDestructuringErrors, isAssign) {'#10'    if (!refDestructuringEr'
  +'rors) { return }'#10'    if (refDestructuringErrors.trailingComma > -1)'#10
  +'      { this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma '
  +'is not permitted after the rest element"); }'#10'    var parens = isAssign '
  +'? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.paren'
  ,'thesizedBind;'#10'    if (parens > -1) { this.raiseRecoverable(parens, "Par'
  +'enthesized pattern"); }'#10'  };'#10#10'  pp.checkExpressionErrors = functi'
  +'on(refDestructuringErrors, andThrow) {'#10'    if (!refDestructuringErrors)'
  +' { return false }'#10'    var shorthandAssign = refDestructuringErrors.shor'
  +'thandAssign;'#10'    var doubleProto = refDestructuringErrors.doubleProto;'
  +#10'    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }'
  +#10'    if (shorthandAssign >= 0)'#10'      { this.raise(shorthandAssign, "S'
  +'horthand property assignments are valid only in destructuring patterns"); }'
  +#10'    if (doubleProto >= 0)'#10'      { this.raiseRecoverable(doubleProto,'
  +' "Redefinition of __proto__ property"); }'#10'  };'#10#10'  pp.checkYieldAw'
  +'aitInDefaultParams = function() {'#10'    if (this.yieldPos && (!this.await'
  +'Pos || this.yieldPos < this.awaitPos))'#10'      { this.raise(this.yieldPos'
  +', "Yield expression cannot be a default value"); }'#10'    if (this.awaitPo'
  +'s)'#10'      { this.raise(this.awaitPos, "Await expression cannot be a defa'
  +'ult value"); }'#10'  };'#10#10'  pp.isSimpleAssignTarget = function(expr) {'
  +#10'    if (expr.type === "ParenthesizedExpression")'#10'      { return this'
  +'.isSimpleAssignTarget(expr.expression) }'#10'    return expr.type === "Iden'
  +'tifier" || expr.type === "MemberExpression"'#10'  };'#10#10'  var pp$1 = Pa'
  +'rser.prototype;'#10#10#10#10'  pp$1.parseTopLevel = function(node) {'#10'  '
  +'  var exports = {};'#10'    if (!node.body) { node.body = []; }'#10'    whi'
  +'le (this.type !== types.eof) {'#10'      var stmt = this.parseStatement(nul'
  +'l, true, exports);'#10'      node.body.push(stmt);'#10'    }'#10'    if (th'
  +'is.inModule)'#10'      { for (var i = 0, list = Object.keys(this.undefinedE'
  +'xports); i < list.length; i += 1)'#10'        {'#10'          var name = li'
  +'st[i];'#10#10'          this.raiseRecoverable(this.undefinedExports[name].s'
  +'tart, ("Export ''" + name + "'' is not defined"));'#10'        } }'#10'    '
  +'this.adaptDirectivePrologue(node.body);'#10'    this.next();'#10'    node.s'
  +'ourceType = this.options.sourceType;'#10'    return this.finishNode(node, "'
  +'Program")'#10'  };'#10#10'  var loopLabel = {kind: "loop"}, switchLabel = {'
  +'kind: "switch"};'#10#10'  pp$1.isLet = function(context) {'#10'    if (this'
  +'.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }'#10
  +'    skipWhiteSpace.lastIndex = this.pos;'#10'    var skip = skipWhiteSpace.'
  +'exec(this.input);'#10'    var next = this.pos + skip[0].length, nextCh = th'
  +'is.input.charCodeAt(next);'#10'    if (nextCh === 91) { return true } '#10
  +'    if (context) { return false }'#10#10'    if (nextCh === 123) { return t'
  +'rue } '#10'    if (isIdentifierStart(nextCh, true)) {'#10'      var pos = n'
  +'ext + 1;'#10'      while (isIdentifierChar(this.input.charCodeAt(pos), true'
  +')) { ++pos; }'#10'      var ident = this.input.slice(next, pos);'#10'      '
  +'if (!keywordRelationalOperator.test(ident)) { return true }'#10'    }'#10' '
  +'   return false'#10'  };'#10#10'  pp$1.isAsyncFunction = function() {'#10' '
  +'   if (this.options.ecmaVersion < 8 || !this.isContextual("async"))'#10'   '
  +'   { return false }'#10#10'    skipWhiteSpace.lastIndex = this.pos;'#10'   '
  +' var skip = skipWhiteSpace.exec(this.input);'#10'    var next = this.pos + '
  +'skip[0].length;'#10'    return !lineBreak.test(this.input.slice(this.pos, n'
  +'ext)) &&'#10'      this.input.slice(next, next + 8) === "function" &&'#10' '
  +'     (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt'
  +'(next + 8)))'#10'  };'#10#10#10'  pp$1.parseStatement = function(context, t'
  +'opLevel, exports) {'#10'    var starttype = this.type, node = this.startNod'
  +'e(), kind;'#10#10'    if (this.isLet(context)) {'#10'      starttype = type'
  +'s._var;'#10'      kind = "let";'#10'    }'#10#10#10'    switch (starttype) '
  +'{'#10'    case types._break: case types._continue: return this.parseBreakCo'
  +'ntinueStatement(node, starttype.keyword)'#10'    case types._debugger: retu'
  +'rn this.parseDebuggerStatement(node)'#10'    case types._do: return this.pa'
  +'rseDoStatement(node)'#10'    case types._for: return this.parseForStatement'
  +'(node)'#10'    case types._function:'#10'      if ((context && (this.strict'
  +' || context !== "if" && context !== "label")) && this.options.ecmaVersion >'
  +'= 6) { this.unexpected(); }'#10'      return this.parseFunctionStatement(no'
  +'de, false, !context)'#10'    case types._class:'#10'      if (context) { th'
  +'is.unexpected(); }'#10'      return this.parseClass(node, true)'#10'    cas'
  +'e types._if: return this.parseIfStatement(node)'#10'    case types._return:'
  +' return this.parseReturnStatement(node)'#10'    case types._switch: return '
  +'this.parseSwitchStatement(node)'#10'    case types._throw: return this.pars'
  +'eThrowStatement(node)'#10'    case types._try: return this.parseTryStatemen'
  +'t(node)'#10'    case types._const: case types._var:'#10'      kind = kind |'
  ,'| this.value;'#10'      if (context && kind !== "var") { this.unexpected();'
  +' }'#10'      return this.parseVarStatement(node, kind)'#10'    case types._'
  +'while: return this.parseWhileStatement(node)'#10'    case types._with: retu'
  +'rn this.parseWithStatement(node)'#10'    case types.braceL: return this.par'
  +'seBlock(true, node)'#10'    case types.semi: return this.parseEmptyStatemen'
  +'t(node)'#10'    case types._export:'#10'    case types._import:'#10'      i'
  +'f (this.options.ecmaVersion > 10 && starttype === types._import) {'#10'    '
  +'    skipWhiteSpace.lastIndex = this.pos;'#10'        var skip = skipWhiteSp'
  +'ace.exec(this.input);'#10'        var next = this.pos + skip[0].length, nex'
  +'tCh = this.input.charCodeAt(next);'#10'        if (nextCh === 40) '#10'    '
  +'      { return this.parseExpressionStatement(node, this.parseExpression()) '
  +'}'#10'      }'#10#10'      if (!this.options.allowImportExportEverywhere) {'
  +#10'        if (!topLevel)'#10'          { this.raise(this.start, "''import'
  +''' and ''export'' may only appear at the top level"); }'#10'        if (!th'
  +'is.inModule)'#10'          { this.raise(this.start, "''import'' and ''expor'
  +'t'' may appear only with ''sourceType: module''"); }'#10'      }'#10'      '
  +'return starttype === types._import ? this.parseImport(node) : this.parseExp'
  +'ort(node, exports)'#10#10'    default:'#10'      if (this.isAsyncFunction()'
  +') {'#10'        if (context) { this.unexpected(); }'#10'        this.next()'
  +';'#10'        return this.parseFunctionStatement(node, true, !context)'#10
  +'      }'#10#10'      var maybeName = this.value, expr = this.parseExpressio'
  +'n();'#10'      if (starttype === types.name && expr.type === "Identifier" &'
  +'& this.eat(types.colon))'#10'        { return this.parseLabeledStatement(no'
  +'de, maybeName, expr, context) }'#10'      else { return this.parseExpressio'
  +'nStatement(node, expr) }'#10'    }'#10'  };'#10#10'  pp$1.parseBreakContinu'
  +'eStatement = function(node, keyword) {'#10'    var isBreak = keyword === "b'
  +'reak";'#10'    this.next();'#10'    if (this.eat(types.semi) || this.insert'
  +'Semicolon()) { node.label = null; }'#10'    else if (this.type !== types.na'
  +'me) { this.unexpected(); }'#10'    else {'#10'      node.label = this.parse'
  +'Ident();'#10'      this.semicolon();'#10'    }'#10#10'    var i = 0;'#10'  '
  +'  for (; i < this.labels.length; ++i) {'#10'      var lab = this.labels[i];'
  +#10'      if (node.label == null || lab.name === node.label.name) {'#10'    '
  +'    if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }'#10
  +'        if (node.label && isBreak) { break }'#10'      }'#10'    }'#10'    '
  +'if (i === this.labels.length) { this.raise(node.start, "Unsyntactic " + key'
  +'word); }'#10'    return this.finishNode(node, isBreak ? "BreakStatement" : '
  +'"ContinueStatement")'#10'  };'#10#10'  pp$1.parseDebuggerStatement = functi'
  +'on(node) {'#10'    this.next();'#10'    this.semicolon();'#10'    return th'
  +'is.finishNode(node, "DebuggerStatement")'#10'  };'#10#10'  pp$1.parseDoStat'
  +'ement = function(node) {'#10'    this.next();'#10'    this.labels.push(loop'
  +'Label);'#10'    node.body = this.parseStatement("do");'#10'    this.labels.'
  +'pop();'#10'    this.expect(types._while);'#10'    node.test = this.parsePar'
  +'enExpression();'#10'    if (this.options.ecmaVersion >= 6)'#10'      { this'
  +'.eat(types.semi); }'#10'    else'#10'      { this.semicolon(); }'#10'    re'
  +'turn this.finishNode(node, "DoWhileStatement")'#10'  };'#10#10#10'  pp$1.pa'
  +'rseForStatement = function(node) {'#10'    this.next();'#10'    var awaitAt'
  +' = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && '
  +'this.options.allowAwaitOutsideFunction)) && this.eatContextual("await")) ? '
  +'this.lastTokStart : -1;'#10'    this.labels.push(loopLabel);'#10'    this.e'
  +'nterScope(0);'#10'    this.expect(types.parenL);'#10'    if (this.type === '
  +'types.semi) {'#10'      if (awaitAt > -1) { this.unexpected(awaitAt); }'#10
  +'      return this.parseFor(node, null)'#10'    }'#10'    var isLet = this.i'
  +'sLet();'#10'    if (this.type === types._var || this.type === types._const '
  +'|| isLet) {'#10'      var init$1 = this.startNode(), kind = isLet ? "let" :'
  +' this.value;'#10'      this.next();'#10'      this.parseVar(init$1, true, k'
  +'ind);'#10'      this.finishNode(init$1, "VariableDeclaration");'#10'      i'
  +'f ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isCon'
  +'textual("of"))) && init$1.declarations.length === 1) {'#10'        if (this'
  +'.options.ecmaVersion >= 9) {'#10'          if (this.type === types._in) {'
  +#10'            if (awaitAt > -1) { this.unexpected(awaitAt); }'#10'        '
  +'  } else { node.await = awaitAt > -1; }'#10'        }'#10'        return th'
  +'is.parseForIn(node, init$1)'#10'      }'#10'      if (awaitAt > -1) { this.'
  +'unexpected(awaitAt); }'#10'      return this.parseFor(node, init$1)'#10'   '
  +' }'#10'    var refDestructuringErrors = new DestructuringErrors;'#10'    va'
  ,'r init = this.parseExpression(true, refDestructuringErrors);'#10'    if (th'
  +'is.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextua'
  +'l("of"))) {'#10'      if (this.options.ecmaVersion >= 9) {'#10'        if ('
  +'this.type === types._in) {'#10'          if (awaitAt > -1) { this.unexpecte'
  +'d(awaitAt); }'#10'        } else { node.await = awaitAt > -1; }'#10'      }'
  +#10'      this.toAssignable(init, false, refDestructuringErrors);'#10'      '
  +'this.checkLVal(init);'#10'      return this.parseForIn(node, init)'#10'    '
  +'} else {'#10'      this.checkExpressionErrors(refDestructuringErrors, true)'
  +';'#10'    }'#10'    if (awaitAt > -1) { this.unexpected(awaitAt); }'#10'   '
  +' return this.parseFor(node, init)'#10'  };'#10#10'  pp$1.parseFunctionState'
  +'ment = function(node, isAsync, declarationPosition) {'#10'    this.next();'
  +#10'    return this.parseFunction(node, FUNC_STATEMENT | (declarationPositio'
  +'n ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)'#10'  };'#10#10'  pp$1.par'
  +'seIfStatement = function(node) {'#10'    this.next();'#10'    node.test = t'
  +'his.parseParenExpression();'#10'    node.consequent = this.parseStatement("'
  +'if");'#10'    node.alternate = this.eat(types._else) ? this.parseStatement('
  +'"if") : null;'#10'    return this.finishNode(node, "IfStatement")'#10'  };'
  +#10#10'  pp$1.parseReturnStatement = function(node) {'#10'    if (!this.inFu'
  +'nction && !this.options.allowReturnOutsideFunction)'#10'      { this.raise('
  +'this.start, "''return'' outside of function"); }'#10'    this.next();'#10#10
  +#10'    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument '
  +'= null; }'#10'    else { node.argument = this.parseExpression(); this.semic'
  +'olon(); }'#10'    return this.finishNode(node, "ReturnStatement")'#10'  };'
  +#10#10'  pp$1.parseSwitchStatement = function(node) {'#10'    this.next();'
  +#10'    node.discriminant = this.parseParenExpression();'#10'    node.cases '
  +'= [];'#10'    this.expect(types.braceL);'#10'    this.labels.push(switchLab'
  +'el);'#10'    this.enterScope(0);'#10#10#10'    var cur;'#10'    for (var sa'
  +'wDefault = false; this.type !== types.braceR;) {'#10'      if (this.type =='
  +'= types._case || this.type === types._default) {'#10'        var isCase = t'
  +'his.type === types._case;'#10'        if (cur) { this.finishNode(cur, "Swit'
  +'chCase"); }'#10'        node.cases.push(cur = this.startNode());'#10'      '
  +'  cur.consequent = [];'#10'        this.next();'#10'        if (isCase) {'
  +#10'          cur.test = this.parseExpression();'#10'        } else {'#10'  '
  +'        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, "Multipl'
  +'e default clauses"); }'#10'          sawDefault = true;'#10'          cur.t'
  +'est = null;'#10'        }'#10'        this.expect(types.colon);'#10'      }'
  +' else {'#10'        if (!cur) { this.unexpected(); }'#10'        cur.conseq'
  +'uent.push(this.parseStatement(null));'#10'      }'#10'    }'#10'    this.ex'
  +'itScope();'#10'    if (cur) { this.finishNode(cur, "SwitchCase"); }'#10'   '
  +' this.next(); '#10'    this.labels.pop();'#10'    return this.finishNode(no'
  +'de, "SwitchStatement")'#10'  };'#10#10'  pp$1.parseThrowStatement = functio'
  +'n(node) {'#10'    this.next();'#10'    if (lineBreak.test(this.input.slice('
  +'this.lastTokEnd, this.start)))'#10'      { this.raise(this.lastTokEnd, "Ill'
  +'egal newline after throw"); }'#10'    node.argument = this.parseExpression('
  +');'#10'    this.semicolon();'#10'    return this.finishNode(node, "ThrowSta'
  +'tement")'#10'  };'#10#10#10'  var empty = [];'#10#10'  pp$1.parseTryStateme'
  +'nt = function(node) {'#10'    this.next();'#10'    node.block = this.parseB'
  +'lock();'#10'    node.handler = null;'#10'    if (this.type === types._catch'
  +') {'#10'      var clause = this.startNode();'#10'      this.next();'#10'   '
  +'   if (this.eat(types.parenL)) {'#10'        clause.param = this.parseBindi'
  +'ngAtom();'#10'        var simple = clause.param.type === "Identifier";'#10
  +'        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);'#10'        this.'
  +'checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);'#10'   '
  +'     this.expect(types.parenR);'#10'      } else {'#10'        if (this.opt'
  +'ions.ecmaVersion < 10) { this.unexpected(); }'#10'        clause.param = nu'
  +'ll;'#10'        this.enterScope(0);'#10'      }'#10'      clause.body = thi'
  +'s.parseBlock(false);'#10'      this.exitScope();'#10'      node.handler = t'
  +'his.finishNode(clause, "CatchClause");'#10'    }'#10'    node.finalizer = t'
  +'his.eat(types._finally) ? this.parseBlock() : null;'#10'    if (!node.handl'
  +'er && !node.finalizer)'#10'      { this.raise(node.start, "Missing catch or'
  +' finally clause"); }'#10'    return this.finishNode(node, "TryStatement")'
  +#10'  };'#10#10'  pp$1.parseVarStatement = function(node, kind) {'#10'    th'
  +'is.next();'#10'    this.parseVar(node, false, kind);'#10'    this.semicolon'
  +'();'#10'    return this.finishNode(node, "VariableDeclaration")'#10'  };'#10
  ,#10'  pp$1.parseWhileStatement = function(node) {'#10'    this.next();'#10' '
  +'   node.test = this.parseParenExpression();'#10'    this.labels.push(loopLa'
  +'bel);'#10'    node.body = this.parseStatement("while");'#10'    this.labels'
  +'.pop();'#10'    return this.finishNode(node, "WhileStatement")'#10'  };'#10
  +#10'  pp$1.parseWithStatement = function(node) {'#10'    if (this.strict) { '
  +'this.raise(this.start, "''with'' in strict mode"); }'#10'    this.next();'
  +#10'    node.object = this.parseParenExpression();'#10'    node.body = this.'
  +'parseStatement("with");'#10'    return this.finishNode(node, "WithStatement'
  +'")'#10'  };'#10#10'  pp$1.parseEmptyStatement = function(node) {'#10'    th'
  +'is.next();'#10'    return this.finishNode(node, "EmptyStatement")'#10'  };'
  +#10#10'  pp$1.parseLabeledStatement = function(node, maybeName, expr, contex'
  +'t) {'#10'    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 +'
  +'= 1)'#10'      {'#10'      var label = list[i$1];'#10#10'      if (label.na'
  +'me === maybeName)'#10'        { this.raise(expr.start, "Label ''" + maybeNa'
  +'me + "'' is already declared");'#10'    } }'#10'    var kind = this.type.is'
  +'Loop ? "loop" : this.type === types._switch ? "switch" : null;'#10'    for '
  +'(var i = this.labels.length - 1; i >= 0; i--) {'#10'      var label$1 = thi'
  +'s.labels[i];'#10'      if (label$1.statementStart === node.start) {'#10'   '
  +'     label$1.statementStart = this.start;'#10'        label$1.kind = kind;'
  +#10'      } else { break }'#10'    }'#10'    this.labels.push({name: maybeNa'
  +'me, kind: kind, statementStart: this.start});'#10'    node.body = this.pars'
  +'eStatement(context ? context.indexOf("label") === -1 ? context + "label" : '
  +'context : "label");'#10'    this.labels.pop();'#10'    node.label = expr;'
  +#10'    return this.finishNode(node, "LabeledStatement")'#10'  };'#10#10'  p'
  +'p$1.parseExpressionStatement = function(node, expr) {'#10'    node.expressi'
  +'on = expr;'#10'    this.semicolon();'#10'    return this.finishNode(node, "'
  +'ExpressionStatement")'#10'  };'#10#10#10'  pp$1.parseBlock = function(creat'
  +'eNewLexicalScope, node) {'#10'    if ( createNewLexicalScope === void 0 ) c'
  +'reateNewLexicalScope = true;'#10'    if ( node === void 0 ) node = this.sta'
  +'rtNode();'#10#10'    node.body = [];'#10'    this.expect(types.braceL);'#10
  +'    if (createNewLexicalScope) { this.enterScope(0); }'#10'    while (!this'
  +'.eat(types.braceR)) {'#10'      var stmt = this.parseStatement(null);'#10' '
  +'     node.body.push(stmt);'#10'    }'#10'    if (createNewLexicalScope) { t'
  +'his.exitScope(); }'#10'    return this.finishNode(node, "BlockStatement")'
  +#10'  };'#10#10#10'  pp$1.parseFor = function(node, init) {'#10'    node.ini'
  +'t = init;'#10'    this.expect(types.semi);'#10'    node.test = this.type =='
  +'= types.semi ? null : this.parseExpression();'#10'    this.expect(types.sem'
  +'i);'#10'    node.update = this.type === types.parenR ? null : this.parseExp'
  +'ression();'#10'    this.expect(types.parenR);'#10'    node.body = this.pars'
  +'eStatement("for");'#10'    this.exitScope();'#10'    this.labels.pop();'#10
  +'    return this.finishNode(node, "ForStatement")'#10'  };'#10#10#10'  pp$1.'
  +'parseForIn = function(node, init) {'#10'    var isForIn = this.type === typ'
  +'es._in;'#10'    this.next();'#10#10'    if ('#10'      init.type === "Varia'
  +'bleDeclaration" &&'#10'      init.declarations[0].init != null &&'#10'     '
  +' ('#10'        !isForIn ||'#10'        this.options.ecmaVersion < 8 ||'#10
  +'        this.strict ||'#10'        init.kind !== "var" ||'#10'        init.'
  +'declarations[0].id.type !== "Identifier"'#10'      )'#10'    ) {'#10'      '
  +'this.raise('#10'        init.start,'#10'        ((isForIn ? "for-in" : "for'
  +'-of") + " loop variable declaration may not have an initializer")'#10'     '
  +' );'#10'    } else if (init.type === "AssignmentPattern") {'#10'      this.'
  +'raise(init.start, "Invalid left-hand side in for-loop");'#10'    }'#10'    '
  +'node.left = init;'#10'    node.right = isForIn ? this.parseExpression() : t'
  +'his.parseMaybeAssign();'#10'    this.expect(types.parenR);'#10'    node.bod'
  +'y = this.parseStatement("for");'#10'    this.exitScope();'#10'    this.labe'
  +'ls.pop();'#10'    return this.finishNode(node, isForIn ? "ForInStatement" :'
  +' "ForOfStatement")'#10'  };'#10#10#10'  pp$1.parseVar = function(node, isFo'
  +'r, kind) {'#10'    node.declarations = [];'#10'    node.kind = kind;'#10'  '
  +'  for (;;) {'#10'      var decl = this.startNode();'#10'      this.parseVar'
  +'Id(decl, kind);'#10'      if (this.eat(types.eq)) {'#10'        decl.init ='
  +' this.parseMaybeAssign(isFor);'#10'      } else if (kind === "const" && !(t'
  +'his.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextu'
  +'al("of")))) {'#10'        this.unexpected();'#10'      } else if (decl.id.t'
  +'ype !== "Identifier" && !(isFor && (this.type === types._in || this.isConte'
  +'xtual("of")))) {'#10'        this.raise(this.lastTokEnd, "Complex binding p'
  ,'atterns require an initialization value");'#10'      } else {'#10'        d'
  +'ecl.init = null;'#10'      }'#10'      node.declarations.push(this.finishNo'
  +'de(decl, "VariableDeclarator"));'#10'      if (!this.eat(types.comma)) { br'
  +'eak }'#10'    }'#10'    return node'#10'  };'#10#10'  pp$1.parseVarId = fun'
  +'ction(decl, kind) {'#10'    decl.id = this.parseBindingAtom();'#10'    this'
  +'.checkLVal(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);'#10' '
  +' };'#10#10'  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLA'
  +'BLE_ID = 4;'#10#10#10'  pp$1.parseFunction = function(node, statement, allo'
  +'wExpressionBody, isAsync) {'#10'    this.initFunction(node);'#10'    if (th'
  +'is.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {'
  +#10'      if (this.type === types.star && (statement & FUNC_HANGING_STATEMEN'
  +'T))'#10'        { this.unexpected(); }'#10'      node.generator = this.eat('
  +'types.star);'#10'    }'#10'    if (this.options.ecmaVersion >= 8)'#10'     '
  +' { node.async = !!isAsync; }'#10#10'    if (statement & FUNC_STATEMENT) {'
  +#10'      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.na'
  +'me ? null : this.parseIdent();'#10'      if (node.id && !(statement & FUNC_'
  +'HANGING_STATEMENT))'#10'        { this.checkLVal(node.id, (this.strict || n'
  +'ode.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_L'
  +'EXICAL : BIND_FUNCTION); }'#10'    }'#10#10'    var oldYieldPos = this.yiel'
  +'dPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;'
  +#10'    this.yieldPos = 0;'#10'    this.awaitPos = 0;'#10'    this.awaitIden'
  +'tPos = 0;'#10'    this.enterScope(functionFlags(node.async, node.generator)'
  +');'#10#10'    if (!(statement & FUNC_STATEMENT))'#10'      { node.id = this'
  +'.type === types.name ? this.parseIdent() : null; }'#10#10'    this.parseFun'
  +'ctionParams(node);'#10'    this.parseFunctionBody(node, allowExpressionBody'
  +', false);'#10#10'    this.yieldPos = oldYieldPos;'#10'    this.awaitPos = o'
  +'ldAwaitPos;'#10'    this.awaitIdentPos = oldAwaitIdentPos;'#10'    return t'
  +'his.finishNode(node, (statement & FUNC_STATEMENT) ? "FunctionDeclaration" :'
  +' "FunctionExpression")'#10'  };'#10#10'  pp$1.parseFunctionParams = functio'
  +'n(node) {'#10'    this.expect(types.parenL);'#10'    node.params = this.par'
  +'seBindingList(types.parenR, false, this.options.ecmaVersion >= 8);'#10'    '
  +'this.checkYieldAwaitInDefaultParams();'#10'  };'#10#10#10'  pp$1.parseClass'
  +' = function(node, isStatement) {'#10'    this.next();'#10#10'    var oldStr'
  +'ict = this.strict;'#10'    this.strict = true;'#10#10'    this.parseClassId'
  +'(node, isStatement);'#10'    this.parseClassSuper(node);'#10'    var classB'
  +'ody = this.startNode();'#10'    var hadConstructor = false;'#10'    classBo'
  +'dy.body = [];'#10'    this.expect(types.braceL);'#10'    while (!this.eat(t'
  +'ypes.braceR)) {'#10'      var element = this.parseClassElement(node.superCl'
  +'ass !== null);'#10'      if (element) {'#10'        classBody.body.push(ele'
  +'ment);'#10'        if (element.type === "MethodDefinition" && element.kind '
  +'=== "constructor") {'#10'          if (hadConstructor) { this.raise(element'
  +'.start, "Duplicate constructor in the same class"); }'#10'          hadCons'
  +'tructor = true;'#10'        }'#10'      }'#10'    }'#10'    node.body = thi'
  +'s.finishNode(classBody, "ClassBody");'#10'    this.strict = oldStrict;'#10
  +'    return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassE'
  +'xpression")'#10'  };'#10#10'  pp$1.parseClassElement = function(constructor'
  +'AllowsSuper) {'#10'    var this$1 = this;'#10#10'    if (this.eat(types.sem'
  +'i)) { return null }'#10#10'    var method = this.startNode();'#10'    var t'
  +'ryContextual = function (k, noLineBreak) {'#10'      if ( noLineBreak === v'
  +'oid 0 ) noLineBreak = false;'#10#10'      var start = this$1.start, startLo'
  +'c = this$1.startLoc;'#10'      if (!this$1.eatContextual(k)) { return false'
  +' }'#10'      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.c'
  +'anInsertSemicolon())) { return true }'#10'      if (method.key) { this$1.un'
  +'expected(); }'#10'      method.computed = false;'#10'      method.key = thi'
  +'s$1.startNodeAt(start, startLoc);'#10'      method.key.name = k;'#10'      '
  +'this$1.finishNode(method.key, "Identifier");'#10'      return false'#10'   '
  +' };'#10#10'    method.kind = "method";'#10'    method.static = tryContextua'
  +'l("static");'#10'    var isGenerator = this.eat(types.star);'#10'    var is'
  +'Async = false;'#10'    if (!isGenerator) {'#10'      if (this.options.ecmaV'
  +'ersion >= 8 && tryContextual("async", true)) {'#10'        isAsync = true;'
  +#10'        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.st'
  +'ar);'#10'      } else if (tryContextual("get")) {'#10'        method.kind ='
  +' "get";'#10'      } else if (tryContextual("set")) {'#10'        method.kin'
  +'d = "set";'#10'      }'#10'    }'#10'    if (!method.key) { this.parsePrope'
  ,'rtyName(method); }'#10'    var key = method.key;'#10'    var allowsDirectSu'
  +'per = false;'#10'    if (!method.computed && !method.static && (key.type =='
  +'= "Identifier" && key.name === "constructor" ||'#10'        key.type === "L'
  +'iteral" && key.value === "constructor")) {'#10'      if (method.kind !== "m'
  +'ethod") { this.raise(key.start, "Constructor can''t have get/set modifier")'
  +'; }'#10'      if (isGenerator) { this.raise(key.start, "Constructor can''t '
  +'be a generator"); }'#10'      if (isAsync) { this.raise(key.start, "Constru'
  +'ctor can''t be an async method"); }'#10'      method.kind = "constructor";'
  +#10'      allowsDirectSuper = constructorAllowsSuper;'#10'    } else if (met'
  +'hod.static && key.type === "Identifier" && key.name === "prototype") {'#10
  +'      this.raise(key.start, "Classes may not have a static property named p'
  +'rototype");'#10'    }'#10'    this.parseClassMethod(method, isGenerator, is'
  +'Async, allowsDirectSuper);'#10'    if (method.kind === "get" && method.valu'
  +'e.params.length !== 0)'#10'      { this.raiseRecoverable(method.value.start'
  +', "getter should have no params"); }'#10'    if (method.kind === "set" && m'
  +'ethod.value.params.length !== 1)'#10'      { this.raiseRecoverable(method.v'
  +'alue.start, "setter should have exactly one param"); }'#10'    if (method.k'
  +'ind === "set" && method.value.params[0].type === "RestElement")'#10'      {'
  +' this.raiseRecoverable(method.value.params[0].start, "Setter cannot use res'
  +'t params"); }'#10'    return method'#10'  };'#10#10'  pp$1.parseClassMethod'
  +' = function(method, isGenerator, isAsync, allowsDirectSuper) {'#10'    meth'
  +'od.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);'#10' '
  +'   return this.finishNode(method, "MethodDefinition")'#10'  };'#10#10'  pp$'
  +'1.parseClassId = function(node, isStatement) {'#10'    if (this.type === ty'
  +'pes.name) {'#10'      node.id = this.parseIdent();'#10'      if (isStatemen'
  +'t)'#10'        { this.checkLVal(node.id, BIND_LEXICAL, false); }'#10'    } '
  +'else {'#10'      if (isStatement === true)'#10'        { this.unexpected();'
  +' }'#10'      node.id = null;'#10'    }'#10'  };'#10#10'  pp$1.parseClassSup'
  +'er = function(node) {'#10'    node.superClass = this.eat(types._extends) ? '
  +'this.parseExprSubscripts() : null;'#10'  };'#10#10#10'  pp$1.parseExport = '
  +'function(node, exports) {'#10'    this.next();'#10'    if (this.eat(types.s'
  +'tar)) {'#10'      this.expectContextual("from");'#10'      if (this.type !='
  +'= types.string) { this.unexpected(); }'#10'      node.source = this.parseEx'
  +'prAtom();'#10'      this.semicolon();'#10'      return this.finishNode(node'
  +', "ExportAllDeclaration")'#10'    }'#10'    if (this.eat(types._default)) {'
  +' '#10'      this.checkExport(exports, "default", this.lastTokStart);'#10'  '
  +'    var isAsync;'#10'      if (this.type === types._function || (isAsync = '
  +'this.isAsyncFunction())) {'#10'        var fNode = this.startNode();'#10'  '
  +'      this.next();'#10'        if (isAsync) { this.next(); }'#10'        no'
  +'de.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_I'
  +'D, false, isAsync);'#10'      } else if (this.type === types._class) {'#10
  +'        var cNode = this.startNode();'#10'        node.declaration = this.p'
  +'arseClass(cNode, "nullableID");'#10'      } else {'#10'        node.declara'
  +'tion = this.parseMaybeAssign();'#10'        this.semicolon();'#10'      }'
  +#10'      return this.finishNode(node, "ExportDefaultDeclaration")'#10'    }'
  +#10'    if (this.shouldParseExportStatement()) {'#10'      node.declaration '
  +'= this.parseStatement(null);'#10'      if (node.declaration.type === "Varia'
  +'bleDeclaration")'#10'        { this.checkVariableExport(exports, node.decla'
  +'ration.declarations); }'#10'      else'#10'        { this.checkExport(expor'
  +'ts, node.declaration.id.name, node.declaration.id.start); }'#10'      node.'
  +'specifiers = [];'#10'      node.source = null;'#10'    } else { '#10'      '
  +'node.declaration = null;'#10'      node.specifiers = this.parseExportSpecif'
  +'iers(exports);'#10'      if (this.eatContextual("from")) {'#10'        if ('
  +'this.type !== types.string) { this.unexpected(); }'#10'        node.source '
  +'= this.parseExprAtom();'#10'      } else {'#10'        for (var i = 0, list'
  +' = node.specifiers; i < list.length; i += 1) {'#10'          var spec = lis'
  +'t[i];'#10#10'          this.checkUnreserved(spec.local);'#10'          this'
  +'.checkLocalExport(spec.local);'#10'        }'#10#10'        node.source = n'
  +'ull;'#10'      }'#10'      this.semicolon();'#10'    }'#10'    return this.'
  +'finishNode(node, "ExportNamedDeclaration")'#10'  };'#10#10'  pp$1.checkExpo'
  +'rt = function(exports, name, pos) {'#10'    if (!exports) { return }'#10'  '
  +'  if (has(exports, name))'#10'      { this.raiseRecoverable(pos, "Duplicate'
  +' export ''" + name + "''"); }'#10'    exports[name] = true;'#10'  };'#10#10
  +'  pp$1.checkPatternExport = function(exports, pat) {'#10'    var type = pat'
  ,'.type;'#10'    if (type === "Identifier")'#10'      { this.checkExport(expo'
  +'rts, pat.name, pat.start); }'#10'    else if (type === "ObjectPattern")'#10
  +'      { for (var i = 0, list = pat.properties; i < list.length; i += 1)'#10
  +'        {'#10'          var prop = list[i];'#10#10'          this.checkPatt'
  +'ernExport(exports, prop);'#10'        } }'#10'    else if (type === "ArrayP'
  +'attern")'#10'      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.'
  +'length; i$1 += 1) {'#10'        var elt = list$1[i$1];'#10#10'          if '
  +'(elt) { this.checkPatternExport(exports, elt); }'#10'      } }'#10'    else'
  +' if (type === "Property")'#10'      { this.checkPatternExport(exports, pat.'
  +'value); }'#10'    else if (type === "AssignmentPattern")'#10'      { this.c'
  +'heckPatternExport(exports, pat.left); }'#10'    else if (type === "RestElem'
  +'ent")'#10'      { this.checkPatternExport(exports, pat.argument); }'#10'   '
  +' else if (type === "ParenthesizedExpression")'#10'      { this.checkPattern'
  +'Export(exports, pat.expression); }'#10'  };'#10#10'  pp$1.checkVariableExpo'
  +'rt = function(exports, decls) {'#10'    if (!exports) { return }'#10'    fo'
  +'r (var i = 0, list = decls; i < list.length; i += 1)'#10'      {'#10'      '
  +'var decl = list[i];'#10#10'      this.checkPatternExport(exports, decl.id);'
  +#10'    }'#10'  };'#10#10'  pp$1.shouldParseExportStatement = function() {'
  +#10'    return this.type.keyword === "var" ||'#10'      this.type.keyword =='
  +'= "const" ||'#10'      this.type.keyword === "class" ||'#10'      this.type'
  +'.keyword === "function" ||'#10'      this.isLet() ||'#10'      this.isAsync'
  +'Function()'#10'  };'#10#10#10'  pp$1.parseExportSpecifiers = function(expor'
  +'ts) {'#10'    var nodes = [], first = true;'#10'    this.expect(types.brace'
  +'L);'#10'    while (!this.eat(types.braceR)) {'#10'      if (!first) {'#10' '
  +'       this.expect(types.comma);'#10'        if (this.afterTrailingComma(ty'
  +'pes.braceR)) { break }'#10'      } else { first = false; }'#10#10'      var'
  +' node = this.startNode();'#10'      node.local = this.parseIdent(true);'#10
  +'      node.exported = this.eatContextual("as") ? this.parseIdent(true) : no'
  +'de.local;'#10'      this.checkExport(exports, node.exported.name, node.expo'
  +'rted.start);'#10'      nodes.push(this.finishNode(node, "ExportSpecifier"))'
  +';'#10'    }'#10'    return nodes'#10'  };'#10#10#10'  pp$1.parseImport = fu'
  +'nction(node) {'#10'    this.next();'#10'    if (this.type === types.string)'
  +' {'#10'      node.specifiers = empty;'#10'      node.source = this.parseExp'
  +'rAtom();'#10'    } else {'#10'      node.specifiers = this.parseImportSpeci'
  +'fiers();'#10'      this.expectContextual("from");'#10'      node.source = t'
  +'his.type === types.string ? this.parseExprAtom() : this.unexpected();'#10' '
  +'   }'#10'    this.semicolon();'#10'    return this.finishNode(node, "Import'
  +'Declaration")'#10'  };'#10#10#10'  pp$1.parseImportSpecifiers = function() '
  +'{'#10'    var nodes = [], first = true;'#10'    if (this.type === types.nam'
  +'e) {'#10'      var node = this.startNode();'#10'      node.local = this.par'
  +'seIdent();'#10'      this.checkLVal(node.local, BIND_LEXICAL);'#10'      no'
  +'des.push(this.finishNode(node, "ImportDefaultSpecifier"));'#10'      if (!t'
  +'his.eat(types.comma)) { return nodes }'#10'    }'#10'    if (this.type === '
  +'types.star) {'#10'      var node$1 = this.startNode();'#10'      this.next('
  +');'#10'      this.expectContextual("as");'#10'      node$1.local = this.par'
  +'seIdent();'#10'      this.checkLVal(node$1.local, BIND_LEXICAL);'#10'      '
  +'nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));'#10'      '
  +'return nodes'#10'    }'#10'    this.expect(types.braceL);'#10'    while (!t'
  +'his.eat(types.braceR)) {'#10'      if (!first) {'#10'        this.expect(ty'
  +'pes.comma);'#10'        if (this.afterTrailingComma(types.braceR)) { break '
  +'}'#10'      } else { first = false; }'#10#10'      var node$2 = this.startN'
  +'ode();'#10'      node$2.imported = this.parseIdent(true);'#10'      if (thi'
  +'s.eatContextual("as")) {'#10'        node$2.local = this.parseIdent();'#10
  +'      } else {'#10'        this.checkUnreserved(node$2.imported);'#10'     '
  +'   node$2.local = node$2.imported;'#10'      }'#10'      this.checkLVal(nod'
  +'e$2.local, BIND_LEXICAL);'#10'      nodes.push(this.finishNode(node$2, "Imp'
  +'ortSpecifier"));'#10'    }'#10'    return nodes'#10'  };'#10#10'  pp$1.adap'
  +'tDirectivePrologue = function(statements) {'#10'    for (var i = 0; i < sta'
  +'tements.length && this.isDirectiveCandidate(statements[i]); ++i) {'#10'    '
  +'  statements[i].directive = statements[i].expression.raw.slice(1, -1);'#10
  +'    }'#10'  };'#10'  pp$1.isDirectiveCandidate = function(statement) {'#10
  +'    return ('#10'      statement.type === "ExpressionStatement" &&'#10'    '
  +'  statement.expression.type === "Literal" &&'#10'      typeof statement.exp'
  +'ression.value === "string" &&'#10'      (this.input[statement.start] === "\'
  ,'"" || this.input[statement.start] === "''")'#10'    )'#10'  };'#10#10'  var'
  +' pp$2 = Parser.prototype;'#10#10#10'  pp$2.toAssignable = function(node, is'
  +'Binding, refDestructuringErrors) {'#10'    if (this.options.ecmaVersion >= '
  +'6 && node) {'#10'      switch (node.type) {'#10'      case "Identifier":'#10
  +'        if (this.inAsync && node.name === "await")'#10'          { this.rai'
  +'se(node.start, "Cannot use ''await'' as identifier inside an async function'
  +'"); }'#10'        break'#10#10'      case "ObjectPattern":'#10'      case "'
  +'ArrayPattern":'#10'      case "RestElement":'#10'        break'#10#10'     '
  +' case "ObjectExpression":'#10'        node.type = "ObjectPattern";'#10'    '
  +'    if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringE'
  +'rrors, true); }'#10'        for (var i = 0, list = node.properties; i < lis'
  +'t.length; i += 1) {'#10'          var prop = list[i];'#10#10'        this.t'
  +'oAssignable(prop, isBinding);'#10'          if ('#10'            prop.type '
  +'=== "RestElement" &&'#10'            (prop.argument.type === "ArrayPattern"'
  +' || prop.argument.type === "ObjectPattern")'#10'          ) {'#10'         '
  +'   this.raise(prop.argument.start, "Unexpected token");'#10'          }'#10
  +'        }'#10'        break'#10#10'      case "Property":'#10'        if (n'
  +'ode.kind !== "init") { this.raise(node.key.start, "Object pattern can''t co'
  +'ntain getter or setter"); }'#10'        this.toAssignable(node.value, isBin'
  +'ding);'#10'        break'#10#10'      case "ArrayExpression":'#10'        n'
  +'ode.type = "ArrayPattern";'#10'        if (refDestructuringErrors) { this.c'
  +'heckPatternErrors(refDestructuringErrors, true); }'#10'        this.toAssig'
  +'nableList(node.elements, isBinding);'#10'        break'#10#10'      case "S'
  +'preadElement":'#10'        node.type = "RestElement";'#10'        this.toAs'
  +'signable(node.argument, isBinding);'#10'        if (node.argument.type === '
  +'"AssignmentPattern")'#10'          { this.raise(node.argument.start, "Rest '
  +'elements cannot have a default value"); }'#10'        break'#10#10'      ca'
  +'se "AssignmentExpression":'#10'        if (node.operator !== "=") { this.ra'
  +'ise(node.left.end, "Only ''='' operator can be used for specifying default '
  +'value."); }'#10'        node.type = "AssignmentPattern";'#10'        delete'
  +' node.operator;'#10'        this.toAssignable(node.left, isBinding);'#10#10
  +'      case "AssignmentPattern":'#10'        break'#10#10'      case "Parent'
  +'hesizedExpression":'#10'        this.toAssignable(node.expression, isBindin'
  +'g, refDestructuringErrors);'#10'        break'#10#10'      case "MemberExpr'
  +'ession":'#10'        if (!isBinding) { break }'#10#10'      default:'#10'  '
  +'      this.raise(node.start, "Assigning to rvalue");'#10'      }'#10'    } '
  +'else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuring'
  +'Errors, true); }'#10'    return node'#10'  };'#10#10#10'  pp$2.toAssignable'
  +'List = function(exprList, isBinding) {'#10'    var end = exprList.length;'
  +#10'    for (var i = 0; i < end; i++) {'#10'      var elt = exprList[i];'#10
  +'      if (elt) { this.toAssignable(elt, isBinding); }'#10'    }'#10'    if '
  +'(end) {'#10'      var last = exprList[end - 1];'#10'      if (this.options.'
  +'ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && la'
  +'st.argument.type !== "Identifier")'#10'        { this.unexpected(last.argum'
  +'ent.start); }'#10'    }'#10'    return exprList'#10'  };'#10#10#10'  pp$2.p'
  +'arseSpread = function(refDestructuringErrors) {'#10'    var node = this.sta'
  +'rtNode();'#10'    this.next();'#10'    node.argument = this.parseMaybeAssig'
  +'n(false, refDestructuringErrors);'#10'    return this.finishNode(node, "Spr'
  +'eadElement")'#10'  };'#10#10'  pp$2.parseRestBinding = function() {'#10'   '
  +' var node = this.startNode();'#10'    this.next();'#10#10'    if (this.opti'
  +'ons.ecmaVersion === 6 && this.type !== types.name)'#10'      { this.unexpec'
  +'ted(); }'#10#10'    node.argument = this.parseBindingAtom();'#10#10'    ret'
  +'urn this.finishNode(node, "RestElement")'#10'  };'#10#10#10'  pp$2.parseBin'
  +'dingAtom = function() {'#10'    if (this.options.ecmaVersion >= 6) {'#10'  '
  +'    switch (this.type) {'#10'      case types.bracketL:'#10'        var nod'
  +'e = this.startNode();'#10'        this.next();'#10'        node.elements = '
  +'this.parseBindingList(types.bracketR, true, true);'#10'        return this.'
  +'finishNode(node, "ArrayPattern")'#10#10'      case types.braceL:'#10'      '
  +'  return this.parseObj(true)'#10'      }'#10'    }'#10'    return this.pars'
  +'eIdent()'#10'  };'#10#10'  pp$2.parseBindingList = function(close, allowEmp'
  +'ty, allowTrailingComma) {'#10'    var elts = [], first = true;'#10'    whil'
  +'e (!this.eat(close)) {'#10'      if (first) { first = false; }'#10'      el'
  +'se { this.expect(types.comma); }'#10'      if (allowEmpty && this.type === '
  +'types.comma) {'#10'        elts.push(null);'#10'      } else if (allowTrail'
  ,'ingComma && this.afterTrailingComma(close)) {'#10'        break'#10'      }'
  +' else if (this.type === types.ellipsis) {'#10'        var rest = this.parse'
  +'RestBinding();'#10'        this.parseBindingListItem(rest);'#10'        elt'
  +'s.push(rest);'#10'        if (this.type === types.comma) { this.raise(this.'
  +'start, "Comma is not permitted after the rest element"); }'#10'        this'
  +'.expect(close);'#10'        break'#10'      } else {'#10'        var elem ='
  +' this.parseMaybeDefault(this.start, this.startLoc);'#10'        this.parseB'
  +'indingListItem(elem);'#10'        elts.push(elem);'#10'      }'#10'    }'#10
  +'    return elts'#10'  };'#10#10'  pp$2.parseBindingListItem = function(para'
  +'m) {'#10'    return param'#10'  };'#10#10#10'  pp$2.parseMaybeDefault = fun'
  +'ction(startPos, startLoc, left) {'#10'    left = left || this.parseBindingA'
  +'tom();'#10'    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { r'
  +'eturn left }'#10'    var node = this.startNodeAt(startPos, startLoc);'#10' '
  +'   node.left = left;'#10'    node.right = this.parseMaybeAssign();'#10'    '
  +'return this.finishNode(node, "AssignmentPattern")'#10'  };'#10#10#10'  pp$2'
  +'.checkLVal = function(expr, bindingType, checkClashes) {'#10'    if ( bindi'
  +'ngType === void 0 ) bindingType = BIND_NONE;'#10#10'    switch (expr.type) '
  +'{'#10'    case "Identifier":'#10'      if (bindingType === BIND_LEXICAL && '
  +'expr.name === "let")'#10'        { this.raiseRecoverable(expr.start, "let i'
  +'s disallowed as a lexically bound name"); }'#10'      if (this.strict && th'
  +'is.reservedWordsStrictBind.test(expr.name))'#10'        { this.raiseRecover'
  +'able(expr.start, (bindingType ? "Binding " : "Assigning to ") + expr.name +'
  +' " in strict mode"); }'#10'      if (checkClashes) {'#10'        if (has(ch'
  +'eckClashes, expr.name))'#10'          { this.raiseRecoverable(expr.start, "'
  +'Argument name clash"); }'#10'        checkClashes[expr.name] = true;'#10'  '
  +'    }'#10'      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSI'
  +'DE) { this.declareName(expr.name, bindingType, expr.start); }'#10'      bre'
  +'ak'#10#10'    case "MemberExpression":'#10'      if (bindingType) { this.ra'
  +'iseRecoverable(expr.start, "Binding member expression"); }'#10'      break'
  +#10#10'    case "ObjectPattern":'#10'      for (var i = 0, list = expr.prope'
  +'rties; i < list.length; i += 1)'#10'        {'#10'      var prop = list[i];'
  +#10#10'      this.checkLVal(prop, bindingType, checkClashes);'#10'    }'#10
  +'      break'#10#10'    case "Property":'#10'      this.checkLVal(expr.value'
  +', bindingType, checkClashes);'#10'      break'#10#10'    case "ArrayPattern'
  +'":'#10'      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length;'
  +' i$1 += 1) {'#10'        var elem = list$1[i$1];'#10#10'      if (elem) { t'
  +'his.checkLVal(elem, bindingType, checkClashes); }'#10'      }'#10'      bre'
  +'ak'#10#10'    case "AssignmentPattern":'#10'      this.checkLVal(expr.left,'
  +' bindingType, checkClashes);'#10'      break'#10#10'    case "RestElement":'
  +#10'      this.checkLVal(expr.argument, bindingType, checkClashes);'#10'    '
  +'  break'#10#10'    case "ParenthesizedExpression":'#10'      this.checkLVal'
  +'(expr.expression, bindingType, checkClashes);'#10'      break'#10#10'    de'
  +'fault:'#10'      this.raise(expr.start, (bindingType ? "Binding" : "Assigni'
  +'ng to") + " rvalue");'#10'    }'#10'  };'#10#10#10'  var pp$3 = Parser.prot'
  +'otype;'#10#10#10'  pp$3.checkPropClash = function(prop, propHash, refDestru'
  +'cturingErrors) {'#10'    if (this.options.ecmaVersion >= 9 && prop.type ==='
  +' "SpreadElement")'#10'      { return }'#10'    if (this.options.ecmaVersion'
  +' >= 6 && (prop.computed || prop.method || prop.shorthand))'#10'      { retu'
  +'rn }'#10'    var key = prop.key;'#10'    var name;'#10'    switch (key.type'
  +') {'#10'    case "Identifier": name = key.name; break'#10'    case "Literal'
  +'": name = String(key.value); break'#10'    default: return'#10'    }'#10'  '
  +'  var kind = prop.kind;'#10'    if (this.options.ecmaVersion >= 6) {'#10'  '
  +'    if (name === "__proto__" && kind === "init") {'#10'        if (propHash'
  +'.proto) {'#10'          if (refDestructuringErrors) {'#10'            if (r'
  +'efDestructuringErrors.doubleProto < 0)'#10'              { refDestructuring'
  +'Errors.doubleProto = key.start; }'#10'          } else { this.raiseRecovera'
  +'ble(key.start, "Redefinition of __proto__ property"); }'#10'        }'#10' '
  +'       propHash.proto = true;'#10'      }'#10'      return'#10'    }'#10'  '
  +'  name = "$" + name;'#10'    var other = propHash[name];'#10'    if (other)'
  +' {'#10'      var redefinition;'#10'      if (kind === "init") {'#10'       '
  +' redefinition = this.strict && other.init || other.get || other.set;'#10'  '
  +'    } else {'#10'        redefinition = other.init || other[kind];'#10'    '
  +'  }'#10'      if (redefinition)'#10'        { this.raiseRecoverable(key.sta'
  +'rt, "Redefinition of property"); }'#10'    } else {'#10'      other = propH'
  ,'ash[name] = {'#10'        init: false,'#10'        get: false,'#10'        '
  +'set: false'#10'      };'#10'    }'#10'    other[kind] = true;'#10'  };'#10
  +#10#10#10#10'  pp$3.parseExpression = function(noIn, refDestructuringErrors)'
  +' {'#10'    var startPos = this.start, startLoc = this.startLoc;'#10'    var'
  +' expr = this.parseMaybeAssign(noIn, refDestructuringErrors);'#10'    if (th'
  +'is.type === types.comma) {'#10'      var node = this.startNodeAt(startPos, '
  +'startLoc);'#10'      node.expressions = [expr];'#10'      while (this.eat(t'
  +'ypes.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestruc'
  +'turingErrors)); }'#10'      return this.finishNode(node, "SequenceExpressio'
  +'n")'#10'    }'#10'    return expr'#10'  };'#10#10#10'  pp$3.parseMaybeAssig'
  +'n = function(noIn, refDestructuringErrors, afterLeftParse) {'#10'    if (th'
  +'is.isContextual("yield")) {'#10'      if (this.inGenerator) { return this.p'
  +'arseYield(noIn) }'#10'      else { this.exprAllowed = false; }'#10'    }'#10
  +#10'    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailing'
  +'Comma = -1;'#10'    if (refDestructuringErrors) {'#10'      oldParenAssign '
  +'= refDestructuringErrors.parenthesizedAssign;'#10'      oldTrailingComma = '
  +'refDestructuringErrors.trailingComma;'#10'      refDestructuringErrors.pare'
  +'nthesizedAssign = refDestructuringErrors.trailingComma = -1;'#10'    } else'
  +' {'#10'      refDestructuringErrors = new DestructuringErrors;'#10'      ow'
  +'nDestructuringErrors = true;'#10'    }'#10#10'    var startPos = this.start'
  +', startLoc = this.startLoc;'#10'    if (this.type === types.parenL || this.'
  +'type === types.name)'#10'      { this.potentialArrowAt = this.start; }'#10
  +'    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);'#10
  +'    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, '
  +'startLoc); }'#10'    if (this.type.isAssign) {'#10'      var node = this.st'
  +'artNodeAt(startPos, startLoc);'#10'      node.operator = this.value;'#10'  '
  +'    node.left = this.type === types.eq ? this.toAssignable(left, false, ref'
  +'DestructuringErrors) : left;'#10'      if (!ownDestructuringErrors) {'#10' '
  +'       refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.'
  +'trailingComma = refDestructuringErrors.doubleProto = -1;'#10'      }'#10'  '
  +'    if (refDestructuringErrors.shorthandAssign >= node.left.start)'#10'    '
  +'    { refDestructuringErrors.shorthandAssign = -1; } '#10'      this.checkL'
  +'Val(left);'#10'      this.next();'#10'      node.right = this.parseMaybeAss'
  +'ign(noIn);'#10'      return this.finishNode(node, "AssignmentExpression")'
  +#10'    } else {'#10'      if (ownDestructuringErrors) { this.checkExpressio'
  +'nErrors(refDestructuringErrors, true); }'#10'    }'#10'    if (oldParenAssi'
  +'gn > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }'
  +#10'    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = '
  +'oldTrailingComma; }'#10'    return left'#10'  };'#10#10#10'  pp$3.parseMayb'
  +'eConditional = function(noIn, refDestructuringErrors) {'#10'    var startPo'
  +'s = this.start, startLoc = this.startLoc;'#10'    var expr = this.parseExpr'
  +'Ops(noIn, refDestructuringErrors);'#10'    if (this.checkExpressionErrors(r'
  +'efDestructuringErrors)) { return expr }'#10'    if (this.eat(types.question'
  +')) {'#10'      var node = this.startNodeAt(startPos, startLoc);'#10'      n'
  +'ode.test = expr;'#10'      node.consequent = this.parseMaybeAssign();'#10' '
  +'     this.expect(types.colon);'#10'      node.alternate = this.parseMaybeAs'
  +'sign(noIn);'#10'      return this.finishNode(node, "ConditionalExpression")'
  +#10'    }'#10'    return expr'#10'  };'#10#10#10'  pp$3.parseExprOps = funct'
  +'ion(noIn, refDestructuringErrors) {'#10'    var startPos = this.start, star'
  +'tLoc = this.startLoc;'#10'    var expr = this.parseMaybeUnary(refDestructur'
  +'ingErrors, false);'#10'    if (this.checkExpressionErrors(refDestructuringE'
  +'rrors)) { return expr }'#10'    return expr.start === startPos && expr.type'
  +' === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, st'
  +'artLoc, -1, noIn)'#10'  };'#10#10#10'  pp$3.parseExprOp = function(left, le'
  +'ftStartPos, leftStartLoc, minPrec, noIn) {'#10'    var prec = this.type.bin'
  +'op;'#10'    if (prec != null && (!noIn || this.type !== types._in)) {'#10' '
  +'     if (prec > minPrec) {'#10'        var logical = this.type === types.lo'
  +'gicalOR || this.type === types.logicalAND;'#10'        var op = this.value;'
  +#10'        this.next();'#10'        var startPos = this.start, startLoc = t'
  +'his.startLoc;'#10'        var right = this.parseExprOp(this.parseMaybeUnary'
  +'(null, false), startPos, startLoc, prec, noIn);'#10'        var node = this'
  +'.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);'#10'   '
  +'     return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noI'
  +'n)'#10'      }'#10'    }'#10'    return left'#10'  };'#10#10'  pp$3.buildBi'
  ,'nary = function(startPos, startLoc, left, right, op, logical) {'#10'    var'
  +' node = this.startNodeAt(startPos, startLoc);'#10'    node.left = left;'#10
  +'    node.operator = op;'#10'    node.right = right;'#10'    return this.fin'
  +'ishNode(node, logical ? "LogicalExpression" : "BinaryExpression")'#10'  };'
  +#10#10#10'  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary'
  +') {'#10'    var startPos = this.start, startLoc = this.startLoc, expr;'#10
  +'    if (this.isContextual("await") && (this.inAsync || (!this.inFunction &&'
  +' this.options.allowAwaitOutsideFunction))) {'#10'      expr = this.parseAwa'
  +'it();'#10'      sawUnary = true;'#10'    } else if (this.type.prefix) {'#10
  +'      var node = this.startNode(), update = this.type === types.incDec;'#10
  +'      node.operator = this.value;'#10'      node.prefix = true;'#10'      t'
  +'his.next();'#10'      node.argument = this.parseMaybeUnary(null, true);'#10
  +'      this.checkExpressionErrors(refDestructuringErrors, true);'#10'      i'
  +'f (update) { this.checkLVal(node.argument); }'#10'      else if (this.stric'
  +'t && node.operator === "delete" &&'#10'               node.argument.type =='
  +'= "Identifier")'#10'        { this.raiseRecoverable(node.start, "Deleting l'
  +'ocal variable in strict mode"); }'#10'      else { sawUnary = true; }'#10' '
  +'     expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpre'
  +'ssion");'#10'    } else {'#10'      expr = this.parseExprSubscripts(refDest'
  +'ructuringErrors);'#10'      if (this.checkExpressionErrors(refDestructuring'
  +'Errors)) { return expr }'#10'      while (this.type.postfix && !this.canIns'
  +'ertSemicolon()) {'#10'        var node$1 = this.startNodeAt(startPos, start'
  +'Loc);'#10'        node$1.operator = this.value;'#10'        node$1.prefix ='
  +' false;'#10'        node$1.argument = expr;'#10'        this.checkLVal(expr'
  +');'#10'        this.next();'#10'        expr = this.finishNode(node$1, "Upd'
  +'ateExpression");'#10'      }'#10'    }'#10#10'    if (!sawUnary && this.eat'
  +'(types.starstar))'#10'      { return this.buildBinary(startPos, startLoc, e'
  +'xpr, this.parseMaybeUnary(null, false), "**", false) }'#10'    else'#10'   '
  +'   { return expr }'#10'  };'#10#10#10'  pp$3.parseExprSubscripts = function'
  +'(refDestructuringErrors) {'#10'    var startPos = this.start, startLoc = th'
  +'is.startLoc;'#10'    var expr = this.parseExprAtom(refDestructuringErrors);'
  +#10'    if (expr.type === "ArrowFunctionExpression" && this.input.slice(this'
  +'.lastTokStart, this.lastTokEnd) !== ")")'#10'      { return expr }'#10'    '
  +'var result = this.parseSubscripts(expr, startPos, startLoc);'#10'    if (re'
  +'fDestructuringErrors && result.type === "MemberExpression") {'#10'      if '
  +'(refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructu'
  +'ringErrors.parenthesizedAssign = -1; }'#10'      if (refDestructuringErrors'
  +'.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedB'
  +'ind = -1; }'#10'    }'#10'    return result'#10'  };'#10#10'  pp$3.parseSub'
  +'scripts = function(base, startPos, startLoc, noCalls) {'#10'    var maybeAs'
  +'yncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && b'
  +'ase.name === "async" &&'#10'        this.lastTokEnd === base.end && !this.c'
  +'anInsertSemicolon() && this.input.slice(base.start, base.end) === "async";'
  +#10'    while (true) {'#10'      var element = this.parseSubscript(base, sta'
  +'rtPos, startLoc, noCalls, maybeAsyncArrow);'#10'      if (element === base '
  +'|| element.type === "ArrowFunctionExpression") { return element }'#10'     '
  +' base = element;'#10'    }'#10'  };'#10#10'  pp$3.parseSubscript = function'
  +'(base, startPos, startLoc, noCalls, maybeAsyncArrow) {'#10'    var computed'
  +' = this.eat(types.bracketL);'#10'    if (computed || this.eat(types.dot)) {'
  +#10'      var node = this.startNodeAt(startPos, startLoc);'#10'      node.ob'
  +'ject = base;'#10'      node.property = computed ? this.parseExpression() : '
  +'this.parseIdent(this.options.allowReserved !== "never");'#10'      node.com'
  +'puted = !!computed;'#10'      if (computed) { this.expect(types.bracketR); '
  +'}'#10'      base = this.finishNode(node, "MemberExpression");'#10'    } els'
  +'e if (!noCalls && this.eat(types.parenL)) {'#10'      var refDestructuringE'
  +'rrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos ='
  +' this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;'#10'      this.yield'
  +'Pos = 0;'#10'      this.awaitPos = 0;'#10'      this.awaitIdentPos = 0;'#10
  +'      var exprList = this.parseExprList(types.parenR, this.options.ecmaVers'
  +'ion >= 8, false, refDestructuringErrors);'#10'      if (maybeAsyncArrow && '
  +'!this.canInsertSemicolon() && this.eat(types.arrow)) {'#10'        this.che'
  +'ckPatternErrors(refDestructuringErrors, false);'#10'        this.checkYield'
  +'AwaitInDefaultParams();'#10'        if (this.awaitIdentPos > 0)'#10'       '
  +'   { this.raise(this.awaitIdentPos, "Cannot use ''await'' as identifier ins'
  ,'ide an async function"); }'#10'        this.yieldPos = oldYieldPos;'#10'   '
  +'     this.awaitPos = oldAwaitPos;'#10'        this.awaitIdentPos = oldAwait'
  +'IdentPos;'#10'        return this.parseArrowExpression(this.startNodeAt(sta'
  +'rtPos, startLoc), exprList, true)'#10'      }'#10'      this.checkExpressio'
  +'nErrors(refDestructuringErrors, true);'#10'      this.yieldPos = oldYieldPo'
  +'s || this.yieldPos;'#10'      this.awaitPos = oldAwaitPos || this.awaitPos;'
  +#10'      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;'#10' '
  +'     var node$1 = this.startNodeAt(startPos, startLoc);'#10'      node$1.ca'
  +'llee = base;'#10'      node$1.arguments = exprList;'#10'      base = this.f'
  +'inishNode(node$1, "CallExpression");'#10'    } else if (this.type === types'
  +'.backQuote) {'#10'      var node$2 = this.startNodeAt(startPos, startLoc);'
  +#10'      node$2.tag = base;'#10'      node$2.quasi = this.parseTemplate({is'
  +'Tagged: true});'#10'      base = this.finishNode(node$2, "TaggedTemplateExp'
  +'ression");'#10'    }'#10'    return base'#10'  };'#10#10#10'  pp$3.parseExp'
  +'rAtom = function(refDestructuringErrors) {'#10'    if (this.type === types.'
  +'slash) { this.readRegexp(); }'#10#10'    var node, canBeArrow = this.potent'
  +'ialArrowAt === this.start;'#10'    switch (this.type) {'#10'    case types.'
  +'_super:'#10'      if (!this.allowSuper)'#10'        { this.raise(this.start'
  +', "''super'' keyword outside a method"); }'#10'      node = this.startNode('
  +');'#10'      this.next();'#10'      if (this.type === types.parenL && !this'
  +'.allowDirectSuper)'#10'        { this.raise(node.start, "super() call outsi'
  +'de constructor of a subclass"); }'#10'      if (this.type !== types.dot && '
  +'this.type !== types.bracketL && this.type !== types.parenL)'#10'        { t'
  +'his.unexpected(); }'#10'      return this.finishNode(node, "Super")'#10#10
  +'    case types._this:'#10'      node = this.startNode();'#10'      this.nex'
  +'t();'#10'      return this.finishNode(node, "ThisExpression")'#10#10'    ca'
  +'se types.name:'#10'      var startPos = this.start, startLoc = this.startLo'
  +'c, containsEsc = this.containsEsc;'#10'      var id = this.parseIdent(false'
  +');'#10'      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name ='
  +'== "async" && !this.canInsertSemicolon() && this.eat(types._function))'#10
  +'        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0'
  +', false, true) }'#10'      if (canBeArrow && !this.canInsertSemicolon()) {'
  +#10'        if (this.eat(types.arrow))'#10'          { return this.parseArro'
  +'wExpression(this.startNodeAt(startPos, startLoc), [id], false) }'#10'      '
  +'  if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type ==='
  +' types.name && !containsEsc) {'#10'          id = this.parseIdent(false);'
  +#10'          if (this.canInsertSemicolon() || !this.eat(types.arrow))'#10' '
  +'           { this.unexpected(); }'#10'          return this.parseArrowExpre'
  +'ssion(this.startNodeAt(startPos, startLoc), [id], true)'#10'        }'#10' '
  +'     }'#10'      return id'#10#10'    case types.regexp:'#10'      var valu'
  +'e = this.value;'#10'      node = this.parseLiteral(value.value);'#10'      '
  +'node.regex = {pattern: value.pattern, flags: value.flags};'#10'      return'
  +' node'#10#10'    case types.num: case types.string:'#10'      return this.p'
  +'arseLiteral(this.value)'#10#10'    case types._null: case types._true: case'
  +' types._false:'#10'      node = this.startNode();'#10'      node.value = th'
  +'is.type === types._null ? null : this.type === types._true;'#10'      node.'
  +'raw = this.type.keyword;'#10'      this.next();'#10'      return this.finis'
  +'hNode(node, "Literal")'#10#10'    case types.parenL:'#10'      var start = '
  +'this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);'#10
  +'      if (refDestructuringErrors) {'#10'        if (refDestructuringErrors.'
  +'parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))'#10'          '
  +'{ refDestructuringErrors.parenthesizedAssign = start; }'#10'        if (ref'
  +'DestructuringErrors.parenthesizedBind < 0)'#10'          { refDestructuring'
  +'Errors.parenthesizedBind = start; }'#10'      }'#10'      return expr'#10#10
  +'    case types.bracketL:'#10'      node = this.startNode();'#10'      this.'
  +'next();'#10'      node.elements = this.parseExprList(types.bracketR, true, '
  +'true, refDestructuringErrors);'#10'      return this.finishNode(node, "Arra'
  +'yExpression")'#10#10'    case types.braceL:'#10'      return this.parseObj('
  +'false, refDestructuringErrors)'#10#10'    case types._function:'#10'      n'
  +'ode = this.startNode();'#10'      this.next();'#10'      return this.parseF'
  +'unction(node, 0)'#10#10'    case types._class:'#10'      return this.parseC'
  +'lass(this.startNode(), false)'#10#10'    case types._new:'#10'      return '
  +'this.parseNew()'#10#10'    case types.backQuote:'#10'      return this.pars'
  +'eTemplate()'#10#10'    case types._import:'#10'      if (this.options.ecmaV'
  ,'ersion >= 11) {'#10'        return this.parseExprImport()'#10'      } else '
  +'{'#10'        return this.unexpected()'#10'      }'#10#10'    default:'#10
  +'      this.unexpected();'#10'    }'#10'  };'#10#10'  pp$3.parseExprImport ='
  +' function() {'#10'    var node = this.startNode();'#10'    this.next(); '#10
  +'    switch (this.type) {'#10'    case types.parenL:'#10'      return this.p'
  +'arseDynamicImport(node)'#10'    default:'#10'      this.unexpected();'#10' '
  +'   }'#10'  };'#10#10'  pp$3.parseDynamicImport = function(node) {'#10'    t'
  +'his.next(); '#10#10'    node.source = this.parseMaybeAssign();'#10#10'    i'
  +'f (!this.eat(types.parenR)) {'#10'      var errorPos = this.start;'#10'    '
  +'  if (this.eat(types.comma) && this.eat(types.parenR)) {'#10'        this.r'
  +'aiseRecoverable(errorPos, "Trailing comma is not allowed in import()");'#10
  +'      } else {'#10'        this.unexpected(errorPos);'#10'      }'#10'    }'
  +#10#10'    return this.finishNode(node, "ImportExpression")'#10'  };'#10#10
  +'  pp$3.parseLiteral = function(value) {'#10'    var node = this.startNode()'
  +';'#10'    node.value = value;'#10'    node.raw = this.input.slice(this.star'
  +'t, this.end);'#10'    if (node.raw.charCodeAt(node.raw.length - 1) === 110)'
  +' { node.bigint = node.raw.slice(0, -1); }'#10'    this.next();'#10'    retu'
  +'rn this.finishNode(node, "Literal")'#10'  };'#10#10'  pp$3.parseParenExpres'
  +'sion = function() {'#10'    this.expect(types.parenL);'#10'    var val = th'
  +'is.parseExpression();'#10'    this.expect(types.parenR);'#10'    return val'
  +#10'  };'#10#10'  pp$3.parseParenAndDistinguishExpression = function(canBeAr'
  +'row) {'#10'    var startPos = this.start, startLoc = this.startLoc, val, al'
  +'lowTrailingComma = this.options.ecmaVersion >= 8;'#10'    if (this.options.'
  +'ecmaVersion >= 6) {'#10'      this.next();'#10#10'      var innerStartPos ='
  +' this.start, innerStartLoc = this.startLoc;'#10'      var exprList = [], fi'
  +'rst = true, lastIsComma = false;'#10'      var refDestructuringErrors = new'
  +' DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.await'
  +'Pos, spreadStart;'#10'      this.yieldPos = 0;'#10'      this.awaitPos = 0;'
  +#10'      while (this.type !== types.parenR) {'#10'        first ? first = f'
  +'alse : this.expect(types.comma);'#10'        if (allowTrailingComma && this'
  +'.afterTrailingComma(types.parenR, true)) {'#10'          lastIsComma = true'
  +';'#10'          break'#10'        } else if (this.type === types.ellipsis) '
  +'{'#10'          spreadStart = this.start;'#10'          exprList.push(this.'
  +'parseParenItem(this.parseRestBinding()));'#10'          if (this.type === t'
  +'ypes.comma) { this.raise(this.start, "Comma is not permitted after the rest'
  +' element"); }'#10'          break'#10'        } else {'#10'          exprLi'
  +'st.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parsePare'
  +'nItem));'#10'        }'#10'      }'#10'      var innerEndPos = this.start, '
  +'innerEndLoc = this.startLoc;'#10'      this.expect(types.parenR);'#10#10'  '
  +'    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) '
  +'{'#10'        this.checkPatternErrors(refDestructuringErrors, false);'#10' '
  +'       this.checkYieldAwaitInDefaultParams();'#10'        this.yieldPos = o'
  +'ldYieldPos;'#10'        this.awaitPos = oldAwaitPos;'#10'        return thi'
  +'s.parseParenArrowList(startPos, startLoc, exprList)'#10'      }'#10#10'    '
  +'  if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart)'
  +'; }'#10'      if (spreadStart) { this.unexpected(spreadStart); }'#10'      '
  +'this.checkExpressionErrors(refDestructuringErrors, true);'#10'      this.yi'
  +'eldPos = oldYieldPos || this.yieldPos;'#10'      this.awaitPos = oldAwaitPo'
  +'s || this.awaitPos;'#10#10'      if (exprList.length > 1) {'#10'        val'
  +' = this.startNodeAt(innerStartPos, innerStartLoc);'#10'        val.expressi'
  +'ons = exprList;'#10'        this.finishNodeAt(val, "SequenceExpression", in'
  +'nerEndPos, innerEndLoc);'#10'      } else {'#10'        val = exprList[0];'
  +#10'      }'#10'    } else {'#10'      val = this.parseParenExpression();'#10
  +'    }'#10#10'    if (this.options.preserveParens) {'#10'      var par = thi'
  +'s.startNodeAt(startPos, startLoc);'#10'      par.expression = val;'#10'    '
  +'  return this.finishNode(par, "ParenthesizedExpression")'#10'    } else {'
  +#10'      return val'#10'    }'#10'  };'#10#10'  pp$3.parseParenItem = funct'
  +'ion(item) {'#10'    return item'#10'  };'#10#10'  pp$3.parseParenArrowList '
  +'= function(startPos, startLoc, exprList) {'#10'    return this.parseArrowEx'
  +'pression(this.startNodeAt(startPos, startLoc), exprList)'#10'  };'#10#10#10
  +'  var empty$1 = [];'#10#10'  pp$3.parseNew = function() {'#10'    if (this.'
  +'containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keywor'
  +'d new"); }'#10'    var node = this.startNode();'#10'    var meta = this.par'
  +'seIdent(true);'#10'    if (this.options.ecmaVersion >= 6 && this.eat(types.'
  ,'dot)) {'#10'      node.meta = meta;'#10'      var containsEsc = this.contai'
  +'nsEsc;'#10'      node.property = this.parseIdent(true);'#10'      if (node.'
  +'property.name !== "target" || containsEsc)'#10'        { this.raiseRecovera'
  +'ble(node.property.start, "The only valid meta property for new is new.targe'
  +'t"); }'#10'      if (!this.inNonArrowFunction())'#10'        { this.raiseRe'
  +'coverable(node.start, "new.target can only be used in functions"); }'#10'  '
  +'    return this.finishNode(node, "MetaProperty")'#10'    }'#10'    var star'
  +'tPos = this.start, startLoc = this.startLoc, isImport = this.type === types'
  +'._import;'#10'    node.callee = this.parseSubscripts(this.parseExprAtom(), '
  +'startPos, startLoc, true);'#10'    if (isImport && node.callee.type === "Im'
  +'portExpression") {'#10'      this.raise(startPos, "Cannot use new with impo'
  +'rt()");'#10'    }'#10'    if (this.eat(types.parenL)) { node.arguments = th'
  +'is.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }'#10
  +'    else { node.arguments = empty$1; }'#10'    return this.finishNode(node,'
  +' "NewExpression")'#10'  };'#10#10#10'  pp$3.parseTemplateElement = function'
  +'(ref) {'#10'    var isTagged = ref.isTagged;'#10#10'    var elem = this.sta'
  +'rtNode();'#10'    if (this.type === types.invalidTemplate) {'#10'      if ('
  +'!isTagged) {'#10'        this.raiseRecoverable(this.start, "Bad escape sequ'
  +'ence in untagged template literal");'#10'      }'#10'      elem.value = {'
  +#10'        raw: this.value,'#10'        cooked: null'#10'      };'#10'    }'
  +' else {'#10'      elem.value = {'#10'        raw: this.input.slice(this.sta'
  +'rt, this.end).replace(/\r\n?/g, "\n"),'#10'        cooked: this.value'#10' '
  +'     };'#10'    }'#10'    this.next();'#10'    elem.tail = this.type === ty'
  +'pes.backQuote;'#10'    return this.finishNode(elem, "TemplateElement")'#10
  +'  };'#10#10'  pp$3.parseTemplate = function(ref) {'#10'    if ( ref === voi'
  +'d 0 ) ref = {};'#10'    var isTagged = ref.isTagged; if ( isTagged === void'
  +' 0 ) isTagged = false;'#10#10'    var node = this.startNode();'#10'    this'
  +'.next();'#10'    node.expressions = [];'#10'    var curElt = this.parseTemp'
  +'lateElement({isTagged: isTagged});'#10'    node.quasis = [curElt];'#10'    '
  +'while (!curElt.tail) {'#10'      if (this.type === types.eof) { this.raise('
  +'this.pos, "Unterminated template literal"); }'#10'      this.expect(types.d'
  +'ollarBraceL);'#10'      node.expressions.push(this.parseExpression());'#10
  +'      this.expect(types.braceR);'#10'      node.quasis.push(curElt = this.p'
  +'arseTemplateElement({isTagged: isTagged}));'#10'    }'#10'    this.next();'
  +#10'    return this.finishNode(node, "TemplateLiteral")'#10'  };'#10#10'  pp'
  +'$3.isAsyncProp = function(prop) {'#10'    return !prop.computed && prop.key'
  +'.type === "Identifier" && prop.key.name === "async" &&'#10'      (this.type'
  +' === types.name || this.type === types.num || this.type === types.string ||'
  +' this.type === types.bracketL || this.type.keyword || (this.options.ecmaVer'
  +'sion >= 9 && this.type === types.star)) &&'#10'      !lineBreak.test(this.i'
  +'nput.slice(this.lastTokEnd, this.start))'#10'  };'#10#10#10'  pp$3.parseObj'
  +' = function(isPattern, refDestructuringErrors) {'#10'    var node = this.st'
  +'artNode(), first = true, propHash = {};'#10'    node.properties = [];'#10' '
  +'   this.next();'#10'    while (!this.eat(types.braceR)) {'#10'      if (!fi'
  +'rst) {'#10'        this.expect(types.comma);'#10'        if (this.options.e'
  +'cmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }'#10'   '
  +'   } else { first = false; }'#10#10'      var prop = this.parseProperty(isP'
  +'attern, refDestructuringErrors);'#10'      if (!isPattern) { this.checkProp'
  +'Clash(prop, propHash, refDestructuringErrors); }'#10'      node.properties.'
  +'push(prop);'#10'    }'#10'    return this.finishNode(node, isPattern ? "Obj'
  +'ectPattern" : "ObjectExpression")'#10'  };'#10#10'  pp$3.parseProperty = fu'
  +'nction(isPattern, refDestructuringErrors) {'#10'    var prop = this.startNo'
  +'de(), isGenerator, isAsync, startPos, startLoc;'#10'    if (this.options.ec'
  +'maVersion >= 9 && this.eat(types.ellipsis)) {'#10'      if (isPattern) {'#10
  +'        prop.argument = this.parseIdent(false);'#10'        if (this.type ='
  +'== types.comma) {'#10'          this.raise(this.start, "Comma is not permit'
  +'ted after the rest element");'#10'        }'#10'        return this.finishN'
  +'ode(prop, "RestElement")'#10'      }'#10'      if (this.type === types.pare'
  +'nL && refDestructuringErrors) {'#10'        if (refDestructuringErrors.pare'
  +'nthesizedAssign < 0) {'#10'          refDestructuringErrors.parenthesizedAs'
  +'sign = this.start;'#10'        }'#10'        if (refDestructuringErrors.par'
  +'enthesizedBind < 0) {'#10'          refDestructuringErrors.parenthesizedBin'
  +'d = this.start;'#10'        }'#10'      }'#10'      prop.argument = this.pa'
  +'rseMaybeAssign(false, refDestructuringErrors);'#10'      if (this.type === '
  ,'types.comma && refDestructuringErrors && refDestructuringErrors.trailingCom'
  +'ma < 0) {'#10'        refDestructuringErrors.trailingComma = this.start;'#10
  +'      }'#10'      return this.finishNode(prop, "SpreadElement")'#10'    }'
  +#10'    if (this.options.ecmaVersion >= 6) {'#10'      prop.method = false;'
  +#10'      prop.shorthand = false;'#10'      if (isPattern || refDestructurin'
  +'gErrors) {'#10'        startPos = this.start;'#10'        startLoc = this.s'
  +'tartLoc;'#10'      }'#10'      if (!isPattern)'#10'        { isGenerator = '
  +'this.eat(types.star); }'#10'    }'#10'    var containsEsc = this.containsEs'
  +'c;'#10'    this.parsePropertyName(prop);'#10'    if (!isPattern && !contain'
  +'sEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(p'
  +'rop)) {'#10'      isAsync = true;'#10'      isGenerator = this.options.ecma'
  +'Version >= 9 && this.eat(types.star);'#10'      this.parsePropertyName(prop'
  +', refDestructuringErrors);'#10'    } else {'#10'      isAsync = false;'#10
  +'    }'#10'    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync'
  +', startPos, startLoc, refDestructuringErrors, containsEsc);'#10'    return '
  +'this.finishNode(prop, "Property")'#10'  };'#10#10'  pp$3.parsePropertyValue'
  +' = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refD'
  +'estructuringErrors, containsEsc) {'#10'    if ((isGenerator || isAsync) && '
  +'this.type === types.colon)'#10'      { this.unexpected(); }'#10#10'    if ('
  +'this.eat(types.colon)) {'#10'      prop.value = isPattern ? this.parseMaybe'
  +'Default(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestru'
  +'cturingErrors);'#10'      prop.kind = "init";'#10'    } else if (this.optio'
  +'ns.ecmaVersion >= 6 && this.type === types.parenL) {'#10'      if (isPatter'
  +'n) { this.unexpected(); }'#10'      prop.kind = "init";'#10'      prop.meth'
  +'od = true;'#10'      prop.value = this.parseMethod(isGenerator, isAsync);'
  +#10'    } else if (!isPattern && !containsEsc &&'#10'               this.opt'
  +'ions.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &'
  +'&'#10'               (prop.key.name === "get" || prop.key.name === "set") &'
  +'&'#10'               (this.type !== types.comma && this.type !== types.brac'
  +'eR)) {'#10'      if (isGenerator || isAsync) { this.unexpected(); }'#10'   '
  +'   prop.kind = prop.key.name;'#10'      this.parsePropertyName(prop);'#10' '
  +'     prop.value = this.parseMethod(false);'#10'      var paramCount = prop.'
  +'kind === "get" ? 0 : 1;'#10'      if (prop.value.params.length !== paramCou'
  +'nt) {'#10'        var start = prop.value.start;'#10'        if (prop.kind ='
  +'== "get")'#10'          { this.raiseRecoverable(start, "getter should have '
  +'no params"); }'#10'        else'#10'          { this.raiseRecoverable(start'
  +', "setter should have exactly one param"); }'#10'      } else {'#10'       '
  +' if (prop.kind === "set" && prop.value.params[0].type === "RestElement")'#10
  +'          { this.raiseRecoverable(prop.value.params[0].start, "Setter canno'
  +'t use rest params"); }'#10'      }'#10'    } else if (this.options.ecmaVers'
  +'ion >= 6 && !prop.computed && prop.key.type === "Identifier") {'#10'      i'
  +'f (isGenerator || isAsync) { this.unexpected(); }'#10'      this.checkUnres'
  +'erved(prop.key);'#10'      if (prop.key.name === "await" && !this.awaitIden'
  +'tPos)'#10'        { this.awaitIdentPos = startPos; }'#10'      prop.kind = '
  +'"init";'#10'      if (isPattern) {'#10'        prop.value = this.parseMaybe'
  +'Default(startPos, startLoc, prop.key);'#10'      } else if (this.type === t'
  +'ypes.eq && refDestructuringErrors) {'#10'        if (refDestructuringErrors'
  +'.shorthandAssign < 0)'#10'          { refDestructuringErrors.shorthandAssig'
  +'n = this.start; }'#10'        prop.value = this.parseMaybeDefault(startPos,'
  +' startLoc, prop.key);'#10'      } else {'#10'        prop.value = prop.key;'
  +#10'      }'#10'      prop.shorthand = true;'#10'    } else { this.unexpecte'
  +'d(); }'#10'  };'#10#10'  pp$3.parsePropertyName = function(prop) {'#10'    '
  +'if (this.options.ecmaVersion >= 6) {'#10'      if (this.eat(types.bracketL)'
  +') {'#10'        prop.computed = true;'#10'        prop.key = this.parseMayb'
  +'eAssign();'#10'        this.expect(types.bracketR);'#10'        return prop'
  +'.key'#10'      } else {'#10'        prop.computed = false;'#10'      }'#10
  +'    }'#10'    return prop.key = this.type === types.num || this.type === ty'
  +'pes.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReser'
  +'ved !== "never")'#10'  };'#10#10#10'  pp$3.initFunction = function(node) {'
  +#10'    node.id = null;'#10'    if (this.options.ecmaVersion >= 6) { node.ge'
  +'nerator = node.expression = false; }'#10'    if (this.options.ecmaVersion >'
  +'= 8) { node.async = false; }'#10'  };'#10#10#10'  pp$3.parseMethod = functi'
  +'on(isGenerator, isAsync, allowDirectSuper) {'#10'    var node = this.startN'
  +'ode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitId'
  ,'entPos = this.awaitIdentPos;'#10#10'    this.initFunction(node);'#10'    if'
  +' (this.options.ecmaVersion >= 6)'#10'      { node.generator = isGenerator; '
  +'}'#10'    if (this.options.ecmaVersion >= 8)'#10'      { node.async = !!isA'
  +'sync; }'#10#10'    this.yieldPos = 0;'#10'    this.awaitPos = 0;'#10'    th'
  +'is.awaitIdentPos = 0;'#10'    this.enterScope(functionFlags(isAsync, node.g'
  +'enerator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));'#10
  +#10'    this.expect(types.parenL);'#10'    node.params = this.parseBindingLi'
  +'st(types.parenR, false, this.options.ecmaVersion >= 8);'#10'    this.checkY'
  +'ieldAwaitInDefaultParams();'#10'    this.parseFunctionBody(node, false, tru'
  +'e);'#10#10'    this.yieldPos = oldYieldPos;'#10'    this.awaitPos = oldAwai'
  +'tPos;'#10'    this.awaitIdentPos = oldAwaitIdentPos;'#10'    return this.fi'
  +'nishNode(node, "FunctionExpression")'#10'  };'#10#10#10'  pp$3.parseArrowEx'
  +'pression = function(node, params, isAsync) {'#10'    var oldYieldPos = this'
  +'.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentP'
  +'os;'#10#10'    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW)'
  +';'#10'    this.initFunction(node);'#10'    if (this.options.ecmaVersion >= '
  +'8) { node.async = !!isAsync; }'#10#10'    this.yieldPos = 0;'#10'    this.a'
  +'waitPos = 0;'#10'    this.awaitIdentPos = 0;'#10#10'    node.params = this.'
  +'toAssignableList(params, true);'#10'    this.parseFunctionBody(node, true, '
  +'false);'#10#10'    this.yieldPos = oldYieldPos;'#10'    this.awaitPos = old'
  +'AwaitPos;'#10'    this.awaitIdentPos = oldAwaitIdentPos;'#10'    return thi'
  +'s.finishNode(node, "ArrowFunctionExpression")'#10'  };'#10#10#10'  pp$3.par'
  +'seFunctionBody = function(node, isArrowFunction, isMethod) {'#10'    var is'
  +'Expression = isArrowFunction && this.type !== types.braceL;'#10'    var old'
  +'Strict = this.strict, useStrict = false;'#10#10'    if (isExpression) {'#10
  +'      node.body = this.parseMaybeAssign();'#10'      node.expression = true'
  +';'#10'      this.checkParams(node, false);'#10'    } else {'#10'      var n'
  +'onSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.pa'
  +'rams);'#10'      if (!oldStrict || nonSimple) {'#10'        useStrict = thi'
  +'s.strictDirective(this.end);'#10'        if (useStrict && nonSimple)'#10'  '
  +'        { this.raiseRecoverable(node.start, "Illegal ''use strict'' directi'
  +'ve in function with non-simple parameter list"); }'#10'      }'#10'      va'
  +'r oldLabels = this.labels;'#10'      this.labels = [];'#10'      if (useStr'
  +'ict) { this.strict = true; }'#10#10'      this.checkParams(node, !oldStrict'
  +' && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(n'
  +'ode.params));'#10'      node.body = this.parseBlock(false);'#10'      node.'
  +'expression = false;'#10'      this.adaptDirectivePrologue(node.body.body);'
  +#10'      this.labels = oldLabels;'#10'    }'#10'    this.exitScope();'#10#10
  +'    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }'
  +#10'    this.strict = oldStrict;'#10'  };'#10#10'  pp$3.isSimpleParamList = '
  +'function(params) {'#10'    for (var i = 0, list = params; i < list.length; '
  +'i += 1)'#10'      {'#10'      var param = list[i];'#10#10'      if (param.t'
  +'ype !== "Identifier") { return false'#10'    } }'#10'    return true'#10'  '
  +'};'#10#10#10'  pp$3.checkParams = function(node, allowDuplicates) {'#10'   '
  +' var nameHash = {};'#10'    for (var i = 0, list = node.params; i < list.le'
  +'ngth; i += 1)'#10'      {'#10'      var param = list[i];'#10#10'      this.'
  +'checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);'#10'    }'#10
  +'  };'#10#10#10'  pp$3.parseExprList = function(close, allowTrailingComma, a'
  +'llowEmpty, refDestructuringErrors) {'#10'    var elts = [], first = true;'
  +#10'    while (!this.eat(close)) {'#10'      if (!first) {'#10'        this.'
  +'expect(types.comma);'#10'        if (allowTrailingComma && this.afterTraili'
  +'ngComma(close)) { break }'#10'      } else { first = false; }'#10#10'      '
  +'var elt = (void 0);'#10'      if (allowEmpty && this.type === types.comma)'
  +#10'        { elt = null; }'#10'      else if (this.type === types.ellipsis)'
  +' {'#10'        elt = this.parseSpread(refDestructuringErrors);'#10'        '
  +'if (refDestructuringErrors && this.type === types.comma && refDestructuring'
  +'Errors.trailingComma < 0)'#10'          { refDestructuringErrors.trailingCo'
  +'mma = this.start; }'#10'      } else {'#10'        elt = this.parseMaybeAss'
  +'ign(false, refDestructuringErrors);'#10'      }'#10'      elts.push(elt);'
  +#10'    }'#10'    return elts'#10'  };'#10#10'  pp$3.checkUnreserved = funct'
  +'ion(ref) {'#10'    var start = ref.start;'#10'    var end = ref.end;'#10'  '
  +'  var name = ref.name;'#10#10'    if (this.inGenerator && name === "yield")'
  +#10'      { this.raiseRecoverable(start, "Cannot use ''yield'' as identifier'
  +' inside a generator"); }'#10'    if (this.inAsync && name === "await")'#10
  ,'      { this.raiseRecoverable(start, "Cannot use ''await'' as identifier in'
  +'side an async function"); }'#10'    if (this.keywords.test(name))'#10'     '
  +' { this.raise(start, ("Unexpected keyword ''" + name + "''")); }'#10'    if'
  +' (this.options.ecmaVersion < 6 &&'#10'      this.input.slice(start, end).in'
  +'dexOf("\\") !== -1) { return }'#10'    var re = this.strict ? this.reserved'
  +'WordsStrict : this.reservedWords;'#10'    if (re.test(name)) {'#10'      if'
  +' (!this.inAsync && name === "await")'#10'        { this.raiseRecoverable(st'
  +'art, "Cannot use keyword ''await'' outside an async function"); }'#10'     '
  +' this.raiseRecoverable(start, ("The keyword ''" + name + "'' is reserved"))'
  +';'#10'    }'#10'  };'#10#10#10'  pp$3.parseIdent = function(liberal, isBind'
  +'ing) {'#10'    var node = this.startNode();'#10'    if (this.type === types'
  +'.name) {'#10'      node.name = this.value;'#10'    } else if (this.type.key'
  +'word) {'#10'      node.name = this.type.keyword;'#10#10'      if ((node.nam'
  +'e === "class" || node.name === "function") &&'#10'          (this.lastTokEn'
  +'d !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !=='
  +' 46)) {'#10'        this.context.pop();'#10'      }'#10'    } else {'#10'  '
  +'    this.unexpected();'#10'    }'#10'    this.next(!!liberal);'#10'    this'
  +'.finishNode(node, "Identifier");'#10'    if (!liberal) {'#10'      this.che'
  +'ckUnreserved(node);'#10'      if (node.name === "await" && !this.awaitIdent'
  +'Pos)'#10'        { this.awaitIdentPos = node.start; }'#10'    }'#10'    ret'
  +'urn node'#10'  };'#10#10#10'  pp$3.parseYield = function(noIn) {'#10'    if'
  +' (!this.yieldPos) { this.yieldPos = this.start; }'#10#10'    var node = thi'
  +'s.startNode();'#10'    this.next();'#10'    if (this.type === types.semi ||'
  +' this.canInsertSemicolon() || (this.type !== types.star && !this.type.start'
  +'sExpr)) {'#10'      node.delegate = false;'#10'      node.argument = null;'
  +#10'    } else {'#10'      node.delegate = this.eat(types.star);'#10'      n'
  +'ode.argument = this.parseMaybeAssign(noIn);'#10'    }'#10'    return this.f'
  +'inishNode(node, "YieldExpression")'#10'  };'#10#10'  pp$3.parseAwait = func'
  +'tion() {'#10'    if (!this.awaitPos) { this.awaitPos = this.start; }'#10#10
  +'    var node = this.startNode();'#10'    this.next();'#10'    node.argument'
  +' = this.parseMaybeUnary(null, false);'#10'    return this.finishNode(node, '
  +'"AwaitExpression")'#10'  };'#10#10'  var pp$4 = Parser.prototype;'#10#10#10
  +'  pp$4.raise = function(pos, message) {'#10'    var loc = getLineInfo(this.'
  +'input, pos);'#10'    message += " (" + loc.line + ":" + loc.column + ")";'
  +#10'    var err = new SyntaxError(message);'#10'    err.pos = pos; err.loc ='
  +' loc; err.raisedAt = this.pos;'#10'    throw err'#10'  };'#10#10'  pp$4.rai'
  +'seRecoverable = pp$4.raise;'#10#10'  pp$4.curPosition = function() {'#10'  '
  +'  if (this.options.locations) {'#10'      return new Position(this.curLine,'
  +' this.pos - this.lineStart)'#10'    }'#10'  };'#10#10'  var pp$5 = Parser.p'
  +'rototype;'#10#10'  var Scope = function Scope(flags) {'#10'    this.flags ='
  +' flags;'#10'    this.var = [];'#10'    this.lexical = [];'#10'    this.func'
  +'tions = [];'#10'  };'#10#10#10'  pp$5.enterScope = function(flags) {'#10'  '
  +'  this.scopeStack.push(new Scope(flags));'#10'  };'#10#10'  pp$5.exitScope '
  +'= function() {'#10'    this.scopeStack.pop();'#10'  };'#10#10'  pp$5.treatF'
  +'unctionsAsVarInScope = function(scope) {'#10'    return (scope.flags & SCOP'
  +'E_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)'#10'  };'#10#10
  +'  pp$5.declareName = function(name, bindingType, pos) {'#10'    var redecla'
  +'red = false;'#10'    if (bindingType === BIND_LEXICAL) {'#10'      var scop'
  +'e = this.currentScope();'#10'      redeclared = scope.lexical.indexOf(name)'
  +' > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1'
  +';'#10'      scope.lexical.push(name);'#10'      if (this.inModule && (scope'
  +'.flags & SCOPE_TOP))'#10'        { delete this.undefinedExports[name]; }'#10
  +'    } else if (bindingType === BIND_SIMPLE_CATCH) {'#10'      var scope$1 ='
  +' this.currentScope();'#10'      scope$1.lexical.push(name);'#10'    } else '
  +'if (bindingType === BIND_FUNCTION) {'#10'      var scope$2 = this.currentSc'
  +'ope();'#10'      if (this.treatFunctionsAsVar)'#10'        { redeclared = s'
  +'cope$2.lexical.indexOf(name) > -1; }'#10'      else'#10'        { redeclare'
  +'d = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }'
  +#10'      scope$2.functions.push(name);'#10'    } else {'#10'      for (var '
  +'i = this.scopeStack.length - 1; i >= 0; --i) {'#10'        var scope$3 = th'
  +'is.scopeStack[i];'#10'        if (scope$3.lexical.indexOf(name) > -1 && !(('
  +'scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||'#10
  +'            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.'
  +'indexOf(name) > -1) {'#10'          redeclared = true;'#10'          break'
  ,#10'        }'#10'        scope$3.var.push(name);'#10'        if (this.inMod'
  +'ule && (scope$3.flags & SCOPE_TOP))'#10'          { delete this.undefinedEx'
  +'ports[name]; }'#10'        if (scope$3.flags & SCOPE_VAR) { break }'#10'   '
  +'   }'#10'    }'#10'    if (redeclared) { this.raiseRecoverable(pos, ("Ident'
  +'ifier ''" + name + "'' has already been declared")); }'#10'  };'#10#10'  pp'
  +'$5.checkLocalExport = function(id) {'#10'    if (this.scopeStack[0].lexical'
  +'.indexOf(id.name) === -1 &&'#10'        this.scopeStack[0].var.indexOf(id.n'
  +'ame) === -1) {'#10'      this.undefinedExports[id.name] = id;'#10'    }'#10
  +'  };'#10#10'  pp$5.currentScope = function() {'#10'    return this.scopeSta'
  +'ck[this.scopeStack.length - 1]'#10'  };'#10#10'  pp$5.currentVarScope = fun'
  +'ction() {'#10'    for (var i = this.scopeStack.length - 1;; i--) {'#10'    '
  +'  var scope = this.scopeStack[i];'#10'      if (scope.flags & SCOPE_VAR) { '
  +'return scope }'#10'    }'#10'  };'#10#10'  pp$5.currentThisScope = function'
  +'() {'#10'    for (var i = this.scopeStack.length - 1;; i--) {'#10'      var'
  +' scope = this.scopeStack[i];'#10'      if (scope.flags & SCOPE_VAR && !(sco'
  +'pe.flags & SCOPE_ARROW)) { return scope }'#10'    }'#10'  };'#10#10'  var N'
  +'ode = function Node(parser, pos, loc) {'#10'    this.type = "";'#10'    thi'
  +'s.start = pos;'#10'    this.end = 0;'#10'    if (parser.options.locations)'
  +#10'      { this.loc = new SourceLocation(parser, loc); }'#10'    if (parser'
  +'.options.directSourceFile)'#10'      { this.sourceFile = parser.options.dir'
  +'ectSourceFile; }'#10'    if (parser.options.ranges)'#10'      { this.range '
  +'= [pos, 0]; }'#10'  };'#10#10#10'  var pp$6 = Parser.prototype;'#10#10'  pp'
  +'$6.startNode = function() {'#10'    return new Node(this, this.start, this.'
  +'startLoc)'#10'  };'#10#10'  pp$6.startNodeAt = function(pos, loc) {'#10'   '
  +' return new Node(this, pos, loc)'#10'  };'#10#10#10'  function finishNodeAt'
  +'(node, type, pos, loc) {'#10'    node.type = type;'#10'    node.end = pos;'
  +#10'    if (this.options.locations)'#10'      { node.loc.end = loc; }'#10'  '
  +'  if (this.options.ranges)'#10'      { node.range[1] = pos; }'#10'    retur'
  +'n node'#10'  }'#10#10'  pp$6.finishNode = function(node, type) {'#10'    re'
  +'turn finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLo'
  +'c)'#10'  };'#10#10#10'  pp$6.finishNodeAt = function(node, type, pos, loc) '
  +'{'#10'    return finishNodeAt.call(this, node, type, pos, loc)'#10'  };'#10
  +#10#10'  var TokContext = function TokContext(token, isExpr, preserveSpace, '
  +'override, generator) {'#10'    this.token = token;'#10'    this.isExpr = !!'
  +'isExpr;'#10'    this.preserveSpace = !!preserveSpace;'#10'    this.override'
  +' = override;'#10'    this.generator = !!generator;'#10'  };'#10#10'  var ty'
  +'pes$1 = {'#10'    b_stat: new TokContext("{", false),'#10'    b_expr: new T'
  +'okContext("{", true),'#10'    b_tmpl: new TokContext("${", false),'#10'    '
  +'p_stat: new TokContext("(", false),'#10'    p_expr: new TokContext("(", tru'
  +'e),'#10'    q_tmpl: new TokContext("`", true, true, function (p) { return p'
  +'.tryReadTemplateToken(); }),'#10'    f_stat: new TokContext("function", fal'
  +'se),'#10'    f_expr: new TokContext("function", true),'#10'    f_expr_gen: '
  +'new TokContext("function", true, false, null, true),'#10'    f_gen: new Tok'
  +'Context("function", false, false, null, true)'#10'  };'#10#10'  var pp$7 = '
  +'Parser.prototype;'#10#10'  pp$7.initialContext = function() {'#10'    retur'
  +'n [types$1.b_stat]'#10'  };'#10#10'  pp$7.braceIsBlock = function(prevType)'
  +' {'#10'    var parent = this.curContext();'#10'    if (parent === types$1.f'
  +'_expr || parent === types$1.f_stat)'#10'      { return true }'#10'    if (p'
  +'revType === types.colon && (parent === types$1.b_stat || parent === types$1'
  +'.b_expr))'#10'      { return !parent.isExpr }'#10#10'    if (prevType === t'
  +'ypes._return || prevType === types.name && this.exprAllowed)'#10'      { re'
  +'turn lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }'#10'  '
  +'  if (prevType === types._else || prevType === types.semi || prevType === t'
  +'ypes.eof || prevType === types.parenR || prevType === types.arrow)'#10'    '
  +'  { return true }'#10'    if (prevType === types.braceL)'#10'      { return'
  +' parent === types$1.b_stat }'#10'    if (prevType === types._var || prevTyp'
  +'e === types._const || prevType === types.name)'#10'      { return false }'
  +#10'    return !this.exprAllowed'#10'  };'#10#10'  pp$7.inGeneratorContext ='
  +' function() {'#10'    for (var i = this.context.length - 1; i >= 1; i--) {'
  +#10'      var context = this.context[i];'#10'      if (context.token === "fu'
  +'nction")'#10'        { return context.generator }'#10'    }'#10'    return '
  +'false'#10'  };'#10#10'  pp$7.updateContext = function(prevType) {'#10'    v'
  +'ar update, type = this.type;'#10'    if (type.keyword && prevType === types'
  +'.dot)'#10'      { this.exprAllowed = false; }'#10'    else if (update = typ'
  ,'e.updateContext)'#10'      { update.call(this, prevType); }'#10'    else'#10
  +'      { this.exprAllowed = type.beforeExpr; }'#10'  };'#10#10#10'  types.pa'
  +'renR.updateContext = types.braceR.updateContext = function() {'#10'    if ('
  +'this.context.length === 1) {'#10'      this.exprAllowed = true;'#10'      r'
  +'eturn'#10'    }'#10'    var out = this.context.pop();'#10'    if (out === t'
  +'ypes$1.b_stat && this.curContext().token === "function") {'#10'      out = '
  +'this.context.pop();'#10'    }'#10'    this.exprAllowed = !out.isExpr;'#10' '
  +' };'#10#10'  types.braceL.updateContext = function(prevType) {'#10'    this'
  +'.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr'
  +');'#10'    this.exprAllowed = true;'#10'  };'#10#10'  types.dollarBraceL.up'
  +'dateContext = function() {'#10'    this.context.push(types$1.b_tmpl);'#10' '
  +'   this.exprAllowed = true;'#10'  };'#10#10'  types.parenL.updateContext = '
  +'function(prevType) {'#10'    var statementParens = prevType === types._if |'
  +'| prevType === types._for || prevType === types._with || prevType === types'
  +'._while;'#10'    this.context.push(statementParens ? types$1.p_stat : types'
  +'$1.p_expr);'#10'    this.exprAllowed = true;'#10'  };'#10#10'  types.incDec'
  +'.updateContext = function() {'#10'  };'#10#10'  types._function.updateConte'
  +'xt = types._class.updateContext = function(prevType) {'#10'    if (prevType'
  +'.beforeExpr && prevType !== types.semi && prevType !== types._else &&'#10' '
  +'       !(prevType === types._return && lineBreak.test(this.input.slice(this'
  +'.lastTokEnd, this.start))) &&'#10'        !((prevType === types.colon || pr'
  +'evType === types.braceL) && this.curContext() === types$1.b_stat))'#10'    '
  +'  { this.context.push(types$1.f_expr); }'#10'    else'#10'      { this.cont'
  +'ext.push(types$1.f_stat); }'#10'    this.exprAllowed = false;'#10'  };'#10
  +#10'  types.backQuote.updateContext = function() {'#10'    if (this.curConte'
  +'xt() === types$1.q_tmpl)'#10'      { this.context.pop(); }'#10'    else'#10
  +'      { this.context.push(types$1.q_tmpl); }'#10'    this.exprAllowed = fal'
  +'se;'#10'  };'#10#10'  types.star.updateContext = function(prevType) {'#10' '
  +'   if (prevType === types._function) {'#10'      var index = this.context.l'
  +'ength - 1;'#10'      if (this.context[index] === types$1.f_expr)'#10'      '
  +'  { this.context[index] = types$1.f_expr_gen; }'#10'      else'#10'        '
  +'{ this.context[index] = types$1.f_gen; }'#10'    }'#10'    this.exprAllowed'
  +' = true;'#10'  };'#10#10'  types.name.updateContext = function(prevType) {'
  +#10'    var allowed = false;'#10'    if (this.options.ecmaVersion >= 6 && pr'
  +'evType !== types.dot) {'#10'      if (this.value === "of" && !this.exprAllo'
  +'wed ||'#10'          this.value === "yield" && this.inGeneratorContext())'
  +#10'        { allowed = true; }'#10'    }'#10'    this.exprAllowed = allowed'
  +';'#10'  };'#10#10#10'  var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit A'
  +'Hex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M '
  +'Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemappe'
  +'d CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Chang'
  +'es_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_C'
  +'ode_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modif'
  +'ier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Ba'
  +'se Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinar'
  +'y_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control '
  +'Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_P'
  +'oint NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark'
  +' QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD'
  +' Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variatio'
  +'n_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";'#10'  va'
  +'r ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic"'
  +';'#10'  var ecma11BinaryProperties = ecma10BinaryProperties;'#10'  var unic'
  +'odeBinaryProperties = {'#10'    9: ecma9BinaryProperties,'#10'    10: ecma1'
  +'0BinaryProperties,'#10'    11: ecma11BinaryProperties'#10'  };'#10#10'  var'
  +' unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Conne'
  +'ctor_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd'
  +' Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf I'
  +'nitial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase'
  +'_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier'
  +'_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Le'
  +'tter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Sepa'
  +'rator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs '
  +'Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Upp'
  ,'ercase_Letter Lu";'#10#10'  var ecma9ScriptValues = "Adlam Adlm Ahom Ahom A'
  +'natolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese B'
  +'ali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomo'
  +'fo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aborigin'
  +'al Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee '
  +'Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl'
  +' Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbas'
  +'an Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gra'
  +'n Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano '
  +'Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh '
  +'Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java K'
  +'aithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer K'
  +'hmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb L'
  +'inear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj '
  +'Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm'
  +' Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hierog'
  +'lyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar'
  +' Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham O'
  +'gam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb'
  +' Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Or'
  +'iya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_H'
  +'au Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runi'
  +'c Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sid'
  +'d SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Su'
  +'nd Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai'
  +'_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaa'
  +'na Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai'
  +' Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";'#10'  var ecma10Scri'
  +'ptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohin'
  +'gya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";'#10
  +'  var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari '
  +'Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";'#10'  var unicodeScriptValue'
  +'s = {'#10'    9: ecma9ScriptValues,'#10'    10: ecma10ScriptValues,'#10'   '
  +' 11: ecma11ScriptValues'#10'  };'#10#10'  var data = {};'#10'  function bui'
  +'ldUnicodeData(ecmaVersion) {'#10'    var d = data[ecmaVersion] = {'#10'    '
  +'  binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeG'
  +'eneralCategoryValues),'#10'      nonBinary: {'#10'        General_Category:'
  +' wordsRegexp(unicodeGeneralCategoryValues),'#10'        Script: wordsRegexp'
  +'(unicodeScriptValues[ecmaVersion])'#10'      }'#10'    };'#10'    d.nonBina'
  +'ry.Script_Extensions = d.nonBinary.Script;'#10#10'    d.nonBinary.gc = d.no'
  +'nBinary.General_Category;'#10'    d.nonBinary.sc = d.nonBinary.Script;'#10
  +'    d.nonBinary.scx = d.nonBinary.Script_Extensions;'#10'  }'#10'  buildUni'
  +'codeData(9);'#10'  buildUnicodeData(10);'#10'  buildUnicodeData(11);'#10#10
  +'  var pp$8 = Parser.prototype;'#10#10'  var RegExpValidationState = functio'
  +'n RegExpValidationState(parser) {'#10'    this.parser = parser;'#10'    thi'
  +'s.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (par'
  +'ser.options.ecmaVersion >= 9 ? "s" : "");'#10'    this.unicodeProperties = '
  +'data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];'
  +#10'    this.source = "";'#10'    this.flags = "";'#10'    this.start = 0;'
  +#10'    this.switchU = false;'#10'    this.switchN = false;'#10'    this.pos'
  +' = 0;'#10'    this.lastIntValue = 0;'#10'    this.lastStringValue = "";'#10
  +'    this.lastAssertionIsQuantifiable = false;'#10'    this.numCapturingPare'
  +'ns = 0;'#10'    this.maxBackReference = 0;'#10'    this.groupNames = [];'#10
  +'    this.backReferenceNames = [];'#10'  };'#10#10'  RegExpValidationState.p'
  +'rototype.reset = function reset (start, pattern, flags) {'#10'    var unico'
  +'de = flags.indexOf("u") !== -1;'#10'    this.start = start | 0;'#10'    thi'
  +'s.source = pattern + "";'#10'    this.flags = flags;'#10'    this.switchU ='
  +' unicode && this.parser.options.ecmaVersion >= 6;'#10'    this.switchN = un'
  +'icode && this.parser.options.ecmaVersion >= 9;'#10'  };'#10#10'  RegExpVali'
  +'dationState.prototype.raise = function raise (message) {'#10'    this.parse'
  +'r.raiseRecoverable(this.start, ("Invalid regular expression: /" + (this.sou'
  +'rce) + "/: " + message));'#10'  };'#10#10'  RegExpValidationState.prototype'
  +'.at = function at (i) {'#10'    var s = this.source;'#10'    var l = s.leng'
  +'th;'#10'    if (i >= l) {'#10'      return -1'#10'    }'#10'    var c = s.c'
  ,'harCodeAt(i);'#10'    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i '
  +'+ 1 >= l) {'#10'      return c'#10'    }'#10'    var next = s.charCodeAt(i '
  +'+ 1);'#10'    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - '
  +'0x35FDC00 : c'#10'  };'#10#10'  RegExpValidationState.prototype.nextIndex ='
  +' function nextIndex (i) {'#10'    var s = this.source;'#10'    var l = s.le'
  +'ngth;'#10'    if (i >= l) {'#10'      return l'#10'    }'#10'    var c = s.'
  +'charCodeAt(i), next;'#10'    if (!this.switchU || c <= 0xD7FF || c >= 0xE00'
  +'0 || i + 1 >= l ||'#10'        (next = s.charCodeAt(i + 1)) < 0xDC00 || nex'
  +'t > 0xDFFF) {'#10'      return i + 1'#10'    }'#10'    return i + 2'#10'  }'
  +';'#10#10'  RegExpValidationState.prototype.current = function current () {'
  +#10'    return this.at(this.pos)'#10'  };'#10#10'  RegExpValidationState.pro'
  +'totype.lookahead = function lookahead () {'#10'    return this.at(this.next'
  +'Index(this.pos))'#10'  };'#10#10'  RegExpValidationState.prototype.advance '
  +'= function advance () {'#10'    this.pos = this.nextIndex(this.pos);'#10'  '
  +'};'#10#10'  RegExpValidationState.prototype.eat = function eat (ch) {'#10' '
  +'   if (this.current() === ch) {'#10'      this.advance();'#10'      return '
  +'true'#10'    }'#10'    return false'#10'  };'#10#10'  function codePointToS'
  +'tring(ch) {'#10'    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }'#10
  +'    ch -= 0x10000;'#10'    return String.fromCharCode((ch >> 10) + 0xD800, '
  +'(ch & 0x03FF) + 0xDC00)'#10'  }'#10#10'  pp$8.validateRegExpFlags = functio'
  +'n(state) {'#10'    var validFlags = state.validFlags;'#10'    var flags = s'
  +'tate.flags;'#10#10'    for (var i = 0; i < flags.length; i++) {'#10'      v'
  +'ar flag = flags.charAt(i);'#10'      if (validFlags.indexOf(flag) === -1) {'
  +#10'        this.raise(state.start, "Invalid regular expression flag");'#10
  +'      }'#10'      if (flags.indexOf(flag, i + 1) > -1) {'#10'        this.r'
  +'aise(state.start, "Duplicate regular expression flag");'#10'      }'#10'   '
  +' }'#10'  };'#10#10'  pp$8.validateRegExpPattern = function(state) {'#10'   '
  +' this.regexp_pattern(state);'#10#10'    if (!state.switchN && this.options.'
  +'ecmaVersion >= 9 && state.groupNames.length > 0) {'#10'      state.switchN '
  +'= true;'#10'      this.regexp_pattern(state);'#10'    }'#10'  };'#10#10'  p'
  +'p$8.regexp_pattern = function(state) {'#10'    state.pos = 0;'#10'    state'
  +'.lastIntValue = 0;'#10'    state.lastStringValue = "";'#10'    state.lastAs'
  +'sertionIsQuantifiable = false;'#10'    state.numCapturingParens = 0;'#10'  '
  +'  state.maxBackReference = 0;'#10'    state.groupNames.length = 0;'#10'    '
  +'state.backReferenceNames.length = 0;'#10#10'    this.regexp_disjunction(sta'
  +'te);'#10#10'    if (state.pos !== state.source.length) {'#10'      if (stat'
  +'e.eat(0x29 )) {'#10'        state.raise("Unmatched '')''");'#10'      }'#10
  +'      if (state.eat(0x5D ) || state.eat(0x7D )) {'#10'        state.raise("'
  +'Lone quantifier brackets");'#10'      }'#10'    }'#10'    if (state.maxBack'
  +'Reference > state.numCapturingParens) {'#10'      state.raise("Invalid esca'
  +'pe");'#10'    }'#10'    for (var i = 0, list = state.backReferenceNames; i '
  +'< list.length; i += 1) {'#10'      var name = list[i];'#10#10'      if (sta'
  +'te.groupNames.indexOf(name) === -1) {'#10'        state.raise("Invalid name'
  +'d capture referenced");'#10'      }'#10'    }'#10'  };'#10#10'  pp$8.regexp'
  +'_disjunction = function(state) {'#10'    this.regexp_alternative(state);'#10
  +'    while (state.eat(0x7C )) {'#10'      this.regexp_alternative(state);'#10
  +'    }'#10#10'    if (this.regexp_eatQuantifier(state, true)) {'#10'      st'
  +'ate.raise("Nothing to repeat");'#10'    }'#10'    if (state.eat(0x7B )) {'
  +#10'      state.raise("Lone quantifier brackets");'#10'    }'#10'  };'#10#10
  +'  pp$8.regexp_alternative = function(state) {'#10'    while (state.pos < st'
  +'ate.source.length && this.regexp_eatTerm(state))'#10'      { }'#10'  };'#10
  +#10'  pp$8.regexp_eatTerm = function(state) {'#10'    if (this.regexp_eatAss'
  +'ertion(state)) {'#10'      if (state.lastAssertionIsQuantifiable && this.re'
  +'gexp_eatQuantifier(state)) {'#10'        if (state.switchU) {'#10'         '
  +' state.raise("Invalid quantifier");'#10'        }'#10'      }'#10'      ret'
  +'urn true'#10'    }'#10#10'    if (state.switchU ? this.regexp_eatAtom(state'
  +') : this.regexp_eatExtendedAtom(state)) {'#10'      this.regexp_eatQuantifi'
  +'er(state);'#10'      return true'#10'    }'#10#10'    return false'#10'  };'
  +#10#10'  pp$8.regexp_eatAssertion = function(state) {'#10'    var start = st'
  +'ate.pos;'#10'    state.lastAssertionIsQuantifiable = false;'#10#10'    if ('
  +'state.eat(0x5E ) || state.eat(0x24 )) {'#10'      return true'#10'    }'#10
  +#10'    if (state.eat(0x5C )) {'#10'      if (state.eat(0x42 ) || state.eat('
  +'0x62 )) {'#10'        return true'#10'      }'#10'      state.pos = start;'
  +#10'    }'#10#10'    if (state.eat(0x28 ) && state.eat(0x3F )) {'#10'      v'
  ,'ar lookbehind = false;'#10'      if (this.options.ecmaVersion >= 9) {'#10' '
  +'       lookbehind = state.eat(0x3C );'#10'      }'#10'      if (state.eat(0'
  +'x3D ) || state.eat(0x21 )) {'#10'        this.regexp_disjunction(state);'#10
  +'        if (!state.eat(0x29 )) {'#10'          state.raise("Unterminated gr'
  +'oup");'#10'        }'#10'        state.lastAssertionIsQuantifiable = !lookb'
  +'ehind;'#10'        return true'#10'      }'#10'    }'#10#10'    state.pos ='
  +' start;'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatQuantifier = '
  +'function(state, noError) {'#10'    if ( noError === void 0 ) noError = fals'
  +'e;'#10#10'    if (this.regexp_eatQuantifierPrefix(state, noError)) {'#10'  '
  +'    state.eat(0x3F );'#10'      return true'#10'    }'#10'    return false'
  +#10'  };'#10#10'  pp$8.regexp_eatQuantifierPrefix = function(state, noError)'
  +' {'#10'    return ('#10'      state.eat(0x2A ) ||'#10'      state.eat(0x2B '
  +') ||'#10'      state.eat(0x3F ) ||'#10'      this.regexp_eatBracedQuantifie'
  +'r(state, noError)'#10'    )'#10'  };'#10'  pp$8.regexp_eatBracedQuantifier '
  +'= function(state, noError) {'#10'    var start = state.pos;'#10'    if (sta'
  +'te.eat(0x7B )) {'#10'      var min = 0, max = -1;'#10'      if (this.regexp'
  +'_eatDecimalDigits(state)) {'#10'        min = state.lastIntValue;'#10'     '
  +'   if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {'#10'     '
  +'     max = state.lastIntValue;'#10'        }'#10'        if (state.eat(0x7D'
  +' )) {'#10'          if (max !== -1 && max < min && !noError) {'#10'        '
  +'    state.raise("numbers out of order in {} quantifier");'#10'          }'
  +#10'          return true'#10'        }'#10'      }'#10'      if (state.swit'
  +'chU && !noError) {'#10'        state.raise("Incomplete quantifier");'#10'  '
  +'    }'#10'      state.pos = start;'#10'    }'#10'    return false'#10'  };'
  +#10#10'  pp$8.regexp_eatAtom = function(state) {'#10'    return ('#10'      '
  +'this.regexp_eatPatternCharacters(state) ||'#10'      state.eat(0x2E ) ||'#10
  +'      this.regexp_eatReverseSolidusAtomEscape(state) ||'#10'      this.rege'
  +'xp_eatCharacterClass(state) ||'#10'      this.regexp_eatUncapturingGroup(st'
  +'ate) ||'#10'      this.regexp_eatCapturingGroup(state)'#10'    )'#10'  };'
  +#10'  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {'#10'    va'
  +'r start = state.pos;'#10'    if (state.eat(0x5C )) {'#10'      if (this.reg'
  +'exp_eatAtomEscape(state)) {'#10'        return true'#10'      }'#10'      s'
  +'tate.pos = start;'#10'    }'#10'    return false'#10'  };'#10'  pp$8.regexp'
  +'_eatUncapturingGroup = function(state) {'#10'    var start = state.pos;'#10
  +'    if (state.eat(0x28 )) {'#10'      if (state.eat(0x3F ) && state.eat(0x3'
  +'A )) {'#10'        this.regexp_disjunction(state);'#10'        if (state.ea'
  +'t(0x29 )) {'#10'          return true'#10'        }'#10'        state.raise'
  +'("Unterminated group");'#10'      }'#10'      state.pos = start;'#10'    }'
  +#10'    return false'#10'  };'#10'  pp$8.regexp_eatCapturingGroup = function'
  +'(state) {'#10'    if (state.eat(0x28 )) {'#10'      if (this.options.ecmaVe'
  +'rsion >= 9) {'#10'        this.regexp_groupSpecifier(state);'#10'      } el'
  +'se if (state.current() === 0x3F ) {'#10'        state.raise("Invalid group"'
  +');'#10'      }'#10'      this.regexp_disjunction(state);'#10'      if (stat'
  +'e.eat(0x29 )) {'#10'        state.numCapturingParens += 1;'#10'        retu'
  +'rn true'#10'      }'#10'      state.raise("Unterminated group");'#10'    }'
  +#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatExtendedAtom = functio'
  +'n(state) {'#10'    return ('#10'      state.eat(0x2E ) ||'#10'      this.re'
  +'gexp_eatReverseSolidusAtomEscape(state) ||'#10'      this.regexp_eatCharact'
  +'erClass(state) ||'#10'      this.regexp_eatUncapturingGroup(state) ||'#10' '
  +'     this.regexp_eatCapturingGroup(state) ||'#10'      this.regexp_eatInval'
  +'idBracedQuantifier(state) ||'#10'      this.regexp_eatExtendedPatternCharac'
  +'ter(state)'#10'    )'#10'  };'#10#10'  pp$8.regexp_eatInvalidBracedQuantifi'
  +'er = function(state) {'#10'    if (this.regexp_eatBracedQuantifier(state, t'
  +'rue)) {'#10'      state.raise("Nothing to repeat");'#10'    }'#10'    retur'
  +'n false'#10'  };'#10#10'  pp$8.regexp_eatSyntaxCharacter = function(state) '
  +'{'#10'    var ch = state.current();'#10'    if (isSyntaxCharacter(ch)) {'#10
  +'      state.lastIntValue = ch;'#10'      state.advance();'#10'      return '
  +'true'#10'    }'#10'    return false'#10'  };'#10'  function isSyntaxCharact'
  +'er(ch) {'#10'    return ('#10'      ch === 0x24  ||'#10'      ch >= 0x28  &'
  +'& ch <= 0x2B  ||'#10'      ch === 0x2E  ||'#10'      ch === 0x3F  ||'#10'  '
  +'    ch >= 0x5B  && ch <= 0x5E  ||'#10'      ch >= 0x7B  && ch <= 0x7D '#10
  +'    )'#10'  }'#10#10'  pp$8.regexp_eatPatternCharacters = function(state) {'
  +#10'    var start = state.pos;'#10'    var ch = 0;'#10'    while ((ch = stat'
  +'e.current()) !== -1 && !isSyntaxCharacter(ch)) {'#10'      state.advance();'
  ,#10'    }'#10'    return state.pos !== start'#10'  };'#10#10'  pp$8.regexp_e'
  +'atExtendedPatternCharacter = function(state) {'#10'    var ch = state.curre'
  +'nt();'#10'    if ('#10'      ch !== -1 &&'#10'      ch !== 0x24  &&'#10'   '
  +'   !(ch >= 0x28  && ch <= 0x2B ) &&'#10'      ch !== 0x2E  &&'#10'      ch '
  +'!== 0x3F  &&'#10'      ch !== 0x5B  &&'#10'      ch !== 0x5E  &&'#10'      '
  +'ch !== 0x7C '#10'    ) {'#10'      state.advance();'#10'      return true'
  +#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_groupSpecifier '
  +'= function(state) {'#10'    if (state.eat(0x3F )) {'#10'      if (this.rege'
  +'xp_eatGroupName(state)) {'#10'        if (state.groupNames.indexOf(state.la'
  +'stStringValue) !== -1) {'#10'          state.raise("Duplicate capture group'
  +' name");'#10'        }'#10'        state.groupNames.push(state.lastStringVa'
  +'lue);'#10'        return'#10'      }'#10'      state.raise("Invalid group")'
  +';'#10'    }'#10'  };'#10#10'  pp$8.regexp_eatGroupName = function(state) {'
  +#10'    state.lastStringValue = "";'#10'    if (state.eat(0x3C )) {'#10'    '
  +'  if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {'#10
  +'        return true'#10'      }'#10'      state.raise("Invalid capture grou'
  +'p name");'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatR'
  +'egExpIdentifierName = function(state) {'#10'    state.lastStringValue = "";'
  +#10'    if (this.regexp_eatRegExpIdentifierStart(state)) {'#10'      state.l'
  +'astStringValue += codePointToString(state.lastIntValue);'#10'      while (t'
  +'his.regexp_eatRegExpIdentifierPart(state)) {'#10'        state.lastStringVa'
  +'lue += codePointToString(state.lastIntValue);'#10'      }'#10'      return '
  +'true'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatRegExp'
  +'IdentifierStart = function(state) {'#10'    var start = state.pos;'#10'    '
  +'var ch = state.current();'#10'    state.advance();'#10#10'    if (ch === 0x'
  +'5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {'#10'      ch = '
  +'state.lastIntValue;'#10'    }'#10'    if (isRegExpIdentifierStart(ch)) {'#10
  +'      state.lastIntValue = ch;'#10'      return true'#10'    }'#10#10'    s'
  +'tate.pos = start;'#10'    return false'#10'  };'#10'  function isRegExpIden'
  +'tifierStart(ch) {'#10'    return isIdentifierStart(ch, true) || ch === 0x24'
  +'  || ch === 0x5F '#10'  }'#10#10'  pp$8.regexp_eatRegExpIdentifierPart = fu'
  +'nction(state) {'#10'    var start = state.pos;'#10'    var ch = state.curre'
  +'nt();'#10'    state.advance();'#10#10'    if (ch === 0x5C  && this.regexp_e'
  +'atRegExpUnicodeEscapeSequence(state)) {'#10'      ch = state.lastIntValue;'
  +#10'    }'#10'    if (isRegExpIdentifierPart(ch)) {'#10'      state.lastIntV'
  +'alue = ch;'#10'      return true'#10'    }'#10#10'    state.pos = start;'#10
  +'    return false'#10'  };'#10'  function isRegExpIdentifierPart(ch) {'#10' '
  +'   return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch '
  +'=== 0x200C  || ch === 0x200D '#10'  }'#10#10'  pp$8.regexp_eatAtomEscape = '
  +'function(state) {'#10'    if ('#10'      this.regexp_eatBackReference(state'
  +') ||'#10'      this.regexp_eatCharacterClassEscape(state) ||'#10'      this'
  +'.regexp_eatCharacterEscape(state) ||'#10'      (state.switchN && this.regex'
  +'p_eatKGroupName(state))'#10'    ) {'#10'      return true'#10'    }'#10'   '
  +' if (state.switchU) {'#10'      if (state.current() === 0x63 ) {'#10'      '
  +'  state.raise("Invalid unicode escape");'#10'      }'#10'      state.raise('
  +'"Invalid escape");'#10'    }'#10'    return false'#10'  };'#10'  pp$8.regex'
  +'p_eatBackReference = function(state) {'#10'    var start = state.pos;'#10' '
  +'   if (this.regexp_eatDecimalEscape(state)) {'#10'      var n = state.lastI'
  +'ntValue;'#10'      if (state.switchU) {'#10'        if (n > state.maxBackRe'
  +'ference) {'#10'          state.maxBackReference = n;'#10'        }'#10'    '
  +'    return true'#10'      }'#10'      if (n <= state.numCapturingParens) {'
  +#10'        return true'#10'      }'#10'      state.pos = start;'#10'    }'
  +#10'    return false'#10'  };'#10'  pp$8.regexp_eatKGroupName = function(sta'
  +'te) {'#10'    if (state.eat(0x6B )) {'#10'      if (this.regexp_eatGroupNam'
  +'e(state)) {'#10'        state.backReferenceNames.push(state.lastStringValue'
  +');'#10'        return true'#10'      }'#10'      state.raise("Invalid named'
  +' reference");'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_'
  +'eatCharacterEscape = function(state) {'#10'    return ('#10'      this.rege'
  +'xp_eatControlEscape(state) ||'#10'      this.regexp_eatCControlLetter(state'
  +') ||'#10'      this.regexp_eatZero(state) ||'#10'      this.regexp_eatHexEs'
  +'capeSequence(state) ||'#10'      this.regexp_eatRegExpUnicodeEscapeSequence'
  +'(state) ||'#10'      (!state.switchU && this.regexp_eatLegacyOctalEscapeSeq'
  +'uence(state)) ||'#10'      this.regexp_eatIdentityEscape(state)'#10'    )'
  +#10'  };'#10'  pp$8.regexp_eatCControlLetter = function(state) {'#10'    var'
  ,' start = state.pos;'#10'    if (state.eat(0x63 )) {'#10'      if (this.rege'
  +'xp_eatControlLetter(state)) {'#10'        return true'#10'      }'#10'     '
  +' state.pos = start;'#10'    }'#10'    return false'#10'  };'#10'  pp$8.rege'
  +'xp_eatZero = function(state) {'#10'    if (state.current() === 0x30  && !is'
  +'DecimalDigit(state.lookahead())) {'#10'      state.lastIntValue = 0;'#10'  '
  +'    state.advance();'#10'      return true'#10'    }'#10'    return false'
  +#10'  };'#10#10'  pp$8.regexp_eatControlEscape = function(state) {'#10'    v'
  +'ar ch = state.current();'#10'    if (ch === 0x74 ) {'#10'      state.lastIn'
  +'tValue = 0x09; '#10'      state.advance();'#10'      return true'#10'    }'
  +#10'    if (ch === 0x6E ) {'#10'      state.lastIntValue = 0x0A; '#10'      '
  +'state.advance();'#10'      return true'#10'    }'#10'    if (ch === 0x76 ) '
  +'{'#10'      state.lastIntValue = 0x0B; '#10'      state.advance();'#10'    '
  +'  return true'#10'    }'#10'    if (ch === 0x66 ) {'#10'      state.lastInt'
  +'Value = 0x0C; '#10'      state.advance();'#10'      return true'#10'    }'
  +#10'    if (ch === 0x72 ) {'#10'      state.lastIntValue = 0x0D; '#10'      '
  +'state.advance();'#10'      return true'#10'    }'#10'    return false'#10' '
  +' };'#10#10'  pp$8.regexp_eatControlLetter = function(state) {'#10'    var c'
  +'h = state.current();'#10'    if (isControlLetter(ch)) {'#10'      state.las'
  +'tIntValue = ch % 0x20;'#10'      state.advance();'#10'      return true'#10
  +'    }'#10'    return false'#10'  };'#10'  function isControlLetter(ch) {'#10
  +'    return ('#10'      (ch >= 0x41  && ch <= 0x5A ) ||'#10'      (ch >= 0x6'
  +'1  && ch <= 0x7A )'#10'    )'#10'  }'#10#10'  pp$8.regexp_eatRegExpUnicodeE'
  +'scapeSequence = function(state) {'#10'    var start = state.pos;'#10#10'   '
  +' if (state.eat(0x75 )) {'#10'      if (this.regexp_eatFixedHexDigits(state,'
  +' 4)) {'#10'        var lead = state.lastIntValue;'#10'        if (state.swi'
  +'tchU && lead >= 0xD800 && lead <= 0xDBFF) {'#10'          var leadSurrogate'
  +'End = state.pos;'#10'          if (state.eat(0x5C ) && state.eat(0x75 ) && '
  +'this.regexp_eatFixedHexDigits(state, 4)) {'#10'            var trail = stat'
  +'e.lastIntValue;'#10'            if (trail >= 0xDC00 && trail <= 0xDFFF) {'
  +#10'              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0x'
  +'DC00) + 0x10000;'#10'              return true'#10'            }'#10'      '
  +'    }'#10'          state.pos = leadSurrogateEnd;'#10'          state.lastI'
  +'ntValue = lead;'#10'        }'#10'        return true'#10'      }'#10'     '
  +' if ('#10'        state.switchU &&'#10'        state.eat(0x7B ) &&'#10'    '
  +'    this.regexp_eatHexDigits(state) &&'#10'        state.eat(0x7D ) &&'#10
  +'        isValidUnicode(state.lastIntValue)'#10'      ) {'#10'        return'
  +' true'#10'      }'#10'      if (state.switchU) {'#10'        state.raise("I'
  +'nvalid unicode escape");'#10'      }'#10'      state.pos = start;'#10'    }'
  +#10#10'    return false'#10'  };'#10'  function isValidUnicode(ch) {'#10'   '
  +' return ch >= 0 && ch <= 0x10FFFF'#10'  }'#10#10'  pp$8.regexp_eatIdentityE'
  +'scape = function(state) {'#10'    if (state.switchU) {'#10'      if (this.r'
  +'egexp_eatSyntaxCharacter(state)) {'#10'        return true'#10'      }'#10
  +'      if (state.eat(0x2F )) {'#10'        state.lastIntValue = 0x2F; '#10' '
  +'       return true'#10'      }'#10'      return false'#10'    }'#10#10'    '
  +'var ch = state.current();'#10'    if (ch !== 0x63  && (!state.switchN || ch'
  +' !== 0x6B )) {'#10'      state.lastIntValue = ch;'#10'      state.advance()'
  +';'#10'      return true'#10'    }'#10#10'    return false'#10'  };'#10#10' '
  +' pp$8.regexp_eatDecimalEscape = function(state) {'#10'    state.lastIntValu'
  +'e = 0;'#10'    var ch = state.current();'#10'    if (ch >= 0x31  && ch <= 0'
  +'x39 ) {'#10'      do {'#10'        state.lastIntValue = 10 * state.lastIntV'
  +'alue + (ch - 0x30 );'#10'        state.advance();'#10'      } while ((ch = '
  +'state.current()) >= 0x30  && ch <= 0x39 )'#10'      return true'#10'    }'
  +#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatCharacterClassEscape ='
  +' function(state) {'#10'    var ch = state.current();'#10#10'    if (isChara'
  +'cterClassEscape(ch)) {'#10'      state.lastIntValue = -1;'#10'      state.a'
  +'dvance();'#10'      return true'#10'    }'#10#10'    if ('#10'      state.s'
  +'witchU &&'#10'      this.options.ecmaVersion >= 9 &&'#10'      (ch === 0x50'
  +'  || ch === 0x70 )'#10'    ) {'#10'      state.lastIntValue = -1;'#10'     '
  +' state.advance();'#10'      if ('#10'        state.eat(0x7B ) &&'#10'      '
  +'  this.regexp_eatUnicodePropertyValueExpression(state) &&'#10'        state'
  +'.eat(0x7D )'#10'      ) {'#10'        return true'#10'      }'#10'      sta'
  +'te.raise("Invalid property name");'#10'    }'#10#10'    return false'#10'  '
  +'};'#10'  function isCharacterClassEscape(ch) {'#10'    return ('#10'      c'
  +'h === 0x64  ||'#10'      ch === 0x44  ||'#10'      ch === 0x73  ||'#10'    '
  ,'  ch === 0x53  ||'#10'      ch === 0x77  ||'#10'      ch === 0x57 '#10'    '
  +')'#10'  }'#10#10'  pp$8.regexp_eatUnicodePropertyValueExpression = function'
  +'(state) {'#10'    var start = state.pos;'#10#10'    if (this.regexp_eatUnic'
  +'odePropertyName(state) && state.eat(0x3D )) {'#10'      var name = state.la'
  +'stStringValue;'#10'      if (this.regexp_eatUnicodePropertyValue(state)) {'
  +#10'        var value = state.lastStringValue;'#10'        this.regexp_valid'
  +'ateUnicodePropertyNameAndValue(state, name, value);'#10'        return true'
  +#10'      }'#10'    }'#10'    state.pos = start;'#10#10'    if (this.regexp_'
  +'eatLoneUnicodePropertyNameOrValue(state)) {'#10'      var nameOrValue = sta'
  +'te.lastStringValue;'#10'      this.regexp_validateUnicodePropertyNameOrValu'
  +'e(state, nameOrValue);'#10'      return true'#10'    }'#10'    return false'
  +#10'  };'#10'  pp$8.regexp_validateUnicodePropertyNameAndValue = function(st'
  +'ate, name, value) {'#10'    if (!has(state.unicodeProperties.nonBinary, nam'
  +'e))'#10'      { state.raise("Invalid property name"); }'#10'    if (!state.'
  +'unicodeProperties.nonBinary[name].test(value))'#10'      { state.raise("Inv'
  +'alid property value"); }'#10'  };'#10'  pp$8.regexp_validateUnicodeProperty'
  +'NameOrValue = function(state, nameOrValue) {'#10'    if (!state.unicodeProp'
  +'erties.binary.test(nameOrValue))'#10'      { state.raise("Invalid property '
  +'name"); }'#10'  };'#10#10'  pp$8.regexp_eatUnicodePropertyName = function(s'
  +'tate) {'#10'    var ch = 0;'#10'    state.lastStringValue = "";'#10'    whi'
  +'le (isUnicodePropertyNameCharacter(ch = state.current())) {'#10'      state'
  +'.lastStringValue += codePointToString(ch);'#10'      state.advance();'#10' '
  +'   }'#10'    return state.lastStringValue !== ""'#10'  };'#10'  function is'
  +'UnicodePropertyNameCharacter(ch) {'#10'    return isControlLetter(ch) || ch'
  +' === 0x5F '#10'  }'#10#10'  pp$8.regexp_eatUnicodePropertyValue = function('
  +'state) {'#10'    var ch = 0;'#10'    state.lastStringValue = "";'#10'    wh'
  +'ile (isUnicodePropertyValueCharacter(ch = state.current())) {'#10'      sta'
  +'te.lastStringValue += codePointToString(ch);'#10'      state.advance();'#10
  +'    }'#10'    return state.lastStringValue !== ""'#10'  };'#10'  function i'
  +'sUnicodePropertyValueCharacter(ch) {'#10'    return isUnicodePropertyNameCh'
  +'aracter(ch) || isDecimalDigit(ch)'#10'  }'#10#10'  pp$8.regexp_eatLoneUnico'
  +'dePropertyNameOrValue = function(state) {'#10'    return this.regexp_eatUni'
  +'codePropertyValue(state)'#10'  };'#10#10'  pp$8.regexp_eatCharacterClass = '
  +'function(state) {'#10'    if (state.eat(0x5B )) {'#10'      state.eat(0x5E '
  +');'#10'      this.regexp_classRanges(state);'#10'      if (state.eat(0x5D )'
  +') {'#10'        return true'#10'      }'#10'      state.raise("Unterminated'
  +' character class");'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.r'
  +'egexp_classRanges = function(state) {'#10'    while (this.regexp_eatClassAt'
  +'om(state)) {'#10'      var left = state.lastIntValue;'#10'      if (state.e'
  +'at(0x2D ) && this.regexp_eatClassAtom(state)) {'#10'        var right = sta'
  +'te.lastIntValue;'#10'        if (state.switchU && (left === -1 || right ==='
  +' -1)) {'#10'          state.raise("Invalid character class");'#10'        }'
  +#10'        if (left !== -1 && right !== -1 && left > right) {'#10'         '
  +' state.raise("Range out of order in character class");'#10'        }'#10'  '
  +'    }'#10'    }'#10'  };'#10#10'  pp$8.regexp_eatClassAtom = function(state'
  +') {'#10'    var start = state.pos;'#10#10'    if (state.eat(0x5C )) {'#10' '
  +'     if (this.regexp_eatClassEscape(state)) {'#10'        return true'#10' '
  +'     }'#10'      if (state.switchU) {'#10'        var ch$1 = state.current('
  +');'#10'        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {'#10'          st'
  +'ate.raise("Invalid class escape");'#10'        }'#10'        state.raise("I'
  +'nvalid escape");'#10'      }'#10'      state.pos = start;'#10'    }'#10#10
  +'    var ch = state.current();'#10'    if (ch !== 0x5D ) {'#10'      state.l'
  +'astIntValue = ch;'#10'      state.advance();'#10'      return true'#10'    '
  +'}'#10#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatClassEscape = fu'
  +'nction(state) {'#10'    var start = state.pos;'#10#10'    if (state.eat(0x6'
  +'2 )) {'#10'      state.lastIntValue = 0x08; '#10'      return true'#10'    '
  +'}'#10#10'    if (state.switchU && state.eat(0x2D )) {'#10'      state.lastI'
  +'ntValue = 0x2D; '#10'      return true'#10'    }'#10#10'    if (!state.swit'
  +'chU && state.eat(0x63 )) {'#10'      if (this.regexp_eatClassControlLetter('
  +'state)) {'#10'        return true'#10'      }'#10'      state.pos = start;'
  +#10'    }'#10#10'    return ('#10'      this.regexp_eatCharacterClassEscape('
  +'state) ||'#10'      this.regexp_eatCharacterEscape(state)'#10'    )'#10'  }'
  +';'#10#10'  pp$8.regexp_eatClassControlLetter = function(state) {'#10'    va'
  +'r ch = state.current();'#10'    if (isDecimalDigit(ch) || ch === 0x5F ) {'
  ,#10'      state.lastIntValue = ch % 0x20;'#10'      state.advance();'#10'   '
  +'   return true'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp'
  +'_eatHexEscapeSequence = function(state) {'#10'    var start = state.pos;'#10
  +'    if (state.eat(0x78 )) {'#10'      if (this.regexp_eatFixedHexDigits(sta'
  +'te, 2)) {'#10'        return true'#10'      }'#10'      if (state.switchU) '
  +'{'#10'        state.raise("Invalid escape");'#10'      }'#10'      state.po'
  +'s = start;'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eat'
  +'DecimalDigits = function(state) {'#10'    var start = state.pos;'#10'    va'
  +'r ch = 0;'#10'    state.lastIntValue = 0;'#10'    while (isDecimalDigit(ch '
  +'= state.current())) {'#10'      state.lastIntValue = 10 * state.lastIntValu'
  +'e + (ch - 0x30 );'#10'      state.advance();'#10'    }'#10'    return state'
  +'.pos !== start'#10'  };'#10'  function isDecimalDigit(ch) {'#10'    return '
  +'ch >= 0x30  && ch <= 0x39 '#10'  }'#10#10'  pp$8.regexp_eatHexDigits = func'
  +'tion(state) {'#10'    var start = state.pos;'#10'    var ch = 0;'#10'    st'
  +'ate.lastIntValue = 0;'#10'    while (isHexDigit(ch = state.current())) {'#10
  +'      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);'#10'    '
  +'  state.advance();'#10'    }'#10'    return state.pos !== start'#10'  };'#10
  +'  function isHexDigit(ch) {'#10'    return ('#10'      (ch >= 0x30  && ch <'
  +'= 0x39 ) ||'#10'      (ch >= 0x41  && ch <= 0x46 ) ||'#10'      (ch >= 0x61'
  +'  && ch <= 0x66 )'#10'    )'#10'  }'#10'  function hexToInt(ch) {'#10'    i'
  +'f (ch >= 0x41  && ch <= 0x46 ) {'#10'      return 10 + (ch - 0x41 )'#10'   '
  +' }'#10'    if (ch >= 0x61  && ch <= 0x66 ) {'#10'      return 10 + (ch - 0x'
  +'61 )'#10'    }'#10'    return ch - 0x30 '#10'  }'#10#10'  pp$8.regexp_eatLe'
  +'gacyOctalEscapeSequence = function(state) {'#10'    if (this.regexp_eatOcta'
  +'lDigit(state)) {'#10'      var n1 = state.lastIntValue;'#10'      if (this.'
  +'regexp_eatOctalDigit(state)) {'#10'        var n2 = state.lastIntValue;'#10
  +'        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {'#10'          st'
  +'ate.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;'#10'        } els'
  +'e {'#10'          state.lastIntValue = n1 * 8 + n2;'#10'        }'#10'     '
  +' } else {'#10'        state.lastIntValue = n1;'#10'      }'#10'      return'
  +' true'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatOctal'
  +'Digit = function(state) {'#10'    var ch = state.current();'#10'    if (isO'
  +'ctalDigit(ch)) {'#10'      state.lastIntValue = ch - 0x30; '#10'      state'
  +'.advance();'#10'      return true'#10'    }'#10'    state.lastIntValue = 0;'
  +#10'    return false'#10'  };'#10'  function isOctalDigit(ch) {'#10'    retu'
  +'rn ch >= 0x30  && ch <= 0x37 '#10'  }'#10#10'  pp$8.regexp_eatFixedHexDigit'
  +'s = function(state, length) {'#10'    var start = state.pos;'#10'    state.'
  +'lastIntValue = 0;'#10'    for (var i = 0; i < length; ++i) {'#10'      var '
  +'ch = state.current();'#10'      if (!isHexDigit(ch)) {'#10'        state.po'
  +'s = start;'#10'        return false'#10'      }'#10'      state.lastIntValu'
  +'e = 16 * state.lastIntValue + hexToInt(ch);'#10'      state.advance();'#10
  +'    }'#10'    return true'#10'  };'#10#10#10'  var Token = function Token(p'
  +') {'#10'    this.type = p.type;'#10'    this.value = p.value;'#10'    this.'
  +'start = p.start;'#10'    this.end = p.end;'#10'    if (p.options.locations)'
  +#10'      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }'#10'  '
  +'  if (p.options.ranges)'#10'      { this.range = [p.start, p.end]; }'#10'  '
  +'};'#10#10#10'  var pp$9 = Parser.prototype;'#10#10#10'  pp$9.next = functio'
  +'n(ignoreEscapeSequenceInKeyword) {'#10'    if (!ignoreEscapeSequenceInKeywo'
  +'rd && this.type.keyword && this.containsEsc)'#10'      { this.raiseRecovera'
  +'ble(this.start, "Escape sequence in keyword " + this.type.keyword); }'#10' '
  +'   if (this.options.onToken)'#10'      { this.options.onToken(new Token(thi'
  +'s)); }'#10#10'    this.lastTokEnd = this.end;'#10'    this.lastTokStart = t'
  +'his.start;'#10'    this.lastTokEndLoc = this.endLoc;'#10'    this.lastTokSt'
  +'artLoc = this.startLoc;'#10'    this.nextToken();'#10'  };'#10#10'  pp$9.ge'
  +'tToken = function() {'#10'    this.next();'#10'    return new Token(this)'
  +#10'  };'#10#10'  if (typeof Symbol !== "undefined")'#10'    { pp$9[Symbol.i'
  +'terator] = function() {'#10'      var this$1 = this;'#10#10'      return {'
  +#10'        next: function () {'#10'          var token = this$1.getToken();'
  +#10'          return {'#10'            done: token.type === types.eof,'#10' '
  +'           value: token'#10'          }'#10'        }'#10'      }'#10'    }'
  +'; }'#10#10#10'  pp$9.curContext = function() {'#10'    return this.context['
  +'this.context.length - 1]'#10'  };'#10#10#10'  pp$9.nextToken = function() {'
  +#10'    var curContext = this.curContext();'#10'    if (!curContext || !curC'
  +'ontext.preserveSpace) { this.skipSpace(); }'#10#10'    this.start = this.po'
  ,'s;'#10'    if (this.options.locations) { this.startLoc = this.curPosition()'
  +'; }'#10'    if (this.pos >= this.input.length) { return this.finishToken(ty'
  +'pes.eof) }'#10#10'    if (curContext.override) { return curContext.override'
  +'(this) }'#10'    else { this.readToken(this.fullCharCodeAtPos()); }'#10'  }'
  +';'#10#10'  pp$9.readToken = function(code) {'#10'    if (isIdentifierStart('
  +'code, this.options.ecmaVersion >= 6) || code === 92 )'#10'      { return th'
  +'is.readWord() }'#10#10'    return this.getTokenFromCode(code)'#10'  };'#10
  +#10'  pp$9.fullCharCodeAtPos = function() {'#10'    var code = this.input.ch'
  +'arCodeAt(this.pos);'#10'    if (code <= 0xd7ff || code >= 0xe000) { return '
  +'code }'#10'    var next = this.input.charCodeAt(this.pos + 1);'#10'    retu'
  +'rn (code << 10) + next - 0x35fdc00'#10'  };'#10#10'  pp$9.skipBlockComment '
  +'= function() {'#10'    var startLoc = this.options.onComment && this.curPos'
  +'ition();'#10'    var start = this.pos, end = this.input.indexOf("*/", this.'
  +'pos += 2);'#10'    if (end === -1) { this.raise(this.pos - 2, "Unterminated'
  +' comment"); }'#10'    this.pos = end + 2;'#10'    if (this.options.location'
  +'s) {'#10'      lineBreakG.lastIndex = start;'#10'      var match;'#10'     '
  +' while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {'
  +#10'        ++this.curLine;'#10'        this.lineStart = match.index + match'
  +'[0].length;'#10'      }'#10'    }'#10'    if (this.options.onComment)'#10' '
  +'     { this.options.onComment(true, this.input.slice(start + 2, end), start'
  +', this.pos,'#10'                             startLoc, this.curPosition());'
  +' }'#10'  };'#10#10'  pp$9.skipLineComment = function(startSkip) {'#10'    v'
  +'ar start = this.pos;'#10'    var startLoc = this.options.onComment && this.'
  +'curPosition();'#10'    var ch = this.input.charCodeAt(this.pos += startSkip'
  +');'#10'    while (this.pos < this.input.length && !isNewLine(ch)) {'#10'   '
  +'   ch = this.input.charCodeAt(++this.pos);'#10'    }'#10'    if (this.optio'
  +'ns.onComment)'#10'      { this.options.onComment(false, this.input.slice(st'
  +'art + startSkip, this.pos), start, this.pos,'#10'                          '
  +'   startLoc, this.curPosition()); }'#10'  };'#10#10#10'  pp$9.skipSpace = f'
  +'unction() {'#10'    loop: while (this.pos < this.input.length) {'#10'      '
  +'var ch = this.input.charCodeAt(this.pos);'#10'      switch (ch) {'#10'     '
  +' case 32: case 160: '#10'        ++this.pos;'#10'        break'#10'      ca'
  +'se 13:'#10'        if (this.input.charCodeAt(this.pos + 1) === 10) {'#10'  '
  +'        ++this.pos;'#10'        }'#10'      case 10: case 8232: case 8233:'
  +#10'        ++this.pos;'#10'        if (this.options.locations) {'#10'      '
  +'    ++this.curLine;'#10'          this.lineStart = this.pos;'#10'        }'
  +#10'        break'#10'      case 47: '#10'        switch (this.input.charCod'
  +'eAt(this.pos + 1)) {'#10'        case 42: '#10'          this.skipBlockComm'
  +'ent();'#10'          break'#10'        case 47:'#10'          this.skipLine'
  +'Comment(2);'#10'          break'#10'        default:'#10'          break lo'
  +'op'#10'        }'#10'        break'#10'      default:'#10'        if (ch > '
  +'8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(c'
  +'h))) {'#10'          ++this.pos;'#10'        } else {'#10'          break l'
  +'oop'#10'        }'#10'      }'#10'    }'#10'  };'#10#10#10'  pp$9.finishTok'
  +'en = function(type, val) {'#10'    this.end = this.pos;'#10'    if (this.op'
  +'tions.locations) { this.endLoc = this.curPosition(); }'#10'    var prevType'
  +' = this.type;'#10'    this.type = type;'#10'    this.value = val;'#10#10'  '
  +'  this.updateContext(prevType);'#10'  };'#10#10#10'  pp$9.readToken_dot = f'
  +'unction() {'#10'    var next = this.input.charCodeAt(this.pos + 1);'#10'   '
  +' if (next >= 48 && next <= 57) { return this.readNumber(true) }'#10'    var'
  +' next2 = this.input.charCodeAt(this.pos + 2);'#10'    if (this.options.ecma'
  +'Version >= 6 && next === 46 && next2 === 46) { '#10'      this.pos += 3;'#10
  +'      return this.finishToken(types.ellipsis)'#10'    } else {'#10'      ++'
  +'this.pos;'#10'      return this.finishToken(types.dot)'#10'    }'#10'  };'
  +#10#10'  pp$9.readToken_slash = function() { '#10'    var next = this.input.'
  +'charCodeAt(this.pos + 1);'#10'    if (this.exprAllowed) { ++this.pos; retur'
  +'n this.readRegexp() }'#10'    if (next === 61) { return this.finishOp(types'
  +'.assign, 2) }'#10'    return this.finishOp(types.slash, 1)'#10'  };'#10#10
  +'  pp$9.readToken_mult_modulo_exp = function(code) { '#10'    var next = thi'
  +'s.input.charCodeAt(this.pos + 1);'#10'    var size = 1;'#10'    var tokenty'
  +'pe = code === 42 ? types.star : types.modulo;'#10#10'    if (this.options.e'
  +'cmaVersion >= 7 && code === 42 && next === 42) {'#10'      ++size;'#10'    '
  +'  tokentype = types.starstar;'#10'      next = this.input.charCodeAt(this.p'
  +'os + 2);'#10'    }'#10#10'    if (next === 61) { return this.finishOp(types'
  ,'.assign, size + 1) }'#10'    return this.finishOp(tokentype, size)'#10'  };'
  +#10#10'  pp$9.readToken_pipe_amp = function(code) { '#10'    var next = this'
  +'.input.charCodeAt(this.pos + 1);'#10'    if (next === code) { return this.f'
  +'inishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }'#10'    if '
  +'(next === 61) { return this.finishOp(types.assign, 2) }'#10'    return this'
  +'.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)'#10'  };'#10
  +#10'  pp$9.readToken_caret = function() { '#10'    var next = this.input.cha'
  +'rCodeAt(this.pos + 1);'#10'    if (next === 61) { return this.finishOp(type'
  +'s.assign, 2) }'#10'    return this.finishOp(types.bitwiseXOR, 1)'#10'  };'
  +#10#10'  pp$9.readToken_plus_min = function(code) { '#10'    var next = this'
  +'.input.charCodeAt(this.pos + 1);'#10'    if (next === code) {'#10'      if '
  +'(next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 6'
  +'2 &&'#10'          (this.lastTokEnd === 0 || lineBreak.test(this.input.slic'
  +'e(this.lastTokEnd, this.pos)))) {'#10'        this.skipLineComment(3);'#10
  +'        this.skipSpace();'#10'        return this.nextToken()'#10'      }'
  +#10'      return this.finishOp(types.incDec, 2)'#10'    }'#10'    if (next ='
  +'== 61) { return this.finishOp(types.assign, 2) }'#10'    return this.finish'
  +'Op(types.plusMin, 1)'#10'  };'#10#10'  pp$9.readToken_lt_gt = function(code'
  +') { '#10'    var next = this.input.charCodeAt(this.pos + 1);'#10'    var si'
  +'ze = 1;'#10'    if (next === code) {'#10'      size = code === 62 && this.i'
  +'nput.charCodeAt(this.pos + 2) === 62 ? 3 : 2;'#10'      if (this.input.char'
  +'CodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size +'
  +' 1) }'#10'      return this.finishOp(types.bitShift, size)'#10'    }'#10'  '
  +'  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt'
  +'(this.pos + 2) === 45 &&'#10'        this.input.charCodeAt(this.pos + 3) =='
  +'= 45) {'#10'      this.skipLineComment(4);'#10'      this.skipSpace();'#10
  +'      return this.nextToken()'#10'    }'#10'    if (next === 61) { size = 2'
  +'; }'#10'    return this.finishOp(types.relational, size)'#10'  };'#10#10'  '
  +'pp$9.readToken_eq_excl = function(code) { '#10'    var next = this.input.ch'
  +'arCodeAt(this.pos + 1);'#10'    if (next === 61) { return this.finishOp(typ'
  +'es.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }'#10'    '
  +'if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { '#10'   '
  +'   this.pos += 2;'#10'      return this.finishToken(types.arrow)'#10'    }'
  +#10'    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)'#10' '
  +' };'#10#10'  pp$9.getTokenFromCode = function(code) {'#10'    switch (code)'
  +' {'#10'    case 46: '#10'      return this.readToken_dot()'#10#10'    case '
  +'40: ++this.pos; return this.finishToken(types.parenL)'#10'    case 41: ++th'
  +'is.pos; return this.finishToken(types.parenR)'#10'    case 59: ++this.pos; '
  +'return this.finishToken(types.semi)'#10'    case 44: ++this.pos; return thi'
  +'s.finishToken(types.comma)'#10'    case 91: ++this.pos; return this.finishT'
  +'oken(types.bracketL)'#10'    case 93: ++this.pos; return this.finishToken(t'
  +'ypes.bracketR)'#10'    case 123: ++this.pos; return this.finishToken(types.'
  +'braceL)'#10'    case 125: ++this.pos; return this.finishToken(types.braceR)'
  +#10'    case 58: ++this.pos; return this.finishToken(types.colon)'#10'    ca'
  +'se 63: ++this.pos; return this.finishToken(types.question)'#10#10'    case '
  +'96: '#10'      if (this.options.ecmaVersion < 6) { break }'#10'      ++this'
  +'.pos;'#10'      return this.finishToken(types.backQuote)'#10#10'    case 48'
  +': '#10'      var next = this.input.charCodeAt(this.pos + 1);'#10'      if ('
  +'next === 120 || next === 88) { return this.readRadixNumber(16) } '#10'     '
  +' if (this.options.ecmaVersion >= 6) {'#10'        if (next === 111 || next '
  +'=== 79) { return this.readRadixNumber(8) } '#10'        if (next === 98 || '
  +'next === 66) { return this.readRadixNumber(2) } '#10'      }'#10#10'    cas'
  +'e 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 5'
  +'7: '#10'      return this.readNumber(false)'#10#10'    case 34: case 39: '
  +#10'      return this.readString(code)'#10#10#10'    case 47: '#10'      ret'
  +'urn this.readToken_slash()'#10#10'    case 37: case 42: '#10'      return t'
  +'his.readToken_mult_modulo_exp(code)'#10#10'    case 124: case 38: '#10'    '
  +'  return this.readToken_pipe_amp(code)'#10#10'    case 94: '#10'      retur'
  +'n this.readToken_caret()'#10#10'    case 43: case 45: '#10'      return thi'
  +'s.readToken_plus_min(code)'#10#10'    case 60: case 62: '#10'      return t'
  +'his.readToken_lt_gt(code)'#10#10'    case 61: case 33: '#10'      return th'
  +'is.readToken_eq_excl(code)'#10#10'    case 126: '#10'      return this.fini'
  +'shOp(types.prefix, 1)'#10'    }'#10#10'    this.raise(this.pos, "Unexpected'
  +' character ''" + codePointToString$1(code) + "''");'#10'  };'#10#10'  pp$9.'
  ,'finishOp = function(type, size) {'#10'    var str = this.input.slice(this.p'
  +'os, this.pos + size);'#10'    this.pos += size;'#10'    return this.finishT'
  +'oken(type, str)'#10'  };'#10#10'  pp$9.readRegexp = function() {'#10'    va'
  +'r escaped, inClass, start = this.pos;'#10'    for (;;) {'#10'      if (this'
  +'.pos >= this.input.length) { this.raise(start, "Unterminated regular expres'
  +'sion"); }'#10'      var ch = this.input.charAt(this.pos);'#10'      if (lin'
  +'eBreak.test(ch)) { this.raise(start, "Unterminated regular expression"); }'
  +#10'      if (!escaped) {'#10'        if (ch === "[") { inClass = true; }'#10
  +'        else if (ch === "]" && inClass) { inClass = false; }'#10'        el'
  +'se if (ch === "/" && !inClass) { break }'#10'        escaped = ch === "\\";'
  +#10'      } else { escaped = false; }'#10'      ++this.pos;'#10'    }'#10'  '
  +'  var pattern = this.input.slice(start, this.pos);'#10'    ++this.pos;'#10
  +'    var flagsStart = this.pos;'#10'    var flags = this.readWord1();'#10'  '
  +'  if (this.containsEsc) { this.unexpected(flagsStart); }'#10#10'    var sta'
  +'te = this.regexpState || (this.regexpState = new RegExpValidationState(this'
  +'));'#10'    state.reset(start, pattern, flags);'#10'    this.validateRegExp'
  +'Flags(state);'#10'    this.validateRegExpPattern(state);'#10#10'    var val'
  +'ue = null;'#10'    try {'#10'      value = new RegExp(pattern, flags);'#10
  +'    } catch (e) {'#10'    }'#10#10'    return this.finishToken(types.regexp'
  +', {pattern: pattern, flags: flags, value: value})'#10'  };'#10#10#10'  pp$9'
  +'.readInt = function(radix, len) {'#10'    var start = this.pos, total = 0;'
  +#10'    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {'#10
  +'      var code = this.input.charCodeAt(this.pos), val = (void 0);'#10'     '
  +' if (code >= 97) { val = code - 97 + 10; } '#10'      else if (code >= 65) '
  +'{ val = code - 65 + 10; } '#10'      else if (code >= 48 && code <= 57) { v'
  +'al = code - 48; } '#10'      else { val = Infinity; }'#10'      if (val >= '
  +'radix) { break }'#10'      ++this.pos;'#10'      total = total * radix + va'
  +'l;'#10'    }'#10'    if (this.pos === start || len != null && this.pos - st'
  +'art !== len) { return null }'#10#10'    return total'#10'  };'#10#10'  pp$9'
  +'.readRadixNumber = function(radix) {'#10'    var start = this.pos;'#10'    '
  +'this.pos += 2; '#10'    var val = this.readInt(radix);'#10'    if (val == n'
  +'ull) { this.raise(this.start + 2, "Expected number in radix " + radix); }'
  +#10'    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos'
  +') === 110) {'#10'      val = typeof BigInt !== "undefined" ? BigInt(this.in'
  +'put.slice(start, this.pos)) : null;'#10'      ++this.pos;'#10'    } else if'
  +' (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Iden'
  +'tifier directly after number"); }'#10'    return this.finishToken(types.num'
  +', val)'#10'  };'#10#10#10'  pp$9.readNumber = function(startsWithDot) {'#10
  +'    var start = this.pos;'#10'    if (!startsWithDot && this.readInt(10) =='
  +'= null) { this.raise(start, "Invalid number"); }'#10'    var octal = this.p'
  +'os - start >= 2 && this.input.charCodeAt(start) === 48;'#10'    if (octal &'
  +'& this.strict) { this.raise(start, "Invalid number"); }'#10'    var next = '
  +'this.input.charCodeAt(this.pos);'#10'    if (!octal && !startsWithDot && th'
  +'is.options.ecmaVersion >= 11 && next === 110) {'#10'      var str$1 = this.'
  +'input.slice(start, this.pos);'#10'      var val$1 = typeof BigInt !== "unde'
  +'fined" ? BigInt(str$1) : null;'#10'      ++this.pos;'#10'      if (isIdenti'
  +'fierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier dir'
  +'ectly after number"); }'#10'      return this.finishToken(types.num, val$1)'
  +#10'    }'#10'    if (octal && /[89]/.test(this.input.slice(start, this.pos)'
  +')) { octal = false; }'#10'    if (next === 46 && !octal) { '#10'      ++thi'
  +'s.pos;'#10'      this.readInt(10);'#10'      next = this.input.charCodeAt(t'
  +'his.pos);'#10'    }'#10'    if ((next === 69 || next === 101) && !octal) { '
  +#10'      next = this.input.charCodeAt(++this.pos);'#10'      if (next === 4'
  +'3 || next === 45) { ++this.pos; } '#10'      if (this.readInt(10) === null)'
  +' { this.raise(start, "Invalid number"); }'#10'    }'#10'    if (isIdentifie'
  +'rStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier direct'
  +'ly after number"); }'#10#10'    var str = this.input.slice(start, this.pos)'
  +';'#10'    var val = octal ? parseInt(str, 8) : parseFloat(str);'#10'    ret'
  +'urn this.finishToken(types.num, val)'#10'  };'#10#10#10'  pp$9.readCodePoin'
  +'t = function() {'#10'    var ch = this.input.charCodeAt(this.pos), code;'#10
  +#10'    if (ch === 123) { '#10'      if (this.options.ecmaVersion < 6) { thi'
  +'s.unexpected(); }'#10'      var codePos = ++this.pos;'#10'      code = this'
  +'.readHexChar(this.input.indexOf("}", this.pos) - this.pos);'#10'      ++thi'
  +'s.pos;'#10'      if (code > 0x10FFFF) { this.invalidStringToken(codePos, "C'
  ,'ode point out of bounds"); }'#10'    } else {'#10'      code = this.readHex'
  +'Char(4);'#10'    }'#10'    return code'#10'  };'#10#10'  function codePoint'
  +'ToString$1(code) {'#10'    if (code <= 0xFFFF) { return String.fromCharCode'
  +'(code) }'#10'    code -= 0x10000;'#10'    return String.fromCharCode((code '
  +'>> 10) + 0xD800, (code & 1023) + 0xDC00)'#10'  }'#10#10'  pp$9.readString ='
  +' function(quote) {'#10'    var out = "", chunkStart = ++this.pos;'#10'    f'
  +'or (;;) {'#10'      if (this.pos >= this.input.length) { this.raise(this.st'
  +'art, "Unterminated string constant"); }'#10'      var ch = this.input.charC'
  +'odeAt(this.pos);'#10'      if (ch === quote) { break }'#10'      if (ch ==='
  +' 92) { '#10'        out += this.input.slice(chunkStart, this.pos);'#10'    '
  +'    out += this.readEscapedChar(false);'#10'        chunkStart = this.pos;'
  +#10'      } else {'#10'        if (isNewLine(ch, this.options.ecmaVersion >='
  +' 10)) { this.raise(this.start, "Unterminated string constant"); }'#10'     '
  +'   ++this.pos;'#10'      }'#10'    }'#10'    out += this.input.slice(chunkS'
  +'tart, this.pos++);'#10'    return this.finishToken(types.string, out)'#10' '
  +' };'#10#10#10'  var INVALID_TEMPLATE_ESCAPE_ERROR = {};'#10#10'  pp$9.tryRe'
  +'adTemplateToken = function() {'#10'    this.inTemplateElement = true;'#10' '
  +'   try {'#10'      this.readTmplToken();'#10'    } catch (err) {'#10'      '
  +'if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {'#10'        this.readInvalidTe'
  +'mplateToken();'#10'      } else {'#10'        throw err'#10'      }'#10'   '
  +' }'#10#10'    this.inTemplateElement = false;'#10'  };'#10#10'  pp$9.invali'
  +'dStringToken = function(position, message) {'#10'    if (this.inTemplateEle'
  +'ment && this.options.ecmaVersion >= 9) {'#10'      throw INVALID_TEMPLATE_E'
  +'SCAPE_ERROR'#10'    } else {'#10'      this.raise(position, message);'#10' '
  +'   }'#10'  };'#10#10'  pp$9.readTmplToken = function() {'#10'    var out = '
  +'"", chunkStart = this.pos;'#10'    for (;;) {'#10'      if (this.pos >= thi'
  +'s.input.length) { this.raise(this.start, "Unterminated template"); }'#10'  '
  +'    var ch = this.input.charCodeAt(this.pos);'#10'      if (ch === 96 || ch'
  +' === 36 && this.input.charCodeAt(this.pos + 1) === 123) { '#10'        if ('
  +'this.pos === this.start && (this.type === types.template || this.type === t'
  +'ypes.invalidTemplate)) {'#10'          if (ch === 36) {'#10'            thi'
  +'s.pos += 2;'#10'            return this.finishToken(types.dollarBraceL)'#10
  +'          } else {'#10'            ++this.pos;'#10'            return this.'
  +'finishToken(types.backQuote)'#10'          }'#10'        }'#10'        out '
  +'+= this.input.slice(chunkStart, this.pos);'#10'        return this.finishTo'
  +'ken(types.template, out)'#10'      }'#10'      if (ch === 92) { '#10'      '
  +'  out += this.input.slice(chunkStart, this.pos);'#10'        out += this.re'
  +'adEscapedChar(true);'#10'        chunkStart = this.pos;'#10'      } else if'
  +' (isNewLine(ch)) {'#10'        out += this.input.slice(chunkStart, this.pos'
  +');'#10'        ++this.pos;'#10'        switch (ch) {'#10'        case 13:'
  +#10'          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }'#10
  +'        case 10:'#10'          out += "\n";'#10'          break'#10'       '
  +' default:'#10'          out += String.fromCharCode(ch);'#10'          break'
  +#10'        }'#10'        if (this.options.locations) {'#10'          ++this'
  +'.curLine;'#10'          this.lineStart = this.pos;'#10'        }'#10'      '
  +'  chunkStart = this.pos;'#10'      } else {'#10'        ++this.pos;'#10'   '
  +'   }'#10'    }'#10'  };'#10#10'  pp$9.readInvalidTemplateToken = function()'
  +' {'#10'    for (; this.pos < this.input.length; this.pos++) {'#10'      swi'
  +'tch (this.input[this.pos]) {'#10'      case "\\":'#10'        ++this.pos;'
  +#10'        break'#10#10'      case "$":'#10'        if (this.input[this.pos'
  +' + 1] !== "{") {'#10'          break'#10'        }'#10#10'      case "`":'
  +#10'        return this.finishToken(types.invalidTemplate, this.input.slice('
  +'this.start, this.pos))'#10#10'      }'#10'    }'#10'    this.raise(this.sta'
  +'rt, "Unterminated template");'#10'  };'#10#10#10'  pp$9.readEscapedChar = f'
  +'unction(inTemplate) {'#10'    var ch = this.input.charCodeAt(++this.pos);'
  +#10'    ++this.pos;'#10'    switch (ch) {'#10'    case 110: return "\n" '#10
  +'    case 114: return "\r" '#10'    case 120: return String.fromCharCode(thi'
  +'s.readHexChar(2)) '#10'    case 117: return codePointToString$1(this.readCo'
  +'dePoint()) '#10'    case 116: return "\t" '#10'    case 98: return "\b" '#10
  +'    case 118: return "\u000b" '#10'    case 102: return "\f" '#10'    case '
  +'13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } '#10'    ca'
  +'se 10: '#10'      if (this.options.locations) { this.lineStart = this.pos; '
  +'++this.curLine; }'#10'      return ""'#10'    case 56:'#10'    case 57:'#10
  +'      if (inTemplate) {'#10'        var codePos = this.pos - 1;'#10#10'    '
  ,'    this.invalidStringToken('#10'          codePos,'#10'          "Invalid '
  +'escape sequence in template string"'#10'        );'#10#10'        return nu'
  +'ll'#10'      }'#10'    default:'#10'      if (ch >= 48 && ch <= 55) {'#10' '
  +'       var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0'
  +'];'#10'        var octal = parseInt(octalStr, 8);'#10'        if (octal > 2'
  +'55) {'#10'          octalStr = octalStr.slice(0, -1);'#10'          octal ='
  +' parseInt(octalStr, 8);'#10'        }'#10'        this.pos += octalStr.leng'
  +'th - 1;'#10'        ch = this.input.charCodeAt(this.pos);'#10'        if (('
  +'octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate))'
  +' {'#10'          this.invalidStringToken('#10'            this.pos - 1 - oc'
  +'talStr.length,'#10'            inTemplate'#10'              ? "Octal litera'
  +'l in template string"'#10'              : "Octal literal in strict mode"'#10
  +'          );'#10'        }'#10'        return String.fromCharCode(octal)'#10
  +'      }'#10'      if (isNewLine(ch)) {'#10'        return ""'#10'      }'#10
  +'      return String.fromCharCode(ch)'#10'    }'#10'  };'#10#10#10'  pp$9.re'
  +'adHexChar = function(len) {'#10'    var codePos = this.pos;'#10'    var n ='
  +' this.readInt(16, len);'#10'    if (n === null) { this.invalidStringToken(c'
  +'odePos, "Bad character escape sequence"); }'#10'    return n'#10'  };'#10#10
  +#10'  pp$9.readWord1 = function() {'#10'    this.containsEsc = false;'#10'  '
  +'  var word = "", first = true, chunkStart = this.pos;'#10'    var astral = '
  +'this.options.ecmaVersion >= 6;'#10'    while (this.pos < this.input.length)'
  +' {'#10'      var ch = this.fullCharCodeAtPos();'#10'      if (isIdentifierC'
  +'har(ch, astral)) {'#10'        this.pos += ch <= 0xffff ? 1 : 2;'#10'      '
  +'} else if (ch === 92) { '#10'        this.containsEsc = true;'#10'        w'
  +'ord += this.input.slice(chunkStart, this.pos);'#10'        var escStart = t'
  +'his.pos;'#10'        if (this.input.charCodeAt(++this.pos) !== 117) '#10'  '
  +'        { this.invalidStringToken(this.pos, "Expecting Unicode escape seque'
  +'nce \\uXXXX"); }'#10'        ++this.pos;'#10'        var esc = this.readCod'
  +'ePoint();'#10'        if (!(first ? isIdentifierStart : isIdentifierChar)(e'
  +'sc, astral))'#10'          { this.invalidStringToken(escStart, "Invalid Uni'
  +'code escape"); }'#10'        word += codePointToString$1(esc);'#10'        '
  +'chunkStart = this.pos;'#10'      } else {'#10'        break'#10'      }'#10
  +'      first = false;'#10'    }'#10'    return word + this.input.slice(chunk'
  +'Start, this.pos)'#10'  };'#10#10#10'  pp$9.readWord = function() {'#10'    '
  +'var word = this.readWord1();'#10'    var type = types.name;'#10'    if (thi'
  +'s.keywords.test(word)) {'#10'      type = keywords$1[word];'#10'    }'#10' '
  +'   return this.finishToken(type, word)'#10'  };'#10#10#10'  var version = "'
  +'7.1.0";'#10#10'  Parser.acorn = {'#10'    Parser: Parser,'#10'    version: '
  +'version,'#10'    defaultOptions: defaultOptions,'#10'    Position: Position'
  +','#10'    SourceLocation: SourceLocation,'#10'    getLineInfo: getLineInfo,'
  +#10'    Node: Node,'#10'    TokenType: TokenType,'#10'    tokTypes: types,'
  +#10'    keywordTypes: keywords$1,'#10'    TokContext: TokContext,'#10'    to'
  +'kContexts: types$1,'#10'    isIdentifierChar: isIdentifierChar,'#10'    isI'
  +'dentifierStart: isIdentifierStart,'#10'    Token: Token,'#10'    isNewLine:'
  +' isNewLine,'#10'    lineBreak: lineBreak,'#10'    lineBreakG: lineBreakG,'
  +#10'    nonASCIIwhitespace: nonASCIIwhitespace'#10'  };'#10#10#10'  function'
  +' parse(input, options) {'#10'    return Parser.parse(input, options)'#10'  '
  +'}'#10#10#10'  function parseExpressionAt(input, pos, options) {'#10'    ret'
  +'urn Parser.parseExpressionAt(input, pos, options)'#10'  }'#10#10#10'  funct'
  +'ion tokenizer(input, options) {'#10'    return Parser.tokenizer(input, opti'
  +'ons)'#10'  }'#10#10'  exports.Node = Node;'#10'  exports.Parser = Parser;'
  +#10'  exports.Position = Position;'#10'  exports.SourceLocation = SourceLoca'
  +'tion;'#10'  exports.TokContext = TokContext;'#10'  exports.Token = Token;'
  +#10'  exports.TokenType = TokenType;'#10'  exports.defaultOptions = defaultO'
  +'ptions;'#10'  exports.getLineInfo = getLineInfo;'#10'  exports.isIdentifier'
  +'Char = isIdentifierChar;'#10'  exports.isIdentifierStart = isIdentifierStar'
  +'t;'#10'  exports.isNewLine = isNewLine;'#10'  exports.keywordTypes = keywor'
  +'ds$1;'#10'  exports.lineBreak = lineBreak;'#10'  exports.lineBreakG = lineB'
  +'reakG;'#10'  exports.nonASCIIwhitespace = nonASCIIwhitespace;'#10'  exports'
  +'.parse = parse;'#10'  exports.parseExpressionAt = parseExpressionAt;'#10'  '
  +'exports.tokContexts = types$1;'#10'  exports.tokTypes = types;'#10'  export'
  +'s.tokenizer = tokenizer;'#10'  exports.version = version;'#10#10'  Object.d'
  +'efineProperty(exports, ''__esModule'', { value: true });'#10#10'}));'#10#10
  +'},{}],2:[function(require,module,exports){'#10#10'},{}],3:[function(require'
  ,',module,exports){'#10'function glWiretap(gl, options = {}) {'#10'  const {'
  +#10'    contextName = ''gl'','#10'    throwGetError,'#10'    useTrackablePri'
  +'mitives,'#10'    readPixelsFile,'#10'    recording = [],'#10'    variables '
  +'= {},'#10'    onReadPixels,'#10'    onUnrecognizedArgumentLookup,'#10'  } ='
  +' options;'#10'  const proxy = new Proxy(gl, { get: listen });'#10'  const c'
  +'ontextVariables = [];'#10'  const entityNames = {};'#10'  let imageCount = '
  +'0;'#10'  let indent = '''';'#10'  let readPixelsVariableName;'#10'  return '
  +'proxy;'#10'  function listen(obj, property) {'#10'    switch (property) {'
  +#10'      case ''addComment'': return addComment;'#10'      case ''checkThro'
  +'wError'': return checkThrowError;'#10'      case ''getReadPixelsVariableNam'
  +'e'': return readPixelsVariableName;'#10'      case ''insertVariable'': retu'
  +'rn insertVariable;'#10'      case ''reset'': return reset;'#10'      case '
  +'''setIndent'': return setIndent;'#10'      case ''toString'': return toStri'
  +'ng;'#10'      case ''getContextVariableName'': return getContextVariableNam'
  +'e;'#10'    }'#10'    if (typeof gl[property] === ''function'') {'#10'      '
  +'return function() { '#10'        switch (property) {'#10'          case ''g'
  +'etError'':'#10'            if (throwGetError) {'#10'              recording'
  +'.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) thro'
  +'w new Error(''error'');`);'#10'            } else {'#10'              recor'
  +'ding.push(`${indent}${contextName}.getError();`); '#10'            }'#10'  '
  +'          return gl.getError();'#10'          case ''getExtension'': {'#10
  +'            const variableName = `${contextName}Variables${contextVariables'
  +'.length}`;'#10'            recording.push(`${indent}const ${variableName} ='
  +' ${contextName}.getExtension(''${arguments[0]}'');`);'#10'            const'
  +' extension = gl.getExtension(arguments[0]);'#10'            if (extension &'
  +'& typeof extension === ''object'') {'#10'              const tappedExtensio'
  +'n = glExtensionWiretap(extension, {'#10'                getEntity,'#10'    '
  +'            useTrackablePrimitives,'#10'                recording,'#10'    '
  +'            contextName: variableName,'#10'                contextVariables'
  +','#10'                variables,'#10'                indent,'#10'          '
  +'      onUnrecognizedArgumentLookup,'#10'              });'#10'             '
  +' contextVariables.push(tappedExtension);'#10'              return tappedExt'
  +'ension;'#10'            } else {'#10'              contextVariables.push(nu'
  +'ll);'#10'            }'#10'            return extension;'#10'          }'#10
  +'          case ''readPixels'':'#10'            const i = contextVariables.i'
  +'ndexOf(arguments[6]);'#10'            let targetVariableName;'#10'         '
  +'   if (i === -1) {'#10'              const variableName = getVariableName(a'
  +'rguments[6]);'#10'              if (variableName) {'#10'                tar'
  +'getVariableName = variableName;'#10'                recording.push(`${inden'
  +'t}${variableName}`);'#10'              } else {'#10'                targetV'
  +'ariableName = `${contextName}Variable${contextVariables.length}`;'#10'     '
  +'           contextVariables.push(arguments[6]);'#10'                recordi'
  +'ng.push(`${indent}const ${targetVariableName} = new ${arguments[6].construc'
  +'tor.name}(${arguments[6].length});`);'#10'              }'#10'            }'
  +' else {'#10'              targetVariableName = `${contextName}Variable${i}`'
  +';'#10'            }'#10'            readPixelsVariableName = targetVariable'
  +'Name;'#10'            const argumentAsStrings = ['#10'              argumen'
  +'ts[0],'#10'              arguments[1],'#10'              arguments[2],'#10
  +'              arguments[3],'#10'              getEntity(arguments[4]),'#10
  +'              getEntity(arguments[5]),'#10'              targetVariableName'
  +#10'            ];'#10'            recording.push(`${indent}${contextName}.r'
  +'eadPixels(${argumentAsStrings.join('', '')});`);'#10'            if (readPi'
  +'xelsFile) {'#10'              writePPM(arguments[2], arguments[3]);'#10'   '
  +'         }'#10'            if (onReadPixels) {'#10'              onReadPixe'
  +'ls(targetVariableName, argumentAsStrings);'#10'            }'#10'          '
  +'  return gl.readPixels.apply(gl, arguments);'#10'          case ''drawBuffe'
  +'rs'':'#10'            recording.push(`${indent}${contextName}.drawBuffers(['
  +'${argumentsToString(arguments[0], { contextName, contextVariables, getEntit'
  +'y, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);'#10'    '
  +'        return gl.drawBuffers(arguments[0]);'#10'        }'#10'        let '
  +'result = gl[property].apply(gl, arguments);'#10'        switch (typeof resu'
  +'lt) {'#10'          case ''undefined'':'#10'            recording.push(`${i'
  +'ndent}${methodCallToString(property, arguments)};`);'#10'            return'
  +';'#10'          case ''number'':'#10'          case ''boolean'':'#10'      '
  ,'      if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimi'
  +'tive(result)) === -1) {'#10'              recording.push(`${indent}const ${'
  +'contextName}Variable${contextVariables.length} = ${methodCallToString(prope'
  +'rty, arguments)};`);'#10'              contextVariables.push(result = track'
  +'ablePrimitive(result));'#10'              break;'#10'            }'#10'    '
  +'      default:'#10'            if (result === null) {'#10'              rec'
  +'ording.push(`${methodCallToString(property, arguments)};`);'#10'           '
  +' } else {'#10'              recording.push(`${indent}const ${contextName}Va'
  +'riable${contextVariables.length} = ${methodCallToString(property, arguments'
  +')};`);'#10'            }'#10#10'            contextVariables.push(result);'
  +#10'        }'#10'        return result;'#10'      }'#10'    }'#10'    entit'
  +'yNames[gl[property]] = property;'#10'    return gl[property];'#10'  }'#10' '
  +' function toString() {'#10'    return recording.join(''\n'');'#10'  }'#10' '
  +' function reset() {'#10'    while (recording.length > 0) {'#10'      record'
  +'ing.pop();'#10'    }'#10'  }'#10'  function insertVariable(name, value) {'
  +#10'    variables[name] = value;'#10'  }'#10'  function getEntity(value) {'
  +#10'    const name = entityNames[value];'#10'    if (name) {'#10'      retur'
  +'n contextName + ''.'' + name;'#10'    }'#10'    return value;'#10'  }'#10' '
  +' function setIndent(spaces) {'#10'    indent = '' ''.repeat(spaces);'#10'  '
  +'}'#10'  function addVariable(value, source) {'#10'    const variableName = '
  +'`${contextName}Variable${contextVariables.length}`;'#10'    recording.push('
  +'`${indent}const ${variableName} = ${source};`);'#10'    contextVariables.pu'
  +'sh(value);'#10'    return variableName;'#10'  }'#10'  function writePPM(wid'
  +'th, height) {'#10'    const sourceVariable = `${contextName}Variable${conte'
  +'xtVariables.length}`;'#10'    const imageVariable = `imageDatum${imageCount'
  +'}`;'#10'    recording.push(`${indent}let ${imageVariable} = ["P3\\n# ${read'
  +'PixelsFile}.ppm\\n", ${width}, '' '', ${height}, "\\n255\\n"].join("");`);'
  +#10'    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length'
  +'; i += 4) {`);'#10'    recording.push(`${indent}  ${imageVariable} += ${sou'
  +'rceVariable}[i] + '' '' + ${sourceVariable}[i + 1] + '' '' + ${sourceVariab'
  +'le}[i + 2] + '' '';`);'#10'    recording.push(`${indent}}`);'#10'    record'
  +'ing.push(`${indent}if (typeof require !== "undefined") {`);'#10'    recordi'
  +'ng.push(`${indent}  require(''fs'').writeFileSync(''./${readPixelsFile}.ppm'
  +''', ${imageVariable});`);'#10'    recording.push(`${indent}}`);'#10'    ima'
  +'geCount++;'#10'  }'#10'  function addComment(value) {'#10'    recording.pus'
  +'h(`${indent}// ${value}`);'#10'  }'#10'  function checkThrowError() {'#10' '
  +'   recording.push(`${indent}(() => {'#10'${indent}const error = ${contextNa'
  +'me}.getError();'#10'${indent}if (error !== ${contextName}.NONE) {'#10'${ind'
  +'ent}  const names = Object.getOwnPropertyNames(gl);'#10'${indent}  for (let'
  +' i = 0; i < names.length; i++) {'#10'${indent}    const name = names[i];'#10
  +'${indent}    if (${contextName}[name] === error) {'#10'${indent}      throw'
  +' new Error(''${contextName} threw '' + name);'#10'${indent}    }'#10'${inde'
  +'nt}  }'#10'${indent}}'#10'${indent}})();`);'#10'  }'#10'  function methodCa'
  +'llToString(method, args) {'#10'    return `${contextName}.${method}(${argum'
  +'entsToString(args, { contextName, contextVariables, getEntity, addVariable,'
  +' variables, onUnrecognizedArgumentLookup })})`;'#10'  }'#10#10'  function g'
  +'etVariableName(value) {'#10'    if (variables) {'#10'      for (const name '
  +'in variables) {'#10'        if (variables[name] === value) {'#10'          '
  +'return name;'#10'        }'#10'      }'#10'    }'#10'    return null;'#10' '
  +' }'#10#10'  function getContextVariableName(value) {'#10'    const i = cont'
  +'extVariables.indexOf(value);'#10'    if (i !== -1) {'#10'      return `${co'
  +'ntextName}Variable${i}`;'#10'    }'#10'    return null;'#10'  }'#10'}'#10#10
  +'function glExtensionWiretap(extension, options) {'#10'  const proxy = new P'
  +'roxy(extension, { get: listen });'#10'  const extensionEntityNames = {};'#10
  +'  const {'#10'    contextName,'#10'    contextVariables,'#10'    getEntity,'
  +#10'    useTrackablePrimitives,'#10'    recording,'#10'    variables,'#10'  '
  +'  indent,'#10'    onUnrecognizedArgumentLookup,'#10'  } = options;'#10'  re'
  +'turn proxy;'#10'  function listen(obj, property) {'#10'    if (typeof obj[p'
  +'roperty] === ''function'') {'#10'      return function() {'#10'        swit'
  +'ch (property) {'#10'          case ''drawBuffersWEBGL'':'#10'            re'
  +'cording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString'
  +'(arguments[0], { contextName, contextVariables, getEntity: getExtensionEnti'
  +'ty, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);'#10'    '
  +'        return extension.drawBuffersWEBGL(arguments[0]);'#10'        }'#10
  ,'        let result = extension[property].apply(extension, arguments);'#10' '
  +'       switch (typeof result) {'#10'          case ''undefined'':'#10'     '
  +'       recording.push(`${indent}${methodCallToString(property, arguments)};'
  +'`);'#10'            return;'#10'          case ''number'':'#10'          ca'
  +'se ''boolean'':'#10'            if (useTrackablePrimitives && contextVariab'
  +'les.indexOf(trackablePrimitive(result)) === -1) {'#10'              recordi'
  +'ng.push(`${indent}const ${contextName}Variable${contextVariables.length} = '
  +'${methodCallToString(property, arguments)};`);'#10'              contextVar'
  +'iables.push(result = trackablePrimitive(result));'#10'            } else {'
  +#10'              recording.push(`${indent}const ${contextName}Variable${con'
  +'textVariables.length} = ${methodCallToString(property, arguments)};`);'#10
  +'              contextVariables.push(result);'#10'            }'#10'        '
  +'    break;'#10'          default:'#10'            if (result === null) {'#10
  +'              recording.push(`${methodCallToString(property, arguments)};`)'
  +';'#10'            } else {'#10'              recording.push(`${indent}const'
  +' ${contextName}Variable${contextVariables.length} = ${methodCallToString(pr'
  +'operty, arguments)};`);'#10'            }'#10'            contextVariables.'
  +'push(result);'#10'        }'#10'        return result;'#10'      };'#10'   '
  +' }'#10'    extensionEntityNames[extension[property]] = property;'#10'    re'
  +'turn extension[property];'#10'  }'#10#10'  function getExtensionEntity(valu'
  +'e) {'#10'    if (extensionEntityNames.hasOwnProperty(value)) {'#10'      re'
  +'turn `${contextName}.${extensionEntityNames[value]}`;'#10'    }'#10'    ret'
  +'urn getEntity(value);'#10'  }'#10#10'  function methodCallToString(method, '
  +'args) {'#10'    return `${contextName}.${method}(${argumentsToString(args, '
  +'{ contextName, contextVariables, getEntity: getExtensionEntity, addVariable'
  +', variables, onUnrecognizedArgumentLookup })})`;'#10'  }'#10#10'  function '
  +'addVariable(value, source) {'#10'    const variableName = `${contextName}Va'
  +'riable${contextVariables.length}`;'#10'    contextVariables.push(value);'#10
  +'    recording.push(`${indent}const ${variableName} = ${source};`);'#10'    '
  +'return variableName;'#10'  }'#10'}'#10#10'function argumentsToString(args, '
  +'options) {'#10'  const { variables, onUnrecognizedArgumentLookup } = option'
  +'s;'#10'  return (Array.from(args).map((arg) => {'#10'    const variableName'
  +' = getVariableName(arg);'#10'    if (variableName) {'#10'      return varia'
  +'bleName;'#10'    }'#10'    return argumentToString(arg, options);'#10'  }).'
  +'join('', ''));'#10#10'  function getVariableName(value) {'#10'    if (varia'
  +'bles) {'#10'      for (const name in variables) {'#10'        if (!variable'
  +'s.hasOwnProperty(name)) continue;'#10'        if (variables[name] === value'
  +') {'#10'          return name;'#10'        }'#10'      }'#10'    }'#10'    '
  +'if (onUnrecognizedArgumentLookup) {'#10'      return onUnrecognizedArgument'
  +'Lookup(value);'#10'    }'#10'    return null;'#10'  }'#10'}'#10#10'function'
  +' argumentToString(arg, options) {'#10'  const { contextName, contextVariabl'
  +'es, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;'#10' '
  +' if (typeof arg === ''undefined'') {'#10'    return ''undefined'';'#10'  }'
  +#10'  if (arg === null) {'#10'    return ''null'';'#10'  }'#10'  const i = c'
  +'ontextVariables.indexOf(arg);'#10'  if (i > -1) {'#10'    return `${context'
  +'Name}Variable${i}`;'#10'  }'#10'  switch (arg.constructor.name) {'#10'    c'
  +'ase ''String'':'#10'      const hasLines = /\n/.test(arg);'#10'      const '
  +'hasSingleQuotes = /''/.test(arg);'#10'      const hasDoubleQuotes = /"/.tes'
  +'t(arg);'#10'      if (hasLines) {'#10'        return ''`'' + arg + ''`'';'
  +#10'      } else if (hasSingleQuotes && !hasDoubleQuotes) {'#10'        retu'
  +'rn ''"'' + arg + ''"'';'#10'      } else if (!hasSingleQuotes && hasDoubleQ'
  +'uotes) {'#10'        return "''" + arg + "''";'#10'      } else {'#10'     '
  +'   return ''\'''' + arg + ''\'''';'#10'      }'#10'    case ''Number'': ret'
  +'urn getEntity(arg);'#10'    case ''Boolean'': return getEntity(arg);'#10'  '
  +'  case ''Array'':'#10'      return addVariable(arg, `new ${arg.constructor.'
  +'name}([${Array.from(arg).join('','')}])`);'#10'    case ''Float32Array'':'
  +#10'    case ''Uint8Array'':'#10'    case ''Uint16Array'':'#10'    case ''In'
  +'t32Array'':'#10'      return addVariable(arg, `new ${arg.constructor.name}('
  +'${JSON.stringify(Array.from(arg))})`);'#10'    default:'#10'      if (onUnr'
  +'ecognizedArgumentLookup) {'#10'        const instantiationString = onUnreco'
  +'gnizedArgumentLookup(arg);'#10'        if (instantiationString) {'#10'     '
  +'     return instantiationString;'#10'        }'#10'      }'#10'      throw '
  +'new Error(`unrecognized argument type ${arg.constructor.name}`);'#10'  }'#10
  +'}'#10#10'function trackablePrimitive(value) {'#10'  return new value.constr'
  ,'uctor(value);'#10'}'#10#10'if (typeof module !== ''undefined'') {'#10'  mod'
  +'ule.exports = { glWiretap, glExtensionWiretap };'#10'}'#10#10'if (typeof wi'
  +'ndow !== ''undefined'') {'#10'  glWiretap.glExtensionWiretap = glExtensionW'
  +'iretap;'#10'  window.glWiretap = glWiretap;'#10'}'#10#10'},{}],4:[function('
  +'require,module,exports){'#10'function setupArguments(args) {'#10'  const ne'
  +'wArguments = new Array(args.length);'#10'  for (let i = 0; i < args.length;'
  +' i++) {'#10'    const arg = args[i];'#10'    if (arg.toArray) {'#10'      n'
  +'ewArguments[i] = arg.toArray();'#10'    } else {'#10'      newArguments[i] '
  +'= arg;'#10'    }'#10'  }'#10'  return newArguments;'#10'}'#10#10'function m'
  +'ock1D() {'#10'  const args = setupArguments(arguments);'#10'  const row = n'
  +'ew Float32Array(this.output.x);'#10'  for (let x = 0; x < this.output.x; x+'
  +'+) {'#10'    this.thread.x = x;'#10'    this.thread.y = 0;'#10'    this.thr'
  +'ead.z = 0;'#10'    row[x] = this._fn.apply(this, args);'#10'  }'#10'  retur'
  +'n row;'#10'}'#10#10'function mock2D() {'#10'  const args = setupArguments(a'
  +'rguments);'#10'  const matrix = new Array(this.output.y);'#10'  for (let y '
  +'= 0; y < this.output.y; y++) {'#10'    const row = new Float32Array(this.ou'
  +'tput.x);'#10'    for (let x = 0; x < this.output.x; x++) {'#10'      this.t'
  +'hread.x = x;'#10'      this.thread.y = y;'#10'      this.thread.z = 0;'#10
  +'      row[x] = this._fn.apply(this, args);'#10'    }'#10'    matrix[y] = ro'
  +'w;'#10'  }'#10'  return matrix;'#10'}'#10#10'function mock2DGraphical() {'
  +#10'  const args = setupArguments(arguments);'#10'  for (let y = 0; y < this'
  +'.output.y; y++) {'#10'    for (let x = 0; x < this.output.x; x++) {'#10'   '
  +'   this.thread.x = x;'#10'      this.thread.y = y;'#10'      this.thread.z '
  +'= 0;'#10'      this._fn.apply(this, args);'#10'    }'#10'  }'#10'}'#10#10'f'
  +'unction mock3D() {'#10'  const args = setupArguments(arguments);'#10'  cons'
  +'t cube = new Array(this.output.z);'#10'  for (let z = 0; z < this.output.z;'
  +' z++) {'#10'    const matrix = new Array(this.output.y);'#10'    for (let y'
  +' = 0; y < this.output.y; y++) {'#10'      const row = new Float32Array(this'
  +'.output.x);'#10'      for (let x = 0; x < this.output.x; x++) {'#10'       '
  +' this.thread.x = x;'#10'        this.thread.y = y;'#10'        this.thread.'
  +'z = z;'#10'        row[x] = this._fn.apply(this, args);'#10'      }'#10'   '
  +'   matrix[y] = row;'#10'    }'#10'    cube[z] = matrix;'#10'  }'#10'  retur'
  +'n cube;'#10'}'#10#10'function apiDecorate(kernel) {'#10'  kernel.setOutput '
  +'= (output) => {'#10'    kernel.output = setupOutput(output);'#10'    if (ke'
  +'rnel.graphical) {'#10'      setupGraphical(kernel);'#10'    }'#10'  };'#10
  +'  kernel.toJSON = () => {'#10'    throw new Error(''Not usable with gpuMock'
  +''');'#10'  };'#10'  kernel.setConstants = (flag) => {'#10'    kernel.consta'
  +'nts = flag;'#10'    return kernel;'#10'  };'#10'  kernel.setGraphical = (fl'
  +'ag) => {'#10'    kernel.graphical = flag;'#10'    return kernel;'#10'  };'
  +#10'  kernel.setCanvas = (flag) => {'#10'    kernel.canvas = flag;'#10'    r'
  +'eturn kernel;'#10'  };'#10'  kernel.setContext = (flag) => {'#10'    kernel'
  +'.context = flag;'#10'    return kernel;'#10'  };'#10'  kernel.destroy = () '
  +'=> {};'#10'  kernel.validateSettings = () => {};'#10'  if (kernel.graphical'
  +' && kernel.output) {'#10'    setupGraphical(kernel);'#10'  }'#10'  kernel.e'
  +'xec = function() {'#10'    return new Promise((resolve, reject) => {'#10'  '
  +'    try {'#10'        resolve(kernel.apply(kernel, arguments));'#10'      }'
  +' catch(e) {'#10'        reject(e);'#10'      }'#10'    });'#10'  };'#10'  k'
  +'ernel.getPixels = (flip) => {'#10'    const {x, y} = kernel.output;'#10'   '
  +' return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData'
  +'.data.slice(0);'#10'  };'#10'  kernel.color = function(r, g, b, a) {'#10'  '
  +'  if (typeof a === ''undefined'') {'#10'      a = 1;'#10'    }'#10#10'    r'
  +' = Math.floor(r * 255);'#10'    g = Math.floor(g * 255);'#10'    b = Math.f'
  +'loor(b * 255);'#10'    a = Math.floor(a * 255);'#10#10'    const width = ke'
  +'rnel.output.x;'#10'    const height = kernel.output.y;'#10#10'    const x ='
  +' kernel.thread.x;'#10'    const y = height - kernel.thread.y - 1;'#10#10'  '
  +'  const index = x + y * width;'#10#10'    kernel._colorData[index * 4 + 0] '
  +'= r;'#10'    kernel._colorData[index * 4 + 1] = g;'#10'    kernel._colorDat'
  +'a[index * 4 + 2] = b;'#10'    kernel._colorData[index * 4 + 3] = a;'#10'  }'
  +';'#10#10'  const mockMethod = () => kernel;'#10'  const methods = ['#10'   '
  +' ''setWarnVarUsage'','#10'    ''setArgumentTypes'','#10'    ''setTactic'','
  +#10'    ''setOptimizeFloatMemory'','#10'    ''setDebug'','#10'    ''setLoopM'
  +'axIterations'','#10'    ''setConstantTypes'','#10'    ''setFunctions'','#10
  +'    ''setNativeFunctions'','#10'    ''setInjectedNative'','#10'    ''setPip'
  +'eline'','#10'    ''setPrecision'','#10'    ''setOutputToTexture'','#10'    '
  ,'''setImmutable'','#10'    ''setStrictIntegers'','#10'    ''setDynamicOutput'
  +''','#10'    ''setHardcodeConstants'','#10'    ''setDynamicArguments'','#10
  +'    ''setUseLegacyEncoder'','#10'    ''setWarnVarUsage'','#10'    ''addSubK'
  +'ernel'','#10'  ];'#10'  for (let i = 0; i < methods.length; i++) {'#10'    '
  +'kernel[methods[i]] = mockMethod;'#10'  }'#10'  return kernel;'#10'}'#10#10
  +'function setupGraphical(kernel) {'#10'  const {x, y} = kernel.output;'#10' '
  +' if (kernel.context && kernel.context.createImageData) {'#10'    const data'
  +' = new Uint8ClampedArray(x * y * 4);'#10'    kernel._imageData = kernel.con'
  +'text.createImageData(x, y);'#10'    kernel._colorData = data;'#10'  } else '
  +'{'#10'    const data = new Uint8ClampedArray(x * y * 4);'#10'    kernel._im'
  +'ageData = { data };'#10'    kernel._colorData = data;'#10'  }'#10'}'#10#10
  +'function setupOutput(output) {'#10'  let result = null;'#10'  if (output.le'
  +'ngth) {'#10'    if (output.length === 3) {'#10'      const [x,y,z] = output'
  +';'#10'      result = { x, y, z };'#10'    } else if (output.length === 2) {'
  +#10'      const [x,y] = output;'#10'      result = { x, y };'#10'    } else '
  +'{'#10'      const [x] = output;'#10'      result = { x };'#10'    }'#10'  }'
  +' else {'#10'    result = output;'#10'  }'#10'  return result;'#10'}'#10#10
  +'function gpuMock(fn, settings = {}) {'#10'  const output = settings.output '
  +'? setupOutput(settings.output) : null;'#10'  function kernel() {'#10'    if'
  +' (kernel.output.z) {'#10'      return mock3D.apply(kernel, arguments);'#10
  +'    } else if (kernel.output.y) {'#10'      if (kernel.graphical) {'#10'   '
  +'     return mock2DGraphical.apply(kernel, arguments);'#10'      }'#10'     '
  +' return mock2D.apply(kernel, arguments);'#10'    } else {'#10'      return '
  +'mock1D.apply(kernel, arguments);'#10'    }'#10'  }'#10'  kernel._fn = fn;'
  +#10'  kernel.constants = settings.constants || null;'#10'  kernel.context = '
  +'settings.context || null;'#10'  kernel.canvas = settings.canvas || null;'#10
  +'  kernel.graphical = settings.graphical || false;'#10'  kernel._imageData ='
  +' null;'#10'  kernel._colorData = null;'#10'  kernel.output = output;'#10'  '
  +'kernel.thread = {'#10'    x: 0,'#10'    y: 0,'#10'    z: 0'#10'  };'#10'  r'
  +'eturn apiDecorate(kernel);'#10'}'#10#10'function flipPixels(pixels, width, '
  +'height) {'#10'  const halfHeight = height / 2 | 0; '#10'  const bytesPerRow'
  +' = width * 4;'#10'  const temp = new Uint8ClampedArray(width * 4);'#10'  co'
  +'nst result = pixels.slice(0);'#10'  for (let y = 0; y < halfHeight; ++y) {'
  +#10'    const topOffset = y * bytesPerRow;'#10'    const bottomOffset = (hei'
  +'ght - y - 1) * bytesPerRow;'#10#10'    temp.set(result.subarray(topOffset, '
  +'topOffset + bytesPerRow));'#10#10'    result.copyWithin(topOffset, bottomOf'
  +'fset, bottomOffset + bytesPerRow);'#10#10'    result.set(temp, bottomOffset'
  +');'#10'  }'#10'  return result;'#10'}'#10#10'module.exports = {'#10'  gpuMo'
  +'ck'#10'};'#10#10'},{}],5:[function(require,module,exports){'#10'const { uti'
  +'ls } = require(''./utils'');'#10#10'function alias(name, source) {'#10'  co'
  +'nst fnString = source.toString();'#10'  return new Function(`return functio'
  +'n ${ name } (${ utils.getArgumentNamesFromString(fnString).join('', '') }) '
  +'{'#10'  ${ utils.getFunctionBodyFromString(fnString) }'#10'}`)();'#10'}'#10
  +#10'module.exports = {'#10'  alias'#10'};'#10'},{"./utils":114}],6:[function'
  +'(require,module,exports){'#10'const { FunctionNode } = require(''../functio'
  +'n-node'');'#10#10'class CPUFunctionNode extends FunctionNode {'#10'  astFun'
  +'ction(ast, retArr) {'#10#10'    if (!this.isRootKernel) {'#10'      retArr.'
  +'push(''function'');'#10'      retArr.push('' '');'#10'      retArr.push(thi'
  +'s.name);'#10'      retArr.push(''('');'#10#10'      for (let i = 0; i < thi'
  +'s.argumentNames.length; ++i) {'#10'        const argumentName = this.argume'
  +'ntNames[i];'#10#10'        if (i > 0) {'#10'          retArr.push('', '');'
  +#10'        }'#10'        retArr.push(''user_'');'#10'        retArr.push(ar'
  +'gumentName);'#10'      }'#10#10'      retArr.push('') {\n'');'#10'    }'#10
  +#10'    for (let i = 0; i < ast.body.body.length; ++i) {'#10'      this.astG'
  +'eneric(ast.body.body[i], retArr);'#10'      retArr.push(''\n'');'#10'    }'
  +#10#10'    if (!this.isRootKernel) {'#10'      retArr.push(''}\n'');'#10'   '
  +' }'#10'    return retArr;'#10'  }'#10#10'  astReturnStatement(ast, retArr) '
  +'{'#10'    const type = this.returnType || this.getType(ast.argument);'#10#10
  +'    if (!this.returnType) {'#10'      this.returnType = type;'#10'    }'#10
  +#10'    if (this.isRootKernel) {'#10'      retArr.push(this.leadingReturnSta'
  +'tement);'#10'      this.astGeneric(ast.argument, retArr);'#10'      retArr.'
  +'push('';\n'');'#10'      retArr.push(this.followingReturnStatement);'#10'  '
  +'    retArr.push(''continue;\n'');'#10'    } else if (this.isSubKernel) {'#10
  +'      retArr.push(`subKernelResult_${ this.name } = `);'#10'      this.astG'
  ,'eneric(ast.argument, retArr);'#10'      retArr.push('';'');'#10'      retAr'
  +'r.push(`return subKernelResult_${ this.name };`);'#10'    } else {'#10'    '
  +'  retArr.push(''return '');'#10'      this.astGeneric(ast.argument, retArr)'
  +';'#10'      retArr.push('';'');'#10'    }'#10'    return retArr;'#10'  }'#10
  +#10'  astLiteral(ast, retArr) {'#10#10'    if (isNaN(ast.value)) {'#10'     '
  +' throw this.astErrorOutput('#10'        ''Non-numeric literal not supported'
  +' : '' + ast.value,'#10'        ast'#10'      );'#10'    }'#10#10'    retArr'
  +'.push(ast.value);'#10#10'    return retArr;'#10'  }'#10#10'  astBinaryExpre'
  +'ssion(ast, retArr) {'#10'    retArr.push(''('');'#10'    this.astGeneric(as'
  +'t.left, retArr);'#10'    retArr.push(ast.operator);'#10'    this.astGeneric'
  +'(ast.right, retArr);'#10'    retArr.push('')'');'#10'    return retArr;'#10
  +'  }'#10#10'  astIdentifierExpression(idtNode, retArr) {'#10'    if (idtNode'
  +'.type !== ''Identifier'') {'#10'      throw this.astErrorOutput('#10'      '
  +'  ''IdentifierExpression - not an Identifier'','#10'        idtNode'#10'   '
  +'   );'#10'    }'#10#10'    switch (idtNode.name) {'#10'      case ''Infinit'
  +'y'':'#10'        retArr.push(''Infinity'');'#10'        break;'#10'      de'
  +'fault:'#10'        if (this.constants && this.constants.hasOwnProperty(idtN'
  +'ode.name)) {'#10'          retArr.push(''constants_'' + idtNode.name);'#10
  +'        } else {'#10'          retArr.push(''user_'' + idtNode.name);'#10' '
  +'       }'#10'    }'#10#10'    return retArr;'#10'  }'#10#10'  astForStateme'
  +'nt(forNode, retArr) {'#10'    if (forNode.type !== ''ForStatement'') {'#10
  +'      throw this.astErrorOutput(''Invalid for statement'', forNode);'#10'  '
  +'  }'#10#10'    const initArr = [];'#10'    const testArr = [];'#10'    cons'
  +'t updateArr = [];'#10'    const bodyArr = [];'#10'    let isSafe = null;'#10
  +#10'    if (forNode.init) {'#10'      this.pushState(''in-for-loop-init'');'
  +#10'      this.astGeneric(forNode.init, initArr);'#10'      for (let i = 0; '
  +'i < initArr.length; i++) {'#10'        if (initArr[i].includes && initArr[i'
  +'].includes('','')) {'#10'          isSafe = false;'#10'        }'#10'      '
  +'}'#10'      this.popState(''in-for-loop-init'');'#10'    } else {'#10'     '
  +' isSafe = false;'#10'    }'#10#10'    if (forNode.test) {'#10'      this.as'
  +'tGeneric(forNode.test, testArr);'#10'    } else {'#10'      isSafe = false;'
  +#10'    }'#10#10'    if (forNode.update) {'#10'      this.astGeneric(forNode'
  +'.update, updateArr);'#10'    } else {'#10'      isSafe = false;'#10'    }'
  +#10#10'    if (forNode.body) {'#10'      this.pushState(''loop-body'');'#10
  +'      this.astGeneric(forNode.body, bodyArr);'#10'      this.popState(''loo'
  +'p-body'');'#10'    }'#10#10'    if (isSafe === null) {'#10'      isSafe = t'
  +'his.isSafe(forNode.init) && this.isSafe(forNode.test);'#10'    }'#10#10'   '
  +' if (isSafe) {'#10'      retArr.push(`for (${initArr.join('''')};${testArr.'
  +'join('''')};${updateArr.join('''')}){\n`);'#10'      retArr.push(bodyArr.jo'
  +'in(''''));'#10'      retArr.push(''}\n'');'#10'    } else {'#10'      const'
  +' iVariableName = this.getInternalVariableName(''safeI'');'#10'      if (ini'
  +'tArr.length > 0) {'#10'        retArr.push(initArr.join(''''), '';\n'');'#10
  +'      }'#10'      retArr.push(`for (let ${iVariableName}=0;${iVariableName}'
  +'<LOOP_MAX;${iVariableName}++){\n`);'#10'      if (testArr.length > 0) {'#10
  +'        retArr.push(`if (!${testArr.join('''')}) break;\n`);'#10'      }'#10
  +'      retArr.push(bodyArr.join(''''));'#10'      retArr.push(`\n${updateArr'
  +'.join('''')};`);'#10'      retArr.push(''}\n'');'#10'    }'#10'    return r'
  +'etArr;'#10'  }'#10#10'  astWhileStatement(whileNode, retArr) {'#10'    if ('
  +'whileNode.type !== ''WhileStatement'') {'#10'      throw this.astErrorOutpu'
  +'t('#10'        ''Invalid while statement'','#10'        whileNode'#10'     '
  +' );'#10'    }'#10#10'    retArr.push(''for (let i = 0; i < LOOP_MAX; i++) {'
  +''');'#10'    retArr.push(''if ('');'#10'    this.astGeneric(whileNode.test,'
  +' retArr);'#10'    retArr.push('') {\n'');'#10'    this.astGeneric(whileNode'
  +'.body, retArr);'#10'    retArr.push(''} else {\n'');'#10'    retArr.push('''
  +'break;\n'');'#10'    retArr.push(''}\n'');'#10'    retArr.push(''}\n'');'#10
  +#10'    return retArr;'#10'  }'#10#10'  astDoWhileStatement(doWhileNode, ret'
  +'Arr) {'#10'    if (doWhileNode.type !== ''DoWhileStatement'') {'#10'      t'
  +'hrow this.astErrorOutput('#10'        ''Invalid while statement'','#10'    '
  +'    doWhileNode'#10'      );'#10'    }'#10#10'    retArr.push(''for (let i '
  +'= 0; i < LOOP_MAX; i++) {'');'#10'    this.astGeneric(doWhileNode.body, ret'
  +'Arr);'#10'    retArr.push(''if (!'');'#10'    this.astGeneric(doWhileNode.t'
  +'est, retArr);'#10'    retArr.push('') {\n'');'#10'    retArr.push(''break;\'
  +'n'');'#10'    retArr.push(''}\n'');'#10'    retArr.push(''}\n'');'#10#10'  '
  +'  return retArr;'#10#10'  }'#10#10'  astAssignmentExpression(assNode, retAr'
  ,'r) {'#10'    const declaration = this.getDeclaration(assNode.left);'#10'   '
  +' if (declaration && !declaration.assignable) {'#10'      throw this.astErro'
  +'rOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);'
  +#10'    }'#10'    this.astGeneric(assNode.left, retArr);'#10'    retArr.push'
  +'(assNode.operator);'#10'    this.astGeneric(assNode.right, retArr);'#10'   '
  +' return retArr;'#10'  }'#10#10'  astBlockStatement(bNode, retArr) {'#10'   '
  +' if (this.isState(''loop-body'')) {'#10'      this.pushState(''block-body'''
  +'); '#10'      for (let i = 0; i < bNode.body.length; i++) {'#10'        thi'
  +'s.astGeneric(bNode.body[i], retArr);'#10'      }'#10'      this.popState('''
  +'block-body'');'#10'    } else {'#10'      retArr.push(''{\n'');'#10'      f'
  +'or (let i = 0; i < bNode.body.length; i++) {'#10'        this.astGeneric(bN'
  +'ode.body[i], retArr);'#10'      }'#10'      retArr.push(''}\n'');'#10'    }'
  +#10'    return retArr;'#10'  }'#10#10'  astVariableDeclaration(varDecNode, r'
  +'etArr) {'#10'    retArr.push(`${varDecNode.kind} `);'#10'    const { declar'
  +'ations } = varDecNode;'#10'    for (let i = 0; i < declarations.length; i++'
  +') {'#10'      if (i > 0) {'#10'        retArr.push('','');'#10'      }'#10
  +'      const declaration = declarations[i];'#10'      const info = this.getD'
  +'eclaration(declaration.id);'#10'      if (!info.valueType) {'#10'        in'
  +'fo.valueType = this.getType(declaration.init);'#10'      }'#10'      this.a'
  +'stGeneric(declaration, retArr);'#10'    }'#10'    if (!this.isState(''in-fo'
  +'r-loop-init'')) {'#10'      retArr.push('';'');'#10'    }'#10'    return re'
  +'tArr;'#10'  }'#10#10'  astIfStatement(ifNode, retArr) {'#10'    retArr.push'
  +'(''if ('');'#10'    this.astGeneric(ifNode.test, retArr);'#10'    retArr.pu'
  +'sh('')'');'#10'    if (ifNode.consequent.type === ''BlockStatement'') {'#10
  +'      this.astGeneric(ifNode.consequent, retArr);'#10'    } else {'#10'    '
  +'  retArr.push('' {\n'');'#10'      this.astGeneric(ifNode.consequent, retAr'
  +'r);'#10'      retArr.push(''\n}\n'');'#10'    }'#10#10'    if (ifNode.alter'
  +'nate) {'#10'      retArr.push(''else '');'#10'      if (ifNode.alternate.ty'
  +'pe === ''BlockStatement'' || ifNode.alternate.type === ''IfStatement'') {'
  +#10'        this.astGeneric(ifNode.alternate, retArr);'#10'      } else {'#10
  +'        retArr.push('' {\n'');'#10'        this.astGeneric(ifNode.alternate'
  +', retArr);'#10'        retArr.push(''\n}\n'');'#10'      }'#10'    }'#10'  '
  +'  return retArr;'#10#10'  }'#10#10'  astSwitchStatement(ast, retArr) {'#10
  +'    const { discriminant, cases } = ast;'#10'    retArr.push(''switch ('');'
  +#10'    this.astGeneric(discriminant, retArr);'#10'    retArr.push('') {\n'''
  +');'#10'    for (let i = 0; i < cases.length; i++) {'#10'      if (cases[i].'
  +'test === null) {'#10'        retArr.push(''default:\n'');'#10'        this.'
  +'astGeneric(cases[i].consequent, retArr);'#10'        if (cases[i].consequen'
  +'t && cases[i].consequent.length > 0) {'#10'          retArr.push(''break;\n'
  +''');'#10'        }'#10'        continue;'#10'      }'#10'      retArr.push('
  +'''case '');'#10'      this.astGeneric(cases[i].test, retArr);'#10'      ret'
  +'Arr.push('':\n'');'#10'      if (cases[i].consequent && cases[i].consequent'
  +'.length > 0) {'#10'        this.astGeneric(cases[i].consequent, retArr);'#10
  +'        retArr.push(''break;\n'');'#10'      }'#10'    }'#10'    retArr.pus'
  +'h(''\n}'');'#10'  }'#10#10'  astThisExpression(tNode, retArr) {'#10'    ret'
  +'Arr.push(''_this'');'#10'    return retArr;'#10'  }'#10#10'  astMemberExpre'
  +'ssion(mNode, retArr) {'#10'    const {'#10'      signature,'#10'      type,'
  +#10'      property,'#10'      xProperty,'#10'      yProperty,'#10'      zPro'
  +'perty,'#10'      name,'#10'      origin'#10'    } = this.getMemberExpressio'
  +'nDetails(mNode);'#10'    switch (signature) {'#10'      case ''this.thread.'
  +'value'':'#10'        retArr.push(`_this.thread.${ name }`);'#10'        ret'
  +'urn retArr;'#10'      case ''this.output.value'':'#10'        switch (name)'
  +' {'#10'          case ''x'':'#10'            retArr.push(''outputX'');'#10
  +'            break;'#10'          case ''y'':'#10'            retArr.push('''
  +'outputY'');'#10'            break;'#10'          case ''z'':'#10'          '
  +'  retArr.push(''outputZ'');'#10'            break;'#10'          default:'
  +#10'            throw this.astErrorOutput(''Unexpected expression'', mNode);'
  +#10'        }'#10'        return retArr;'#10'      case ''value'':'#10'     '
  +'   throw this.astErrorOutput(''Unexpected expression'', mNode);'#10'      c'
  +'ase ''value[]'':'#10'      case ''value[][]'':'#10'      case ''value[][][]'
  +''':'#10'      case ''value.value'':'#10'        if (origin === ''Math'') {'
  +#10'          retArr.push(Math[name]);'#10'          return retArr;'#10'    '
  +'    }'#10'        switch (property) {'#10'          case ''r'':'#10'       '
  +'     retArr.push(`user_${ name }[0]`);'#10'            return retArr;'#10' '
  ,'         case ''g'':'#10'            retArr.push(`user_${ name }[1]`);'#10
  +'            return retArr;'#10'          case ''b'':'#10'            retArr'
  +'.push(`user_${ name }[2]`);'#10'            return retArr;'#10'          ca'
  +'se ''a'':'#10'            retArr.push(`user_${ name }[3]`);'#10'           '
  +' return retArr;'#10'        }'#10'        break;'#10'      case ''value.val'
  +'ue[]'': '#10'        if (this.removeIstanbulCoverage) {'#10'          retur'
  +'n retArr;'#10'        }'#10'        retArr.push(`${mNode.object.object.name'
  +'}.${mNode.object.property.name}[${mNode.property.value}]`);'#10'        ret'
  +'urn retArr;'#10'      case ''value.value[][]'': '#10'        if (this.remov'
  +'eIstanbulCoverage) {'#10'          return retArr;'#10'        }'#10'       '
  +' retArr.push(`${mNode.object.object.object.name}.${mNode.object.object.prop'
  +'erty.name}[${mNode.object.property.value}][${mNode.property.value}]`);'#10
  +'        return retArr;'#10'      case ''this.constants.value'':'#10'      c'
  +'ase ''this.constants.value[]'':'#10'      case ''this.constants.value[][]'''
  +':'#10'      case ''this.constants.value[][][]'':'#10'        break;'#10'   '
  +'   case ''fn()[]'':'#10'        this.astGeneric(mNode.object, retArr);'#10
  +'        retArr.push(''['');'#10'        this.astGeneric(mNode.property, ret'
  +'Arr);'#10'        retArr.push('']'');'#10'        return retArr;'#10'      '
  +'default:'#10'        throw this.astErrorOutput(''Unexpected expression'', m'
  +'Node);'#10'    }'#10#10'    if (!mNode.computed) {'#10'      switch (type) '
  +'{'#10'        case ''Number'':'#10'        case ''Integer'':'#10'        ca'
  +'se ''Float'':'#10'        case ''Boolean'':'#10'          retArr.push(`${or'
  +'igin}_${name}`);'#10'          return retArr;'#10'      }'#10'    }'#10#10
  +'    const markupName = `${origin}_${name}`;'#10#10'    switch (type) {'#10
  +'      case ''Array(2)'':'#10'      case ''Array(3)'':'#10'      case ''Arra'
  +'y(4)'':'#10'      case ''HTMLImageArray'':'#10'      case ''ArrayTexture(1)'
  +''':'#10'      case ''ArrayTexture(2)'':'#10'      case ''ArrayTexture(3)'':'
  +#10'      case ''ArrayTexture(4)'':'#10'      case ''HTMLImage'':'#10'      '
  +'default:'#10'        let size;'#10'        let isInput;'#10'        if (ori'
  +'gin === ''constants'') {'#10'          const constant = this.constants[name'
  +'];'#10'          isInput = this.constantTypes[name] === ''Input'';'#10'    '
  +'      size = isInput ? constant.size : null;'#10'        } else {'#10'     '
  +'     isInput = this.isInput(name);'#10'          size = isInput ? this.argu'
  +'mentSizes[this.argumentNames.indexOf(name)] : null;'#10'        }'#10'     '
  +'   retArr.push(`${ markupName }`);'#10'        if (zProperty && yProperty) '
  +'{'#10'          if (isInput) {'#10'            retArr.push(''[('');'#10'   '
  +'         this.astGeneric(zProperty, retArr);'#10'            retArr.push(`*'
  +'${ this.dynamicArguments ? ''(outputY * outputX)'' : size[1] * size[0] })+('
  +'`);'#10'            this.astGeneric(yProperty, retArr);'#10'            ret'
  +'Arr.push(`*${ this.dynamicArguments ? ''outputX'' : size[0] })+`);'#10'    '
  +'        this.astGeneric(xProperty, retArr);'#10'            retArr.push('']'
  +''');'#10'          } else {'#10'            retArr.push(''['');'#10'       '
  +'     this.astGeneric(zProperty, retArr);'#10'            retArr.push('']'')'
  +';'#10'            retArr.push(''['');'#10'            this.astGeneric(yProp'
  +'erty, retArr);'#10'            retArr.push('']'');'#10'            retArr.p'
  +'ush(''['');'#10'            this.astGeneric(xProperty, retArr);'#10'       '
  +'     retArr.push('']'');'#10'          }'#10'        } else if (yProperty) '
  +'{'#10'          if (isInput) {'#10'            retArr.push(''[('');'#10'   '
  +'         this.astGeneric(yProperty, retArr);'#10'            retArr.push(`*'
  +'${ this.dynamicArguments ? ''outputX'' : size[0] })+`);'#10'            thi'
  +'s.astGeneric(xProperty, retArr);'#10'            retArr.push('']'');'#10'  '
  +'        } else {'#10'            retArr.push(''['');'#10'            this.a'
  +'stGeneric(yProperty, retArr);'#10'            retArr.push('']'');'#10'     '
  +'       retArr.push(''['');'#10'            this.astGeneric(xProperty, retAr'
  +'r);'#10'            retArr.push('']'');'#10'          }'#10'        } else '
  +'if (typeof xProperty !== ''undefined'') {'#10'          retArr.push(''['');'
  +#10'          this.astGeneric(xProperty, retArr);'#10'          retArr.push('
  +''']'');'#10'        }'#10'    }'#10'    return retArr;'#10'  }'#10#10'  ast'
  +'CallExpression(ast, retArr) {'#10'    if (ast.type !== ''CallExpression'') '
  +'{'#10'      throw this.astErrorOutput(''Unknown CallExpression'', ast);'#10
  +'    }'#10'    let functionName = this.astMemberExpressionUnroll(ast.callee)'
  +';'#10#10'    if (this.calledFunctions.indexOf(functionName) < 0) {'#10'    '
  +'  this.calledFunctions.push(functionName);'#10'    }'#10#10'    const isMat'
  +'hFunction = this.isAstMathFunction(ast);'#10#10'    if (this.onFunctionCall'
  ,') {'#10'      this.onFunctionCall(this.name, functionName, ast.arguments);'
  +#10'    }'#10#10'    retArr.push(functionName);'#10#10'    retArr.push(''('''
  +');'#10'    const targetTypes = this.lookupFunctionArgumentTypes(functionNam'
  +'e) || [];'#10'    for (let i = 0; i < ast.arguments.length; ++i) {'#10'    '
  +'  const argument = ast.arguments[i];'#10#10'      let argumentType = this.g'
  +'etType(argument);'#10'      if (!targetTypes[i]) {'#10'        this.trigger'
  +'ImplyArgumentType(functionName, i, argumentType, this);'#10'      }'#10#10
  +'      if (i > 0) {'#10'        retArr.push('', '');'#10'      }'#10'      t'
  +'his.astGeneric(argument, retArr);'#10'    }'#10'    retArr.push('')'');'#10
  +#10'    return retArr;'#10'  }'#10#10'  astArrayExpression(arrNode, retArr) '
  +'{'#10'    const arrLen = arrNode.elements.length;'#10#10'    retArr.push('''
  +'new Float32Array(['');'#10'    for (let i = 0; i < arrLen; ++i) {'#10'     '
  +' if (i > 0) {'#10'        retArr.push('', '');'#10'      }'#10'      const '
  +'subNode = arrNode.elements[i];'#10'      this.astGeneric(subNode, retArr)'
  +#10'    }'#10'    retArr.push(''])'');'#10#10'    return retArr;'#10'  }'#10
  +#10'  astDebuggerStatement(arrNode, retArr) {'#10'    retArr.push(''debugger'
  +';'');'#10'    return retArr;'#10'  }'#10'}'#10#10'module.exports = {'#10'  '
  +'CPUFunctionNode'#10'};'#10'},{"../function-node":10}],7:[function(require,m'
  +'odule,exports){'#10'const { utils } = require(''../../utils'');'#10#10'func'
  +'tion constantsToString(constants, types) {'#10'  const results = [];'#10'  '
  +'for (const name in types) {'#10'    if (!types.hasOwnProperty(name)) contin'
  +'ue;'#10'    const type = types[name];'#10'    const constant = constants[na'
  +'me];'#10'    switch (type) {'#10'      case ''Number'':'#10'      case ''In'
  +'teger'':'#10'      case ''Float'':'#10'      case ''Boolean'':'#10'        '
  +'results.push(`${name}:${constant}`);'#10'        break;'#10'      case ''Ar'
  +'ray(2)'':'#10'      case ''Array(3)'':'#10'      case ''Array(4)'':'#10'   '
  +'     results.push(`${name}:new ${constant.constructor.name}(${JSON.stringif'
  +'y(Array.from(constant))})`);'#10'        break;'#10'    }'#10'  }'#10'  ret'
  +'urn `{ ${ results.join() } }`;'#10'}'#10#10'function cpuKernelString(cpuKer'
  +'nel, name) {'#10'  const header = [];'#10'  const thisProperties = [];'#10
  +'  const beforeReturn = [];'#10#10'  const useFunctionKeyword = !/^function/'
  +'.test(cpuKernel.color.toString());'#10#10'  header.push('#10'    ''  const '
  +'{ context, canvas, constants: incomingConstants } = settings;'','#10'    ` '
  +' const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output'
  +'))});`,'#10'    `  const _constantTypes = ${JSON.stringify(cpuKernel.consta'
  +'ntTypes)};`,'#10'    `  const _constants = ${constantsToString(cpuKernel.co'
  +'nstants, cpuKernel.constantTypes)};`,'#10'  );'#10#10'  thisProperties.push'
  +'('#10'    ''    constants: _constants,'','#10'    ''    context,'','#10'   '
  +' ''    output,'','#10'    ''    thread: {x: 0, y: 0, z: 0},'','#10'  );'#10
  +#10'  if (cpuKernel.graphical) {'#10'    header.push(`  const _imageData = c'
  +'ontext.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);'
  +#10'    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.'
  +'output[0]} * ${cpuKernel.output[1]} * 4);`);'#10#10'    const colorFn = uti'
  +'ls.flattenFunctionToString((useFunctionKeyword ? ''function '' : '''') + cp'
  +'uKernel.color.toString(), {'#10'      thisLookup: (propertyName) => {'#10' '
  +'       switch (propertyName) {'#10'          case ''_colorData'':'#10'     '
  +'       return ''_colorData'';'#10'          case ''_imageData'':'#10'      '
  +'      return ''_imageData'';'#10'          case ''output'':'#10'           '
  +' return ''output'';'#10'          case ''thread'':'#10'            return '
  +'''this.thread'';'#10'        }'#10'        return JSON.stringify(cpuKernel['
  +'propertyName]);'#10'      },'#10'      findDependency: (object, name) => {'
  +#10'        return null;'#10'      }'#10'    });'#10#10'    const getPixelsF'
  +'n = utils.flattenFunctionToString((useFunctionKeyword ? ''function '' : '''
  +''') + cpuKernel.getPixels.toString(), {'#10'      thisLookup: (propertyName'
  +') => {'#10'        switch (propertyName) {'#10'          case ''_colorData'
  +''':'#10'            return ''_colorData'';'#10'          case ''_imageData'
  +''':'#10'            return ''_imageData'';'#10'          case ''output'':'
  +#10'            return ''output'';'#10'          case ''thread'':'#10'      '
  +'      return ''this.thread'';'#10'        }'#10'        return JSON.stringi'
  +'fy(cpuKernel[propertyName]);'#10'      },'#10'      findDependency: () => {'
  +#10'        return null;'#10'      }'#10'    });'#10#10'    thisProperties.p'
  +'ush('#10'      ''    _imageData,'','#10'      ''    _colorData,'','#10'    '
  +'  `    color: ${colorFn},`,'#10'    );'#10#10'    beforeReturn.push('#10'  '
  +'    `  kernel.getPixels = ${getPixelsFn};`'#10'    );'#10'  }'#10#10'  cons'
  ,'t constantTypes = [];'#10'  const constantKeys = Object.keys(cpuKernel.cons'
  +'tantTypes);'#10'  for (let i = 0; i < constantKeys.length; i++) {'#10'    c'
  +'onstantTypes.push(cpuKernel.constantTypes[constantKeys]);'#10'  }'#10'  if '
  +'(cpuKernel.argumentTypes.indexOf(''HTMLImageArray'') !== -1 || constantType'
  +'s.indexOf(''HTMLImageArray'') !== -1) {'#10'    const flattenedImageTo3DArr'
  +'ay = utils.flattenFunctionToString((useFunctionKeyword ? ''function '' : '''
  +''') + cpuKernel._imageTo3DArray.toString(), {'#10'      doNotDefine: [''can'
  +'vas''],'#10'      findDependency: (object, name) => {'#10'        if (objec'
  +'t === ''this'') {'#10'          return (useFunctionKeyword ? ''function '' '
  +': '''') + cpuKernel[name].toString();'#10'        }'#10'        return null'
  +';'#10'      },'#10'      thisLookup: (propertyName) => {'#10'        switch'
  +' (propertyName) {'#10'          case ''canvas'':'#10'            return;'#10
  +'          case ''context'':'#10'            return ''context'';'#10'       '
  +' }'#10'      }'#10'    });'#10'    beforeReturn.push(flattenedImageTo3DArra'
  +'y);'#10'    thisProperties.push(`    _mediaTo2DArray,`);'#10'    thisProper'
  +'ties.push(`    _imageTo3DArray,`);'#10'  } else if (cpuKernel.argumentTypes'
  +'.indexOf(''HTMLImage'') !== -1 || constantTypes.indexOf(''HTMLImage'') !== '
  +'-1) {'#10'    const flattenedImageTo2DArray = utils.flattenFunctionToString'
  +'((useFunctionKeyword ? ''function '' : '''') + cpuKernel._mediaTo2DArray.to'
  +'String(), {'#10'      findDependency: (object, name) => {'#10'        retur'
  +'n null;'#10'      },'#10'      thisLookup: (propertyName) => {'#10'        '
  +'switch (propertyName) {'#10'          case ''canvas'':'#10'            retu'
  +'rn ''settings.canvas'';'#10'          case ''context'':'#10'            ret'
  +'urn ''settings.context'';'#10'        }'#10'        throw new Error(''unhan'
  +'dled thisLookup'');'#10'      }'#10'    });'#10'    beforeReturn.push(flatt'
  +'enedImageTo2DArray);'#10'    thisProperties.push(`    _mediaTo2DArray,`);'
  +#10'  }'#10#10'  return `function(settings) {'#10'${ header.join(''\n'') }'
  +#10'  for (const p in _constantTypes) {'#10'    if (!_constantTypes.hasOwnPr'
  +'operty(p)) continue;'#10'    const type = _constantTypes[p];'#10'    switch'
  +' (type) {'#10'      case ''Number'':'#10'      case ''Integer'':'#10'      '
  +'case ''Float'':'#10'      case ''Boolean'':'#10'      case ''Array(2)'':'#10
  +'      case ''Array(3)'':'#10'      case ''Array(4)'':'#10'        if (incom'
  +'ingConstants.hasOwnProperty(p)) {'#10'          console.warn(''constant '' '
  +'+ p + '' of type '' + type + '' cannot be resigned'');'#10'        }'#10'  '
  +'      continue;'#10'    }'#10'    if (!incomingConstants.hasOwnProperty(p))'
  +' {'#10'      throw new Error(''constant '' + p + '' not found'');'#10'    }'
  +#10'    _constants[p] = incomingConstants[p];'#10'  }'#10'  const kernel = ('
  +'function() {'#10'${cpuKernel._kernelString}'#10'  })'#10'    .apply({ ${thi'
  +'sProperties.join(''\n'')} });'#10'  ${ beforeReturn.join(''\n'') }'#10'  re'
  +'turn kernel;'#10'}`;'#10'}'#10#10'module.exports = {'#10'  cpuKernelString'
  +#10'};'#10'},{"../../utils":114}],8:[function(require,module,exports){'#10'c'
  +'onst { Kernel } = require(''../kernel'');'#10'const { FunctionBuilder } = r'
  +'equire(''../function-builder'');'#10'const { CPUFunctionNode } = require('''
  +'./function-node'');'#10'const { utils } = require(''../../utils'');'#10'con'
  +'st { cpuKernelString } = require(''./kernel-string'');'#10#10'class CPUKern'
  +'el extends Kernel {'#10'  static getFeatures() {'#10'    return this.featur'
  +'es;'#10'  }'#10'  static get features() {'#10'    return Object.freeze({'#10
  +'      kernelMap: true,'#10'      isIntegerDivisionAccurate: true'#10'    })'
  +';'#10'  }'#10'  static get isSupported() {'#10'    return true;'#10'  }'#10
  +'  static isContextMatch(context) {'#10'    return false;'#10'  }'#10'  stat'
  +'ic get mode() {'#10'    return ''cpu'';'#10'  }'#10#10'  static nativeFunct'
  +'ionArguments() {'#10'    return null;'#10'  }'#10#10'  static nativeFunctio'
  +'nReturnType() {'#10'    throw new Error(`Looking up native function return '
  +'type not supported on ${this.name}`);'#10'  }'#10#10'  static combineKernel'
  +'s(combinedKernel) {'#10'    return combinedKernel;'#10'  }'#10#10'  static '
  +'getSignature(kernel, argumentTypes) {'#10'    return ''cpu'' + (argumentTyp'
  +'es.length > 0 ? '':'' + argumentTypes.join('','') : '''');'#10'  }'#10#10' '
  +' constructor(source, settings) {'#10'    super(source, settings);'#10'    t'
  +'his.mergeSettings(source.settings || settings);'#10#10'    this._imageData '
  +'= null;'#10'    this._colorData = null;'#10'    this._kernelString = null;'
  +#10'    this._prependedString = [];'#10'    this.thread = {'#10'      x: 0,'
  +#10'      y: 0,'#10'      z: 0'#10'    };'#10'    this.translatedSources = n'
  +'ull;'#10'  }'#10#10'  initCanvas() {'#10'    if (typeof document !== ''unde'
  +'fined'') {'#10'      return document.createElement(''canvas'');'#10'    } e'
  ,'lse if (typeof OffscreenCanvas !== ''undefined'') {'#10'      return new Of'
  +'fscreenCanvas(0, 0);'#10'    }'#10'  }'#10#10'  initContext() {'#10'    if '
  +'(!this.canvas) return null;'#10'    return this.canvas.getContext(''2d'');'
  +#10'  }'#10#10'  initPlugins(settings) {'#10'    return [];'#10'  }'#10#10' '
  +' validateSettings(args) {'#10'    if (!this.output || this.output.length =='
  +'= 0) {'#10'      if (args.length !== 1) {'#10'        throw new Error(''Aut'
  +'o output only supported for kernels with only one input'');'#10'      }'#10
  +#10'      const argType = utils.getVariableType(args[0], this.strictIntegers'
  +');'#10'      if (argType === ''Array'') {'#10'        this.output = utils.g'
  +'etDimensions(argType);'#10'      } else if (argType === ''NumberTexture'' |'
  +'| argType === ''ArrayTexture(4)'') {'#10'        this.output = args[0].outp'
  +'ut;'#10'      } else {'#10'        throw new Error(''Auto output not suppor'
  +'ted for input type: '' + argType);'#10'      }'#10'    }'#10#10'    if (thi'
  +'s.graphical) {'#10'      if (this.output.length !== 2) {'#10'        throw '
  +'new Error(''Output must have 2 dimensions on graphical mode'');'#10'      }'
  +#10'    }'#10#10'    this.checkOutput();'#10'  }'#10#10'  translateSource() '
  +'{'#10'    this.leadingReturnStatement = this.output.length > 1 ? ''resultX['
  +'x] = '' : ''result[x] = '';'#10'    if (this.subKernels) {'#10'      const '
  +'followingReturnStatement = [];'#10'      for (let i = 0; i < this.subKernel'
  +'s.length; i++) {'#10'        const {'#10'          name'#10'        } = thi'
  +'s.subKernels[i];'#10'        followingReturnStatement.push(this.output.leng'
  +'th > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\n` : `result_${'
  +' name }[x] = subKernelResult_${ name };\n`);'#10'      }'#10'      this.fol'
  +'lowingReturnStatement = followingReturnStatement.join('''');'#10'    }'#10
  +'    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNod'
  +'e);'#10'    this.translatedSources = functionBuilder.getPrototypes(''kernel'
  +''');'#10'    if (!this.graphical && !this.returnType) {'#10'      this.retu'
  +'rnType = functionBuilder.getKernelResultType();'#10'    }'#10'  }'#10#10'  '
  +'build() {'#10'    if (this.built) return;'#10'    this.setupConstants();'#10
  +'    this.setupArguments(arguments);'#10'    this.validateSettings(arguments'
  +');'#10'    this.translateSource();'#10#10'    if (this.graphical) {'#10'   '
  +'   const {'#10'        canvas,'#10'        output'#10'      } = this;'#10' '
  +'     if (!canvas) {'#10'        throw new Error(''no canvas available for u'
  +'sing graphical output'');'#10'      }'#10'      const width = output[0];'#10
  +'      const height = output[1] || 1;'#10'      canvas.width = width;'#10'  '
  +'    canvas.height = height;'#10'      this._imageData = this.context.create'
  +'ImageData(width, height);'#10'      this._colorData = new Uint8ClampedArray'
  +'(width * height * 4);'#10'    }'#10#10'    const kernelString = this.getKer'
  +'nelString();'#10'    this.kernelString = kernelString;'#10#10'    if (this.'
  +'debug) {'#10'      console.log(''Function output:'');'#10'      console.log'
  +'(kernelString);'#10'    }'#10#10'    try {'#10'      this.run = new Functio'
  +'n([], kernelString).bind(this)();'#10'    } catch (e) {'#10'      console.e'
  +'rror(''An error occurred compiling the javascript: '', e);'#10'    }'#10'  '
  +'  this.buildSignature(arguments);'#10'    this.built = true;'#10'  }'#10#10
  +'  color(r, g, b, a) {'#10'    if (typeof a === ''undefined'') {'#10'      a'
  +' = 1;'#10'    }'#10#10'    r = Math.floor(r * 255);'#10'    g = Math.floor('
  +'g * 255);'#10'    b = Math.floor(b * 255);'#10'    a = Math.floor(a * 255);'
  +#10#10'    const width = this.output[0];'#10'    const height = this.output['
  +'1];'#10#10'    const x = this.thread.x;'#10'    const y = height - this.thr'
  +'ead.y - 1;'#10#10'    const index = x + y * width;'#10#10'    this._colorDa'
  +'ta[index * 4 + 0] = r;'#10'    this._colorData[index * 4 + 1] = g;'#10'    '
  +'this._colorData[index * 4 + 2] = b;'#10'    this._colorData[index * 4 + 3] '
  +'= a;'#10'  }'#10#10'  getKernelString() {'#10'    if (this._kernelString !='
  +'= null) return this._kernelString;'#10#10'    let kernelThreadString = null'
  +';'#10'    let {'#10'      translatedSources'#10'    } = this;'#10'    if (t'
  +'ranslatedSources.length > 1) {'#10'      translatedSources = translatedSour'
  +'ces.filter(fn => {'#10'        if (/^function/.test(fn)) return fn;'#10'   '
  +'     kernelThreadString = fn;'#10'        return false;'#10'      });'#10' '
  +'   } else {'#10'      kernelThreadString = translatedSources.shift();'#10' '
  +'   }'#10'    return this._kernelString = `  const LOOP_MAX = ${ this._getLo'
  +'opMaxString() };'#10'  ${ this.injectedNative || '''' }'#10'  const _this ='
  +' this;'#10'  ${ this._resultKernelHeader() }'#10'  ${ this._processConstant'
  +'s() }'#10'  return (${ this.argumentNames.map(argumentName => ''user_'' + a'
  +'rgumentName).join('', '') }) => {'#10'    ${ this._prependedString.join('''
  ,''') }'#10'    ${ this._earlyThrows() }'#10'    ${ this._processArguments() '
  +'}'#10'    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString)'
  +' : this._resultKernelBody(kernelThreadString) }'#10'    ${ translatedSource'
  +'s.length > 0 ? translatedSources.join(''\n'') : '''' }'#10'  };`;'#10'  }'
  +#10#10'  toString() {'#10'    return cpuKernelString(this);'#10'  }'#10#10' '
  +' _getLoopMaxString() {'#10'    return ('#10'      this.loopMaxIterations ?'
  +#10'      ` ${ parseInt(this.loopMaxIterations) };` :'#10'      '' 1000;'''
  +#10'    );'#10'  }'#10#10'  _processConstants() {'#10'    if (!this.constant'
  +'s) return '''';'#10#10'    const result = [];'#10'    for (let p in this.co'
  +'nstants) {'#10'      const type = this.constantTypes[p];'#10'      switch ('
  +'type) {'#10'        case ''HTMLCanvas'':'#10'        case ''HTMLImage'':'#10
  +'        case ''HTMLVideo'':'#10'          result.push(`    const constants_'
  +'${p} = this._mediaTo2DArray(this.constants.${p});\n`);'#10'          break;'
  +#10'        case ''HTMLImageArray'':'#10'          result.push(`    const co'
  +'nstants_${p} = this._imageTo3DArray(this.constants.${p});\n`);'#10'        '
  +'  break;'#10'        case ''Input'':'#10'          result.push(`    const c'
  +'onstants_${p} = this.constants.${p}.value;\n`);'#10'          break;'#10'  '
  +'      default:'#10'          result.push(`    const constants_${p} = this.c'
  +'onstants.${p};\n`);'#10'      }'#10'    }'#10'    return result.join('''');'
  +#10'  }'#10#10'  _earlyThrows() {'#10'    if (this.graphical) return '''';'
  +#10'    if (this.immutable) return '''';'#10'    if (!this.pipeline) return '
  +''''';'#10'    const arrayArguments = [];'#10'    for (let i = 0; i < this.a'
  +'rgumentTypes.length; i++) {'#10'      if (this.argumentTypes[i] === ''Array'
  +''') {'#10'        arrayArguments.push(this.argumentNames[i]);'#10'      }'
  +#10'    }'#10'    if (arrayArguments.length === 0) return '''';'#10'    cons'
  +'t checks = [];'#10'    for (let i = 0; i < arrayArguments.length; i++) {'#10
  +'      const argumentName = arrayArguments[i];'#10'      const checkSubKerne'
  +'ls = this._mapSubKernels(subKernel => `user_${argumentName} === result_${su'
  +'bKernel.name}`).join('' || '');'#10'      checks.push(`user_${argumentName}'
  +' === result${checkSubKernels ? ` || ${checkSubKernels}` : ''''}`);'#10'    '
  +'}'#10'    return `if (${checks.join('' || '')}) throw new Error(''Source an'
  +'d destination arrays are the same.  Use immutable = true'');`;'#10'  }'#10
  +#10'  _processArguments() {'#10'    const result = [];'#10'    for (let i = '
  +'0; i < this.argumentTypes.length; i++) {'#10'      const variableName = `us'
  +'er_${this.argumentNames[i]}`;'#10'      switch (this.argumentTypes[i]) {'#10
  +'        case ''HTMLCanvas'':'#10'        case ''HTMLImage'':'#10'        ca'
  +'se ''HTMLVideo'':'#10'          result.push(`    ${variableName} = this._me'
  +'diaTo2DArray(${variableName});\n`);'#10'          break;'#10'        case '
  +'''HTMLImageArray'':'#10'          result.push(`    ${variableName} = this._'
  +'imageTo3DArray(${variableName});\n`);'#10'          break;'#10'        case'
  +' ''Input'':'#10'          result.push(`    ${variableName} = ${variableName'
  +'}.value;\n`);'#10'          break;'#10'        case ''ArrayTexture(1)'':'#10
  +'        case ''ArrayTexture(2)'':'#10'        case ''ArrayTexture(3)'':'#10
  +'        case ''ArrayTexture(4)'':'#10'        case ''NumberTexture'':'#10' '
  +'       case ''MemoryOptimizedNumberTexture'':'#10'          result.push(`'
  +#10'    if (${variableName}.toArray) {'#10'      if (!_this.textureCache) {'
  +#10'        _this.textureCache = [];'#10'        _this.arrayCache = [];'#10
  +'      }'#10'      const textureIndex = _this.textureCache.indexOf(${variabl'
  +'eName});'#10'      if (textureIndex !== -1) {'#10'        ${variableName} ='
  +' _this.arrayCache[textureIndex];'#10'      } else {'#10'        _this.textu'
  +'reCache.push(${variableName});'#10'        ${variableName} = ${variableName'
  +'}.toArray();'#10'        _this.arrayCache.push(${variableName});'#10'      '
  +'}'#10'    }`);'#10'          break;'#10'      }'#10'    }'#10'    return re'
  +'sult.join('''');'#10'  }'#10#10'  _mediaTo2DArray(media) {'#10'    const ca'
  +'nvas = this.canvas;'#10'    const width = media.width > 0 ? media.width : m'
  +'edia.videoWidth;'#10'    const height = media.height > 0 ? media.height : m'
  +'edia.videoHeight;'#10'    if (canvas.width < width) {'#10'      canvas.widt'
  +'h = width;'#10'    }'#10'    if (canvas.height < height) {'#10'      canvas'
  +'.height = height;'#10'    }'#10'    const ctx = this.context;'#10'    ctx.d'
  +'rawImage(media, 0, 0, width, height);'#10'    const pixelsData = ctx.getIma'
  +'geData(0, 0, width, height).data;'#10'    const imageArray = new Array(heig'
  +'ht);'#10'    let index = 0;'#10'    for (let y = height - 1; y >= 0; y--) {'
  +#10'      const row = imageArray[y] = new Array(width);'#10'      for (let x'
  +' = 0; x < width; x++) {'#10'        const pixel = new Float32Array(4);'#10
  ,'        pixel[0] = pixelsData[index++] / 255; '#10'        pixel[1] = pixel'
  +'sData[index++] / 255; '#10'        pixel[2] = pixelsData[index++] / 255; '
  +#10'        pixel[3] = pixelsData[index++] / 255; '#10'        row[x] = pixe'
  +'l;'#10'      }'#10'    }'#10'    return imageArray;'#10'  }'#10#10'  getPix'
  +'els(flip) {'#10'    const [width, height] = this.output;'#10'    return fli'
  +'p ? utils.flipPixels(this._imageData.data, width, height) : this._imageData'
  +'.data.slice(0);'#10'  }'#10#10'  _imageTo3DArray(images) {'#10'    const im'
  +'agesArray = new Array(images.length);'#10'    for (let i = 0; i < images.le'
  +'ngth; i++) {'#10'      imagesArray[i] = this._mediaTo2DArray(images[i]);'#10
  +'    }'#10'    return imagesArray;'#10'  }'#10#10'  _resultKernelHeader() {'
  +#10'    if (this.graphical) return '''';'#10'    if (this.immutable) return '
  +''''';'#10'    if (!this.pipeline) return '''';'#10'    switch (this.output.'
  +'length) {'#10'      case 1:'#10'        return this._mutableKernel1DResults'
  +'();'#10'      case 2:'#10'        return this._mutableKernel2DResults();'#10
  +'      case 3:'#10'        return this._mutableKernel3DResults();'#10'    }'
  +#10'  }'#10#10'  _resultKernelBody(kernelString) {'#10'    switch (this.outp'
  +'ut.length) {'#10'      case 1:'#10'        return (!this.immutable && this.'
  +'pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmu'
  +'tableKernel1DLoop(kernelString)) + this._kernelOutput();'#10'      case 2:'
  +#10'        return (!this.immutable && this.pipeline ? this._resultMutableKe'
  +'rnel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString))'
  +' + this._kernelOutput();'#10'      case 3:'#10'        return (!this.immuta'
  +'ble && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this'
  +'._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();'#10'  '
  +'    default:'#10'        throw new Error(''unsupported size kernel'');'#10
  +'    }'#10'  }'#10#10'  _graphicalKernelBody(kernelThreadString) {'#10'    s'
  +'witch (this.output.length) {'#10'      case 2:'#10'        return this._gra'
  +'phicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();'#10'     '
  +' default:'#10'        throw new Error(''unsupported size kernel'');'#10'   '
  +' }'#10'  }'#10#10'  _graphicalOutput() {'#10'    return `'#10'    this._ima'
  +'geData.data.set(this._colorData);'#10'    this.context.putImageData(this._i'
  +'mageData, 0, 0);'#10'    return;`'#10'  }'#10#10'  _getKernelResultTypeCons'
  +'tructorString() {'#10'    switch (this.returnType) {'#10'      case ''Liter'
  +'alInteger'':'#10'      case ''Number'':'#10'      case ''Integer'':'#10'   '
  +'   case ''Float'':'#10'        return ''Float32Array'';'#10'      case ''Ar'
  +'ray(2)'':'#10'      case ''Array(3)'':'#10'      case ''Array(4)'':'#10'   '
  +'     return ''Array'';'#10'      default:'#10'        if (this.graphical) {'
  +#10'          return ''Float32Array'';'#10'        }'#10'        throw new E'
  +'rror(`unhandled returnType ${ this.returnType }`);'#10'    }'#10'  }'#10#10
  +'  _resultImmutableKernel1DLoop(kernelString) {'#10'    const constructorStr'
  +'ing = this._getKernelResultTypeConstructorString();'#10'    return `  const'
  +' outputX = _this.output[0];'#10'    const result = new ${constructorString}'
  +'(outputX);'#10'    ${ this._mapSubKernels(subKernel => `const result_${ sub'
  +'Kernel.name } = new ${constructorString}(outputX);\n`).join(''    '') }'#10
  +'    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.n'
  +'ame };\n`).join(''    '') }'#10'    for (let x = 0; x < outputX; x++) {'#10
  +'      this.thread.x = x;'#10'      this.thread.y = 0;'#10'      this.thread'
  +'.z = 0;'#10'      ${ kernelString }'#10'    }`;'#10'  }'#10#10'  _mutableKe'
  +'rnel1DResults() {'#10'    const constructorString = this._getKernelResultTy'
  +'peConstructorString();'#10'    return `  const outputX = _this.output[0];'
  +#10'    const result = new ${constructorString}(outputX);'#10'    ${ this._m'
  +'apSubKernels(subKernel => `const result_${ subKernel.name } = new ${constru'
  +'ctorString}(outputX);\n`).join(''    '') }'#10'    ${ this._mapSubKernels(s'
  +'ubKernel => `let subKernelResult_${ subKernel.name };\n`).join(''    '') }`'
  +';'#10'  }'#10#10'  _resultMutableKernel1DLoop(kernelString) {'#10'    retur'
  +'n `  const outputX = _this.output[0];'#10'    for (let x = 0; x < outputX; '
  +'x++) {'#10'      this.thread.x = x;'#10'      this.thread.y = 0;'#10'      '
  +'this.thread.z = 0;'#10'      ${ kernelString }'#10'    }`;'#10'  }'#10#10' '
  +' _resultImmutableKernel2DLoop(kernelString) {'#10'    const constructorStri'
  +'ng = this._getKernelResultTypeConstructorString();'#10'    return `  const '
  +'outputX = _this.output[0];'#10'    const outputY = _this.output[1];'#10'   '
  +' const result = new Array(outputY);'#10'    ${ this._mapSubKernels(subKerne'
  +'l => `const result_${ subKernel.name } = new Array(outputY);\n`).join(''   '
  +' '') }'#10'    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ '
  ,'subKernel.name };\n`).join(''    '') }'#10'    for (let y = 0; y < outputY;'
  +' y++) {'#10'      this.thread.z = 0;'#10'      this.thread.y = y;'#10'     '
  +' const resultX = result[y] = new ${constructorString}(outputX);'#10'      $'
  +'{ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = res'
  +'ult_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join('''''
  +') }'#10'      for (let x = 0; x < outputX; x++) {'#10'        this.thread.x'
  +' = x;'#10'        ${ kernelString }'#10'      }'#10'    }`;'#10'  }'#10#10
  +'  _mutableKernel2DResults() {'#10'    const constructorString = this._getKe'
  +'rnelResultTypeConstructorString();'#10'    return `  const outputX = _this.'
  +'output[0];'#10'    const outputY = _this.output[1];'#10'    const result = '
  +'new Array(outputY);'#10'    ${ this._mapSubKernels(subKernel => `const resu'
  +'lt_${ subKernel.name } = new Array(outputY);\n`).join(''    '') }'#10'    $'
  +'{ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name }'
  +';\n`).join(''    '') }'#10'    for (let y = 0; y < outputY; y++) {'#10'    '
  +'  const resultX = result[y] = new ${constructorString}(outputX);'#10'      '
  +'${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = re'
  +'sult_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join('''
  +''') }'#10'    }`;'#10'  }'#10#10'  _resultMutableKernel2DLoop(kernelString)'
  +' {'#10'    const constructorString = this._getKernelResultTypeConstructorSt'
  +'ring();'#10'    return `  const outputX = _this.output[0];'#10'    const ou'
  +'tputY = _this.output[1];'#10'    for (let y = 0; y < outputY; y++) {'#10'  '
  +'    this.thread.z = 0;'#10'      this.thread.y = y;'#10'      const resultX'
  +' = result[y];'#10'      ${ this._mapSubKernels(subKernel => `const resultX_'
  +'${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString'
  +'}(outputX);\n`).join('''') }'#10'      for (let x = 0; x < outputX; x++) {'
  +#10'        this.thread.x = x;'#10'        ${ kernelString }'#10'      }'#10
  +'    }`;'#10'  }'#10#10'  _graphicalKernel2DLoop(kernelString) {'#10'    ret'
  +'urn `  const outputX = _this.output[0];'#10'    const outputY = _this.outpu'
  +'t[1];'#10'    for (let y = 0; y < outputY; y++) {'#10'      this.thread.z ='
  +' 0;'#10'      this.thread.y = y;'#10'      for (let x = 0; x < outputX; x++'
  +') {'#10'        this.thread.x = x;'#10'        ${ kernelString }'#10'      '
  +'}'#10'    }`;'#10'  }'#10#10'  _resultImmutableKernel3DLoop(kernelString) {'
  +#10'    const constructorString = this._getKernelResultTypeConstructorString'
  +'();'#10'    return `  const outputX = _this.output[0];'#10'    const output'
  +'Y = _this.output[1];'#10'    const outputZ = _this.output[2];'#10'    const'
  +' result = new Array(outputZ);'#10'    ${ this._mapSubKernels(subKernel => `'
  +'const result_${ subKernel.name } = new Array(outputZ);\n`).join(''    '') }'
  +#10'    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKerne'
  +'l.name };\n`).join(''    '') }'#10'    for (let z = 0; z < outputZ; z++) {'
  +#10'      this.thread.z = z;'#10'      const resultY = result[z] = new Array'
  +'(outputY);'#10'      ${ this._mapSubKernels(subKernel => `const resultY_${ '
  +'subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\n`).jo'
  +'in(''      '') }'#10'      for (let y = 0; y < outputY; y++) {'#10'        '
  +'this.thread.y = y;'#10'        const resultX = resultY[y] = new ${construct'
  +'orString}(outputX);'#10'        ${ this._mapSubKernels(subKernel => `const '
  +'resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${construc'
  +'torString}(outputX);\n`).join(''        '') }'#10'        for (let x = 0; x'
  +' < outputX; x++) {'#10'          this.thread.x = x;'#10'          ${ kernel'
  +'String }'#10'        }'#10'      }'#10'    }`;'#10'  }'#10#10'  _mutableKer'
  +'nel3DResults() {'#10'    const constructorString = this._getKernelResultTyp'
  +'eConstructorString();'#10'    return `  const outputX = _this.output[0];'#10
  +'    const outputY = _this.output[1];'#10'    const outputZ = _this.output[2'
  +'];'#10'    const result = new Array(outputZ);'#10'    ${ this._mapSubKernel'
  +'s(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\n`).'
  +'join(''    '') }'#10'    ${ this._mapSubKernels(subKernel => `let subKernel'
  +'Result_${ subKernel.name };\n`).join(''    '') }'#10'    for (let z = 0; z '
  +'< outputZ; z++) {'#10'      const resultY = result[z] = new Array(outputY);'
  +#10'      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.na'
  +'me } = result_${subKernel.name}[z] = new Array(outputY);\n`).join(''      '
  +''') }'#10'      for (let y = 0; y < outputY; y++) {'#10'        const resul'
  +'tX = resultY[y] = new ${constructorString}(outputX);'#10'        ${ this._m'
  +'apSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${su'
  +'bKernel.name}[y] = new ${constructorString}(outputX);\n`).join(''        '''
  +') }'#10'      }'#10'    }`;'#10'  }'#10#10'  _resultMutableKernel3DLoop(ker'
  ,'nelString) {'#10'    return `  const outputX = _this.output[0];'#10'    con'
  +'st outputY = _this.output[1];'#10'    const outputZ = _this.output[2];'#10
  +'    for (let z = 0; z < outputZ; z++) {'#10'      this.thread.z = z;'#10'  '
  +'    const resultY = result[z];'#10'      for (let y = 0; y < outputY; y++) '
  +'{'#10'        this.thread.y = y;'#10'        const resultX = resultY[y];'#10
  +'        for (let x = 0; x < outputX; x++) {'#10'          this.thread.x = x'
  +';'#10'          ${ kernelString }'#10'        }'#10'      }'#10'    }`;'#10
  +'  }'#10#10'  _kernelOutput() {'#10'    if (!this.subKernels) {'#10'      re'
  +'turn ''\n    return result;'';'#10'    }'#10'    return `\n    return {'#10
  +'      result: result,'#10'      ${ this.subKernels.map(subKernel => `${ sub'
  +'Kernel.property }: result_${ subKernel.name }`).join('',\n      '') }'#10' '
  +'   };`;'#10'  }'#10#10'  _mapSubKernels(fn) {'#10'    return this.subKernel'
  +'s === null ? [''''] :'#10'      this.subKernels.map(fn);'#10'  }'#10#10'  d'
  +'estroy(removeCanvasReference) {'#10'    if (removeCanvasReference) {'#10'  '
  +'    delete this.canvas;'#10'    }'#10'  }'#10#10'  static destroyContext(co'
  +'ntext) {}'#10#10'  toJSON() {'#10'    const json = super.toJSON();'#10'    '
  +'json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJS'
  +'ON();'#10'    return json;'#10'  }'#10#10'  setOutput(output) {'#10'    sup'
  +'er.setOutput(output);'#10'    const [width, height] = this.output;'#10'    '
  +'if (this.graphical) {'#10'      this._imageData = this.context.createImageD'
  +'ata(width, height);'#10'      this._colorData = new Uint8ClampedArray(width'
  +' * height * 4);'#10'    }'#10'  }'#10#10'  prependString(value) {'#10'    i'
  +'f (this._kernelString) throw new Error(''Kernel already built'');'#10'    t'
  +'his._prependedString.push(value);'#10'  }'#10#10'  hasPrependString(value) '
  +'{'#10'    return this._prependedString.indexOf(value) > -1;'#10'  }'#10'}'
  +#10#10'module.exports = {'#10'  CPUKernel'#10'};'#10'},{"../../utils":114,".'
  +'./function-builder":9,"../kernel":36,"./function-node":6,"./kernel-string":'
  +'7}],9:[function(require,module,exports){'#10'class FunctionBuilder {'#10'  '
  +'static fromKernel(kernel, FunctionNode, extraNodeOptions) {'#10'    const {'
  +#10'      kernelArguments,'#10'      kernelConstants,'#10'      argumentName'
  +'s,'#10'      argumentSizes,'#10'      argumentBitRatios,'#10'      constant'
  +'s,'#10'      constantBitRatios,'#10'      debug,'#10'      loopMaxIteration'
  +'s,'#10'      nativeFunctions,'#10'      output,'#10'      optimizeFloatMemo'
  +'ry,'#10'      precision,'#10'      plugins,'#10'      source,'#10'      sub'
  +'Kernels,'#10'      functions,'#10'      leadingReturnStatement,'#10'      f'
  +'ollowingReturnStatement,'#10'      dynamicArguments,'#10'      dynamicOutpu'
  +'t,'#10'      onIstanbulCoverageVariable,'#10'      removeIstanbulCoverage,'
  +#10'    } = kernel;'#10#10'    const argumentTypes = new Array(kernelArgumen'
  +'ts.length);'#10'    const constantTypes = {};'#10#10'    for (let i = 0; i '
  +'< kernelArguments.length; i++) {'#10'      argumentTypes[i] = kernelArgumen'
  +'ts[i].type;'#10'    }'#10#10'    for (let i = 0; i < kernelConstants.length'
  +'; i++) {'#10'      const kernelConstant = kernelConstants[i];'#10'      con'
  +'stantTypes[kernelConstant.name] = kernelConstant.type;'#10'    }'#10#10'   '
  +' const needsArgumentType = (functionName, index) => {'#10'      return func'
  +'tionBuilder.needsArgumentType(functionName, index);'#10'    };'#10#10'    c'
  +'onst assignArgumentType = (functionName, index, type) => {'#10'      functi'
  +'onBuilder.assignArgumentType(functionName, index, type);'#10'    };'#10#10
  +'    const lookupReturnType = (functionName, ast, requestingNode) => {'#10' '
  +'     return functionBuilder.lookupReturnType(functionName, ast, requestingN'
  +'ode);'#10'    };'#10#10'    const lookupFunctionArgumentTypes = (functionNa'
  +'me) => {'#10'      return functionBuilder.lookupFunctionArgumentTypes(funct'
  +'ionName);'#10'    };'#10#10'    const lookupFunctionArgumentName = (functio'
  +'nName, argumentIndex) => {'#10'      return functionBuilder.lookupFunctionA'
  +'rgumentName(functionName, argumentIndex);'#10'    };'#10#10'    const looku'
  +'pFunctionArgumentBitRatio = (functionName, argumentName) => {'#10'      ret'
  +'urn functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentNa'
  +'me);'#10'    };'#10#10'    const triggerImplyArgumentType = (functionName, '
  +'i, argumentType, requestingNode) => {'#10'      functionBuilder.assignArgum'
  +'entType(functionName, i, argumentType, requestingNode);'#10'    };'#10#10' '
  +'   const triggerImplyArgumentBitRatio = (functionName, argumentName, callee'
  +'FunctionName, argumentIndex) => {'#10'      functionBuilder.assignArgumentB'
  +'itRatio(functionName, argumentName, calleeFunctionName, argumentIndex);'#10
  +'    };'#10#10'    const onFunctionCall = (functionName, calleeFunctionName,'
  +' args) => {'#10'      functionBuilder.trackFunctionCall(functionName, calle'
  ,'eFunctionName, args);'#10'    };'#10#10'    const onNestedFunction = (ast, '
  +'returnType) => {'#10'      const argumentNames = [];'#10'      for (let i ='
  +' 0; i < ast.params.length; i++) {'#10'        argumentNames.push(ast.params'
  +'[i].name);'#10'      }'#10'      const nestedFunction = new FunctionNode(nu'
  +'ll, Object.assign({}, nodeOptions, {'#10'        returnType: null,'#10'    '
  +'    ast,'#10'        name: ast.id.name,'#10'        argumentNames,'#10'    '
  +'    lookupReturnType,'#10'        lookupFunctionArgumentTypes,'#10'        '
  +'lookupFunctionArgumentName,'#10'        lookupFunctionArgumentBitRatio,'#10
  +'        needsArgumentType,'#10'        assignArgumentType,'#10'        trig'
  +'gerImplyArgumentType,'#10'        triggerImplyArgumentBitRatio,'#10'       '
  +' onFunctionCall,'#10'      }));'#10'      nestedFunction.traceFunctionAST(a'
  +'st);'#10'      functionBuilder.addFunctionNode(nestedFunction);'#10'    };'
  +#10#10'    const nodeOptions = Object.assign({'#10'      isRootKernel: false'
  +','#10'      onNestedFunction,'#10'      lookupReturnType,'#10'      lookupF'
  +'unctionArgumentTypes,'#10'      lookupFunctionArgumentName,'#10'      looku'
  +'pFunctionArgumentBitRatio,'#10'      needsArgumentType,'#10'      assignArg'
  +'umentType,'#10'      triggerImplyArgumentType,'#10'      triggerImplyArgume'
  +'ntBitRatio,'#10'      onFunctionCall,'#10'      onIstanbulCoverageVariable:'
  +' onIstanbulCoverageVariable ? (name) => onIstanbulCoverageVariable(name, ke'
  +'rnel) : null,'#10'      removeIstanbulCoverage,'#10'      optimizeFloatMemo'
  +'ry,'#10'      precision,'#10'      constants,'#10'      constantTypes,'#10
  +'      constantBitRatios,'#10'      debug,'#10'      loopMaxIterations,'#10
  +'      output,'#10'      plugins,'#10'      dynamicArguments,'#10'      dyna'
  +'micOutput,'#10'    }, extraNodeOptions || {});'#10#10'    const rootNodeOpt'
  +'ions = Object.assign({}, nodeOptions, {'#10'      isRootKernel: true,'#10' '
  +'     name: ''kernel'','#10'      argumentNames,'#10'      argumentTypes,'#10
  +'      argumentSizes,'#10'      argumentBitRatios,'#10'      leadingReturnSt'
  +'atement,'#10'      followingReturnStatement,'#10'    });'#10#10'    if (typ'
  +'eof source === ''object'' && source.functionNodes) {'#10'      return new F'
  +'unctionBuilder().fromJSON(source.functionNodes, FunctionNode);'#10'    }'#10
  +#10'    const rootNode = new FunctionNode(source, rootNodeOptions);'#10#10' '
  +'   let functionNodes = null;'#10'    if (functions) {'#10'      functionNod'
  +'es = functions.map((fn) => new FunctionNode(fn.source, {'#10'        return'
  +'Type: fn.returnType,'#10'        argumentTypes: fn.argumentTypes,'#10'     '
  +'   output,'#10'        plugins,'#10'        constants,'#10'        constant'
  +'Types,'#10'        constantBitRatios,'#10'        optimizeFloatMemory,'#10
  +'        precision,'#10'        lookupReturnType,'#10'        lookupFunction'
  +'ArgumentTypes,'#10'        lookupFunctionArgumentName,'#10'        lookupFu'
  +'nctionArgumentBitRatio,'#10'        needsArgumentType,'#10'        assignAr'
  +'gumentType,'#10'        triggerImplyArgumentType,'#10'        triggerImplyA'
  +'rgumentBitRatio,'#10'        onFunctionCall,'#10'        onNestedFunction,'
  +#10'        onIstanbulCoverageVariable: onIstanbulCoverageVariable ? (name) '
  +'=> onIstanbulCoverageVariable(name, kernel) : null,'#10'        removeIstan'
  +'bulCoverage,'#10'      }));'#10'    }'#10#10'    let subKernelNodes = null;'
  +#10'    if (subKernels) {'#10'      subKernelNodes = subKernels.map((subKern'
  +'el) => {'#10'        const { name, source } = subKernel;'#10'        return'
  +' new FunctionNode(source, Object.assign({}, nodeOptions, {'#10'          na'
  +'me,'#10'          isSubKernel: true,'#10'          isRootKernel: false,'#10
  +'        }));'#10'      });'#10'    }'#10#10'    const functionBuilder = new'
  +' FunctionBuilder({'#10'      kernel,'#10'      rootNode,'#10'      function'
  +'Nodes,'#10'      nativeFunctions,'#10'      subKernelNodes'#10'    });'#10
  +#10'    return functionBuilder;'#10'  }'#10#10'  constructor(settings) {'#10
  +'    settings = settings || {};'#10'    this.kernel = settings.kernel;'#10' '
  +'   this.rootNode = settings.rootNode;'#10'    this.functionNodes = settings'
  +'.functionNodes || [];'#10'    this.subKernelNodes = settings.subKernelNodes'
  +' || [];'#10'    this.nativeFunctions = settings.nativeFunctions || [];'#10
  +'    this.functionMap = {};'#10'    this.nativeFunctionNames = [];'#10'    t'
  +'his.lookupChain = [];'#10'    this.functionNodeDependencies = {};'#10'    t'
  +'his.functionCalls = {};'#10#10'    if (this.rootNode) {'#10'      this.func'
  +'tionMap[''kernel''] = this.rootNode;'#10'    }'#10#10'    if (this.function'
  +'Nodes) {'#10'      for (let i = 0; i < this.functionNodes.length; i++) {'#10
  +'        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i'
  +'];'#10'      }'#10'    }'#10#10'    if (this.subKernelNodes) {'#10'      fo'
  +'r (let i = 0; i < this.subKernelNodes.length; i++) {'#10'        this.funct'
  ,'ionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];'#10'      }'
  +#10'    }'#10#10'    if (this.nativeFunctions) {'#10'      for (let i = 0; i'
  +' < this.nativeFunctions.length; i++) {'#10'        const nativeFunction = t'
  +'his.nativeFunctions[i];'#10'        this.nativeFunctionNames.push(nativeFun'
  +'ction.name);'#10'      }'#10'    }'#10'  }'#10#10'  addFunctionNode(functio'
  +'nNode) {'#10'    if (!functionNode.name) throw new Error(''functionNode.nam'
  +'e needs set'');'#10'    this.functionMap[functionNode.name] = functionNode;'
  +#10'    if (functionNode.isRootKernel) {'#10'      this.rootNode = functionN'
  +'ode;'#10'    }'#10'  }'#10#10'  traceFunctionCalls(functionName, retList) {'
  +#10'    functionName = functionName || ''kernel'';'#10'    retList = retList'
  +' || [];'#10#10'    if (this.nativeFunctionNames.indexOf(functionName) > -1)'
  +' {'#10'      if (retList.indexOf(functionName) === -1) {'#10'        retLis'
  +'t.push(functionName);'#10'      }'#10'      return retList;'#10'    }'#10#10
  +'    const functionNode = this.functionMap[functionName];'#10'    if (functi'
  +'onNode) {'#10'      const functionIndex = retList.indexOf(functionName);'#10
  +'      if (functionIndex === -1) {'#10'        retList.push(functionName);'
  +#10'        functionNode.toString(); '#10'        for (let i = 0; i < functi'
  +'onNode.calledFunctions.length; ++i) {'#10'          this.traceFunctionCalls'
  +'(functionNode.calledFunctions[i], retList);'#10'        }'#10'      } else '
  +'{'#10'        const dependantFunctionName = retList.splice(functionIndex, 1'
  +')[0];'#10'        retList.push(dependantFunctionName);'#10'      }'#10'    '
  +'}'#10#10'    return retList;'#10'  }'#10#10'  getPrototypeString(functionNa'
  +'me) {'#10'    return this.getPrototypes(functionName).join(''\n'');'#10'  }'
  +#10#10'  getPrototypes(functionName) {'#10'    if (this.rootNode) {'#10'    '
  +'  this.rootNode.toString();'#10'    }'#10'    if (functionName) {'#10'     '
  +' return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functio'
  +'nName, []).reverse());'#10'    }'#10'    return this.getPrototypesFromFunct'
  +'ionNames(Object.keys(this.functionMap));'#10'  }'#10#10'  getStringFromFunc'
  +'tionNames(functionList) {'#10'    const ret = [];'#10'    for (let i = 0; i'
  +' < functionList.length; ++i) {'#10'      const node = this.functionMap[func'
  +'tionList[i]];'#10'      if (node) {'#10'        ret.push(this.functionMap[f'
  +'unctionList[i]].toString());'#10'      }'#10'    }'#10'    return ret.join('
  +'''\n'');'#10'  }'#10#10'  getPrototypesFromFunctionNames(functionList) {'#10
  +'    const ret = [];'#10'    for (let i = 0; i < functionList.length; ++i) {'
  +#10'      const functionName = functionList[i];'#10'      const functionInde'
  +'x = this.nativeFunctionNames.indexOf(functionName);'#10'      if (functionI'
  +'ndex > -1) {'#10'        ret.push(this.nativeFunctions[functionIndex].sourc'
  +'e);'#10'        continue;'#10'      }'#10'      const node = this.functionM'
  +'ap[functionName];'#10'      if (node) {'#10'        ret.push(node.toString('
  +'));'#10'      }'#10'    }'#10'    return ret;'#10'  }'#10#10'  toJSON() {'
  +#10'    return this.traceFunctionCalls(this.rootNode.name).reverse().map(nam'
  +'e => {'#10'      const nativeIndex = this.nativeFunctions.indexOf(name);'#10
  +'      if (nativeIndex > -1) {'#10'        return {'#10'          name,'#10
  +'          source: this.nativeFunctions[nativeIndex].source'#10'        };'
  +#10'      } else if (this.functionMap[name]) {'#10'        return this.funct'
  +'ionMap[name].toJSON();'#10'      } else {'#10'        throw new Error(`func'
  +'tion ${ name } not found`);'#10'      }'#10'    });'#10'  }'#10#10'  fromJS'
  +'ON(jsonFunctionNodes, FunctionNode) {'#10'    this.functionMap = {};'#10'  '
  +'  for (let i = 0; i < jsonFunctionNodes.length; i++) {'#10'      const json'
  +'FunctionNode = jsonFunctionNodes[i];'#10'      this.functionMap[jsonFunctio'
  +'nNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionN'
  +'ode.settings);'#10'    }'#10'    return this;'#10'  }'#10#10'  getString(fu'
  +'nctionName) {'#10'    if (functionName) {'#10'      return this.getStringFr'
  +'omFunctionNames(this.traceFunctionCalls(functionName).reverse());'#10'    }'
  +#10'    return this.getStringFromFunctionNames(Object.keys(this.functionMap)'
  +');'#10'  }'#10#10'  lookupReturnType(functionName, ast, requestingNode) {'
  +#10'    if (ast.type !== ''CallExpression'') {'#10'      throw new Error(`ex'
  +'pected ast type of "CallExpression", but is ${ ast.type }`);'#10'    }'#10
  +'    if (this._isNativeFunction(functionName)) {'#10'      return this._look'
  +'upNativeFunctionReturnType(functionName);'#10'    } else if (this._isFuncti'
  +'on(functionName)) {'#10'      const node = this._getFunction(functionName);'
  +#10'      if (node.returnType) {'#10'        return node.returnType;'#10'   '
  +'   } else {'#10'        for (let i = 0; i < this.lookupChain.length; i++) {'
  +#10'          if (this.lookupChain[i].ast === ast) {'#10'            if (nod'
  ,'e.argumentTypes.length === 0 && ast.arguments.length > 0) {'#10'           '
  +'   const args = ast.arguments;'#10'              for (let j = 0; j < args.l'
  +'ength; j++) {'#10'                this.lookupChain.push({'#10'             '
  +'     name: requestingNode.name,'#10'                  ast: args[i],'#10'   '
  +'               requestingNode'#10'                });'#10'                n'
  +'ode.argumentTypes[j] = requestingNode.getType(args[j]);'#10'               '
  +' this.lookupChain.pop();'#10'              }'#10'              return node.'
  +'returnType = node.getType(node.getJsAST());'#10'            }'#10#10'      '
  +'      throw new Error(''circlical logic detected!'');'#10'          }'#10' '
  +'       }'#10'        this.lookupChain.push({'#10'          name: requesting'
  +'Node.name,'#10'          ast,'#10'          requestingNode'#10'        });'
  +#10'        const type = node.getType(node.getJsAST());'#10'        this.loo'
  +'kupChain.pop();'#10'        return node.returnType = type;'#10'      }'#10
  +'    }'#10#10'    return null;'#10'  }'#10#10'  _getFunction(functionName) {'
  +#10'    if (!this._isFunction(functionName)) {'#10'      new Error(`Function'
  +' ${functionName} not found`);'#10'    }'#10'    return this.functionMap[fun'
  +'ctionName];'#10'  }'#10#10'  _isFunction(functionName) {'#10'    return Boo'
  +'lean(this.functionMap[functionName]);'#10'  }'#10#10'  _getNativeFunction(f'
  +'unctionName) {'#10'    for (let i = 0; i < this.nativeFunctions.length; i++'
  +') {'#10'      if (this.nativeFunctions[i].name === functionName) return thi'
  +'s.nativeFunctions[i];'#10'    }'#10'    return null;'#10'  }'#10#10'  _isNa'
  +'tiveFunction(functionName) {'#10'    return Boolean(this._getNativeFunction'
  +'(functionName));'#10'  }'#10#10'  _lookupNativeFunctionReturnType(functionN'
  +'ame) {'#10'    let nativeFunction = this._getNativeFunction(functionName);'
  +#10'    if (nativeFunction) {'#10'      return nativeFunction.returnType;'#10
  +'    }'#10'    throw new Error(`Native function ${ functionName } not found`'
  +');'#10'  }'#10#10'  lookupFunctionArgumentTypes(functionName) {'#10'    if '
  +'(this._isNativeFunction(functionName)) {'#10'      return this._getNativeFu'
  +'nction(functionName).argumentTypes;'#10'    } else if (this._isFunction(fun'
  +'ctionName)) {'#10'      return this._getFunction(functionName).argumentType'
  +'s;'#10'    }'#10'    return null;'#10'  }'#10#10'  lookupFunctionArgumentNa'
  +'me(functionName, argumentIndex) {'#10'    return this._getFunction(function'
  +'Name).argumentNames[argumentIndex];'#10'  }'#10#10'  lookupFunctionArgument'
  +'BitRatio(functionName, argumentName) {'#10'    if (!this._isFunction(functi'
  +'onName)) {'#10'      throw new Error(''function not found'');'#10'    }'#10
  +'    if (this.rootNode.name === functionName) {'#10'      const i = this.roo'
  +'tNode.argumentNames.indexOf(argumentName);'#10'      if (i !== -1) {'#10'  '
  +'      return this.rootNode.argumentBitRatios[i];'#10'      }'#10'    }'#10
  +'    const node = this._getFunction(functionName);'#10'    const i = node.ar'
  +'gumentNames.indexOf(argumentName);'#10'    if (i === -1) {'#10'      throw '
  +'new Error(''argument not found'');'#10'    }'#10'    const bitRatio = node.'
  +'argumentBitRatios[i];'#10'    if (typeof bitRatio !== ''number'') {'#10'   '
  +'   throw new Error(''argument bit ratio not found'');'#10'    }'#10'    ret'
  +'urn bitRatio;'#10'  }'#10#10'  needsArgumentType(functionName, i) {'#10'   '
  +' if (!this._isFunction(functionName)) return false;'#10'    const fnNode = '
  +'this._getFunction(functionName);'#10'    return !fnNode.argumentTypes[i];'
  +#10'  }'#10#10'  assignArgumentType(functionName, i, argumentType, requestin'
  +'gNode) {'#10'    if (!this._isFunction(functionName)) return;'#10'    const'
  +' fnNode = this._getFunction(functionName);'#10'    if (!fnNode.argumentType'
  +'s[i]) {'#10'      fnNode.argumentTypes[i] = argumentType;'#10'    }'#10'  }'
  +#10#10'  assignArgumentBitRatio(functionName, argumentName, calleeFunctionNa'
  +'me, argumentIndex) {'#10'    const node = this._getFunction(functionName);'
  +#10'    if (this._isNativeFunction(calleeFunctionName)) return null;'#10'   '
  +' const calleeNode = this._getFunction(calleeFunctionName);'#10'    const i '
  +'= node.argumentNames.indexOf(argumentName);'#10'    if (i === -1) {'#10'   '
  +'   throw new Error(`Argument ${argumentName} not found in arguments from fu'
  +'nction ${functionName}`);'#10'    }'#10'    const bitRatio = node.argumentB'
  +'itRatios[i];'#10'    if (typeof bitRatio !== ''number'') {'#10'      throw '
  +'new Error(`Bit ratio for argument ${argumentName} not found in function ${f'
  +'unctionName}`);'#10'    }'#10'    if (!calleeNode.argumentBitRatios) {'#10
  +'      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.len'
  +'gth);'#10'    }'#10'    const calleeBitRatio = calleeNode.argumentBitRatios'
  +'[i];'#10'    if (typeof calleeBitRatio === ''number'') {'#10'      if (call'
  +'eeBitRatio !== bitRatio) {'#10'        throw new Error(`Incompatible bit ra'
  ,'tio found at function ${functionName} at argument ${argumentName}`);'#10'  '
  +'    }'#10'      return calleeBitRatio;'#10'    }'#10'    calleeNode.argumen'
  +'tBitRatios[i] = bitRatio;'#10'    return bitRatio;'#10'  }'#10#10'  trackFu'
  +'nctionCall(functionName, calleeFunctionName, args) {'#10'    if (!this.func'
  +'tionNodeDependencies[functionName]) {'#10'      this.functionNodeDependenci'
  +'es[functionName] = new Set();'#10'      this.functionCalls[functionName] = '
  +'[];'#10'    }'#10'    this.functionNodeDependencies[functionName].add(calle'
  +'eFunctionName);'#10'    this.functionCalls[functionName].push(args);'#10'  '
  +'}'#10#10'  getKernelResultType() {'#10'    return this.rootNode.returnType '
  +'|| this.rootNode.getType(this.rootNode.ast);'#10'  }'#10#10'  getSubKernelR'
  +'esultType(index) {'#10'    const subKernelNode = this.subKernelNodes[index]'
  +';'#10'    let called = false;'#10'    for (let functionCallIndex = 0; funct'
  +'ionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {'
  +#10'      const functionCall = this.rootNode.functionCalls[functionCallIndex'
  +'];'#10'      if (functionCall.ast.callee.name === subKernelNode.name) {'#10
  +'        called = true;'#10'      }'#10'    }'#10'    if (!called) {'#10'   '
  +'   throw new Error(`SubKernel ${ subKernelNode.name } never called by kerne'
  +'l`);'#10'    }'#10'    return subKernelNode.returnType || subKernelNode.get'
  +'Type(subKernelNode.getJsAST());'#10'  }'#10#10'  getReturnTypes() {'#10'   '
  +' const result = {'#10'      [this.rootNode.name]: this.rootNode.getType(thi'
  +'s.rootNode.ast),'#10'    };'#10'    const list = this.traceFunctionCalls(th'
  +'is.rootNode.name);'#10'    for (let i = 0; i < list.length; i++) {'#10'    '
  +'  const functionName = list[i];'#10'      const functionNode = this.functio'
  +'nMap[functionName];'#10'      result[functionName] = functionNode.getType(f'
  +'unctionNode.ast);'#10'    }'#10'    return result;'#10'  }'#10'}'#10#10'mod'
  +'ule.exports = {'#10'  FunctionBuilder'#10'};'#10'},{}],10:[function(require'
  +',module,exports){'#10'const acorn = require(''acorn'');'#10'const { utils }'
  +' = require(''../utils'');'#10'const { FunctionTracer } = require(''./functi'
  +'on-tracer'');'#10#10'class FunctionNode {'#10'  constructor(source, setting'
  +'s) {'#10'    if (!source && !settings.ast) {'#10'      throw new Error(''so'
  +'urce parameter is missing'');'#10'    }'#10'    settings = settings || {};'
  +#10'    this.source = source;'#10'    this.ast = null;'#10'    this.name = t'
  +'ypeof source === ''string'' ? settings.isRootKernel ?'#10'      ''kernel'' '
  +':'#10'      (settings.name || utils.getFunctionNameFromString(source)) : nu'
  +'ll;'#10'    this.calledFunctions = [];'#10'    this.constants = {};'#10'   '
  +' this.constantTypes = {};'#10'    this.constantBitRatios = {};'#10'    this'
  +'.isRootKernel = false;'#10'    this.isSubKernel = false;'#10'    this.debug'
  +' = null;'#10'    this.functions = null;'#10'    this.identifiers = null;'#10
  +'    this.contexts = null;'#10'    this.functionCalls = null;'#10'    this.s'
  +'tates = [];'#10'    this.needsArgumentType = null;'#10'    this.assignArgum'
  +'entType = null;'#10'    this.lookupReturnType = null;'#10'    this.lookupFu'
  +'nctionArgumentTypes = null;'#10'    this.lookupFunctionArgumentBitRatio = n'
  +'ull;'#10'    this.triggerImplyArgumentType = null;'#10'    this.triggerImpl'
  +'yArgumentBitRatio = null;'#10'    this.onNestedFunction = null;'#10'    thi'
  +'s.onFunctionCall = null;'#10'    this.optimizeFloatMemory = null;'#10'    t'
  +'his.precision = null;'#10'    this.loopMaxIterations = null;'#10'    this.a'
  +'rgumentNames = (typeof this.source === ''string'' ? utils.getArgumentNamesF'
  +'romString(this.source) : null);'#10'    this.argumentTypes = [];'#10'    th'
  +'is.argumentSizes = [];'#10'    this.argumentBitRatios = null;'#10'    this.'
  +'returnType = null;'#10'    this.output = [];'#10'    this.plugins = null;'
  +#10'    this.leadingReturnStatement = null;'#10'    this.followingReturnStat'
  +'ement = null;'#10'    this.dynamicOutput = null;'#10'    this.dynamicArgume'
  +'nts = null;'#10'    this.strictTypingChecking = false;'#10'    this.fixInte'
  +'gerDivisionAccuracy = null;'#10'    this.onIstanbulCoverageVariable = null;'
  +#10'    this.removeIstanbulCoverage = false;'#10#10'    if (settings) {'#10
  +'      for (const p in settings) {'#10'        if (!settings.hasOwnProperty('
  +'p)) continue;'#10'        if (!this.hasOwnProperty(p)) continue;'#10'      '
  +'  this[p] = settings[p];'#10'      }'#10'    }'#10#10'    this.literalTypes'
  +' = {};'#10#10'    this.validate();'#10'    this._string = null;'#10'    thi'
  +'s._internalVariableNames = {};'#10'  }'#10#10'  validate() {'#10'    if (ty'
  +'peof this.source !== ''string'' && !this.ast) {'#10'      throw new Error('
  +'''this.source not a string'');'#10'    }'#10#10'    if (!this.ast && !utils'
  +'.isFunctionString(this.source)) {'#10'      throw new Error(''this.source n'
  +'ot a function string'');'#10'    }'#10#10'    if (!this.name) {'#10'      t'
  ,'hrow new Error(''this.name could not be set'');'#10'    }'#10#10'    if (th'
  +'is.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentN'
  +'ames.length) {'#10'      throw new Error(`argumentTypes count of ${ this.ar'
  +'gumentTypes.length } exceeds ${ this.argumentNames.length }`);'#10'    }'#10
  +#10'    if (this.output.length < 1) {'#10'      throw new Error(''this.outpu'
  +'t is not big enough'');'#10'    }'#10'  }'#10#10'  isIdentifierConstant(nam'
  +'e) {'#10'    if (!this.constants) return false;'#10'    return this.constan'
  +'ts.hasOwnProperty(name);'#10'  }'#10#10'  isInput(argumentName) {'#10'    r'
  +'eturn this.argumentTypes[this.argumentNames.indexOf(argumentName)] === ''In'
  +'put'';'#10'  }'#10#10'  pushState(state) {'#10'    this.states.push(state);'
  +#10'  }'#10#10'  popState(state) {'#10'    if (this.state !== state) {'#10' '
  +'     throw new Error(`Cannot popState ${ state } when in ${ this.state }`);'
  +#10'    }'#10'    this.states.pop();'#10'  }'#10#10'  isState(state) {'#10' '
  +'   return this.state === state;'#10'  }'#10#10'  get state() {'#10'    retu'
  +'rn this.states[this.states.length - 1];'#10'  }'#10#10'  astMemberExpressio'
  +'nUnroll(ast) {'#10'    if (ast.type === ''Identifier'') {'#10'      return '
  +'ast.name;'#10'    } else if (ast.type === ''ThisExpression'') {'#10'      r'
  +'eturn ''this'';'#10'    }'#10#10'    if (ast.type === ''MemberExpression'')'
  +' {'#10'      if (ast.object && ast.property) {'#10'        if (ast.object.h'
  +'asOwnProperty(''name'') && ast.object.name[0] === ''_'') {'#10'          re'
  +'turn this.astMemberExpressionUnroll(ast.property);'#10'        }'#10#10'   '
  +'     return ('#10'          this.astMemberExpressionUnroll(ast.object) +'#10
  +'          ''.'' +'#10'          this.astMemberExpressionUnroll(ast.property'
  +')'#10'        );'#10'      }'#10'    }'#10#10'    if (ast.hasOwnProperty('''
  +'expressions'')) {'#10'      const firstExpression = ast.expressions[0];'#10
  +'      if (firstExpression.type === ''Literal'' && firstExpression.value ==='
  +' 0 && ast.expressions.length === 2) {'#10'        return this.astMemberExpr'
  +'essionUnroll(ast.expressions[1]);'#10'      }'#10'    }'#10#10'    throw th'
  +'is.astErrorOutput(''Unknown astMemberExpressionUnroll'', ast);'#10'  }'#10
  +#10'  getJsAST(inParser) {'#10'    if (this.ast) {'#10'      return this.ast'
  +';'#10'    }'#10'    if (typeof this.source === ''object'') {'#10'      this'
  +'.traceFunctionAST(this.source);'#10'      return this.ast = this.source;'#10
  +'    }'#10#10'    inParser = inParser || acorn;'#10'    if (inParser === nul'
  +'l) {'#10'      throw new Error(''Missing JS to AST parser'');'#10'    }'#10
  +#10'    const ast = Object.freeze(inParser.parse(`const parser_${ this.name '
  +'} = ${ this.source };`, {'#10'      locations: true'#10'    }));'#10'    co'
  +'nst functionAST = ast.body[0].declarations[0].init;'#10'    this.traceFunct'
  +'ionAST(functionAST);'#10#10'    if (!ast) {'#10'      throw new Error(''Fai'
  +'led to parse JS code'');'#10'    }'#10#10'    return this.ast = functionAST'
  +';'#10'  }'#10#10'  traceFunctionAST(ast) {'#10'    const { contexts, declar'
  +'ations, functions, identifiers, functionCalls } = new FunctionTracer(ast);'
  +#10'    this.contexts = contexts;'#10'    this.identifiers = identifiers;'#10
  +'    this.functionCalls = functionCalls;'#10'    this.functions = functions;'
  +#10'    for (let i = 0; i < declarations.length; i++) {'#10'      const decl'
  +'aration = declarations[i];'#10'      const { ast, inForLoopInit, inForLoopT'
  +'est } = declaration;'#10'      const { init } = ast;'#10'      const depend'
  +'encies = this.getDependencies(init);'#10'      let valueType = null;'#10#10
  +'      if (inForLoopInit && inForLoopTest) {'#10'        valueType = ''Integ'
  +'er'';'#10'      } else {'#10'        if (init) {'#10'          const realTy'
  +'pe = this.getType(init);'#10'          switch (realType) {'#10'            '
  +'case ''Integer'':'#10'            case ''Float'':'#10'            case ''Nu'
  +'mber'':'#10'              if (init.type === ''MemberExpression'') {'#10'   '
  +'             valueType = realType;'#10'              } else {'#10'         '
  +'       valueType = ''Number'';'#10'              }'#10'              break;'
  +#10'            case ''LiteralInteger'':'#10'              valueType = ''Num'
  +'ber'';'#10'              break;'#10'            default:'#10'              '
  +'valueType = realType;'#10'          }'#10'        }'#10'      }'#10'      d'
  +'eclaration.valueType = valueType;'#10'      declaration.dependencies = depe'
  +'ndencies;'#10'      declaration.isSafe = this.isSafeDependencies(dependenci'
  +'es);'#10'    }'#10#10'    for (let i = 0; i < functions.length; i++) {'#10
  +'      this.onNestedFunction(functions[i]);'#10'    }'#10'  }'#10#10'  getDe'
  +'claration(ast) {'#10'    for (let i = 0; i < this.identifiers.length; i++) '
  +'{'#10'      const identifier = this.identifiers[i];'#10'      if (ast === i'
  +'dentifier.ast) {'#10'        return identifier.declaration;'#10'      }'#10
  ,'    }'#10'    return null;'#10'  }'#10#10'  getVariableType(ast) {'#10'    '
  +'if (ast.type !== ''Identifier'') {'#10'      throw new Error(`ast of ${ast.'
  +'type} not "Identifier"`);'#10'    }'#10'    let type = null;'#10'    const '
  +'argumentIndex = this.argumentNames.indexOf(ast.name);'#10'    if (argumentI'
  +'ndex === -1) {'#10'      const declaration = this.getDeclaration(ast);'#10
  +'      if (declaration) {'#10'        return declaration.valueType;'#10'    '
  +'  }'#10'    } else {'#10'      const argumentType = this.argumentTypes[argu'
  +'mentIndex];'#10'      if (argumentType) {'#10'        type = argumentType;'
  +#10'      }'#10'    }'#10'    if (!type && this.strictTypingChecking) {'#10
  +'      throw new Error(`Declaration of ${name} not found`);'#10'    }'#10'  '
  +'  return type;'#10'  }'#10#10'  getLookupType(type) {'#10'    if (!typeLook'
  +'upMap.hasOwnProperty(type)) {'#10'      throw new Error(`unknown typeLookup'
  +'Map ${ type }`);'#10'    }'#10'    return typeLookupMap[type];'#10'  }'#10
  +#10'  getConstantType(constantName) {'#10'    if (this.constantTypes[constan'
  +'tName]) {'#10'      const type = this.constantTypes[constantName];'#10'    '
  +'  if (type === ''Float'') {'#10'        return ''Number'';'#10'      } else'
  +' {'#10'        return type;'#10'      }'#10'    }'#10'    throw new Error(`'
  +'Type for constant "${ constantName }" not declared`);'#10'  }'#10#10'  toSt'
  +'ring() {'#10'    if (this._string) return this._string;'#10'    return this'
  +'._string = this.astGeneric(this.getJsAST(), []).join('''').trim();'#10'  }'
  +#10#10'  toJSON() {'#10'    const settings = {'#10'      source: this.source'
  +','#10'      name: this.name,'#10'      constants: this.constants,'#10'     '
  +' constantTypes: this.constantTypes,'#10'      isRootKernel: this.isRootKern'
  +'el,'#10'      isSubKernel: this.isSubKernel,'#10'      debug: this.debug,'
  +#10'      output: this.output,'#10'      loopMaxIterations: this.loopMaxIter'
  +'ations,'#10'      argumentNames: this.argumentNames,'#10'      argumentType'
  +'s: this.argumentTypes,'#10'      argumentSizes: this.argumentSizes,'#10'   '
  +'   returnType: this.returnType,'#10'      leadingReturnStatement: this.lead'
  +'ingReturnStatement,'#10'      followingReturnStatement: this.followingRetur'
  +'nStatement,'#10'    };'#10#10'    return {'#10'      ast: this.ast,'#10'   '
  +'   settings'#10'    };'#10'  }'#10#10'  getType(ast) {'#10'    if (Array.is'
  +'Array(ast)) {'#10'      return this.getType(ast[ast.length - 1]);'#10'    }'
  +#10'    switch (ast.type) {'#10'      case ''BlockStatement'':'#10'        r'
  +'eturn this.getType(ast.body);'#10'      case ''ArrayExpression'':'#10'     '
  +'   return `Array(${ ast.elements.length })`;'#10'      case ''Literal'':'#10
  +'        const literalKey = this.astKey(ast);'#10'        if (this.literalTy'
  +'pes[literalKey]) {'#10'          return this.literalTypes[literalKey];'#10
  +'        }'#10'        if (Number.isInteger(ast.value)) {'#10'          retu'
  +'rn ''LiteralInteger'';'#10'        } else if (ast.value === true || ast.val'
  +'ue === false) {'#10'          return ''Boolean'';'#10'        } else {'#10
  +'          return ''Number'';'#10'        }'#10'        case ''AssignmentExp'
  +'ression'':'#10'          return this.getType(ast.left);'#10'        case '''
  +'CallExpression'':'#10'          if (this.isAstMathFunction(ast)) {'#10'    '
  +'        return ''Number'';'#10'          }'#10'          if (!ast.callee ||'
  +' !ast.callee.name) {'#10'            if (ast.callee.type === ''SequenceExpr'
  +'ession'' && ast.callee.expressions[ast.callee.expressions.length - 1].prope'
  +'rty.name) {'#10'              const functionName = ast.callee.expressions[a'
  +'st.callee.expressions.length - 1].property.name;'#10'              this.inf'
  +'erArgumentTypesIfNeeded(functionName, ast.arguments);'#10'              ret'
  +'urn this.lookupReturnType(functionName, ast, this);'#10'            }'#10' '
  +'           if (this.getVariableSignature(ast.callee, true) === ''this.color'
  +''') {'#10'              return null;'#10'            }'#10'            thro'
  +'w this.astErrorOutput(''Unknown call expression'', ast);'#10'          }'#10
  +'          if (ast.callee && ast.callee.name) {'#10'            const functi'
  +'onName = ast.callee.name;'#10'            this.inferArgumentTypesIfNeeded(f'
  +'unctionName, ast.arguments);'#10'            return this.lookupReturnType(f'
  +'unctionName, ast, this);'#10'          }'#10'          throw this.astErrorO'
  +'utput(`Unhandled getType Type "${ ast.type }"`, ast);'#10'        case ''Lo'
  +'gicalExpression'':'#10'          return ''Boolean'';'#10'        case ''Bin'
  +'aryExpression'':'#10'          switch (ast.operator) {'#10'            case'
  +' ''%'':'#10'            case ''/'':'#10'              if (this.fixIntegerDi'
  +'visionAccuracy) {'#10'                return ''Number'';'#10'              '
  +'} else {'#10'                break;'#10'              }'#10'              c'
  +'ase ''>'':'#10'              case ''<'':'#10'                return ''Boole'
  ,'an'';'#10'              case ''&'':'#10'              case ''|'':'#10'     '
  +'         case ''^'':'#10'              case ''<<'':'#10'              case '
  +'''>>'':'#10'              case ''>>>'':'#10'                return ''Intege'
  +'r'';'#10'          }'#10'          const type = this.getType(ast.left);'#10
  +'          if (this.isState(''skip-literal-correction'')) return type;'#10' '
  +'         if (type === ''LiteralInteger'') {'#10'            const rightType'
  +' = this.getType(ast.right);'#10'            if (rightType === ''LiteralInte'
  +'ger'') {'#10'              if (ast.left.value % 1 === 0) {'#10'            '
  +'    return ''Integer'';'#10'              } else {'#10'                retu'
  +'rn ''Float'';'#10'              }'#10'            }'#10'            return '
  +'rightType;'#10'          }'#10'          return typeLookupMap[type] || type'
  +';'#10'        case ''UpdateExpression'':'#10'          return this.getType('
  +'ast.argument);'#10'        case ''UnaryExpression'':'#10'          if (ast.'
  +'operator === ''~'') {'#10'            return ''Integer'';'#10'          }'
  +#10'          return this.getType(ast.argument);'#10'        case ''Variable'
  +'Declaration'': {'#10'          const declarations = ast.declarations;'#10' '
  +'         let lastType;'#10'          for (let i = 0; i < declarations.lengt'
  +'h; i++) {'#10'            const declaration = declarations[i];'#10'        '
  +'    lastType = this.getType(declaration);'#10'          }'#10'          if '
  +'(!lastType) {'#10'            throw this.astErrorOutput(`Unable to find typ'
  +'e for declaration`, ast);'#10'          }'#10'          return lastType;'#10
  +'        }'#10'        case ''VariableDeclarator'':'#10'          const decl'
  +'aration = this.getDeclaration(ast.id);'#10'          if (!declaration) {'#10
  +'            throw this.astErrorOutput(`Unable to find declarator`, ast);'#10
  +'          }'#10#10'          if (!declaration.valueType) {'#10'            '
  +'throw this.astErrorOutput(`Unable to find declarator valueType`, ast);'#10
  +'          }'#10#10'          return declaration.valueType;'#10'        case'
  +' ''Identifier'':'#10'          if (ast.name === ''Infinity'') {'#10'       '
  +'     return ''Number'';'#10'          }'#10'          if (this.isAstVariabl'
  +'e(ast)) {'#10'            const signature = this.getVariableSignature(ast);'
  +#10'            if (signature === ''value'') {'#10'              return this'
  +'.getCheckVariableType(ast);'#10'            }'#10'          }'#10'         '
  +' const origin = this.findIdentifierOrigin(ast);'#10'          if (origin &&'
  +' origin.init) {'#10'            return this.getType(origin.init);'#10'     '
  +'     }'#10'          return null;'#10'        case ''ReturnStatement'':'#10
  +'          return this.getType(ast.argument);'#10'        case ''MemberExpre'
  +'ssion'':'#10'          if (this.isAstMathFunction(ast)) {'#10'            s'
  +'witch (ast.property.name) {'#10'              case ''ceil'':'#10'          '
  +'      return ''Integer'';'#10'              case ''floor'':'#10'           '
  +'     return ''Integer'';'#10'              case ''round'':'#10'            '
  +'    return ''Integer'';'#10'            }'#10'            return ''Number'''
  +';'#10'          }'#10'          if (this.isAstVariable(ast)) {'#10'        '
  +'    const variableSignature = this.getVariableSignature(ast);'#10'         '
  +'   switch (variableSignature) {'#10'              case ''value[]'':'#10'   '
  +'             return this.getLookupType(this.getCheckVariableType(ast.object'
  +'));'#10'              case ''value[][]'':'#10'                return this.g'
  +'etLookupType(this.getCheckVariableType(ast.object.object));'#10'           '
  +'   case ''value[][][]'':'#10'                return this.getLookupType(this'
  +'.getCheckVariableType(ast.object.object.object));'#10'              case '''
  +'value[][][][]'':'#10'                return this.getLookupType(this.getChec'
  +'kVariableType(ast.object.object.object.object));'#10'              case ''v'
  +'alue.thread.value'':'#10'              case ''this.thread.value'':'#10'    '
  +'            return ''Integer'';'#10'              case ''this.output.value'
  +''':'#10'                return this.dynamicOutput ? ''Integer'' : ''Literal'
  +'Integer'';'#10'              case ''this.constants.value'':'#10'           '
  +'     return this.getConstantType(ast.property.name);'#10'              case'
  +' ''this.constants.value[]'':'#10'                return this.getLookupType('
  +'this.getConstantType(ast.object.property.name));'#10'              case ''t'
  +'his.constants.value[][]'':'#10'                return this.getLookupType(th'
  +'is.getConstantType(ast.object.object.property.name));'#10'              cas'
  +'e ''this.constants.value[][][]'':'#10'                return this.getLookup'
  +'Type(this.getConstantType(ast.object.object.object.property.name));'#10'   '
  +'           case ''this.constants.value[][][][]'':'#10'                retur'
  +'n this.getLookupType(this.getConstantType(ast.object.object.object.object.p'
  ,'roperty.name));'#10'              case ''fn()[]'':'#10'              case '
  +'''fn()[][]'':'#10'              case ''fn()[][][]'':'#10'                re'
  +'turn this.getLookupType(this.getType(ast.object));'#10'              case '
  +'''value.value'':'#10'                if (this.isAstMathVariable(ast)) {'#10
  +'                  return ''Number'';'#10'                }'#10'            '
  +'    switch (ast.property.name) {'#10'                  case ''r'':'#10'    '
  +'              case ''g'':'#10'                  case ''b'':'#10'           '
  +'       case ''a'':'#10'                    return this.getLookupType(this.g'
  +'etCheckVariableType(ast.object));'#10'                }'#10'               '
  +' case ''[][]'':'#10'                  return ''Number'';'#10'            }'
  +#10'            throw this.astErrorOutput(''Unhandled getType MemberExpressi'
  +'on'', ast);'#10'          }'#10'          throw this.astErrorOutput(''Unhan'
  +'dled getType MemberExpression'', ast);'#10'        case ''ConditionalExpres'
  +'sion'':'#10'          return this.getType(ast.consequent);'#10'        case'
  +' ''FunctionDeclaration'':'#10'        case ''FunctionExpression'':'#10'    '
  +'      const lastReturn = this.findLastReturn(ast.body);'#10'          if (l'
  +'astReturn) {'#10'            return this.getType(lastReturn);'#10'         '
  +' }'#10'          return null;'#10'        case ''IfStatement'':'#10'       '
  +'   return this.getType(ast.consequent);'#10'        case ''SequenceExpressi'
  +'on'':'#10'          return this.getType(ast.expressions[ast.expressions.len'
  +'gth - 1]);'#10'        default:'#10'          throw this.astErrorOutput(`Un'
  +'handled getType Type "${ ast.type }"`, ast);'#10'    }'#10'  }'#10#10'  get'
  +'CheckVariableType(ast) {'#10'    const type = this.getVariableType(ast);'#10
  +'    if (!type) {'#10'      throw this.astErrorOutput(`${ast.type} is not de'
  +'fined`, ast);'#10'    }'#10'    return type;'#10'  }'#10#10'  inferArgument'
  +'TypesIfNeeded(functionName, args) {'#10'    for (let i = 0; i < args.length'
  +'; i++) {'#10'      if (!this.needsArgumentType(functionName, i)) continue;'
  +#10'      const type = this.getType(args[i]);'#10'      if (!type) {'#10'   '
  +'     throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);'
  +#10'      }'#10'      this.assignArgumentType(functionName, i, type);'#10'  '
  +'  }'#10'  }'#10#10'  isAstMathVariable(ast) {'#10'    const mathProperties '
  +'= ['#10'      ''E'','#10'      ''PI'','#10'      ''SQRT2'','#10'      ''SQR'
  +'T1_2'','#10'      ''LN2'','#10'      ''LN10'','#10'      ''LOG2E'','#10'   '
  +'   ''LOG10E'','#10'    ];'#10'    return ast.type === ''MemberExpression'' '
  +'&&'#10'      ast.object && ast.object.type === ''Identifier'' &&'#10'      '
  +'ast.object.name === ''Math'' &&'#10'      ast.property &&'#10'      ast.pro'
  +'perty.type === ''Identifier'' &&'#10'      mathProperties.indexOf(ast.prope'
  +'rty.name) > -1;'#10'  }'#10#10'  isAstMathFunction(ast) {'#10'    const mat'
  +'hFunctions = ['#10'      ''abs'','#10'      ''acos'','#10'      ''acosh'','
  +#10'      ''asin'','#10'      ''asinh'','#10'      ''atan'','#10'      ''ata'
  +'n2'','#10'      ''atanh'','#10'      ''cbrt'','#10'      ''ceil'','#10'    '
  +'  ''clz32'','#10'      ''cos'','#10'      ''cosh'','#10'      ''expm1'','#10
  +'      ''exp'','#10'      ''floor'','#10'      ''fround'','#10'      ''imul'
  +''','#10'      ''log'','#10'      ''log2'','#10'      ''log10'','#10'      '
  +'''log1p'','#10'      ''max'','#10'      ''min'','#10'      ''pow'','#10'   '
  +'   ''random'','#10'      ''round'','#10'      ''sign'','#10'      ''sin'','
  +#10'      ''sinh'','#10'      ''sqrt'','#10'      ''tan'','#10'      ''tanh'
  +''','#10'      ''trunc'','#10'    ];'#10'    return ast.type === ''CallExpre'
  +'ssion'' &&'#10'      ast.callee &&'#10'      ast.callee.type === ''MemberEx'
  +'pression'' &&'#10'      ast.callee.object &&'#10'      ast.callee.object.ty'
  +'pe === ''Identifier'' &&'#10'      ast.callee.object.name === ''Math'' &&'
  +#10'      ast.callee.property &&'#10'      ast.callee.property.type === ''Id'
  +'entifier'' &&'#10'      mathFunctions.indexOf(ast.callee.property.name) > -'
  +'1;'#10'  }'#10#10'  isAstVariable(ast) {'#10'    return ast.type === ''Iden'
  +'tifier'' || ast.type === ''MemberExpression'';'#10'  }'#10#10'  isSafe(ast)'
  +' {'#10'    return this.isSafeDependencies(this.getDependencies(ast));'#10' '
  +' }'#10#10'  isSafeDependencies(dependencies) {'#10'    return dependencies '
  +'&& dependencies.every ? dependencies.every(dependency => dependency.isSafe)'
  +' : true;'#10'  }'#10#10'  getDependencies(ast, dependencies, isNotSafe) {'
  +#10'    if (!dependencies) {'#10'      dependencies = [];'#10'    }'#10'    '
  +'if (!ast) return null;'#10'    if (Array.isArray(ast)) {'#10'      for (let'
  +' i = 0; i < ast.length; i++) {'#10'        this.getDependencies(ast[i], dep'
  +'endencies, isNotSafe);'#10'      }'#10'      return dependencies;'#10'    }'
  +#10'    switch (ast.type) {'#10'      case ''AssignmentExpression'':'#10'   '
  ,'     this.getDependencies(ast.left, dependencies, isNotSafe);'#10'        t'
  +'his.getDependencies(ast.right, dependencies, isNotSafe);'#10'        return'
  +' dependencies;'#10'      case ''ConditionalExpression'':'#10'        this.g'
  +'etDependencies(ast.test, dependencies, isNotSafe);'#10'        this.getDepe'
  +'ndencies(ast.alternate, dependencies, isNotSafe);'#10'        this.getDepen'
  +'dencies(ast.consequent, dependencies, isNotSafe);'#10'        return depend'
  +'encies;'#10'      case ''Literal'':'#10'        dependencies.push({'#10'   '
  +'       origin: ''literal'','#10'          value: ast.value,'#10'          i'
  +'sSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < In'
  +'finity && !isNaN(ast.value)'#10'        });'#10'        break;'#10'      ca'
  +'se ''VariableDeclarator'':'#10'        return this.getDependencies(ast.init'
  +', dependencies, isNotSafe);'#10'      case ''Identifier'':'#10'        cons'
  +'t declaration = this.getDeclaration(ast);'#10'        if (declaration) {'#10
  +'          dependencies.push({'#10'            name: ast.name,'#10'         '
  +'   origin: ''declaration'','#10'            isSafe: isNotSafe ? false : thi'
  +'s.isSafeDependencies(declaration.dependencies),'#10'          });'#10'     '
  +'   } else if (this.argumentNames.indexOf(ast.name) > -1) {'#10'          de'
  +'pendencies.push({'#10'            name: ast.name,'#10'            origin: '
  +'''argument'','#10'            isSafe: false,'#10'          });'#10'        '
  +'} else if (this.strictTypingChecking) {'#10'          throw new Error(`Cann'
  +'ot find identifier origin "${ast.name}"`);'#10'        }'#10'        break;'
  +#10'      case ''FunctionDeclaration'':'#10'        return this.getDependenc'
  +'ies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);'#10
  +'      case ''ReturnStatement'':'#10'        return this.getDependencies(ast'
  +'.argument, dependencies);'#10'      case ''BinaryExpression'':'#10'      ca'
  +'se ''LogicalExpression'':'#10'        isNotSafe = (ast.operator === ''/'' |'
  +'| ast.operator === ''*'');'#10'        this.getDependencies(ast.left, depen'
  +'dencies, isNotSafe);'#10'        this.getDependencies(ast.right, dependenci'
  +'es, isNotSafe);'#10'        return dependencies;'#10'      case ''UnaryExpr'
  +'ession'':'#10'      case ''UpdateExpression'':'#10'        return this.getD'
  +'ependencies(ast.argument, dependencies, isNotSafe);'#10'      case ''Variab'
  +'leDeclaration'':'#10'        return this.getDependencies(ast.declarations, '
  +'dependencies, isNotSafe);'#10'      case ''ArrayExpression'':'#10'        d'
  +'ependencies.push({'#10'          origin: ''declaration'','#10'          isS'
  +'afe: true,'#10'        });'#10'        return dependencies;'#10'      case '
  +'''CallExpression'':'#10'        dependencies.push({'#10'          origin: '
  +'''function'','#10'          isSafe: true,'#10'        });'#10'        retur'
  +'n dependencies;'#10'      case ''MemberExpression'':'#10'        const deta'
  +'ils = this.getMemberExpressionDetails(ast);'#10'        switch (details.sig'
  +'nature) {'#10'          case ''value[]'':'#10'            this.getDependenc'
  +'ies(ast.object, dependencies, isNotSafe);'#10'            break;'#10'      '
  +'    case ''value[][]'':'#10'            this.getDependencies(ast.object.obj'
  +'ect, dependencies, isNotSafe);'#10'            break;'#10'          case '''
  +'value[][][]'':'#10'            this.getDependencies(ast.object.object.objec'
  +'t, dependencies, isNotSafe);'#10'            break;'#10'          case ''th'
  +'is.output.value'':'#10'            if (this.dynamicOutput) {'#10'          '
  +'    dependencies.push({'#10'                name: details.name,'#10'       '
  +'         origin: ''output'','#10'                isSafe: false,'#10'       '
  +'       });'#10'            }'#10'            break;'#10'        }'#10'     '
  +'   if (details) {'#10'          if (details.property) {'#10'            thi'
  +'s.getDependencies(details.property, dependencies, isNotSafe);'#10'         '
  +' }'#10'          if (details.xProperty) {'#10'            this.getDependenc'
  +'ies(details.xProperty, dependencies, isNotSafe);'#10'          }'#10'      '
  +'    if (details.yProperty) {'#10'            this.getDependencies(details.y'
  +'Property, dependencies, isNotSafe);'#10'          }'#10'          if (detai'
  +'ls.zProperty) {'#10'            this.getDependencies(details.zProperty, dep'
  +'endencies, isNotSafe);'#10'          }'#10'          return dependencies;'
  +#10'        }'#10'        case ''SequenceExpression'':'#10'          return '
  +'this.getDependencies(ast.expressions, dependencies, isNotSafe);'#10'       '
  +' default:'#10'          throw this.astErrorOutput(`Unhandled type ${ ast.ty'
  +'pe } in getDependencies`, ast);'#10'    }'#10'    return dependencies;'#10
  +'  }'#10#10'  getVariableSignature(ast, returnRawValue) {'#10'    if (!this.'
  +'isAstVariable(ast)) {'#10'      throw new Error(`ast of type "${ ast.type }'
  +'" is not a variable signature`);'#10'    }'#10'    if (ast.type === ''Ident'
  ,'ifier'') {'#10'      return ''value'';'#10'    }'#10'    const signature = '
  +'[];'#10'    while (true) {'#10'      if (!ast) break;'#10'      if (ast.com'
  +'puted) {'#10'        signature.push(''[]'');'#10'      } else if (ast.type '
  +'=== ''ThisExpression'') {'#10'        signature.unshift(''this'');'#10'    '
  +'  } else if (ast.property && ast.property.name) {'#10'        if ('#10'    '
  +'      ast.property.name === ''x'' ||'#10'          ast.property.name === '''
  +'y'' ||'#10'          ast.property.name === ''z'''#10'        ) {'#10'      '
  +'    signature.unshift(returnRawValue ? ''.'' + ast.property.name : ''.value'
  +''');'#10'        } else if ('#10'          ast.property.name === ''constant'
  +'s'' ||'#10'          ast.property.name === ''thread'' ||'#10'          ast.'
  +'property.name === ''output'''#10'        ) {'#10'          signature.unshif'
  +'t(''.'' + ast.property.name);'#10'        } else {'#10'          signature.'
  +'unshift(returnRawValue ? ''.'' + ast.property.name : ''.value'');'#10'     '
  +'   }'#10'      } else if (ast.name) {'#10'        signature.unshift(returnR'
  +'awValue ? ast.name : ''value'');'#10'      } else if (ast.callee && ast.cal'
  +'lee.name) {'#10'        signature.unshift(returnRawValue ? ast.callee.name '
  +'+ ''()'' : ''fn()'');'#10'      } else if (ast.elements) {'#10'        sign'
  +'ature.unshift(''[]'');'#10'      } else {'#10'        signature.unshift(''u'
  +'nknown'');'#10'      }'#10'      ast = ast.object;'#10'    }'#10#10'    con'
  +'st signatureString = signature.join('''');'#10'    if (returnRawValue) {'#10
  +'      return signatureString;'#10'    }'#10#10'    const allowedExpressions'
  +' = ['#10'      ''value'','#10'      ''value[]'','#10'      ''value[][]'','
  +#10'      ''value[][][]'','#10'      ''value[][][][]'','#10'      ''value.va'
  +'lue'','#10'      ''value.value[]'', '#10'      ''value.value[][]'', '#10'  '
  +'    ''value.thread.value'','#10'      ''this.thread.value'','#10'      ''th'
  +'is.output.value'','#10'      ''this.constants.value'','#10'      ''this.con'
  +'stants.value[]'','#10'      ''this.constants.value[][]'','#10'      ''this.'
  +'constants.value[][][]'','#10'      ''this.constants.value[][][][]'','#10'  '
  +'    ''fn()[]'','#10'      ''fn()[][]'','#10'      ''fn()[][][]'','#10'     '
  +' ''[][]'','#10'    ];'#10'    if (allowedExpressions.indexOf(signatureStrin'
  +'g) > -1) {'#10'      return signatureString;'#10'    }'#10'    return null;'
  +#10'  }'#10#10'  build() {'#10'    return this.toString().length > 0;'#10'  '
  +'}'#10#10'  astGeneric(ast, retArr) {'#10'    if (ast === null) {'#10'      '
  +'throw this.astErrorOutput(''NULL ast'', ast);'#10'    } else {'#10'      if'
  +' (Array.isArray(ast)) {'#10'        for (let i = 0; i < ast.length; i++) {'
  +#10'          this.astGeneric(ast[i], retArr);'#10'        }'#10'        ret'
  +'urn retArr;'#10'      }'#10#10'      switch (ast.type) {'#10'        case '
  +'''FunctionDeclaration'':'#10'          return this.astFunctionDeclaration(a'
  +'st, retArr);'#10'        case ''FunctionExpression'':'#10'          return '
  +'this.astFunctionExpression(ast, retArr);'#10'        case ''ReturnStatement'
  +''':'#10'          return this.astReturnStatement(ast, retArr);'#10'        '
  +'case ''Literal'':'#10'          return this.astLiteral(ast, retArr);'#10'  '
  +'      case ''BinaryExpression'':'#10'          return this.astBinaryExpress'
  +'ion(ast, retArr);'#10'        case ''Identifier'':'#10'          return thi'
  +'s.astIdentifierExpression(ast, retArr);'#10'        case ''AssignmentExpres'
  +'sion'':'#10'          return this.astAssignmentExpression(ast, retArr);'#10
  +'        case ''ExpressionStatement'':'#10'          return this.astExpressi'
  +'onStatement(ast, retArr);'#10'        case ''EmptyStatement'':'#10'        '
  +'  return this.astEmptyStatement(ast, retArr);'#10'        case ''BlockState'
  +'ment'':'#10'          return this.astBlockStatement(ast, retArr);'#10'     '
  +'   case ''IfStatement'':'#10'          return this.astIfStatement(ast, retA'
  +'rr);'#10'        case ''SwitchStatement'':'#10'          return this.astSwi'
  +'tchStatement(ast, retArr);'#10'        case ''BreakStatement'':'#10'       '
  +'   return this.astBreakStatement(ast, retArr);'#10'        case ''ContinueS'
  +'tatement'':'#10'          return this.astContinueStatement(ast, retArr);'#10
  +'        case ''ForStatement'':'#10'          return this.astForStatement(as'
  +'t, retArr);'#10'        case ''WhileStatement'':'#10'          return this.'
  +'astWhileStatement(ast, retArr);'#10'        case ''DoWhileStatement'':'#10
  +'          return this.astDoWhileStatement(ast, retArr);'#10'        case '''
  +'VariableDeclaration'':'#10'          return this.astVariableDeclaration(ast'
  +', retArr);'#10'        case ''VariableDeclarator'':'#10'          return th'
  +'is.astVariableDeclarator(ast, retArr);'#10'        case ''ThisExpression'':'
  +#10'          return this.astThisExpression(ast, retArr);'#10'        case '
  +'''SequenceExpression'':'#10'          return this.astSequenceExpression(ast'
  ,', retArr);'#10'        case ''UnaryExpression'':'#10'          return this.'
  +'astUnaryExpression(ast, retArr);'#10'        case ''UpdateExpression'':'#10
  +'          return this.astUpdateExpression(ast, retArr);'#10'        case '''
  +'LogicalExpression'':'#10'          return this.astLogicalExpression(ast, re'
  +'tArr);'#10'        case ''MemberExpression'':'#10'          return this.ast'
  +'MemberExpression(ast, retArr);'#10'        case ''CallExpression'':'#10'   '
  +'       return this.astCallExpression(ast, retArr);'#10'        case ''Array'
  +'Expression'':'#10'          return this.astArrayExpression(ast, retArr);'#10
  +'        case ''DebuggerStatement'':'#10'          return this.astDebuggerSt'
  +'atement(ast, retArr);'#10'        case ''ConditionalExpression'':'#10'     '
  +'     return this.astConditionalExpression(ast, retArr);'#10'      }'#10#10
  +'      throw this.astErrorOutput(''Unknown ast type : '' + ast.type, ast);'
  +#10'    }'#10'  }'#10'  astErrorOutput(error, ast) {'#10'    if (typeof this'
  +'.source !== ''string'') {'#10'      return new Error(error);'#10'    }'#10
  +#10'    const debugString = utils.getAstString(this.source, ast);'#10'    co'
  +'nst leadingSource = this.source.substr(ast.start);'#10'    const splitLines'
  +' = leadingSource.split(/\n/);'#10'    const lineBefore = splitLines.length '
  +'> 0 ? splitLines[splitLines.length - 1] : 0;'#10'    return new Error(`${er'
  +'ror} on line ${ splitLines.length }, position ${ lineBefore.length }:\n ${ '
  +'debugString }`);'#10'  }'#10#10'  astDebuggerStatement(arrNode, retArr) {'
  +#10'    return retArr;'#10'  }'#10#10'  astConditionalExpression(ast, retArr'
  +') {'#10'    if (ast.type !== ''ConditionalExpression'') {'#10'      throw t'
  +'his.astErrorOutput(''Not a conditional expression'', ast);'#10'    }'#10'  '
  +'  retArr.push(''('');'#10'    this.astGeneric(ast.test, retArr);'#10'    re'
  +'tArr.push(''?'');'#10'    this.astGeneric(ast.consequent, retArr);'#10'    '
  +'retArr.push('':'');'#10'    this.astGeneric(ast.alternate, retArr);'#10'   '
  +' retArr.push('')'');'#10'    return retArr;'#10'  }'#10#10'  astFunction(as'
  +'t, retArr) {'#10'    throw new Error(`"astFunction" not defined on ${ this.'
  +'constructor.name }`);'#10'  }'#10#10'  astFunctionDeclaration(ast, retArr) '
  +'{'#10'    if (this.isChildFunction(ast)) {'#10'      return retArr;'#10'   '
  +' }'#10'    return this.astFunction(ast, retArr);'#10'  }'#10'  astFunctionE'
  +'xpression(ast, retArr) {'#10'    if (this.isChildFunction(ast)) {'#10'     '
  +' return retArr;'#10'    }'#10'    return this.astFunction(ast, retArr);'#10
  +'  }'#10'  isChildFunction(ast) {'#10'    for (let i = 0; i < this.functions'
  +'.length; i++) {'#10'      if (this.functions[i] === ast) {'#10'        retu'
  +'rn true;'#10'      }'#10'    }'#10'    return false;'#10'  }'#10'  astRetur'
  +'nStatement(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  astLiteral(a'
  +'st, retArr) {'#10'    this.literalTypes[this.astKey(ast)] = ''Number'';'#10
  +'    return retArr;'#10'  }'#10'  astBinaryExpression(ast, retArr) {'#10'   '
  +' return retArr;'#10'  }'#10'  astIdentifierExpression(ast, retArr) {'#10'  '
  +'  return retArr;'#10'  }'#10'  astAssignmentExpression(ast, retArr) {'#10' '
  +'   return retArr;'#10'  }'#10'  astExpressionStatement(esNode, retArr) {'#10
  +'    this.astGeneric(esNode.expression, retArr);'#10'    retArr.push('';'');'
  +#10'    return retArr;'#10'  }'#10'  astEmptyStatement(eNode, retArr) {'#10
  +'    return retArr;'#10'  }'#10'  astBlockStatement(ast, retArr) {'#10'    r'
  +'eturn retArr;'#10'  }'#10'  astIfStatement(ast, retArr) {'#10'    return re'
  +'tArr;'#10'  }'#10'  astSwitchStatement(ast, retArr) {'#10'    return retArr'
  +';'#10'  }'#10'  astBreakStatement(brNode, retArr) {'#10'    retArr.push(''b'
  +'reak;'');'#10'    return retArr;'#10'  }'#10'  astContinueStatement(crNode,'
  +' retArr) {'#10'    retArr.push(''continue;\n'');'#10'    return retArr;'#10
  +'  }'#10'  astForStatement(ast, retArr) {'#10'    return retArr;'#10'  }'#10
  +'  astWhileStatement(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  ast'
  +'DoWhileStatement(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  astVar'
  +'iableDeclarator(iVarDecNode, retArr) {'#10'    this.astGeneric(iVarDecNode.'
  +'id, retArr);'#10'    if (iVarDecNode.init !== null) {'#10'      retArr.push'
  +'(''='');'#10'      this.astGeneric(iVarDecNode.init, retArr);'#10'    }'#10
  +'    return retArr;'#10'  }'#10'  astThisExpression(ast, retArr) {'#10'    r'
  +'eturn retArr;'#10'  }'#10'  isIstanbulAST(ast) {'#10'    const variableSign'
  +'ature = this.getVariableSignature(ast);'#10'    return variableSignature =='
  +'= ''value.value[]'' || variableSignature === ''value.value[][]'';'#10'  }'
  +#10'  astSequenceExpression(sNode, retArr) {'#10'    const { expressions } ='
  +' sNode;'#10'    const sequenceResult = [];'#10'    for (let i = 0; i < expr'
  +'essions.length; i++) {'#10'      const expression = expressions[i];'#10'   '
  +'   if (this.removeIstanbulCoverage) {'#10'        if (expression.type === '
  ,'''UpdateExpression'' && this.isIstanbulAST(expression.argument)) {'#10'    '
  +'      continue;'#10'        }'#10'      }'#10'      const expressionResult '
  +'= [];'#10'      this.astGeneric(expression, expressionResult);'#10'      se'
  +'quenceResult.push(expressionResult.join(''''));'#10'    }'#10'    if (seque'
  +'nceResult.length > 1) {'#10'      retArr.push(''('', sequenceResult.join('''
  +',''), '')'');'#10'    } else {'#10'      retArr.push(sequenceResult[0]);'#10
  +'    }'#10'    return retArr;'#10'  }'#10'  astUnaryExpression(uNode, retArr'
  +') {'#10'    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, r'
  +'etArr);'#10'    if (unaryResult) {'#10'      return retArr;'#10'    }'#10#10
  +'    if (uNode.prefix) {'#10'      retArr.push(uNode.operator);'#10'      th'
  +'is.astGeneric(uNode.argument, retArr);'#10'    } else {'#10'      this.astG'
  +'eneric(uNode.argument, retArr);'#10'      retArr.push(uNode.operator);'#10
  +'    }'#10#10'    return retArr;'#10'  }'#10#10'  checkAndUpconvertBitwiseUn'
  +'ary(uNode, retArr) {}'#10#10'  astUpdateExpression(uNode, retArr) {'#10'   '
  +' if (this.removeIstanbulCoverage) {'#10'      const signature = this.getVar'
  +'iableSignature(uNode.argument);'#10'      if (this.isIstanbulAST(uNode.argu'
  +'ment)) {'#10'        return retArr;'#10'      }'#10'    }'#10'    if (uNode'
  +'.prefix) {'#10'      retArr.push(uNode.operator);'#10'      this.astGeneric'
  +'(uNode.argument, retArr);'#10'    } else {'#10'      this.astGeneric(uNode.'
  +'argument, retArr);'#10'      retArr.push(uNode.operator);'#10'    }'#10#10
  +'    return retArr;'#10'  }'#10'  astLogicalExpression(logNode, retArr) {'#10
  +'    retArr.push(''('');'#10'    this.astGeneric(logNode.left, retArr);'#10
  +'    retArr.push(logNode.operator);'#10'    this.astGeneric(logNode.right, r'
  +'etArr);'#10'    retArr.push('')'');'#10'    return retArr;'#10'  }'#10'  as'
  +'tMemberExpression(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  astCa'
  +'llExpression(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  astArrayEx'
  +'pression(ast, retArr) {'#10'    return retArr;'#10'  }'#10#10'  getMemberEx'
  +'pressionDetails(ast) {'#10'    if (ast.type !== ''MemberExpression'') {'#10
  +'      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpre'
  +'ssion`, ast);'#10'    }'#10'    let name = null;'#10'    let type = null;'
  +#10'    const variableSignature = this.getVariableSignature(ast);'#10'    sw'
  +'itch (variableSignature) {'#10'      case ''value'':'#10'        return nul'
  +'l;'#10'      case ''value.thread.value'':'#10'      case ''this.thread.valu'
  +'e'':'#10'      case ''this.output.value'':'#10'        return {'#10'       '
  +'   signature: variableSignature,'#10'            type: ''Integer'','#10'   '
  +'         name: ast.property.name'#10'        };'#10'      case ''value[]'':'
  +#10'        if (typeof ast.object.name !== ''string'') {'#10'          throw'
  +' this.astErrorOutput(''Unexpected expression'', ast);'#10'        }'#10'   '
  +'     name = ast.object.name;'#10'        return {'#10'          name,'#10' '
  +'         origin: ''user'','#10'            signature: variableSignature,'#10
  +'            type: this.getVariableType(ast.object),'#10'            xProper'
  +'ty: ast.property'#10'        };'#10'      case ''value[][]'':'#10'        i'
  +'f (typeof ast.object.object.name !== ''string'') {'#10'          throw this'
  +'.astErrorOutput(''Unexpected expression'', ast);'#10'        }'#10'        '
  +'name = ast.object.object.name;'#10'        return {'#10'          name,'#10
  +'          origin: ''user'','#10'            signature: variableSignature,'
  +#10'            type: this.getVariableType(ast.object.object),'#10'         '
  +'   yProperty: ast.object.property,'#10'            xProperty: ast.property,'
  +#10'        };'#10'      case ''value[][][]'':'#10'        if (typeof ast.ob'
  +'ject.object.object.name !== ''string'') {'#10'          throw this.astError'
  +'Output(''Unexpected expression'', ast);'#10'        }'#10'        name = as'
  +'t.object.object.object.name;'#10'        return {'#10'          name,'#10' '
  +'         origin: ''user'','#10'            signature: variableSignature,'#10
  +'            type: this.getVariableType(ast.object.object.object),'#10'     '
  +'       zProperty: ast.object.object.property,'#10'            yProperty: as'
  +'t.object.property,'#10'            xProperty: ast.property,'#10'        };'
  +#10'      case ''value[][][][]'':'#10'        if (typeof ast.object.object.o'
  +'bject.object.name !== ''string'') {'#10'          throw this.astErrorOutput'
  +'(''Unexpected expression'', ast);'#10'        }'#10'        name = ast.obje'
  +'ct.object.object.object.name;'#10'        return {'#10'          name,'#10
  +'          origin: ''user'','#10'            signature: variableSignature,'
  +#10'            type: this.getVariableType(ast.object.object.object.object),'
  +#10'            zProperty: ast.object.object.property,'#10'            yProp'
  +'erty: ast.object.property,'#10'            xProperty: ast.property,'#10'   '
  ,'     };'#10'      case ''value.value'':'#10'        if (typeof ast.property'
  +'.name !== ''string'') {'#10'          throw this.astErrorOutput(''Unexpecte'
  +'d expression'', ast);'#10'        }'#10'        if (this.isAstMathVariable('
  +'ast)) {'#10'          name = ast.property.name;'#10'          return {'#10
  +'            name,'#10'            origin: ''Math'','#10'            type: '
  +'''Number'','#10'            signature: variableSignature,'#10'          };'
  +#10'        }'#10'        switch (ast.property.name) {'#10'          case '''
  +'r'':'#10'          case ''g'':'#10'          case ''b'':'#10'          case'
  +' ''a'':'#10'            name = ast.object.name;'#10'            return {'#10
  +'              name,'#10'              property: ast.property.name,'#10'    '
  +'            origin: ''user'','#10'                signature: variableSignat'
  +'ure,'#10'                type: ''Number'''#10'            };'#10'          '
  +'default:'#10'            throw this.astErrorOutput(''Unexpected expression'
  +''', ast);'#10'        }'#10'        case ''this.constants.value'':'#10'    '
  +'      if (typeof ast.property.name !== ''string'') {'#10'            throw '
  +'this.astErrorOutput(''Unexpected expression'', ast);'#10'          }'#10'  '
  +'        name = ast.property.name;'#10'          type = this.getConstantType'
  +'(name);'#10'          if (!type) {'#10'            throw this.astErrorOutpu'
  +'t(''Constant has no type'', ast);'#10'          }'#10'          return {'#10
  +'            name,'#10'            type,'#10'            origin: ''constants'
  +''','#10'              signature: variableSignature,'#10'          };'#10'  '
  +'      case ''this.constants.value[]'':'#10'          if (typeof ast.object.'
  +'property.name !== ''string'') {'#10'            throw this.astErrorOutput('
  +'''Unexpected expression'', ast);'#10'          }'#10'          name = ast.o'
  +'bject.property.name;'#10'          type = this.getConstantType(name);'#10' '
  +'         if (!type) {'#10'            throw this.astErrorOutput(''Constant '
  +'has no type'', ast);'#10'          }'#10'          return {'#10'           '
  +' name,'#10'            type,'#10'            origin: ''constants'','#10'   '
  +'           signature: variableSignature,'#10'              xProperty: ast.p'
  +'roperty,'#10'          };'#10'        case ''this.constants.value[][]'': {'
  +#10'          if (typeof ast.object.object.property.name !== ''string'') {'
  +#10'            throw this.astErrorOutput(''Unexpected expression'', ast);'
  +#10'          }'#10'          name = ast.object.object.property.name;'#10'  '
  +'        type = this.getConstantType(name);'#10'          if (!type) {'#10' '
  +'           throw this.astErrorOutput(''Constant has no type'', ast);'#10'  '
  +'        }'#10'          return {'#10'            name,'#10'            type'
  +','#10'            origin: ''constants'','#10'            signature: variabl'
  +'eSignature,'#10'            yProperty: ast.object.property,'#10'           '
  +' xProperty: ast.property,'#10'          };'#10'        }'#10'        case '
  +'''this.constants.value[][][]'': {'#10'          if (typeof ast.object.objec'
  +'t.object.property.name !== ''string'') {'#10'            throw this.astErro'
  +'rOutput(''Unexpected expression'', ast);'#10'          }'#10'          name'
  +' = ast.object.object.object.property.name;'#10'          type = this.getCon'
  +'stantType(name);'#10'          if (!type) {'#10'            throw this.astE'
  +'rrorOutput(''Constant has no type'', ast);'#10'          }'#10'          re'
  +'turn {'#10'            name,'#10'            type,'#10'            origin: '
  +'''constants'','#10'            signature: variableSignature,'#10'          '
  +'  zProperty: ast.object.object.property,'#10'            yProperty: ast.obj'
  +'ect.property,'#10'            xProperty: ast.property,'#10'          };'#10
  +'        }'#10'        case ''fn()[]'':'#10'        case ''[][]'':'#10'     '
  +'     return {'#10'            signature: variableSignature,'#10'           '
  +'   property: ast.property,'#10'          };'#10'        case ''value.value['
  +']'': '#10'          if (this.removeIstanbulCoverage) {'#10'            retu'
  +'rn { signature: variableSignature };'#10'          }'#10'          if (this'
  +'.onIstanbulCoverageVariable) {'#10'            this.onIstanbulCoverageVaria'
  +'ble(ast.object.object.name);'#10'            return {'#10'              sig'
  +'nature: variableSignature'#10'            };'#10'          }'#10'          '
  +'case ''value.value[][]'': '#10'            if (this.removeIstanbulCoverage)'
  +' {'#10'              return { signature: variableSignature };'#10'         '
  +'   }'#10'            if (this.onIstanbulCoverageVariable) {'#10'           '
  +'   this.onIstanbulCoverageVariable(ast.object.object.object.name);'#10'    '
  +'          return {'#10'                signature: variableSignature'#10'   '
  +'           };'#10'            }'#10'            default:'#10'              '
  +'throw this.astErrorOutput(''Unexpected expression'', ast);'#10'    }'#10'  '
  ,'}'#10#10'  findIdentifierOrigin(astToFind) {'#10'    const stack = [this.as'
  +'t];'#10#10'    while (stack.length > 0) {'#10'      const atNode = stack[0]'
  +';'#10'      if (atNode.type === ''VariableDeclarator'' && atNode.id && atNo'
  +'de.id.name && atNode.id.name === astToFind.name) {'#10'        return atNod'
  +'e;'#10'      }'#10'      stack.shift();'#10'      if (atNode.argument) {'#10
  +'        stack.push(atNode.argument);'#10'      } else if (atNode.body) {'#10
  +'        stack.push(atNode.body);'#10'      } else if (atNode.declarations) '
  +'{'#10'        stack.push(atNode.declarations);'#10'      } else if (Array.i'
  +'sArray(atNode)) {'#10'        for (let i = 0; i < atNode.length; i++) {'#10
  +'          stack.push(atNode[i]);'#10'        }'#10'      }'#10'    }'#10'  '
  +'  return null;'#10'  }'#10#10'  findLastReturn(ast) {'#10'    const stack ='
  +' [ast || this.ast];'#10#10'    while (stack.length > 0) {'#10'      const a'
  +'tNode = stack.pop();'#10'      if (atNode.type === ''ReturnStatement'') {'
  +#10'        return atNode;'#10'      }'#10'      if (atNode.type === ''Funct'
  +'ionDeclaration'') {'#10'        continue;'#10'      }'#10'      if (atNode.'
  +'argument) {'#10'        stack.push(atNode.argument);'#10'      } else if (a'
  +'tNode.body) {'#10'        stack.push(atNode.body);'#10'      } else if (atN'
  +'ode.declarations) {'#10'        stack.push(atNode.declarations);'#10'      '
  +'} else if (Array.isArray(atNode)) {'#10'        for (let i = 0; i < atNode.'
  +'length; i++) {'#10'          stack.push(atNode[i]);'#10'        }'#10'     '
  +' } else if (atNode.consequent) {'#10'        stack.push(atNode.consequent);'
  +#10'      } else if (atNode.cases) {'#10'        stack.push(atNode.cases);'
  +#10'      }'#10'    }'#10'    return null;'#10'  }'#10#10'  getInternalVaria'
  +'bleName(name) {'#10'    if (!this._internalVariableNames.hasOwnProperty(nam'
  +'e)) {'#10'      this._internalVariableNames[name] = 0;'#10'    }'#10'    th'
  +'is._internalVariableNames[name]++;'#10'    if (this._internalVariableNames['
  +'name] === 1) {'#10'      return name;'#10'    }'#10'    return name + this.'
  +'_internalVariableNames[name];'#10'  }'#10#10'  astKey(ast, separator = '','
  +''') {'#10'    if (!ast.start || !ast.end) throw new Error(''AST start and e'
  +'nd needed'');'#10'    return `${ast.start}${separator}${ast.end}`;'#10'  }'
  +#10'}'#10#10'const typeLookupMap = {'#10'  ''Number'': ''Number'','#10'  ''F'
  +'loat'': ''Float'','#10'  ''Integer'': ''Integer'','#10'  ''Array'': ''Numbe'
  +'r'','#10'  ''Array(2)'': ''Number'','#10'  ''Array(3)'': ''Number'','#10'  '
  +'''Array(4)'': ''Number'','#10'  ''Array2D'': ''Number'','#10'  ''Array3D'':'
  +' ''Number'','#10'  ''Input'': ''Number'','#10'  ''HTMLCanvas'': ''Array(4)'
  +''','#10'  ''HTMLImage'': ''Array(4)'','#10'  ''HTMLVideo'': ''Array(4)'','
  +#10'  ''HTMLImageArray'': ''Array(4)'','#10'  ''NumberTexture'': ''Number'','
  +#10'  ''MemoryOptimizedNumberTexture'': ''Number'','#10'  ''Array1D(2)'': '''
  +'Array(2)'','#10'  ''Array1D(3)'': ''Array(3)'','#10'  ''Array1D(4)'': ''Arr'
  +'ay(4)'','#10'  ''Array2D(2)'': ''Array(2)'','#10'  ''Array2D(3)'': ''Array('
  +'3)'','#10'  ''Array2D(4)'': ''Array(4)'','#10'  ''Array3D(2)'': ''Array(2)'
  +''','#10'  ''Array3D(3)'': ''Array(3)'','#10'  ''Array3D(4)'': ''Array(4)'','
  +#10'  ''ArrayTexture(1)'': ''Number'','#10'  ''ArrayTexture(2)'': ''Array(2)'
  +''','#10'  ''ArrayTexture(3)'': ''Array(3)'','#10'  ''ArrayTexture(4)'': ''A'
  +'rray(4)'','#10'};'#10#10'module.exports = {'#10'  FunctionNode'#10'};'#10'}'
  +',{"../utils":114,"./function-tracer":11,"acorn":1}],11:[function(require,mo'
  +'dule,exports){'#10'const { utils } = require(''../utils'');'#10#10'function'
  +' last(array) {'#10'  return array.length > 0 ? array[array.length - 1] : nu'
  +'ll;'#10'}'#10#10'const states = {'#10'  trackIdentifiers: ''trackIdentifier'
  +'s'','#10'  memberExpression: ''memberExpression'','#10'  inForLoopInit: ''i'
  +'nForLoopInit'''#10'};'#10#10'class FunctionTracer {'#10'  constructor(ast) '
  +'{'#10'    this.runningContexts = [];'#10'    this.functionContexts = [];'#10
  +'    this.contexts = [];'#10'    this.functionCalls = [];'#10'    this.decla'
  +'rations = [];'#10'    this.identifiers = [];'#10'    this.functions = [];'
  +#10'    this.returnStatements = [];'#10'    this.trackedIdentifiers = null;'
  +#10'    this.states = [];'#10'    this.newFunctionContext();'#10'    this.sc'
  +'an(ast);'#10'  }'#10#10'  isState(state) {'#10'    return this.states[this.'
  +'states.length - 1] === state;'#10'  }'#10#10'  hasState(state) {'#10'    re'
  +'turn this.states.indexOf(state) > -1;'#10'  }'#10#10'  pushState(state) {'
  +#10'    this.states.push(state);'#10'  }'#10#10'  popState(state) {'#10'    '
  +'if (this.isState(state)) {'#10'      this.states.pop();'#10'    } else {'#10
  +'      throw new Error(`Cannot pop the non-active state "${state}"`);'#10'  '
  +'  }'#10'  }'#10#10'  get currentFunctionContext() {'#10'    return last(thi'
  +'s.functionContexts);'#10'  }'#10#10'  get currentContext() {'#10'    return'
  ,' last(this.runningContexts);'#10'  }'#10#10'  newFunctionContext() {'#10'  '
  +'  const newContext = { ''@contextType'': ''function'' };'#10'    this.conte'
  +'xts.push(newContext);'#10'    this.functionContexts.push(newContext);'#10' '
  +' }'#10#10'  newContext(run) {'#10'    const newContext = Object.assign({ '''
  +'@contextType'': ''const/let'' }, this.currentContext);'#10'    this.context'
  +'s.push(newContext);'#10'    this.runningContexts.push(newContext);'#10'    '
  +'run();'#10'    const { currentFunctionContext } = this;'#10'    for (const '
  +'p in currentFunctionContext) {'#10'      if (!currentFunctionContext.hasOwn'
  +'Property(p) || newContext.hasOwnProperty(p)) continue;'#10'      newContext'
  +'[p] = currentFunctionContext[p];'#10'    }'#10'    this.runningContexts.pop'
  +'();'#10'    return newContext;'#10'  }'#10#10'  useFunctionContext(run) {'
  +#10'    const functionContext = last(this.functionContexts);'#10'    this.ru'
  +'nningContexts.push(functionContext);'#10'    run();'#10'    this.runningCon'
  +'texts.pop();'#10'  }'#10#10'  getIdentifiers(run) {'#10'    const trackedId'
  +'entifiers = this.trackedIdentifiers = [];'#10'    this.pushState(states.tra'
  +'ckIdentifiers);'#10'    run();'#10'    this.trackedIdentifiers = null;'#10
  +'    this.popState(states.trackIdentifiers);'#10'    return trackedIdentifie'
  +'rs;'#10'  }'#10#10'  getDeclaration(name) {'#10'    const { currentContext,'
  +' currentFunctionContext } = this;'#10'    return currentContext[name] || cu'
  +'rrentFunctionContext[name] || null;'#10'  }'#10#10'  scan(ast) {'#10'    if'
  +' (!ast) return;'#10'    if (Array.isArray(ast)) {'#10'      for (let i = 0;'
  +' i < ast.length; i++) {'#10'        this.scan(ast[i]);'#10'      }'#10'    '
  +'  return;'#10'    }'#10'    switch (ast.type) {'#10'      case ''Program'':'
  +#10'        this.useFunctionContext(() => {'#10'          this.scan(ast.body'
  +');'#10'        });'#10'        break;'#10'      case ''BlockStatement'':'#10
  +'        this.newContext(() => {'#10'          this.scan(ast.body);'#10'    '
  +'    });'#10'        break;'#10'      case ''AssignmentExpression'':'#10'   '
  +'   case ''LogicalExpression'':'#10'        this.scan(ast.left);'#10'       '
  +' this.scan(ast.right);'#10'        break;'#10'      case ''BinaryExpression'
  +''':'#10'        this.scan(ast.left);'#10'        this.scan(ast.right);'#10
  +'        break;'#10'      case ''UpdateExpression'':'#10'        if (ast.ope'
  +'rator === ''++'') {'#10'          const declaration = this.getDeclaration(a'
  +'st.argument.name);'#10'          if (declaration) {'#10'            declara'
  +'tion.suggestedType = ''Integer'';'#10'          }'#10'        }'#10'       '
  +' this.scan(ast.argument);'#10'        break;'#10'      case ''UnaryExpressi'
  +'on'':'#10'        this.scan(ast.argument);'#10'        break;'#10'      cas'
  +'e ''VariableDeclaration'':'#10'        if (ast.kind === ''var'') {'#10'    '
  +'      this.useFunctionContext(() => {'#10'            ast.declarations = ut'
  +'ils.normalizeDeclarations(ast);'#10'            this.scan(ast.declarations)'
  +';'#10'          });'#10'        } else {'#10'          ast.declarations = u'
  +'tils.normalizeDeclarations(ast);'#10'          this.scan(ast.declarations);'
  +#10'        }'#10'        break;'#10'      case ''VariableDeclarator'': {'#10
  +'        const { currentContext } = this;'#10'        const inForLoopInit = '
  +'this.hasState(states.inForLoopInit);'#10'        const declaration = {'#10
  +'          ast: ast,'#10'          context: currentContext,'#10'          na'
  +'me: ast.id.name,'#10'          origin: ''declaration'','#10'          inFor'
  +'LoopInit,'#10'          inForLoopTest: null,'#10'          assignable: curr'
  +'entContext === this.currentFunctionContext || (!inForLoopInit && !currentCo'
  +'ntext.hasOwnProperty(ast.id.name)),'#10'          suggestedType: null,'#10
  +'          valueType: null,'#10'          dependencies: null,'#10'          '
  +'isSafe: null,'#10'        };'#10'        if (!currentContext[ast.id.name]) '
  +'{'#10'          currentContext[ast.id.name] = declaration;'#10'        }'#10
  +'        this.declarations.push(declaration);'#10'        this.scan(ast.id);'
  +#10'        this.scan(ast.init);'#10'        break;'#10'      }'#10'      ca'
  +'se ''FunctionExpression'':'#10'      case ''FunctionDeclaration'':'#10'    '
  +'    if (this.runningContexts.length === 0) {'#10'          this.scan(ast.bo'
  +'dy);'#10'        } else {'#10'          this.functions.push(ast);'#10'     '
  +'   }'#10'        break;'#10'      case ''IfStatement'':'#10'        this.sc'
  +'an(ast.test);'#10'        this.scan(ast.consequent);'#10'        if (ast.al'
  +'ternate) this.scan(ast.alternate);'#10'        break;'#10'      case ''ForS'
  +'tatement'': {'#10'        let testIdentifiers;'#10'        const context = '
  +'this.newContext(() => {'#10'          this.pushState(states.inForLoopInit);'
  +#10'          this.scan(ast.init);'#10'          this.popState(states.inForL'
  +'oopInit);'#10#10'          testIdentifiers = this.getIdentifiers(() => {'#10
  ,'            this.scan(ast.test);'#10'          });'#10#10'          this.sc'
  +'an(ast.update);'#10'          this.newContext(() => {'#10'            this.'
  +'scan(ast.body);'#10'          });'#10'        });'#10#10'        if (testId'
  +'entifiers) {'#10'          for (const p in context) {'#10'            if (p'
  +' === ''@contextType'') continue;'#10'            if (testIdentifiers.indexO'
  +'f(p) > -1) {'#10'              context[p].inForLoopTest = true;'#10'       '
  +'     }'#10'          }'#10'        }'#10'        break;'#10'      }'#10'   '
  +'   case ''DoWhileStatement'':'#10'      case ''WhileStatement'':'#10'      '
  +'  this.newContext(() => {'#10'          this.scan(ast.body);'#10'          '
  +'this.scan(ast.test);'#10'        });'#10'        break;'#10'      case ''Id'
  +'entifier'': {'#10'        if (this.isState(states.trackIdentifiers)) {'#10
  +'          this.trackedIdentifiers.push(ast.name);'#10'        }'#10'       '
  +' this.identifiers.push({'#10'          context: this.currentContext,'#10'  '
  +'        declaration: this.getDeclaration(ast.name),'#10'          ast,'#10
  +'        });'#10'        break;'#10'      }'#10'      case ''ReturnStatement'
  +''':'#10'        this.returnStatements.push(ast);'#10'        this.scan(ast.'
  +'argument);'#10'        break;'#10'      case ''MemberExpression'':'#10'    '
  +'    this.pushState(states.memberExpression);'#10'        this.scan(ast.obje'
  +'ct);'#10'        this.scan(ast.property);'#10'        this.popState(states.'
  +'memberExpression);'#10'        break;'#10'      case ''ExpressionStatement'
  +''':'#10'        this.scan(ast.expression);'#10'        break;'#10'      cas'
  +'e ''SequenceExpression'':'#10'        this.scan(ast.expressions);'#10'     '
  +'   break;'#10'      case ''CallExpression'':'#10'        this.functionCalls'
  +'.push({'#10'          context: this.currentContext,'#10'          ast,'#10
  +'        });'#10'        this.scan(ast.arguments);'#10'        break;'#10'  '
  +'    case ''ArrayExpression'':'#10'        this.scan(ast.elements);'#10'    '
  +'    break;'#10'      case ''ConditionalExpression'':'#10'        this.scan('
  +'ast.test);'#10'        this.scan(ast.alternate);'#10'        this.scan(ast.'
  +'consequent);'#10'        break;'#10'      case ''SwitchStatement'':'#10'   '
  +'     this.scan(ast.discriminant);'#10'        this.scan(ast.cases);'#10'   '
  +'     break;'#10'      case ''SwitchCase'':'#10'        this.scan(ast.test);'
  +#10'        this.scan(ast.consequent);'#10'        break;'#10#10'      case '
  +'''ThisExpression'':'#10'      case ''Literal'':'#10'      case ''DebuggerSt'
  +'atement'':'#10'      case ''EmptyStatement'':'#10'      case ''BreakStateme'
  +'nt'':'#10'      case ''ContinueStatement'':'#10'        break;'#10'      de'
  +'fault:'#10'        throw new Error(`unhandled type "${ast.type}"`);'#10'   '
  +' }'#10'  }'#10'}'#10#10'module.exports = {'#10'  FunctionTracer,'#10'};'#10
  +'},{"../utils":114}],12:[function(require,module,exports){'#10'const { glWir'
  +'etap } = require(''gl-wiretap'');'#10'const { utils } = require(''../../uti'
  +'ls'');'#10#10'function toStringWithoutUtils(fn) {'#10'  return fn.toString('
  +')'#10'    .replace(''=>'', '''')'#10'    .replace(/^function /, '''')'#10' '
  +'   .replace(/utils[.]/g, ''/*utils.*/'');'#10'}'#10#10'function glKernelStr'
  +'ing(Kernel, args, originKernel, setupContextString, destroyContextString) {'
  +#10'  if (!originKernel.built) {'#10'    originKernel.build.apply(originKern'
  +'el, args);'#10'  }'#10'  args = args ? Array.from(args).map(arg => {'#10'  '
  +'  switch (typeof arg) {'#10'      case ''boolean'':'#10'        return new '
  +'Boolean(arg);'#10'      case ''number'':'#10'        return new Number(arg)'
  +';'#10'      default:'#10'        return arg;'#10'    }'#10'  }) : null;'#10
  +'  const uploadedValues = [];'#10'  const postResult = [];'#10'  const conte'
  +'xt = glWiretap(originKernel.context, {'#10'    useTrackablePrimitives: true'
  +','#10'    onReadPixels: (targetName) => {'#10'      if (kernel.subKernels) '
  +'{'#10'        if (!subKernelsResultVariableSetup) {'#10'          postResul'
  +'t.push(`    const result = { result: ${getRenderString(targetName, kernel)}'
  +' };`);'#10'          subKernelsResultVariableSetup = true;'#10'        } el'
  +'se {'#10'          const property = kernel.subKernels[subKernelsResultIndex'
  +'++].property;'#10'          postResult.push(`    result${isNaN(property) ? '
  +'''.'' + property : `[${property}]`} = ${getRenderString(targetName, kernel)'
  +'};`);'#10'        }'#10'        if (subKernelsResultIndex === kernel.subKer'
  +'nels.length) {'#10'          postResult.push(''    return result;'');'#10' '
  +'       }'#10'        return;'#10'      }'#10'      if (targetName) {'#10'  '
  +'      postResult.push(`    return ${getRenderString(targetName, kernel)};`)'
  +';'#10'      } else {'#10'        postResult.push(`    return null;`);'#10' '
  +'     }'#10'    },'#10'    onUnrecognizedArgumentLookup: (argument) => {'#10
  +'      const argumentName = findKernelValue(argument, kernel.kernelArguments'
  ,', [], context, uploadedValues);'#10'      if (argumentName) {'#10'        r'
  +'eturn argumentName;'#10'      }'#10'      const constantName = findKernelVa'
  +'lue(argument, kernel.kernelConstants, constants ? Object.keys(constants).ma'
  +'p(key => constants[key]) : [], context, uploadedValues);'#10'      if (cons'
  +'tantName) {'#10'        return constantName;'#10'      }'#10'      return n'
  +'ull;'#10'    }'#10'  });'#10'  let subKernelsResultVariableSetup = false;'
  +#10'  let subKernelsResultIndex = 0;'#10'  const {'#10'    source,'#10'    c'
  +'anvas,'#10'    output,'#10'    pipeline,'#10'    graphical,'#10'    loopMax'
  +'Iterations,'#10'    constants,'#10'    optimizeFloatMemory,'#10'    precisi'
  +'on,'#10'    fixIntegerDivisionAccuracy,'#10'    functions,'#10'    nativeFu'
  +'nctions,'#10'    subKernels,'#10'    immutable,'#10'    argumentTypes,'#10
  +'    constantTypes,'#10'    kernelArguments,'#10'    kernelConstants,'#10'  '
  +'  tactic,'#10'  } = originKernel;'#10'  const kernel = new Kernel(source, {'
  +#10'    canvas,'#10'    context,'#10'    checkContext: false,'#10'    output'
  +','#10'    pipeline,'#10'    graphical,'#10'    loopMaxIterations,'#10'    c'
  +'onstants,'#10'    optimizeFloatMemory,'#10'    precision,'#10'    fixIntege'
  +'rDivisionAccuracy,'#10'    functions,'#10'    nativeFunctions,'#10'    subK'
  +'ernels,'#10'    immutable,'#10'    argumentTypes,'#10'    constantTypes,'#10
  +'    tactic,'#10'  });'#10'  let result = [];'#10'  context.setIndent(2);'#10
  +'  kernel.build.apply(kernel, args);'#10'  result.push(context.toString());'
  +#10'  context.reset();'#10#10'  kernel.kernelArguments.forEach((kernelArgume'
  +'nt, i) => {'#10'    switch (kernelArgument.type) {'#10'      case ''Integer'
  +''':'#10'      case ''Boolean'':'#10'      case ''Number'':'#10'      case '
  +'''Float'':'#10'      case ''Array'':'#10'      case ''Array(2)'':'#10'     '
  +' case ''Array(3)'':'#10'      case ''Array(4)'':'#10'      case ''HTMLCanva'
  +'s'':'#10'      case ''HTMLImage'':'#10'      case ''HTMLVideo'':'#10'      '
  +'  context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgume'
  +'nt.uploadValue);'#10'        break;'#10'      case ''HTMLImageArray'':'#10
  +'        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++)'
  +' {'#10'          const arg = args[i];'#10'          context.insertVariable('
  +'`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);'#10
  +'        }'#10'        break;'#10'      case ''Input'':'#10'        context.'
  +'insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadV'
  +'alue);'#10'        break;'#10'      case ''MemoryOptimizedNumberTexture'':'
  +#10'      case ''NumberTexture'':'#10'      case ''Array1D(2)'':'#10'      c'
  +'ase ''Array1D(3)'':'#10'      case ''Array1D(4)'':'#10'      case ''Array2D'
  +'(2)'':'#10'      case ''Array2D(3)'':'#10'      case ''Array2D(4)'':'#10'  '
  +'    case ''Array3D(2)'':'#10'      case ''Array3D(3)'':'#10'      case ''Ar'
  +'ray3D(4)'':'#10'      case ''ArrayTexture(1)'':'#10'      case ''ArrayTextu'
  +'re(2)'':'#10'      case ''ArrayTexture(3)'':'#10'      case ''ArrayTexture('
  +'4)'':'#10'        context.insertVariable(`uploadValue_${kernelArgument.name'
  +'}`, args[i].texture);'#10'        break;'#10'      default:'#10'        thr'
  +'ow new Error(`unhandled kernelArgumentType insertion for glWiretap of type '
  +'${kernelArgument.type}`);'#10'    }'#10'  });'#10'  result.push(''/** start'
  +' of injected functions **/'');'#10'  result.push(`function ${toStringWithou'
  +'tUtils(utils.flattenTo)}`);'#10'  result.push(`function ${toStringWithoutUt'
  +'ils(utils.flatten2dArrayTo)}`);'#10'  result.push(`function ${toStringWitho'
  +'utUtils(utils.flatten3dArrayTo)}`);'#10'  result.push(`function ${toStringW'
  +'ithoutUtils(utils.flatten4dArrayTo)}`);'#10'  result.push(`function ${toStr'
  +'ingWithoutUtils(utils.isArray)}`);'#10'  if (kernel.renderOutput !== kernel'
  +'.renderTexture && kernel.formatValues) {'#10'    result.push('#10'      `  '
  +'const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};'
  +'`'#10'    );'#10'  }'#10'  result.push(''/** end of injected functions **/'
  +''');'#10'  result.push(`  const innerKernel = function (${kernel.kernelArgu'
  +'ments.map(kernelArgument => kernelArgument.varName).join('', '')}) {`);'#10
  +'  context.setIndent(4);'#10'  kernel.run.apply(kernel, args);'#10'  if (ker'
  +'nel.renderKernels) {'#10'    kernel.renderKernels();'#10'  } else if (kerne'
  +'l.renderOutput) {'#10'    kernel.renderOutput();'#10'  }'#10'  result.push('
  +'''    /** start setup uploads for kernel values **/'');'#10'  kernel.kernel'
  +'Arguments.forEach(kernelArgument => {'#10'    result.push(''    '' + kernel'
  +'Argument.getStringValueHandler().split(''\n'').join(''\n    ''));'#10'  });'
  +#10'  result.push(''    /** end setup uploads for kernel values **/'');'#10
  +'  result.push(context.toString());'#10'  if (kernel.renderOutput === kernel'
  +'.renderTexture) {'#10'    context.reset();'#10'    if (kernel.renderKernels'
  ,') {'#10'      const results = kernel.renderKernels();'#10'      const textu'
  +'reName = context.getContextVariableName(kernel.texture.texture);'#10'      '
  +'result.push(`    return {'#10'      result: {'#10'        texture: ${ textu'
  +'reName },'#10'        type: ''${ results.result.type }'','#10'        toArr'
  +'ay: ${ getToArrayString(results.result, textureName) }'#10'      },`);'#10
  +'      const { subKernels, mappedTextures } = kernel;'#10'      for (let i ='
  +' 0; i < subKernels.length; i++) {'#10'        const texture = mappedTexture'
  +'s[i];'#10'        const subKernel = subKernels[i];'#10'        const subKer'
  +'nelResult = results[subKernel.property];'#10'        const subKernelTexture'
  +'Name = context.getContextVariableName(texture.texture);'#10'        result.'
  +'push(`'#10'      ${subKernel.property}: {'#10'        texture: ${ subKernel'
  +'TextureName },'#10'        type: ''${ subKernelResult.type }'','#10'       '
  +' toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }'#10
  +'      },`);'#10'      }'#10'      result.push(`    };`);'#10'    } else {'
  +#10'      const rendered = kernel.renderOutput();'#10'      const textureNam'
  +'e = context.getContextVariableName(kernel.texture.texture);'#10'      resul'
  +'t.push(`    return {'#10'        texture: ${ textureName },'#10'        typ'
  +'e: ''${ rendered.type }'','#10'        toArray: ${ getToArrayString(rendere'
  +'d, textureName) }'#10'      };`);'#10'    }'#10'  }'#10'  result.push(`    '
  +'${destroyContextString ? ''\n'' + destroyContextString + ''    '': ''''}`);'
  +#10'  result.push(postResult.join(''\n''));'#10'  result.push(''  };'');'#10
  +'  if (kernel.graphical) {'#10'    result.push(getGetPixelsString(kernel));'
  +#10'    result.push(`  innerKernel.getPixels = getPixels;`);'#10'  }'#10'  r'
  +'esult.push(''  return innerKernel;'');'#10#10'  let constantsUpload = [];'
  +#10'  kernelConstants.forEach((kernelConstant) => {'#10'    constantsUpload.'
  +'push(`${  kernelConstant.getStringValueHandler()}`);'#10'  });'#10'  return'
  +' `function kernel(settings) {'#10'  const { context, constants } = settings'
  +';'#10'  ${constantsUpload.join('''')}'#10'  ${setupContextString ? setupCon'
  +'textString : ''''}'#10'${result.join(''\n'')}'#10'}`;'#10'}'#10#10'function'
  +' getRenderString(targetName, kernel) {'#10'  const readBackValue = kernel.p'
  +'recision === ''single'' ? targetName : `new Float32Array(${targetName}.buff'
  +'er)`;'#10'  if (kernel.output[2]) {'#10'    return `renderOutput(${readBack'
  +'Value}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;'#10
  +'  }'#10'  if (kernel.output[1]) {'#10'    return `renderOutput(${readBackVa'
  +'lue}, ${kernel.output[0]}, ${kernel.output[1]})`;'#10'  }'#10#10'  return `'
  +'renderOutput(${readBackValue}, ${kernel.output[0]})`;'#10'}'#10#10'function'
  +' getGetPixelsString(kernel) {'#10'  const getPixels = kernel.getPixels.toSt'
  +'ring();'#10'  const useFunctionKeyword = !/^function/.test(getPixels);'#10
  +'  return utils.flattenFunctionToString(`${useFunctionKeyword ? ''function '
  +''' : ''''}${ getPixels }`, {'#10'    findDependency: (object, name) => {'#10
  +'      if (object === ''utils'') {'#10'        return `const ${name} = ${uti'
  +'ls[name].toString()};`;'#10'      }'#10'      return null;'#10'    },'#10' '
  +'   thisLookup: (property) => {'#10'      if (property === ''context'') {'#10
  +'        return null;'#10'      }'#10'      if (kernel.hasOwnProperty(proper'
  +'ty)) {'#10'        return JSON.stringify(kernel[property]);'#10'      }'#10
  +'      throw new Error(`unhandled thisLookup ${ property }`);'#10'    }'#10
  +'  });'#10'}'#10#10'function getToArrayString(kernelResult, textureName) {'
  +#10'  const toArray = kernelResult.toArray.toString();'#10'  const useFuncti'
  +'onKeyword = !/^function/.test(toArray);'#10'  const flattenedFunctions = ut'
  +'ils.flattenFunctionToString(`${useFunctionKeyword ? ''function '' : ''''}${'
  +' toArray }`, {'#10'    findDependency: (object, name) => {'#10'      if (ob'
  +'ject === ''utils'') {'#10'        return `const ${name} = ${utils[name].toS'
  +'tring()};`;'#10'      } else if (object === ''this'') {'#10'        return '
  +'`${useFunctionKeyword ? ''function '' : ''''}${kernelResult[name].toString('
  +')}`;'#10'      } else {'#10'        throw new Error(''unhandled fromObject'
  +''');'#10'      }'#10'    },'#10'    thisLookup: (property, isDeclaration) ='
  +'> {'#10'      if (property === ''texture'') {'#10'        return textureNam'
  +'e;'#10'      }'#10'      if (property === ''context'') {'#10'        if (is'
  +'Declaration) return null;'#10'        return ''gl'';'#10'      }'#10'      '
  +'if (property === ''_framebuffer'') {'#10'        return ''_framebuffer'';'
  +#10'      }'#10'      if (kernelResult.hasOwnProperty(property)) {'#10'     '
  +'   return JSON.stringify(kernelResult[property]);'#10'      }'#10'      thr'
  +'ow new Error(`unhandled thisLookup ${ property }`);'#10'    }'#10'  });'#10
  +'  return `() => {'#10'  let _framebuffer;'#10'  ${flattenedFunctions}'#10' '
  ,' return toArray();'#10'  }`;'#10'}'#10#10'function findKernelValue(argument'
  +', kernelValues, values, context, uploadedValues) {'#10'  if (argument === n'
  +'ull) return null;'#10'  if (kernelValues === null) return null;'#10'  switc'
  +'h (typeof argument) {'#10'    case ''boolean'':'#10'    case ''number'':'#10
  +'      return null;'#10'  }'#10'  if ('#10'    typeof HTMLImageElement !== '
  +'''undefined'' &&'#10'    argument instanceof HTMLImageElement'#10'  ) {'#10
  +'    for (let i = 0; i < kernelValues.length; i++) {'#10'      const kernelV'
  +'alue = kernelValues[i];'#10'      if (kernelValue.type !== ''HTMLImageArray'
  +''' && kernelValue) continue;'#10'      if (kernelValue.uploadValue !== argu'
  +'ment) continue;'#10'      const variableIndex = values[i].indexOf(argument)'
  +';'#10'      if (variableIndex === -1) continue;'#10'      const variableNam'
  +'e = `uploadValue_${kernelValue.name}[${variableIndex}]`;'#10'      context.'
  +'insertVariable(variableName, argument);'#10'      return variableName;'#10
  +'    }'#10'  }'#10#10'  for (let i = 0; i < kernelValues.length; i++) {'#10
  +'    const kernelValue = kernelValues[i];'#10'    if (argument !== kernelVal'
  +'ue.uploadValue) continue;'#10'    const variable = `uploadValue_${kernelVal'
  +'ue.name}`;'#10'    context.insertVariable(variable, kernelValue);'#10'    r'
  +'eturn variable;'#10'  }'#10'  return null;'#10'}'#10#10'module.exports = {'
  +#10'  glKernelString'#10'};'#10'},{"../../utils":114,"gl-wiretap":3}],13:[fu'
  +'nction(require,module,exports){'#10'const { Kernel } = require(''../kernel'
  +''');'#10'const { utils } = require(''../../utils'');'#10'const { GLTextureA'
  +'rray2Float } = require(''./texture/array-2-float'');'#10'const { GLTextureA'
  +'rray2Float2D } = require(''./texture/array-2-float-2d'');'#10'const { GLTex'
  +'tureArray2Float3D } = require(''./texture/array-2-float-3d'');'#10'const { '
  +'GLTextureArray3Float } = require(''./texture/array-3-float'');'#10'const { '
  +'GLTextureArray3Float2D } = require(''./texture/array-3-float-2d'');'#10'con'
  +'st { GLTextureArray3Float3D } = require(''./texture/array-3-float-3d'');'#10
  +'const { GLTextureArray4Float } = require(''./texture/array-4-float'');'#10
  +'const { GLTextureArray4Float2D } = require(''./texture/array-4-float-2d'');'
  +#10'const { GLTextureArray4Float3D } = require(''./texture/array-4-float-3d'
  +''');'#10'const { GLTextureFloat } = require(''./texture/float'');'#10'const'
  +' { GLTextureFloat2D } = require(''./texture/float-2d'');'#10'const { GLText'
  +'ureFloat3D } = require(''./texture/float-3d'');'#10'const { GLTextureMemory'
  +'Optimized } = require(''./texture/memory-optimized'');'#10'const { GLTextur'
  +'eMemoryOptimized2D } = require(''./texture/memory-optimized-2d'');'#10'cons'
  +'t { GLTextureMemoryOptimized3D } = require(''./texture/memory-optimized-3d'
  +''');'#10'const { GLTextureUnsigned } = require(''./texture/unsigned'');'#10
  +'const { GLTextureUnsigned2D } = require(''./texture/unsigned-2d'');'#10'con'
  +'st { GLTextureUnsigned3D } = require(''./texture/unsigned-3d'');'#10'const '
  +'{ GLTextureGraphical } = require(''./texture/graphical'');'#10#10'class GLK'
  +'ernel extends Kernel {'#10'  static get mode() {'#10'    return ''gpu'';'#10
  +'  }'#10#10'  static getIsFloatRead() {'#10'    const kernelString = `functi'
  +'on kernelFunction() {'#10'      return 1;'#10'    }`;'#10'    const kernel '
  +'= new this(kernelString, {'#10'      context: this.testContext,'#10'      c'
  +'anvas: this.testCanvas,'#10'      validate: false,'#10'      output: [1],'
  +#10'      precision: ''single'','#10'      returnType: ''Number'','#10'     '
  +' tactic: ''speed'','#10'    });'#10'    kernel.build();'#10'    kernel.run('
  +');'#10'    const result = kernel.renderOutput();'#10'    kernel.destroy(tru'
  +'e);'#10'    return result[0] === 1;'#10'  }'#10#10'  static getIsIntegerDiv'
  +'isionAccurate() {'#10'    function kernelFunction(v1, v2) {'#10'      retur'
  +'n v1[this.thread.x] / v2[this.thread.x];'#10'    }'#10'    const kernel = n'
  +'ew this(kernelFunction.toString(), {'#10'      context: this.testContext,'
  +#10'      canvas: this.testCanvas,'#10'      validate: false,'#10'      outp'
  +'ut: [2],'#10'      returnType: ''Number'','#10'      precision: ''unsigned'
  +''','#10'      tactic: ''speed'','#10'    });'#10'    const args = ['#10'   '
  +'   [6, 6030401],'#10'      [3, 3991]'#10'    ];'#10'    kernel.build.apply('
  +'kernel, args);'#10'    kernel.run.apply(kernel, args);'#10'    const result'
  +' = kernel.renderOutput();'#10'    kernel.destroy(true);'#10'    return resu'
  +'lt[0] === 2 && result[1] === 1511;'#10'  }'#10#10'  static getIsSpeedTactic'
  +'Supported() {'#10'    function kernelFunction(value) {'#10'      return val'
  +'ue[this.thread.x];'#10'    }'#10'    const kernel = new this(kernelFunction'
  +'.toString(), {'#10'      context: this.testContext,'#10'      canvas: this.'
  +'testCanvas,'#10'      validate: false,'#10'      output: [4],'#10'      ret'
  +'urnType: ''Number'','#10'      precision: ''unsigned'','#10'      tactic: '
  ,'''speed'','#10'    });'#10'    const args = ['#10'      [0, 1, 2, 3]'#10'  '
  +'  ];'#10'    kernel.build.apply(kernel, args);'#10'    kernel.run.apply(ker'
  +'nel, args);'#10'    const result = kernel.renderOutput();'#10'    kernel.de'
  +'stroy(true);'#10'    return Math.round(result[0]) === 0 && Math.round(resul'
  +'t[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;'
  +#10'  }'#10#10'  static get testCanvas() {'#10'    throw new Error(`"testCan'
  +'vas" not defined on ${ this.name }`);'#10'  }'#10#10'  static get testConte'
  +'xt() {'#10'    throw new Error(`"testContext" not defined on ${ this.name }'
  +'`);'#10'  }'#10#10'  static getFeatures() {'#10'    const gl = this.testCon'
  +'text;'#10'    const isDrawBuffers = this.getIsDrawBuffers();'#10'    return'
  +' Object.freeze({'#10'      isFloatRead: this.getIsFloatRead(),'#10'      is'
  +'IntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),'#10'      isS'
  +'peedTacticSupported: this.getIsSpeedTacticSupported(),'#10'      isTextureF'
  +'loat: this.getIsTextureFloat(),'#10'      isDrawBuffers,'#10'      kernelMa'
  +'p: isDrawBuffers,'#10'      channelCount: this.getChannelCount(),'#10'     '
  +' maxTextureSize: this.getMaxTextureSize(),'#10'      lowIntPrecision: gl.ge'
  +'tShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),'#10'      lowFloatP'
  +'recision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),'#10
  +'      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, g'
  +'l.MEDIUM_INT),'#10'      mediumFloatPrecision: gl.getShaderPrecisionFormat('
  +'gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),'#10'      highIntPrecision: gl.getSha'
  +'derPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),'#10'      highFloatPre'
  +'cision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),'#10
  +'    });'#10'  }'#10#10'  static setupFeatureChecks() {'#10'    throw new Er'
  +'ror(`"setupFeatureChecks" not defined on ${ this.name }`);'#10'  }'#10#10' '
  +' static getSignature(kernel, argumentTypes) {'#10'    return kernel.getVari'
  +'ablePrecisionString() + (argumentTypes.length > 0 ? '':'' + argumentTypes.j'
  +'oin('','') : '''');'#10'  }'#10#10'  setFixIntegerDivisionAccuracy(fix) {'
  +#10'    this.fixIntegerDivisionAccuracy = fix;'#10'    return this;'#10'  }'
  +#10#10'  setPrecision(flag) {'#10'    this.precision = flag;'#10'    return '
  +'this;'#10'  }'#10#10'  setFloatTextures(flag) {'#10'    utils.warnDeprecate'
  +'d(''method'', ''setFloatTextures'', ''setOptimizeFloatMemory'');'#10'    th'
  +'is.floatTextures = flag;'#10'    return this;'#10'  }'#10#10'  static nativ'
  +'eFunctionArguments(source) {'#10'    const argumentTypes = [];'#10'    cons'
  +'t argumentNames = [];'#10'    const states = [];'#10'    const isStartingVa'
  +'riableName = /^[a-zA-Z_]/;'#10'    const isVariableChar = /[a-zA-Z_0-9]/;'
  +#10'    let i = 0;'#10'    let argumentName = null;'#10'    let argumentType'
  +' = null;'#10'    while (i < source.length) {'#10'      const char = source['
  +'i];'#10'      const nextChar = source[i + 1];'#10'      const state = state'
  +'s.length > 0 ? states[states.length - 1] : null;'#10#10'      if (state ==='
  +' ''FUNCTION_ARGUMENTS'' && char === ''/'' && nextChar === ''*'') {'#10'    '
  +'    states.push(''MULTI_LINE_COMMENT'');'#10'        i += 2;'#10'        co'
  +'ntinue;'#10'      } else if (state === ''MULTI_LINE_COMMENT'' && char === '
  +'''*'' && nextChar === ''/'') {'#10'        states.pop();'#10'        i += 2'
  +';'#10'        continue;'#10'      }'#10#10'      else if (state === ''FUNCT'
  +'ION_ARGUMENTS'' && char === ''/'' && nextChar === ''/'') {'#10'        stat'
  +'es.push(''COMMENT'');'#10'        i += 2;'#10'        continue;'#10'      }'
  +' else if (state === ''COMMENT'' && char === ''\n'') {'#10'        states.po'
  +'p();'#10'        i++;'#10'        continue;'#10'      }'#10#10'      else i'
  +'f (state === null && char === ''('') {'#10'        states.push(''FUNCTION_A'
  +'RGUMENTS'');'#10'        i++;'#10'        continue;'#10'      } else if (st'
  +'ate === ''FUNCTION_ARGUMENTS'') {'#10'        if (char === '')'') {'#10'   '
  +'       states.pop();'#10'          break;'#10'        }'#10'        if (cha'
  +'r === ''f'' && nextChar === ''l'' && source[i + 2] === ''o'' && source[i + '
  +'3] === ''a'' && source[i + 4] === ''t'' && source[i + 5] === '' '') {'#10' '
  +'         states.push(''DECLARE_VARIABLE'');'#10'          argumentType = '''
  +'float'';'#10'          argumentName = '''';'#10'          i += 6;'#10'     '
  +'     continue;'#10'        } else if (char === ''i'' && nextChar === ''n'' '
  +'&& source[i + 2] === ''t'' && source[i + 3] === '' '') {'#10'          stat'
  +'es.push(''DECLARE_VARIABLE'');'#10'          argumentType = ''int'';'#10'  '
  +'        argumentName = '''';'#10'          i += 4;'#10'          continue;'
  +#10'        } else if (char === ''v'' && nextChar === ''e'' && source[i + 2]'
  +' === ''c'' && source[i + 3] === ''2'' && source[i + 4] === '' '') {'#10'   '
  +'       states.push(''DECLARE_VARIABLE'');'#10'          argumentType = ''ve'
  ,'c2'';'#10'          argumentName = '''';'#10'          i += 5;'#10'        '
  +'  continue;'#10'        } else if (char === ''v'' && nextChar === ''e'' && '
  +'source[i + 2] === ''c'' && source[i + 3] === ''3'' && source[i + 4] === '' '
  +''') {'#10'          states.push(''DECLARE_VARIABLE'');'#10'          argume'
  +'ntType = ''vec3'';'#10'          argumentName = '''';'#10'          i += 5;'
  +#10'          continue;'#10'        } else if (char === ''v'' && nextChar =='
  +'= ''e'' && source[i + 2] === ''c'' && source[i + 3] === ''4'' && source[i +'
  +' 4] === '' '') {'#10'          states.push(''DECLARE_VARIABLE'');'#10'     '
  +'     argumentType = ''vec4'';'#10'          argumentName = '''';'#10'      '
  +'    i += 5;'#10'          continue;'#10'        }'#10'      }'#10#10'      '
  +'else if (state === ''DECLARE_VARIABLE'') {'#10'        if (argumentName ==='
  +' '''') {'#10'          if (char === '' '') {'#10'            i++;'#10'     '
  +'       continue;'#10'          }'#10'          if (!isStartingVariableName.'
  +'test(char)) {'#10'            throw new Error(''variable name is not expect'
  +'ed string'');'#10'          }'#10'        }'#10'        argumentName += cha'
  +'r;'#10'        if (!isVariableChar.test(nextChar)) {'#10'          states.p'
  +'op();'#10'          argumentNames.push(argumentName);'#10'          argumen'
  +'tTypes.push(typeMap[argumentType]);'#10'        }'#10'      }'#10#10'      '
  +'i++;'#10'    }'#10'    if (states.length > 0) {'#10'      throw new Error('
  +'''GLSL function was not parsable'');'#10'    }'#10'    return {'#10'      a'
  +'rgumentNames,'#10'      argumentTypes,'#10'    };'#10'  }'#10#10'  static n'
  +'ativeFunctionReturnType(source) {'#10'    return typeMap[source.match(/int|'
  +'float|vec[2-4]/)[0]];'#10'  }'#10#10'  static combineKernels(combinedKernel'
  +', lastKernel) {'#10'    combinedKernel.apply(null, arguments);'#10'    cons'
  +'t {'#10'      texSize,'#10'      context,'#10'      threadDim'#10'    } = l'
  +'astKernel.texSize;'#10'    let result;'#10'    if (lastKernel.precision ==='
  +' ''single'') {'#10'      const w = texSize[0];'#10'      const h = Math.cei'
  +'l(texSize[1] / 4);'#10'      result = new Float32Array(w * h * 4 * 4);'#10
  +'      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, resul'
  +'t);'#10'    } else {'#10'      const bytes = new Uint8Array(texSize[0] * te'
  +'xSize[1] * 4);'#10'      context.readPixels(0, 0, texSize[0], texSize[1], c'
  +'ontext.RGBA, context.UNSIGNED_BYTE, bytes);'#10'      result = new Float32A'
  +'rray(bytes.buffer);'#10'    }'#10#10'    result = result.subarray(0, thread'
  +'Dim[0] * threadDim[1] * threadDim[2]);'#10#10'    if (lastKernel.output.len'
  +'gth === 1) {'#10'      return result;'#10'    } else if (lastKernel.output.'
  +'length === 2) {'#10'      return utils.splitArray(result, lastKernel.output'
  +'[0]);'#10'    } else if (lastKernel.output.length === 3) {'#10'      const '
  +'cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]'
  +');'#10'      return cube.map(function(x) {'#10'        return utils.splitAr'
  +'ray(x, lastKernel.output[0]);'#10'      });'#10'    }'#10'  }'#10#10'  cons'
  +'tructor(source, settings) {'#10'    super(source, settings);'#10'    this.t'
  +'ransferValues = null;'#10'    this.formatValues = null;'#10'    this.Textur'
  +'eConstructor = null;'#10'    this.renderOutput = null;'#10'    this.renderR'
  +'awOutput = null;'#10'    this.texSize = null;'#10'    this.translatedSource'
  +' = null;'#10'    this.compiledFragmentShader = null;'#10'    this.compiledV'
  +'ertexShader = null;'#10'    this.switchingKernels = null;'#10'    this._tex'
  +'tureSwitched = null;'#10'    this._mappedTextureSwitched = null;'#10'  }'#10
  +#10'  checkTextureSize() {'#10'    const { features } = this.constructor;'#10
  +'    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > feat'
  +'ures.maxTextureSize) {'#10'      throw new Error(`Texture size [${this.texS'
  +'ize[0]},${this.texSize[1]}] generated by kernel is larger than supported si'
  +'ze [${features.maxTextureSize},${features.maxTextureSize}]`);'#10'    }'#10
  +'  }'#10#10'  translateSource() {'#10'    throw new Error(`"translateSource"'
  +' not defined on ${this.constructor.name}`);'#10'  }'#10#10'  pickRenderStra'
  +'tegy(args) {'#10'    if (this.graphical) {'#10'      this.renderRawOutput ='
  +' this.readPackedPixelsToUint8Array;'#10'      this.transferValues = (pixels'
  +') => pixels;'#10'      this.TextureConstructor = GLTextureGraphical;'#10'  '
  +'    return null;'#10'    }'#10'    if (this.precision === ''unsigned'') {'
  +#10'      this.renderRawOutput = this.readPackedPixelsToUint8Array;'#10'    '
  +'  this.transferValues = this.readPackedPixelsToFloat32Array;'#10'      if ('
  +'this.pipeline) {'#10'        this.renderOutput = this.renderTexture;'#10'  '
  +'      if (this.subKernels !== null) {'#10'          this.renderKernels = th'
  +'is.renderKernelsToTextures;'#10'        }'#10'        switch (this.returnTy'
  +'pe) {'#10'          case ''LiteralInteger'':'#10'          case ''Float'':'
  ,#10'          case ''Number'':'#10'          case ''Integer'':'#10'         '
  +'   if (this.output[2] > 0) {'#10'              this.TextureConstructor = GL'
  +'TextureUnsigned3D;'#10'              return null;'#10'            } else if'
  +' (this.output[1] > 0) {'#10'              this.TextureConstructor = GLTextu'
  +'reUnsigned2D;'#10'              return null;'#10'            } else {'#10' '
  +'             this.TextureConstructor = GLTextureUnsigned;'#10'             '
  +' return null;'#10'            }'#10'            case ''Array(2)'':'#10'    '
  +'        case ''Array(3)'':'#10'            case ''Array(4)'':'#10'         '
  +'     return this.requestFallback(args);'#10'        }'#10'      } else {'#10
  +'        if (this.subKernels !== null) {'#10'          this.renderKernels = '
  +'this.renderKernelsToArrays;'#10'        }'#10'        switch (this.returnTy'
  +'pe) {'#10'          case ''LiteralInteger'':'#10'          case ''Float'':'
  +#10'          case ''Number'':'#10'          case ''Integer'':'#10'         '
  +'   this.renderOutput = this.renderValues;'#10'            if (this.output[2'
  +'] > 0) {'#10'              this.TextureConstructor = GLTextureUnsigned3D;'
  +#10'              this.formatValues = utils.erect3DPackedFloat;'#10'        '
  +'      return null;'#10'            } else if (this.output[1] > 0) {'#10'   '
  +'           this.TextureConstructor = GLTextureUnsigned2D;'#10'             '
  +' this.formatValues = utils.erect2DPackedFloat;'#10'              return nul'
  +'l;'#10'            } else {'#10'              this.TextureConstructor = GLT'
  +'extureUnsigned;'#10'              this.formatValues = utils.erectPackedFloa'
  +'t;'#10'              return null;'#10'            }'#10'            case '''
  +'Array(2)'':'#10'            case ''Array(3)'':'#10'            case ''Array'
  +'(4)'':'#10'              return this.requestFallback(args);'#10'        }'
  +#10'      }'#10'    } else if (this.precision === ''single'') {'#10'      th'
  +'is.renderRawOutput = this.readFloatPixelsToFloat32Array;'#10'      this.tra'
  +'nsferValues = this.readFloatPixelsToFloat32Array;'#10'      if (this.pipeli'
  +'ne) {'#10'        this.renderOutput = this.renderTexture;'#10'        if (t'
  +'his.subKernels !== null) {'#10'          this.renderKernels = this.renderKe'
  +'rnelsToTextures;'#10'        }'#10'        switch (this.returnType) {'#10' '
  +'         case ''LiteralInteger'':'#10'          case ''Float'':'#10'       '
  +'   case ''Number'':'#10'          case ''Integer'': {'#10'            if (t'
  +'his.optimizeFloatMemory) {'#10'              if (this.output[2] > 0) {'#10
  +'                this.TextureConstructor = GLTextureMemoryOptimized3D;'#10' '
  +'               return null;'#10'              } else if (this.output[1] > 0'
  +') {'#10'                this.TextureConstructor = GLTextureMemoryOptimized2'
  +'D;'#10'                return null;'#10'              } else {'#10'        '
  +'        this.TextureConstructor = GLTextureMemoryOptimized;'#10'           '
  +'     return null;'#10'              }'#10'            } else {'#10'        '
  +'      if (this.output[2] > 0) {'#10'                this.TextureConstructor'
  +' = GLTextureFloat3D;'#10'                return null;'#10'              } e'
  +'lse if (this.output[1] > 0) {'#10'                this.TextureConstructor ='
  +' GLTextureFloat2D;'#10'                return null;'#10'              } els'
  +'e {'#10'                this.TextureConstructor = GLTextureFloat;'#10'     '
  +'           return null;'#10'              }'#10'            }'#10'         '
  +' }'#10'          case ''Array(2)'': {'#10'            if (this.output[2] > '
  +'0) {'#10'              this.TextureConstructor = GLTextureArray2Float3D;'#10
  +'              return null;'#10'            } else if (this.output[1] > 0) {'
  +#10'              this.TextureConstructor = GLTextureArray2Float2D;'#10'    '
  +'          return null;'#10'            } else {'#10'              this.Text'
  +'ureConstructor = GLTextureArray2Float;'#10'              return null;'#10' '
  +'           }'#10'          }'#10'          case ''Array(3)'': {'#10'       '
  +'     if (this.output[2] > 0) {'#10'              this.TextureConstructor = '
  +'GLTextureArray3Float3D;'#10'              return null;'#10'            } el'
  +'se if (this.output[1] > 0) {'#10'              this.TextureConstructor = GL'
  +'TextureArray3Float2D;'#10'              return null;'#10'            } else'
  +' {'#10'              this.TextureConstructor = GLTextureArray3Float;'#10'  '
  +'            return null;'#10'            }'#10'          }'#10'          ca'
  +'se ''Array(4)'': {'#10'            if (this.output[2] > 0) {'#10'          '
  +'    this.TextureConstructor = GLTextureArray4Float3D;'#10'              ret'
  +'urn null;'#10'            } else if (this.output[1] > 0) {'#10'            '
  +'  this.TextureConstructor = GLTextureArray4Float2D;'#10'              retur'
  +'n null;'#10'            } else {'#10'              this.TextureConstructor '
  +'= GLTextureArray4Float;'#10'              return null;'#10'            }'#10
  ,'          }'#10'        }'#10'      }'#10'      this.renderOutput = this.re'
  +'nderValues;'#10'      if (this.subKernels !== null) {'#10'        this.rend'
  +'erKernels = this.renderKernelsToArrays;'#10'      }'#10'      if (this.opti'
  +'mizeFloatMemory) {'#10'        switch (this.returnType) {'#10'          cas'
  +'e ''LiteralInteger'':'#10'          case ''Float'':'#10'          case ''Nu'
  +'mber'':'#10'          case ''Integer'': {'#10'            if (this.output[2'
  +'] > 0) {'#10'              this.TextureConstructor = GLTextureMemoryOptimiz'
  +'ed3D;'#10'              this.formatValues = utils.erectMemoryOptimized3DFlo'
  +'at;'#10'              return null;'#10'            } else if (this.output[1'
  +'] > 0) {'#10'              this.TextureConstructor = GLTextureMemoryOptimiz'
  +'ed2D;'#10'              this.formatValues = utils.erectMemoryOptimized2DFlo'
  +'at;'#10'              return null;'#10'            } else {'#10'           '
  +'   this.TextureConstructor = GLTextureMemoryOptimized;'#10'              th'
  +'is.formatValues = utils.erectMemoryOptimizedFloat;'#10'              return'
  +' null;'#10'            }'#10'          }'#10'          case ''Array(2)'': {'
  +#10'            if (this.output[2] > 0) {'#10'              this.TextureCons'
  +'tructor = GLTextureArray2Float3D;'#10'              this.formatValues = uti'
  +'ls.erect3DArray2;'#10'              return null;'#10'            } else if '
  +'(this.output[1] > 0) {'#10'              this.TextureConstructor = GLTextur'
  +'eArray2Float2D;'#10'              this.formatValues = utils.erect2DArray2;'
  +#10'              return null;'#10'            } else {'#10'              th'
  +'is.TextureConstructor = GLTextureArray2Float;'#10'              this.format'
  +'Values = utils.erectArray2;'#10'              return null;'#10'            '
  +'}'#10'          }'#10'          case ''Array(3)'': {'#10'            if (th'
  +'is.output[2] > 0) {'#10'              this.TextureConstructor = GLTextureAr'
  +'ray3Float3D;'#10'              this.formatValues = utils.erect3DArray3;'#10
  +'              return null;'#10'            } else if (this.output[1] > 0) {'
  +#10'              this.TextureConstructor = GLTextureArray3Float2D;'#10'    '
  +'          this.formatValues = utils.erect2DArray3;'#10'              return'
  +' null;'#10'            } else {'#10'              this.TextureConstructor ='
  +' GLTextureArray3Float;'#10'              this.formatValues = utils.erectArr'
  +'ay3;'#10'              return null;'#10'            }'#10'          }'#10' '
  +'         case ''Array(4)'': {'#10'            if (this.output[2] > 0) {'#10
  +'              this.TextureConstructor = GLTextureArray4Float3D;'#10'       '
  +'       this.formatValues = utils.erect3DArray4;'#10'              return nu'
  +'ll;'#10'            } else if (this.output[1] > 0) {'#10'              this'
  +'.TextureConstructor = GLTextureArray4Float2D;'#10'              this.format'
  +'Values = utils.erect2DArray4;'#10'              return null;'#10'          '
  +'  } else {'#10'              this.TextureConstructor = GLTextureArray4Float'
  +';'#10'              this.formatValues = utils.erectArray4;'#10'            '
  +'  return null;'#10'            }'#10'          }'#10'        }'#10'      } '
  +'else {'#10'        switch (this.returnType) {'#10'          case ''LiteralI'
  +'nteger'':'#10'          case ''Float'':'#10'          case ''Number'':'#10
  +'          case ''Integer'': {'#10'            if (this.output[2] > 0) {'#10
  +'              this.TextureConstructor = GLTextureFloat3D;'#10'             '
  +' this.formatValues = utils.erect3DFloat;'#10'              return null;'#10
  +'            } else if (this.output[1] > 0) {'#10'              this.Texture'
  +'Constructor = GLTextureFloat2D;'#10'              this.formatValues = utils'
  +'.erect2DFloat;'#10'              return null;'#10'            } else {'#10
  +'              this.TextureConstructor = GLTextureFloat;'#10'              t'
  +'his.formatValues = utils.erectFloat;'#10'              return null;'#10'   '
  +'         }'#10'          }'#10'          case ''Array(2)'': {'#10'         '
  +'   if (this.output[2] > 0) {'#10'              this.TextureConstructor = GL'
  +'TextureArray2Float3D;'#10'              this.formatValues = utils.erect3DAr'
  +'ray2;'#10'              return null;'#10'            } else if (this.output'
  +'[1] > 0) {'#10'              this.TextureConstructor = GLTextureArray2Float'
  +'2D;'#10'              this.formatValues = utils.erect2DArray2;'#10'        '
  +'      return null;'#10'            } else {'#10'              this.TextureC'
  +'onstructor = GLTextureArray2Float;'#10'              this.formatValues = ut'
  +'ils.erectArray2;'#10'              return null;'#10'            }'#10'     '
  +'     }'#10'          case ''Array(3)'': {'#10'            if (this.output[2'
  +'] > 0) {'#10'              this.TextureConstructor = GLTextureArray3Float3D'
  +';'#10'              this.formatValues = utils.erect3DArray3;'#10'          '
  +'    return null;'#10'            } else if (this.output[1] > 0) {'#10'     '
  ,'         this.TextureConstructor = GLTextureArray3Float2D;'#10'            '
  +'  this.formatValues = utils.erect2DArray3;'#10'              return null;'
  +#10'            } else {'#10'              this.TextureConstructor = GLTextu'
  +'reArray3Float;'#10'              this.formatValues = utils.erectArray3;'#10
  +'              return null;'#10'            }'#10'          }'#10'          '
  +'case ''Array(4)'': {'#10'            if (this.output[2] > 0) {'#10'        '
  +'      this.TextureConstructor = GLTextureArray4Float3D;'#10'              t'
  +'his.formatValues = utils.erect3DArray4;'#10'              return null;'#10
  +'            } else if (this.output[1] > 0) {'#10'              this.Texture'
  +'Constructor = GLTextureArray4Float2D;'#10'              this.formatValues ='
  +' utils.erect2DArray4;'#10'              return null;'#10'            } else'
  +' {'#10'              this.TextureConstructor = GLTextureArray4Float;'#10'  '
  +'            this.formatValues = utils.erectArray4;'#10'              return'
  +' null;'#10'            }'#10'          }'#10'        }'#10'      }'#10'    '
  +'} else {'#10'      throw new Error(`unhandled precision of "${this.precisio'
  +'n}"`);'#10'    }'#10#10'    throw new Error(`unhandled return type "${this.'
  +'returnType}"`);'#10'  }'#10#10'  getKernelString() {'#10'    throw new Erro'
  +'r(`abstract method call`);'#10'  }'#10#10'  getMainResultTexture() {'#10'  '
  +'  switch (this.returnType) {'#10'      case ''LiteralInteger'':'#10'      c'
  +'ase ''Float'':'#10'      case ''Integer'':'#10'      case ''Number'':'#10' '
  +'       return this.getMainResultNumberTexture();'#10'      case ''Array(2)'
  +''':'#10'        return this.getMainResultArray2Texture();'#10'      case '''
  +'Array(3)'':'#10'        return this.getMainResultArray3Texture();'#10'     '
  +' case ''Array(4)'':'#10'        return this.getMainResultArray4Texture();'
  +#10'      default:'#10'        throw new Error(`unhandled returnType type ${'
  +' this.returnType }`);'#10'    }'#10'  }'#10#10'  getMainResultKernelNumberT'
  +'exture() {'#10'    throw new Error(`abstract method call`);'#10'  }'#10'  g'
  +'etMainResultSubKernelNumberTexture() {'#10'    throw new Error(`abstract me'
  +'thod call`);'#10'  }'#10'  getMainResultKernelArray2Texture() {'#10'    thr'
  +'ow new Error(`abstract method call`);'#10'  }'#10'  getMainResultSubKernelA'
  +'rray2Texture() {'#10'    throw new Error(`abstract method call`);'#10'  }'
  +#10'  getMainResultKernelArray3Texture() {'#10'    throw new Error(`abstract'
  +' method call`);'#10'  }'#10'  getMainResultSubKernelArray3Texture() {'#10' '
  +'   throw new Error(`abstract method call`);'#10'  }'#10'  getMainResultKern'
  +'elArray4Texture() {'#10'    throw new Error(`abstract method call`);'#10'  '
  +'}'#10'  getMainResultSubKernelArray4Texture() {'#10'    throw new Error(`ab'
  +'stract method call`);'#10'  }'#10'  getMainResultGraphical() {'#10'    thro'
  +'w new Error(`abstract method call`);'#10'  }'#10'  getMainResultMemoryOptim'
  +'izedFloats() {'#10'    throw new Error(`abstract method call`);'#10'  }'#10
  +'  getMainResultPackedPixels() {'#10'    throw new Error(`abstract method ca'
  +'ll`);'#10'  }'#10#10'  getMainResultString() {'#10'    if (this.graphical) '
  +'{'#10'      return this.getMainResultGraphical();'#10'    } else if (this.p'
  +'recision === ''single'') {'#10'      if (this.optimizeFloatMemory) {'#10'  '
  +'      return this.getMainResultMemoryOptimizedFloats();'#10'      }'#10'   '
  +'   return this.getMainResultTexture();'#10'    } else {'#10'      return th'
  +'is.getMainResultPackedPixels();'#10'    }'#10'  }'#10#10'  getMainResultNum'
  +'berTexture() {'#10'    return utils.linesToString(this.getMainResultKernelN'
  +'umberTexture()) +'#10'      utils.linesToString(this.getMainResultSubKernel'
  +'NumberTexture());'#10'  }'#10#10'  getMainResultArray2Texture() {'#10'    r'
  +'eturn utils.linesToString(this.getMainResultKernelArray2Texture()) +'#10'  '
  +'    utils.linesToString(this.getMainResultSubKernelArray2Texture());'#10'  '
  +'}'#10#10'  getMainResultArray3Texture() {'#10'    return utils.linesToStrin'
  +'g(this.getMainResultKernelArray3Texture()) +'#10'      utils.linesToString('
  +'this.getMainResultSubKernelArray3Texture());'#10'  }'#10#10'  getMainResult'
  +'Array4Texture() {'#10'    return utils.linesToString(this.getMainResultKern'
  +'elArray4Texture()) +'#10'      utils.linesToString(this.getMainResultSubKer'
  +'nelArray4Texture());'#10'  }'#10#10'  getFloatTacticDeclaration() {'#10'   '
  +' const variablePrecision = this.getVariablePrecisionString(this.texSize, th'
  +'is.tactic);'#10'    return `precision ${variablePrecision} float;\n`;'#10' '
  +' }'#10#10'  getIntTacticDeclaration() {'#10'    return `precision ${this.ge'
  +'tVariablePrecisionString(this.texSize, this.tactic, true)} int;\n`;'#10'  }'
  +#10#10'  getSampler2DTacticDeclaration() {'#10'    return `precision ${this.'
  +'getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\n`;'#10' '
  +' }'#10#10'  getSampler2DArrayTacticDeclaration() {'#10'    return `precisio'
  ,'n ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DAr'
  +'ray;\n`;'#10'  }'#10#10'  renderTexture() {'#10'    return this.immutable ?'
  +' this.texture.clone() : this.texture;'#10'  }'#10'  readPackedPixelsToUint8'
  +'Array() {'#10'    if (this.precision !== ''unsigned'') throw new Error(''Re'
  +'quires this.precision to be "unsigned"'');'#10'    const {'#10'      texSiz'
  +'e,'#10'      context: gl'#10'    } = this;'#10'    const result = new Uint8'
  +'Array(texSize[0] * texSize[1] * 4);'#10'    gl.readPixels(0, 0, texSize[0],'
  +' texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);'#10'    return result;'#10
  +'  }'#10#10'  readPackedPixelsToFloat32Array() {'#10'    return new Float32A'
  +'rray(this.readPackedPixelsToUint8Array().buffer);'#10'  }'#10#10'  readFloa'
  +'tPixelsToFloat32Array() {'#10'    if (this.precision !== ''single'') throw '
  +'new Error(''Requires this.precision to be "single"'');'#10'    const {'#10
  +'      texSize,'#10'      context: gl'#10'    } = this;'#10'    const w = te'
  +'xSize[0];'#10'    const h = texSize[1];'#10'    const result = new Float32A'
  +'rray(w * h * 4);'#10'    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, resul'
  +'t);'#10'    return result;'#10'  }'#10#10'  getPixels(flip) {'#10'    const'
  +' {'#10'      context: gl,'#10'      output'#10'    } = this;'#10'    const '
  +'[width, height] = output;'#10'    const pixels = new Uint8Array(width * hei'
  +'ght * 4);'#10'    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_B'
  +'YTE, pixels);'#10'    return new Uint8ClampedArray((flip ? pixels : utils.f'
  +'lipPixels(pixels, width, height)).buffer);'#10'  }'#10#10'  renderKernelsTo'
  +'Arrays() {'#10'    const result = {'#10'      result: this.renderOutput(),'
  +#10'    };'#10'    for (let i = 0; i < this.subKernels.length; i++) {'#10'  '
  +'    result[this.subKernels[i].property] = this.mappedTextures[i].toArray();'
  +#10'    }'#10'    return result;'#10'  }'#10#10'  renderKernelsToTextures() '
  +'{'#10'    const result = {'#10'      result: this.renderOutput(),'#10'    }'
  +';'#10'    if (this.immutable) {'#10'      for (let i = 0; i < this.subKerne'
  +'ls.length; i++) {'#10'        result[this.subKernels[i].property] = this.ma'
  +'ppedTextures[i].clone();'#10'      }'#10'    } else {'#10'      for (let i '
  +'= 0; i < this.subKernels.length; i++) {'#10'        result[this.subKernels['
  +'i].property] = this.mappedTextures[i];'#10'      }'#10'    }'#10'    return'
  +' result;'#10'  }'#10#10'  resetSwitchingKernels() {'#10'    const existingV'
  +'alue = this.switchingKernels;'#10'    this.switchingKernels = null;'#10'   '
  +' return existingValue;'#10'  }'#10#10'  setOutput(output) {'#10'    const n'
  +'ewOutput = this.toKernelOutput(output);'#10'    if (this.program) {'#10'   '
  +'   if (!this.dynamicOutput) {'#10'        throw new Error(''Resizing a kern'
  +'el with dynamicOutput: false is not possible'');'#10'      }'#10'      cons'
  +'t newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];'#10
  +'      const newTexSize = utils.getKernelTextureSize({'#10'        optimizeF'
  +'loatMemory: this.optimizeFloatMemory,'#10'        precision: this.precision'
  +','#10'      }, newThreadDim);'#10'      const oldTexSize = this.texSize;'#10
  +'      if (oldTexSize) {'#10'        const oldPrecision = this.getVariablePr'
  +'ecisionString(oldTexSize, this.tactic);'#10'        const newPrecision = th'
  +'is.getVariablePrecisionString(newTexSize, this.tactic);'#10'        if (old'
  +'Precision !== newPrecision) {'#10'          if (this.debug) {'#10'         '
  +'   console.warn(''Precision requirement changed, asking GPU instance to rec'
  +'ompile'');'#10'          }'#10'          this.switchKernels({'#10'         '
  +'   type: ''outputPrecisionMismatch'','#10'            precision: newPrecisi'
  +'on,'#10'            needed: output'#10'          });'#10'          return;'
  +#10'        }'#10'      }'#10'      this.output = newOutput;'#10'      this.'
  +'threadDim = newThreadDim;'#10'      this.texSize = newTexSize;'#10'      co'
  +'nst { context: gl } = this;'#10'      gl.bindFramebuffer(gl.FRAMEBUFFER, th'
  +'is.framebuffer);'#10'      this.updateMaxTexSize();'#10'      this.framebuf'
  +'fer.width = this.texSize[0];'#10'      this.framebuffer.height = this.texSi'
  +'ze[1];'#10'      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);'
  +#10'      this.canvas.width = this.maxTexSize[0];'#10'      this.canvas.heig'
  +'ht = this.maxTexSize[1];'#10'      if (this.texture) {'#10'        this.tex'
  +'ture.delete();'#10'      }'#10'      this.texture = null;'#10'      this._s'
  +'etupOutputTexture();'#10'      if (this.mappedTextures && this.mappedTextur'
  +'es.length > 0) {'#10'        for (let i = 0; i < this.mappedTextures.length'
  +'; i++) {'#10'          this.mappedTextures[i].delete();'#10'        }'#10' '
  +'       this.mappedTextures = null;'#10'        this._setupSubOutputTextures'
  +'();'#10'      }'#10'    } else {'#10'      this.output = newOutput;'#10'   '
  +' }'#10'    return this;'#10'  }'#10'  renderValues() {'#10'    return this.'
  ,'formatValues('#10'      this.transferValues(),'#10'      this.output[0],'#10
  +'      this.output[1],'#10'      this.output[2]'#10'    );'#10'  }'#10'  swi'
  +'tchKernels(reason) {'#10'    if (this.switchingKernels) {'#10'      this.sw'
  +'itchingKernels.push(reason);'#10'    } else {'#10'      this.switchingKerne'
  +'ls = [reason];'#10'    }'#10'  }'#10'  getVariablePrecisionString(textureSi'
  +'ze = this.texSize, tactic = this.tactic, isInt = false) {'#10'    if (!tact'
  +'ic) {'#10'      if (!this.constructor.features.isSpeedTacticSupported) retu'
  +'rn ''highp'';'#10'      const low = this.constructor.features[isInt ? ''low'
  +'IntPrecision'' : ''lowFloatPrecision''];'#10'      const medium = this.cons'
  +'tructor.features[isInt ? ''mediumIntPrecision'' : ''mediumFloatPrecision'']'
  +';'#10'      const high = this.constructor.features[isInt ? ''highIntPrecisi'
  +'on'' : ''highFloatPrecision''];'#10'      const requiredSize = Math.log2(te'
  +'xtureSize[0] * textureSize[1]);'#10'      if (requiredSize <= low.rangeMax)'
  +' {'#10'        return ''lowp'';'#10'      } else if (requiredSize <= medium'
  +'.rangeMax) {'#10'        return ''mediump'';'#10'      } else if (requiredS'
  +'ize <= high.rangeMax) {'#10'        return ''highp'';'#10'      } else {'#10
  +'        throw new Error(`The required size exceeds that of the ability of y'
  +'our system`);'#10'      }'#10'    }'#10'    switch (tactic) {'#10'      cas'
  +'e ''speed'':'#10'        return ''lowp'';'#10'      case ''balanced'':'#10
  +'        return ''mediump'';'#10'      case ''precision'':'#10'        retur'
  +'n ''highp'';'#10'      default:'#10'        throw new Error(`Unknown tactic'
  +' "${tactic}" use "speed", "balanced", "precision", or empty for auto`);'#10
  +'    }'#10'  }'#10#10'  updateTextureArgumentRefs(kernelValue, arg) {'#10'  '
  +'  if (!this.immutable) return;'#10'    if (this.texture.texture === arg.tex'
  +'ture) {'#10'      const { prevArg } = kernelValue;'#10'      if (prevArg) {'
  +#10'        if (prevArg.texture._refs === 1) {'#10'          this.texture.de'
  +'lete();'#10'          this.texture = prevArg.clone();'#10'          this._t'
  +'extureSwitched = true;'#10'        }'#10'        prevArg.delete();'#10'    '
  +'  }'#10'      kernelValue.prevArg = arg.clone();'#10'    } else if (this.ma'
  +'ppedTextures && this.mappedTextures.length > 0) {'#10'      const { mappedT'
  +'extures } = this;'#10'      for (let i = 0; i < mappedTextures.length; i++)'
  +' {'#10'        const mappedTexture = mappedTextures[i];'#10'        if (map'
  +'pedTexture.texture === arg.texture) {'#10'          const { prevArg } = ker'
  +'nelValue;'#10'          if (prevArg) {'#10'            if (prevArg.texture.'
  +'_refs === 1) {'#10'              mappedTexture.delete();'#10'              '
  +'mappedTextures[i] = prevArg.clone();'#10'              this._mappedTextureS'
  +'witched[i] = true;'#10'            }'#10'            prevArg.delete();'#10
  +'          }'#10'          kernelValue.prevArg = arg.clone();'#10'          '
  +'return;'#10'        }'#10'      }'#10'    }'#10'  }'#10#10'  onActivate(pre'
  +'viousKernel) {'#10'    this._textureSwitched = true;'#10'    this.texture ='
  +' previousKernel.texture;'#10'    if (this.mappedTextures) {'#10'      for ('
  +'let i = 0; i < this.mappedTextures.length; i++) {'#10'        this._mappedT'
  +'extureSwitched[i] = true;'#10'      }'#10'      this.mappedTextures = previ'
  +'ousKernel.mappedTextures;'#10'    }'#10'  }'#10#10'  initCanvas() {}'#10'}'
  +#10#10'const typeMap = {'#10'  int: ''Integer'','#10'  float: ''Number'','#10
  +'  vec2: ''Array(2)'','#10'  vec3: ''Array(3)'','#10'  vec4: ''Array(4)'','
  +#10'};'#10#10'module.exports = {'#10'  GLKernel'#10'};'#10'},{"../../utils":'
  +'114,"../kernel":36,"./texture/array-2-float":16,"./texture/array-2-float-2d'
  +'":14,"./texture/array-2-float-3d":15,"./texture/array-3-float":19,"./textur'
  +'e/array-3-float-2d":17,"./texture/array-3-float-3d":18,"./texture/array-4-f'
  +'loat":22,"./texture/array-4-float-2d":20,"./texture/array-4-float-3d":21,".'
  +'/texture/float":25,"./texture/float-2d":23,"./texture/float-3d":24,"./textu'
  +'re/graphical":26,"./texture/memory-optimized":30,"./texture/memory-optimize'
  +'d-2d":28,"./texture/memory-optimized-3d":29,"./texture/unsigned":33,"./text'
  +'ure/unsigned-2d":31,"./texture/unsigned-3d":32}],14:[function(require,modul'
  +'e,exports){'#10'const { utils } = require(''../../../utils'');'#10'const { '
  +'GLTextureFloat } = require(''./float'');'#10#10'class GLTextureArray2Float2'
  +'D extends GLTextureFloat {'#10'  constructor(settings) {'#10'    super(sett'
  +'ings);'#10'    this.type = ''ArrayTexture(2)'';'#10'  }'#10'  toArray() {'
  +#10'    return utils.erect2DArray2(this.renderValues(), this.output[0], this'
  +'.output[1]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureArray2F'
  +'loat2D'#10'};'#10'},{"../../../utils":114,"./float":25}],15:[function(requi'
  +'re,module,exports){'#10'const { utils } = require(''../../../utils'');'#10
  +'const { GLTextureFloat } = require(''./float'');'#10#10'class GLTextureArra'
  ,'y2Float3D extends GLTextureFloat {'#10'  constructor(settings) {'#10'    su'
  +'per(settings);'#10'    this.type = ''ArrayTexture(2)'';'#10'  }'#10'  toArr'
  +'ay() {'#10'    return utils.erect3DArray2(this.renderValues(), this.output['
  +'0], this.output[1], this.output[2]);'#10'  }'#10'}'#10#10'module.exports = '
  +'{'#10'  GLTextureArray2Float3D'#10'};'#10'},{"../../../utils":114,"./float"'
  +':25}],16:[function(require,module,exports){'#10'const { utils } = require('
  +'''../../../utils'');'#10'const { GLTextureFloat } = require(''./float'');'
  +#10#10'class GLTextureArray2Float extends GLTextureFloat {'#10'  constructor'
  +'(settings) {'#10'    super(settings);'#10'    this.type = ''ArrayTexture(2)'
  +''';'#10'  }'#10'  toArray() {'#10'    return utils.erectArray2(this.renderV'
  +'alues(), this.output[0], this.output[1]);'#10'  }'#10'}'#10#10'module.expor'
  +'ts = {'#10'  GLTextureArray2Float'#10'};'#10'},{"../../../utils":114,"./flo'
  +'at":25}],17:[function(require,module,exports){'#10'const { utils } = requir'
  +'e(''../../../utils'');'#10'const { GLTextureFloat } = require(''./float'');'
  +#10#10'class GLTextureArray3Float2D extends GLTextureFloat {'#10'  construct'
  +'or(settings) {'#10'    super(settings);'#10'    this.type = ''ArrayTexture('
  +'3)'';'#10'  }'#10'  toArray() {'#10'    return utils.erect2DArray3(this.ren'
  +'derValues(), this.output[0], this.output[1]);'#10'  }'#10'}'#10#10'module.e'
  +'xports = {'#10'  GLTextureArray3Float2D'#10'};'#10'},{"../../../utils":114,'
  +'"./float":25}],18:[function(require,module,exports){'#10'const { utils } = '
  +'require(''../../../utils'');'#10'const { GLTextureFloat } = require(''./flo'
  +'at'');'#10#10'class GLTextureArray3Float3D extends GLTextureFloat {'#10'  c'
  +'onstructor(settings) {'#10'    super(settings);'#10'    this.type = ''Array'
  +'Texture(3)'';'#10'  }'#10'  toArray() {'#10'    return utils.erect3DArray3('
  +'this.renderValues(), this.output[0], this.output[1], this.output[2]);'#10' '
  +' }'#10'}'#10#10'module.exports = {'#10'  GLTextureArray3Float3D'#10'};'#10
  +'},{"../../../utils":114,"./float":25}],19:[function(require,module,exports)'
  +'{'#10'const { utils } = require(''../../../utils'');'#10'const { GLTextureF'
  +'loat } = require(''./float'');'#10#10'class GLTextureArray3Float extends GL'
  +'TextureFloat {'#10'  constructor(settings) {'#10'    super(settings);'#10' '
  +'   this.type = ''ArrayTexture(3)'';'#10'  }'#10'  toArray() {'#10'    retur'
  +'n utils.erectArray3(this.renderValues(), this.output[0]);'#10'  }'#10'}'#10
  +#10'module.exports = {'#10'  GLTextureArray3Float'#10'};'#10'},{"../../../ut'
  +'ils":114,"./float":25}],20:[function(require,module,exports){'#10'const { u'
  +'tils } = require(''../../../utils'');'#10'const { GLTextureFloat } = requir'
  +'e(''./float'');'#10#10'class GLTextureArray4Float2D extends GLTextureFloat '
  +'{'#10'  constructor(settings) {'#10'    super(settings);'#10'    this.type '
  +'= ''ArrayTexture(4)'';'#10'  }'#10'  toArray() {'#10'    return utils.erect'
  +'2DArray4(this.renderValues(), this.output[0], this.output[1]);'#10'  }'#10
  +'}'#10#10'module.exports = {'#10'  GLTextureArray4Float2D'#10'};'#10'},{"../'
  +'../../utils":114,"./float":25}],21:[function(require,module,exports){'#10'c'
  +'onst { utils } = require(''../../../utils'');'#10'const { GLTextureFloat } '
  +'= require(''./float'');'#10#10'class GLTextureArray4Float3D extends GLTextu'
  +'reFloat {'#10'  constructor(settings) {'#10'    super(settings);'#10'    th'
  +'is.type = ''ArrayTexture(4)'';'#10'  }'#10'  toArray() {'#10'    return uti'
  +'ls.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.'
  +'output[2]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureArray4Fl'
  +'oat3D'#10'};'#10'},{"../../../utils":114,"./float":25}],22:[function(requir'
  +'e,module,exports){'#10'const { utils } = require(''../../../utils'');'#10'c'
  +'onst { GLTextureFloat } = require(''./float'');'#10#10'class GLTextureArray'
  +'4Float extends GLTextureFloat {'#10'  constructor(settings) {'#10'    super'
  +'(settings);'#10'    this.type = ''ArrayTexture(4)'';'#10'  }'#10'  toArray('
  +') {'#10'    return utils.erectArray4(this.renderValues(), this.output[0]);'
  +#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureArray4Float'#10'};'#10
  +'},{"../../../utils":114,"./float":25}],23:[function(require,module,exports)'
  +'{'#10'const { utils } = require(''../../../utils'');'#10'const { GLTextureF'
  +'loat } = require(''./float'');'#10#10'class GLTextureFloat2D extends GLText'
  +'ureFloat {'#10'  constructor(settings) {'#10'    super(settings);'#10'    t'
  +'his.type = ''ArrayTexture(1)'';'#10'  }'#10'  toArray() {'#10'    return ut'
  +'ils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);'#10
  +'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureFloat2D'#10'};'#10'},{".'
  +'./../../utils":114,"./float":25}],24:[function(require,module,exports){'#10
  +'const { utils } = require(''../../../utils'');'#10'const { GLTextureFloat }'
  +' = require(''./float'');'#10#10'class GLTextureFloat3D extends GLTextureFlo'
  ,'at {'#10'  constructor(settings) {'#10'    super(settings);'#10'    this.ty'
  +'pe = ''ArrayTexture(1)'';'#10'  }'#10'  toArray() {'#10'    return utils.er'
  +'ect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output'
  +'[2]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureFloat3D'#10'};'
  +#10'},{"../../../utils":114,"./float":25}],25:[function(require,module,expor'
  +'ts){'#10'const { utils } = require(''../../../utils'');'#10'const { GLTextu'
  +'re } = require(''./index'');'#10#10'class GLTextureFloat extends GLTexture '
  +'{'#10'  get textureType() {'#10'    return this.context.FLOAT;'#10'  }'#10
  +'  constructor(settings) {'#10'    super(settings);'#10'    this.type = ''Ar'
  +'rayTexture(1)'';'#10'  }'#10'  renderRawOutput() {'#10'    const gl = this.'
  +'context;'#10'    const size = this.size;'#10'    gl.bindFramebuffer(gl.FRAM'
  +'EBUFFER, this.framebuffer());'#10'    gl.framebufferTexture2D('#10'      gl'
  +'.FRAMEBUFFER,'#10'      gl.COLOR_ATTACHMENT0,'#10'      gl.TEXTURE_2D,'#10
  +'      this.texture,'#10'      0'#10'    );'#10'    const result = new Float'
  +'32Array(size[0] * size[1] * 4);'#10'    gl.readPixels(0, 0, size[0], size[1'
  +'], gl.RGBA, gl.FLOAT, result);'#10'    return result;'#10'  }'#10'  renderV'
  +'alues() {'#10'    if (this._deleted) return null;'#10'    return this.rende'
  +'rRawOutput();'#10'  }'#10'  toArray() {'#10'    return utils.erectFloat(thi'
  +'s.renderValues(), this.output[0]);'#10'  }'#10'}'#10#10'module.exports = {'
  +#10'  GLTextureFloat'#10'};'#10'},{"../../../utils":114,"./index":27}],26:[f'
  +'unction(require,module,exports){'#10'const { GLTextureUnsigned } = require('
  +'''./unsigned'');'#10#10'class GLTextureGraphical extends GLTextureUnsigned '
  +'{'#10'  constructor(settings) {'#10'    super(settings);'#10'    this.type '
  +'= ''ArrayTexture(4)'';'#10'  }'#10'  toArray() {'#10'    return this.render'
  +'Values();'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureGraphical'
  +#10'};'#10'},{"./unsigned":33}],27:[function(require,module,exports){'#10'co'
  +'nst { Texture } = require(''../../../texture'');'#10#10'class GLTexture ext'
  +'ends Texture {'#10'  get textureType() {'#10'    throw new Error(`"textureT'
  +'ype" not implemented on ${ this.name }`);'#10'  }'#10#10'  clone() {'#10'  '
  +'  return new this.constructor(this);'#10'  }'#10#10'  beforeMutate() {'#10
  +'    if (this.texture._refs > 1) {'#10'      this.newTexture();'#10'      re'
  +'turn true;'#10'    }'#10'    return false;'#10'  }'#10#10'  cloneTexture() '
  +'{'#10'    this.texture._refs--;'#10'    const { context: gl, size, texture,'
  +' kernel } = this;'#10'    if (kernel.debug) {'#10'      console.warn(''clon'
  +'ing internal texture'');'#10'    }'#10'    gl.bindFramebuffer(gl.FRAMEBUFFE'
  +'R, this.framebuffer());'#10'    selectTexture(gl, texture);'#10'    gl.fram'
  +'ebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, textu'
  +'re, 0);'#10'    const target = gl.createTexture();'#10'    selectTexture(gl'
  +', target);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, siz'
  +'e[0], size[1], 0, this.textureFormat, this.textureType, null);'#10'    gl.c'
  +'opyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);'#10'    t'
  +'arget._refs = 1;'#10'    this.texture = target;'#10'  }'#10#10'  newTexture'
  +'() {'#10'    this.texture._refs--;'#10'    const gl = this.context;'#10'   '
  +' const size = this.size;'#10'    const kernel = this.kernel;'#10'    if (ke'
  +'rnel.debug) {'#10'      console.warn(''new internal texture'');'#10'    }'
  +#10'    const target = gl.createTexture();'#10'    selectTexture(gl, target)'
  +';'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], siz'
  +'e[1], 0, this.textureFormat, this.textureType, null);'#10'    target._refs '
  +'= 1;'#10'    this.texture = target;'#10'  }'#10#10'  clear() {'#10'    if ('
  +'this.texture._refs) {'#10'      this.texture._refs--;'#10'      const gl = '
  +'this.context;'#10'      const target = this.texture = gl.createTexture();'
  +#10'      selectTexture(gl, target);'#10'      const size = this.size;'#10' '
  +'     target._refs = 1;'#10'      gl.texImage2D(gl.TEXTURE_2D, 0, this.inter'
  +'nalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null)'
  +';'#10'    }'#10'    const { context: gl, texture } = this;'#10'    gl.bindF'
  +'ramebuffer(gl.FRAMEBUFFER, this.framebuffer());'#10'    gl.bindTexture(gl.T'
  +'EXTURE_2D, texture);'#10'    selectTexture(gl, texture);'#10'    gl.framebu'
  +'fferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,'
  +' 0);'#10'    gl.clearColor(0, 0, 0, 0);'#10'    gl.clear(gl.COLOR_BUFFER_BI'
  +'T | gl.DEPTH_BUFFER_BIT);'#10'  }'#10#10'  delete() {'#10'    if (this._del'
  +'eted) return;'#10'    this._deleted = true;'#10'    if (this.texture._refs)'
  +' {'#10'      this.texture._refs--;'#10'      if (this.texture._refs) return'
  +';'#10'    }'#10'    this.context.deleteTexture(this.texture);'#10'    if (t'
  +'his.texture._refs === 0 && this._framebuffer) {'#10'      this.context.dele'
  ,'teFramebuffer(this._framebuffer);'#10'      this._framebuffer = null;'#10' '
  +'   }'#10'  }'#10#10'  framebuffer() {'#10'    if (!this._framebuffer) {'#10
  +'      this._framebuffer = this.context.createFramebuffer();'#10'    }'#10' '
  +'   this._framebuffer.width = this.size[0];'#10'    this._framebuffer.height'
  +' = this.size[1];'#10'    return this._framebuffer;'#10'  }'#10'}'#10#10'fun'
  +'ction selectTexture(gl, texture) {'#10'  gl.activeTexture(gl.TEXTURE15);'#10
  +'  gl.bindTexture(gl.TEXTURE_2D, texture);'#10'  gl.texParameteri(gl.TEXTURE'
  +'_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#10'  gl.texParameteri(gl.TEXTUR'
  +'E_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#10'  gl.texParameteri(gl.TEXTU'
  +'RE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'  gl.texParameteri(gl.TEXTUR'
  +'E_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'#10'}'#10#10'module.exports = { G'
  +'LTexture };'#10'},{"../../../texture":113}],28:[function(require,module,exp'
  +'orts){'#10'const { utils } = require(''../../../utils'');'#10'const { GLTex'
  +'tureFloat } = require(''./float'');'#10#10'class GLTextureMemoryOptimized2D'
  +' extends GLTextureFloat {'#10'  constructor(settings) {'#10'    super(setti'
  +'ngs);'#10'    this.type = ''MemoryOptimizedNumberTexture'';'#10'  }'#10'  t'
  +'oArray() {'#10'    return utils.erectMemoryOptimized2DFloat(this.renderValu'
  +'es(), this.output[0], this.output[1]);'#10'  }'#10'}'#10#10'module.exports '
  +'= {'#10'  GLTextureMemoryOptimized2D'#10'};'#10'},{"../../../utils":114,"./'
  +'float":25}],29:[function(require,module,exports){'#10'const { utils } = req'
  +'uire(''../../../utils'');'#10'const { GLTextureFloat } = require(''./float'
  +''');'#10#10'class GLTextureMemoryOptimized3D extends GLTextureFloat {'#10' '
  +' constructor(settings) {'#10'    super(settings);'#10'    this.type = ''Mem'
  +'oryOptimizedNumberTexture'';'#10'  }'#10'  toArray() {'#10'    return utils'
  +'.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.outp'
  +'ut[1], this.output[2]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTex'
  +'tureMemoryOptimized3D'#10'};'#10'},{"../../../utils":114,"./float":25}],30:'
  +'[function(require,module,exports){'#10'const { utils } = require(''../../..'
  +'/utils'');'#10'const { GLTextureFloat } = require(''./float'');'#10#10'clas'
  +'s GLTextureMemoryOptimized extends GLTextureFloat {'#10'  constructor(setti'
  +'ngs) {'#10'    super(settings);'#10'    this.type = ''MemoryOptimizedNumber'
  +'Texture'';'#10'  }'#10'  toArray() {'#10'    return utils.erectMemoryOptimi'
  +'zedFloat(this.renderValues(), this.output[0]);'#10'  }'#10'}'#10#10'module.'
  +'exports = {'#10'  GLTextureMemoryOptimized'#10'};'#10'},{"../../../utils":1'
  +'14,"./float":25}],31:[function(require,module,exports){'#10'const { utils }'
  +' = require(''../../../utils'');'#10'const { GLTextureUnsigned } = require('
  +'''./unsigned'');'#10#10'class GLTextureUnsigned2D extends GLTextureUnsigned'
  +' {'#10'  constructor(settings) {'#10'    super(settings);'#10'    this.type'
  +' = ''NumberTexture'';'#10'  }'#10'  toArray() {'#10'    return utils.erect2'
  +'DPackedFloat(this.renderValues(), this.output[0], this.output[1]);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  GLTextureUnsigned2D'#10'};'#10'},{"../'
  +'../../utils":114,"./unsigned":33}],32:[function(require,module,exports){'#10
  +'const { utils } = require(''../../../utils'');'#10'const { GLTextureUnsigne'
  +'d } = require(''./unsigned'');'#10#10'class GLTextureUnsigned3D extends GLT'
  +'extureUnsigned {'#10'  constructor(settings) {'#10'    super(settings);'#10
  +'    this.type = ''NumberTexture'';'#10'  }'#10'  toArray() {'#10'    return'
  +' utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output['
  +'1], this.output[2]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextur'
  +'eUnsigned3D'#10'};'#10'},{"../../../utils":114,"./unsigned":33}],33:[functi'
  +'on(require,module,exports){'#10'const { utils } = require(''../../../utils'
  +''');'#10'const { GLTexture } = require(''./index'');'#10#10'class GLTexture'
  +'Unsigned extends GLTexture {'#10'  get textureType() {'#10'    return this.'
  +'context.UNSIGNED_BYTE;'#10'  }'#10'  constructor(settings) {'#10'    super('
  +'settings);'#10'    this.type = ''NumberTexture'';'#10'  }'#10'  renderRawOu'
  +'tput() {'#10'    const { context: gl } = this;'#10'    const framebuffer = '
  +'gl.createFramebuffer();'#10'    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuf'
  +'fer);'#10'    gl.framebufferTexture2D('#10'      gl.FRAMEBUFFER,'#10'      '
  +'gl.COLOR_ATTACHMENT0,'#10'      gl.TEXTURE_2D,'#10'      this.texture,'#10
  +'      0'#10'    );'#10'    const result = new Uint8Array(this.size[0] * thi'
  +'s.size[1] * 4);'#10'    gl.readPixels(0, 0, this.size[0], this.size[1], gl.'
  +'RGBA, gl.UNSIGNED_BYTE, result);'#10'    return result;'#10'  }'#10'  rende'
  +'rValues() {'#10'    if (this._deleted) return null;'#10'    return new Floa'
  +'t32Array(this.renderRawOutput().buffer);'#10'  }'#10'  toArray() {'#10'    '
  +'return utils.erectPackedFloat(this.renderValues(), this.output[0]);'#10'  }'
  ,#10'}'#10#10'module.exports = {'#10'  GLTextureUnsigned'#10'};'#10'},{"../..'
  +'/../utils":114,"./index":27}],34:[function(require,module,exports){'#10'con'
  +'st getContext = require(''gl'');'#10'const { WebGLKernel } = require(''../w'
  +'eb-gl/kernel'');'#10'const { glKernelString } = require(''../gl/kernel-stri'
  +'ng'');'#10#10'let isSupported = null;'#10'let testCanvas = null;'#10'let te'
  +'stContext = null;'#10'let testExtensions = null;'#10'let features = null;'
  +#10#10'class HeadlessGLKernel extends WebGLKernel {'#10'  static get isSuppo'
  +'rted() {'#10'    if (isSupported !== null) return isSupported;'#10'    this'
  +'.setupFeatureChecks();'#10'    isSupported = testContext !== null;'#10'    '
  +'return isSupported;'#10'  }'#10#10'  static setupFeatureChecks() {'#10'    '
  +'testCanvas = null;'#10'    testExtensions = null;'#10'    if (typeof getCon'
  +'text !== ''function'') return;'#10'    try { '#10'      testContext = getCo'
  +'ntext(2, 2, {'#10'        preserveDrawingBuffer: true'#10'      });'#10'   '
  +'   if (!testContext || !testContext.getExtension) return;'#10'      testExt'
  +'ensions = {'#10'        STACKGL_resize_drawingbuffer: testContext.getExtens'
  +'ion(''STACKGL_resize_drawingbuffer''),'#10'        STACKGL_destroy_context:'
  +' testContext.getExtension(''STACKGL_destroy_context''),'#10'        OES_tex'
  +'ture_float: testContext.getExtension(''OES_texture_float''),'#10'        OE'
  +'S_texture_float_linear: testContext.getExtension(''OES_texture_float_linear'
  +'''),'#10'        OES_element_index_uint: testContext.getExtension(''OES_ele'
  +'ment_index_uint''),'#10'        WEBGL_draw_buffers: testContext.getExtensio'
  +'n(''WEBGL_draw_buffers''),'#10'        WEBGL_color_buffer_float: testContex'
  +'t.getExtension(''WEBGL_color_buffer_float''),'#10'      };'#10'      featur'
  +'es = this.getFeatures();'#10'    } catch (e) {'#10'      console.warn(e);'
  +#10'    }'#10'  }'#10#10'  static isContextMatch(context) {'#10'    try {'#10
  +'      return context.getParameter(context.RENDERER) === ''ANGLE'';'#10'    '
  +'} catch (e) {'#10'      return false;'#10'    }'#10'  }'#10#10'  static get'
  +'IsTextureFloat() {'#10'    return Boolean(testExtensions.OES_texture_float)'
  +';'#10'  }'#10#10'  static getIsDrawBuffers() {'#10'    return Boolean(testE'
  +'xtensions.WEBGL_draw_buffers);'#10'  }'#10#10'  static getChannelCount() {'
  +#10'    return testExtensions.WEBGL_draw_buffers ?'#10'      testContext.get'
  +'Parameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :'#10' '
  +'     1;'#10'  }'#10#10'  static getMaxTextureSize() {'#10'    return testCo'
  +'ntext.getParameter(testContext.MAX_TEXTURE_SIZE);'#10'  }'#10#10'  static g'
  +'et testCanvas() {'#10'    return testCanvas;'#10'  }'#10#10'  static get te'
  +'stContext() {'#10'    return testContext;'#10'  }'#10#10'  static get featu'
  +'res() {'#10'    return features;'#10'  }'#10#10'  initCanvas() {'#10'    re'
  +'turn {};'#10'  }'#10#10'  initContext() {'#10'    return getContext(2, 2, {'
  +#10'      preserveDrawingBuffer: true'#10'    });'#10'  }'#10#10'  initExten'
  +'sions() {'#10'    this.extensions = {'#10'      STACKGL_resize_drawingbuffe'
  +'r: this.context.getExtension(''STACKGL_resize_drawingbuffer''),'#10'      S'
  +'TACKGL_destroy_context: this.context.getExtension(''STACKGL_destroy_context'
  +'''),'#10'      OES_texture_float: this.context.getExtension(''OES_texture_f'
  +'loat''),'#10'      OES_texture_float_linear: this.context.getExtension(''OE'
  +'S_texture_float_linear''),'#10'      OES_element_index_uint: this.context.g'
  +'etExtension(''OES_element_index_uint''),'#10'      WEBGL_draw_buffers: this'
  +'.context.getExtension(''WEBGL_draw_buffers''),'#10'    };'#10'  }'#10#10'  '
  +'build() {'#10'    super.build.apply(this, arguments);'#10'    if (!this.fal'
  +'lbackRequested) {'#10'      this.extensions.STACKGL_resize_drawingbuffer.re'
  +'size(this.maxTexSize[0], this.maxTexSize[1]);'#10'    }'#10'  }'#10#10'  de'
  +'stroyExtensions() {'#10'    this.extensions.STACKGL_resize_drawingbuffer = '
  +'null;'#10'    this.extensions.STACKGL_destroy_context = null;'#10'    this.'
  +'extensions.OES_texture_float = null;'#10'    this.extensions.OES_texture_fl'
  +'oat_linear = null;'#10'    this.extensions.OES_element_index_uint = null;'
  +#10'    this.extensions.WEBGL_draw_buffers = null;'#10'  }'#10#10'  static d'
  +'estroyContext(context) {'#10'    const extension = context.getExtension(''S'
  +'TACKGL_destroy_context'');'#10'    if (extension && extension.destroy) {'#10
  +'      extension.destroy();'#10'    }'#10'  }'#10#10'  toString() {'#10'    '
  +'const setupContextString = `const gl = context || require(''gl'')(1, 1);\n`'
  +';'#10'    const destroyContextString = `    if (!context) { gl.getExtension'
  +'(''STACKGL_destroy_context'').destroy(); }\n`;'#10'    return glKernelStrin'
  +'g(this.constructor, arguments, this, setupContextString, destroyContextStri'
  +'ng);'#10'  }'#10#10'  setOutput(output) {'#10'    super.setOutput(output);'
  +#10'    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) '
  ,'{'#10'      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTex'
  +'Size[0], this.maxTexSize[1]);'#10'    }'#10'    return this;'#10'  }'#10'}'
  +#10#10'module.exports = {'#10'  HeadlessGLKernel'#10'};'#10'},{"../gl/kernel'
  +'-string":12,"../web-gl/kernel":70,"gl":2}],35:[function(require,module,expo'
  +'rts){'#10'class KernelValue {'#10'  constructor(value, settings) {'#10'    '
  +'const {'#10'      name,'#10'      kernel,'#10'      context,'#10'      chec'
  +'kContext,'#10'      onRequestContextHandle,'#10'      onUpdateValueMismatch'
  +','#10'      origin,'#10'      strictIntegers,'#10'      type,'#10'      tac'
  +'tic,'#10'    } = settings;'#10'    if (!name) {'#10'      throw new Error('
  +'''name not set'');'#10'    }'#10'    if (!type) {'#10'      throw new Error'
  +'(''type not set'');'#10'    }'#10'    if (!origin) {'#10'      throw new Er'
  +'ror(''origin not set'');'#10'    }'#10'    if (origin !== ''user'' && origi'
  +'n !== ''constants'') {'#10'      throw new Error(`origin must be "user" or '
  +'"constants" value is "${ origin }"`);'#10'    }'#10'    if (!onRequestConte'
  +'xtHandle) {'#10'      throw new Error(''onRequestContextHandle is not set'''
  +');'#10'    }'#10'    this.name = name;'#10'    this.origin = origin;'#10'  '
  +'  this.tactic = tactic;'#10'    this.varName = origin === ''constants'' ? `'
  +'constants.${name}` : name;'#10'    this.kernel = kernel;'#10'    this.stric'
  +'tIntegers = strictIntegers;'#10'    this.type = value.type || type;'#10'   '
  +' this.size = value.size || null;'#10'    this.index = null;'#10'    this.co'
  +'ntext = context;'#10'    this.checkContext = checkContext !== null && check'
  +'Context !== undefined ? checkContext : true;'#10'    this.contextHandle = n'
  +'ull;'#10'    this.onRequestContextHandle = onRequestContextHandle;'#10'    '
  +'this.onUpdateValueMismatch = onUpdateValueMismatch;'#10'    this.forceUploa'
  +'dEachRun = null;'#10'  }'#10#10'  get id() {'#10'    return `${this.origin}'
  +'_${name}`;'#10'  }'#10#10'  getSource() {'#10'    throw new Error(`"getSour'
  +'ce" not defined on ${ this.constructor.name }`);'#10'  }'#10#10'  updateVal'
  +'ue(value) {'#10'    throw new Error(`"updateValue" not defined on ${ this.c'
  +'onstructor.name }`);'#10'  }'#10'}'#10#10'module.exports = {'#10'  KernelVa'
  +'lue'#10'};'#10'},{}],36:[function(require,module,exports){'#10'const { util'
  +'s } = require(''../utils'');'#10'const { Input } = require(''../input'');'
  +#10#10'class Kernel {'#10'  static get isSupported() {'#10'    throw new Err'
  +'or(`"isSupported" not implemented on ${ this.name }`);'#10'  }'#10#10'  sta'
  +'tic isContextMatch(context) {'#10'    throw new Error(`"isContextMatch" not'
  +' implemented on ${ this.name }`);'#10'  }'#10#10'  static getFeatures() {'
  +#10'    throw new Error(`"getFeatures" not implemented on ${ this.name }`);'
  +#10'  }'#10#10'  static destroyContext(context) {'#10'    throw new Error(`"'
  +'destroyContext" called on ${ this.name }`);'#10'  }'#10#10'  static nativeF'
  +'unctionArguments() {'#10'    throw new Error(`"nativeFunctionArguments" cal'
  +'led on ${ this.name }`);'#10'  }'#10#10'  static nativeFunctionReturnType()'
  +' {'#10'    throw new Error(`"nativeFunctionReturnType" called on ${ this.na'
  +'me }`);'#10'  }'#10#10'  static combineKernels() {'#10'    throw new Error('
  +'`"combineKernels" called on ${ this.name }`);'#10'  }'#10#10'  constructor('
  +'source, settings) {'#10'    if (typeof source !== ''object'') {'#10'      i'
  +'f (typeof source !== ''string'') {'#10'        throw new Error(''source not'
  +' a string'');'#10'      }'#10'      if (!utils.isFunctionString(source)) {'
  +#10'        throw new Error(''source not a function string'');'#10'      }'
  +#10'    }'#10'    this.useLegacyEncoder = false;'#10'    this.fallbackReques'
  +'ted = false;'#10'    this.onRequestFallback = null;'#10#10'    this.argumen'
  +'tNames = typeof source === ''string'' ? utils.getArgumentNamesFromString(so'
  +'urce) : null;'#10'    this.argumentTypes = null;'#10'    this.argumentSizes'
  +' = null;'#10'    this.argumentBitRatios = null;'#10'    this.kernelArgument'
  +'s = null;'#10'    this.kernelConstants = null;'#10'    this.forceUploadKern'
  +'elConstants = null;'#10#10#10'    this.source = source;'#10#10'    this.out'
  +'put = null;'#10#10'    this.debug = false;'#10#10'    this.graphical = fals'
  +'e;'#10#10'    this.loopMaxIterations = 0;'#10#10'    this.constants = null;'
  +#10#10'    this.constantTypes = null;'#10#10'    this.constantBitRatios = nu'
  +'ll;'#10#10'    this.dynamicArguments = false;'#10#10'    this.dynamicOutput'
  +' = false;'#10#10'    this.canvas = null;'#10#10'    this.context = null;'#10
  +#10'    this.checkContext = null;'#10#10'    this.gpu = null;'#10#10'    thi'
  +'s.functions = null;'#10#10'    this.nativeFunctions = null;'#10#10'    this'
  +'.injectedNative = null;'#10#10'    this.subKernels = null;'#10#10'    this.'
  +'validate = true;'#10#10'    this.immutable = false;'#10#10'    this.pipelin'
  +'e = false;'#10#10'    this.precision = null;'#10#10'    this.tactic = null;'
  ,#10#10'    this.plugins = null;'#10#10'    this.returnType = null;'#10'    t'
  +'his.leadingReturnStatement = null;'#10'    this.followingReturnStatement = '
  +'null;'#10'    this.optimizeFloatMemory = null;'#10'    this.strictIntegers '
  +'= false;'#10'    this.fixIntegerDivisionAccuracy = null;'#10'    this.onIst'
  +'anbulCoverageVariable = null;'#10'    this.removeIstanbulCoverage = false;'
  +#10'    this.built = false;'#10'    this.signature = null;'#10'  }'#10#10'  '
  +'mergeSettings(settings) {'#10'    for (let p in settings) {'#10'      if (!'
  +'settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;'#10'      '
  +'switch (p) {'#10'        case ''output'':'#10'          if (!Array.isArray('
  +'settings.output)) {'#10'            this.setOutput(settings.output); '#10' '
  +'           continue;'#10'          }'#10'          break;'#10'        case '
  +'''functions'':'#10'          this.functions = [];'#10'          for (let i '
  +'= 0; i < settings.functions.length; i++) {'#10'            this.addFunction'
  +'(settings.functions[i]);'#10'          }'#10'          continue;'#10'      '
  +'  case ''graphical'':'#10'          if (settings[p] && !settings.hasOwnProp'
  +'erty(''precision'')) {'#10'            this.precision = ''unsigned'';'#10' '
  +'         }'#10'          this[p] = settings[p];'#10'          continue;'#10
  +'        case ''removeIstanbulCoverage'':'#10'          if (settings[p] !== '
  +'null) {'#10'            this[p] = settings[p];'#10'          }'#10'        '
  +'  continue;'#10'        case ''nativeFunctions'':'#10'          if (!settin'
  +'gs.nativeFunctions) continue;'#10'          this.nativeFunctions = [];'#10
  +'          for (let i = 0; i < settings.nativeFunctions.length; i++) {'#10' '
  +'           const s = settings.nativeFunctions[i];'#10'            const { n'
  +'ame, source } = s;'#10'            this.addNativeFunction(name, source, s);'
  +#10'          }'#10'          continue;'#10'      }'#10'      this[p] = sett'
  +'ings[p];'#10'    }'#10#10'    if (!this.canvas) this.canvas = this.initCanv'
  +'as();'#10'    if (!this.context) this.context = this.initContext();'#10'   '
  +' if (!this.plugins) this.plugins = this.initPlugins(settings);'#10'  }'#10
  +'  build() {'#10'    throw new Error(`"build" not defined on ${ this.constru'
  +'ctor.name }`);'#10'  }'#10#10'  run() {'#10'    throw new Error(`"run" not '
  +'defined on ${ this.constructor.name }`)'#10'  }'#10#10'  initCanvas() {'#10
  +'    throw new Error(`"initCanvas" not defined on ${ this.constructor.name }'
  +'`);'#10'  }'#10#10'  initContext() {'#10'    throw new Error(`"initContext"'
  +' not defined on ${ this.constructor.name }`);'#10'  }'#10#10'  initPlugins('
  +'settings) {'#10'    throw new Error(`"initPlugins" not defined on ${ this.c'
  +'onstructor.name }`);'#10'  }'#10#10'  addFunction(source, settings = {}) {'
  +#10'    if (source.name && source.source && source.argumentTypes && ''return'
  +'Type'' in source) {'#10'      this.functions.push(source);'#10'    } else i'
  +'f (''settings'' in source && ''source'' in source) {'#10'      this.functio'
  +'ns.push(this.functionToIGPUFunction(source.source, source.settings));'#10' '
  +'   } else if (typeof source === ''string'' || typeof source === ''function'
  +''') {'#10'      this.functions.push(this.functionToIGPUFunction(source, set'
  +'tings));'#10'    } else {'#10'      throw new Error(`function not properly '
  +'defined`);'#10'    }'#10'    return this;'#10'  }'#10#10'  addNativeFunctio'
  +'n(name, source, settings = {}) {'#10'    const { argumentTypes, argumentNam'
  +'es } = settings.argumentTypes ?'#10'      splitArgumentTypes(settings.argum'
  +'entTypes) :'#10'      this.constructor.nativeFunctionArguments(source) || {'
  +'};'#10'    this.nativeFunctions.push({'#10'      name,'#10'      source,'#10
  +'      settings,'#10'      argumentTypes,'#10'      argumentNames,'#10'     '
  +' returnType: settings.returnType || this.constructor.nativeFunctionReturnTy'
  +'pe(source)'#10'    });'#10'    return this;'#10'  }'#10#10'  setupArguments'
  +'(args) {'#10'    this.kernelArguments = [];'#10'    if (!this.argumentTypes'
  +') {'#10'      if (!this.argumentTypes) {'#10'        this.argumentTypes = ['
  +'];'#10'        for (let i = 0; i < args.length; i++) {'#10'          const '
  +'argType = utils.getVariableType(args[i], this.strictIntegers);'#10'        '
  +'  const type = argType === ''Integer'' ? ''Number'' : argType;'#10'        '
  +'  this.argumentTypes.push(type);'#10'          this.kernelArguments.push({'
  +#10'            type'#10'          });'#10'        }'#10'      }'#10'    } e'
  +'lse {'#10'      for (let i = 0; i < this.argumentTypes.length; i++) {'#10' '
  +'       this.kernelArguments.push({'#10'          type: this.argumentTypes[i'
  +']'#10'        });'#10'      }'#10'    }'#10#10'    this.argumentSizes = new'
  +' Array(args.length);'#10'    this.argumentBitRatios = new Int32Array(args.l'
  +'ength);'#10#10'    for (let i = 0; i < args.length; i++) {'#10'      const '
  +'arg = args[i];'#10'      this.argumentSizes[i] = arg.constructor === Input '
  ,'? arg.size : null;'#10'      this.argumentBitRatios[i] = this.getBitRatio(a'
  +'rg);'#10'    }'#10#10'    if (this.argumentNames.length !== args.length) {'
  +#10'      throw new Error(`arguments are miss-aligned`);'#10'    }'#10'  }'
  +#10#10'  setupConstants() {'#10'    this.kernelConstants = [];'#10'    let n'
  +'eedsConstantTypes = this.constantTypes === null;'#10'    if (needsConstantT'
  +'ypes) {'#10'      this.constantTypes = {};'#10'    }'#10'    this.constantB'
  +'itRatios = {};'#10'    if (this.constants) {'#10'      for (let name in thi'
  +'s.constants) {'#10'        if (needsConstantTypes) {'#10'          const ty'
  +'pe = utils.getVariableType(this.constants[name], this.strictIntegers);'#10
  +'          this.constantTypes[name] = type;'#10'          this.kernelConstan'
  +'ts.push({'#10'            name,'#10'            type'#10'          });'#10
  +'        } else {'#10'          this.kernelConstants.push({'#10'            '
  +'name,'#10'            type: this.constantTypes[name]'#10'          });'#10
  +'        }'#10'        this.constantBitRatios[name] = this.getBitRatio(this.'
  +'constants[name]);'#10'      }'#10'    }'#10'  }'#10#10'  setOptimizeFloatMe'
  +'mory(flag) {'#10'    this.optimizeFloatMemory = flag;'#10'    return this;'
  +#10'  }'#10#10'  toKernelOutput(output) {'#10'    if (output.hasOwnProperty('
  +'''x'')) {'#10'      if (output.hasOwnProperty(''y'')) {'#10'        if (out'
  +'put.hasOwnProperty(''z'')) {'#10'          return [output.x, output.y, outp'
  +'ut.z];'#10'        } else {'#10'          return [output.x, output.y];'#10
  +'        }'#10'      } else {'#10'        return [output.x];'#10'      }'#10
  +'    } else {'#10'      return output;'#10'    }'#10'  }'#10#10'  setOutput('
  +'output) {'#10'    this.output = this.toKernelOutput(output);'#10'    return'
  +' this;'#10'  }'#10#10'  setDebug(flag) {'#10'    this.debug = flag;'#10'   '
  +' return this;'#10'  }'#10#10'  setGraphical(flag) {'#10'    this.graphical '
  +'= flag;'#10'    this.precision = ''unsigned'';'#10'    return this;'#10'  }'
  +#10#10'  setLoopMaxIterations(max) {'#10'    this.loopMaxIterations = max;'
  +#10'    return this;'#10'  }'#10#10'  setConstants(constants) {'#10'    this'
  +'.constants = constants;'#10'    return this;'#10'  }'#10#10'  setConstantTy'
  +'pes(constantTypes) {'#10'    this.constantTypes = constantTypes;'#10'    re'
  +'turn this;'#10'  }'#10#10'  setFunctions(functions) {'#10'    for (let i = '
  +'0; i < functions.length; i++) {'#10'      this.addFunction(functions[i]);'
  +#10'    }'#10'    return this;'#10'  }'#10#10'  setNativeFunctions(nativeFun'
  +'ctions) {'#10'    for (let i = 0; i < nativeFunctions.length; i++) {'#10'  '
  +'    const settings = nativeFunctions[i];'#10'      const { name, source } ='
  +' settings;'#10'      this.addNativeFunction(name, source, settings);'#10'  '
  +'  }'#10'    return this;'#10'  }'#10#10'  setInjectedNative(injectedNative)'
  +' {'#10'    this.injectedNative = injectedNative;'#10'    return this;'#10' '
  +' }'#10#10'  setPipeline(flag) {'#10'    this.pipeline = flag;'#10'    retur'
  +'n this;'#10'  }'#10#10'  setPrecision(flag) {'#10'    this.precision = flag'
  +';'#10'    return this;'#10'  }'#10#10'  setDimensions(flag) {'#10'    utils'
  +'.warnDeprecated(''method'', ''setDimensions'', ''setOutput'');'#10'    this'
  +'.output = flag;'#10'    return this;'#10'  }'#10#10'  setOutputToTexture(fl'
  +'ag) {'#10'    utils.warnDeprecated(''method'', ''setOutputToTexture'', ''se'
  +'tPipeline'');'#10'    this.pipeline = flag;'#10'    return this;'#10'  }'#10
  +#10'  setImmutable(flag) {'#10'    this.immutable = flag;'#10'    return thi'
  +'s;'#10'  }'#10#10'  setCanvas(canvas) {'#10'    this.canvas = canvas;'#10' '
  +'   return this;'#10'  }'#10#10'  setStrictIntegers(flag) {'#10'    this.str'
  +'ictIntegers = flag;'#10'    return this;'#10'  }'#10#10'  setDynamicOutput('
  +'flag) {'#10'    this.dynamicOutput = flag;'#10'    return this;'#10'  }'#10
  +#10'  setHardcodeConstants(flag) {'#10'    utils.warnDeprecated(''method'', '
  +'''setHardcodeConstants'');'#10'    this.setDynamicOutput(flag);'#10'    thi'
  +'s.setDynamicArguments(flag);'#10'    return this;'#10'  }'#10#10'  setDynam'
  +'icArguments(flag) {'#10'    this.dynamicArguments = flag;'#10'    return th'
  +'is;'#10'  }'#10#10'  setUseLegacyEncoder(flag) {'#10'    this.useLegacyEnco'
  +'der = flag;'#10'    return this;'#10'  }'#10#10'  setWarnVarUsage(flag) {'
  +#10'    utils.warnDeprecated(''method'', ''setWarnVarUsage'');'#10'    retur'
  +'n this;'#10'  }'#10#10'  getCanvas() {'#10'    utils.warnDeprecated(''metho'
  +'d'', ''getCanvas'');'#10'    return this.canvas;'#10'  }'#10#10'  getWebGl('
  +') {'#10'    utils.warnDeprecated(''method'', ''getWebGl'');'#10'    return '
  +'this.context;'#10'  }'#10#10'  setContext(context) {'#10'    this.context ='
  +' context;'#10'    return this;'#10'  }'#10#10'  setArgumentTypes(argumentTy'
  +'pes) {'#10'    if (Array.isArray(argumentTypes)) {'#10'      this.argumentT'
  +'ypes = argumentTypes;'#10'    } else {'#10'      this.argumentTypes = [];'
  ,#10'      for (const p in argumentTypes) {'#10'        if (!argumentTypes.ha'
  +'sOwnProperty(p)) continue;'#10'        const argumentIndex = this.argumentN'
  +'ames.indexOf(p);'#10'        if (argumentIndex === -1) throw new Error(`una'
  +'ble to find argument ${ p }`);'#10'        this.argumentTypes[argumentIndex'
  +'] = argumentTypes[p];'#10'      }'#10'    }'#10'    return this;'#10'  }'#10
  +#10'  setTactic(tactic) {'#10'    this.tactic = tactic;'#10'    return this;'
  +#10'  }'#10#10'  requestFallback(args) {'#10'    if (!this.onRequestFallback'
  +') {'#10'      throw new Error(`"onRequestFallback" not defined on ${ this.c'
  +'onstructor.name }`);'#10'    }'#10'    this.fallbackRequested = true;'#10' '
  +'   return this.onRequestFallback(args);'#10'  }'#10#10'  validateSettings()'
  +' {'#10'    throw new Error(`"validateSettings" not defined on ${ this.const'
  +'ructor.name }`);'#10'  }'#10#10'  addSubKernel(subKernel) {'#10'    if (thi'
  +'s.subKernels === null) {'#10'      this.subKernels = [];'#10'    }'#10'    '
  +'if (!subKernel.source) throw new Error(''subKernel missing "source" propert'
  +'y'');'#10'    if (!subKernel.property && isNaN(subKernel.property)) throw n'
  +'ew Error(''subKernel missing "property" property'');'#10'    if (!subKernel'
  +'.name) throw new Error(''subKernel missing "name" property'');'#10'    this'
  +'.subKernels.push(subKernel);'#10'    return this;'#10'  }'#10#10'  destroy('
  +'removeCanvasReferences) {'#10'    throw new Error(`"destroy" called on ${ t'
  +'his.constructor.name }`);'#10'  }'#10#10'  getBitRatio(value) {'#10'    if '
  +'(this.precision === ''single'') {'#10'      return 4;'#10'    } else if (Ar'
  +'ray.isArray(value[0])) {'#10'      return this.getBitRatio(value[0]);'#10' '
  +'   } else if (value.constructor === Input) {'#10'      return this.getBitRa'
  +'tio(value.value);'#10'    }'#10'    switch (value.constructor) {'#10'      '
  +'case Uint8ClampedArray:'#10'      case Uint8Array:'#10'      case Int8Array'
  +':'#10'        return 1;'#10'      case Uint16Array:'#10'      case Int16Arr'
  +'ay:'#10'        return 2;'#10'      case Float32Array:'#10'      case Int32'
  +'Array:'#10'      default:'#10'        return 4;'#10'    }'#10'  }'#10#10'  '
  +'getPixels(flip) {'#10'    throw new Error(`"getPixels" called on ${ this.co'
  +'nstructor.name }`);'#10'  }'#10#10'  checkOutput() {'#10'    if (!this.outp'
  +'ut || !utils.isArray(this.output)) throw new Error(''kernel.output not an a'
  +'rray'');'#10'    if (this.output.length < 1) throw new Error(''kernel.outpu'
  +'t is empty, needs at least 1 value'');'#10'    for (let i = 0; i < this.out'
  +'put.length; i++) {'#10'      if (isNaN(this.output[i]) || this.output[i] < '
  +'1) {'#10'        throw new Error(`${ this.constructor.name }.output[${ i }]'
  +' incorrectly defined as \`${ this.output[i] }\`, needs to be numeric, and g'
  +'reater than 0`);'#10'      }'#10'    }'#10'  }'#10#10'  prependString(value'
  +') {'#10'    throw new Error(`"prependString" called on ${ this.constructor.'
  +'name }`);'#10'  }'#10#10'  hasPrependString(value) {'#10'    throw new Erro'
  +'r(`"hasPrependString" called on ${ this.constructor.name }`);'#10'  }'#10#10
  +'  toJSON() {'#10'    return {'#10'      settings: {'#10'        output: thi'
  +'s.output,'#10'        pipeline: this.pipeline,'#10'        argumentNames: t'
  +'his.argumentNames,'#10'        argumentsTypes: this.argumentTypes,'#10'    '
  +'    constants: this.constants,'#10'        pluginNames: this.plugins ? this'
  +'.plugins.map(plugin => plugin.name) : null,'#10'        returnType: this.re'
  +'turnType,'#10'      }'#10'    };'#10'  }'#10#10'  buildSignature(args) {'#10
  +'    const Constructor = this.constructor;'#10'    this.signature = Construc'
  +'tor.getSignature(this, Constructor.getArgumentTypes(this, args));'#10'  }'
  +#10#10'  static getArgumentTypes(kernel, args) {'#10'    const argumentTypes'
  +' = new Array(args.length);'#10'    for (let i = 0; i < args.length; i++) {'
  +#10'      const arg = args[i];'#10'      const type = kernel.argumentTypes[i'
  +'];'#10'      if (arg.type) {'#10'        argumentTypes[i] = arg.type;'#10' '
  +'     } else {'#10'        switch (type) {'#10'          case ''Number'':'#10
  +'          case ''Integer'':'#10'          case ''Float'':'#10'          cas'
  +'e ''ArrayTexture(1)'':'#10'            argumentTypes[i] = utils.getVariable'
  +'Type(arg);'#10'            break;'#10'          default:'#10'            ar'
  +'gumentTypes[i] = type;'#10'        }'#10'      }'#10'    }'#10'    return a'
  +'rgumentTypes;'#10'  }'#10#10'  static getSignature(kernel, argumentTypes) {'
  +#10'    throw new Error(`"getSignature" not implemented on ${ this.name }`);'
  +#10'  }'#10#10'  functionToIGPUFunction(source, settings = {}) {'#10'    if '
  +'(typeof source !== ''string'' && typeof source !== ''function'') throw new '
  +'Error(''source not a string or function'');'#10'    const sourceString = ty'
  +'peof source === ''string'' ? source : source.toString();'#10'    let argume'
  +'ntTypes = [];'#10#10'    if (Array.isArray(settings.argumentTypes)) {'#10' '
  ,'     argumentTypes = settings.argumentTypes;'#10'    } else if (typeof sett'
  +'ings.argumentTypes === ''object'') {'#10'      argumentTypes = utils.getArg'
  +'umentNamesFromString(sourceString)'#10'        .map(name => settings.argume'
  +'ntTypes[name]) || [];'#10'    } else {'#10'      argumentTypes = settings.a'
  +'rgumentTypes || [];'#10'    }'#10#10'    return {'#10'      name: utils.get'
  +'FunctionNameFromString(sourceString) || null,'#10'      source: sourceStrin'
  +'g,'#10'      argumentTypes,'#10'      returnType: settings.returnType || nu'
  +'ll,'#10'    };'#10'  }'#10#10'  onActivate(previousKernel) {}'#10'}'#10#10
  +'function splitArgumentTypes(argumentTypesObject) {'#10'  const argumentName'
  +'s = Object.keys(argumentTypesObject);'#10'  const argumentTypes = [];'#10' '
  +' for (let i = 0; i < argumentNames.length; i++) {'#10'    const argumentNam'
  +'e = argumentNames[i];'#10'    argumentTypes.push(argumentTypesObject[argume'
  +'ntName]);'#10'  }'#10'  return { argumentTypes, argumentNames };'#10'}'#10
  +#10'module.exports = {'#10'  Kernel'#10'};'#10'},{"../input":110,"../utils":'
  +'114}],37:[function(require,module,exports){'#10'const fragmentShader = `__H'
  +'EADER__;'#10'__FLOAT_TACTIC_DECLARATION__;'#10'__INT_TACTIC_DECLARATION__;'
  +#10'__SAMPLER_2D_TACTIC_DECLARATION__;'#10#10'const int LOOP_MAX = __LOOP_MA'
  +'X__;'#10#10'__PLUGINS__;'#10'__CONSTANTS__;'#10#10'varying vec2 vTexCoord;'
  +#10#10'float acosh(float x) {'#10'  return log(x + sqrt(x * x - 1.0));'#10'}'
  +#10#10'float sinh(float x) {'#10'  return (pow(${Math.E}, x) - pow(${Math.E}'
  +', -x)) / 2.0;'#10'}'#10#10'float asinh(float x) {'#10'  return log(x + sqrt'
  +'(x * x + 1.0));'#10'}'#10#10'float atan2(float v1, float v2) {'#10'  if (v1'
  +' == 0.0 || v2 == 0.0) return 0.0;'#10'  return atan(v1 / v2);'#10'}'#10#10
  +'float atanh(float x) {'#10'  x = (x + 1.0) / (x - 1.0);'#10'  if (x < 0.0) '
  +'{'#10'    return 0.5 * log(-x);'#10'  }'#10'  return 0.5 * log(x);'#10'}'#10
  +#10'float cbrt(float x) {'#10'  if (x >= 0.0) {'#10'    return pow(x, 1.0 / '
  +'3.0);'#10'  } else {'#10'    return -pow(x, 1.0 / 3.0);'#10'  }'#10'}'#10#10
  +'float cosh(float x) {'#10'  return (pow(${Math.E}, x) + pow(${Math.E}, -x))'
  +' / 2.0; '#10'}'#10#10'float expm1(float x) {'#10'  return pow(${Math.E}, x)'
  +' - 1.0; '#10'}'#10#10'float fround(highp float x) {'#10'  return x;'#10'}'
  +#10#10'float imul(float v1, float v2) {'#10'  return float(int(v1) * int(v2)'
  +');'#10'}'#10#10'float log10(float x) {'#10'  return log2(x) * (1.0 / log2(1'
  +'0.0));'#10'}'#10#10'float log1p(float x) {'#10'  return log(1.0 + x);'#10'}'
  +#10#10'float _pow(float v1, float v2) {'#10'  if (v2 == 0.0) return 1.0;'#10
  +'  return pow(v1, v2);'#10'}'#10#10'float tanh(float x) {'#10'  float e = ex'
  +'p(2.0 * x);'#10'  return (e - 1.0) / (e + 1.0);'#10'}'#10#10'float trunc(fl'
  +'oat x) {'#10'  if (x >= 0.0) {'#10'    return floor(x); '#10'  } else {'#10
  +'    return ceil(x);'#10'  }'#10'}'#10#10'vec4 _round(vec4 x) {'#10'  return'
  +' floor(x + 0.5);'#10'}'#10#10'float _round(float x) {'#10'  return floor(x '
  +'+ 0.5);'#10'}'#10#10'const int BIT_COUNT = 32;'#10'int modi(int x, int y) {'
  +#10'  return x - y * (x / y);'#10'}'#10#10'int bitwiseOr(int a, int b) {'#10
  +'  int result = 0;'#10'  int n = 1;'#10'  '#10'  for (int i = 0; i < BIT_COU'
  +'NT; i++) {'#10'    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {'#10'      '
  +'result += n;'#10'    }'#10'    a = a / 2;'#10'    b = b / 2;'#10'    n = n '
  +'* 2;'#10'    if(!(a > 0 || b > 0)) {'#10'      break;'#10'    }'#10'  }'#10
  +'  return result;'#10'}'#10'int bitwiseXOR(int a, int b) {'#10'  int result '
  +'= 0;'#10'  int n = 1;'#10'  '#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10
  +'    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {'#10'      result += n;'#10
  +'    }'#10'    a = a / 2;'#10'    b = b / 2;'#10'    n = n * 2;'#10'    if(!'
  +'(a > 0 || b > 0)) {'#10'      break;'#10'    }'#10'  }'#10'  return result;'
  +#10'}'#10'int bitwiseAnd(int a, int b) {'#10'  int result = 0;'#10'  int n ='
  +' 1;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if ((modi(a, 2) == '
  +'1) && (modi(b, 2) == 1)) {'#10'      result += n;'#10'    }'#10'    a = a /'
  +' 2;'#10'    b = b / 2;'#10'    n = n * 2;'#10'    if(!(a > 0 && b > 0)) {'
  +#10'      break;'#10'    }'#10'  }'#10'  return result;'#10'}'#10'int bitwis'
  +'eNot(int a) {'#10'  int result = 0;'#10'  int n = 1;'#10'  '#10'  for (int '
  +'i = 0; i < BIT_COUNT; i++) {'#10'    if (modi(a, 2) == 0) {'#10'      resul'
  +'t += n;    '#10'    }'#10'    a = a / 2;'#10'    n = n * 2;'#10'  }'#10'  r'
  +'eturn result;'#10'}'#10'int bitwiseZeroFillLeftShift(int n, int shift) {'#10
  +'  int maxBytes = BIT_COUNT;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10
  +'    if (maxBytes >= n) {'#10'      break;'#10'    }'#10'    maxBytes *= 2;'
  +#10'  }'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (i >= shift) '
  +'{'#10'      break;'#10'    }'#10'    n *= 2;'#10'  }'#10#10'  int result = '
  +'0;'#10'  int byteVal = 1;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10' '
  ,'   if (i >= maxBytes) break;'#10'    if (modi(n, 2) > 0) { result += byteVa'
  +'l; }'#10'    n = int(n / 2);'#10'    byteVal *= 2;'#10'  }'#10'  return res'
  +'ult;'#10'}'#10#10'int bitwiseSignedRightShift(int num, int shifts) {'#10'  '
  +'return int(floor(float(num) / pow(2.0, float(shifts))));'#10'}'#10#10'int b'
  +'itwiseZeroFillRightShift(int n, int shift) {'#10'  int maxBytes = BIT_COUNT'
  +';'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (maxBytes >= n) {'
  +#10'      break;'#10'    }'#10'    maxBytes *= 2;'#10'  }'#10'  for (int i ='
  +' 0; i < BIT_COUNT; i++) {'#10'    if (i >= shift) {'#10'      break;'#10'  '
  +'  }'#10'    n /= 2;'#10'  }'#10'  int result = 0;'#10'  int byteVal = 1;'#10
  +'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (i >= maxBytes) break;'
  +#10'    if (modi(n, 2) > 0) { result += byteVal; }'#10'    n = int(n / 2);'
  +#10'    byteVal *= 2;'#10'  }'#10'  return result;'#10'}'#10#10'vec2 integer'
  +'Mod(vec2 x, float y) {'#10'  vec2 res = floor(mod(x, y));'#10'  return res '
  +'* step(1.0 - floor(y), -res);'#10'}'#10#10'vec3 integerMod(vec3 x, float y)'
  +' {'#10'  vec3 res = floor(mod(x, y));'#10'  return res * step(1.0 - floor(y'
  +'), -res);'#10'}'#10#10'vec4 integerMod(vec4 x, vec4 y) {'#10'  vec4 res = f'
  +'loor(mod(x, y));'#10'  return res * step(1.0 - floor(y), -res);'#10'}'#10#10
  +'float integerMod(float x, float y) {'#10'  float res = floor(mod(x, y));'#10
  +'  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);'#10'}'#10#10'int integer'
  +'Mod(int x, int y) {'#10'  return x - (y * int(x / y));'#10'}'#10#10'__DIVID'
  +'E_WITH_INTEGER_CHECK__;'#10#10'// Here be dragons!'#10'// DO NOT OPTIMIZE T'
  +'HIS CODE'#10'// YOU WILL BREAK SOMETHING ON SOMEBODY\''S MACHINE'#10'// LEA'
  +'VE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME'#10'const vec2 MAGIC_VEC = vec'
  +'2(1.0, -256.0);'#10'const vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0'
  +');'#10'const vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.00001525878906'
  +'25, 0.0); // 1, 1/256, 1/65536'#10'float decode32(vec4 texel) {'#10'  __DEC'
  +'ODE32_ENDIANNESS__;'#10'  texel *= 255.0;'#10'  vec2 gte128;'#10'  gte128.x'
  +' = texel.b >= 128.0 ? 1.0 : 0.0;'#10'  gte128.y = texel.a >= 128.0 ? 1.0 : '
  +'0.0;'#10'  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);'
  +#10'  float res = exp2(_round(exponent));'#10'  texel.b = texel.b - 128.0 * '
  +'gte128.x;'#10'  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)'
  +') + res;'#10'  res *= gte128.y * -2.0 + 1.0;'#10'  return res;'#10'}'#10#10
  +'float decode16(vec4 texel, int index) {'#10'  int channel = integerMod(inde'
  +'x, 2);'#10'  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;'
  +#10'  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;'#10'  re'
  +'turn 0.0;'#10'}'#10#10'float decode8(vec4 texel, int index) {'#10'  int cha'
  +'nnel = integerMod(index, 4);'#10'  if (channel == 0) return texel.r * 255.0'
  +';'#10'  if (channel == 1) return texel.g * 255.0;'#10'  if (channel == 2) r'
  +'eturn texel.b * 255.0;'#10'  if (channel == 3) return texel.a * 255.0;'#10
  +'  return 0.0;'#10'}'#10#10'vec4 legacyEncode32(float f) {'#10'  float F = a'
  +'bs(f);'#10'  float sign = f < 0.0 ? 1.0 : 0.0;'#10'  float exponent = floor'
  +'(log2(F));'#10'  float mantissa = (exp2(-exponent) * F);'#10'  // exponent '
  +'+= floor(log2(mantissa));'#10'  vec4 texel = vec4(F * exp2(23.0-exponent)) '
  +'* SCALE_FACTOR_INV;'#10'  texel.rg = integerMod(texel.rg, 256.0);'#10'  tex'
  +'el.b = integerMod(texel.b, 128.0);'#10'  texel.a = exponent*0.5 + 63.5;'#10
  +'  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;'#10'  te'
  +'xel = floor(texel);'#10'  texel *= 0.003921569; // 1/255'#10'  __ENCODE32_E'
  +'NDIANNESS__;'#10'  return texel;'#10'}'#10#10'// https://github.com/gpujs/g'
  +'pu.js/wiki/Encoder-details'#10'vec4 encode32(float value) {'#10'  if (value'
  +' == 0.0) return vec4(0, 0, 0, 0);'#10#10'  float exponent;'#10'  float mant'
  +'issa;'#10'  vec4  result;'#10'  float sgn;'#10#10'  sgn = step(0.0, -value)'
  +';'#10'  value = abs(value);'#10#10'  exponent = floor(log2(value));'#10#10
  +'  mantissa = value*pow(2.0, -exponent)-1.0;'#10'  exponent = exponent+127.0'
  +';'#10'  result   = vec4(0,0,0,0);'#10#10'  result.a = floor(exponent/2.0);'
  +#10'  exponent = exponent - result.a*2.0;'#10'  result.a = result.a + 128.0*'
  +'sgn;'#10#10'  result.b = floor(mantissa * 128.0);'#10'  mantissa = mantissa'
  +' - result.b / 128.0;'#10'  result.b = result.b + exponent*128.0;'#10#10'  r'
  +'esult.g = floor(mantissa*32768.0);'#10'  mantissa = mantissa - result.g/327'
  +'68.0;'#10#10'  result.r = floor(mantissa*8388608.0);'#10'  return result/25'
  +'5.0;'#10'}'#10'// Dragons end here'#10#10'int index;'#10'ivec3 threadId;'#10
  +#10'ivec3 indexTo3D(int idx, ivec3 texDim) {'#10'  int z = int(idx / (texDim'
  +'.x * texDim.y));'#10'  idx -= z * int(texDim.x * texDim.y);'#10'  int y = i'
  +'nt(idx / texDim.x);'#10'  int x = int(integerMod(idx, texDim.x));'#10'  ret'
  +'urn ivec3(x, y, z);'#10'}'#10#10'float get32(sampler2D tex, ivec2 texSize, '
  ,'ivec3 texDim, int z, int y, int x) {'#10'  int index = x + texDim.x * (y + '
  +'texDim.y * z);'#10'  int w = texSize.x;'#10'  vec2 st = vec2(float(integerM'
  +'od(index, w)), float(index / w)) + 0.5;'#10'  vec4 texel = texture2D(tex, s'
  +'t / vec2(texSize));'#10'  return decode32(texel);'#10'}'#10#10'float get16('
  +'sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  in'
  +'t index = x + texDim.x * (y + texDim.y * z);'#10'  int w = texSize.x * 2;'
  +#10'  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'
  +#10'  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));'#10
  +'  return decode16(texel, index);'#10'}'#10#10'float get8(sampler2D tex, ive'
  +'c2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + texD'
  +'im.x * (y + texDim.y * z);'#10'  int w = texSize.x * 4;'#10'  vec2 st = vec'
  +'2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10'  vec4 texel = '
  +'texture2D(tex, st / vec2(texSize.x * 4, texSize.y));'#10'  return decode8(t'
  +'exel, index);'#10'}'#10#10'float getMemoryOptimized32(sampler2D tex, ivec2 '
  +'texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + texDim.'
  +'x * (y + texDim.y * z);'#10'  int channel = integerMod(index, 4);'#10'  ind'
  +'ex = index / 4;'#10'  int w = texSize.x;'#10'  vec2 st = vec2(float(integer'
  +'Mod(index, w)), float(index / w)) + 0.5;'#10'  vec4 texel = texture2D(tex, '
  +'st / vec2(texSize));'#10'  if (channel == 0) return texel.r;'#10'  if (chan'
  +'nel == 1) return texel.g;'#10'  if (channel == 2) return texel.b;'#10'  if '
  +'(channel == 3) return texel.a;'#10'  return 0.0;'#10'}'#10#10'vec4 getImage'
  +'2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10' '
  +' int index = x + texDim.x * (y + texDim.y * z);'#10'  int w = texSize.x;'#10
  +'  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10
  +'  return texture2D(tex, st / vec2(texSize));'#10'}'#10#10'float getFloatFro'
  +'mSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x)'
  +' {'#10'  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);'#10'  ret'
  +'urn result[0];'#10'}'#10#10'vec2 getVec2FromSampler2D(sampler2D tex, ivec2 '
  +'texSize, ivec3 texDim, int z, int y, int x) {'#10'  vec4 result = getImage2'
  +'D(tex, texSize, texDim, z, y, x);'#10'  return vec2(result[0], result[1]);'
  +#10'}'#10#10'vec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3'
  +' texDim, int z, int y, int x) {'#10'  int index = x + (texDim.x * (y + (tex'
  +'Dim.y * z)));'#10'  int channel = integerMod(index, 2);'#10'  index = index'
  +' / 2;'#10'  int w = texSize.x;'#10'  vec2 st = vec2(float(integerMod(index,'
  +' w)), float(index / w)) + 0.5;'#10'  vec4 texel = texture2D(tex, st / vec2('
  +'texSize));'#10'  if (channel == 0) return vec2(texel.r, texel.g);'#10'  if '
  +'(channel == 1) return vec2(texel.b, texel.a);'#10'  return vec2(0.0, 0.0);'
  +#10'}'#10#10'vec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 t'
  +'exDim, int z, int y, int x) {'#10'  vec4 result = getImage2D(tex, texSize, '
  +'texDim, z, y, x);'#10'  return vec3(result[0], result[1], result[2]);'#10'}'
  +#10#10'vec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDi'
  +'m, int z, int y, int x) {'#10'  int fieldIndex = 3 * (x + texDim.x * (y + t'
  +'exDim.y * z));'#10'  int vectorIndex = fieldIndex / 4;'#10'  int vectorOffs'
  +'et = fieldIndex - vectorIndex * 4;'#10'  int readY = vectorIndex / texSize.'
  +'x;'#10'  int readX = vectorIndex - readY * texSize.x;'#10'  vec4 tex1 = tex'
  +'ture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));'#10'  '#10'  if (v'
  +'ectorOffset == 0) {'#10'    return tex1.xyz;'#10'  } else if (vectorOffset '
  +'== 1) {'#10'    return tex1.yzw;'#10'  } else {'#10'    readX++;'#10'    if'
  +' (readX >= texSize.x) {'#10'      readX = 0;'#10'      readY++;'#10'    }'
  +#10'    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));'#10
  +'    if (vectorOffset == 2) {'#10'      return vec3(tex1.z, tex1.w, tex2.x);'
  +#10'    } else {'#10'      return vec3(tex1.w, tex2.x, tex2.y);'#10'    }'#10
  +'  }'#10'}'#10#10'vec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, iv'
  +'ec3 texDim, int z, int y, int x) {'#10'  return getImage2D(tex, texSize, te'
  +'xDim, z, y, x);'#10'}'#10#10'vec4 getMemoryOptimizedVec4(sampler2D tex, ive'
  +'c2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + texD'
  +'im.x * (y + texDim.y * z);'#10'  int channel = integerMod(index, 2);'#10'  '
  +'int w = texSize.x;'#10'  vec2 st = vec2(float(integerMod(index, w)), float('
  +'index / w)) + 0.5;'#10'  vec4 texel = texture2D(tex, st / vec2(texSize));'
  +#10'  return vec4(texel.r, texel.g, texel.b, texel.a);'#10'}'#10#10'vec4 act'
  +'ualColor;'#10'void color(float r, float g, float b, float a) {'#10'  actual'
  +'Color = vec4(r,g,b,a);'#10'}'#10#10'void color(float r, float g, float b) {'
  +#10'  color(r,g,b,1.0);'#10'}'#10#10'void color(sampler2D image) {'#10'  act'
  +'ualColor = texture2D(image, vTexCoord);'#10'}'#10#10'float modulo(float num'
  ,'ber, float divisor) {'#10'  if (number < 0.0) {'#10'    number = abs(number'
  +');'#10'    if (divisor < 0.0) {'#10'      divisor = abs(divisor);'#10'    }'
  +#10'    return -mod(number, divisor);'#10'  }'#10'  if (divisor < 0.0) {'#10
  +'    divisor = abs(divisor);'#10'  }'#10'  return mod(number, divisor);'#10
  +'}'#10#10'__INJECTED_NATIVE__;'#10'__MAIN_CONSTANTS__;'#10'__MAIN_ARGUMENTS_'
  +'_;'#10'__KERNEL__;'#10#10'void main(void) {'#10'  index = int(vTexCoord.s *'
  +' float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;'#10
  +'  __MAIN_RESULT__;'#10'}`;'#10#10'module.exports = {'#10'  fragmentShader'
  +#10'};'#10'},{}],38:[function(require,module,exports){'#10'const { utils } ='
  +' require(''../../utils'');'#10'const { FunctionNode } = require(''../functi'
  +'on-node'');'#10#10'class WebGLFunctionNode extends FunctionNode {'#10'  con'
  +'structor(source, settings) {'#10'    super(source, settings);'#10'    if (s'
  +'ettings && settings.hasOwnProperty(''fixIntegerDivisionAccuracy'')) {'#10' '
  +'     this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;'
  +#10'    }'#10'  }'#10#10'  astConditionalExpression(ast, retArr) {'#10'    i'
  +'f (ast.type !== ''ConditionalExpression'') {'#10'      throw this.astErrorO'
  +'utput(''Not a conditional expression'', ast);'#10'    }'#10'    const conse'
  +'quentType = this.getType(ast.consequent);'#10'    const alternateType = thi'
  +'s.getType(ast.alternate);'#10'    if (consequentType === null && alternateT'
  +'ype === null) {'#10'      retArr.push(''if ('');'#10'      this.astGeneric('
  +'ast.test, retArr);'#10'      retArr.push('') {'');'#10'      this.astGeneri'
  +'c(ast.consequent, retArr);'#10'      retArr.push('';'');'#10'      retArr.p'
  +'ush(''} else {'');'#10'      this.astGeneric(ast.alternate, retArr);'#10'  '
  +'    retArr.push('';'');'#10'      retArr.push(''}'');'#10'      return retA'
  +'rr;'#10'    }'#10'    retArr.push(''('');'#10'    this.astGeneric(ast.test,'
  +' retArr);'#10'    retArr.push(''?'');'#10'    this.astGeneric(ast.consequen'
  +'t, retArr);'#10'    retArr.push('':'');'#10'    this.astGeneric(ast.alterna'
  +'te, retArr);'#10'    retArr.push('')'');'#10'    return retArr;'#10'  }'#10
  +#10'  astFunction(ast, retArr) {'#10'    if (this.isRootKernel) {'#10'      '
  +'retArr.push(''void'');'#10'    } else {'#10'      if (!this.returnType) {'
  +#10'        const lastReturn = this.findLastReturn();'#10'        if (lastRe'
  +'turn) {'#10'          this.returnType = this.getType(ast.body);'#10'       '
  +'   if (this.returnType === ''LiteralInteger'') {'#10'            this.retur'
  +'nType = ''Number'';'#10'          }'#10'        }'#10'      }'#10#10'      '
  +'const { returnType } = this;'#10'      if (!returnType) {'#10'        retAr'
  +'r.push(''void'');'#10'      } else {'#10'        const type = typeMap[retur'
  +'nType];'#10'        if (!type) {'#10'          throw new Error(`unknown typ'
  +'e ${returnType}`);'#10'        }'#10'        retArr.push(type);'#10'      }'
  +#10'    }'#10'    retArr.push('' '');'#10'    retArr.push(this.name);'#10'  '
  +'  retArr.push(''('');'#10#10'    if (!this.isRootKernel) {'#10'      for (l'
  +'et i = 0; i < this.argumentNames.length; ++i) {'#10'        const argumentN'
  +'ame = this.argumentNames[i];'#10#10'        if (i > 0) {'#10'          retA'
  +'rr.push('', '');'#10'        }'#10'        let argumentType = this.argument'
  +'Types[this.argumentNames.indexOf(argumentName)];'#10'        if (!argumentT'
  +'ype) {'#10'          throw this.astErrorOutput(`Unknown argument ${argument'
  +'Name} type`, ast);'#10'        }'#10'        if (argumentType === ''Literal'
  +'Integer'') {'#10'          this.argumentTypes[i] = argumentType = ''Number'
  +''';'#10'        }'#10'        const type = typeMap[argumentType];'#10'     '
  +'   if (!type) {'#10'          throw this.astErrorOutput(''Unexpected expres'
  +'sion'', ast);'#10'        }'#10'        const name = utils.sanitizeName(arg'
  +'umentName);'#10'        if (type === ''sampler2D'' || type === ''sampler2DA'
  +'rray'') {'#10'          retArr.push(`${type} user_${name},ivec2 user_${name'
  +'}Size,ivec3 user_${name}Dim`);'#10'        } else {'#10'          retArr.pu'
  +'sh(`${type} user_${name}`);'#10'        }'#10'      }'#10'    }'#10#10'    '
  +'retArr.push('') {\n'');'#10#10'    for (let i = 0; i < ast.body.body.length'
  +'; ++i) {'#10'      this.astGeneric(ast.body.body[i], retArr);'#10'      ret'
  +'Arr.push(''\n'');'#10'    }'#10#10'    retArr.push(''}\n'');'#10'    return'
  +' retArr;'#10'  }'#10#10'  astReturnStatement(ast, retArr) {'#10'    if (!as'
  +'t.argument) throw this.astErrorOutput(''Unexpected return statement'', ast)'
  +';'#10'    this.pushState(''skip-literal-correction'');'#10'    const type ='
  +' this.getType(ast.argument);'#10'    this.popState(''skip-literal-correctio'
  +'n'');'#10#10'    const result = [];'#10#10'    if (!this.returnType) {'#10
  +'      if (type === ''LiteralInteger'' || type === ''Integer'') {'#10'      '
  +'  this.returnType = ''Number'';'#10'      } else {'#10'        this.returnT'
  ,'ype = type;'#10'      }'#10'    }'#10#10'    switch (this.returnType) {'#10
  +'      case ''LiteralInteger'':'#10'      case ''Number'':'#10'      case '''
  +'Float'':'#10'        switch (type) {'#10'          case ''Integer'':'#10'  '
  +'          result.push(''float('');'#10'            this.astGeneric(ast.argu'
  +'ment, result);'#10'            result.push('')'');'#10'            break;'
  +#10'          case ''LiteralInteger'':'#10'            this.castLiteralToFlo'
  +'at(ast.argument, result);'#10#10'            if (this.getType(ast) === ''In'
  +'teger'') {'#10'              result.unshift(''float('');'#10'              '
  +'result.push('')'');'#10'            }'#10'            break;'#10'          '
  +'default:'#10'            this.astGeneric(ast.argument, result);'#10'       '
  +' }'#10'        break;'#10'      case ''Integer'':'#10'        switch (type)'
  +' {'#10'          case ''Float'':'#10'          case ''Number'':'#10'       '
  +'     this.castValueToInteger(ast.argument, result);'#10'            break;'
  +#10'          case ''LiteralInteger'':'#10'            this.castLiteralToInt'
  +'eger(ast.argument, result);'#10'            break;'#10'          default:'
  +#10'            this.astGeneric(ast.argument, result);'#10'        }'#10'   '
  +'     break;'#10'      case ''Array(4)'':'#10'      case ''Array(3)'':'#10' '
  +'     case ''Array(2)'':'#10'      case ''Input'':'#10'        this.astGener'
  +'ic(ast.argument, result);'#10'        break;'#10'      default:'#10'       '
  +' throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast)'
  +';'#10'    }'#10#10'    if (this.isRootKernel) {'#10'      retArr.push(`kern'
  +'elResult = ${ result.join('''') };`);'#10'      retArr.push(''return;'');'
  +#10'    } else if (this.isSubKernel) {'#10'      retArr.push(`subKernelResul'
  +'t_${ this.name } = ${ result.join('''') };`);'#10'      retArr.push(`return'
  +' subKernelResult_${ this.name };`);'#10'    } else {'#10'      retArr.push('
  +'`return ${ result.join('''') };`);'#10'    }'#10'    return retArr;'#10'  }'
  +#10#10'  astLiteral(ast, retArr) {'#10'    if (isNaN(ast.value)) {'#10'     '
  +' throw this.astErrorOutput('#10'        ''Non-numeric literal not supported'
  +' : '' + ast.value,'#10'        ast'#10'      );'#10'    }'#10#10'    const '
  +'key = this.astKey(ast);'#10'    if (Number.isInteger(ast.value)) {'#10'    '
  +'  if (this.isState(''casting-to-integer'') || this.isState(''building-integ'
  +'er'')) {'#10'        this.literalTypes[key] = ''Integer'';'#10'        retA'
  +'rr.push(`${ast.value}`);'#10'      } else if (this.isState(''casting-to-flo'
  +'at'') || this.isState(''building-float'')) {'#10'        this.literalTypes['
  +'key] = ''Number'';'#10'        retArr.push(`${ast.value}.0`);'#10'      } e'
  +'lse {'#10'        this.literalTypes[key] = ''Number'';'#10'        retArr.p'
  +'ush(`${ast.value}.0`);'#10'      }'#10'    } else if (this.isState(''castin'
  +'g-to-integer'') || this.isState(''building-integer'')) {'#10'      this.lit'
  +'eralTypes[key] = ''Integer'';'#10'      retArr.push(Math.round(ast.value));'
  +#10'    } else {'#10'      this.literalTypes[key] = ''Number'';'#10'      re'
  +'tArr.push(`${ast.value}`);'#10'    }'#10'    return retArr;'#10'  }'#10#10
  +'  astBinaryExpression(ast, retArr) {'#10'    if (this.checkAndUpconvertOper'
  +'ator(ast, retArr)) {'#10'      return retArr;'#10'    }'#10#10'    if (this'
  +'.fixIntegerDivisionAccuracy && ast.operator === ''/'') {'#10'      retArr.p'
  +'ush(''divWithIntCheck('');'#10'      this.pushState(''building-float'');'#10
  +'      switch (this.getType(ast.left)) {'#10'        case ''Integer'':'#10' '
  +'         this.castValueToFloat(ast.left, retArr);'#10'          break;'#10
  +'        case ''LiteralInteger'':'#10'          this.castLiteralToFloat(ast.'
  +'left, retArr);'#10'          break;'#10'        default:'#10'          this'
  +'.astGeneric(ast.left, retArr);'#10'      }'#10'      retArr.push('', '');'
  +#10'      switch (this.getType(ast.right)) {'#10'        case ''Integer'':'
  +#10'          this.castValueToFloat(ast.right, retArr);'#10'          break;'
  +#10'        case ''LiteralInteger'':'#10'          this.castLiteralToFloat(a'
  +'st.right, retArr);'#10'          break;'#10'        default:'#10'          '
  +'this.astGeneric(ast.right, retArr);'#10'      }'#10'      this.popState(''b'
  +'uilding-float'');'#10'      retArr.push('')'');'#10'      return retArr;'#10
  +'    }'#10#10'    retArr.push(''('');'#10'    const leftType = this.getType('
  +'ast.left) || ''Number'';'#10'    const rightType = this.getType(ast.right) '
  +'|| ''Number'';'#10'    if (!leftType || !rightType) {'#10'      throw this.'
  +'astErrorOutput(`Unhandled binary expression`, ast);'#10'    }'#10'    const'
  +' key = leftType + '' & '' + rightType;'#10'    switch (key) {'#10'      cas'
  +'e ''Integer & Integer'':'#10'        this.pushState(''building-integer'');'
  +#10'        this.astGeneric(ast.left, retArr);'#10'        retArr.push(opera'
  +'torMap[ast.operator] || ast.operator);'#10'        this.astGeneric(ast.righ'
  ,'t, retArr);'#10'        this.popState(''building-integer'');'#10'        br'
  +'eak;'#10'      case ''Number & Float'':'#10'      case ''Float & Number'':'
  +#10'      case ''Float & Float'':'#10'      case ''Number & Number'':'#10'  '
  +'      this.pushState(''building-float'');'#10'        this.astGeneric(ast.l'
  +'eft, retArr);'#10'        retArr.push(operatorMap[ast.operator] || ast.oper'
  +'ator);'#10'        this.astGeneric(ast.right, retArr);'#10'        this.pop'
  +'State(''building-float'');'#10'        break;'#10'      case ''LiteralInteg'
  +'er & LiteralInteger'':'#10'        if (this.isState(''casting-to-integer'')'
  +' || this.isState(''building-integer'')) {'#10'          this.pushState(''bu'
  +'ilding-integer'');'#10'          this.astGeneric(ast.left, retArr);'#10'   '
  +'       retArr.push(operatorMap[ast.operator] || ast.operator);'#10'        '
  +'  this.astGeneric(ast.right, retArr);'#10'          this.popState(''buildin'
  +'g-integer'');'#10'        } else {'#10'          this.pushState(''building-'
  +'float'');'#10'          this.castLiteralToFloat(ast.left, retArr);'#10'    '
  +'      retArr.push(operatorMap[ast.operator] || ast.operator);'#10'         '
  +' this.castLiteralToFloat(ast.right, retArr);'#10'          this.popState('''
  +'building-float'');'#10'        }'#10'        break;'#10#10'      case ''Int'
  +'eger & Float'':'#10'      case ''Integer & Number'':'#10'        if (ast.op'
  +'erator === ''>'' || ast.operator === ''<'' && ast.right.type === ''Literal'
  +''') {'#10'          if (!Number.isInteger(ast.right.value)) {'#10'         '
  +'   this.pushState(''building-float'');'#10'            this.castValueToFloa'
  +'t(ast.left, retArr);'#10'            retArr.push(operatorMap[ast.operator] '
  +'|| ast.operator);'#10'            this.astGeneric(ast.right, retArr);'#10' '
  +'           this.popState(''building-float'');'#10'            break;'#10'  '
  +'        }'#10'        }'#10'        this.pushState(''building-integer'');'
  +#10'        this.astGeneric(ast.left, retArr);'#10'        retArr.push(opera'
  +'torMap[ast.operator] || ast.operator);'#10'        this.pushState(''casting'
  +'-to-integer'');'#10'        if (ast.right.type === ''Literal'') {'#10'     '
  +'     const literalResult = [];'#10'          this.astGeneric(ast.right, lit'
  +'eralResult);'#10'          const literalType = this.getType(ast.right);'#10
  +'          if (literalType === ''Integer'') {'#10'            retArr.push(li'
  +'teralResult.join(''''));'#10'          } else {'#10'            throw this.'
  +'astErrorOutput(`Unhandled binary expression with literal`, ast);'#10'      '
  +'    }'#10'        } else {'#10'          retArr.push(''int('');'#10'       '
  +'   this.astGeneric(ast.right, retArr);'#10'          retArr.push('')'');'#10
  +'        }'#10'        this.popState(''casting-to-integer'');'#10'        th'
  +'is.popState(''building-integer'');'#10'        break;'#10'      case ''Inte'
  +'ger & LiteralInteger'':'#10'        this.pushState(''building-integer'');'
  +#10'        this.astGeneric(ast.left, retArr);'#10'        retArr.push(opera'
  +'torMap[ast.operator] || ast.operator);'#10'        this.castLiteralToIntege'
  +'r(ast.right, retArr);'#10'        this.popState(''building-integer'');'#10
  +'        break;'#10#10'      case ''Number & Integer'':'#10'        this.pus'
  +'hState(''building-float'');'#10'        this.astGeneric(ast.left, retArr);'
  +#10'        retArr.push(operatorMap[ast.operator] || ast.operator);'#10'    '
  +'    this.castValueToFloat(ast.right, retArr);'#10'        this.popState(''b'
  +'uilding-float'');'#10'        break;'#10'      case ''Float & LiteralIntege'
  +'r'':'#10'      case ''Number & LiteralInteger'':'#10'        this.pushState'
  +'(''building-float'');'#10'        this.astGeneric(ast.left, retArr);'#10'  '
  +'      retArr.push(operatorMap[ast.operator] || ast.operator);'#10'        t'
  +'his.castLiteralToFloat(ast.right, retArr);'#10'        this.popState(''buil'
  +'ding-float'');'#10'        break;'#10'      case ''LiteralInteger & Float'''
  +':'#10'      case ''LiteralInteger & Number'':'#10'        if (this.isState('
  +'''casting-to-integer'')) {'#10'          this.pushState(''building-integer'
  +''');'#10'          this.castLiteralToInteger(ast.left, retArr);'#10'       '
  +'   retArr.push(operatorMap[ast.operator] || ast.operator);'#10'          th'
  +'is.castValueToInteger(ast.right, retArr);'#10'          this.popState(''bui'
  +'lding-integer'');'#10'        } else {'#10'          this.pushState(''build'
  +'ing-float'');'#10'          this.astGeneric(ast.left, retArr);'#10'        '
  +'  retArr.push(operatorMap[ast.operator] || ast.operator);'#10'          thi'
  +'s.pushState(''casting-to-float'');'#10'          this.astGeneric(ast.right,'
  +' retArr);'#10'          this.popState(''casting-to-float'');'#10'          '
  +'this.popState(''building-float'');'#10'        }'#10'        break;'#10'   '
  +'   case ''LiteralInteger & Integer'':'#10'        this.pushState(''building'
  +'-integer'');'#10'        this.castLiteralToInteger(ast.left, retArr);'#10' '
  ,'       retArr.push(operatorMap[ast.operator] || ast.operator);'#10'        '
  +'this.astGeneric(ast.right, retArr);'#10'        this.popState(''building-in'
  +'teger'');'#10'        break;'#10#10'      case ''Boolean & Boolean'':'#10' '
  +'       this.pushState(''building-boolean'');'#10'        this.astGeneric(as'
  +'t.left, retArr);'#10'        retArr.push(operatorMap[ast.operator] || ast.o'
  +'perator);'#10'        this.astGeneric(ast.right, retArr);'#10'        this.'
  +'popState(''building-boolean'');'#10'        break;'#10#10'      case ''Floa'
  +'t & Integer'':'#10'        this.pushState(''building-float'');'#10'        '
  +'this.astGeneric(ast.left, retArr);'#10'        retArr.push(operatorMap[ast.'
  +'operator] || ast.operator);'#10'        this.castValueToFloat(ast.right, re'
  +'tArr);'#10'        this.popState(''building-float'');'#10'        break;'#10
  +#10'      default:'#10'        throw this.astErrorOutput(`Unhandled binary e'
  +'xpression between ${key}`, ast);'#10'    }'#10'    retArr.push('')'');'#10
  +#10'    return retArr;'#10'  }'#10#10'  checkAndUpconvertOperator(ast, retAr'
  +'r) {'#10'    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(a'
  +'st, retArr);'#10'    if (bitwiseResult) {'#10'      return bitwiseResult;'
  +#10'    }'#10'    const upconvertableOperators = {'#10'      ''%'': this.fix'
  +'IntegerDivisionAccuracy ? ''integerCorrectionModulo'' : ''modulo'','#10'   '
  +'   ''**'': ''pow'','#10'    };'#10'    const foundOperator = upconvertableO'
  +'perators[ast.operator];'#10'    if (!foundOperator) return null;'#10'    re'
  +'tArr.push(foundOperator);'#10'    retArr.push(''('');'#10'    switch (this.'
  +'getType(ast.left)) {'#10'      case ''Integer'':'#10'        this.castValue'
  +'ToFloat(ast.left, retArr);'#10'        break;'#10'      case ''LiteralInteg'
  +'er'':'#10'        this.castLiteralToFloat(ast.left, retArr);'#10'        br'
  +'eak;'#10'      default:'#10'        this.astGeneric(ast.left, retArr);'#10
  +'    }'#10'    retArr.push('','');'#10'    switch (this.getType(ast.right)) '
  +'{'#10'      case ''Integer'':'#10'        this.castValueToFloat(ast.right, '
  +'retArr);'#10'        break;'#10'      case ''LiteralInteger'':'#10'        '
  +'this.castLiteralToFloat(ast.right, retArr);'#10'        break;'#10'      de'
  +'fault:'#10'        this.astGeneric(ast.right, retArr);'#10'    }'#10'    re'
  +'tArr.push('')'');'#10'    return retArr;'#10'  }'#10#10'  checkAndUpconvert'
  +'BitwiseOperators(ast, retArr) {'#10'    const upconvertableOperators = {'#10
  +'      ''&'': ''bitwiseAnd'','#10'      ''|'': ''bitwiseOr'','#10'      ''^'
  +''': ''bitwiseXOR'','#10'      ''<<'': ''bitwiseZeroFillLeftShift'','#10'   '
  +'   ''>>'': ''bitwiseSignedRightShift'','#10'      ''>>>'': ''bitwiseZeroFil'
  +'lRightShift'','#10'    };'#10'    const foundOperator = upconvertableOperat'
  +'ors[ast.operator];'#10'    if (!foundOperator) return null;'#10'    retArr.'
  +'push(foundOperator);'#10'    retArr.push(''('');'#10'    const leftType = t'
  +'his.getType(ast.left);'#10'    switch (leftType) {'#10'      case ''Number'
  +''':'#10'      case ''Float'':'#10'        this.castValueToInteger(ast.left,'
  +' retArr);'#10'        break;'#10'      case ''LiteralInteger'':'#10'       '
  +' this.castLiteralToInteger(ast.left, retArr);'#10'        break;'#10'      '
  +'default:'#10'        this.astGeneric(ast.left, retArr);'#10'    }'#10'    r'
  +'etArr.push('','');'#10'    const rightType = this.getType(ast.right);'#10' '
  +'   switch (rightType) {'#10'      case ''Number'':'#10'      case ''Float'''
  +':'#10'        this.castValueToInteger(ast.right, retArr);'#10'        break'
  +';'#10'      case ''LiteralInteger'':'#10'        this.castLiteralToInteger('
  +'ast.right, retArr);'#10'        break;'#10'      default:'#10'        this.'
  +'astGeneric(ast.right, retArr);'#10'    }'#10'    retArr.push('')'');'#10'  '
  +'  return retArr;'#10'  }'#10#10'  checkAndUpconvertBitwiseUnary(ast, retArr'
  +') {'#10'    const upconvertableOperators = {'#10'      ''~'': ''bitwiseNot'
  +''','#10'    };'#10'    const foundOperator = upconvertableOperators[ast.ope'
  +'rator];'#10'    if (!foundOperator) return null;'#10'    retArr.push(foundO'
  +'perator);'#10'    retArr.push(''('');'#10'    switch (this.getType(ast.argu'
  +'ment)) {'#10'      case ''Number'':'#10'      case ''Float'':'#10'        t'
  +'his.castValueToInteger(ast.argument, retArr);'#10'        break;'#10'      '
  +'case ''LiteralInteger'':'#10'        this.castLiteralToInteger(ast.argument'
  +', retArr);'#10'        break;'#10'      default:'#10'        this.astGeneri'
  +'c(ast.argument, retArr);'#10'    }'#10'    retArr.push('')'');'#10'    retu'
  +'rn retArr;'#10'  }'#10#10'  castLiteralToInteger(ast, retArr) {'#10'    thi'
  +'s.pushState(''casting-to-integer'');'#10'    this.astGeneric(ast, retArr);'
  +#10'    this.popState(''casting-to-integer'');'#10'    return retArr;'#10'  '
  +'}'#10#10'  castLiteralToFloat(ast, retArr) {'#10'    this.pushState(''casti'
  +'ng-to-float'');'#10'    this.astGeneric(ast, retArr);'#10'    this.popState'
  ,'(''casting-to-float'');'#10'    return retArr;'#10'  }'#10#10'  castValueTo'
  +'Integer(ast, retArr) {'#10'    this.pushState(''casting-to-integer'');'#10
  +'    retArr.push(''int('');'#10'    this.astGeneric(ast, retArr);'#10'    re'
  +'tArr.push('')'');'#10'    this.popState(''casting-to-integer'');'#10'    re'
  +'turn retArr;'#10'  }'#10#10'  castValueToFloat(ast, retArr) {'#10'    this.'
  +'pushState(''casting-to-float'');'#10'    retArr.push(''float('');'#10'    t'
  +'his.astGeneric(ast, retArr);'#10'    retArr.push('')'');'#10'    this.popSt'
  +'ate(''casting-to-float'');'#10'    return retArr;'#10'  }'#10#10'  astIdent'
  +'ifierExpression(idtNode, retArr) {'#10'    if (idtNode.type !== ''Identifie'
  +'r'') {'#10'      throw this.astErrorOutput(''IdentifierExpression - not an '
  +'Identifier'', idtNode);'#10'    }'#10#10'    const type = this.getType(idtN'
  +'ode);'#10#10'    const name = utils.sanitizeName(idtNode.name);'#10'    if '
  +'(idtNode.name === ''Infinity'') {'#10'      retArr.push(''3.402823466e+38'''
  +');'#10'    } else if (type === ''Boolean'') {'#10'      if (this.argumentNa'
  +'mes.indexOf(name) > -1) {'#10'        retArr.push(`bool(user_${name})`);'#10
  +'      } else {'#10'        retArr.push(`user_${name}`);'#10'      }'#10'   '
  +' } else {'#10'      retArr.push(`user_${name}`);'#10'    }'#10#10'    retur'
  +'n retArr;'#10'  }'#10#10'  astForStatement(forNode, retArr) {'#10'    if (f'
  +'orNode.type !== ''ForStatement'') {'#10'      throw this.astErrorOutput(''I'
  +'nvalid for statement'', forNode);'#10'    }'#10#10'    const initArr = [];'
  +#10'    const testArr = [];'#10'    const updateArr = [];'#10'    const body'
  +'Arr = [];'#10'    let isSafe = null;'#10#10'    if (forNode.init) {'#10'   '
  +'   const { declarations } = forNode.init;'#10'      if (declarations.length'
  +' > 1) {'#10'        isSafe = false;'#10'      }'#10'      this.astGeneric(f'
  +'orNode.init, initArr);'#10'      for (let i = 0; i < declarations.length; i'
  +'++) {'#10'        if (declarations[i].init && declarations[i].init.type !=='
  +' ''Literal'') {'#10'          isSafe = false;'#10'        }'#10'      }'#10
  +'    } else {'#10'      isSafe = false;'#10'    }'#10#10'    if (forNode.tes'
  +'t) {'#10'      this.astGeneric(forNode.test, testArr);'#10'    } else {'#10
  +'      isSafe = false;'#10'    }'#10#10'    if (forNode.update) {'#10'      '
  +'this.astGeneric(forNode.update, updateArr);'#10'    } else {'#10'      isSa'
  +'fe = false;'#10'    }'#10#10'    if (forNode.body) {'#10'      this.pushSta'
  +'te(''loop-body'');'#10'      this.astGeneric(forNode.body, bodyArr);'#10'  '
  +'    this.popState(''loop-body'');'#10'    }'#10#10'    if (isSafe === null)'
  +' {'#10'      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test'
  +');'#10'    }'#10#10'    if (isSafe) {'#10'      const initString = initArr.'
  +'join('''');'#10'      const initNeedsSemiColon = initString[initString.leng'
  +'th - 1] !== '';'';'#10'      retArr.push(`for (${initString}${initNeedsSemi'
  +'Colon ? '';'' : ''''}${testArr.join('''')};${updateArr.join('''')}){\n`);'
  +#10'      retArr.push(bodyArr.join(''''));'#10'      retArr.push(''}\n'');'
  +#10'    } else {'#10'      const iVariableName = this.getInternalVariableNam'
  +'e(''safeI'');'#10'      if (initArr.length > 0) {'#10'        retArr.push(i'
  +'nitArr.join(''''), ''\n'');'#10'      }'#10'      retArr.push(`for (int ${i'
  +'VariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\n`);'#10'   '
  +'   if (testArr.length > 0) {'#10'        retArr.push(`if (!${testArr.join('
  +''''')}) break;\n`);'#10'      }'#10'      retArr.push(bodyArr.join(''''));'
  +#10'      retArr.push(`\n${updateArr.join('''')};`);'#10'      retArr.push('
  +'''}\n'');'#10'    }'#10'    return retArr;'#10'  }'#10#10'  astWhileStateme'
  +'nt(whileNode, retArr) {'#10'    if (whileNode.type !== ''WhileStatement'') '
  +'{'#10'      throw this.astErrorOutput(''Invalid while statement'', whileNod'
  +'e);'#10'    }'#10#10'    const iVariableName = this.getInternalVariableName'
  +'(''safeI'');'#10'    retArr.push(`for (int ${iVariableName}=0;${iVariableNa'
  +'me}<LOOP_MAX;${iVariableName}++){\n`);'#10'    retArr.push(''if (!'');'#10
  +'    this.astGeneric(whileNode.test, retArr);'#10'    retArr.push('') break;'
  +'\n'');'#10'    this.astGeneric(whileNode.body, retArr);'#10'    retArr.push'
  +'(''}\n'');'#10#10'    return retArr;'#10'  }'#10#10'  astDoWhileStatement(d'
  +'oWhileNode, retArr) {'#10'    if (doWhileNode.type !== ''DoWhileStatement'''
  +') {'#10'      throw this.astErrorOutput(''Invalid while statement'', doWhil'
  +'eNode);'#10'    }'#10#10'    const iVariableName = this.getInternalVariable'
  +'Name(''safeI'');'#10'    retArr.push(`for (int ${iVariableName}=0;${iVariab'
  +'leName}<LOOP_MAX;${iVariableName}++){\n`);'#10'    this.astGeneric(doWhileN'
  +'ode.body, retArr);'#10'    retArr.push(''if (!'');'#10'    this.astGeneric('
  +'doWhileNode.test, retArr);'#10'    retArr.push('') break;\n'');'#10'    ret'
  +'Arr.push(''}\n'');'#10#10'    return retArr;'#10'  }'#10#10#10'  astAssignm'
  ,'entExpression(assNode, retArr) {'#10'    if (assNode.operator === ''%='') {'
  +#10'      this.astGeneric(assNode.left, retArr);'#10'      retArr.push(''='''
  +');'#10'      retArr.push(''mod('');'#10'      this.astGeneric(assNode.left,'
  +' retArr);'#10'      retArr.push('','');'#10'      this.astGeneric(assNode.r'
  +'ight, retArr);'#10'      retArr.push('')'');'#10'    } else if (assNode.ope'
  +'rator === ''**='') {'#10'      this.astGeneric(assNode.left, retArr);'#10' '
  +'     retArr.push(''='');'#10'      retArr.push(''pow('');'#10'      this.as'
  +'tGeneric(assNode.left, retArr);'#10'      retArr.push('','');'#10'      thi'
  +'s.astGeneric(assNode.right, retArr);'#10'      retArr.push('')'');'#10'    '
  +'} else {'#10'      const leftType = this.getType(assNode.left);'#10'      c'
  +'onst rightType = this.getType(assNode.right);'#10'      this.astGeneric(ass'
  +'Node.left, retArr);'#10'      retArr.push(assNode.operator);'#10'      if ('
  +'leftType !== ''Integer'' && rightType === ''Integer'') {'#10'        retArr'
  +'.push(''float('');'#10'        this.astGeneric(assNode.right, retArr);'#10
  +'        retArr.push('')'');'#10'      } else {'#10'        this.astGeneric('
  +'assNode.right, retArr);'#10'      }'#10'      return retArr;'#10'    }'#10
  +'  }'#10#10'  astBlockStatement(bNode, retArr) {'#10'    if (this.isState('''
  +'loop-body'')) {'#10'      this.pushState(''block-body''); '#10'      for (l'
  +'et i = 0; i < bNode.body.length; i++) {'#10'        this.astGeneric(bNode.b'
  +'ody[i], retArr);'#10'      }'#10'      this.popState(''block-body'');'#10' '
  +'   } else {'#10'      retArr.push(''{\n'');'#10'      for (let i = 0; i < b'
  +'Node.body.length; i++) {'#10'        this.astGeneric(bNode.body[i], retArr)'
  +';'#10'      }'#10'      retArr.push(''}\n'');'#10'    }'#10'    return retA'
  +'rr;'#10'  }'#10#10'  astVariableDeclaration(varDecNode, retArr) {'#10'    c'
  +'onst declarations = varDecNode.declarations;'#10'    if (!declarations || !'
  +'declarations[0] || !declarations[0].init) {'#10'      throw this.astErrorOu'
  +'tput(''Unexpected expression'', varDecNode);'#10'    }'#10'    const result'
  +' = [];'#10'    let lastType = null;'#10'    const declarationSets = [];'#10
  +'    let declarationSet = [];'#10'    for (let i = 0; i < declarations.lengt'
  +'h; i++) {'#10'      const declaration = declarations[i];'#10'      const in'
  +'it = declaration.init;'#10'      const info = this.getDeclaration(declarati'
  +'on.id);'#10'      const actualType = this.getType(declaration.init);'#10'  '
  +'    let type = actualType;'#10'      if (type === ''LiteralInteger'') {'#10
  +'        if (info.suggestedType === ''Integer'') {'#10'          type = ''In'
  +'teger'';'#10'        } else {'#10'          type = ''Number'';'#10'        '
  +'}'#10'      }'#10'      const markupType = typeMap[type];'#10'      if (!ma'
  +'rkupType) {'#10'        throw this.astErrorOutput(`Markup type ${ markupTyp'
  +'e } not handled`, varDecNode);'#10'      }'#10'      const declarationResul'
  +'t = [];'#10'      if (actualType === ''Integer'' && type === ''Integer'') {'
  +#10'        info.valueType = ''Number'';'#10'        if (i === 0 || lastType'
  +' === null) {'#10'          declarationResult.push(''float '');'#10'        '
  +'} else if (type !== lastType) {'#10'          throw new Error(''Unhandled d'
  +'eclaration'');'#10'        }'#10'        lastType = type;'#10'        decla'
  +'rationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);'#10
  +'        declarationResult.push(''float('');'#10'        this.astGeneric(ini'
  +'t, declarationResult);'#10'        declarationResult.push('')'');'#10'     '
  +' } else {'#10'        info.valueType = type;'#10'        if (i === 0 || las'
  +'tType === null) {'#10'          declarationResult.push(`${markupType} `);'
  +#10'        } else if (type !== lastType) {'#10'          declarationSets.pu'
  +'sh(declarationSet.join('',''));'#10'          declarationSet = [];'#10'    '
  +'      declarationResult.push(`${markupType} `);'#10'        }'#10'        l'
  +'astType = type;'#10'        declarationResult.push(`user_${utils.sanitizeNa'
  +'me(declaration.id.name)}=`);'#10'        if (actualType === ''Number'' && t'
  +'ype === ''Integer'') {'#10'          if (init.left && init.left.type === '''
  +'Literal'') {'#10'            this.astGeneric(init, declarationResult);'#10
  +'          } else {'#10'            declarationResult.push(''int('');'#10'  '
  +'          this.astGeneric(init, declarationResult);'#10'            declara'
  +'tionResult.push('')'');'#10'          }'#10'        } else if (actualType ='
  +'== ''LiteralInteger'' && type === ''Integer'') {'#10'          this.castLit'
  +'eralToInteger(init, declarationResult);'#10'        } else {'#10'          '
  +'this.astGeneric(init, declarationResult);'#10'        }'#10'      }'#10'   '
  +'   declarationSet.push(declarationResult.join(''''));'#10'    }'#10#10'    '
  +'if (declarationSet.length > 0) {'#10'      declarationSets.push(declaration'
  +'Set.join('',''));'#10'    }'#10#10'    result.push(declarationSets.join('';'
  ,'''));'#10#10'    retArr.push(result.join(''''));'#10'    retArr.push('';'')'
  +';'#10'    return retArr;'#10'  }'#10#10'  astIfStatement(ifNode, retArr) {'
  +#10'    retArr.push(''if ('');'#10'    this.astGeneric(ifNode.test, retArr);'
  +#10'    retArr.push('')'');'#10'    if (ifNode.consequent.type === ''BlockSt'
  +'atement'') {'#10'      this.astGeneric(ifNode.consequent, retArr);'#10'    '
  +'} else {'#10'      retArr.push('' {\n'');'#10'      this.astGeneric(ifNode.'
  +'consequent, retArr);'#10'      retArr.push(''\n}\n'');'#10'    }'#10#10'   '
  +' if (ifNode.alternate) {'#10'      retArr.push(''else '');'#10'      if (if'
  +'Node.alternate.type === ''BlockStatement'' || ifNode.alternate.type === ''I'
  +'fStatement'') {'#10'        this.astGeneric(ifNode.alternate, retArr);'#10
  +'      } else {'#10'        retArr.push('' {\n'');'#10'        this.astGener'
  +'ic(ifNode.alternate, retArr);'#10'        retArr.push(''\n}\n'');'#10'     '
  +' }'#10'    }'#10'    return retArr;'#10'  }'#10#10'  astSwitchStatement(ast'
  +', retArr) {'#10'    if (ast.type !== ''SwitchStatement'') {'#10'      throw'
  +' this.astErrorOutput(''Invalid switch statement'', ast);'#10'    }'#10'    '
  +'const { discriminant, cases } = ast;'#10'    const type = this.getType(disc'
  +'riminant);'#10'    const varName = `switchDiscriminant${this.astKey(ast, '''
  +'_'')}`;'#10'    switch (type) {'#10'      case ''Float'':'#10'      case '''
  +'Number'':'#10'        retArr.push(`float ${varName} = `);'#10'        this.'
  +'astGeneric(discriminant, retArr);'#10'        retArr.push('';\n'');'#10'   '
  +'     break;'#10'      case ''Integer'':'#10'        retArr.push(`int ${varN'
  +'ame} = `);'#10'        this.astGeneric(discriminant, retArr);'#10'        r'
  +'etArr.push('';\n'');'#10'        break;'#10'    }'#10'    if (cases.length '
  +'=== 1 && !cases[0].test) {'#10'      this.astGeneric(cases[0].consequent, r'
  +'etArr);'#10'      return retArr;'#10'    }'#10#10'    let fallingThrough = '
  +'false;'#10'    let defaultResult = [];'#10'    let movingDefaultToEnd = fal'
  +'se;'#10'    let pastFirstIf = false;'#10'    for (let i = 0; i < cases.leng'
  +'th; i++) {'#10'      if (!cases[i].test) {'#10'        if (cases.length > i'
  +' + 1) {'#10'          movingDefaultToEnd = true;'#10'          this.astGene'
  +'ric(cases[i].consequent, defaultResult);'#10'          continue;'#10'      '
  +'  } else {'#10'          retArr.push('' else {\n'');'#10'        }'#10'    '
  +'  } else {'#10'        if (i === 0 || !pastFirstIf) {'#10'          pastFir'
  +'stIf = true;'#10'          retArr.push(`if (${varName} == `);'#10'        }'
  +' else {'#10'          if (fallingThrough) {'#10'            retArr.push(`${'
  +'varName} == `);'#10'            fallingThrough = false;'#10'          } els'
  +'e {'#10'            retArr.push(` else if (${varName} == `);'#10'          '
  +'}'#10'        }'#10'        if (type === ''Integer'') {'#10'          const'
  +' testType = this.getType(cases[i].test);'#10'          switch (testType) {'
  +#10'            case ''Number'':'#10'            case ''Float'':'#10'       '
  +'       this.castValueToInteger(cases[i].test, retArr);'#10'              br'
  +'eak;'#10'            case ''LiteralInteger'':'#10'              this.castLi'
  +'teralToInteger(cases[i].test, retArr);'#10'              break;'#10'       '
  +'   }'#10'        } else if (type === ''Float'') {'#10'          const testT'
  +'ype = this.getType(cases[i].test);'#10'          switch (testType) {'#10'  '
  +'          case ''LiteralInteger'':'#10'              this.castLiteralToFloa'
  +'t(cases[i].test, retArr);'#10'              break;'#10'            case ''I'
  +'nteger'':'#10'              this.castValueToFloat(cases[i].test, retArr);'
  +#10'              break;'#10'          }'#10'        } else {'#10'          '
  +'throw new Error(''unhanlded'');'#10'        }'#10'        if (!cases[i].con'
  +'sequent || cases[i].consequent.length === 0) {'#10'          fallingThrough'
  +' = true;'#10'          retArr.push('' || '');'#10'          continue;'#10' '
  +'       }'#10'        retArr.push(`) {\n`);'#10'      }'#10'      this.astGe'
  +'neric(cases[i].consequent, retArr);'#10'      retArr.push(''\n}'');'#10'   '
  +' }'#10'    if (movingDefaultToEnd) {'#10'      retArr.push('' else {'');'#10
  +'      retArr.push(defaultResult.join(''''));'#10'      retArr.push(''}'');'
  +#10'    }'#10'    return retArr;'#10'  }'#10#10'  astThisExpression(tNode, r'
  +'etArr) {'#10'    retArr.push(''this'');'#10'    return retArr;'#10'  }'#10
  +#10'  astMemberExpression(mNode, retArr) {'#10'    const {'#10'      propert'
  +'y,'#10'      name,'#10'      signature,'#10'      origin,'#10'      type,'
  +#10'      xProperty,'#10'      yProperty,'#10'      zProperty'#10'    } = th'
  +'is.getMemberExpressionDetails(mNode);'#10'    switch (signature) {'#10'    '
  +'  case ''value.thread.value'':'#10'      case ''this.thread.value'':'#10'  '
  +'      if (name !== ''x'' && name !== ''y'' && name !== ''z'') {'#10'       '
  +'   throw this.astErrorOutput(''Unexpected expression, expected `this.thread'
  ,'.x`, `this.thread.y`, or `this.thread.z`'', mNode);'#10'        }'#10'     '
  +'   retArr.push(`threadId.${name}`);'#10'        return retArr;'#10'      ca'
  +'se ''this.output.value'':'#10'        if (this.dynamicOutput) {'#10'       '
  +'   switch (name) {'#10'            case ''x'':'#10'              if (this.i'
  +'sState(''casting-to-float'')) {'#10'                retArr.push(''float(uOu'
  +'tputDim.x)'');'#10'              } else {'#10'                retArr.push('
  +'''uOutputDim.x'');'#10'              }'#10'              break;'#10'       '
  +'     case ''y'':'#10'              if (this.isState(''casting-to-float'')) '
  +'{'#10'                retArr.push(''float(uOutputDim.y)'');'#10'           '
  +'   } else {'#10'                retArr.push(''uOutputDim.y'');'#10'        '
  +'      }'#10'              break;'#10'            case ''z'':'#10'          '
  +'    if (this.isState(''casting-to-float'')) {'#10'                retArr.pu'
  +'sh(''float(uOutputDim.z)'');'#10'              } else {'#10'               '
  +' retArr.push(''uOutputDim.z'');'#10'              }'#10'              break'
  +';'#10'            default:'#10'              throw this.astErrorOutput(''Un'
  +'expected expression'', mNode);'#10'          }'#10'        } else {'#10'   '
  +'       switch (name) {'#10'            case ''x'':'#10'              if (th'
  +'is.isState(''casting-to-integer'')) {'#10'                retArr.push(this.'
  +'output[0]);'#10'              } else {'#10'                retArr.push(this'
  +'.output[0], ''.0'');'#10'              }'#10'              break;'#10'     '
  +'       case ''y'':'#10'              if (this.isState(''casting-to-integer'
  +''')) {'#10'                retArr.push(this.output[1]);'#10'              }'
  +' else {'#10'                retArr.push(this.output[1], ''.0'');'#10'      '
  +'        }'#10'              break;'#10'            case ''z'':'#10'        '
  +'      if (this.isState(''casting-to-integer'')) {'#10'                retAr'
  +'r.push(this.output[2]);'#10'              } else {'#10'                retA'
  +'rr.push(this.output[2], ''.0'');'#10'              }'#10'              brea'
  +'k;'#10'            default:'#10'              throw this.astErrorOutput(''U'
  +'nexpected expression'', mNode);'#10'          }'#10'        }'#10'        r'
  +'eturn retArr;'#10'      case ''value'':'#10'        throw this.astErrorOutp'
  +'ut(''Unexpected expression'', mNode);'#10'      case ''value[]'':'#10'     '
  +' case ''value[][]'':'#10'      case ''value[][][]'':'#10'      case ''value'
  +'[][][][]'':'#10'      case ''value.value'':'#10'        if (origin === ''Ma'
  +'th'') {'#10'          retArr.push(Math[name]);'#10'          return retArr;'
  +#10'        }'#10'        const cleanName = utils.sanitizeName(name);'#10'  '
  +'      switch (property) {'#10'          case ''r'':'#10'            retArr.'
  +'push(`user_${ cleanName }.r`);'#10'            return retArr;'#10'         '
  +' case ''g'':'#10'            retArr.push(`user_${ cleanName }.g`);'#10'    '
  +'        return retArr;'#10'          case ''b'':'#10'            retArr.pus'
  +'h(`user_${ cleanName }.b`);'#10'            return retArr;'#10'          ca'
  +'se ''a'':'#10'            retArr.push(`user_${ cleanName }.a`);'#10'       '
  +'     return retArr;'#10'        }'#10'        break;'#10'      case ''this.'
  +'constants.value'':'#10'        if (typeof xProperty === ''undefined'') {'#10
  +'          switch (type) {'#10'            case ''Array(2)'':'#10'          '
  +'  case ''Array(3)'':'#10'            case ''Array(4)'':'#10'              r'
  +'etArr.push(`constants_${ utils.sanitizeName(name) }`);'#10'              re'
  +'turn retArr;'#10'          }'#10'        }'#10'        case ''this.constant'
  +'s.value[]'':'#10'        case ''this.constants.value[][]'':'#10'        cas'
  +'e ''this.constants.value[][][]'':'#10'        case ''this.constants.value[]'
  +'[][][]'':'#10'          break;'#10'        case ''fn()[]'':'#10'          t'
  +'his.astCallExpression(mNode.object, retArr);'#10'          retArr.push(''['
  +''');'#10'          retArr.push(this.memberExpressionPropertyMarkup(property'
  +'));'#10'          retArr.push('']'');'#10'          return retArr;'#10'    '
  +'    case ''[][]'':'#10'          this.astArrayExpression(mNode.object, retA'
  +'rr);'#10'          retArr.push(''['');'#10'          retArr.push(this.membe'
  +'rExpressionPropertyMarkup(property));'#10'          retArr.push('']'');'#10
  +'          return retArr;'#10'        case ''value.value[]'':'#10'        ca'
  +'se ''value.value[][]'':'#10'          if (this.removeIstanbulCoverage) {'#10
  +'            return retArr;'#10'          }'#10'          default:'#10'     '
  +'       throw this.astErrorOutput(''Unexpected expression'', mNode);'#10'   '
  +' }'#10#10'    if (mNode.computed === false) {'#10'      switch (type) {'#10
  +'        case ''Number'':'#10'        case ''Integer'':'#10'        case ''F'
  +'loat'':'#10'        case ''Boolean'':'#10'          retArr.push(`${origin}_'
  +'${utils.sanitizeName(name)}`);'#10'          return retArr;'#10'      }'#10
  ,'    }'#10#10'    const markupName = `${origin}_${utils.sanitizeName(name)}`'
  +';'#10#10'    switch (type) {'#10'      case ''Array(2)'':'#10'      case '''
  +'Array(3)'':'#10'      case ''Array(4)'':'#10'        this.astGeneric(mNode.'
  +'object, retArr);'#10'        retArr.push(''['');'#10'        retArr.push(th'
  +'is.memberExpressionPropertyMarkup(xProperty));'#10'        retArr.push('']'
  +''');'#10'        break;'#10'      case ''HTMLImageArray'':'#10'        retA'
  +'rr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Di'
  +'m, `);'#10'        this.memberExpressionXYZ(xProperty, yProperty, zProperty'
  +', retArr);'#10'        retArr.push('')'');'#10'        break;'#10'      cas'
  +'e ''ArrayTexture(1)'':'#10'        retArr.push(`getFloatFromSampler2D(${ ma'
  +'rkupName }, ${ markupName }Size, ${ markupName }Dim, `);'#10'        this.m'
  +'emberExpressionXYZ(xProperty, yProperty, zProperty, retArr);'#10'        re'
  +'tArr.push('')'');'#10'        break;'#10'      case ''Array1D(2)'':'#10'   '
  +'   case ''Array2D(2)'':'#10'      case ''Array3D(2)'':'#10'        retArr.p'
  +'ush(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markup'
  +'Name }Dim, `);'#10'        this.memberExpressionXYZ(xProperty, yProperty, z'
  +'Property, retArr);'#10'        retArr.push('')'');'#10'        break;'#10' '
  +'     case ''ArrayTexture(2)'':'#10'        retArr.push(`getVec2FromSampler2'
  +'D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);'#10'       '
  +' this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);'#10'   '
  +'     retArr.push('')'');'#10'        break;'#10'      case ''Array1D(3)'':'
  +#10'      case ''Array2D(3)'':'#10'      case ''Array3D(3)'':'#10'        re'
  +'tArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ '
  +'markupName }Dim, `);'#10'        this.memberExpressionXYZ(xProperty, yPrope'
  +'rty, zProperty, retArr);'#10'        retArr.push('')'');'#10'        break;'
  +#10'      case ''ArrayTexture(3)'':'#10'        retArr.push(`getVec3FromSamp'
  +'ler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);'#10'   '
  +'     this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);'#10
  +'        retArr.push('')'');'#10'        break;'#10'      case ''Array1D(4)'
  +''':'#10'      case ''Array2D(4)'':'#10'      case ''Array3D(4)'':'#10'     '
  +'   retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size'
  +', ${ markupName }Dim, `);'#10'        this.memberExpressionXYZ(xProperty, y'
  +'Property, zProperty, retArr);'#10'        retArr.push('')'');'#10'        b'
  +'reak;'#10'      case ''ArrayTexture(4)'':'#10'      case ''HTMLCanvas'':'#10
  +'      case ''HTMLImage'':'#10'      case ''HTMLVideo'':'#10'        retArr.'
  +'push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupN'
  +'ame }Dim, `);'#10'        this.memberExpressionXYZ(xProperty, yProperty, zP'
  +'roperty, retArr);'#10'        retArr.push('')'');'#10'        break;'#10'  '
  +'    case ''NumberTexture'':'#10'      case ''Array'':'#10'      case ''Arra'
  +'y2D'':'#10'      case ''Array3D'':'#10'      case ''Array4D'':'#10'      ca'
  +'se ''Input'':'#10'      case ''Number'':'#10'      case ''Float'':'#10'    '
  +'  case ''Integer'':'#10'        if (this.precision === ''single'') {'#10'  '
  +'        retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size,'
  +' ${markupName}Dim, `);'#10'          this.memberExpressionXYZ(xProperty, yP'
  +'roperty, zProperty, retArr);'#10'          retArr.push('')'');'#10'        '
  +'} else {'#10'          const bitRatio = (origin === ''user'' ?'#10'        '
  +'    this.lookupFunctionArgumentBitRatio(this.name, name) :'#10'            '
  +'this.constantBitRatios[name]'#10'          );'#10'          switch (bitRati'
  +'o) {'#10'            case 1:'#10'              retArr.push(`get8(${markupNa'
  +'me}, ${markupName}Size, ${markupName}Dim, `);'#10'              break;'#10
  +'            case 2:'#10'              retArr.push(`get16(${markupName}, ${m'
  +'arkupName}Size, ${markupName}Dim, `);'#10'              break;'#10'        '
  +'    case 4:'#10'            case 0:'#10'              retArr.push(`get32(${'
  +'markupName}, ${markupName}Size, ${markupName}Dim, `);'#10'              bre'
  +'ak;'#10'            default:'#10'              throw new Error(`unhandled b'
  +'it ratio of ${bitRatio}`);'#10'          }'#10'          this.memberExpress'
  +'ionXYZ(xProperty, yProperty, zProperty, retArr);'#10'          retArr.push('
  +''')'');'#10'        }'#10'        break;'#10'      case ''MemoryOptimizedNu'
  +'mberTexture'':'#10'        retArr.push(`getMemoryOptimized32(${ markupName '
  +'}, ${ markupName }Size, ${ markupName }Dim, `);'#10'        this.memberExpr'
  +'essionXYZ(xProperty, yProperty, zProperty, retArr);'#10'        retArr.push'
  +'('')'');'#10'        break;'#10'      default:'#10'        throw new Error('
  +'`unhandled member expression "${ type }"`);'#10'    }'#10'    return retArr'
  +';'#10'  }'#10#10'  astCallExpression(ast, retArr) {'#10'    if (!ast.callee'
  ,') {'#10'      throw this.astErrorOutput(''Unknown CallExpression'', ast);'
  +#10'    }'#10#10'    let functionName = null;'#10'    const isMathFunction ='
  +' this.isAstMathFunction(ast);'#10#10'    if (isMathFunction || (ast.callee.'
  +'object && ast.callee.object.type === ''ThisExpression'')) {'#10'      funct'
  +'ionName = ast.callee.property.name;'#10'    }'#10'    else if (ast.callee.t'
  +'ype === ''SequenceExpression'' && ast.callee.expressions[0].type === ''Lite'
  +'ral'' && !isNaN(ast.callee.expressions[0].raw)) {'#10'      functionName = '
  +'ast.callee.expressions[1].property.name;'#10'    } else {'#10'      functio'
  +'nName = ast.callee.name;'#10'    }'#10#10'    if (!functionName) {'#10'    '
  +'  throw this.astErrorOutput(`Unhandled function, couldn''t find name`, ast)'
  +';'#10'    }'#10#10'    switch (functionName) {'#10'      case ''pow'':'#10
  +'        functionName = ''_pow'';'#10'        break;'#10'      case ''round'
  +''':'#10'        functionName = ''_round'';'#10'        break;'#10'    }'#10
  +#10'    if (this.calledFunctions.indexOf(functionName) < 0) {'#10'      this'
  +'.calledFunctions.push(functionName);'#10'    }'#10#10'    if (functionName '
  +'=== ''random'' && this.plugins && this.plugins.length > 0) {'#10'      for '
  +'(let i = 0; i < this.plugins.length; i++) {'#10'        const plugin = this'
  +'.plugins[i];'#10'        if (plugin.functionMatch === ''Math.random()'' && '
  +'plugin.functionReplace) {'#10'          retArr.push(plugin.functionReplace)'
  +';'#10'          return retArr;'#10'        }'#10'      }'#10'    }'#10#10' '
  +'   if (this.onFunctionCall) {'#10'      this.onFunctionCall(this.name, func'
  +'tionName, ast.arguments);'#10'    }'#10#10'    retArr.push(functionName);'
  +#10#10'    retArr.push(''('');'#10#10'    if (isMathFunction) {'#10'      fo'
  +'r (let i = 0; i < ast.arguments.length; ++i) {'#10'        const argument ='
  +' ast.arguments[i];'#10'        const argumentType = this.getType(argument);'
  +#10'        if (i > 0) {'#10'          retArr.push('', '');'#10'        }'#10
  +#10'        switch (argumentType) {'#10'          case ''Integer'':'#10'    '
  +'        this.castValueToFloat(argument, retArr);'#10'            break;'#10
  +'          default:'#10'            this.astGeneric(argument, retArr);'#10' '
  +'           break;'#10'        }'#10'      }'#10'    } else {'#10'      cons'
  +'t targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];'#10' '
  +'     for (let i = 0; i < ast.arguments.length; ++i) {'#10'        const arg'
  +'ument = ast.arguments[i];'#10'        let targetType = targetTypes[i];'#10
  +'        if (i > 0) {'#10'          retArr.push('', '');'#10'        }'#10' '
  +'       const argumentType = this.getType(argument);'#10'        if (!target'
  +'Type) {'#10'          this.triggerImplyArgumentType(functionName, i, argume'
  +'ntType, this);'#10'          targetType = argumentType;'#10'        }'#10' '
  +'       switch (argumentType) {'#10'          case ''Boolean'':'#10'        '
  +'    this.astGeneric(argument, retArr);'#10'            continue;'#10'      '
  +'    case ''Number'':'#10'          case ''Float'':'#10'            if (targ'
  +'etType === ''Integer'') {'#10'              retArr.push(''int('');'#10'    '
  +'          this.astGeneric(argument, retArr);'#10'              retArr.push('
  +''')'');'#10'              continue;'#10'            } else if (targetType ='
  +'== ''Number'' || targetType === ''Float'') {'#10'              this.astGene'
  +'ric(argument, retArr);'#10'              continue;'#10'            } else i'
  +'f (targetType === ''LiteralInteger'') {'#10'              this.castLiteralT'
  +'oFloat(argument, retArr);'#10'              continue;'#10'            }'#10
  +'            break;'#10'          case ''Integer'':'#10'            if (targ'
  +'etType === ''Number'' || targetType === ''Float'') {'#10'              retA'
  +'rr.push(''float('');'#10'              this.astGeneric(argument, retArr);'
  +#10'              retArr.push('')'');'#10'              continue;'#10'      '
  +'      } else if (targetType === ''Integer'') {'#10'              this.astGe'
  +'neric(argument, retArr);'#10'              continue;'#10'            }'#10
  +'            break;'#10'          case ''LiteralInteger'':'#10'            i'
  +'f (targetType === ''Integer'') {'#10'              this.castLiteralToIntege'
  +'r(argument, retArr);'#10'              continue;'#10'            } else if '
  +'(targetType === ''Number'' || targetType === ''Float'') {'#10'             '
  +' this.castLiteralToFloat(argument, retArr);'#10'              continue;'#10
  +'            } else if (targetType === ''LiteralInteger'') {'#10'           '
  +'   this.astGeneric(argument, retArr);'#10'              continue;'#10'     '
  +'       }'#10'            break;'#10'          case ''Array(2)'':'#10'      '
  +'    case ''Array(3)'':'#10'          case ''Array(4)'':'#10'            if '
  +'(targetType === argumentType) {'#10'              if (argument.type === ''I'
  +'dentifier'') {'#10'                retArr.push(`user_${utils.sanitizeName(a'
  ,'rgument.name)}`);'#10'              } else if (argument.type === ''ArrayExp'
  +'ression'' || argument.type === ''MemberExpression'' || argument.type === '''
  +'CallExpression'') {'#10'                this.astGeneric(argument, retArr);'
  +#10'              } else {'#10'                throw this.astErrorOutput(`Un'
  +'handled argument type ${ argument.type }`, ast);'#10'              }'#10'  '
  +'            continue;'#10'            }'#10'            break;'#10'        '
  +'  case ''HTMLCanvas'':'#10'          case ''HTMLImage'':'#10'          case'
  +' ''HTMLImageArray'':'#10'          case ''HTMLVideo'':'#10'          case '
  +'''ArrayTexture(1)'':'#10'          case ''ArrayTexture(2)'':'#10'          '
  +'case ''ArrayTexture(3)'':'#10'          case ''ArrayTexture(4)'':'#10'     '
  +'     case ''Array'':'#10'          case ''Input'':'#10'            if (targ'
  +'etType === argumentType) {'#10'              if (argument.type !== ''Identi'
  +'fier'') throw this.astErrorOutput(`Unhandled argument type ${ argument.type'
  +' }`, ast);'#10'              this.triggerImplyArgumentBitRatio(this.name, a'
  +'rgument.name, functionName, i);'#10'              const name = utils.saniti'
  +'zeName(argument.name);'#10'              retArr.push(`user_${name},user_${n'
  +'ame}Size,user_${name}Dim`);'#10'              continue;'#10'            }'
  +#10'            break;'#10'        }'#10'        throw this.astErrorOutput(`'
  +'Unhandled argument combination of ${ argumentType } and ${ targetType } for'
  +' argument named "${ argument.name }"`, ast);'#10'      }'#10'    }'#10'    '
  +'retArr.push('')'');'#10#10'    return retArr;'#10'  }'#10#10'  astArrayExpr'
  +'ession(arrNode, retArr) {'#10'    const arrLen = arrNode.elements.length;'
  +#10#10'    retArr.push(''vec'' + arrLen + ''('');'#10'    for (let i = 0; i '
  +'< arrLen; ++i) {'#10'      if (i > 0) {'#10'        retArr.push('', '');'#10
  +'      }'#10'      const subNode = arrNode.elements[i];'#10'      this.astGe'
  +'neric(subNode, retArr)'#10'    }'#10'    retArr.push('')'');'#10#10'    ret'
  +'urn retArr;'#10'  }'#10#10'  memberExpressionXYZ(x, y, z, retArr) {'#10'   '
  +' if (z) {'#10'      retArr.push(this.memberExpressionPropertyMarkup(z), '','
  +' '');'#10'    } else {'#10'      retArr.push(''0, '');'#10'    }'#10'    if'
  +' (y) {'#10'      retArr.push(this.memberExpressionPropertyMarkup(y), '', '''
  +');'#10'    } else {'#10'      retArr.push(''0, '');'#10'    }'#10'    retAr'
  +'r.push(this.memberExpressionPropertyMarkup(x));'#10'    return retArr;'#10
  +'  }'#10#10'  memberExpressionPropertyMarkup(property) {'#10'    if (!proper'
  +'ty) {'#10'      throw new Error(''Property not set'');'#10'    }'#10'    co'
  +'nst type = this.getType(property);'#10'    const result = [];'#10'    switc'
  +'h (type) {'#10'      case ''Number'':'#10'      case ''Float'':'#10'       '
  +' this.castValueToInteger(property, result);'#10'        break;'#10'      ca'
  +'se ''LiteralInteger'':'#10'        this.castLiteralToInteger(property, resu'
  +'lt);'#10'        break;'#10'      default:'#10'        this.astGeneric(prop'
  +'erty, result);'#10'    }'#10'    return result.join('''');'#10'  }'#10'}'#10
  +#10'const typeMap = {'#10'  ''Array'': ''sampler2D'','#10'  ''Array(2)'': '''
  +'vec2'','#10'  ''Array(3)'': ''vec3'','#10'  ''Array(4)'': ''vec4'','#10'  '
  +'''Array2D'': ''sampler2D'','#10'  ''Array3D'': ''sampler2D'','#10'  ''Boole'
  +'an'': ''bool'','#10'  ''Float'': ''float'','#10'  ''Input'': ''sampler2D'','
  +#10'  ''Integer'': ''int'','#10'  ''Number'': ''float'','#10'  ''LiteralInte'
  +'ger'': ''float'','#10'  ''NumberTexture'': ''sampler2D'','#10'  ''MemoryOpt'
  +'imizedNumberTexture'': ''sampler2D'','#10'  ''ArrayTexture(1)'': ''sampler2'
  +'D'','#10'  ''ArrayTexture(2)'': ''sampler2D'','#10'  ''ArrayTexture(3)'': '
  +'''sampler2D'','#10'  ''ArrayTexture(4)'': ''sampler2D'','#10'  ''HTMLVideo'
  +''': ''sampler2D'','#10'  ''HTMLCanvas'': ''sampler2D'','#10'  ''HTMLImage'''
  +': ''sampler2D'','#10'  ''HTMLImageArray'': ''sampler2DArray'','#10'};'#10#10
  +'const operatorMap = {'#10'  ''==='': ''=='','#10'  ''!=='': ''!='''#10'};'
  +#10#10'module.exports = {'#10'  WebGLFunctionNode'#10'};'#10'},{"../../utils'
  +'":114,"../function-node":10}],39:[function(require,module,exports){'#10'con'
  +'st { WebGLKernelValueBoolean } = require(''./kernel-value/boolean'');'#10'c'
  +'onst { WebGLKernelValueFloat } = require(''./kernel-value/float'');'#10'con'
  +'st { WebGLKernelValueInteger } = require(''./kernel-value/integer'');'#10#10
  +'const { WebGLKernelValueHTMLImage } = require(''./kernel-value/html-image'''
  +');'#10'const { WebGLKernelValueDynamicHTMLImage } = require(''./kernel-valu'
  +'e/dynamic-html-image'');'#10#10'const { WebGLKernelValueHTMLVideo } = requi'
  +'re(''./kernel-value/html-video'');'#10'const { WebGLKernelValueDynamicHTMLV'
  +'ideo } = require(''./kernel-value/dynamic-html-video'');'#10#10'const { Web'
  +'GLKernelValueSingleInput } = require(''./kernel-value/single-input'');'#10
  +'const { WebGLKernelValueDynamicSingleInput } = require(''./kernel-value/dyn'
  ,'amic-single-input'');'#10#10'const { WebGLKernelValueUnsignedInput } = requ'
  +'ire(''./kernel-value/unsigned-input'');'#10'const { WebGLKernelValueDynamic'
  +'UnsignedInput } = require(''./kernel-value/dynamic-unsigned-input'');'#10#10
  +'const { WebGLKernelValueMemoryOptimizedNumberTexture } = require(''./kernel'
  +'-value/memory-optimized-number-texture'');'#10'const { WebGLKernelValueDyna'
  +'micMemoryOptimizedNumberTexture } = require(''./kernel-value/dynamic-memory'
  +'-optimized-number-texture'');'#10#10'const { WebGLKernelValueNumberTexture '
  +'} = require(''./kernel-value/number-texture'');'#10'const { WebGLKernelValu'
  +'eDynamicNumberTexture } = require(''./kernel-value/dynamic-number-texture'''
  +');'#10#10'const { WebGLKernelValueSingleArray } = require(''./kernel-value/'
  +'single-array'');'#10'const { WebGLKernelValueDynamicSingleArray } = require'
  +'(''./kernel-value/dynamic-single-array'');'#10#10'const { WebGLKernelValueS'
  +'ingleArray1DI } = require(''./kernel-value/single-array1d-i'');'#10'const {'
  +' WebGLKernelValueDynamicSingleArray1DI } = require(''./kernel-value/dynamic'
  +'-single-array1d-i'');'#10#10'const { WebGLKernelValueSingleArray2DI } = req'
  +'uire(''./kernel-value/single-array2d-i'');'#10'const { WebGLKernelValueDyna'
  +'micSingleArray2DI } = require(''./kernel-value/dynamic-single-array2d-i'');'
  +#10#10'const { WebGLKernelValueSingleArray3DI } = require(''./kernel-value/s'
  +'ingle-array3d-i'');'#10'const { WebGLKernelValueDynamicSingleArray3DI } = r'
  +'equire(''./kernel-value/dynamic-single-array3d-i'');'#10#10'const { WebGLKe'
  +'rnelValueSingleArray2 } = require(''./kernel-value/single-array2'');'#10'co'
  +'nst { WebGLKernelValueSingleArray3 } = require(''./kernel-value/single-arra'
  +'y3'');'#10'const { WebGLKernelValueSingleArray4 } = require(''./kernel-valu'
  +'e/single-array4'');'#10#10'const { WebGLKernelValueUnsignedArray } = requir'
  +'e(''./kernel-value/unsigned-array'');'#10'const { WebGLKernelValueDynamicUn'
  +'signedArray } = require(''./kernel-value/dynamic-unsigned-array'');'#10#10
  +'const kernelValueMaps = {'#10'  unsigned: {'#10'    dynamic: {'#10'      '''
  +'Boolean'': WebGLKernelValueBoolean,'#10'      ''Integer'': WebGLKernelValue'
  +'Integer,'#10'      ''Float'': WebGLKernelValueFloat,'#10'      ''Array'': W'
  +'ebGLKernelValueDynamicUnsignedArray,'#10'      ''Array(2)'': false,'#10'   '
  +'   ''Array(3)'': false,'#10'      ''Array(4)'': false,'#10'      ''Array1D('
  +'2)'': false,'#10'      ''Array1D(3)'': false,'#10'      ''Array1D(4)'': fal'
  +'se,'#10'      ''Array2D(2)'': false,'#10'      ''Array2D(3)'': false,'#10' '
  +'     ''Array2D(4)'': false,'#10'      ''Array3D(2)'': false,'#10'      ''Ar'
  +'ray3D(3)'': false,'#10'      ''Array3D(4)'': false,'#10'      ''Input'': We'
  +'bGLKernelValueDynamicUnsignedInput,'#10'      ''NumberTexture'': WebGLKerne'
  +'lValueDynamicNumberTexture,'#10'      ''ArrayTexture(1)'': WebGLKernelValue'
  +'DynamicNumberTexture,'#10'      ''ArrayTexture(2)'': WebGLKernelValueDynami'
  +'cNumberTexture,'#10'      ''ArrayTexture(3)'': WebGLKernelValueDynamicNumbe'
  +'rTexture,'#10'      ''ArrayTexture(4)'': WebGLKernelValueDynamicNumberTextu'
  +'re,'#10'      ''MemoryOptimizedNumberTexture'': WebGLKernelValueDynamicMemo'
  +'ryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': WebGLKernelValueDynamic'
  +'HTMLImage,'#10'      ''HTMLImage'': WebGLKernelValueDynamicHTMLImage,'#10' '
  +'     ''HTMLImageArray'': false,'#10'      ''HTMLVideo'': WebGLKernelValueDy'
  +'namicHTMLVideo,'#10'    },'#10'    static: {'#10'      ''Boolean'': WebGLKe'
  +'rnelValueBoolean,'#10'      ''Float'': WebGLKernelValueFloat,'#10'      ''I'
  +'nteger'': WebGLKernelValueInteger,'#10'      ''Array'': WebGLKernelValueUns'
  +'ignedArray,'#10'      ''Array(2)'': false,'#10'      ''Array(3)'': false,'
  +#10'      ''Array(4)'': false,'#10'      ''Array1D(2)'': false,'#10'      '''
  +'Array1D(3)'': false,'#10'      ''Array1D(4)'': false,'#10'      ''Array2D(2'
  +')'': false,'#10'      ''Array2D(3)'': false,'#10'      ''Array2D(4)'': fals'
  +'e,'#10'      ''Array3D(2)'': false,'#10'      ''Array3D(3)'': false,'#10'  '
  +'    ''Array3D(4)'': false,'#10'      ''Input'': WebGLKernelValueUnsignedInp'
  +'ut,'#10'      ''NumberTexture'': WebGLKernelValueNumberTexture,'#10'      '
  +'''ArrayTexture(1)'': WebGLKernelValueNumberTexture,'#10'      ''ArrayTextur'
  +'e(2)'': WebGLKernelValueNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL'
  +'KernelValueNumberTexture,'#10'      ''ArrayTexture(4)'': WebGLKernelValueNu'
  +'mberTexture,'#10'      ''MemoryOptimizedNumberTexture'': WebGLKernelValueMe'
  +'moryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': WebGLKernelValueHTMLI'
  +'mage,'#10'      ''HTMLImage'': WebGLKernelValueHTMLImage,'#10'      ''HTMLI'
  +'mageArray'': false,'#10'      ''HTMLVideo'': WebGLKernelValueHTMLVideo,'#10
  +'    }'#10'  },'#10'  single: {'#10'    dynamic: {'#10'      ''Boolean'': We'
  +'bGLKernelValueBoolean,'#10'      ''Integer'': WebGLKernelValueInteger,'#10
  +'      ''Float'': WebGLKernelValueFloat,'#10'      ''Array'': WebGLKernelVal'
  ,'ueDynamicSingleArray,'#10'      ''Array(2)'': WebGLKernelValueSingleArray2,'
  +#10'      ''Array(3)'': WebGLKernelValueSingleArray3,'#10'      ''Array(4)'''
  +': WebGLKernelValueSingleArray4,'#10'      ''Array1D(2)'': WebGLKernelValueD'
  +'ynamicSingleArray1DI,'#10'      ''Array1D(3)'': WebGLKernelValueDynamicSing'
  +'leArray1DI,'#10'      ''Array1D(4)'': WebGLKernelValueDynamicSingleArray1DI'
  +','#10'      ''Array2D(2)'': WebGLKernelValueDynamicSingleArray2DI,'#10'    '
  +'  ''Array2D(3)'': WebGLKernelValueDynamicSingleArray2DI,'#10'      ''Array2'
  +'D(4)'': WebGLKernelValueDynamicSingleArray2DI,'#10'      ''Array3D(2)'': We'
  +'bGLKernelValueDynamicSingleArray3DI,'#10'      ''Array3D(3)'': WebGLKernelV'
  +'alueDynamicSingleArray3DI,'#10'      ''Array3D(4)'': WebGLKernelValueDynami'
  +'cSingleArray3DI,'#10'      ''Input'': WebGLKernelValueDynamicSingleInput,'
  +#10'      ''NumberTexture'': WebGLKernelValueDynamicNumberTexture,'#10'     '
  +' ''ArrayTexture(1)'': WebGLKernelValueDynamicNumberTexture,'#10'      ''Arr'
  +'ayTexture(2)'': WebGLKernelValueDynamicNumberTexture,'#10'      ''ArrayText'
  +'ure(3)'': WebGLKernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(4)'
  +''': WebGLKernelValueDynamicNumberTexture,'#10'      ''MemoryOptimizedNumber'
  +'Texture'': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,'#10'      '
  +'''HTMLCanvas'': WebGLKernelValueDynamicHTMLImage,'#10'      ''HTMLImage'': '
  +'WebGLKernelValueDynamicHTMLImage,'#10'      ''HTMLImageArray'': false,'#10
  +'      ''HTMLVideo'': WebGLKernelValueDynamicHTMLVideo,'#10'    },'#10'    s'
  +'tatic: {'#10'      ''Boolean'': WebGLKernelValueBoolean,'#10'      ''Float'
  +''': WebGLKernelValueFloat,'#10'      ''Integer'': WebGLKernelValueInteger,'
  +#10'      ''Array'': WebGLKernelValueSingleArray,'#10'      ''Array(2)'': We'
  +'bGLKernelValueSingleArray2,'#10'      ''Array(3)'': WebGLKernelValueSingleA'
  +'rray3,'#10'      ''Array(4)'': WebGLKernelValueSingleArray4,'#10'      ''Ar'
  +'ray1D(2)'': WebGLKernelValueSingleArray1DI,'#10'      ''Array1D(3)'': WebGL'
  +'KernelValueSingleArray1DI,'#10'      ''Array1D(4)'': WebGLKernelValueSingle'
  +'Array1DI,'#10'      ''Array2D(2)'': WebGLKernelValueSingleArray2DI,'#10'   '
  +'   ''Array2D(3)'': WebGLKernelValueSingleArray2DI,'#10'      ''Array2D(4)'''
  +': WebGLKernelValueSingleArray2DI,'#10'      ''Array3D(2)'': WebGLKernelValu'
  +'eSingleArray3DI,'#10'      ''Array3D(3)'': WebGLKernelValueSingleArray3DI,'
  +#10'      ''Array3D(4)'': WebGLKernelValueSingleArray3DI,'#10'      ''Input'
  +''': WebGLKernelValueSingleInput,'#10'      ''NumberTexture'': WebGLKernelVa'
  +'lueNumberTexture,'#10'      ''ArrayTexture(1)'': WebGLKernelValueNumberText'
  +'ure,'#10'      ''ArrayTexture(2)'': WebGLKernelValueNumberTexture,'#10'    '
  +'  ''ArrayTexture(3)'': WebGLKernelValueNumberTexture,'#10'      ''ArrayText'
  +'ure(4)'': WebGLKernelValueNumberTexture,'#10'      ''MemoryOptimizedNumberT'
  +'exture'': WebGLKernelValueMemoryOptimizedNumberTexture,'#10'      ''HTMLCan'
  +'vas'': WebGLKernelValueHTMLImage,'#10'      ''HTMLImage'': WebGLKernelValue'
  +'HTMLImage,'#10'      ''HTMLImageArray'': false,'#10'      ''HTMLVideo'': We'
  +'bGLKernelValueHTMLVideo,'#10'    }'#10'  },'#10'};'#10#10'function lookupKe'
  +'rnelValueType(type, dynamic, precision, value) {'#10'  if (!type) {'#10'   '
  +' throw new Error(''type missing'');'#10'  }'#10'  if (!dynamic) {'#10'    t'
  +'hrow new Error(''dynamic missing'');'#10'  }'#10'  if (!precision) {'#10'  '
  +'  throw new Error(''precision missing'');'#10'  }'#10'  if (value.type) {'
  +#10'    type = value.type;'#10'  }'#10'  const types = kernelValueMaps[preci'
  +'sion][dynamic];'#10'  if (types[type] === false) {'#10'    return null;'#10
  +'  } else if (types[type] === undefined) {'#10'    throw new Error(`Could no'
  +'t find a KernelValue for ${ type }`);'#10'  }'#10'  return types[type];'#10
  +'}'#10#10'module.exports = {'#10'  lookupKernelValueType,'#10'  kernelValueM'
  +'aps,'#10'};'#10'},{"./kernel-value/boolean":41,"./kernel-value/dynamic-html'
  +'-image":42,"./kernel-value/dynamic-html-video":43,"./kernel-value/dynamic-m'
  +'emory-optimized-number-texture":44,"./kernel-value/dynamic-number-texture":'
  +'45,"./kernel-value/dynamic-single-array":46,"./kernel-value/dynamic-single-'
  +'array1d-i":47,"./kernel-value/dynamic-single-array2d-i":48,"./kernel-value/'
  +'dynamic-single-array3d-i":49,"./kernel-value/dynamic-single-input":50,"./ke'
  +'rnel-value/dynamic-unsigned-array":51,"./kernel-value/dynamic-unsigned-inpu'
  +'t":52,"./kernel-value/float":53,"./kernel-value/html-image":54,"./kernel-va'
  +'lue/html-video":55,"./kernel-value/integer":57,"./kernel-value/memory-optim'
  +'ized-number-texture":58,"./kernel-value/number-texture":59,"./kernel-value/'
  +'single-array":60,"./kernel-value/single-array1d-i":61,"./kernel-value/singl'
  +'e-array2":62,"./kernel-value/single-array2d-i":63,"./kernel-value/single-ar'
  +'ray3":64,"./kernel-value/single-array3d-i":65,"./kernel-value/single-array4'
  +'":66,"./kernel-value/single-input":67,"./kernel-value/unsigned-array":68,".'
  ,'/kernel-value/unsigned-input":69}],40:[function(require,module,exports){'#10
  +'const { WebGLKernelValue } = require(''./index'');'#10'const { Input } = re'
  +'quire(''../../../input'');'#10#10'class WebGLKernelArray extends WebGLKerne'
  +'lValue {'#10'  checkSize(width, height) {'#10'    if (!this.kernel.validate'
  +') return;'#10'    const { maxTextureSize } = this.kernel.constructor.featur'
  +'es;'#10'    if (width > maxTextureSize || height > maxTextureSize) {'#10'  '
  +'    if (width > height) {'#10'        throw new Error(`Argument texture wid'
  +'th of ${width} larger than maximum size of ${maxTextureSize} for your GPU`)'
  +';'#10'      } else if (width < height) {'#10'        throw new Error(`Argum'
  +'ent texture height of ${height} larger than maximum size of ${maxTextureSiz'
  +'e} for your GPU`);'#10'      } else {'#10'        throw new Error(`Argument'
  +' texture height and width of ${height} larger than maximum size of ${maxTex'
  +'tureSize} for your GPU`);'#10'      }'#10'    }'#10'  }'#10#10'  setup() {'
  +#10'    this.requestTexture();'#10'    this.setupTexture();'#10'    this.def'
  +'ineTexture();'#10'  }'#10#10'  requestTexture() {'#10'    this.texture = th'
  +'is.onRequestTexture();'#10'  }'#10#10'  defineTexture() {'#10'    const { c'
  +'ontext: gl } = this;'#10'    gl.activeTexture(this.contextHandle);'#10'    '
  +'gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.texParameteri(gl.TE'
  +'XTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#10'    gl.texParameteri(gl'
  +'.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#10'    gl.texParameteri'
  +'(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'    gl.texParameter'
  +'i(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'#10'  }'#10#10'  setup'
  +'Texture() {'#10'    this.contextHandle = this.onRequestContextHandle();'#10
  +'    this.index = this.onRequestIndex();'#10'    this.dimensionsId = this.id'
  +' + ''Dim'';'#10'    this.sizeId = this.id + ''Size'';'#10'  }'#10#10'  getB'
  +'itRatio(value) {'#10'    if (Array.isArray(value[0])) {'#10'      return th'
  +'is.getBitRatio(value[0]);'#10'    } else if (value.constructor === Input) {'
  +#10'      return this.getBitRatio(value.value);'#10'    }'#10'    switch (va'
  +'lue.constructor) {'#10'      case Uint8ClampedArray:'#10'      case Uint8Ar'
  +'ray:'#10'      case Int8Array:'#10'        return 1;'#10'      case Uint16A'
  +'rray:'#10'      case Int16Array:'#10'        return 2;'#10'      case Float'
  +'32Array:'#10'      case Int32Array:'#10'      default:'#10'        return 4'
  +';'#10'    }'#10'  }'#10#10'  destroy() {'#10'    if (this.prevArg) {'#10'  '
  +'    this.prevArg.delete();'#10'    }'#10'    this.context.deleteTexture(thi'
  +'s.texture);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelArray'
  +#10'};'#10'},{"../../../input":110,"./index":56}],41:[function(require,modul'
  +'e,exports){'#10'const { utils } = require(''../../../utils'');'#10'const { '
  +'WebGLKernelValue } = require(''./index'');'#10#10'class WebGLKernelValueBoo'
  +'lean extends WebGLKernelValue {'#10'  constructor(value, settings) {'#10'  '
  +'  super(value, settings);'#10'    this.uploadValue = value;'#10'  }'#10'  g'
  +'etSource(value) {'#10'    if (this.origin === ''constants'') {'#10'      re'
  +'turn `const bool ${this.id} = ${value};\n`;'#10'    }'#10'    return `unifo'
  +'rm bool ${this.id};\n`;'#10'  }'#10#10'  getStringValueHandler() {'#10'    '
  +'return `const uploadValue_${this.name} = ${this.varName};\n`;'#10'  }'#10#10
  +'  updateValue(value) {'#10'    if (this.origin === ''constants'') return;'
  +#10'    this.kernel.setUniform1i(this.id, this.uploadValue = value);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueBoolean'#10'};'#10'},{'
  +'"../../../utils":114,"./index":56}],42:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelVa'
  +'lueHTMLImage } = require(''./html-image'');'#10#10'class WebGLKernelValueDy'
  +'namicHTMLImage extends WebGLKernelValueHTMLImage {'#10'  getSource() {'#10
  +'    return utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'
  +#10'      `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.di'
  +'mensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    con'
  +'st { width, height } = value;'#10'    this.checkSize(width, height);'#10'  '
  +'  this.dimensions = [width, height, 1];'#10'    this.textureSize = [width, '
  +'height];'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimensio'
  +'ns);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10
  +'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10' '
  +' WebGLKernelValueDynamicHTMLImage'#10'};'#10'},{"../../../utils":114,"./htm'
  +'l-image":54}],43:[function(require,module,exports){'#10'const { WebGLKernel'
  +'ValueDynamicHTMLImage } = require(''./dynamic-html-image'');'#10#10'class W'
  +'ebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}'
  +#10#10'module.exports = {'#10'  WebGLKernelValueDynamicHTMLVideo'#10'};'#10
  ,'},{"./dynamic-html-image":42}],44:[function(require,module,exports){'#10'co'
  +'nst { utils } = require(''../../../utils'');'#10'const { WebGLKernelValueMe'
  +'moryOptimizedNumberTexture } = require(''./memory-optimized-number-texture'
  +''');'#10#10'class WebGLKernelValueDynamicMemoryOptimizedNumberTexture exten'
  +'ds WebGLKernelValueMemoryOptimizedNumberTexture {'#10'  getSource() {'#10' '
  +'   return utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'
  +#10'      `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.di'
  +'mensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(inputTexture) {'#10
  +'    this.dimensions = inputTexture.dimensions;'#10'    this.checkSize(input'
  +'Texture.size[0], inputTexture.size[1]);'#10'    this.textureSize = inputTex'
  +'ture.size;'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimens'
  +'ions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10
  +'    super.updateValue(inputTexture);'#10'  }'#10'}'#10#10'module.exports = '
  +'{'#10'  WebGLKernelValueDynamicMemoryOptimizedNumberTexture'#10'};'#10'},{"'
  +'../../../utils":114,"./memory-optimized-number-texture":58}],45:[function(r'
  +'equire,module,exports){'#10'const { utils } = require(''../../../utils'');'
  +#10'const { WebGLKernelValueNumberTexture } = require(''./number-texture'');'
  +#10#10'class WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNu'
  +'mberTexture {'#10'  getSource() {'#10'    return utils.linesToString(['#10
  +'      `uniform sampler2D ${this.id}`,'#10'      `uniform ivec2 ${this.sizeI'
  +'d}`,'#10'      `uniform ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10
  +#10'  updateValue(value) {'#10'    this.dimensions = value.dimensions;'#10' '
  +'   this.checkSize(value.size[0], value.size[1]);'#10'    this.textureSize ='
  +' value.size;'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dime'
  +'nsions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'
  +#10'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGLKernelValueDynamicNumberTexture'#10'};'#10'},{"../../../utils":114,"'
  +'./number-texture":59}],46:[function(require,module,exports){'#10'const { ut'
  +'ils } = require(''../../../utils'');'#10'const { WebGLKernelValueSingleArra'
  +'y } = require(''./single-array'');'#10#10'class WebGLKernelValueDynamicSing'
  +'leArray extends WebGLKernelValueSingleArray {'#10'  getSource() {'#10'    r'
  +'eturn utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10' '
  +'     `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.dimens'
  +'ionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.di'
  +'mensions = utils.getDimensions(value, true);'#10'    this.textureSize = uti'
  +'ls.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);'#10
  +'    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * th'
  +'is.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.textureSize[1'
  +']);'#10'    this.uploadValue = new Float32Array(this.uploadArrayLength);'#10
  +'    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);'#10'    '
  +'this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10'    super.upd'
  +'ateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelV'
  +'alueDynamicSingleArray'#10'};'#10'},{"../../../utils":114,"./single-array":'
  +'60}],47:[function(require,module,exports){'#10'const { utils } = require('''
  +'../../../utils'');'#10'const { WebGLKernelValueSingleArray1DI } = require('
  +'''./single-array1d-i'');'#10#10'class WebGLKernelValueDynamicSingleArray1DI'
  +' extends WebGLKernelValueSingleArray1DI {'#10'  getSource() {'#10'    retur'
  +'n utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'     '
  +' `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.dimensions'
  +'Id}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.setSha'
  +'pe(value);'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimens'
  +'ions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10
  +'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10' '
  +' WebGLKernelValueDynamicSingleArray1DI'#10'};'#10'},{"../../../utils":114,"'
  +'./single-array1d-i":61}],48:[function(require,module,exports){'#10'const { '
  +'utils } = require(''../../../utils'');'#10'const { WebGLKernelValueSingleAr'
  +'ray2DI } = require(''./single-array2d-i'');'#10#10'class WebGLKernelValueDy'
  +'namicSingleArray2DI extends WebGLKernelValueSingleArray2DI {'#10'  getSourc'
  +'e() {'#10'    return utils.linesToString(['#10'      `uniform sampler2D ${t'
  +'his.id}`,'#10'      `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec'
  +'3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'
  +#10'    this.setShape(value);'#10'    this.kernel.setUniform3iv(this.dimensi'
  +'onsId, this.dimensions);'#10'    this.kernel.setUniform2iv(this.sizeId, thi'
  +'s.textureSize);'#10'    super.updateValue(value);'#10'  }'#10'}'#10#10'modu'
  ,'le.exports = {'#10'  WebGLKernelValueDynamicSingleArray2DI'#10'};'#10'},{".'
  +'./../../utils":114,"./single-array2d-i":63}],49:[function(require,module,ex'
  +'ports){'#10'const { utils } = require(''../../../utils'');'#10'const { WebG'
  +'LKernelValueSingleArray3DI } = require(''./single-array3d-i'');'#10#10'clas'
  +'s WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray'
  +'3DI {'#10'  getSource() {'#10'    return utils.linesToString(['#10'      `u'
  +'niform sampler2D ${this.id}`,'#10'      `uniform ivec2 ${this.sizeId}`,'#10
  +'      `uniform ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  up'
  +'dateValue(value) {'#10'    this.setShape(value);'#10'    this.kernel.setUni'
  +'form3iv(this.dimensionsId, this.dimensions);'#10'    this.kernel.setUniform'
  +'2iv(this.sizeId, this.textureSize);'#10'    super.updateValue(value);'#10' '
  +' }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueDynamicSingleArray'
  +'3DI'#10'};'#10'},{"../../../utils":114,"./single-array3d-i":65}],50:[functi'
  +'on(require,module,exports){'#10'const { utils } = require(''../../../utils'
  +''');'#10'const { WebGLKernelValueSingleInput } = require(''./single-input'''
  +');'#10#10'class WebGLKernelValueDynamicSingleInput extends WebGLKernelValue'
  +'SingleInput {'#10'  getSource() {'#10'    return utils.linesToString(['#10
  +'      `uniform sampler2D ${this.id}`,'#10'      `uniform ivec2 ${this.sizeI'
  +'d}`,'#10'      `uniform ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10
  +#10'  updateValue(value) {'#10'    let [w, h, d] = value.size;'#10'    this.'
  +'dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10'    this.texture'
  +'Size = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRa'
  +'tio);'#10'    this.uploadArrayLength = this.textureSize[0] * this.textureSi'
  +'ze[1] * this.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.tex'
  +'tureSize[1]);'#10'    this.uploadValue = new Float32Array(this.uploadArrayL'
  +'ength);'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimension'
  +'s);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10' '
  +'   super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10'  '
  +'WebGLKernelValueDynamicSingleInput'#10'};'#10'},{"../../../utils":114,"./si'
  +'ngle-input":67}],51:[function(require,module,exports){'#10'const { utils } '
  +'= require(''../../../utils'');'#10'const { WebGLKernelValueUnsignedArray } '
  +'= require(''./unsigned-array'');'#10#10'class WebGLKernelValueDynamicUnsign'
  +'edArray extends WebGLKernelValueUnsignedArray {'#10'  getSource() {'#10'   '
  +' return utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10
  +'      `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.dimen'
  +'sionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.d'
  +'imensions = utils.getDimensions(value, true);'#10'    this.textureSize = ut'
  +'ils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);'#10
  +'    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4'
  +' / this.bitRatio);'#10'    this.checkSize(this.textureSize[0], this.texture'
  +'Size[1]);'#10'    const Type = this.getTransferArrayType(value);'#10'    th'
  +'is.preUploadValue = new Type(this.uploadArrayLength);'#10'    this.uploadVa'
  +'lue = new Uint8Array(this.preUploadValue.buffer);'#10'    this.kernel.setUn'
  +'iform3iv(this.dimensionsId, this.dimensions);'#10'    this.kernel.setUnifor'
  +'m2iv(this.sizeId, this.textureSize);'#10'    super.updateValue(value);'#10
  +'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueDynamicUnsignedAr'
  +'ray'#10'};'#10'},{"../../../utils":114,"./unsigned-array":68}],52:[function'
  +'(require,module,exports){'#10'const { utils } = require(''../../../utils'')'
  +';'#10'const { WebGLKernelValueUnsignedInput } = require(''./unsigned-input'
  +''');'#10#10'class WebGLKernelValueDynamicUnsignedInput extends WebGLKernelV'
  +'alueUnsignedInput {'#10'  getSource() {'#10'    return utils.linesToString('
  +'['#10'      `uniform sampler2D ${this.id}`,'#10'      `uniform ivec2 ${this'
  +'.sizeId}`,'#10'      `uniform ivec3 ${this.dimensionsId}`,'#10'    ]);'#10
  +'  }'#10#10'  updateValue(value) {'#10'    let [w, h, d] = value.size;'#10' '
  +'   this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10'    this'
  +'.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, t'
  +'his.bitRatio);'#10'    this.uploadArrayLength = this.textureSize[0] * this.'
  +'textureSize[1] * (4 / this.bitRatio);'#10'    this.checkSize(this.textureSi'
  +'ze[0], this.textureSize[1]);'#10'    const Type = this.getTransferArrayType'
  +'(value.value);'#10'    this.preUploadValue = new Type(this.uploadArrayLengt'
  +'h);'#10'    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);'
  +#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);'#10' '
  +'   this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10'    super.'
  +'updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKern'
  ,'elValueDynamicUnsignedInput'#10'};'#10'},{"../../../utils":114,"./unsigned-'
  +'input":69}],53:[function(require,module,exports){'#10'const { utils } = req'
  +'uire(''../../../utils'');'#10'const { WebGLKernelValue } = require(''./inde'
  +'x'');'#10#10'class WebGLKernelValueFloat extends WebGLKernelValue {'#10'  c'
  +'onstructor(value, settings) {'#10'    super(value, settings);'#10'    this.'
  +'uploadValue = value;'#10'  }'#10'  getStringValueHandler() {'#10'    return'
  +' `const uploadValue_${this.name} = ${this.varName};\n`;'#10'  }'#10'  getSo'
  +'urce(value) {'#10'    if (this.origin === ''constants'') {'#10'      if (Nu'
  +'mber.isInteger(value)) {'#10'        return `const float ${this.id} = ${val'
  +'ue}.0;\n`;'#10'      }'#10'      return `const float ${this.id} = ${value};'
  +'\n`;'#10'    }'#10'    return `uniform float ${this.id};\n`;'#10'  }'#10#10
  +'  updateValue(value) {'#10'    if (this.origin === ''constants'') return;'
  +#10'    this.kernel.setUniform1f(this.id, this.uploadValue = value);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueFloat'#10'};'#10'},{".'
  +'./../../utils":114,"./index":56}],54:[function(require,module,exports){'#10
  +'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelArray'
  +' } = require(''./array'');'#10#10'class WebGLKernelValueHTMLImage extends W'
  +'ebGLKernelArray {'#10'  constructor(value, settings) {'#10'    super(value,'
  +' settings);'#10'    const { width, height } = value;'#10'    this.checkSize'
  +'(width, height);'#10'    this.dimensions = [width, height, 1];'#10'    this'
  +'.textureSize = [width, height];'#10'    this.uploadValue = value;'#10'  }'
  +#10#10'  getStringValueHandler() {'#10'    return `const uploadValue_${this.'
  +'name} = ${this.varName};\n`;'#10'  }'#10#10'  getSource() {'#10'    return '
  +'utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'      `'
  +'ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]}'
  +')`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${'
  +'this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10'  '
  +'updateValue(inputImage) {'#10'    if (inputImage.constructor !== this.initi'
  +'alValueConstructor) {'#10'      this.onUpdateValueMismatch(inputImage.const'
  +'ructor);'#10'      return;'#10'    }'#10'    const { context: gl } = this;'
  +#10'    gl.activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXT'
  +'URE_2D, this.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)'
  +';'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYT'
  +'E, this.uploadValue = inputImage);'#10'    this.kernel.setUniform1i(this.id'
  +', this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelVal'
  +'ueHTMLImage'#10'};'#10'},{"../../../utils":114,"./array":40}],55:[function('
  +'require,module,exports){'#10'const { WebGLKernelValueHTMLImage } = require('
  +'''./html-image'');'#10#10'class WebGLKernelValueHTMLVideo extends WebGLKern'
  +'elValueHTMLImage {}'#10#10'module.exports = {'#10'  WebGLKernelValueHTMLVid'
  +'eo'#10'};'#10'},{"./html-image":54}],56:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { KernelValue }'
  +' = require(''../../kernel-value'');'#10#10'class WebGLKernelValue extends K'
  +'ernelValue {'#10'  constructor(value, settings) {'#10'    super(value, sett'
  +'ings);'#10'    this.dimensionsId = null;'#10'    this.sizeId = null;'#10'  '
  +'  this.initialValueConstructor = value.constructor;'#10'    this.onRequestT'
  +'exture = settings.onRequestTexture;'#10'    this.onRequestIndex = settings.'
  +'onRequestIndex;'#10'    this.uploadValue = null;'#10'    this.textureSize ='
  +' null;'#10'    this.bitRatio = null;'#10'    this.prevArg = null;'#10'  }'
  +#10#10'  get id() {'#10'    return `${this.origin}_${utils.sanitizeName(this'
  +'.name)}`;'#10'  }'#10#10'  setup() {}'#10#10'  getTransferArrayType(value) '
  +'{'#10'    if (Array.isArray(value[0])) {'#10'      return this.getTransferA'
  +'rrayType(value[0]);'#10'    }'#10'    switch (value.constructor) {'#10'    '
  +'  case Array:'#10'      case Int32Array:'#10'      case Int16Array:'#10'   '
  +'   case Int8Array:'#10'        return Float32Array;'#10'      case Uint8Cla'
  +'mpedArray:'#10'      case Uint8Array:'#10'      case Uint16Array:'#10'     '
  +' case Uint32Array:'#10'      case Float32Array:'#10'      case Float64Array'
  +':'#10'        return value.constructor;'#10'    }'#10'    console.warn(''Un'
  +'familiar constructor type.  Will go ahead and use, but likley this may resu'
  +'lt in a transfer of zeros'');'#10'    return value.constructor;'#10'  }'#10
  +#10'  getStringValueHandler() {'#10'    throw new Error(`"getStringValueHand'
  +'ler" not implemented on ${this.constructor.name}`);'#10'  }'#10#10'  getVar'
  +'iablePrecisionString() {'#10'    return this.kernel.getVariablePrecisionStr'
  +'ing(this.textureSize || undefined, this.tactic || undefined);'#10'  }'#10#10
  +'  destroy() {}'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValue'#10'}'
  ,';'#10'},{"../../../utils":114,"../../kernel-value":35}],57:[function(requir'
  +'e,module,exports){'#10'const { utils } = require(''../../../utils'');'#10'c'
  +'onst { WebGLKernelValue } = require(''./index'');'#10#10'class WebGLKernelV'
  +'alueInteger extends WebGLKernelValue {'#10'  constructor(value, settings) {'
  +#10'    super(value, settings);'#10'    this.uploadValue = value;'#10'  }'#10
  +'  getStringValueHandler() {'#10'    return `const uploadValue_${this.name} '
  +'= ${this.varName};\n`;'#10'  }'#10'  getSource(value) {'#10'    if (this.or'
  +'igin === ''constants'') {'#10'      return `const int ${this.id} = ${ parse'
  +'Int(value) };\n`;'#10'    }'#10'    return `uniform int ${this.id};\n`;'#10
  +'  }'#10#10'  updateValue(value) {'#10'    if (this.origin === ''constants'''
  +') return;'#10'    this.kernel.setUniform1i(this.id, this.uploadValue = valu'
  +'e);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueInteger'
  +#10'};'#10'},{"../../../utils":114,"./index":56}],58:[function(require,modul'
  +'e,exports){'#10'const { utils } = require(''../../../utils'');'#10'const { '
  +'WebGLKernelArray } = require(''./array'');'#10#10'const sameError = `Source'
  +' and destination textures are the same.  Use immutable = true and manually '
  +'cleanup kernel output texture memory with texture.delete()`;'#10#10'class W'
  +'ebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {'#10
  +'  constructor(value, settings) {'#10'    super(value, settings);'#10'    co'
  +'nst [width, height] = value.size;'#10'    this.checkSize(width, height);'#10
  +'    this.dimensions = value.dimensions;'#10'    this.textureSize = value.si'
  +'ze;'#10'    this.uploadValue = value.texture;'#10'    this.forceUploadEachR'
  +'un = true;'#10'  }'#10#10'  setup() {'#10'    this.setupTexture();'#10'  }'
  +#10#10'  getStringValueHandler() {'#10'    return `const uploadValue_${this.'
  +'name} = ${this.varName}.texture;\n`;'#10'  }'#10#10'  getSource() {'#10'   '
  +' return utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10
  +'      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureS'
  +'ize[1]})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions['
  +'0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10
  +#10'  updateValue(inputTexture) {'#10'    if (inputTexture.constructor !== t'
  +'his.initialValueConstructor) {'#10'      this.onUpdateValueMismatch(inputTe'
  +'xture.constructor);'#10'      return;'#10'    }'#10'    if (this.checkConte'
  +'xt && inputTexture.context !== this.context) {'#10'      throw new Error(`V'
  +'alue ${this.name} (${this.type}) must be from same context`);'#10'    }'#10
  +#10'    const { kernel, context: gl } = this;'#10'    if (kernel.pipeline) {'
  +#10'      if (kernel.immutable) {'#10'        kernel.updateTextureArgumentRe'
  +'fs(this, inputTexture);'#10'      } else {'#10'        if (kernel.texture.t'
  +'exture === inputTexture.texture) {'#10'          throw new Error(sameError)'
  +';'#10'        } else if (kernel.mappedTextures) {'#10'          const { map'
  +'pedTextures } = kernel;'#10'          for (let i = 0; i < mappedTextures.le'
  +'ngth; i++) {'#10'            if (mappedTextures[i].texture === inputTexture'
  +'.texture) {'#10'              throw new Error(sameError);'#10'            }'
  +#10'          }'#10'        }'#10'      }'#10'    }'#10#10'    gl.activeText'
  +'ure(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.uploadV'
  +'alue = inputTexture.texture);'#10'    this.kernel.setUniform1i(this.id, thi'
  +'s.index);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueMem'
  +'oryOptimizedNumberTexture,'#10'  sameError'#10'};'#10'},{"../../../utils":1'
  +'14,"./array":40}],59:[function(require,module,exports){'#10'const { utils }'
  +' = require(''../../../utils'');'#10'const { WebGLKernelArray } = require('''
  +'./array'');'#10'const { sameError } = require(''./memory-optimized-number-t'
  +'exture'');'#10#10'class WebGLKernelValueNumberTexture extends WebGLKernelAr'
  +'ray {'#10'  constructor(value, settings) {'#10'    super(value, settings);'
  +#10'    const [width, height] = value.size;'#10'    this.checkSize(width, he'
  +'ight);'#10'    const { size: textureSize, dimensions } = value;'#10'    thi'
  +'s.bitRatio = this.getBitRatio(value);'#10'    this.dimensions = dimensions;'
  +#10'    this.textureSize = textureSize;'#10'    this.uploadValue = value.tex'
  +'ture;'#10'    this.forceUploadEachRun = true;'#10'  }'#10#10'  setup() {'#10
  +'    this.setupTexture();'#10'  }'#10#10'  getStringValueHandler() {'#10'   '
  +' return `const uploadValue_${this.name} = ${this.varName}.texture;\n`;'#10
  +'  }'#10#10'  getSource() {'#10'    return utils.linesToString(['#10'      `'
  +'uniform sampler2D ${this.id}`,'#10'      `ivec2 ${this.sizeId} = ivec2(${th'
  +'is.textureSize[0]}, ${this.textureSize[1]})`,'#10'      `ivec3 ${this.dimen'
  +'sionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimen'
  +'sions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateValue(inputTexture) {'#10' '
  ,'   if (inputTexture.constructor !== this.initialValueConstructor) {'#10'   '
  +'   this.onUpdateValueMismatch(inputTexture.constructor);'#10'      return;'
  +#10'    }'#10'    if (this.checkContext && inputTexture.context !== this.con'
  +'text) {'#10'      throw new Error(`Value ${this.name} (${this.type}) must b'
  +'e from same context`);'#10'    }'#10#10'    const { kernel, context: gl } ='
  +' this;'#10'    if (kernel.pipeline) {'#10'      if (kernel.immutable) {'#10
  +'        kernel.updateTextureArgumentRefs(this, inputTexture);'#10'      } e'
  +'lse {'#10'        if (kernel.texture.texture === inputTexture.texture) {'#10
  +'          throw new Error(sameError);'#10'        } else if (kernel.mappedT'
  +'extures) {'#10'          const { mappedTextures } = kernel;'#10'          f'
  +'or (let i = 0; i < mappedTextures.length; i++) {'#10'            if (mapped'
  +'Textures[i].texture === inputTexture.texture) {'#10'              throw new'
  +' Error(sameError);'#10'            }'#10'          }'#10'        }'#10'    '
  +'  }'#10'    }'#10#10'    gl.activeTexture(this.contextHandle);'#10'    gl.b'
  +'indTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);'#10'   '
  +' this.kernel.setUniform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module'
  +'.exports = {'#10'  WebGLKernelValueNumberTexture'#10'};'#10'},{"../../../ut'
  +'ils":114,"./array":40,"./memory-optimized-number-texture":58}],60:[function'
  +'(require,module,exports){'#10'const { utils } = require(''../../../utils'')'
  +';'#10'const { WebGLKernelArray } = require(''./array'');'#10#10'class WebGL'
  +'KernelValueSingleArray extends WebGLKernelArray {'#10'  constructor(value, '
  +'settings) {'#10'    super(value, settings);'#10'    this.bitRatio = 4;'#10
  +'    this.dimensions = utils.getDimensions(value, true);'#10'    this.textur'
  +'eSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitR'
  +'atio);'#10'    this.uploadArrayLength = this.textureSize[0] * this.textureS'
  +'ize[1] * this.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.te'
  +'xtureSize[1]);'#10'    this.uploadValue = new Float32Array(this.uploadArray'
  +'Length);'#10'  }'#10#10'  getStringValueHandler() {'#10'    return utils.li'
  +'nesToString(['#10'      `const uploadValue_${this.name} = new Float32Array('
  +'${this.uploadArrayLength})`,'#10'      `flattenTo(${this.varName}, uploadVa'
  +'lue_${this.name})`,'#10'    ]);'#10'  }'#10#10'  getSource() {'#10'    retu'
  +'rn utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'    '
  +'  `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize['
  +'1]})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]},'
  +' ${this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10
  +'  updateValue(value) {'#10'    if (value.constructor !== this.initialValueC'
  +'onstructor) {'#10'      this.onUpdateValueMismatch(value.constructor);'#10
  +'      return;'#10'    }'#10'    const { context: gl } = this;'#10'    utils'
  +'.flattenTo(value, this.uploadValue);'#10'    gl.activeTexture(this.contextH'
  +'andle);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pix'
  +'elStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2'
  +'D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLO'
  +'AT, this.uploadValue);'#10'    this.kernel.setUniform1i(this.id, this.index'
  +');'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArra'
  +'y'#10'};'#10'},{"../../../utils":114,"./array":40}],61:[function(require,mo'
  +'dule,exports){'#10'const { utils } = require(''../../../utils'');'#10'const'
  +' { WebGLKernelArray } = require(''./array'');'#10#10'class WebGLKernelValue'
  +'SingleArray1DI extends WebGLKernelArray {'#10'  constructor(value, settings'
  +') {'#10'    super(value, settings);'#10'    this.bitRatio = 4;'#10'    this'
  +'.setShape(value);'#10'  }'#10#10'  setShape(value) {'#10'    const valueDim'
  +'ensions = utils.getDimensions(value, true);'#10'    this.textureSize = util'
  +'s.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);'#10' '
  +'   this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);'#10'    th'
  +'is.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bit'
  +'Ratio;'#10'    this.checkSize(this.textureSize[0], this.textureSize[1]);'#10
  +'    this.uploadValue = new Float32Array(this.uploadArrayLength);'#10'  }'#10
  +#10'  getStringValueHandler() {'#10'    return utils.linesToString(['#10'   '
  +'   `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLen'
  +'gth})`,'#10'      `flattenTo(${this.varName}, uploadValue_${this.name})`,'
  +#10'    ]);'#10'  }'#10#10'  getSource() {'#10'    return utils.linesToStrin'
  +'g(['#10'      `uniform sampler2D ${this.id}`,'#10'      `ivec2 ${this.sizeI'
  +'d} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,'#10'      `ive'
  +'c3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]'
  +'}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateValue(value)'
  ,' {'#10'    if (value.constructor !== this.initialValueConstructor) {'#10'  '
  +'    this.onUpdateValueMismatch(value.constructor);'#10'      return;'#10'  '
  +'  }'#10'    const { context: gl } = this;'#10'    utils.flatten2dArrayTo(va'
  +'lue, this.uploadValue);'#10'    gl.activeTexture(this.contextHandle);'#10' '
  +'   gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei(gl.U'
  +'NPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA'
  +', this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uplo'
  +'adValue);'#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  }'#10
  +'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArray1DI'#10'};'#10
  +'},{"../../../utils":114,"./array":40}],62:[function(require,module,exports)'
  +'{'#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKerne'
  +'lValue } = require(''./index'');'#10#10'class WebGLKernelValueSingleArray2 '
  +'extends WebGLKernelValue {'#10'  constructor(value, settings) {'#10'    sup'
  +'er(value, settings);'#10'    this.uploadValue = value;'#10'  }'#10'  getSou'
  +'rce(value) {'#10'    if (this.origin === ''constants'') {'#10'      return '
  +'`const vec2 ${this.id} = vec2(${value[0]},${value[1]});\n`;'#10'    }'#10' '
  +'   return `uniform vec2 ${this.id};\n`;'#10'  }'#10#10'  getStringValueHand'
  +'ler() {'#10'    if (this.origin === ''constants'') return '''';'#10'    ret'
  +'urn `const uploadValue_${this.name} = ${this.varName};\n`;'#10'  }'#10#10' '
  +' updateValue(value) {'#10'    if (this.origin === ''constants'') return;'#10
  +'    this.kernel.setUniform2fv(this.id, this.uploadValue = value);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArray2'#10'};'#10
  +'},{"../../../utils":114,"./index":56}],63:[function(require,module,exports)'
  +'{'#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKerne'
  +'lArray } = require(''./array'');'#10#10'class WebGLKernelValueSingleArray2D'
  +'I extends WebGLKernelArray {'#10'  constructor(value, settings) {'#10'    s'
  +'uper(value, settings);'#10'    this.bitRatio = 4;'#10'    this.setShape(val'
  +'ue);'#10'  }'#10#10'  setShape(value) {'#10'    const valueDimensions = uti'
  +'ls.getDimensions(value, true);'#10'    this.textureSize = utils.getMemoryOp'
  +'timizedFloatTextureSize(valueDimensions, this.bitRatio);'#10'    this.dimen'
  +'sions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);'#10'  '
  +'  this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this'
  +'.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.textureSize[1])'
  +';'#10'    this.uploadValue = new Float32Array(this.uploadArrayLength);'#10
  +'  }'#10#10'  getStringValueHandler() {'#10'    return utils.linesToString(['
  +#10'      `const uploadValue_${this.name} = new Float32Array(${this.uploadAr'
  +'rayLength})`,'#10'      `flattenTo(${this.varName}, uploadValue_${this.name'
  +'})`,'#10'    ]);'#10'  }'#10#10'  getSource() {'#10'    return utils.linesT'
  +'oString(['#10'      `uniform sampler2D ${this.id}`,'#10'      `ivec2 ${this'
  +'.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,'#10'    '
  +'  `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensi'
  +'ons[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateValue('
  +'value) {'#10'    if (value.constructor !== this.initialValueConstructor) {'
  +#10'      this.onUpdateValueMismatch(value.constructor);'#10'      return;'
  +#10'    }'#10'    const { context: gl } = this;'#10'    utils.flatten3dArray'
  +'To(value, this.uploadValue);'#10'    gl.activeTexture(this.contextHandle);'
  +#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei('
  +'gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.'
  +'RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.'
  +'uploadValue);'#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  '
  +'}'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArray2DI'#10
  +'};'#10'},{"../../../utils":114,"./array":40}],64:[function(require,module,e'
  +'xports){'#10'const { utils } = require(''../../../utils'');'#10'const { Web'
  +'GLKernelValue } = require(''./index'');'#10#10'class WebGLKernelValueSingle'
  +'Array3 extends WebGLKernelValue {'#10'  constructor(value, settings) {'#10
  +'    super(value, settings);'#10'    this.uploadValue = value;'#10'  }'#10' '
  +' getSource(value) {'#10'    if (this.origin === ''constants'') {'#10'      '
  +'return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\'
  +'n`;'#10'    }'#10'    return `uniform vec3 ${this.id};\n`;'#10'  }'#10#10' '
  +' getStringValueHandler() {'#10'    if (this.origin === ''constants'') retur'
  +'n '''';'#10'    return `const uploadValue_${this.name} = ${this.varName};\n'
  +'`;'#10'  }'#10#10'  updateValue(value) {'#10'    if (this.origin === ''cons'
  +'tants'') return;'#10'    this.kernel.setUniform3fv(this.id, this.uploadValu'
  +'e = value);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueS'
  ,'ingleArray3'#10'};'#10'},{"../../../utils":114,"./index":56}],65:[function('
  +'require,module,exports){'#10'const { utils } = require(''../../../utils'');'
  +#10'const { WebGLKernelArray } = require(''./array'');'#10#10'class WebGLKer'
  +'nelValueSingleArray3DI extends WebGLKernelArray {'#10'  constructor(value, '
  +'settings) {'#10'    super(value, settings);'#10'    this.bitRatio = 4;'#10
  +'    this.setShape(value);'#10'  }'#10#10'  setShape(value) {'#10'    const '
  +'valueDimensions = utils.getDimensions(value, true);'#10'    this.textureSiz'
  +'e = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio'
  +');'#10'    this.dimensions = new Int32Array([valueDimensions[1], valueDimen'
  +'sions[2], valueDimensions[3]]);'#10'    this.uploadArrayLength = this.textu'
  +'reSize[0] * this.textureSize[1] * this.bitRatio;'#10'    this.checkSize(thi'
  +'s.textureSize[0], this.textureSize[1]);'#10'    this.uploadValue = new Floa'
  +'t32Array(this.uploadArrayLength);'#10'  }'#10#10'  getStringValueHandler() '
  +'{'#10'    return utils.linesToString(['#10'      `const uploadValue_${this.'
  +'name} = new Float32Array(${this.uploadArrayLength})`,'#10'      `flattenTo('
  +'${this.varName}, uploadValue_${this.name})`,'#10'    ]);'#10'  }'#10#10'  g'
  +'etSource() {'#10'    return utils.linesToString(['#10'      `uniform sample'
  +'r2D ${this.id}`,'#10'      `ivec2 ${this.sizeId} = ivec2(${this.textureSize'
  +'[0]}, ${this.textureSize[1]})`,'#10'      `ivec3 ${this.dimensionsId} = ive'
  +'c3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,'
  +#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    if (value.construc'
  +'tor !== this.initialValueConstructor) {'#10'      this.onUpdateValueMismatc'
  +'h(value.constructor);'#10'      return;'#10'    }'#10'    const { context: '
  +'gl } = this;'#10'    utils.flatten4dArrayTo(value, this.uploadValue);'#10' '
  +'   gl.activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_'
  +'2D, this.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'
  +#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.t'
  +'extureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);'#10'    this.kernel'
  +'.setUniform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'
  +#10'  WebGLKernelValueSingleArray3DI'#10'};'#10'},{"../../../utils":114,"./a'
  +'rray":40}],66:[function(require,module,exports){'#10'const { utils } = requ'
  +'ire(''../../../utils'');'#10'const { WebGLKernelValue } = require(''./index'
  +''');'#10#10'class WebGLKernelValueSingleArray4 extends WebGLKernelValue {'
  +#10'  constructor(value, settings) {'#10'    super(value, settings);'#10'   '
  +' this.uploadValue = value;'#10'  }'#10'  getSource(value) {'#10'    if (thi'
  +'s.origin === ''constants'') {'#10'      return `const vec4 ${this.id} = vec'
  +'4(${value[0]},${value[1]},${value[2]},${value[3]});\n`;'#10'    }'#10'    r'
  +'eturn `uniform vec4 ${this.id};\n`;'#10'  }'#10#10'  getStringValueHandler('
  +') {'#10'    if (this.origin === ''constants'') return '''';'#10'    return '
  +'`const uploadValue_${this.name} = ${this.varName};\n`;'#10'  }'#10#10'  upd'
  +'ateValue(value) {'#10'    if (this.origin === ''constants'') return;'#10'  '
  +'  this.kernel.setUniform4fv(this.id, this.uploadValue = value);'#10'  }'#10
  +'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArray4'#10'};'#10'}'
  +',{"../../../utils":114,"./index":56}],67:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelAr'
  +'ray } = require(''./array'');'#10#10'class WebGLKernelValueSingleInput exte'
  +'nds WebGLKernelArray {'#10'  constructor(value, settings) {'#10'    super(v'
  +'alue, settings);'#10'    this.bitRatio = 4;'#10'    let [w, h, d] = value.s'
  +'ize;'#10'    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10
  +'    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimens'
  +'ions, this.bitRatio);'#10'    this.uploadArrayLength = this.textureSize[0] '
  +'* this.textureSize[1] * this.bitRatio;'#10'    this.checkSize(this.textureS'
  +'ize[0], this.textureSize[1]);'#10'    this.uploadValue = new Float32Array(t'
  +'his.uploadArrayLength);'#10'  }'#10#10'  getStringValueHandler() {'#10'    '
  +'return utils.linesToString(['#10'      `const uploadValue_${this.name} = ne'
  +'w Float32Array(${this.uploadArrayLength})`,'#10'      `flattenTo(${this.var'
  +'Name}.value, uploadValue_${this.name})`,'#10'    ]);'#10'  }'#10#10'  getSo'
  +'urce() {'#10'    return utils.linesToString(['#10'      `uniform sampler2D '
  +'${this.id}`,'#10'      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}'
  +', ${this.textureSize[1]})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3($'
  +'{this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,'#10' '
  +'   ]);'#10'  }'#10#10'  updateValue(input) {'#10'    if (input.constructor '
  +'!== this.initialValueConstructor) {'#10'      this.onUpdateValueMismatch(in'
  +'put.constructor);'#10'      return;'#10'    }'#10'    const { context: gl }'
  ,' = this;'#10'    utils.flattenTo(input.value, this.uploadValue);'#10'    gl'
  +'.activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, t'
  +'his.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'  '
  +'  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textur'
  +'eSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);'#10'    this.kernel.setU'
  +'niform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGLKernelValueSingleInput'#10'};'#10'},{"../../../utils":114,"./array":'
  +'40}],68:[function(require,module,exports){'#10'const { utils } = require('''
  +'../../../utils'');'#10'const { WebGLKernelArray } = require(''./array'');'
  +#10#10'class WebGLKernelValueUnsignedArray extends WebGLKernelArray {'#10'  '
  +'constructor(value, settings) {'#10'    super(value, settings);'#10'    this'
  +'.bitRatio = this.getBitRatio(value);'#10'    this.dimensions = utils.getDim'
  +'ensions(value, true);'#10'    this.textureSize = utils.getMemoryOptimizedPa'
  +'ckedTextureSize(this.dimensions, this.bitRatio);'#10'    this.uploadArrayLe'
  +'ngth = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);'#10
  +'    this.checkSize(this.textureSize[0], this.textureSize[1]);'#10'    this.'
  +'TranserArrayType = this.getTransferArrayType(value);'#10'    this.preUpload'
  +'Value = new this.TranserArrayType(this.uploadArrayLength);'#10'    this.upl'
  +'oadValue = new Uint8Array(this.preUploadValue.buffer);'#10'  }'#10#10'  get'
  +'StringValueHandler() {'#10'    return utils.linesToString(['#10'      `cons'
  +'t preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.up'
  +'loadArrayLength})`,'#10'      `const uploadValue_${this.name} = new Uint8Ar'
  +'ray(preUploadValue_${this.name}.buffer)`,'#10'      `flattenTo(${this.varNa'
  +'me}, preUploadValue_${this.name})`,'#10'    ]);'#10'  }'#10#10'  getSource('
  +') {'#10'    return utils.linesToString(['#10'      `uniform sampler2D ${thi'
  +'s.id}`,'#10'      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${t'
  +'his.textureSize[1]})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this'
  +'.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ])'
  +';'#10'  }'#10#10'  updateValue(value) {'#10'    if (value.constructor !== t'
  +'his.initialValueConstructor) {'#10'      this.onUpdateValueMismatch(value.c'
  +'onstructor);'#10'      return;'#10'    }'#10'    const { context: gl } = th'
  +'is;'#10'    utils.flattenTo(value, this.preUploadValue);'#10'    gl.activeT'
  +'exture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.text'
  +'ure);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.tex'
  +'Image2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1]'
  +', 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);'#10'    this.kernel.setU'
  +'niform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGLKernelValueUnsignedArray'#10'};'#10'},{"../../../utils":114,"./array'
  +'":40}],69:[function(require,module,exports){'#10'const { utils } = require('
  +'''../../../utils'');'#10'const { WebGLKernelArray } = require(''./array'');'
  +#10#10'class WebGLKernelValueUnsignedInput extends WebGLKernelArray {'#10'  '
  +'constructor(value, settings) {'#10'    super(value, settings);'#10'    this'
  +'.bitRatio = this.getBitRatio(value);'#10'    const [w, h, d] = value.size;'
  +#10'    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10'    '
  +'this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimension'
  +'s, this.bitRatio);'#10'    this.uploadArrayLength = this.textureSize[0] * t'
  +'his.textureSize[1] * (4 / this.bitRatio);'#10'    this.checkSize(this.textu'
  +'reSize[0], this.textureSize[1]);'#10'    this.TranserArrayType = this.getTr'
  +'ansferArrayType(value.value);'#10'    this.preUploadValue = new this.Transe'
  +'rArrayType(this.uploadArrayLength);'#10'    this.uploadValue = new Uint8Arr'
  +'ay(this.preUploadValue.buffer);'#10'  }'#10#10'  getStringValueHandler() {'
  +#10'    return utils.linesToString(['#10'      `const preUploadValue_${this.'
  +'name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,'#10
  +'      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${thi'
  +'s.name}.buffer)`,'#10'      `flattenTo(${this.varName}.value, preUploadValu'
  +'e_${this.name})`,'#10'    ]);'#10'  }'#10#10'  getSource() {'#10'    return'
  +' utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'      '
  +'`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]'
  +'})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, $'
  +'{this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10' '
  +' updateValue(input) {'#10'    if (input.constructor !== this.initialValueCo'
  +'nstructor) {'#10'      this.onUpdateValueMismatch(value.constructor);'#10' '
  +'     return;'#10'    }'#10'    const { context: gl } = this;'#10'    utils.'
  +'flattenTo(input.value, this.preUploadValue);'#10'    gl.activeTexture(this.'
  ,'contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'  '
  +'  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.T'
  +'EXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA'
  +', gl.UNSIGNED_BYTE, this.uploadValue);'#10'    this.kernel.setUniform1i(thi'
  +'s.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKerne'
  +'lValueUnsignedInput'#10'};'#10'},{"../../../utils":114,"./array":40}],70:[f'
  +'unction(require,module,exports){'#10'const { GLKernel } = require(''../gl/k'
  +'ernel'');'#10'const { FunctionBuilder } = require(''../function-builder'');'
  +#10'const { WebGLFunctionNode } = require(''./function-node'');'#10'const { '
  +'utils } = require(''../../utils'');'#10'const mrud = require(''../../plugin'
  +'s/math-random-uniformly-distributed'');'#10'const { fragmentShader } = requ'
  +'ire(''./fragment-shader'');'#10'const { vertexShader } = require(''./vertex'
  +'-shader'');'#10'const { glKernelString } = require(''../gl/kernel-string'')'
  +';'#10'const { lookupKernelValueType } = require(''./kernel-value-maps'');'
  +#10#10'let isSupported = null;'#10'let testCanvas = null;'#10'let testContex'
  +'t = null;'#10'let testExtensions = null;'#10'let features = null;'#10#10'co'
  +'nst plugins = [mrud];'#10'const canvases = [];'#10'const maxTexSizes = {};'
  +#10#10#10'class WebGLKernel extends GLKernel {'#10'  static get isSupported('
  +') {'#10'    if (isSupported !== null) {'#10'      return isSupported;'#10' '
  +'   }'#10'    this.setupFeatureChecks();'#10'    isSupported = this.isContex'
  +'tMatch(testContext);'#10'    return isSupported;'#10'  }'#10#10'  static se'
  +'tupFeatureChecks() {'#10'    if (typeof document !== ''undefined'') {'#10' '
  +'     testCanvas = document.createElement(''canvas'');'#10'    } else if (ty'
  +'peof OffscreenCanvas !== ''undefined'') {'#10'      testCanvas = new Offscr'
  +'eenCanvas(0, 0);'#10'    }'#10'    if (!testCanvas) return;'#10'    testCon'
  +'text = testCanvas.getContext(''webgl'') || testCanvas.getContext(''experime'
  +'ntal-webgl'');'#10'    if (!testContext || !testContext.getExtension) retur'
  +'n;'#10'    testExtensions = {'#10'      OES_texture_float: testContext.getE'
  +'xtension(''OES_texture_float''),'#10'      OES_texture_float_linear: testCo'
  +'ntext.getExtension(''OES_texture_float_linear''),'#10'      OES_element_ind'
  +'ex_uint: testContext.getExtension(''OES_element_index_uint''),'#10'      WE'
  +'BGL_draw_buffers: testContext.getExtension(''WEBGL_draw_buffers''),'#10'   '
  +' };'#10'    features = this.getFeatures();'#10'  }'#10#10'  static isContex'
  +'tMatch(context) {'#10'    if (typeof WebGLRenderingContext !== ''undefined'
  +''') {'#10'      return context instanceof WebGLRenderingContext;'#10'    }'
  +#10'    return false;'#10'  }'#10#10'  static getIsTextureFloat() {'#10'    '
  +'return Boolean(testExtensions.OES_texture_float);'#10'  }'#10#10'  static g'
  +'etIsDrawBuffers() {'#10'    return Boolean(testExtensions.WEBGL_draw_buffer'
  +'s);'#10'  }'#10#10'  static getChannelCount() {'#10'    return testExtensio'
  +'ns.WEBGL_draw_buffers ?'#10'      testContext.getParameter(testExtensions.W'
  +'EBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :'#10'      1;'#10'  }'#10#10'  s'
  +'tatic getMaxTextureSize() {'#10'    return testContext.getParameter(testCon'
  +'text.MAX_TEXTURE_SIZE);'#10'  }'#10#10'  static lookupKernelValueType(type,'
  +' dynamic, precision, value) {'#10'    return lookupKernelValueType(type, dy'
  +'namic, precision, value);'#10'  }'#10#10'  static get testCanvas() {'#10'  '
  +'  return testCanvas;'#10'  }'#10#10'  static get testContext() {'#10'    re'
  +'turn testContext;'#10'  }'#10#10'  static get features() {'#10'    return f'
  +'eatures;'#10'  }'#10#10'  static get fragmentShader() {'#10'    return frag'
  +'mentShader;'#10'  }'#10#10'  static get vertexShader() {'#10'    return ver'
  +'texShader;'#10'  }'#10#10'  constructor(source, settings) {'#10'    super(s'
  +'ource, settings);'#10'    this.program = null;'#10'    this.pipeline = sett'
  +'ings.pipeline;'#10'    this.endianness = utils.systemEndianness();'#10'    '
  +'this.extensions = {};'#10'    this.argumentTextureCount = 0;'#10'    this.c'
  +'onstantTextureCount = 0;'#10'    this.fragShader = null;'#10'    this.vertS'
  +'hader = null;'#10'    this.drawBuffersMap = null;'#10#10'    this.maxTexSiz'
  +'e = null;'#10'    this.onRequestSwitchKernel = null;'#10'    this.removeIst'
  +'anbulCoverage = true;'#10#10'    this.texture = null;'#10'    this.mappedTe'
  +'xtures = null;'#10'    this.mergeSettings(source.settings || settings);'#10
  +#10'    this.threadDim = null;'#10'    this.framebuffer = null;'#10'    this'
  +'.buffer = null;'#10#10'    this.textureCache = [];'#10'    this.programUnif'
  +'ormLocationCache = {};'#10'    this.uniform1fCache = {};'#10'    this.unifo'
  +'rm1iCache = {};'#10'    this.uniform2fCache = {};'#10'    this.uniform2fvCa'
  +'che = {};'#10'    this.uniform2ivCache = {};'#10'    this.uniform3fvCache ='
  +' {};'#10'    this.uniform3ivCache = {};'#10'    this.uniform4fvCache = {};'
  ,#10'    this.uniform4ivCache = {};'#10'  }'#10#10'  initCanvas() {'#10'    i'
  +'f (typeof document !== ''undefined'') {'#10'      const canvas = document.c'
  +'reateElement(''canvas'');'#10'      canvas.width = 2;'#10'      canvas.heig'
  +'ht = 2;'#10'      return canvas;'#10'    } else if (typeof OffscreenCanvas '
  +'!== ''undefined'') {'#10'      return new OffscreenCanvas(0, 0);'#10'    }'
  +#10'  }'#10#10'  initContext() {'#10'    const settings = {'#10'      alpha:'
  +' false,'#10'      depth: false,'#10'      antialias: false'#10'    };'#10' '
  +'   return this.canvas.getContext(''webgl'', settings) || this.canvas.getCon'
  +'text(''experimental-webgl'', settings);'#10'  }'#10#10'  initPlugins(settin'
  +'gs) {'#10'    const pluginsToUse = [];'#10'    const { source } = this;'#10
  +'    if (typeof source === ''string'') {'#10'      for (let i = 0; i < plugi'
  +'ns.length; i++) {'#10'        const plugin = plugins[i];'#10'        if (so'
  +'urce.match(plugin.functionMatch)) {'#10'          pluginsToUse.push(plugin)'
  +';'#10'        }'#10'      }'#10'    } else if (typeof source === ''object'''
  +') {'#10'      if (settings.pluginNames) { '#10'        for (let i = 0; i < '
  +'plugins.length; i++) {'#10'          const plugin = plugins[i];'#10'       '
  +'   const usePlugin = settings.pluginNames.some(pluginName => pluginName ==='
  +' plugin.name);'#10'          if (usePlugin) {'#10'            pluginsToUse.'
  +'push(plugin);'#10'          }'#10'        }'#10'      }'#10'    }'#10'    r'
  +'eturn pluginsToUse;'#10'  }'#10#10'  initExtensions() {'#10'    this.extens'
  +'ions = {'#10'      OES_texture_float: this.context.getExtension(''OES_textu'
  +'re_float''),'#10'      OES_texture_float_linear: this.context.getExtension('
  +'''OES_texture_float_linear''),'#10'      OES_element_index_uint: this.conte'
  +'xt.getExtension(''OES_element_index_uint''),'#10'      WEBGL_draw_buffers: '
  +'this.context.getExtension(''WEBGL_draw_buffers''),'#10'      WEBGL_color_bu'
  +'ffer_float: this.context.getExtension(''WEBGL_color_buffer_float''),'#10'  '
  +'  };'#10'  }'#10#10'  validateSettings(args) {'#10'    if (!this.validate) '
  +'{'#10'      this.texSize = utils.getKernelTextureSize({'#10'        optimiz'
  +'eFloatMemory: this.optimizeFloatMemory,'#10'        precision: this.precisi'
  +'on,'#10'      }, this.output);'#10'      return;'#10'    }'#10#10'    const'
  +' { features } = this.constructor;'#10#10'    if (this.optimizeFloatMemory ='
  +'== true && !features.isTextureFloat) {'#10'      throw new Error(''Float te'
  +'xtures are not supported'');'#10'    } else if (this.precision === ''single'
  +''' && !features.isFloatRead) {'#10'      throw new Error(''Single precision'
  +' not supported'');'#10'    } else if (!this.graphical && this.precision ==='
  +' null && features.isTextureFloat) {'#10'      this.precision = features.isF'
  +'loatRead ? ''single'' : ''unsigned'';'#10'    }'#10#10'    if (this.subKern'
  +'els && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {'
  +#10'      throw new Error(''could not instantiate draw buffers extension'');'
  +#10'    }'#10#10'    if (this.fixIntegerDivisionAccuracy === null) {'#10'   '
  +'   this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;'
  +#10'    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivi'
  +'sionAccurate) {'#10'      this.fixIntegerDivisionAccuracy = false;'#10'    '
  +'}'#10#10'    this.checkOutput();'#10#10'    if (!this.output || this.output'
  +'.length === 0) {'#10'      if (args.length !== 1) {'#10'        throw new E'
  +'rror(''Auto output only supported for kernels with only one input'');'#10' '
  +'     }'#10#10'      const argType = utils.getVariableType(args[0], this.str'
  +'ictIntegers);'#10'      switch (argType) {'#10'        case ''Array'':'#10
  +'          this.output = utils.getDimensions(argType);'#10'          break;'
  +#10'        case ''NumberTexture'':'#10'        case ''MemoryOptimizedNumber'
  +'Texture'':'#10'        case ''ArrayTexture(1)'':'#10'        case ''ArrayTe'
  +'xture(2)'':'#10'        case ''ArrayTexture(3)'':'#10'        case ''ArrayT'
  +'exture(4)'':'#10'          this.output = args[0].output;'#10'          brea'
  +'k;'#10'        default:'#10'          throw new Error(''Auto output not sup'
  +'ported for input type: '' + argType);'#10'      }'#10'    }'#10#10'    if ('
  +'this.graphical) {'#10'      if (this.output.length !== 2) {'#10'        thr'
  +'ow new Error(''Output must have 2 dimensions on graphical mode'');'#10'    '
  +'  }'#10#10'      if (this.precision === ''precision'') {'#10'        this.p'
  +'recision = ''unsigned'';'#10'        console.warn(''Cannot use graphical mo'
  +'de and single precision at the same time'');'#10'      }'#10#10'      this.'
  +'texSize = utils.clone(this.output);'#10'      return;'#10'    } else if (th'
  +'is.precision === null && features.isTextureFloat) {'#10'      this.precisio'
  +'n = ''single'';'#10'    }'#10#10'    this.texSize = utils.getKernelTextureS'
  +'ize({'#10'      optimizeFloatMemory: this.optimizeFloatMemory,'#10'      pr'
  ,'ecision: this.precision,'#10'    }, this.output);'#10#10'    this.checkText'
  +'ureSize();'#10'  }'#10#10'  updateMaxTexSize() {'#10'    const { texSize, c'
  +'anvas } = this;'#10'    if (this.maxTexSize === null) {'#10'      let canva'
  +'sIndex = canvases.indexOf(canvas);'#10'      if (canvasIndex === -1) {'#10
  +'        canvasIndex = canvases.length;'#10'        canvases.push(canvas);'
  +#10'        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];'#10'      }'
  +#10'      this.maxTexSize = maxTexSizes[canvasIndex];'#10'    }'#10'    if ('
  +'this.maxTexSize[0] < texSize[0]) {'#10'      this.maxTexSize[0] = texSize[0'
  +'];'#10'    }'#10'    if (this.maxTexSize[1] < texSize[1]) {'#10'      this.'
  +'maxTexSize[1] = texSize[1];'#10'    }'#10'  }'#10#10'  setupArguments(args)'
  +' {'#10'    this.kernelArguments = [];'#10'    this.argumentTextureCount = 0'
  +';'#10'    const needsArgumentTypes = this.argumentTypes === null;'#10'    i'
  +'f (needsArgumentTypes) {'#10'      this.argumentTypes = [];'#10'    }'#10' '
  +'   this.argumentSizes = [];'#10'    this.argumentBitRatios = [];'#10#10'   '
  +' if (args.length < this.argumentNames.length) {'#10'      throw new Error('
  +'''not enough arguments for kernel'');'#10'    } else if (args.length > this'
  +'.argumentNames.length) {'#10'      throw new Error(''too many arguments for'
  +' kernel'');'#10'    }'#10#10'    const { context: gl } = this;'#10'    let '
  +'textureIndexes = 0;'#10#10'    const onRequestTexture = () => {'#10'      r'
  +'eturn this.createTexture();'#10'    };'#10'    const onRequestIndex = () =>'
  +' {'#10'      return textureIndexes++;'#10'    };'#10'    const onUpdateValu'
  +'eMismatch = (constructor) => {'#10'      this.switchKernels({'#10'        t'
  +'ype: ''argumentMismatch'','#10'        needed: constructor'#10'      });'#10
  +'    };'#10'    const onRequestContextHandle = () => {'#10'      return gl.T'
  +'EXTURE0 + this.constantTextureCount + this.argumentTextureCount++;'#10'    '
  +'};'#10#10'    for (let index = 0; index < args.length; index++) {'#10'     '
  +' const value = args[index];'#10'      const name = this.argumentNames[index'
  +'];'#10'      let type;'#10'      if (needsArgumentTypes) {'#10'        type'
  +' = utils.getVariableType(value, this.strictIntegers);'#10'        this.argu'
  +'mentTypes.push(type);'#10'      } else {'#10'        type = this.argumentTy'
  +'pes[index];'#10'      }'#10'      const KernelValue = this.constructor.look'
  +'upKernelValueType(type, this.dynamicArguments ? ''dynamic'' : ''static'', t'
  +'his.precision, args[index]);'#10'      if (KernelValue === null) {'#10'    '
  +'    return this.requestFallback(args);'#10'      }'#10'      const kernelAr'
  +'gument = new KernelValue(value, {'#10'        name,'#10'        type,'#10' '
  +'       tactic: this.tactic,'#10'        origin: ''user'','#10'        conte'
  +'xt: gl,'#10'        checkContext: this.checkContext,'#10'        kernel: th'
  +'is,'#10'        strictIntegers: this.strictIntegers,'#10'        onRequestT'
  +'exture,'#10'        onRequestIndex,'#10'        onUpdateValueMismatch,'#10
  +'        onRequestContextHandle,'#10'      });'#10'      this.kernelArgument'
  +'s.push(kernelArgument);'#10'      kernelArgument.setup();'#10'      this.ar'
  +'gumentSizes.push(kernelArgument.textureSize);'#10'      this.argumentBitRat'
  +'ios[index] = kernelArgument.bitRatio;'#10'    }'#10'  }'#10#10'  createText'
  +'ure() {'#10'    const texture = this.context.createTexture();'#10'    this.'
  +'textureCache.push(texture);'#10'    return texture;'#10'  }'#10#10'  setupC'
  +'onstants(args) {'#10'    const { context: gl } = this;'#10'    this.kernelC'
  +'onstants = [];'#10'    this.forceUploadKernelConstants = [];'#10'    let ne'
  +'edsConstantTypes = this.constantTypes === null;'#10'    if (needsConstantTy'
  +'pes) {'#10'      this.constantTypes = {};'#10'    }'#10'    this.constantBi'
  +'tRatios = {};'#10'    let textureIndexes = 0;'#10'    for (const name in th'
  +'is.constants) {'#10'      const value = this.constants[name];'#10'      let'
  +' type;'#10'      if (needsConstantTypes) {'#10'        type = utils.getVari'
  +'ableType(value, this.strictIntegers);'#10'        this.constantTypes[name] '
  +'= type;'#10'      } else {'#10'        type = this.constantTypes[name];'#10
  +'      }'#10'      const KernelValue = this.constructor.lookupKernelValueTyp'
  +'e(type, ''static'', this.precision, value);'#10'      if (KernelValue === n'
  +'ull) {'#10'        return this.requestFallback(args);'#10'      }'#10'     '
  +' const kernelValue = new KernelValue(value, {'#10'        name,'#10'       '
  +' type,'#10'        tactic: this.tactic,'#10'        origin: ''constants'','
  +#10'        context: this.context,'#10'        checkContext: this.checkConte'
  +'xt,'#10'        kernel: this,'#10'        strictIntegers: this.strictIntege'
  +'rs,'#10'        onRequestTexture: () => {'#10'          return this.createT'
  +'exture();'#10'        },'#10'        onRequestIndex: () => {'#10'          '
  +'return textureIndexes++;'#10'        },'#10'        onRequestContextHandle:'
  ,' () => {'#10'          return gl.TEXTURE0 + this.constantTextureCount++;'#10
  +'        }'#10'      });'#10'      this.constantBitRatios[name] = kernelValu'
  +'e.bitRatio;'#10'      this.kernelConstants.push(kernelValue);'#10'      ker'
  +'nelValue.setup();'#10'      if (kernelValue.forceUploadEachRun) {'#10'     '
  +'   this.forceUploadKernelConstants.push(kernelValue);'#10'      }'#10'    }'
  +#10'  }'#10#10'  build() {'#10'    if (this.built) return;'#10'    this.init'
  +'Extensions();'#10'    this.validateSettings(arguments);'#10'    this.setupC'
  +'onstants(arguments);'#10'    if (this.fallbackRequested) return;'#10'    th'
  +'is.setupArguments(arguments);'#10'    if (this.fallbackRequested) return;'
  +#10'    this.updateMaxTexSize();'#10'    this.translateSource();'#10'    con'
  +'st failureResult = this.pickRenderStrategy(arguments);'#10'    if (failureR'
  +'esult) {'#10'      return failureResult;'#10'    }'#10'    const { texSize,'
  +' context: gl, canvas } = this;'#10'    gl.enable(gl.SCISSOR_TEST);'#10'    '
  +'if (this.pipeline && this.precision === ''single'') {'#10'      gl.viewport'
  +'(0, 0, this.maxTexSize[0], this.maxTexSize[1]);'#10'      canvas.width = th'
  +'is.maxTexSize[0];'#10'      canvas.height = this.maxTexSize[1];'#10'    } e'
  +'lse {'#10'      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);'
  +#10'      canvas.width = this.maxTexSize[0];'#10'      canvas.height = this.'
  +'maxTexSize[1];'#10'    }'#10'    const threadDim = this.threadDim = Array.f'
  +'rom(this.output);'#10'    while (threadDim.length < 3) {'#10'      threadDi'
  +'m.push(1);'#10'    }'#10#10'    const compiledVertexShader = this.getVertex'
  +'Shader(arguments);'#10'    const vertShader = gl.createShader(gl.VERTEX_SHA'
  +'DER);'#10'    gl.shaderSource(vertShader, compiledVertexShader);'#10'    gl'
  +'.compileShader(vertShader);'#10'    this.vertShader = vertShader;'#10#10'  '
  +'  const compiledFragmentShader = this.getFragmentShader(arguments);'#10'   '
  +' const fragShader = gl.createShader(gl.FRAGMENT_SHADER);'#10'    gl.shaderS'
  +'ource(fragShader, compiledFragmentShader);'#10'    gl.compileShader(fragSha'
  +'der);'#10'    this.fragShader = fragShader;'#10#10'    if (this.debug) {'#10
  +'      console.log(''GLSL Shader Output:'');'#10'      console.log(compiledF'
  +'ragmentShader);'#10'    }'#10#10'    if (!gl.getShaderParameter(vertShader,'
  +' gl.COMPILE_STATUS)) {'#10'      throw new Error(''Error compiling vertex s'
  +'hader: '' + gl.getShaderInfoLog(vertShader));'#10'    }'#10'    if (!gl.get'
  +'ShaderParameter(fragShader, gl.COMPILE_STATUS)) {'#10'      throw new Error'
  +'(''Error compiling fragment shader: '' + gl.getShaderInfoLog(fragShader));'
  +#10'    }'#10#10'    const program = this.program = gl.createProgram();'#10
  +'    gl.attachShader(program, vertShader);'#10'    gl.attachShader(program, '
  +'fragShader);'#10'    gl.linkProgram(program);'#10'    this.framebuffer = gl'
  +'.createFramebuffer();'#10'    this.framebuffer.width = texSize[0];'#10'    '
  +'this.framebuffer.height = texSize[1];'#10#10'    const vertices = new Float'
  +'32Array([-1, -1,'#10'      1, -1, -1, 1,'#10'      1, 1'#10'    ]);'#10'   '
  +' const texCoords = new Float32Array(['#10'      0, 0,'#10'      1, 0,'#10' '
  +'     0, 1,'#10'      1, 1'#10'    ]);'#10#10'    const texCoordOffset = ver'
  +'tices.byteLength;'#10#10'    let buffer = this.buffer;'#10'    if (!buffer)'
  +' {'#10'      buffer = this.buffer = gl.createBuffer();'#10'      gl.bindBuf'
  +'fer(gl.ARRAY_BUFFER, buffer);'#10'      gl.bufferData(gl.ARRAY_BUFFER, vert'
  +'ices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);'#10'    } else {'
  +#10'      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);'#10'    }'#10#10'    gl.bu'
  +'fferSubData(gl.ARRAY_BUFFER, 0, vertices);'#10'    gl.bufferSubData(gl.ARRA'
  +'Y_BUFFER, texCoordOffset, texCoords);'#10#10'    const aPosLoc = gl.getAttr'
  +'ibLocation(this.program, ''aPos'');'#10'    gl.enableVertexAttribArray(aPos'
  +'Loc);'#10'    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);'#10
  +'    const aTexCoordLoc = gl.getAttribLocation(this.program, ''aTexCoord'');'
  +#10'    gl.enableVertexAttribArray(aTexCoordLoc);'#10'    gl.vertexAttribPoi'
  +'nter(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);'#10'    gl.bindF'
  +'ramebuffer(gl.FRAMEBUFFER, this.framebuffer);'#10#10'    let i = 0;'#10'   '
  +' gl.useProgram(this.program);'#10'    for (let p in this.constants) {'#10' '
  +'     this.kernelConstants[i++].updateValue(this.constants[p]);'#10'    }'#10
  +#10'    this._setupOutputTexture();'#10'    if ('#10'      this.subKernels !'
  +'== null &&'#10'      this.subKernels.length > 0'#10'    ) {'#10'      this.'
  +'_mappedTextureSwitched = {};'#10'      this._setupSubOutputTextures();'#10
  +'    }'#10'    this.buildSignature(arguments);'#10'    this.built = true;'#10
  +'  }'#10#10'  translateSource() {'#10'    const functionBuilder = FunctionBu'
  +'ilder.fromKernel(this, WebGLFunctionNode, {'#10'      fixIntegerDivisionAcc'
  +'uracy: this.fixIntegerDivisionAccuracy'#10'    });'#10'    this.translatedS'
  ,'ource = functionBuilder.getPrototypeString(''kernel'');'#10'    this.setupR'
  +'eturnTypes(functionBuilder);'#10'  }'#10#10'  setupReturnTypes(functionBuil'
  +'der) {'#10'    if (!this.graphical && !this.returnType) {'#10'      this.re'
  +'turnType = functionBuilder.getKernelResultType();'#10'    }'#10#10'    if ('
  +'this.subKernels && this.subKernels.length > 0) {'#10'      for (let i = 0; '
  +'i < this.subKernels.length; i++) {'#10'        const subKernel = this.subKe'
  +'rnels[i];'#10'        if (!subKernel.returnType) {'#10'          subKernel.'
  +'returnType = functionBuilder.getSubKernelResultType(i);'#10'        }'#10' '
  +'     }'#10'    }'#10'  }'#10#10'  run() {'#10'    const { kernelArguments, '
  +'texSize, forceUploadKernelConstants, context: gl } = this;'#10#10'    gl.us'
  +'eProgram(this.program);'#10'    gl.scissor(0, 0, texSize[0], texSize[1]);'
  +#10'    if (this.dynamicOutput) {'#10'      this.setUniform3iv(''uOutputDim'
  +''', new Int32Array(this.threadDim));'#10'      this.setUniform2iv(''uTexSiz'
  +'e'', texSize);'#10'    }'#10#10'    this.setUniform2f(''ratio'', texSize[0]'
  +' / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);'#10#10'    for (le'
  +'t i = 0; i < forceUploadKernelConstants.length; i++) {'#10'      const cons'
  +'tant = forceUploadKernelConstants[i];'#10'      constant.updateValue(this.c'
  +'onstants[constant.name]);'#10'      if (this.switchingKernels) return;'#10
  +'    }'#10'    for (let i = 0; i < kernelArguments.length; i++) {'#10'      '
  +'kernelArguments[i].updateValue(arguments[i]);'#10'      if (this.switchingK'
  +'ernels) return;'#10'    }'#10#10'    if (this.plugins) {'#10'      for (let'
  +' i = 0; i < this.plugins.length; i++) {'#10'        const plugin = this.plu'
  +'gins[i];'#10'        if (plugin.onBeforeRun) {'#10'          plugin.onBefor'
  +'eRun(this);'#10'        }'#10'      }'#10'    }'#10#10'    if (this.graphic'
  +'al) {'#10'      if (this.pipeline) {'#10'        gl.bindRenderbuffer(gl.REN'
  +'DERBUFFER, null);'#10'        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frame'
  +'buffer);'#10'        if (this.immutable) {'#10'          this._replaceOutpu'
  +'tTexture();'#10'        }'#10'        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4'
  +');'#10'        return this.immutable ? this.texture.clone() : this.texture;'
  +#10'      }'#10'      gl.bindRenderbuffer(gl.RENDERBUFFER, null);'#10'      '
  +'gl.bindFramebuffer(gl.FRAMEBUFFER, null);'#10'      gl.drawArrays(gl.TRIANG'
  +'LE_STRIP, 0, 4);'#10'      return;'#10'    }'#10#10'    gl.bindFramebuffer('
  +'gl.FRAMEBUFFER, this.framebuffer);'#10'    if (this.immutable) {'#10'      '
  +'this._replaceOutputTexture();'#10'    }'#10#10'    if (this.subKernels !== '
  +'null) {'#10'      if (this.immutable) {'#10'        this._replaceSubOutputT'
  +'extures();'#10'      }'#10'      this.drawBuffers();'#10'    }'#10#10'    g'
  +'l.drawArrays(gl.TRIANGLE_STRIP, 0, 4);'#10'  }'#10#10'  drawBuffers() {'#10
  +'    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap'
  +');'#10'  }'#10#10'  getInternalFormat() {'#10'    return this.context.RGBA;'
  +#10'  }'#10'  getTextureFormat() {'#10'    const { context: gl } = this;'#10
  +'    switch (this.getInternalFormat()) {'#10'      case gl.RGBA:'#10'       '
  +' return gl.RGBA;'#10'      default:'#10'        throw new Error(''Unknown i'
  +'nternal format'');'#10'    }'#10'  }'#10#10'  _replaceOutputTexture() {'#10
  +'    if (this.texture.beforeMutate() || this._textureSwitched) {'#10'      c'
  +'onst gl = this.context;'#10'      gl.framebufferTexture2D(gl.FRAMEBUFFER, g'
  +'l.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);'#10'      thi'
  +'s._textureSwitched = false;'#10'    }'#10'  }'#10#10'  _setupOutputTexture('
  +') {'#10'    const gl = this.context;'#10'    const texSize = this.texSize;'
  +#10'    if (this.texture) {'#10'      gl.framebufferTexture2D(gl.FRAMEBUFFER'
  +', gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);'#10'      '
  +'return;'#10'    }'#10'    const texture = this.createTexture();'#10'    gl.'
  +'activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextur'
  +'eCount);'#10'    gl.bindTexture(gl.TEXTURE_2D, texture);'#10'    gl.texPara'
  +'meteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#10'    gl.texP'
  +'arameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#10'    gl.t'
  +'exParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'    gl.'
  +'texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'#10'    co'
  +'nst format = this.getInternalFormat();'#10'    if (this.precision === ''sin'
  +'gle'') {'#10'      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texS'
  +'ize[1], 0, gl.RGBA, gl.FLOAT, null);'#10'    } else {'#10'      gl.texImage'
  +'2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED'
  +'_BYTE, null);'#10'    }'#10'    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.'
  +'COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);'#10'    this.texture = new t'
  +'his.TextureConstructor({'#10'      texture,'#10'      size: texSize,'#10'  '
  ,'    dimensions: this.threadDim,'#10'      output: this.output,'#10'      co'
  +'ntext: this.context,'#10'      internalFormat: this.getInternalFormat(),'#10
  +'      textureFormat: this.getTextureFormat(),'#10'      kernel: this,'#10' '
  +'   });'#10'  }'#10#10'  _replaceSubOutputTextures() {'#10'    const gl = th'
  +'is.context;'#10'    for (let i = 0; i < this.mappedTextures.length; i++) {'
  +#10'      const mappedTexture = this.mappedTextures[i];'#10'      if (mapped'
  +'Texture.beforeMutate() || this._mappedTextureSwitched[i]) {'#10'        gl.'
  +'framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTU'
  +'RE_2D, mappedTexture.texture, 0);'#10'        this._mappedTextureSwitched[i'
  +'] = false;'#10'      }'#10'    }'#10'  }'#10#10'  _setupSubOutputTextures()'
  +' {'#10'    const gl = this.context;'#10'    if (this.mappedTextures) {'#10
  +'      for (let i = 0; i < this.subKernels.length; i++) {'#10'        gl.fra'
  +'mebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_'
  +'2D, this.mappedTextures[i].texture, 0);'#10'      }'#10'      return;'#10' '
  +'   }'#10'    const texSize = this.texSize;'#10'    this.drawBuffersMap = [g'
  +'l.COLOR_ATTACHMENT0];'#10'    this.mappedTextures = [];'#10'    for (let i '
  +'= 0; i < this.subKernels.length; i++) {'#10'      const texture = this.crea'
  +'teTexture();'#10'      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + '
  +'1);'#10'      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + th'
  +'is.argumentTextureCount + i);'#10'      gl.bindTexture(gl.TEXTURE_2D, textu'
  +'re);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_'
  +'TO_EDGE);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.C'
  +'LAMP_TO_EDGE);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FIL'
  +'TER, gl.NEAREST);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_'
  +'FILTER, gl.NEAREST);'#10'      if (this.precision === ''single'') {'#10'   '
  +'     gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl'
  +'.RGBA, gl.FLOAT, null);'#10'      } else {'#10'        gl.texImage2D(gl.TEX'
  +'TURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, '
  +'null);'#10'      }'#10'      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COL'
  +'OR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);'#10#10'      this.mappe'
  +'dTextures.push(new this.TextureConstructor({'#10'        texture,'#10'     '
  +'   size: texSize,'#10'        dimensions: this.threadDim,'#10'        outpu'
  +'t: this.output,'#10'        context: this.context,'#10'        internalForm'
  +'at: this.getInternalFormat(),'#10'        textureFormat: this.getTextureFor'
  +'mat(),'#10'        kernel: this,'#10'      }));'#10'    }'#10'  }'#10#10'  '
  +'setUniform1f(name, value) {'#10'    if (this.uniform1fCache.hasOwnProperty('
  +'name)) {'#10'      const cache = this.uniform1fCache[name];'#10'      if (v'
  +'alue === cache) {'#10'        return;'#10'      }'#10'    }'#10'    this.un'
  +'iform1fCache[name] = value;'#10'    const loc = this.getUniformLocation(nam'
  +'e);'#10'    this.context.uniform1f(loc, value);'#10'  }'#10#10'  setUniform'
  +'1i(name, value) {'#10'    if (this.uniform1iCache.hasOwnProperty(name)) {'
  +#10'      const cache = this.uniform1iCache[name];'#10'      if (value === c'
  +'ache) {'#10'        return;'#10'      }'#10'    }'#10'    this.uniform1iCac'
  +'he[name] = value;'#10'    const loc = this.getUniformLocation(name);'#10'  '
  +'  this.context.uniform1i(loc, value);'#10'  }'#10#10'  setUniform2f(name, v'
  +'alue1, value2) {'#10'    if (this.uniform2fCache.hasOwnProperty(name)) {'#10
  +'      const cache = this.uniform2fCache[name];'#10'      if ('#10'        v'
  +'alue1 === cache[0] &&'#10'        value2 === cache[1]'#10'      ) {'#10'   '
  +'     return;'#10'      }'#10'    }'#10'    this.uniform2fCache[name] = [val'
  +'ue1, value2];'#10'    const loc = this.getUniformLocation(name);'#10'    th'
  +'is.context.uniform2f(loc, value1, value2);'#10'  }'#10#10'  setUniform2fv(n'
  +'ame, value) {'#10'    if (this.uniform2fvCache.hasOwnProperty(name)) {'#10
  +'      const cache = this.uniform2fvCache[name];'#10'      if ('#10'        '
  +'value[0] === cache[0] &&'#10'        value[1] === cache[1]'#10'      ) {'#10
  +'        return;'#10'      }'#10'    }'#10'    this.uniform2fvCache[name] = '
  +'value;'#10'    const loc = this.getUniformLocation(name);'#10'    this.cont'
  +'ext.uniform2fv(loc, value);'#10'  }'#10#10'  setUniform2iv(name, value) {'
  +#10'    if (this.uniform2ivCache.hasOwnProperty(name)) {'#10'      const cac'
  +'he = this.uniform2ivCache[name];'#10'      if ('#10'        value[0] === ca'
  +'che[0] &&'#10'        value[1] === cache[1]'#10'      ) {'#10'        retur'
  +'n;'#10'      }'#10'    }'#10'    this.uniform2ivCache[name] = value;'#10'  '
  +'  const loc = this.getUniformLocation(name);'#10'    this.context.uniform2i'
  +'v(loc, value);'#10'  }'#10#10'  setUniform3fv(name, value) {'#10'    if (th'
  +'is.uniform3fvCache.hasOwnProperty(name)) {'#10'      const cache = this.uni'
  ,'form3fvCache[name];'#10'      if ('#10'        value[0] === cache[0] &&'#10
  +'        value[1] === cache[1] &&'#10'        value[2] === cache[2]'#10'    '
  +'  ) {'#10'        return;'#10'      }'#10'    }'#10'    this.uniform3fvCach'
  +'e[name] = value;'#10'    const loc = this.getUniformLocation(name);'#10'   '
  +' this.context.uniform3fv(loc, value);'#10'  }'#10#10'  setUniform3iv(name, '
  +'value) {'#10'    if (this.uniform3ivCache.hasOwnProperty(name)) {'#10'     '
  +' const cache = this.uniform3ivCache[name];'#10'      if ('#10'        value'
  +'[0] === cache[0] &&'#10'        value[1] === cache[1] &&'#10'        value['
  +'2] === cache[2]'#10'      ) {'#10'        return;'#10'      }'#10'    }'#10
  +'    this.uniform3ivCache[name] = value;'#10'    const loc = this.getUniform'
  +'Location(name);'#10'    this.context.uniform3iv(loc, value);'#10'  }'#10#10
  +'  setUniform4fv(name, value) {'#10'    if (this.uniform4fvCache.hasOwnPrope'
  +'rty(name)) {'#10'      const cache = this.uniform4fvCache[name];'#10'      '
  +'if ('#10'        value[0] === cache[0] &&'#10'        value[1] === cache[1]'
  +' &&'#10'        value[2] === cache[2] &&'#10'        value[3] === cache[3]'
  +#10'      ) {'#10'        return;'#10'      }'#10'    }'#10'    this.uniform'
  +'4fvCache[name] = value;'#10'    const loc = this.getUniformLocation(name);'
  +#10'    this.context.uniform4fv(loc, value);'#10'  }'#10#10'  setUniform4iv('
  +'name, value) {'#10'    if (this.uniform4ivCache.hasOwnProperty(name)) {'#10
  +'      const cache = this.uniform4ivCache[name];'#10'      if ('#10'        '
  +'value[0] === cache[0] &&'#10'        value[1] === cache[1] &&'#10'        v'
  +'alue[2] === cache[2] &&'#10'        value[3] === cache[3]'#10'      ) {'#10
  +'        return;'#10'      }'#10'    }'#10'    this.uniform4ivCache[name] = '
  +'value;'#10'    const loc = this.getUniformLocation(name);'#10'    this.cont'
  +'ext.uniform4iv(loc, value);'#10'  }'#10#10'  getUniformLocation(name) {'#10
  +'    if (this.programUniformLocationCache.hasOwnProperty(name)) {'#10'      '
  +'return this.programUniformLocationCache[name];'#10'    }'#10'    return thi'
  +'s.programUniformLocationCache[name] = this.context.getUniformLocation(this.'
  +'program, name);'#10'  }'#10#10'  _getFragShaderArtifactMap(args) {'#10'    '
  +'return {'#10'      HEADER: this._getHeaderString(),'#10'      LOOP_MAX: thi'
  +'s._getLoopMaxString(),'#10'      PLUGINS: this._getPluginsString(),'#10'   '
  +'   CONSTANTS: this._getConstantsString(),'#10'      DECODE32_ENDIANNESS: th'
  +'is._getDecode32EndiannessString(),'#10'      ENCODE32_ENDIANNESS: this._get'
  +'Encode32EndiannessString(),'#10'      DIVIDE_WITH_INTEGER_CHECK: this._getD'
  +'ivideWithIntegerCheckString(),'#10'      INJECTED_NATIVE: this._getInjected'
  +'Native(),'#10'      MAIN_CONSTANTS: this._getMainConstantsString(),'#10'   '
  +'   MAIN_ARGUMENTS: this._getMainArgumentsString(args),'#10'      KERNEL: th'
  +'is.getKernelString(),'#10'      MAIN_RESULT: this.getMainResultString(),'#10
  +'      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),'#10'     '
  +' INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),'#10'      SAMPLER_'
  +'2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),'#10'      SAMP'
  +'LER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),'
  +#10'    };'#10'  }'#10#10'  _getVertShaderArtifactMap(args) {'#10'    return'
  +' {'#10'      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),'#10
  +'      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),'#10'      SAM'
  +'PLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),'#10'     '
  +' SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclarati'
  +'on(),'#10'    };'#10'  }'#10#10'  _getHeaderString() {'#10'    return ('#10
  +'      this.subKernels !== null ?'#10'      ''#extension GL_EXT_draw_buffers'
  +' : require\n'' :'#10'      '''''#10'    );'#10'  }'#10#10'  _getLoopMaxStri'
  +'ng() {'#10'    return ('#10'      this.loopMaxIterations ?'#10'      ` ${pa'
  +'rseInt(this.loopMaxIterations)};\n` :'#10'      '' 1000;\n'''#10'    );'#10
  +'  }'#10#10'  _getPluginsString() {'#10'    if (!this.plugins) return ''\n'''
  +';'#10'    return this.plugins.map(plugin => plugin.source && this.source.ma'
  +'tch(plugin.functionMatch) ? plugin.source : '''').join(''\n'');'#10'  }'#10
  +#10'  _getConstantsString() {'#10'    const result = [];'#10'    const { thr'
  +'eadDim, texSize } = this;'#10'    if (this.dynamicOutput) {'#10'      resul'
  +'t.push('#10'        ''uniform ivec3 uOutputDim'','#10'        ''uniform ive'
  +'c2 uTexSize'''#10'      );'#10'    } else {'#10'      result.push('#10'    '
  +'    `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim'
  +'[2]})`,'#10'        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`'
  +#10'      );'#10'    }'#10'    return utils.linesToString(result);'#10'  }'
  +#10#10'  _getTextureCoordinate() {'#10'    const subKernels = this.subKernel'
  +'s;'#10'    if (subKernels === null || subKernels.length < 1) {'#10'      re'
  ,'turn ''varying vec2 vTexCoord;\n'';'#10'    } else {'#10'      return ''out'
  +' vec2 vTexCoord;\n'';'#10'    }'#10'  }'#10#10'  _getDecode32EndiannessStri'
  +'ng() {'#10'    return ('#10'      this.endianness === ''LE'' ?'#10'      '''
  +''' :'#10'      ''  texel.rgba = texel.abgr;\n'''#10'    );'#10'  }'#10#10' '
  +' _getEncode32EndiannessString() {'#10'    return ('#10'      this.endiannes'
  +'s === ''LE'' ?'#10'      '''' :'#10'      ''  texel.rgba = texel.abgr;\n'''
  +#10'    );'#10'  }'#10#10'  _getDivideWithIntegerCheckString() {'#10'    ret'
  +'urn this.fixIntegerDivisionAccuracy ?'#10'      `float divWithIntCheck(floa'
  +'t x, float y) {'#10'  if (floor(x) == x && floor(y) == y && integerMod(x, y'
  +') == 0.0) {'#10'    return float(int(x) / int(y));'#10'  }'#10'  return x /'
  +' y;'#10'}'#10#10'float integerCorrectionModulo(float number, float divisor)'
  +' {'#10'  if (number < 0.0) {'#10'    number = abs(number);'#10'    if (divi'
  +'sor < 0.0) {'#10'      divisor = abs(divisor);'#10'    }'#10'    return -(n'
  +'umber - (divisor * floor(divWithIntCheck(number, divisor))));'#10'  }'#10' '
  +' if (divisor < 0.0) {'#10'    divisor = abs(divisor);'#10'  }'#10'  return '
  +'number - (divisor * floor(divWithIntCheck(number, divisor)));'#10'}` :'#10
  +'      '''';'#10'  }'#10#10'  _getMainArgumentsString(args) {'#10'    const '
  +'results = [];'#10'    const { argumentNames } = this;'#10'    for (let i = '
  +'0; i < argumentNames.length; i++) {'#10'      results.push(this.kernelArgum'
  +'ents[i].getSource(args[i]));'#10'    }'#10'    return results.join('''');'
  +#10'  }'#10#10'  _getInjectedNative() {'#10'    return this.injectedNative |'
  +'| '''';'#10'  }'#10#10'  _getMainConstantsString() {'#10'    const result ='
  +' [];'#10'    const { constants } = this;'#10'    if (constants) {'#10'     '
  +' let i = 0;'#10'      for (const name in constants) {'#10'        if (!this'
  +'.constants.hasOwnProperty(name)) continue;'#10'        result.push(this.ker'
  +'nelConstants[i++].getSource(this.constants[name]));'#10'      }'#10'    }'
  +#10'    return result.join('''');'#10'  }'#10#10'  getKernelResultDeclaratio'
  +'n() {'#10'    switch (this.returnType) {'#10'      case ''Array(2)'':'#10' '
  +'       return ''vec2 kernelResult'';'#10'      case ''Array(3)'':'#10'     '
  +'   return ''vec3 kernelResult'';'#10'      case ''Array(4)'':'#10'        r'
  +'eturn ''vec4 kernelResult'';'#10'      case ''LiteralInteger'':'#10'      c'
  +'ase ''Float'':'#10'      case ''Number'':'#10'      case ''Integer'':'#10' '
  +'       return ''float kernelResult'';'#10'      default:'#10'        if (th'
  +'is.graphical) {'#10'          return ''float kernelResult'';'#10'        } '
  +'else {'#10'          throw new Error(`unrecognized output type "${ this.ret'
  +'urnType }"`);'#10'        }'#10'    }'#10'  }'#10'  getKernelString() {'#10
  +'    const result = [this.getKernelResultDeclaration()];'#10'    const { sub'
  +'Kernels } = this;'#10'    if (subKernels !== null) {'#10'      switch (this'
  +'.returnType) {'#10'        case ''Number'':'#10'        case ''Float'':'#10
  +'        case ''Integer'':'#10'          for (let i = 0; i < subKernels.leng'
  +'th; i++) {'#10'            const subKernel = subKernels[i];'#10'           '
  +' result.push('#10'              subKernel.returnType === ''Integer'' ?'#10
  +'              `int subKernelResult_${ subKernel.name } = 0` :'#10'         '
  +'     `float subKernelResult_${ subKernel.name } = 0.0`'#10'            );'
  +#10'          }'#10'          break;'#10'        case ''Array(2)'':'#10'    '
  +'      for (let i = 0; i < subKernels.length; i++) {'#10'            result.'
  +'push('#10'              `vec2 subKernelResult_${ subKernels[i].name }`'#10
  +'            );'#10'          }'#10'          break;'#10'        case ''Arra'
  +'y(3)'':'#10'          for (let i = 0; i < subKernels.length; i++) {'#10'   '
  +'         result.push('#10'              `vec3 subKernelResult_${ subKernels'
  +'[i].name }`'#10'            );'#10'          }'#10'          break;'#10'   '
  +'     case ''Array(4)'':'#10'          for (let i = 0; i < subKernels.length'
  +'; i++) {'#10'            result.push('#10'              `vec4 subKernelResu'
  +'lt_${ subKernels[i].name }`'#10'            );'#10'          }'#10'        '
  +'  break;'#10'      }'#10'    }'#10#10'    return utils.linesToString(result'
  +') + this.translatedSource;'#10'  }'#10#10'  getMainResultGraphical() {'#10
  +'    return utils.linesToString(['#10'      ''  threadId = indexTo3D(index, '
  +'uOutputDim)'','#10'      ''  kernel()'','#10'      ''  gl_FragColor = actua'
  +'lColor'','#10'    ]);'#10'  }'#10#10'  getMainResultPackedPixels() {'#10'  '
  +'  switch (this.returnType) {'#10'      case ''LiteralInteger'':'#10'      c'
  +'ase ''Number'':'#10'      case ''Integer'':'#10'      case ''Float'':'#10' '
  +'       return this.getMainResultKernelPackedPixels() +'#10'          this.g'
  +'etMainResultSubKernelPackedPixels();'#10'      default:'#10'        throw n'
  +'ew Error(`packed output only usable with Numbers, "${this.returnType}" spec'
  ,'ified`);'#10'    }'#10'  }'#10#10'  getMainResultKernelPackedPixels() {'#10
  +'    return utils.linesToString(['#10'      ''  threadId = indexTo3D(index, '
  +'uOutputDim)'','#10'      ''  kernel()'','#10'      `  gl_FragData[0] = ${th'
  +'is.useLegacyEncoder ? ''legacyEncode32'' : ''encode32''}(kernelResult)`'#10
  +'    ]);'#10'  }'#10#10'  getMainResultSubKernelPackedPixels() {'#10'    con'
  +'st result = [];'#10'    if (!this.subKernels) return '''';'#10'    for (let'
  +' i = 0; i < this.subKernels.length; i++) {'#10'      const subKernel = this'
  +'.subKernels[i];'#10'      if (subKernel.returnType === ''Integer'') {'#10' '
  +'       result.push('#10'          `  gl_FragData[${i + 1}] = ${this.useLega'
  +'cyEncoder ? ''legacyEncode32'' : ''encode32''}(float(subKernelResult_${this'
  +'.subKernels[i].name}))`'#10'        );'#10'      } else {'#10'        resul'
  +'t.push('#10'          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? '
  +'''legacyEncode32'' : ''encode32''}(subKernelResult_${this.subKernels[i].nam'
  +'e})`'#10'        );'#10'      }'#10'    }'#10'    return utils.linesToStrin'
  +'g(result);'#10'  }'#10#10'  getMainResultMemoryOptimizedFloats() {'#10'    '
  +'const result = ['#10'      ''  index *= 4'','#10'    ];'#10#10'    switch ('
  +'this.returnType) {'#10'      case ''Number'':'#10'      case ''Integer'':'
  +#10'      case ''Float'':'#10'        const channels = [''r'', ''g'', ''b'','
  +' ''a''];'#10'        for (let i = 0; i < channels.length; i++) {'#10'      '
  +'    const channel = channels[i];'#10'          this.getMainResultKernelMemo'
  +'ryOptimizedFloats(result, channel);'#10'          this.getMainResultSubKern'
  +'elMemoryOptimizedFloats(result, channel);'#10'          if (i + 1 < channel'
  +'s.length) {'#10'            result.push(''  index += 1'');'#10'          }'
  +#10'        }'#10'        break;'#10'      default:'#10'        throw new Er'
  +'ror(`optimized output only usable with Numbers, ${this.returnType} specifie'
  +'d`);'#10'    }'#10#10'    return utils.linesToString(result);'#10'  }'#10#10
  +'  getMainResultKernelMemoryOptimizedFloats(result, channel) {'#10'    resul'
  +'t.push('#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'      '
  +'''  kernel()'','#10'      `  gl_FragData[0].${channel} = kernelResult`,'#10
  +'    );'#10'  }'#10#10'  getMainResultSubKernelMemoryOptimizedFloats(result,'
  +' channel) {'#10'    if (!this.subKernels) return result;'#10'    for (let i'
  +' = 0; i < this.subKernels.length; i++) {'#10'      const subKernel = this.s'
  +'ubKernels[i];'#10'      if (subKernel.returnType === ''Integer'') {'#10'   '
  +'     result.push('#10'          `  gl_FragData[${i + 1}].${channel} = float'
  +'(subKernelResult_${this.subKernels[i].name})`,'#10'        );'#10'      } e'
  +'lse {'#10'        result.push('#10'          `  gl_FragData[${i + 1}].${cha'
  +'nnel} = subKernelResult_${this.subKernels[i].name}`,'#10'        );'#10'   '
  +'   }'#10'    }'#10'  }'#10#10'  getMainResultKernelNumberTexture() {'#10'  '
  +'  return ['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'   '
  +'   ''  kernel()'','#10'      ''  gl_FragData[0][0] = kernelResult'','#10'  '
  +'  ];'#10'  }'#10#10'  getMainResultSubKernelNumberTexture() {'#10'    const'
  +' result = [];'#10'    if (!this.subKernels) return result;'#10'    for (let'
  +' i = 0; i < this.subKernels.length; ++i) {'#10'      const subKernel = this'
  +'.subKernels[i];'#10'      if (subKernel.returnType === ''Integer'') {'#10' '
  +'       result.push('#10'          `  gl_FragData[${i + 1}][0] = float(subKe'
  +'rnelResult_${subKernel.name})`,'#10'        );'#10'      } else {'#10'     '
  +'   result.push('#10'          `  gl_FragData[${i + 1}][0] = subKernelResult'
  +'_${subKernel.name}`,'#10'        );'#10'      }'#10'    }'#10'    return re'
  +'sult;'#10'  }'#10#10'  getMainResultKernelArray2Texture() {'#10'    return '
  +'['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'      ''  ke'
  +'rnel()'','#10'      ''  gl_FragData[0][0] = kernelResult[0]'','#10'      '''
  +'  gl_FragData[0][1] = kernelResult[1]'','#10'    ];'#10'  }'#10#10'  getMai'
  +'nResultSubKernelArray2Texture() {'#10'    const result = [];'#10'    if (!t'
  +'his.subKernels) return result;'#10'    for (let i = 0; i < this.subKernels.'
  +'length; ++i) {'#10'      result.push('#10'        `  gl_FragData[${i + 1}]['
  +'0] = subKernelResult_${this.subKernels[i].name}[0]`,'#10'        `  gl_Frag'
  +'Data[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,'#10'   '
  +'   );'#10'    }'#10'    return result;'#10'  }'#10#10'  getMainResultKernel'
  +'Array3Texture() {'#10'    return ['#10'      ''  threadId = indexTo3D(index'
  +', uOutputDim)'','#10'      ''  kernel()'','#10'      ''  gl_FragData[0][0] '
  +'= kernelResult[0]'','#10'      ''  gl_FragData[0][1] = kernelResult[1]'','
  +#10'      ''  gl_FragData[0][2] = kernelResult[2]'','#10'    ];'#10'  }'#10
  +#10'  getMainResultSubKernelArray3Texture() {'#10'    const result = [];'#10
  +'    if (!this.subKernels) return result;'#10'    for (let i = 0; i < this.s'
  ,'ubKernels.length; ++i) {'#10'      result.push('#10'        `  gl_FragData['
  +'${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,'#10'        '
  +'`  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]'
  +'`,'#10'        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKern'
  +'els[i].name}[2]`,'#10'      );'#10'    }'#10'    return result;'#10'  }'#10
  +#10'  getMainResultKernelArray4Texture() {'#10'    return ['#10'      ''  th'
  +'readId = indexTo3D(index, uOutputDim)'','#10'      ''  kernel()'','#10'    '
  +'  ''  gl_FragData[0] = kernelResult'','#10'    ];'#10'  }'#10#10'  getMainR'
  +'esultSubKernelArray4Texture() {'#10'    const result = [];'#10'    if (!thi'
  +'s.subKernels) return result;'#10'    switch (this.returnType) {'#10'      c'
  +'ase ''Number'':'#10'      case ''Float'':'#10'      case ''Integer'':'#10' '
  +'       for (let i = 0; i < this.subKernels.length; ++i) {'#10'          con'
  +'st subKernel = this.subKernels[i];'#10'          if (subKernel.returnType ='
  +'== ''Integer'') {'#10'            result.push('#10'              `  gl_Frag'
  +'Data[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,'#10'  '
  +'          );'#10'          } else {'#10'            result.push('#10'      '
  +'        `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].nam'
  +'e}`,'#10'            );'#10'          }'#10'        }'#10'        break;'#10
  +'      case ''Array(2)'':'#10'        for (let i = 0; i < this.subKernels.le'
  +'ngth; ++i) {'#10'          result.push('#10'            `  gl_FragData[${i '
  +'+ 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,'#10'            '
  +'`  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]'
  +'`,'#10'          );'#10'        }'#10'        break;'#10'      case ''Array'
  +'(3)'':'#10'        for (let i = 0; i < this.subKernels.length; ++i) {'#10' '
  +'         result.push('#10'            `  gl_FragData[${i + 1}][0] = subKern'
  +'elResult_${this.subKernels[i].name}[0]`,'#10'            `  gl_FragData[${i'
  +' + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,'#10'           '
  +' `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2'
  +']`,'#10'          );'#10'        }'#10'        break;'#10'      case ''Arra'
  +'y(4)'':'#10'        for (let i = 0; i < this.subKernels.length; ++i) {'#10
  +'          result.push('#10'            `  gl_FragData[${i + 1}][0] = subKer'
  +'nelResult_${this.subKernels[i].name}[0]`,'#10'            `  gl_FragData[${'
  +'i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,'#10'          '
  +'  `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}['
  +'2]`,'#10'            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.s'
  +'ubKernels[i].name}[3]`,'#10'          );'#10'        }'#10'        break;'
  +#10'    }'#10#10'    return result;'#10'  }'#10#10'  replaceArtifacts(src, m'
  +'ap) {'#10'    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__'
  +';\n/g, (match, artifact) => {'#10'      if (map.hasOwnProperty(artifact)) {'
  +#10'        return map[artifact];'#10'      }'#10'      throw `unhandled art'
  +'ifact ${artifact}`;'#10'    });'#10'  }'#10#10'  getFragmentShader(args) {'
  +#10'    if (this.compiledFragmentShader !== null) {'#10'      return this.co'
  +'mpiledFragmentShader;'#10'    }'#10'    return this.compiledFragmentShader '
  +'= this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShade'
  +'rArtifactMap(args));'#10'  }'#10#10'  getVertexShader(args) {'#10'    if (t'
  +'his.compiledVertexShader !== null) {'#10'      return this.compiledVertexSh'
  +'ader;'#10'    }'#10'    return this.compiledVertexShader = this.replaceArti'
  +'facts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));'
  +#10'  }'#10#10'  toString() {'#10'    const setupContextString = utils.lines'
  +'ToString(['#10'      `const gl = context`,'#10'    ]);'#10'    return glKer'
  +'nelString(this.constructor, arguments, this, setupContextString);'#10'  }'
  +#10#10'  destroy(removeCanvasReferences) {'#10'    if (!this.context) return'
  +';'#10'    if (this.buffer) {'#10'      this.context.deleteBuffer(this.buffe'
  +'r);'#10'    }'#10'    if (this.framebuffer) {'#10'      this.context.delete'
  +'Framebuffer(this.framebuffer);'#10'    }'#10'    if (this.vertShader) {'#10
  +'      this.context.deleteShader(this.vertShader);'#10'    }'#10'    if (thi'
  +'s.fragShader) {'#10'      this.context.deleteShader(this.fragShader);'#10' '
  +'   }'#10'    if (this.program) {'#10'      this.context.deleteProgram(this.'
  +'program);'#10'    }'#10'    if (this.texture) {'#10'      this.texture.dele'
  +'te();'#10'      const textureCacheIndex = this.textureCache.indexOf(this.te'
  +'xture.texture);'#10'      if (textureCacheIndex > -1) {'#10'        this.te'
  +'xtureCache.splice(textureCacheIndex, 1);'#10'      }'#10'      this.texture'
  +' = null;'#10'    }'#10'    if (this.mappedTextures && this.mappedTextures.l'
  +'ength) {'#10'      for (let i = 0; i < this.mappedTextures.length; i++) {'
  ,#10'        const mappedTexture = this.mappedTextures[i];'#10'        mapped'
  +'Texture.delete();'#10'        const textureCacheIndex = this.textureCache.i'
  +'ndexOf(mappedTexture.texture);'#10'        if (textureCacheIndex > -1) {'#10
  +'          this.textureCache.splice(textureCacheIndex, 1);'#10'        }'#10
  +'      }'#10'      this.mappedTextures = null;'#10'    }'#10'    if (this.ke'
  +'rnelArguments) {'#10'      for (let i = 0; i < this.kernelArguments.length;'
  +' i++) {'#10'        this.kernelArguments[i].destroy();'#10'      }'#10'    '
  +'}'#10'    if (this.kernelConstants) {'#10'      for (let i = 0; i < this.ke'
  +'rnelConstants.length; i++) {'#10'        this.kernelConstants[i].destroy();'
  +#10'      }'#10'    }'#10'    while (this.textureCache.length > 0) {'#10'   '
  +'   const texture = this.textureCache.pop();'#10'      this.context.deleteTe'
  +'xture(texture);'#10'    }'#10'    if (removeCanvasReferences) {'#10'      c'
  +'onst idx = canvases.indexOf(this.canvas);'#10'      if (idx >= 0) {'#10'   '
  +'     canvases[idx] = null;'#10'        maxTexSizes[idx] = null;'#10'      }'
  +#10'    }'#10'    this.destroyExtensions();'#10'    delete this.context;'#10
  +'    delete this.canvas;'#10'    if (!this.gpu) return;'#10'    const i = th'
  +'is.gpu.kernels.indexOf(this);'#10'    if (i === -1) return;'#10'    this.gp'
  +'u.kernels.splice(i, 1);'#10'  }'#10#10'  destroyExtensions() {'#10'    this'
  +'.extensions.OES_texture_float = null;'#10'    this.extensions.OES_texture_f'
  +'loat_linear = null;'#10'    this.extensions.OES_element_index_uint = null;'
  +#10'    this.extensions.WEBGL_draw_buffers = null;'#10'  }'#10#10'  static d'
  +'estroyContext(context) {'#10'    const extension = context.getExtension(''W'
  +'EBGL_lose_context'');'#10'    if (extension) {'#10'      extension.loseCont'
  +'ext();'#10'    }'#10'  }'#10#10'  toJSON() {'#10'    const json = super.toJ'
  +'SON();'#10'    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLF'
  +'unctionNode).toJSON();'#10'    json.settings.threadDim = this.threadDim;'#10
  +'    return json;'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernel'
  +#10'};'#10'},{"../../plugins/math-random-uniformly-distributed":112,"../../u'
  +'tils":114,"../function-builder":9,"../gl/kernel":13,"../gl/kernel-string":1'
  +'2,"./fragment-shader":37,"./function-node":38,"./kernel-value-maps":39,"./v'
  +'ertex-shader":71}],71:[function(require,module,exports){'#10'const vertexSh'
  +'ader = `__FLOAT_TACTIC_DECLARATION__;'#10'__INT_TACTIC_DECLARATION__;'#10'_'
  +'_SAMPLER_2D_TACTIC_DECLARATION__;'#10#10'attribute vec2 aPos;'#10'attribute'
  +' vec2 aTexCoord;'#10#10'varying vec2 vTexCoord;'#10'uniform vec2 ratio;'#10
  +#10'void main(void) {'#10'  gl_Position = vec4((aPos + vec2(1)) * ratio + ve'
  +'c2(-1), 0, 1);'#10'  vTexCoord = aTexCoord;'#10'}`;'#10#10'module.exports ='
  +' {'#10'  vertexShader'#10'};'#10'},{}],72:[function(require,module,exports)'
  +'{'#10'const fragmentShader = `#version 300 es'#10'__HEADER__;'#10'__FLOAT_T'
  +'ACTIC_DECLARATION__;'#10'__INT_TACTIC_DECLARATION__;'#10'__SAMPLER_2D_TACTI'
  +'C_DECLARATION__;'#10'__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;'#10#10'const '
  +'int LOOP_MAX = __LOOP_MAX__;'#10#10'__PLUGINS__;'#10'__CONSTANTS__;'#10#10
  +'in vec2 vTexCoord;'#10#10'float atan2(float v1, float v2) {'#10'  if (v1 =='
  +' 0.0 || v2 == 0.0) return 0.0;'#10'  return atan(v1 / v2);'#10'}'#10#10'flo'
  +'at cbrt(float x) {'#10'  if (x >= 0.0) {'#10'    return pow(x, 1.0 / 3.0);'
  +#10'  } else {'#10'    return -pow(x, 1.0 / 3.0);'#10'  }'#10'}'#10#10'float'
  +' expm1(float x) {'#10'  return pow(${Math.E}, x) - 1.0; '#10'}'#10#10'float'
  +' fround(highp float x) {'#10'  return x;'#10'}'#10#10'float imul(float v1, '
  +'float v2) {'#10'  return float(int(v1) * int(v2));'#10'}'#10#10'float log10'
  +'(float x) {'#10'  return log2(x) * (1.0 / log2(10.0));'#10'}'#10#10'float l'
  +'og1p(float x) {'#10'  return log(1.0 + x);'#10'}'#10#10'float _pow(float v1'
  +', float v2) {'#10'  if (v2 == 0.0) return 1.0;'#10'  return pow(v1, v2);'#10
  +'}'#10#10'float _round(float x) {'#10'  return floor(x + 0.5);'#10'}'#10#10
  +#10'const int BIT_COUNT = 32;'#10'int modi(int x, int y) {'#10'  return x - '
  +'y * (x / y);'#10'}'#10#10'int bitwiseOr(int a, int b) {'#10'  int result = '
  +'0;'#10'  int n = 1;'#10'  '#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10
  +'    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {'#10'      result += n;'#10
  +'    }'#10'    a = a / 2;'#10'    b = b / 2;'#10'    n = n * 2;'#10'    if(!'
  +'(a > 0 || b > 0)) {'#10'      break;'#10'    }'#10'  }'#10'  return result;'
  +#10'}'#10'int bitwiseXOR(int a, int b) {'#10'  int result = 0;'#10'  int n ='
  +' 1;'#10'  '#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if ((modi(a,'
  +' 2) == 1) != (modi(b, 2) == 1)) {'#10'      result += n;'#10'    }'#10'    '
  +'a = a / 2;'#10'    b = b / 2;'#10'    n = n * 2;'#10'    if(!(a > 0 || b > '
  +'0)) {'#10'      break;'#10'    }'#10'  }'#10'  return result;'#10'}'#10'int'
  +' bitwiseAnd(int a, int b) {'#10'  int result = 0;'#10'  int n = 1;'#10'  fo'
  ,'r (int i = 0; i < BIT_COUNT; i++) {'#10'    if ((modi(a, 2) == 1) && (modi('
  +'b, 2) == 1)) {'#10'      result += n;'#10'    }'#10'    a = a / 2;'#10'    '
  +'b = b / 2;'#10'    n = n * 2;'#10'    if(!(a > 0 && b > 0)) {'#10'      bre'
  +'ak;'#10'    }'#10'  }'#10'  return result;'#10'}'#10'int bitwiseNot(int a) '
  +'{'#10'  int result = 0;'#10'  int n = 1;'#10'  '#10'  for (int i = 0; i < B'
  +'IT_COUNT; i++) {'#10'    if (modi(a, 2) == 0) {'#10'      result += n;    '
  +#10'    }'#10'    a = a / 2;'#10'    n = n * 2;'#10'  }'#10'  return result;'
  +#10'}'#10'int bitwiseZeroFillLeftShift(int n, int shift) {'#10'  int maxByte'
  +'s = BIT_COUNT;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (maxB'
  +'ytes >= n) {'#10'      break;'#10'    }'#10'    maxBytes *= 2;'#10'  }'#10
  +'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (i >= shift) {'#10'     '
  +' break;'#10'    }'#10'    n *= 2;'#10'  }'#10#10'  int result = 0;'#10'  in'
  +'t byteVal = 1;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (i >='
  +' maxBytes) break;'#10'    if (modi(n, 2) > 0) { result += byteVal; }'#10'  '
  +'  n = int(n / 2);'#10'    byteVal *= 2;'#10'  }'#10'  return result;'#10'}'
  +#10#10'int bitwiseSignedRightShift(int num, int shifts) {'#10'  return int(f'
  +'loor(float(num) / pow(2.0, float(shifts))));'#10'}'#10#10'int bitwiseZeroFi'
  +'llRightShift(int n, int shift) {'#10'  int maxBytes = BIT_COUNT;'#10'  for '
  +'(int i = 0; i < BIT_COUNT; i++) {'#10'    if (maxBytes >= n) {'#10'      br'
  +'eak;'#10'    }'#10'    maxBytes *= 2;'#10'  }'#10'  for (int i = 0; i < BIT'
  +'_COUNT; i++) {'#10'    if (i >= shift) {'#10'      break;'#10'    }'#10'   '
  +' n /= 2;'#10'  }'#10'  int result = 0;'#10'  int byteVal = 1;'#10'  for (in'
  +'t i = 0; i < BIT_COUNT; i++) {'#10'    if (i >= maxBytes) break;'#10'    if'
  +' (modi(n, 2) > 0) { result += byteVal; }'#10'    n = int(n / 2);'#10'    by'
  +'teVal *= 2;'#10'  }'#10'  return result;'#10'}'#10#10'vec2 integerMod(vec2 '
  +'x, float y) {'#10'  vec2 res = floor(mod(x, y));'#10'  return res * step(1.'
  +'0 - floor(y), -res);'#10'}'#10#10'vec3 integerMod(vec3 x, float y) {'#10'  '
  +'vec3 res = floor(mod(x, y));'#10'  return res * step(1.0 - floor(y), -res);'
  +#10'}'#10#10'vec4 integerMod(vec4 x, vec4 y) {'#10'  vec4 res = floor(mod(x,'
  +' y));'#10'  return res * step(1.0 - floor(y), -res);'#10'}'#10#10'float int'
  +'egerMod(float x, float y) {'#10'  float res = floor(mod(x, y));'#10'  retur'
  +'n res * (res > floor(y) - 1.0 ? 0.0 : 1.0);'#10'}'#10#10'int integerMod(int'
  +' x, int y) {'#10'  return x - (y * int(x/y));'#10'}'#10#10'__DIVIDE_WITH_IN'
  +'TEGER_CHECK__;'#10#10'// Here be dragons!'#10'// DO NOT OPTIMIZE THIS CODE'
  +#10'// YOU WILL BREAK SOMETHING ON SOMEBODY\''S MACHINE'#10'// LEAVE IT AS I'
  +'T IS, LEST YOU WASTE YOUR OWN TIME'#10'const vec2 MAGIC_VEC = vec2(1.0, -25'
  +'6.0);'#10'const vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);'#10'con'
  +'st vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); '
  +'// 1, 1/256, 1/65536'#10'float decode32(vec4 texel) {'#10'  __DECODE32_ENDI'
  +'ANNESS__;'#10'  texel *= 255.0;'#10'  vec2 gte128;'#10'  gte128.x = texel.b'
  +' >= 128.0 ? 1.0 : 0.0;'#10'  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;'#10' '
  +' float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);'#10'  flo'
  +'at res = exp2(round(exponent));'#10'  texel.b = texel.b - 128.0 * gte128.x;'
  +#10'  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;'#10
  +'  res *= gte128.y * -2.0 + 1.0;'#10'  return res;'#10'}'#10#10'float decode'
  +'16(vec4 texel, int index) {'#10'  int channel = integerMod(index, 2);'#10' '
  +' return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;'#10'}'#10
  +#10'float decode8(vec4 texel, int index) {'#10'  int channel = integerMod(in'
  +'dex, 4);'#10'  return texel[channel] * 255.0;'#10'}'#10#10'vec4 legacyEncod'
  +'e32(float f) {'#10'  float F = abs(f);'#10'  float sign = f < 0.0 ? 1.0 : 0'
  +'.0;'#10'  float exponent = floor(log2(F));'#10'  float mantissa = (exp2(-ex'
  +'ponent) * F);'#10'  // exponent += floor(log2(mantissa));'#10'  vec4 texel '
  +'= vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;'#10'  texel.rg = intege'
  +'rMod(texel.rg, 256.0);'#10'  texel.b = integerMod(texel.b, 128.0);'#10'  te'
  +'xel.a = exponent*0.5 + 63.5;'#10'  texel.ba += vec2(integerMod(exponent+127'
  +'.0, 2.0), sign) * 128.0;'#10'  texel = floor(texel);'#10'  texel *= 0.00392'
  +'1569; // 1/255'#10'  __ENCODE32_ENDIANNESS__;'#10'  return texel;'#10'}'#10
  +#10'// https://github.com/gpujs/gpu.js/wiki/Encoder-details'#10'vec4 encode3'
  +'2(float value) {'#10'  if (value == 0.0) return vec4(0, 0, 0, 0);'#10#10'  '
  +'float exponent;'#10'  float mantissa;'#10'  vec4  result;'#10'  float sgn;'
  +#10#10'  sgn = step(0.0, -value);'#10'  value = abs(value);'#10#10'  exponen'
  +'t = floor(log2(value));'#10#10'  mantissa = value*pow(2.0, -exponent)-1.0;'
  +#10'  exponent = exponent+127.0;'#10'  result   = vec4(0,0,0,0);'#10#10'  re'
  +'sult.a = floor(exponent/2.0);'#10'  exponent = exponent - result.a*2.0;'#10
  ,'  result.a = result.a + 128.0*sgn;'#10#10'  result.b = floor(mantissa * 128'
  +'.0);'#10'  mantissa = mantissa - result.b / 128.0;'#10'  result.b = result.'
  +'b + exponent*128.0;'#10#10'  result.g = floor(mantissa*32768.0);'#10'  mant'
  +'issa = mantissa - result.g/32768.0;'#10#10'  result.r = floor(mantissa*8388'
  +'608.0);'#10'  return result/255.0;'#10'}'#10'// Dragons end here'#10#10'int'
  +' index;'#10'ivec3 threadId;'#10#10'ivec3 indexTo3D(int idx, ivec3 texDim) {'
  +#10'  int z = int(idx / (texDim.x * texDim.y));'#10'  idx -= z * int(texDim.'
  +'x * texDim.y);'#10'  int y = int(idx / texDim.x);'#10'  int x = int(integer'
  +'Mod(idx, texDim.x));'#10'  return ivec3(x, y, z);'#10'}'#10#10'float get32('
  +'sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  in'
  +'t index = x + texDim.x * (y + texDim.y * z);'#10'  int w = texSize.x;'#10' '
  +' vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10' '
  +' vec4 texel = texture(tex, st / vec2(texSize));'#10'  return decode32(texel'
  +');'#10'}'#10#10'float get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int'
  +' z, int y, int x) {'#10'  int index = x + (texDim.x * (y + (texDim.y * z)))'
  +';'#10'  int w = texSize.x * 2;'#10'  vec2 st = vec2(float(integerMod(index,'
  +' w)), float(index / w)) + 0.5;'#10'  vec4 texel = texture(tex, st / vec2(te'
  +'xSize.x * 2, texSize.y));'#10'  return decode16(texel, index);'#10'}'#10#10
  +'float get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x)'
  +' {'#10'  int index = x + (texDim.x * (y + (texDim.y * z)));'#10'  int w = t'
  +'exSize.x * 4;'#10'  vec2 st = vec2(float(integerMod(index, w)), float(index'
  +' / w)) + 0.5;'#10'  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texS'
  +'ize.y));'#10'  return decode8(texel, index);'#10'}'#10#10'float getMemoryOp'
  +'timized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) '
  +'{'#10'  int index = x + (texDim.x * (y + (texDim.y * z)));'#10'  int channe'
  +'l = integerMod(index, 4);'#10'  index = index / 4;'#10'  int w = texSize.x;'
  +#10'  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'
  +#10'  index = index / 4;'#10'  vec4 texel = texture(tex, st / vec2(texSize))'
  +';'#10'  return texel[channel];'#10'}'#10#10'vec4 getImage2D(sampler2D tex, '
  +'ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + t'
  +'exDim.x * (y + texDim.y * z);'#10'  int w = texSize.x;'#10'  vec2 st = vec2'
  +'(float(integerMod(index, w)), float(index / w)) + 0.5;'#10'  return texture'
  +'(tex, st / vec2(texSize));'#10'}'#10#10'vec4 getImage3D(sampler2DArray tex,'
  +' ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + '
  +'texDim.x * (y + texDim.y * z);'#10'  int w = texSize.x;'#10'  vec2 st = vec'
  +'2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10'  return textur'
  +'e(tex, vec3(st / vec2(texSize), z));'#10'}'#10#10'float getFloatFromSampler'
  +'2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10' '
  +' vec4 result = getImage2D(tex, texSize, texDim, z, y, x);'#10'  return resu'
  +'lt[0];'#10'}'#10#10'vec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize,'
  +' ivec3 texDim, int z, int y, int x) {'#10'  vec4 result = getImage2D(tex, t'
  +'exSize, texDim, z, y, x);'#10'  return vec2(result[0], result[1]);'#10'}'#10
  +#10'vec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, '
  +'int z, int y, int x) {'#10'  int index = x + texDim.x * (y + texDim.y * z);'
  +#10'  int channel = integerMod(index, 2);'#10'  index = index / 2;'#10'  int'
  +' w = texSize.x;'#10'  vec2 st = vec2(float(integerMod(index, w)), float(ind'
  +'ex / w)) + 0.5;'#10'  vec4 texel = texture(tex, st / vec2(texSize));'#10'  '
  +'if (channel == 0) return vec2(texel.r, texel.g);'#10'  if (channel == 1) re'
  +'turn vec2(texel.b, texel.a);'#10'  return vec2(0.0, 0.0);'#10'}'#10#10'vec3'
  +' getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, in'
  +'t y, int x) {'#10'  vec4 result = getImage2D(tex, texSize, texDim, z, y, x)'
  +';'#10'  return vec3(result[0], result[1], result[2]);'#10'}'#10#10'vec3 get'
  +'MemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int '
  +'y, int x) {'#10'  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));'
  +#10'  int vectorIndex = fieldIndex / 4;'#10'  int vectorOffset = fieldIndex '
  +'- vectorIndex * 4;'#10'  int readY = vectorIndex / texSize.x;'#10'  int rea'
  +'dX = vectorIndex - readY * texSize.x;'#10'  vec4 tex1 = texture(tex, (vec2('
  +'readX, readY) + 0.5) / vec2(texSize));'#10#10'  if (vectorOffset == 0) {'#10
  +'    return tex1.xyz;'#10'  } else if (vectorOffset == 1) {'#10'    return t'
  +'ex1.yzw;'#10'  } else {'#10'    readX++;'#10'    if (readX >= texSize.x) {'
  +#10'      readX = 0;'#10'      readY++;'#10'    }'#10'    vec4 tex2 = textur'
  +'e(tex, vec2(readX, readY) / vec2(texSize));'#10'    if (vectorOffset == 2) '
  +'{'#10'      return vec3(tex1.z, tex1.w, tex2.x);'#10'    } else {'#10'     '
  +' return vec3(tex1.w, tex2.x, tex2.y);'#10'    }'#10'  }'#10'}'#10#10'vec4 g'
  ,'etVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int '
  +'y, int x) {'#10'  return getImage2D(tex, texSize, texDim, z, y, x);'#10'}'
  +#10#10'vec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDi'
  +'m, int z, int y, int x) {'#10'  int index = x + texDim.x * (y + texDim.y * '
  +'z);'#10'  int channel = integerMod(index, 2);'#10'  int w = texSize.x;'#10
  +'  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10
  +'  vec4 texel = texture(tex, st / vec2(texSize));'#10'  return vec4(texel.r,'
  +' texel.g, texel.b, texel.a);'#10'}'#10#10'vec4 actualColor;'#10'void color('
  +'float r, float g, float b, float a) {'#10'  actualColor = vec4(r,g,b,a);'#10
  +'}'#10#10'void color(float r, float g, float b) {'#10'  color(r,g,b,1.0);'#10
  +'}'#10#10'float modulo(float number, float divisor) {'#10'  if (number < 0.0'
  +') {'#10'    number = abs(number);'#10'    if (divisor < 0.0) {'#10'      di'
  +'visor = abs(divisor);'#10'    }'#10'    return -mod(number, divisor);'#10' '
  +' }'#10'  if (divisor < 0.0) {'#10'    divisor = abs(divisor);'#10'  }'#10' '
  +' return mod(number, divisor);'#10'}'#10#10'__INJECTED_NATIVE__;'#10'__MAIN_'
  +'CONSTANTS__;'#10'__MAIN_ARGUMENTS__;'#10'__KERNEL__;'#10#10'void main(void)'
  +' {'#10'  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * f'
  +'loat(uTexSize.y)) * uTexSize.x;'#10'  __MAIN_RESULT__;'#10'}`;'#10#10'modul'
  +'e.exports = {'#10'  fragmentShader'#10'};'#10'},{}],73:[function(require,mo'
  +'dule,exports){'#10'const { utils } = require(''../../utils'');'#10'const { '
  +'WebGLFunctionNode } = require(''../web-gl/function-node'');'#10#10'class We'
  +'bGL2FunctionNode extends WebGLFunctionNode {'#10#10'  astIdentifierExpressi'
  +'on(idtNode, retArr) {'#10'    if (idtNode.type !== ''Identifier'') {'#10'  '
  +'    throw this.astErrorOutput('#10'        ''IdentifierExpression - not an '
  +'Identifier'','#10'        idtNode'#10'      );'#10'    }'#10#10'    const t'
  +'ype = this.getType(idtNode);'#10#10'    const name = utils.sanitizeName(idt'
  +'Node.name);'#10'    if (idtNode.name === ''Infinity'') {'#10'      retArr.p'
  +'ush(''intBitsToFloat(2139095039)'');'#10'    } else if (type === ''Boolean'
  +''') {'#10'      if (this.argumentNames.indexOf(name) > -1) {'#10'        re'
  +'tArr.push(`bool(user_${name})`);'#10'      } else {'#10'        retArr.push'
  +'(`user_${name}`);'#10'      }'#10'    } else {'#10'      retArr.push(`user_'
  +'${name}`);'#10'    }'#10#10'    return retArr;'#10'  }'#10'}'#10#10'module.'
  +'exports = {'#10'  WebGL2FunctionNode'#10'};'#10'},{"../../utils":114,"../we'
  +'b-gl/function-node":38}],74:[function(require,module,exports){'#10'const { '
  +'WebGL2KernelValueBoolean } = require(''./kernel-value/boolean'');'#10'const'
  +' { WebGL2KernelValueFloat } = require(''./kernel-value/float'');'#10'const '
  +'{ WebGL2KernelValueInteger } = require(''./kernel-value/integer'');'#10#10
  +'const { WebGL2KernelValueHTMLImage } = require(''./kernel-value/html-image'
  +''');'#10'const { WebGL2KernelValueDynamicHTMLImage } = require(''./kernel-v'
  +'alue/dynamic-html-image'');'#10#10'const { WebGL2KernelValueHTMLImageArray '
  +'} = require(''./kernel-value/html-image-array'');'#10'const { WebGL2KernelV'
  +'alueDynamicHTMLImageArray } = require(''./kernel-value/dynamic-html-image-a'
  +'rray'');'#10#10'const { WebGL2KernelValueHTMLVideo } = require(''./kernel-v'
  +'alue/html-video'');'#10'const { WebGL2KernelValueDynamicHTMLVideo } = requi'
  +'re(''./kernel-value/dynamic-html-video'');'#10#10'const { WebGL2KernelValue'
  +'SingleInput } = require(''./kernel-value/single-input'');'#10'const { WebGL'
  +'2KernelValueDynamicSingleInput } = require(''./kernel-value/dynamic-single-'
  +'input'');'#10#10'const { WebGL2KernelValueUnsignedInput } = require(''./ker'
  +'nel-value/unsigned-input'');'#10'const { WebGL2KernelValueDynamicUnsignedIn'
  +'put } = require(''./kernel-value/dynamic-unsigned-input'');'#10#10'const { '
  +'WebGL2KernelValueMemoryOptimizedNumberTexture } = require(''./kernel-value/'
  +'memory-optimized-number-texture'');'#10'const { WebGL2KernelValueDynamicMem'
  +'oryOptimizedNumberTexture } = require(''./kernel-value/dynamic-memory-optim'
  +'ized-number-texture'');'#10#10'const { WebGL2KernelValueNumberTexture } = r'
  +'equire(''./kernel-value/number-texture'');'#10'const { WebGL2KernelValueDyn'
  +'amicNumberTexture } = require(''./kernel-value/dynamic-number-texture'');'
  +#10#10'const { WebGL2KernelValueSingleArray } = require(''./kernel-value/sin'
  +'gle-array'');'#10'const { WebGL2KernelValueDynamicSingleArray } = require('
  +'''./kernel-value/dynamic-single-array'');'#10#10'const { WebGL2KernelValueS'
  +'ingleArray1DI } = require(''./kernel-value/single-array1d-i'');'#10'const {'
  +' WebGL2KernelValueDynamicSingleArray1DI } = require(''./kernel-value/dynami'
  +'c-single-array1d-i'');'#10#10'const { WebGL2KernelValueSingleArray2DI } = r'
  +'equire(''./kernel-value/single-array2d-i'');'#10'const { WebGL2KernelValueD'
  +'ynamicSingleArray2DI } = require(''./kernel-value/dynamic-single-array2d-i'
  ,''');'#10#10'const { WebGL2KernelValueSingleArray3DI } = require(''./kernel-'
  +'value/single-array3d-i'');'#10'const { WebGL2KernelValueDynamicSingleArray3'
  +'DI } = require(''./kernel-value/dynamic-single-array3d-i'');'#10#10'const {'
  +' WebGL2KernelValueSingleArray2 } = require(''./kernel-value/single-array2'''
  +');'#10'const { WebGL2KernelValueSingleArray3 } = require(''./kernel-value/s'
  +'ingle-array3'');'#10'const { WebGL2KernelValueSingleArray4 } = require(''./'
  +'kernel-value/single-array4'');'#10#10'const { WebGL2KernelValueUnsignedArra'
  +'y } = require(''./kernel-value/unsigned-array'');'#10'const { WebGL2KernelV'
  +'alueDynamicUnsignedArray } = require(''./kernel-value/dynamic-unsigned-arra'
  +'y'');'#10#10'const kernelValueMaps = {'#10'  unsigned: {'#10'    dynamic: {'
  +#10'      ''Boolean'': WebGL2KernelValueBoolean,'#10'      ''Integer'': WebG'
  +'L2KernelValueInteger,'#10'      ''Float'': WebGL2KernelValueFloat,'#10'    '
  +'  ''Array'': WebGL2KernelValueDynamicUnsignedArray,'#10'      ''Array(2)'':'
  +' false,'#10'      ''Array(3)'': false,'#10'      ''Array(4)'': false,'#10' '
  +'     ''Array1D(2)'': false,'#10'      ''Array1D(3)'': false,'#10'      ''Ar'
  +'ray1D(4)'': false,'#10'      ''Array2D(2)'': false,'#10'      ''Array2D(3)'
  +''': false,'#10'      ''Array2D(4)'': false,'#10'      ''Array3D(2)'': false'
  +','#10'      ''Array3D(3)'': false,'#10'      ''Array3D(4)'': false,'#10'   '
  +'   ''Input'': WebGL2KernelValueDynamicUnsignedInput,'#10'      ''NumberText'
  +'ure'': WebGL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(1)'''
  +': WebGL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(2)'': Web'
  +'GL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL2Ke'
  +'rnelValueDynamicNumberTexture,'#10'      ''ArrayTexture(4)'': WebGL2KernelV'
  +'alueDynamicNumberTexture,'#10'      ''MemoryOptimizedNumberTexture'': WebGL'
  +'2KernelValueDynamicMemoryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': '
  +'WebGL2KernelValueDynamicHTMLImage,'#10'      ''HTMLImage'': WebGL2KernelVal'
  +'ueDynamicHTMLImage,'#10'      ''HTMLImageArray'': WebGL2KernelValueDynamicH'
  +'TMLImageArray,'#10'      ''HTMLVideo'': WebGL2KernelValueDynamicHTMLVideo,'
  +#10'    },'#10'    static: {'#10'      ''Boolean'': WebGL2KernelValueBoolean'
  +','#10'      ''Float'': WebGL2KernelValueFloat,'#10'      ''Integer'': WebGL'
  +'2KernelValueInteger,'#10'      ''Array'': WebGL2KernelValueUnsignedArray,'
  +#10'      ''Array(2)'': false,'#10'      ''Array(3)'': false,'#10'      ''Ar'
  +'ray(4)'': false,'#10'      ''Array1D(2)'': false,'#10'      ''Array1D(3)'':'
  +' false,'#10'      ''Array1D(4)'': false,'#10'      ''Array2D(2)'': false,'
  +#10'      ''Array2D(3)'': false,'#10'      ''Array2D(4)'': false,'#10'      '
  +'''Array3D(2)'': false,'#10'      ''Array3D(3)'': false,'#10'      ''Array3D'
  +'(4)'': false,'#10'      ''Input'': WebGL2KernelValueUnsignedInput,'#10'    '
  +'  ''NumberTexture'': WebGL2KernelValueNumberTexture,'#10'      ''ArrayTextu'
  +'re(1)'': WebGL2KernelValueNumberTexture,'#10'      ''ArrayTexture(2)'': Web'
  +'GL2KernelValueNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL2KernelVal'
  +'ueNumberTexture,'#10'      ''ArrayTexture(4)'': WebGL2KernelValueNumberText'
  +'ure,'#10'      ''MemoryOptimizedNumberTexture'': WebGL2KernelValueDynamicMe'
  +'moryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': WebGL2KernelValueHTML'
  +'Image,'#10'      ''HTMLImage'': WebGL2KernelValueHTMLImage,'#10'      ''HTM'
  +'LImageArray'': WebGL2KernelValueHTMLImageArray,'#10'      ''HTMLVideo'': We'
  +'bGL2KernelValueHTMLVideo,'#10'    }'#10'  },'#10'  single: {'#10'    dynami'
  +'c: {'#10'      ''Boolean'': WebGL2KernelValueBoolean,'#10'      ''Integer'''
  +': WebGL2KernelValueInteger,'#10'      ''Float'': WebGL2KernelValueFloat,'#10
  +'      ''Array'': WebGL2KernelValueDynamicSingleArray,'#10'      ''Array(2)'
  +''': WebGL2KernelValueSingleArray2,'#10'      ''Array(3)'': WebGL2KernelValu'
  +'eSingleArray3,'#10'      ''Array(4)'': WebGL2KernelValueSingleArray4,'#10' '
  +'     ''Array1D(2)'': WebGL2KernelValueDynamicSingleArray1DI,'#10'      ''Ar'
  +'ray1D(3)'': WebGL2KernelValueDynamicSingleArray1DI,'#10'      ''Array1D(4)'
  +''': WebGL2KernelValueDynamicSingleArray1DI,'#10'      ''Array2D(2)'': WebGL'
  +'2KernelValueDynamicSingleArray2DI,'#10'      ''Array2D(3)'': WebGL2KernelVa'
  +'lueDynamicSingleArray2DI,'#10'      ''Array2D(4)'': WebGL2KernelValueDynami'
  +'cSingleArray2DI,'#10'      ''Array3D(2)'': WebGL2KernelValueDynamicSingleAr'
  +'ray3DI,'#10'      ''Array3D(3)'': WebGL2KernelValueDynamicSingleArray3DI,'
  +#10'      ''Array3D(4)'': WebGL2KernelValueDynamicSingleArray3DI,'#10'      '
  +'''Input'': WebGL2KernelValueDynamicSingleInput,'#10'      ''NumberTexture'''
  +': WebGL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(1)'': Web'
  +'GL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(2)'': WebGL2Ke'
  +'rnelValueDynamicNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL2KernelV'
  +'alueDynamicNumberTexture,'#10'      ''ArrayTexture(4)'': WebGL2KernelValueD'
  ,'ynamicNumberTexture,'#10'      ''MemoryOptimizedNumberTexture'': WebGL2Kern'
  +'elValueDynamicMemoryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': WebGL'
  +'2KernelValueDynamicHTMLImage,'#10'      ''HTMLImage'': WebGL2KernelValueDyn'
  +'amicHTMLImage,'#10'      ''HTMLImageArray'': WebGL2KernelValueDynamicHTMLIm'
  +'ageArray,'#10'      ''HTMLVideo'': WebGL2KernelValueDynamicHTMLVideo,'#10' '
  +'   },'#10'    static: {'#10'      ''Boolean'': WebGL2KernelValueBoolean,'#10
  +'      ''Float'': WebGL2KernelValueFloat,'#10'      ''Integer'': WebGL2Kerne'
  +'lValueInteger,'#10'      ''Array'': WebGL2KernelValueSingleArray,'#10'     '
  +' ''Array(2)'': WebGL2KernelValueSingleArray2,'#10'      ''Array(3)'': WebGL'
  +'2KernelValueSingleArray3,'#10'      ''Array(4)'': WebGL2KernelValueSingleAr'
  +'ray4,'#10'      ''Array1D(2)'': WebGL2KernelValueSingleArray1DI,'#10'      '
  +'''Array1D(3)'': WebGL2KernelValueSingleArray1DI,'#10'      ''Array1D(4)'': '
  +'WebGL2KernelValueSingleArray1DI,'#10'      ''Array2D(2)'': WebGL2KernelValu'
  +'eSingleArray2DI,'#10'      ''Array2D(3)'': WebGL2KernelValueSingleArray2DI,'
  +#10'      ''Array2D(4)'': WebGL2KernelValueSingleArray2DI,'#10'      ''Array'
  +'3D(2)'': WebGL2KernelValueSingleArray3DI,'#10'      ''Array3D(3)'': WebGL2K'
  +'ernelValueSingleArray3DI,'#10'      ''Array3D(4)'': WebGL2KernelValueSingle'
  +'Array3DI,'#10'      ''Input'': WebGL2KernelValueSingleInput,'#10'      ''Nu'
  +'mberTexture'': WebGL2KernelValueNumberTexture,'#10'      ''ArrayTexture(1)'
  +''': WebGL2KernelValueNumberTexture,'#10'      ''ArrayTexture(2)'': WebGL2Ke'
  +'rnelValueNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL2KernelValueNum'
  +'berTexture,'#10'      ''ArrayTexture(4)'': WebGL2KernelValueNumberTexture,'
  +#10'      ''MemoryOptimizedNumberTexture'': WebGL2KernelValueMemoryOptimized'
  +'NumberTexture,'#10'      ''HTMLCanvas'': WebGL2KernelValueHTMLImage,'#10'  '
  +'    ''HTMLImage'': WebGL2KernelValueHTMLImage,'#10'      ''HTMLImageArray'''
  +': WebGL2KernelValueHTMLImageArray,'#10'      ''HTMLVideo'': WebGL2KernelVal'
  +'ueHTMLVideo,'#10'    }'#10'  },'#10'};'#10#10'function lookupKernelValueTyp'
  +'e(type, dynamic, precision, value) {'#10'  if (!type) {'#10'    throw new E'
  +'rror(''type missing'');'#10'  }'#10'  if (!dynamic) {'#10'    throw new Err'
  +'or(''dynamic missing'');'#10'  }'#10'  if (!precision) {'#10'    throw new '
  +'Error(''precision missing'');'#10'  }'#10'  if (value.type) {'#10'    type '
  +'= value.type;'#10'  }'#10'  const types = kernelValueMaps[precision][dynami'
  +'c];'#10'  if (types[type] === false) {'#10'    return null;'#10'  } else if'
  +' (types[type] === undefined) {'#10'    throw new Error(`Could not find a Ke'
  +'rnelValue for ${ type }`);'#10'  }'#10'  return types[type];'#10'}'#10#10'm'
  +'odule.exports = {'#10'  kernelValueMaps,'#10'  lookupKernelValueType'#10'};'
  +#10'},{"./kernel-value/boolean":75,"./kernel-value/dynamic-html-image":77,".'
  +'/kernel-value/dynamic-html-image-array":76,"./kernel-value/dynamic-html-vid'
  +'eo":78,"./kernel-value/dynamic-memory-optimized-number-texture":79,"./kerne'
  +'l-value/dynamic-number-texture":80,"./kernel-value/dynamic-single-array":81'
  +',"./kernel-value/dynamic-single-array1d-i":82,"./kernel-value/dynamic-singl'
  +'e-array2d-i":83,"./kernel-value/dynamic-single-array3d-i":84,"./kernel-valu'
  +'e/dynamic-single-input":85,"./kernel-value/dynamic-unsigned-array":86,"./ke'
  +'rnel-value/dynamic-unsigned-input":87,"./kernel-value/float":88,"./kernel-v'
  +'alue/html-image":90,"./kernel-value/html-image-array":89,"./kernel-value/ht'
  +'ml-video":91,"./kernel-value/integer":92,"./kernel-value/memory-optimized-n'
  +'umber-texture":93,"./kernel-value/number-texture":94,"./kernel-value/single'
  +'-array":95,"./kernel-value/single-array1d-i":96,"./kernel-value/single-arra'
  +'y2":97,"./kernel-value/single-array2d-i":98,"./kernel-value/single-array3":'
  +'99,"./kernel-value/single-array3d-i":100,"./kernel-value/single-array4":101'
  +',"./kernel-value/single-input":102,"./kernel-value/unsigned-array":103,"./k'
  +'ernel-value/unsigned-input":104}],75:[function(require,module,exports){'#10
  +'const { WebGLKernelValueBoolean } = require(''../../web-gl/kernel-value/boo'
  +'lean'');'#10#10'class WebGL2KernelValueBoolean extends WebGLKernelValueBool'
  +'ean {}'#10#10'module.exports = {'#10'  WebGL2KernelValueBoolean'#10'};'#10
  +'},{"../../web-gl/kernel-value/boolean":41}],76:[function(require,module,exp'
  +'orts){'#10'const { utils } = require(''../../../utils'');'#10'const { WebGL'
  +'2KernelValueHTMLImageArray } = require(''./html-image-array'');'#10#10'clas'
  +'s WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImage'
  +'Array {'#10'  getSource() {'#10'    const variablePrecision = this.getVaria'
  +'blePrecisionString();'#10'    return utils.linesToString(['#10'      `unifo'
  +'rm ${ variablePrecision } sampler2DArray ${this.id}`,'#10'      `uniform ${'
  +' variablePrecision } ivec2 ${this.sizeId}`,'#10'      `uniform ${ variableP'
  +'recision } ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  update'
  ,'Value(images) {'#10'    const { width, height } = images[0];'#10'    this.c'
  +'heckSize(width, height);'#10'    this.dimensions = [width, height, images.l'
  +'ength];'#10'    this.textureSize = [width, height];'#10'    this.kernel.set'
  +'Uniform3iv(this.dimensionsId, this.dimensions);'#10'    this.kernel.setUnif'
  +'orm2iv(this.sizeId, this.textureSize);'#10'    super.updateValue(images);'
  +#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueDynamicHTMLIm'
  +'ageArray'#10'};'#10'},{"../../../utils":114,"./html-image-array":89}],77:[f'
  +'unction(require,module,exports){'#10'const { utils } = require(''../../../u'
  +'tils'');'#10'const { WebGLKernelValueDynamicHTMLImage } = require(''../../w'
  +'eb-gl/kernel-value/dynamic-html-image'');'#10#10'class WebGL2KernelValueDyn'
  +'amicHTMLImage extends WebGLKernelValueDynamicHTMLImage {'#10'  getSource() '
  +'{'#10'    const variablePrecision = this.getVariablePrecisionString();'#10
  +'    return utils.linesToString(['#10'      `uniform ${ variablePrecision } '
  +'sampler2D ${this.id}`,'#10'      `uniform ${ variablePrecision } ivec2 ${th'
  +'is.sizeId}`,'#10'      `uniform ${ variablePrecision } ivec3 ${this.dimensi'
  +'onsId}`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2Ke'
  +'rnelValueDynamicHTMLImage'#10'};'#10'},{"../../../utils":114,"../../web-gl/'
  +'kernel-value/dynamic-html-image":42}],78:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGL2KernelV'
  +'alueDynamicHTMLImage } = require(''./dynamic-html-image'');'#10#10'class We'
  +'bGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {'
  +'}'#10#10'module.exports = {'#10'  WebGL2KernelValueDynamicHTMLVideo'#10'};'
  +#10'},{"../../../utils":114,"./dynamic-html-image":77}],79:[function(require'
  +',module,exports){'#10'const { utils } = require(''../../../utils'');'#10'co'
  +'nst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require(''../'
  +'../web-gl/kernel-value/dynamic-memory-optimized-number-texture'');'#10#10'c'
  +'lass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKern'
  +'elValueDynamicMemoryOptimizedNumberTexture {'#10'  getSource() {'#10'    re'
  +'turn utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'  '
  +'    `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.dimensi'
  +'onsId}`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2Ke'
  +'rnelValueDynamicMemoryOptimizedNumberTexture'#10'};'#10'},{"../../../utils"'
  +':114,"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture":44'
  +'}],80:[function(require,module,exports){'#10'const { utils } = require(''..'
  +'/../../utils'');'#10'const { WebGLKernelValueDynamicNumberTexture } = requi'
  +'re(''../../web-gl/kernel-value/dynamic-number-texture'');'#10#10'class WebG'
  +'L2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberText'
  +'ure {'#10'  getSource() {'#10'    const variablePrecision = this.getVariabl'
  +'ePrecisionString();'#10'    return utils.linesToString(['#10'      `uniform'
  +' ${ variablePrecision } sampler2D ${this.id}`,'#10'      `uniform ${ variab'
  +'lePrecision } ivec2 ${this.sizeId}`,'#10'      `uniform ${ variablePrecisio'
  +'n } ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10'}'#10#10'module.ex'
  +'ports = {'#10'  WebGL2KernelValueDynamicNumberTexture'#10'};'#10'},{"../../'
  +'../utils":114,"../../web-gl/kernel-value/dynamic-number-texture":45}],81:[f'
  +'unction(require,module,exports){'#10'const { utils } = require(''../../../u'
  +'tils'');'#10'const { WebGL2KernelValueSingleArray } = require(''../../web-g'
  +'l2/kernel-value/single-array'');'#10#10'class WebGL2KernelValueDynamicSingl'
  +'eArray extends WebGL2KernelValueSingleArray {'#10'  getSource() {'#10'    c'
  +'onst variablePrecision = this.getVariablePrecisionString();'#10'    return '
  +'utils.linesToString(['#10'      `uniform ${ variablePrecision } sampler2D $'
  +'{this.id}`,'#10'      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`'
  +','#10'      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,'#10
  +'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.dimensions = uti'
  +'ls.getDimensions(value, true);'#10'    this.textureSize = utils.getMemoryOp'
  +'timizedFloatTextureSize(this.dimensions, this.bitRatio);'#10'    this.uploa'
  +'dArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;'
  +#10'    this.checkSize(this.textureSize[0], this.textureSize[1]);'#10'    th'
  +'is.uploadValue = new Float32Array(this.uploadArrayLength);'#10'    this.ker'
  +'nel.setUniform3iv(this.dimensionsId, this.dimensions);'#10'    this.kernel.'
  +'setUniform2iv(this.sizeId, this.textureSize);'#10'    super.updateValue(val'
  +'ue);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueDynamic'
  +'SingleArray'#10'};'#10'},{"../../../utils":114,"../../web-gl2/kernel-value/'
  +'single-array":95}],82:[function(require,module,exports){'#10'const { utils '
  +'} = require(''../../../utils'');'#10'const { WebGL2KernelValueSingleArray1D'
  ,'I } = require(''../../web-gl2/kernel-value/single-array1d-i'');'#10#10'clas'
  +'s WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArr'
  +'ay1DI {'#10'  getSource() {'#10'    const variablePrecision = this.getVaria'
  +'blePrecisionString();'#10'    return utils.linesToString(['#10'      `unifo'
  +'rm ${ variablePrecision } sampler2D ${this.id}`,'#10'      `uniform ${ vari'
  +'ablePrecision } ivec2 ${this.sizeId}`,'#10'      `uniform ${ variablePrecis'
  +'ion } ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue'
  +'(value) {'#10'    this.setShape(value);'#10'    this.kernel.setUniform3iv(t'
  +'his.dimensionsId, this.dimensions);'#10'    this.kernel.setUniform2iv(this.'
  +'sizeId, this.textureSize);'#10'    super.updateValue(value);'#10'  }'#10'}'
  +#10#10'module.exports = {'#10'  WebGL2KernelValueDynamicSingleArray1DI'#10'}'
  +';'#10'},{"../../../utils":114,"../../web-gl2/kernel-value/single-array1d-i"'
  +':96}],83:[function(require,module,exports){'#10'const { utils } = require('
  +'''../../../utils'');'#10'const { WebGL2KernelValueSingleArray2DI } = requir'
  +'e(''../../web-gl2/kernel-value/single-array2d-i'');'#10#10'class WebGL2Kern'
  +'elValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {'#10
  +'  getSource() {'#10'    const variablePrecision = this.getVariablePrecision'
  +'String();'#10'    return utils.linesToString(['#10'      `uniform ${ variab'
  +'lePrecision } sampler2D ${this.id}`,'#10'      `uniform ${ variablePrecisio'
  +'n } ivec2 ${this.sizeId}`,'#10'      `uniform ${ variablePrecision } ivec3 '
  +'${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10
  +'    this.setShape(value);'#10'    this.kernel.setUniform3iv(this.dimensions'
  +'Id, this.dimensions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.t'
  +'extureSize);'#10'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.'
  +'exports = {'#10'  WebGL2KernelValueDynamicSingleArray2DI'#10'};'#10'},{"../'
  +'../../utils":114,"../../web-gl2/kernel-value/single-array2d-i":98}],84:[fun'
  +'ction(require,module,exports){'#10'const { utils } = require(''../../../uti'
  +'ls'');'#10'const { WebGL2KernelValueSingleArray3DI } = require(''../../web-'
  +'gl2/kernel-value/single-array3d-i'');'#10#10'class WebGL2KernelValueDynamic'
  +'SingleArray3DI extends WebGL2KernelValueSingleArray3DI {'#10'  getSource() '
  +'{'#10'    const variablePrecision = this.getVariablePrecisionString();'#10
  +'    return utils.linesToString(['#10'      `uniform ${ variablePrecision } '
  +'sampler2D ${this.id}`,'#10'      `uniform ${ variablePrecision } ivec2 ${th'
  +'is.sizeId}`,'#10'      `uniform ${ variablePrecision } ivec3 ${this.dimensi'
  +'onsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.set'
  +'Shape(value);'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dim'
  +'ensions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'
  +#10'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGL2KernelValueDynamicSingleArray3DI'#10'};'#10'},{"../../../utils":114'
  +',"../../web-gl2/kernel-value/single-array3d-i":100}],85:[function(require,m'
  +'odule,exports){'#10'const { utils } = require(''../../../utils'');'#10'cons'
  +'t { WebGL2KernelValueSingleInput } = require(''../../web-gl2/kernel-value/s'
  +'ingle-input'');'#10#10'class WebGL2KernelValueDynamicSingleInput extends We'
  +'bGL2KernelValueSingleInput {'#10'  getSource() {'#10'    const variablePrec'
  +'ision = this.getVariablePrecisionString();'#10'    return utils.linesToStri'
  +'ng(['#10'      `uniform ${ variablePrecision } sampler2D ${this.id}`,'#10' '
  +'     `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,'#10'      `unif'
  +'orm ${ variablePrecision } ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'
  +#10#10'  updateValue(value) {'#10'    let [w, h, d] = value.size;'#10'    th'
  +'is.dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10'    this.text'
  +'ureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bi'
  +'tRatio);'#10'    this.uploadArrayLength = this.textureSize[0] * this.textur'
  +'eSize[1] * this.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.'
  +'textureSize[1]);'#10'    this.uploadValue = new Float32Array(this.uploadArr'
  +'ayLength);'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimens'
  +'ions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10
  +'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10' '
  +' WebGL2KernelValueDynamicSingleInput'#10'};'#10'},{"../../../utils":114,"..'
  +'/../web-gl2/kernel-value/single-input":102}],86:[function(require,module,ex'
  +'ports){'#10'const { utils } = require(''../../../utils'');'#10'const { WebG'
  +'LKernelValueDynamicUnsignedArray } = require(''../../web-gl/kernel-value/dy'
  +'namic-unsigned-array'');'#10#10'class WebGL2KernelValueDynamicUnsignedArray'
  +' extends WebGLKernelValueDynamicUnsignedArray {'#10'  getSource() {'#10'   '
  +' const variablePrecision = this.getVariablePrecisionString();'#10'    retur'
  ,'n utils.linesToString(['#10'      `uniform ${ variablePrecision } sampler2D'
  +' ${this.id}`,'#10'      `uniform ${ variablePrecision } ivec2 ${this.sizeId'
  +'}`,'#10'      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,'
  +#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueD'
  +'ynamicUnsignedArray'#10'};'#10'},{"../../../utils":114,"../../web-gl/kernel'
  +'-value/dynamic-unsigned-array":51}],87:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelVa'
  +'lueDynamicUnsignedInput } = require(''../../web-gl/kernel-value/dynamic-uns'
  +'igned-input'');'#10#10'class WebGL2KernelValueDynamicUnsignedInput extends '
  +'WebGLKernelValueDynamicUnsignedInput {'#10'  getSource() {'#10'    const va'
  +'riablePrecision = this.getVariablePrecisionString();'#10'    return utils.l'
  +'inesToString(['#10'      `uniform ${ variablePrecision } sampler2D ${this.i'
  +'d}`,'#10'      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,'#10' '
  +'     `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,'#10'    ]'
  +');'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueDynamicUn'
  +'signedInput'#10'};'#10'},{"../../../utils":114,"../../web-gl/kernel-value/d'
  +'ynamic-unsigned-input":52}],88:[function(require,module,exports){'#10'const'
  +' { utils } = require(''../../../utils'');'#10'const { WebGLKernelValueFloat'
  +' } = require(''../../web-gl/kernel-value/float'');'#10#10'class WebGL2Kerne'
  +'lValueFloat extends WebGLKernelValueFloat {}'#10#10'module.exports = {'#10
  +'  WebGL2KernelValueFloat'#10'};'#10'},{"../../../utils":114,"../../web-gl/k'
  +'ernel-value/float":53}],89:[function(require,module,exports){'#10'const { u'
  +'tils } = require(''../../../utils'');'#10'const { WebGLKernelArray } = requ'
  +'ire(''../../web-gl/kernel-value/array'');'#10#10'class WebGL2KernelValueHTM'
  +'LImageArray extends WebGLKernelArray {'#10'  constructor(value, settings) {'
  +#10'    super(value, settings);'#10'    this.checkSize(value[0].width, value'
  +'[0].height);'#10'    this.dimensions = [value[0].width, value[0].height, va'
  +'lue.length];'#10'    this.textureSize = [value[0].width, value[0].height];'
  +#10'  }'#10'  defineTexture() {'#10'    const { context: gl } = this;'#10'  '
  +'  gl.activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2'
  +'D_ARRAY, this.texture);'#10'    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TE'
  +'XTURE_MAG_FILTER, gl.NEAREST);'#10'    gl.texParameteri(gl.TEXTURE_2D_ARRAY'
  +', gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'  }'#10#10'  getStringValueHandle'
  +'r() {'#10'    return `const uploadValue_${this.name} = ${this.varName};\n`;'
  +#10'  }'#10'  getSource() {'#10'    const variablePrecision = this.getVariab'
  +'lePrecisionString();'#10'    return utils.linesToString(['#10'      `unifor'
  +'m ${ variablePrecision } sampler2DArray ${this.id}`,'#10'      `${ variable'
  +'Precision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.tex'
  +'tureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${this.dimensionsId'
  +'} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2'
  +']})`,'#10'    ]);'#10'  }'#10#10'  updateValue(images) {'#10'    const { co'
  +'ntext: gl } = this;'#10'    gl.activeTexture(this.contextHandle);'#10'    g'
  +'l.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);'#10'    gl.pixelStorei(gl'
  +'.UNPACK_FLIP_Y_WEBGL, true);'#10'    gl.texImage3D('#10'      gl.TEXTURE_2D'
  +'_ARRAY,'#10'      0,'#10'      gl.RGBA,'#10'      images[0].width,'#10'    '
  +'  images[0].height,'#10'      images.length,'#10'      0,'#10'      gl.RGBA'
  +','#10'      gl.UNSIGNED_BYTE,'#10'      null'#10'    );'#10'    for (let i '
  +'= 0; i < images.length; i++) {'#10'      const xOffset = 0;'#10'      const'
  +' yOffset = 0;'#10'      const imageDepth = 1;'#10'      gl.texSubImage3D('
  +#10'        gl.TEXTURE_2D_ARRAY,'#10'        0,'#10'        xOffset,'#10'   '
  +'     yOffset,'#10'        i,'#10'        images[i].width,'#10'        image'
  +'s[i].height,'#10'        imageDepth,'#10'        gl.RGBA,'#10'        gl.UN'
  +'SIGNED_BYTE,'#10'        this.uploadValue = images[i]'#10'      );'#10'    '
  +'}'#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  }'#10'}'#10
  +#10'module.exports = {'#10'  WebGL2KernelValueHTMLImageArray'#10'};'#10'},{"'
  +'../../../utils":114,"../../web-gl/kernel-value/array":40}],90:[function(req'
  +'uire,module,exports){'#10'const { utils } = require(''../../../utils'');'#10
  +'const { WebGLKernelValueHTMLImage } = require(''../../web-gl/kernel-value/h'
  +'tml-image'');'#10#10'class WebGL2KernelValueHTMLImage extends WebGLKernelVa'
  +'lueHTMLImage {'#10'  getSource() {'#10'    const variablePrecision = this.g'
  +'etVariablePrecisionString();'#10'    return utils.linesToString(['#10'     '
  +' `uniform ${ variablePrecision } sampler2D ${this.id}`,'#10'      `${ varia'
  +'blePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.'
  +'textureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${this.dimension'
  ,'sId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimension'
  +'s[2]})`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2Ke'
  +'rnelValueHTMLImage'#10'};'#10'},{"../../../utils":114,"../../web-gl/kernel-'
  +'value/html-image":54}],91:[function(require,module,exports){'#10'const { ut'
  +'ils } = require(''../../../utils'');'#10'const { WebGL2KernelValueHTMLImage'
  +' } = require(''./html-image'');'#10#10'class WebGL2KernelValueHTMLVideo ext'
  +'ends WebGL2KernelValueHTMLImage {}'#10#10'module.exports = {'#10'  WebGL2Ke'
  +'rnelValueHTMLVideo'#10'};'#10'},{"../../../utils":114,"./html-image":90}],9'
  +'2:[function(require,module,exports){'#10'const { WebGLKernelValueInteger } '
  +'= require(''../../web-gl/kernel-value/integer'');'#10#10'class WebGL2Kernel'
  +'ValueInteger extends WebGLKernelValueInteger {'#10'  getSource(value) {'#10
  +'    const variablePrecision = this.getVariablePrecisionString();'#10'    if'
  +' (this.origin === ''constants'') {'#10'      return `const ${ variablePreci'
  +'sion } int ${this.id} = ${ parseInt(value) };\n`;'#10'    }'#10'    return '
  +'`uniform ${ variablePrecision } int ${this.id};\n`;'#10'  }'#10#10'  update'
  +'Value(value) {'#10'    if (this.origin === ''constants'') return;'#10'    t'
  +'his.kernel.setUniform1i(this.id, this.uploadValue = value);'#10'  }'#10'}'
  +#10#10'module.exports = {'#10'  WebGL2KernelValueInteger'#10'};'#10'},{"../.'
  +'./web-gl/kernel-value/integer":57}],93:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelVa'
  +'lueMemoryOptimizedNumberTexture } = require(''../../web-gl/kernel-value/mem'
  +'ory-optimized-number-texture'');'#10#10'class WebGL2KernelValueMemoryOptimi'
  +'zedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {'#10
  +'  getSource() {'#10'    const { id, sizeId, textureSize, dimensionsId, dime'
  +'nsions } = this;'#10'    const variablePrecision = this.getVariablePrecisio'
  +'nString();'#10'    return utils.linesToString(['#10'      `uniform sampler2'
  +'D ${id}`,'#10'      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textu'
  +'reSize[0]}, ${textureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${'
  +'dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})'
  +'`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelVa'
  +'lueMemoryOptimizedNumberTexture'#10'};'#10'},{"../../../utils":114,"../../w'
  +'eb-gl/kernel-value/memory-optimized-number-texture":58}],94:[function(requi'
  +'re,module,exports){'#10'const { utils } = require(''../../../utils'');'#10
  +'const { WebGLKernelValueNumberTexture } = require(''../../web-gl/kernel-val'
  +'ue/number-texture'');'#10#10'class WebGL2KernelValueNumberTexture extends W'
  +'ebGLKernelValueNumberTexture {'#10'  getSource() {'#10'    const { id, size'
  +'Id, textureSize, dimensionsId, dimensions } = this;'#10'    const variableP'
  +'recision = this.getVariablePrecisionString();'#10'    return utils.linesToS'
  +'tring(['#10'      `uniform ${ variablePrecision } sampler2D ${id}`,'#10'   '
  +'   `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${tex'
  +'tureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${dimensionsId} = i'
  +'vec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,'#10'    ]);'#10
  +'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueNumberTexture'#10
  +'};'#10'},{"../../../utils":114,"../../web-gl/kernel-value/number-texture":5'
  +'9}],95:[function(require,module,exports){'#10'const { utils } = require(''.'
  +'./../../utils'');'#10'const { WebGLKernelValueSingleArray } = require(''../'
  +'../web-gl/kernel-value/single-array'');'#10#10'class WebGL2KernelValueSingl'
  +'eArray extends WebGLKernelValueSingleArray {'#10'  getSource() {'#10'    co'
  +'nst variablePrecision = this.getVariablePrecisionString();'#10'    return u'
  +'tils.linesToString(['#10'      `uniform ${ variablePrecision } sampler2D ${'
  +'this.id}`,'#10'      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2($'
  +'{this.textureSize[0]}, ${this.textureSize[1]})`,'#10'      `${ variablePrec'
  +'ision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.di'
  +'mensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateV'
  +'alue(value) {'#10'    if (value.constructor !== this.initialValueConstructo'
  +'r) {'#10'      this.onUpdateValueMismatch(value.constructor);'#10'      ret'
  +'urn;'#10'    }'#10'    const { context: gl } = this;'#10'    utils.flattenT'
  +'o(value, this.uploadValue);'#10'    gl.activeTexture(this.contextHandle);'
  +#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei('
  +'gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.'
  +'RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, th'
  +'is.uploadValue);'#10'    this.kernel.setUniform1i(this.id, this.index);'#10
  +'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueSingleArray'#10
  +'};'#10'},{"../../../utils":114,"../../web-gl/kernel-value/single-array":60}'
  ,'],96:[function(require,module,exports){'#10'const { utils } = require(''../'
  +'../../utils'');'#10'const { WebGLKernelValueSingleArray1DI } = require(''..'
  +'/../web-gl/kernel-value/single-array1d-i'');'#10#10'class WebGL2KernelValue'
  +'SingleArray1DI extends WebGLKernelValueSingleArray1DI {'#10'  updateValue(v'
  +'alue) {'#10'    if (value.constructor !== this.initialValueConstructor) {'
  +#10'      this.onUpdateValueMismatch(value.constructor);'#10'      return;'
  +#10'    }'#10'    const { context: gl } = this;'#10'    utils.flattenTo(valu'
  +'e, this.uploadValue);'#10'    gl.activeTexture(this.contextHandle);'#10'   '
  +' gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei(gl.UNP'
  +'ACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32'
  +'F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.upl'
  +'oadValue);'#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueSingleArray1DI'#10'};'
  +#10'},{"../../../utils":114,"../../web-gl/kernel-value/single-array1d-i":61}'
  +'],97:[function(require,module,exports){'#10'const { WebGLKernelValueSingleA'
  +'rray2 } = require(''../../web-gl/kernel-value/single-array2'');'#10#10'clas'
  +'s WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}'#10
  +#10'module.exports = {'#10'  WebGL2KernelValueSingleArray2'#10'};'#10'},{"..'
  +'/../web-gl/kernel-value/single-array2":62}],98:[function(require,module,exp'
  +'orts){'#10'const { utils } = require(''../../../utils'');'#10'const { WebGL'
  +'KernelValueSingleArray2DI } = require(''../../web-gl/kernel-value/single-ar'
  +'ray2d-i'');'#10#10'class WebGL2KernelValueSingleArray2DI extends WebGLKerne'
  +'lValueSingleArray2DI {'#10'  updateValue(value) {'#10'    if (value.constru'
  +'ctor !== this.initialValueConstructor) {'#10'      this.onUpdateValueMismat'
  +'ch(value.constructor);'#10'      return;'#10'    }'#10'    const { context:'
  +' gl } = this;'#10'    utils.flattenTo(value, this.uploadValue);'#10'    gl.'
  +'activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, th'
  +'is.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'   '
  +' gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.text'
  +'ureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);'#10'    this.kernel.se'
  +'tUniform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGL2KernelValueSingleArray2DI'#10'};'#10'},{"../../../utils":114,"../..'
  +'/web-gl/kernel-value/single-array2d-i":63}],99:[function(require,module,exp'
  +'orts){'#10'const { WebGLKernelValueSingleArray3 } = require(''../../web-gl/'
  +'kernel-value/single-array3'');'#10#10'class WebGL2KernelValueSingleArray3 e'
  +'xtends WebGLKernelValueSingleArray3 {}'#10#10'module.exports = {'#10'  WebG'
  +'L2KernelValueSingleArray3'#10'};'#10'},{"../../web-gl/kernel-value/single-a'
  +'rray3":64}],100:[function(require,module,exports){'#10'const { utils } = re'
  +'quire(''../../../utils'');'#10'const { WebGLKernelValueSingleArray3DI } = r'
  +'equire(''../../web-gl/kernel-value/single-array3d-i'');'#10#10'class WebGL2'
  +'KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {'#10'  up'
  +'dateValue(value) {'#10'    if (value.constructor !== this.initialValueConst'
  +'ructor) {'#10'      this.onUpdateValueMismatch(value.constructor);'#10'    '
  +'  return;'#10'    }'#10'    const { context: gl } = this;'#10'    utils.fla'
  +'ttenTo(value, this.uploadValue);'#10'    gl.activeTexture(this.contextHandl'
  +'e);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelSt'
  +'orei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0'
  +', gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOA'
  +'T, this.uploadValue);'#10'    this.kernel.setUniform1i(this.id, this.index)'
  +';'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueSingleArra'
  +'y3DI'#10'};'#10'},{"../../../utils":114,"../../web-gl/kernel-value/single-a'
  +'rray3d-i":65}],101:[function(require,module,exports){'#10'const { WebGLKern'
  +'elValueSingleArray4 } = require(''../../web-gl/kernel-value/single-array4'''
  +');'#10#10'class WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingl'
  +'eArray4 {}'#10#10'module.exports = {'#10'  WebGL2KernelValueSingleArray4'#10
  +'};'#10'},{"../../web-gl/kernel-value/single-array4":66}],102:[function(requ'
  +'ire,module,exports){'#10'const { utils } = require(''../../../utils'');'#10
  +'const { WebGLKernelValueSingleInput } = require(''../../web-gl/kernel-value'
  +'/single-input'');'#10#10'class WebGL2KernelValueSingleInput extends WebGLKe'
  +'rnelValueSingleInput {'#10'  getSource() {'#10'    const variablePrecision '
  +'= this.getVariablePrecisionString();'#10'    return utils.linesToString(['
  +#10'      `uniform ${ variablePrecision } sampler2D ${this.id}`,'#10'      `'
  +'${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]},'
  +' ${this.textureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${this.d'
  ,'imensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.d'
  +'imensions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateValue(input) {'#10'    '
  +'const { context: gl } = this;'#10'    utils.flattenTo(input.value, this.upl'
  +'oadValue);'#10'    gl.activeTexture(this.contextHandle);'#10'    gl.bindTex'
  +'ture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_'
  +'WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.tex'
  +'tureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);'
  +#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  }'#10'}'#10#10
  +'module.exports = {'#10'  WebGL2KernelValueSingleInput'#10'};'#10'},{"../../'
  +'../utils":114,"../../web-gl/kernel-value/single-input":67}],103:[function(r'
  +'equire,module,exports){'#10'const { utils } = require(''../../../utils'');'
  +#10'const { WebGLKernelValueUnsignedArray } = require(''../../web-gl/kernel-'
  +'value/unsigned-array'');'#10#10'class WebGL2KernelValueUnsignedArray extend'
  +'s WebGLKernelValueUnsignedArray {'#10'  getSource() {'#10'    const variabl'
  +'ePrecision = this.getVariablePrecisionString();'#10'    return utils.linesT'
  +'oString(['#10'      `uniform ${ variablePrecision } sampler2D ${this.id}`,'
  +#10'      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textur'
  +'eSize[0]}, ${this.textureSize[1]})`,'#10'      `${ variablePrecision } ivec'
  +'3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}'
  +', ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports '
  +'= {'#10'  WebGL2KernelValueUnsignedArray'#10'};'#10'},{"../../../utils":114'
  +',"../../web-gl/kernel-value/unsigned-array":68}],104:[function(require,modu'
  +'le,exports){'#10'const { utils } = require(''../../../utils'');'#10'const {'
  +' WebGLKernelValueUnsignedInput } = require(''../../web-gl/kernel-value/unsi'
  +'gned-input'');'#10#10'class WebGL2KernelValueUnsignedInput extends WebGLKer'
  +'nelValueUnsignedInput {'#10'  getSource() {'#10'    const variablePrecision'
  +' = this.getVariablePrecisionString();'#10'    return utils.linesToString(['
  +#10'      `uniform ${ variablePrecision } sampler2D ${this.id}`,'#10'      `'
  +'${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]},'
  +' ${this.textureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${this.d'
  +'imensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.d'
  +'imensions[2]})`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  '
  +'WebGL2KernelValueUnsignedInput'#10'};'#10'},{"../../../utils":114,"../../we'
  +'b-gl/kernel-value/unsigned-input":69}],105:[function(require,module,exports'
  +'){'#10'const { WebGLKernel } = require(''../web-gl/kernel'');'#10'const { W'
  +'ebGL2FunctionNode } = require(''./function-node'');'#10'const { FunctionBui'
  +'lder } = require(''../function-builder'');'#10'const { utils } = require('''
  +'../../utils'');'#10'const { fragmentShader } = require(''./fragment-shader'
  +''');'#10'const { vertexShader } = require(''./vertex-shader'');'#10'const {'
  +' lookupKernelValueType } = require(''./kernel-value-maps'');'#10#10'let isS'
  +'upported = null;'#10'let testCanvas = null;'#10'let testContext = null;'#10
  +'let testExtensions = null;'#10#10'let features = null;'#10#10'class WebGL2K'
  +'ernel extends WebGLKernel {'#10'  static get isSupported() {'#10'    if (is'
  +'Supported !== null) {'#10'      return isSupported;'#10'    }'#10'    this.'
  +'setupFeatureChecks();'#10'    isSupported = this.isContextMatch(testContext'
  +');'#10'    return isSupported;'#10'  }'#10#10'  static setupFeatureChecks()'
  +' {'#10'    if (typeof document !== ''undefined'') {'#10'      testCanvas = '
  +'document.createElement(''canvas'');'#10'    } else if (typeof OffscreenCanv'
  +'as !== ''undefined'') {'#10'      testCanvas = new OffscreenCanvas(0, 0);'
  +#10'    }'#10'    if (!testCanvas) return;'#10'    testContext = testCanvas.'
  +'getContext(''webgl2'');'#10'    if (!testContext || !testContext.getExtensi'
  +'on) return;'#10'    testExtensions = {'#10'      EXT_color_buffer_float: te'
  +'stContext.getExtension(''EXT_color_buffer_float''),'#10'      OES_texture_f'
  +'loat_linear: testContext.getExtension(''OES_texture_float_linear''),'#10'  '
  +'  };'#10'    features = this.getFeatures();'#10'  }'#10#10'  static isConte'
  +'xtMatch(context) {'#10'    if (typeof WebGL2RenderingContext !== ''undefine'
  +'d'') {'#10'      return context instanceof WebGL2RenderingContext;'#10'    '
  +'}'#10'    return false;'#10'  }'#10#10'  static getFeatures() {'#10'    con'
  +'st gl = this.testContext;'#10'    return Object.freeze({'#10'      isFloatR'
  +'ead: this.getIsFloatRead(),'#10'      isIntegerDivisionAccurate: this.getIs'
  +'IntegerDivisionAccurate(),'#10'      isSpeedTacticSupported: this.getIsSpee'
  +'dTacticSupported(),'#10'      kernelMap: true,'#10'      isTextureFloat: tr'
  +'ue,'#10'      isDrawBuffers: true,'#10'      channelCount: this.getChannelC'
  +'ount(),'#10'      maxTextureSize: this.getMaxTextureSize(),'#10'      lowIn'
  ,'tPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),'#10
  +'      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl'
  +'.LOW_FLOAT),'#10'      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.F'
  +'RAGMENT_SHADER, gl.MEDIUM_INT),'#10'      mediumFloatPrecision: gl.getShade'
  +'rPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),'#10'      highIntPre'
  +'cision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),'#10' '
  +'     highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl'
  +'.HIGH_FLOAT),'#10'    });'#10'  }'#10#10'  static getIsTextureFloat() {'#10
  +'    return true;'#10'  }'#10#10'  static getChannelCount() {'#10'    return'
  +' testContext.getParameter(testContext.MAX_DRAW_BUFFERS);'#10'  }'#10#10'  s'
  +'tatic getMaxTextureSize() {'#10'    return testContext.getParameter(testCon'
  +'text.MAX_TEXTURE_SIZE);'#10'  }'#10#10'  static lookupKernelValueType(type,'
  +' dynamic, precision, value) {'#10'    return lookupKernelValueType(type, dy'
  +'namic, precision, value);'#10'  }'#10#10'  static get testCanvas() {'#10'  '
  +'  return testCanvas;'#10'  }'#10#10'  static get testContext() {'#10'    re'
  +'turn testContext;'#10'  }'#10#10'  static get features() {'#10'    return f'
  +'eatures;'#10'  }'#10#10'  static get fragmentShader() {'#10'    return frag'
  +'mentShader;'#10'  }'#10'  static get vertexShader() {'#10'    return vertex'
  +'Shader;'#10'  }'#10#10'  initContext() {'#10'    const settings = {'#10'   '
  +'   alpha: false,'#10'      depth: false,'#10'      antialias: false'#10'   '
  +' };'#10'    return this.canvas.getContext(''webgl2'', settings);'#10'  }'#10
  +#10'  initExtensions() {'#10'    this.extensions = {'#10'      EXT_color_buf'
  +'fer_float: this.context.getExtension(''EXT_color_buffer_float''),'#10'     '
  +' OES_texture_float_linear: this.context.getExtension(''OES_texture_float_li'
  +'near''),'#10'    };'#10'  }'#10#10'  validateSettings(args) {'#10'    if (!'
  +'this.validate) {'#10'      this.texSize = utils.getKernelTextureSize({'#10
  +'        optimizeFloatMemory: this.optimizeFloatMemory,'#10'        precisio'
  +'n: this.precision,'#10'      }, this.output);'#10'      return;'#10'    }'
  +#10#10'    const { features } = this.constructor;'#10'    if (this.precision'
  +' === ''single'' && !features.isFloatRead) {'#10'      throw new Error(''Flo'
  +'at texture outputs are not supported'');'#10'    } else if (!this.graphical'
  +' && this.precision === null) {'#10'      this.precision = features.isFloatR'
  +'ead ? ''single'' : ''unsigned'';'#10'    }'#10#10'    if (this.fixIntegerDi'
  +'visionAccuracy === null) {'#10'      this.fixIntegerDivisionAccuracy = !fea'
  +'tures.isIntegerDivisionAccurate;'#10'    } else if (this.fixIntegerDivision'
  +'Accuracy && features.isIntegerDivisionAccurate) {'#10'      this.fixInteger'
  +'DivisionAccuracy = false;'#10'    }'#10#10'    this.checkOutput();'#10#10' '
  +'   if (!this.output || this.output.length === 0) {'#10'      if (args.lengt'
  +'h !== 1) {'#10'        throw new Error(''Auto output only supported for ker'
  +'nels with only one input'');'#10'      }'#10#10'      const argType = utils'
  +'.getVariableType(args[0], this.strictIntegers);'#10'      switch (argType) '
  +'{'#10'        case ''Array'':'#10'          this.output = utils.getDimensio'
  +'ns(argType);'#10'          break;'#10'        case ''NumberTexture'':'#10' '
  +'       case ''MemoryOptimizedNumberTexture'':'#10'        case ''ArrayTextu'
  +'re(1)'':'#10'        case ''ArrayTexture(2)'':'#10'        case ''ArrayText'
  +'ure(3)'':'#10'        case ''ArrayTexture(4)'':'#10'          this.output ='
  +' args[0].output;'#10'          break;'#10'        default:'#10'          th'
  +'row new Error(''Auto output not supported for input type: '' + argType);'#10
  +'      }'#10'    }'#10#10'    if (this.graphical) {'#10'      if (this.outpu'
  +'t.length !== 2) {'#10'        throw new Error(''Output must have 2 dimensio'
  +'ns on graphical mode'');'#10'      }'#10#10'      if (this.precision === '''
  +'single'') {'#10'        console.warn(''Cannot use graphical mode and single'
  +' precision at the same time'');'#10'        this.precision = ''unsigned'';'
  +#10'      }'#10#10'      this.texSize = utils.clone(this.output);'#10'      '
  +'return;'#10'    } else if (!this.graphical && this.precision === null && fe'
  +'atures.isTextureFloat) {'#10'      this.precision = ''single'';'#10'    }'
  +#10#10'    this.texSize = utils.getKernelTextureSize({'#10'      optimizeFlo'
  +'atMemory: this.optimizeFloatMemory,'#10'      precision: this.precision,'#10
  +'    }, this.output);'#10#10'    this.checkTextureSize();'#10'  }'#10#10'  t'
  +'ranslateSource() {'#10'    const functionBuilder = FunctionBuilder.fromKern'
  +'el(this, WebGL2FunctionNode, {'#10'      fixIntegerDivisionAccuracy: this.f'
  +'ixIntegerDivisionAccuracy'#10'    });'#10'    this.translatedSource = funct'
  +'ionBuilder.getPrototypeString(''kernel'');'#10'    this.setupReturnTypes(fu'
  +'nctionBuilder);'#10'  }'#10#10'  drawBuffers() {'#10'    this.context.drawB'
  ,'uffers(this.drawBuffersMap);'#10'  }'#10#10'  getTextureFormat() {'#10'    '
  +'const { context: gl } = this;'#10'    switch (this.getInternalFormat()) {'
  +#10'      case gl.R32F:'#10'        return gl.RED;'#10'      case gl.RG32F:'
  +#10'        return gl.RG;'#10'      case gl.RGBA32F:'#10'        return gl.R'
  +'GBA;'#10'      case gl.RGBA:'#10'        return gl.RGBA;'#10'      default:'
  +#10'        throw new Error(''Unknown internal format'');'#10'    }'#10'  }'
  +#10'  getInternalFormat() {'#10'    const { context: gl } = this;'#10#10'   '
  +' if (this.precision === ''single'') {'#10'      if (this.pipeline) {'#10'  '
  +'      switch (this.returnType) {'#10'          case ''Number'':'#10'       '
  +'   case ''Float'':'#10'          case ''Integer'':'#10'            if (this'
  +'.optimizeFloatMemory) {'#10'              return gl.RGBA32F;'#10'          '
  +'  } else {'#10'              return gl.R32F;'#10'            }'#10'        '
  +'    case ''Array(2)'':'#10'              return gl.RG32F;'#10'            c'
  +'ase ''Array(3)'': '#10'            case ''Array(4)'':'#10'              ret'
  +'urn gl.RGBA32F;'#10'            default:'#10'              throw new Error('
  +'''Unhandled return type'');'#10'        }'#10'      }'#10'      return gl.R'
  +'GBA32F;'#10'    }'#10'    return gl.RGBA;'#10'  }'#10#10'  _setupOutputText'
  +'ure() {'#10'    const gl = this.context;'#10'    if (this.texture) {'#10'  '
  +'    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTUR'
  +'E_2D, this.texture.texture, 0);'#10'      return;'#10'    }'#10'    gl.bind'
  +'Framebuffer(gl.FRAMEBUFFER, this.framebuffer);'#10'    const texture = gl.c'
  +'reateTexture();'#10'    const texSize = this.texSize;'#10'    gl.activeText'
  +'ure(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);'
  +#10'    gl.bindTexture(gl.TEXTURE_2D, texture);'#10'    gl.texParameteri(gl.'
  +'TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);'#10'    gl.texParameteri(gl.TEXT'
  +'URE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);'#10'    gl.texParameteri(gl.TEXTURE_'
  +'2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'    gl.texParameteri(gl.TEXTURE'
  +'_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'#10'    const format = this.getInt'
  +'ernalFormat();'#10'    if (this.precision === ''single'') {'#10'      gl.te'
  +'xStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);'#10'    } els'
  +'e {'#10'      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1'
  +'], 0, format, gl.UNSIGNED_BYTE, null);'#10'    }'#10'    gl.framebufferText'
  +'ure2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);'#10
  +'    this.texture = new this.TextureConstructor({'#10'      texture,'#10'   '
  +'   size: texSize,'#10'      dimensions: this.threadDim,'#10'      output: t'
  +'his.output,'#10'      context: this.context,'#10'      internalFormat: this'
  +'.getInternalFormat(),'#10'      textureFormat: this.getTextureFormat(),'#10
  +'      kernel: this,'#10'    });'#10'  }'#10#10'  _setupSubOutputTextures() '
  +'{'#10'    const gl = this.context;'#10'    if (this.mappedTextures) {'#10' '
  +'     for (let i = 0; i < this.subKernels.length; i++) {'#10'        gl.fram'
  +'ebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2'
  +'D, this.mappedTextures[i].texture, 0);'#10'      }'#10'      return;'#10'  '
  +'  }'#10'    const texSize = this.texSize;'#10'    this.drawBuffersMap = [gl'
  +'.COLOR_ATTACHMENT0];'#10'    this.mappedTextures = [];'#10'    for (let i ='
  +' 0; i < this.subKernels.length; i++) {'#10'      const texture = this.creat'
  +'eTexture();'#10'      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1'
  +');'#10'      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + thi'
  +'s.argumentTextureCount + i);'#10'      gl.bindTexture(gl.TEXTURE_2D, textur'
  +'e);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_T'
  +'O_EDGE);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CL'
  +'AMP_TO_EDGE);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILT'
  +'ER, gl.NEAREST);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_F'
  +'ILTER, gl.NEAREST);'#10'      const format = this.getInternalFormat();'#10
  +'      if (this.precision === ''single'') {'#10'        gl.texStorage2D(gl.T'
  +'EXTURE_2D, 1, format, texSize[0], texSize[1]);'#10'      } else {'#10'     '
  +'   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.R'
  +'GBA, gl.UNSIGNED_BYTE, null);'#10'      }'#10'      gl.framebufferTexture2D'
  +'(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);'
  +#10#10'      this.mappedTextures.push(new this.TextureConstructor({'#10'    '
  +'    texture,'#10'        size: texSize,'#10'        dimensions: this.thread'
  +'Dim,'#10'        output: this.output,'#10'        context: this.context,'#10
  +'        internalFormat: this.getInternalFormat(),'#10'        textureFormat'
  +': this.getTextureFormat(),'#10'        kernel: this,'#10'      }));'#10'   '
  +' }'#10'  }'#10#10'  _getHeaderString() {'#10'    return '''';'#10'  }'#10#10
  ,'  _getTextureCoordinate() {'#10'    const subKernels = this.subKernels;'#10
  +'    const variablePrecision = this.getVariablePrecisionString(this.texSize,'
  +' this.tactic);'#10'    if (subKernels === null || subKernels.length < 1) {'
  +#10'      return `in ${ variablePrecision } vec2 vTexCoord;\n`;'#10'    } el'
  +'se {'#10'      return `out ${ variablePrecision } vec2 vTexCoord;\n`;'#10' '
  +'   }'#10'  }'#10#10'  _getMainArgumentsString(args) {'#10'    const result '
  +'= [];'#10'    const argumentNames = this.argumentNames;'#10'    for (let i '
  +'= 0; i < argumentNames.length; i++) {'#10'      result.push(this.kernelArgu'
  +'ments[i].getSource(args[i]));'#10'    }'#10'    return result.join('''');'
  +#10'  }'#10#10'  getKernelString() {'#10'    const result = [this.getKernelR'
  +'esultDeclaration()];'#10'    const subKernels = this.subKernels;'#10'    if'
  +' (subKernels !== null) {'#10'      result.push('#10'        ''layout(locati'
  +'on = 0) out vec4 data0'''#10'      );'#10'      switch (this.returnType) {'
  +#10'        case ''Number'':'#10'        case ''Float'':'#10'        case '''
  +'Integer'':'#10'          for (let i = 0; i < subKernels.length; i++) {'#10
  +'            const subKernel = subKernels[i];'#10'            result.push('
  +#10'              subKernel.returnType === ''Integer'' ?'#10'              `'
  +'int subKernelResult_${ subKernel.name } = 0` :'#10'              `float sub'
  +'KernelResult_${ subKernel.name } = 0.0`,'#10'              `layout(location'
  +' = ${ i + 1 }) out vec4 data${ i + 1 }`'#10'            );'#10'          }'
  +#10'          break;'#10'        case ''Array(2)'':'#10'          for (let i'
  +' = 0; i < subKernels.length; i++) {'#10'            result.push('#10'      '
  +'        `vec2 subKernelResult_${ subKernels[i].name }`,'#10'              `'
  +'layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`'#10'            );'
  +#10'          }'#10'          break;'#10'        case ''Array(3)'':'#10'    '
  +'      for (let i = 0; i < subKernels.length; i++) {'#10'            result.'
  +'push('#10'              `vec3 subKernelResult_${ subKernels[i].name }`,'#10
  +'              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`'#10' '
  +'           );'#10'          }'#10'          break;'#10'        case ''Array'
  +'(4)'':'#10'          for (let i = 0; i < subKernels.length; i++) {'#10'    '
  +'        result.push('#10'              `vec4 subKernelResult_${ subKernels['
  +'i].name }`,'#10'              `layout(location = ${ i + 1 }) out vec4 data$'
  +'{ i + 1 }`'#10'            );'#10'          }'#10'          break;'#10'    '
  +'  }'#10'    } else {'#10'      result.push('#10'        ''out vec4 data0'''
  +#10'      );'#10'    }'#10#10'    return utils.linesToString(result) + this.'
  +'translatedSource;'#10'  }'#10#10'  getMainResultGraphical() {'#10'    retur'
  +'n utils.linesToString(['#10'      ''  threadId = indexTo3D(index, uOutputDi'
  +'m)'','#10'      ''  kernel()'','#10'      ''  data0 = actualColor'','#10'  '
  +'  ]);'#10'  }'#10#10'  getMainResultPackedPixels() {'#10'    switch (this.r'
  +'eturnType) {'#10'      case ''LiteralInteger'':'#10'      case ''Number'':'
  +#10'      case ''Integer'':'#10'      case ''Float'':'#10'        return thi'
  +'s.getMainResultKernelPackedPixels() +'#10'          this.getMainResultSubKe'
  +'rnelPackedPixels();'#10'      default:'#10'        throw new Error(`packed '
  +'output only usable with Numbers, "${this.returnType}" specified`);'#10'    '
  +'}'#10'  }'#10#10'  getMainResultKernelPackedPixels() {'#10'    return utils'
  +'.linesToString(['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','
  +#10'      ''  kernel()'','#10'      `  data0 = ${this.useLegacyEncoder ? ''l'
  +'egacyEncode32'' : ''encode32''}(kernelResult)`'#10'    ]);'#10'  }'#10#10' '
  +' getMainResultSubKernelPackedPixels() {'#10'    const result = [];'#10'    '
  +'if (!this.subKernels) return '''';'#10'    for (let i = 0; i < this.subKern'
  +'els.length; i++) {'#10'      const subKernel = this.subKernels[i];'#10'    '
  +'  if (subKernel.returnType === ''Integer'') {'#10'        result.push('#10
  +'          `  data${i + 1} = ${this.useLegacyEncoder ? ''legacyEncode32'' : '
  +'''encode32''}(float(subKernelResult_${this.subKernels[i].name}))`'#10'     '
  +'   );'#10'      } else {'#10'        result.push('#10'          `  data${i '
  +'+ 1} = ${this.useLegacyEncoder ? ''legacyEncode32'' : ''encode32''}(subKern'
  +'elResult_${this.subKernels[i].name})`'#10'        );'#10'      }'#10'    }'
  +#10'    return utils.linesToString(result);'#10'  }'#10#10'  getMainResultKe'
  +'rnelMemoryOptimizedFloats(result, channel) {'#10'    result.push('#10'     '
  +' ''  threadId = indexTo3D(index, uOutputDim)'','#10'      ''  kernel()'','
  +#10'      `  data0.${channel} = kernelResult`,'#10'    );'#10'  }'#10#10'  g'
  +'etMainResultSubKernelMemoryOptimizedFloats(result, channel) {'#10'    if (!'
  +'this.subKernels) return result;'#10'    for (let i = 0; i < this.subKernels'
  +'.length; i++) {'#10'      const subKernel = this.subKernels[i];'#10'      i'
  ,'f (subKernel.returnType === ''Integer'') {'#10'        result.push('#10'   '
  +'       `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name}'
  +')`,'#10'        );'#10'      } else {'#10'        result.push('#10'        '
  +'  `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,'#10'    '
  +'    );'#10'      }'#10'    }'#10'  }'#10#10'  getMainResultKernelNumberText'
  +'ure() {'#10'    return ['#10'      ''  threadId = indexTo3D(index, uOutputD'
  +'im)'','#10'      ''  kernel()'','#10'      ''  data0[0] = kernelResult'','
  +#10'    ];'#10'  }'#10#10'  getMainResultSubKernelNumberTexture() {'#10'    '
  +'const result = [];'#10'    if (!this.subKernels) return result;'#10'    for'
  +' (let i = 0; i < this.subKernels.length; ++i) {'#10'      const subKernel ='
  +' this.subKernels[i];'#10'      if (subKernel.returnType === ''Integer'') {'
  +#10'        result.push('#10'          `  data${i + 1}[0] = float(subKernelR'
  +'esult_${subKernel.name})`,'#10'        );'#10'      } else {'#10'        re'
  +'sult.push('#10'          `  data${i + 1}[0] = subKernelResult_${subKernel.n'
  +'ame}`,'#10'        );'#10'      }'#10'    }'#10'    return result;'#10'  }'
  +#10#10'  getMainResultKernelArray2Texture() {'#10'    return ['#10'      '' '
  +' threadId = indexTo3D(index, uOutputDim)'','#10'      ''  kernel()'','#10' '
  +'     ''  data0[0] = kernelResult[0]'','#10'      ''  data0[1] = kernelResul'
  +'t[1]'','#10'    ];'#10'  }'#10#10'  getMainResultSubKernelArray2Texture() {'
  +#10'    const result = [];'#10'    if (!this.subKernels) return result;'#10
  +'    for (let i = 0; i < this.subKernels.length; ++i) {'#10'      const subK'
  +'ernel = this.subKernels[i];'#10'      result.push('#10'        `  data${i +'
  +' 1}[0] = subKernelResult_${subKernel.name}[0]`,'#10'        `  data${i + 1}'
  +'[1] = subKernelResult_${subKernel.name}[1]`,'#10'      );'#10'    }'#10'   '
  +' return result;'#10'  }'#10#10'  getMainResultKernelArray3Texture() {'#10' '
  +'   return ['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'  '
  +'    ''  kernel()'','#10'      ''  data0[0] = kernelResult[0]'','#10'      '
  +'''  data0[1] = kernelResult[1]'','#10'      ''  data0[2] = kernelResult[2]'
  +''','#10'    ];'#10'  }'#10#10'  getMainResultSubKernelArray3Texture() {'#10
  +'    const result = [];'#10'    if (!this.subKernels) return result;'#10'   '
  +' for (let i = 0; i < this.subKernels.length; ++i) {'#10'      const subKern'
  +'el = this.subKernels[i];'#10'      result.push('#10'        `  data${i + 1}'
  +'[0] = subKernelResult_${subKernel.name}[0]`,'#10'        `  data${i + 1}[1]'
  +' = subKernelResult_${subKernel.name}[1]`,'#10'        `  data${i + 1}[2] = '
  +'subKernelResult_${subKernel.name}[2]`,'#10'      );'#10'    }'#10'    retur'
  +'n result;'#10'  }'#10#10'  getMainResultKernelArray4Texture() {'#10'    ret'
  +'urn ['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'      '''
  +'  kernel()'','#10'      ''  data0 = kernelResult'','#10'    ];'#10'  }'#10
  +#10'  getMainResultSubKernelArray4Texture() {'#10'    const result = [];'#10
  +'    if (!this.subKernels) return result;'#10'    for (let i = 0; i < this.s'
  +'ubKernels.length; ++i) {'#10'      result.push('#10'        `  data${i + 1}'
  +' = subKernelResult_${this.subKernels[i].name}`,'#10'      );'#10'    }'#10
  +'    return result;'#10'  }'#10#10'  destroyExtensions() {'#10'    this.exte'
  +'nsions.EXT_color_buffer_float = null;'#10'    this.extensions.OES_texture_f'
  +'loat_linear = null;'#10'  }'#10#10'  toJSON() {'#10'    const json = super.'
  +'toJSON();'#10'    json.functionNodes = FunctionBuilder.fromKernel(this, Web'
  +'GL2FunctionNode).toJSON();'#10'    json.settings.threadDim = this.threadDim'
  +';'#10'    return json;'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2'
  +'Kernel'#10'};'#10'},{"../../utils":114,"../function-builder":9,"../web-gl/k'
  +'ernel":70,"./fragment-shader":72,"./function-node":73,"./kernel-value-maps"'
  +':74,"./vertex-shader":106}],106:[function(require,module,exports){'#10'cons'
  +'t vertexShader = `#version 300 es'#10'__FLOAT_TACTIC_DECLARATION__;'#10'__I'
  +'NT_TACTIC_DECLARATION__;'#10'__SAMPLER_2D_TACTIC_DECLARATION__;'#10#10'in v'
  +'ec2 aPos;'#10'in vec2 aTexCoord;'#10#10'out vec2 vTexCoord;'#10'uniform vec'
  +'2 ratio;'#10#10'void main(void) {'#10'  gl_Position = vec4((aPos + vec2(1))'
  +' * ratio + vec2(-1), 0, 1);'#10'  vTexCoord = aTexCoord;'#10'}`;'#10#10'mod'
  +'ule.exports = {'#10'  vertexShader'#10'};'#10'},{}],107:[function(require,m'
  +'odule,exports){'#10'const lib = require(''./index'');'#10'const GPU = lib.G'
  +'PU;'#10'for (const p in lib) {'#10'  if (!lib.hasOwnProperty(p)) continue;'
  +#10'  if (p === ''GPU'') continue; '#10'  GPU[p] = lib[p];'#10'}'#10#10'if ('
  +'typeof window !== ''undefined'') {'#10'  bindTo(window);'#10'}'#10'if (type'
  +'of self !== ''undefined'') {'#10'  bindTo(self);'#10'}'#10#10'function bind'
  +'To(target) {'#10'  if (target.GPU) return;'#10'  Object.defineProperty(targ'
  +'et, ''GPU'', {'#10'    get() {'#10'      return GPU;'#10'    }'#10'  });'#10
  ,'}'#10#10'module.exports = lib;'#10'},{"./index":109}],108:[function(require'
  +',module,exports){'#10'const { gpuMock } = require(''gpu-mock.js'');'#10'con'
  +'st { utils } = require(''./utils'');'#10'const { Kernel } = require(''./bac'
  +'kend/kernel'');'#10'const { CPUKernel } = require(''./backend/cpu/kernel'')'
  +';'#10'const { HeadlessGLKernel } = require(''./backend/headless-gl/kernel'''
  +');'#10'const { WebGL2Kernel } = require(''./backend/web-gl2/kernel'');'#10
  +'const { WebGLKernel } = require(''./backend/web-gl/kernel'');'#10'const { k'
  +'ernelRunShortcut } = require(''./kernel-run-shortcut'');'#10#10#10'const ke'
  +'rnelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];'#10#10'const ker'
  +'nelTypes = [''gpu'', ''cpu''];'#10#10'const internalKernels = {'#10'  ''hea'
  +'dlessgl'': HeadlessGLKernel,'#10'  ''webgl2'': WebGL2Kernel,'#10'  ''webgl'
  +''': WebGLKernel,'#10'};'#10#10'let validate = true;'#10#10'class GPU {'#10
  +'  static disableValidation() {'#10'    validate = false;'#10'  }'#10#10'  s'
  +'tatic enableValidation() {'#10'    validate = true;'#10'  }'#10#10'  static'
  +' get isGPUSupported() {'#10'    return kernelOrder.some(Kernel => Kernel.is'
  +'Supported);'#10'  }'#10#10'  static get isKernelMapSupported() {'#10'    re'
  +'turn kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kerne'
  +'lMap);'#10'  }'#10#10'  static get isOffscreenCanvasSupported() {'#10'    r'
  +'eturn (typeof Worker !== ''undefined'' && typeof OffscreenCanvas !== ''unde'
  +'fined'') || typeof importScripts !== ''undefined'';'#10'  }'#10#10'  static'
  +' get isWebGLSupported() {'#10'    return WebGLKernel.isSupported;'#10'  }'
  +#10#10'  static get isWebGL2Supported() {'#10'    return WebGL2Kernel.isSupp'
  +'orted;'#10'  }'#10#10'  static get isHeadlessGLSupported() {'#10'    return'
  +' HeadlessGLKernel.isSupported;'#10'  }'#10#10'  static get isCanvasSupporte'
  +'d() {'#10'    return typeof HTMLCanvasElement !== ''undefined'';'#10'  }'#10
  +#10'  static get isGPUHTMLImageArraySupported() {'#10'    return WebGL2Kerne'
  +'l.isSupported;'#10'  }'#10#10'  static get isSinglePrecisionSupported() {'
  +#10'    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.featu'
  +'res.isFloatRead && Kernel.features.isTextureFloat);'#10'  }'#10#10'  constr'
  +'uctor(settings) {'#10'    settings = settings || {};'#10'    this.canvas = '
  +'settings.canvas || null;'#10'    this.context = settings.context || null;'
  +#10'    this.mode = settings.mode;'#10'    this.Kernel = null;'#10'    this.'
  +'kernels = [];'#10'    this.functions = [];'#10'    this.nativeFunctions = ['
  +'];'#10'    this.injectedNative = null;'#10'    this.onIstanbulCoverageVaria'
  +'ble = settings.onIstanbulCoverageVariable || null;'#10'    this.removeIstan'
  +'bulCoverage = settings.hasOwnProperty(''removeIstanbulCoverage'') ? setting'
  +'s.removeIstanbulCoverage : null;'#10'    if (this.mode === ''dev'') return;'
  +#10'    this.chooseKernel();'#10'    if (settings.functions) {'#10'      for'
  +' (let i = 0; i < settings.functions.length; i++) {'#10'        this.addFunc'
  +'tion(settings.functions[i]);'#10'      }'#10'    }'#10#10'    if (settings.'
  +'nativeFunctions) {'#10'      for (const p in settings.nativeFunctions) {'#10
  +'        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;'#10'    '
  +'    const s = settings.nativeFunctions[p];'#10'        const { name, source'
  +' } = s;'#10'        this.addNativeFunction(name, source, s);'#10'      }'#10
  +'    }'#10'  }'#10#10'  chooseKernel() {'#10'    if (this.Kernel) return;'#10
  +#10'    let Kernel = null;'#10#10'    if (this.context) {'#10'      for (let'
  +' i = 0; i < kernelOrder.length; i++) {'#10'        const ExternalKernel = k'
  +'ernelOrder[i];'#10'        if (ExternalKernel.isContextMatch(this.context))'
  +' {'#10'          if (!ExternalKernel.isSupported) {'#10'            throw n'
  +'ew Error(`Kernel type ${ExternalKernel.name} not supported`);'#10'         '
  +' }'#10'          Kernel = ExternalKernel;'#10'          break;'#10'        '
  +'}'#10'      }'#10'      if (Kernel === null) {'#10'        throw new Error('
  +'''unknown Context'');'#10'      }'#10'    } else if (this.mode) {'#10'     '
  +' if (this.mode in internalKernels) {'#10'        if (!validate || internalK'
  +'ernels[this.mode].isSupported) {'#10'          Kernel = internalKernels[thi'
  +'s.mode];'#10'        }'#10'      } else if (this.mode === ''gpu'') {'#10'  '
  +'      for (let i = 0; i < kernelOrder.length; i++) {'#10'          if (kern'
  +'elOrder[i].isSupported) {'#10'            Kernel = kernelOrder[i];'#10'    '
  +'        break;'#10'          }'#10'        }'#10'      } else if (this.mode'
  +' === ''cpu'') {'#10'        Kernel = CPUKernel;'#10'      }'#10'      if (!'
  +'Kernel) {'#10'        throw new Error(`A requested mode of "${this.mode}" a'
  +'nd is not supported`);'#10'      }'#10'    } else {'#10'      for (let i = '
  +'0; i < kernelOrder.length; i++) {'#10'        if (kernelOrder[i].isSupporte'
  +'d) {'#10'          Kernel = kernelOrder[i];'#10'          break;'#10'      '
  ,'  }'#10'      }'#10'      if (!Kernel) {'#10'        Kernel = CPUKernel;'#10
  +'      }'#10'    }'#10#10'    if (!this.mode) {'#10'      this.mode = Kernel'
  +'.mode;'#10'    }'#10'    this.Kernel = Kernel;'#10'  }'#10#10'  createKerne'
  +'l(source, settings) {'#10'    if (typeof source === ''undefined'') {'#10'  '
  +'    throw new Error(''Missing source parameter'');'#10'    }'#10'    if (ty'
  +'peof source !== ''object'' && !utils.isFunction(source) && typeof source !='
  +'= ''string'') {'#10'      throw new Error(''source parameter not a function'
  +''');'#10'    }'#10#10'    const kernels = this.kernels;'#10'    if (this.mo'
  +'de === ''dev'') {'#10'      const devKernel = gpuMock(source, upgradeDeprec'
  +'atedCreateKernelSettings(settings));'#10'      kernels.push(devKernel);'#10
  +'      return devKernel;'#10'    }'#10#10'    source = typeof source === ''f'
  +'unction'' ? source.toString() : source;'#10'    const switchableKernels = {'
  +'};'#10'    const settingsCopy = upgradeDeprecatedCreateKernelSettings(setti'
  +'ngs) || {};'#10'    if (settings && typeof settings.argumentTypes === ''obj'
  +'ect'') {'#10'      settingsCopy.argumentTypes = Object.keys(settings.argume'
  +'ntTypes).map(argumentName => settings.argumentTypes[argumentName]);'#10'   '
  +' }'#10#10'    function onRequestFallback(args) {'#10'      console.warn(''F'
  +'alling back to CPU'');'#10'      const fallbackKernel = new CPUKernel(sourc'
  +'e, {'#10'        argumentTypes: kernelRun.argumentTypes,'#10'        consta'
  +'ntTypes: kernelRun.constantTypes,'#10'        graphical: kernelRun.graphica'
  +'l,'#10'        loopMaxIterations: kernelRun.loopMaxIterations,'#10'        '
  +'constants: kernelRun.constants,'#10'        dynamicOutput: kernelRun.dynami'
  +'cOutput,'#10'        dynamicArgument: kernelRun.dynamicArguments,'#10'     '
  +'   output: kernelRun.output,'#10'        precision: kernelRun.precision,'#10
  +'        pipeline: kernelRun.pipeline,'#10'        immutable: kernelRun.immu'
  +'table,'#10'        optimizeFloatMemory: kernelRun.optimizeFloatMemory,'#10
  +'        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,'
  +#10'        functions: kernelRun.functions,'#10'        nativeFunctions: ker'
  +'nelRun.nativeFunctions,'#10'        injectedNative: kernelRun.injectedNativ'
  +'e,'#10'        subKernels: kernelRun.subKernels,'#10'        strictIntegers'
  +': kernelRun.strictIntegers,'#10'        debug: kernelRun.debug,'#10'      }'
  +');'#10'      fallbackKernel.build.apply(fallbackKernel, args);'#10'      co'
  +'nst result = fallbackKernel.run.apply(fallbackKernel, args);'#10'      kern'
  +'elRun.replaceKernel(fallbackKernel);'#10'      return result;'#10'    }'#10
  +#10'    function onRequestSwitchKernel(reasons, args, _kernel) {'#10'      i'
  +'f (_kernel.debug) {'#10'        console.warn(''Switching kernels'');'#10'  '
  +'    }'#10'      let newOutput = null;'#10'      if (_kernel.signature && !s'
  +'witchableKernels[_kernel.signature]) {'#10'        switchableKernels[_kerne'
  +'l.signature] = _kernel;'#10'      }'#10'      if (_kernel.dynamicOutput) {'
  +#10'        for (let i = reasons.length - 1; i >= 0; i--) {'#10'          co'
  +'nst reason = reasons[i];'#10'          if (reason.type === ''outputPrecisio'
  +'nMismatch'') {'#10'            newOutput = reason.needed;'#10'          }'
  +#10'        }'#10'      }'#10#10'      const Constructor = _kernel.construct'
  +'or;'#10'      const argumentTypes = Constructor.getArgumentTypes(_kernel, a'
  +'rgs);'#10'      const signature = Constructor.getSignature(_kernel, argumen'
  +'tTypes);'#10'      const existingKernel = switchableKernels[signature];'#10
  +'      if (existingKernel) {'#10'        existingKernel.onActivate(_kernel);'
  +#10'        return existingKernel;'#10'      }'#10#10'      const newKernel '
  +'= switchableKernels[signature] = new Constructor(source, {'#10'        argu'
  +'mentTypes,'#10'        constantTypes: _kernel.constantTypes,'#10'        gr'
  +'aphical: _kernel.graphical,'#10'        loopMaxIterations: _kernel.loopMaxI'
  +'terations,'#10'        constants: _kernel.constants,'#10'        dynamicOut'
  +'put: _kernel.dynamicOutput,'#10'        dynamicArgument: _kernel.dynamicArg'
  +'uments,'#10'        context: _kernel.context,'#10'        canvas: _kernel.c'
  +'anvas,'#10'        output: newOutput || _kernel.output,'#10'        precisi'
  +'on: _kernel.precision,'#10'        pipeline: _kernel.pipeline,'#10'        '
  +'immutable: _kernel.immutable,'#10'        optimizeFloatMemory: _kernel.opti'
  +'mizeFloatMemory,'#10'        fixIntegerDivisionAccuracy: _kernel.fixInteger'
  +'DivisionAccuracy,'#10'        functions: _kernel.functions,'#10'        nat'
  +'iveFunctions: _kernel.nativeFunctions,'#10'        injectedNative: _kernel.'
  +'injectedNative,'#10'        subKernels: _kernel.subKernels,'#10'        str'
  +'ictIntegers: _kernel.strictIntegers,'#10'        debug: _kernel.debug,'#10
  +'        gpu: _kernel.gpu,'#10'        validate,'#10'        returnType: _ke'
  +'rnel.returnType,'#10'        onIstanbulCoverageVariable: _kernel.onIstanbul'
  ,'CoverageVariable,'#10'        removeIstanbulCoverage: _kernel.removeIstanbu'
  +'lCoverage,'#10'        tactic: _kernel.tactic,'#10'        onRequestFallbac'
  +'k,'#10'        onRequestSwitchKernel,'#10'        texture: _kernel.texture,'
  +#10'        mappedTextures: _kernel.mappedTextures,'#10'        drawBuffersM'
  +'ap: _kernel.drawBuffersMap,'#10'      });'#10'      newKernel.build.apply(n'
  +'ewKernel, args);'#10'      kernelRun.replaceKernel(newKernel);'#10'      ke'
  +'rnels.push(newKernel);'#10'      return newKernel;'#10'    }'#10'    const '
  +'mergedSettings = Object.assign({'#10'      context: this.context,'#10'     '
  +' canvas: this.canvas,'#10'      functions: this.functions,'#10'      native'
  +'Functions: this.nativeFunctions,'#10'      injectedNative: this.injectedNat'
  +'ive,'#10'      onIstanbulCoverageVariable: this.onIstanbulCoverageVariable,'
  +#10'      removeIstanbulCoverage: this.removeIstanbulCoverage,'#10'      gpu'
  +': this,'#10'      validate,'#10'      onRequestFallback,'#10'      onReques'
  +'tSwitchKernel'#10'    }, settingsCopy);'#10#10'    const kernel = new this.'
  +'Kernel(source, mergedSettings);'#10'    const kernelRun = kernelRunShortcut'
  +'(kernel);'#10#10'    if (!this.canvas) {'#10'      this.canvas = kernel.can'
  +'vas;'#10'    }'#10#10'    if (!this.context) {'#10'      this.context = ker'
  +'nel.context;'#10'    }'#10#10'    kernels.push(kernel);'#10#10'    return k'
  +'ernelRun;'#10'  }'#10#10'  createKernelMap() {'#10'    let fn;'#10'    let '
  +'settings;'#10'    const argument2Type = typeof arguments[arguments.length -'
  +' 2];'#10'    if (argument2Type === ''function'' || argument2Type === ''stri'
  +'ng'') {'#10'      fn = arguments[arguments.length - 2];'#10'      settings '
  +'= arguments[arguments.length - 1];'#10'    } else {'#10'      fn = argument'
  +'s[arguments.length - 1];'#10'    }'#10#10'    if (this.mode !== ''dev'') {'
  +#10'      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {'
  +#10'        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {'#10'     '
  +'     throw new Error(`kernelMap not supported on ${this.Kernel.name}`);'#10
  +'        }'#10'      }'#10'    }'#10#10'    const settingsCopy = upgradeDepr'
  +'ecatedCreateKernelSettings(settings);'#10'    if (settings && typeof settin'
  +'gs.argumentTypes === ''object'') {'#10'      settingsCopy.argumentTypes = O'
  +'bject.keys(settings.argumentTypes).map(argumentName => settings.argumentTyp'
  +'es[argumentName]);'#10'    }'#10#10'    if (Array.isArray(arguments[0])) {'
  +#10'      settingsCopy.subKernels = [];'#10'      const functions = argument'
  +'s[0];'#10'      for (let i = 0; i < functions.length; i++) {'#10'        co'
  +'nst source = functions[i].toString();'#10'        const name = utils.getFun'
  +'ctionNameFromString(source);'#10'        settingsCopy.subKernels.push({'#10
  +'          name,'#10'          source,'#10'          property: i,'#10'      '
  +'  });'#10'      }'#10'    } else {'#10'      settingsCopy.subKernels = [];'
  +#10'      const functions = arguments[0];'#10'      for (let p in functions)'
  +' {'#10'        if (!functions.hasOwnProperty(p)) continue;'#10'        cons'
  +'t source = functions[p].toString();'#10'        const name = utils.getFunct'
  +'ionNameFromString(source);'#10'        settingsCopy.subKernels.push({'#10' '
  +'         name: name || p,'#10'          source,'#10'          property: p,'
  +#10'        });'#10'      }'#10'    }'#10'    return this.createKernel(fn, s'
  +'ettingsCopy);'#10'  }'#10#10'  combineKernels() {'#10'    const firstKernel'
  +' = arguments[0];'#10'    const combinedKernel = arguments[arguments.length '
  +'- 1];'#10'    if (firstKernel.kernel.constructor.mode === ''cpu'') return c'
  +'ombinedKernel;'#10'    const canvas = arguments[0].canvas;'#10'    const co'
  +'ntext = arguments[0].context;'#10'    const max = arguments.length - 1;'#10
  +'    for (let i = 0; i < max; i++) {'#10'      arguments[i]'#10'        .set'
  +'Canvas(canvas)'#10'        .setContext(context)'#10'        .setPipeline(tr'
  +'ue);'#10'    }'#10#10'    return function() {'#10'      const texture = com'
  +'binedKernel.apply(this, arguments);'#10'      if (texture.toArray) {'#10'  '
  +'      return texture.toArray();'#10'      }'#10'      return texture;'#10' '
  +'   };'#10'  }'#10#10'  setFunctions(functions) {'#10'    this.functions = f'
  +'unctions;'#10'    return this;'#10'  }'#10#10'  setNativeFunctions(nativeFu'
  +'nctions) {'#10'    this.nativeFunctions = nativeFunctions;'#10'    return t'
  +'his;'#10'  }'#10#10'  addFunction(source, settings) {'#10'    this.function'
  +'s.push({ source, settings });'#10'    return this;'#10'  }'#10#10'  addNati'
  +'veFunction(name, source, settings) {'#10'    if (this.kernels.length > 0) {'
  +#10'      throw new Error(''Cannot call "addNativeFunction" after "createKer'
  +'nels" has been called.'');'#10'    }'#10'    this.nativeFunctions.push(Obje'
  +'ct.assign({ name, source }, settings));'#10'    return this;'#10'  }'#10#10
  +'  injectNative(source) {'#10'    this.injectedNative = source;'#10'    retu'
  ,'rn this;'#10'  }'#10#10'  destroy() {'#10'    return new Promise((resolve, '
  +'reject) => {'#10'      if (!this.kernels) {'#10'        resolve();'#10'    '
  +'  }'#10'      setTimeout(() => {'#10'        try {'#10'          for (let i'
  +' = 0; i < this.kernels.length; i++) {'#10'            this.kernels[i].destr'
  +'oy(true); '#10'          }'#10'          let firstKernel = this.kernels[0];'
  +#10'          if (firstKernel) {'#10'            if (firstKernel.kernel) {'
  +#10'              firstKernel = firstKernel.kernel;'#10'            }'#10'  '
  +'          if (firstKernel.constructor.destroyContext) {'#10'              f'
  +'irstKernel.constructor.destroyContext(this.context);'#10'            }'#10
  +'          }'#10'        } catch (e) {'#10'          reject(e);'#10'        '
  +'}'#10'        resolve();'#10'      }, 0);'#10'    });'#10'  }'#10'}'#10#10
  +#10'function upgradeDeprecatedCreateKernelSettings(settings) {'#10'  if (!se'
  +'ttings) {'#10'    return {};'#10'  }'#10'  const upgradedSettings = Object.'
  +'assign({}, settings);'#10#10'  if (settings.hasOwnProperty(''floatOutput'')'
  +') {'#10'    utils.warnDeprecated(''setting'', ''floatOutput'', ''precision'
  +''');'#10'    upgradedSettings.precision = settings.floatOutput ? ''single'''
  +' : ''unsigned'';'#10'  }'#10'  if (settings.hasOwnProperty(''outputToTextur'
  +'e'')) {'#10'    utils.warnDeprecated(''setting'', ''outputToTexture'', ''pi'
  +'peline'');'#10'    upgradedSettings.pipeline = Boolean(settings.outputToTex'
  +'ture);'#10'  }'#10'  if (settings.hasOwnProperty(''outputImmutable'')) {'#10
  +'    utils.warnDeprecated(''setting'', ''outputImmutable'', ''immutable'');'
  +#10'    upgradedSettings.immutable = Boolean(settings.outputImmutable);'#10
  +'  }'#10'  if (settings.hasOwnProperty(''floatTextures'')) {'#10'    utils.w'
  +'arnDeprecated(''setting'', ''floatTextures'', ''optimizeFloatMemory'');'#10
  +'    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);'
  +#10'  }'#10'  return upgradedSettings;'#10'}'#10#10'module.exports = {'#10' '
  +' GPU,'#10'  kernelOrder,'#10'  kernelTypes'#10'};'#10'},{"./backend/cpu/ker'
  +'nel":8,"./backend/headless-gl/kernel":34,"./backend/kernel":36,"./backend/w'
  +'eb-gl/kernel":70,"./backend/web-gl2/kernel":105,"./kernel-run-shortcut":111'
  +',"./utils":114,"gpu-mock.js":4}],109:[function(require,module,exports){'#10
  +'const { GPU } = require(''./gpu'');'#10'const { alias } = require(''./alias'
  +''');'#10'const { utils } = require(''./utils'');'#10'const { Input, input }'
  +' = require(''./input'');'#10'const { Texture } = require(''./texture'');'#10
  +'const { FunctionBuilder } = require(''./backend/function-builder'');'#10'co'
  +'nst { FunctionNode } = require(''./backend/function-node'');'#10'const { CP'
  +'UFunctionNode } = require(''./backend/cpu/function-node'');'#10'const { CPU'
  +'Kernel } = require(''./backend/cpu/kernel'');'#10#10'const { HeadlessGLKern'
  +'el } = require(''./backend/headless-gl/kernel'');'#10#10'const { WebGLFunct'
  +'ionNode } = require(''./backend/web-gl/function-node'');'#10'const { WebGLK'
  +'ernel } = require(''./backend/web-gl/kernel'');'#10'const { kernelValueMaps'
  +': webGLKernelValueMaps } = require(''./backend/web-gl/kernel-value-maps'');'
  +#10#10'const { WebGL2FunctionNode } = require(''./backend/web-gl2/function-n'
  +'ode'');'#10'const { WebGL2Kernel } = require(''./backend/web-gl2/kernel'');'
  +#10'const { kernelValueMaps: webGL2KernelValueMaps } = require(''./backend/w'
  +'eb-gl2/kernel-value-maps'');'#10#10'const { GLKernel } = require(''./backen'
  +'d/gl/kernel'');'#10#10'const { Kernel } = require(''./backend/kernel'');'#10
  +#10'const { FunctionTracer } = require(''./backend/function-tracer'');'#10#10
  +'const mathRandom = require(''./plugins/math-random-uniformly-distributed'')'
  +';'#10#10'module.exports = {'#10'  alias,'#10'  CPUFunctionNode,'#10'  CPUKe'
  +'rnel,'#10'  GPU,'#10'  FunctionBuilder,'#10'  FunctionNode,'#10'  HeadlessG'
  +'LKernel,'#10'  Input,'#10'  input,'#10'  Texture,'#10'  utils,'#10#10'  Web'
  +'GL2FunctionNode,'#10'  WebGL2Kernel,'#10'  webGL2KernelValueMaps,'#10#10'  '
  +'WebGLFunctionNode,'#10'  WebGLKernel,'#10'  webGLKernelValueMaps,'#10#10'  '
  +'GLKernel,'#10'  Kernel,'#10'  FunctionTracer,'#10#10'  plugins: {'#10'    m'
  +'athRandom'#10'  }'#10'};'#10'},{"./alias":5,"./backend/cpu/function-node":6'
  +',"./backend/cpu/kernel":8,"./backend/function-builder":9,"./backend/functio'
  +'n-node":10,"./backend/function-tracer":11,"./backend/gl/kernel":13,"./backe'
  +'nd/headless-gl/kernel":34,"./backend/kernel":36,"./backend/web-gl/function-'
  +'node":38,"./backend/web-gl/kernel":70,"./backend/web-gl/kernel-value-maps":'
  +'39,"./backend/web-gl2/function-node":73,"./backend/web-gl2/kernel":105,"./b'
  +'ackend/web-gl2/kernel-value-maps":74,"./gpu":108,"./input":110,"./plugins/m'
  +'ath-random-uniformly-distributed":112,"./texture":113,"./utils":114}],110:['
  +'function(require,module,exports){'#10'class Input {'#10'  constructor(value'
  +', size) {'#10'    this.value = value;'#10'    if (Array.isArray(size)) {'#10
  ,'      this.size = size;'#10'    } else {'#10'      this.size = new Int32Arr'
  +'ay(3);'#10'      if (size.z) {'#10'        this.size = new Int32Array([size'
  +'.x, size.y, size.z]);'#10'      } else if (size.y) {'#10'        this.size '
  +'= new Int32Array([size.x, size.y]);'#10'      } else {'#10'        this.siz'
  +'e = new Int32Array([size.x]);'#10'      }'#10'    }'#10#10'    const [w, h,'
  +' d] = this.size;'#10'    if (d) {'#10'      if (this.value.length !== (w * '
  +'h * d)) {'#10'        throw new Error(`Input size ${this.value.length} does'
  +' not match ${w} * ${h} * ${d} = ${(h * w * d)}`);'#10'      }'#10'    } els'
  +'e if (h) {'#10'      if (this.value.length !== (w * h)) {'#10'        throw'
  +' new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${'
  +'(h * w)}`);'#10'      }'#10'    } else {'#10'      if (this.value.length !='
  +'= w) {'#10'        throw new Error(`Input size ${this.value.length} does no'
  +'t match ${w}`);'#10'      }'#10'    }'#10#10'  }'#10#10'  toArray() {'#10' '
  +'   const { utils } = require(''./utils'');'#10'    const [w, h, d] = this.s'
  +'ize;'#10'    if (d) {'#10'      return utils.erectMemoryOptimized3DFloat(th'
  +'is.value.subarray ? this.value : new Float32Array(this.value), w, h, d);'#10
  +'    } else if (h) {'#10'      return utils.erectMemoryOptimized2DFloat(this'
  +'.value.subarray ? this.value : new Float32Array(this.value), w, h);'#10'   '
  +' } else {'#10'      return this.value;'#10'    }'#10'  }'#10'}'#10#10'funct'
  +'ion input(value, size) {'#10'  return new Input(value, size);'#10'}'#10#10
  +'module.exports = {'#10'  Input,'#10'  input'#10'};'#10'},{"./utils":114}],1'
  +'11:[function(require,module,exports){'#10'const { utils } = require(''./uti'
  +'ls'');'#10#10'function kernelRunShortcut(kernel) {'#10'  let run = function'
  +'() {'#10'    kernel.build.apply(kernel, arguments);'#10'    run = function('
  +') {'#10'      let result = kernel.run.apply(kernel, arguments);'#10'      i'
  +'f (kernel.switchingKernels) {'#10'        const reasons = kernel.resetSwitc'
  +'hingKernels();'#10'        const newKernel = kernel.onRequestSwitchKernel(r'
  +'easons, arguments, kernel);'#10'        shortcut.kernel = kernel = newKerne'
  +'l;'#10'        result = newKernel.run.apply(newKernel, arguments);'#10'    '
  +'  }'#10'      if (kernel.renderKernels) {'#10'        return kernel.renderK'
  +'ernels();'#10'      } else if (kernel.renderOutput) {'#10'        return ke'
  +'rnel.renderOutput();'#10'      } else {'#10'        return result;'#10'    '
  +'  }'#10'    };'#10'    return run.apply(kernel, arguments);'#10'  };'#10'  '
  +'const shortcut = function() {'#10'    return run.apply(kernel, arguments);'
  +#10'  };'#10'  shortcut.exec = function() {'#10'    return new Promise((acce'
  +'pt, reject) => {'#10'      try {'#10'        accept(run.apply(this, argumen'
  +'ts));'#10'      } catch (e) {'#10'        reject(e);'#10'      }'#10'    })'
  +';'#10'  };'#10'  shortcut.replaceKernel = function(replacementKernel) {'#10
  +'    kernel = replacementKernel;'#10'    bindKernelToShortcut(kernel, shortc'
  +'ut);'#10'  };'#10#10'  bindKernelToShortcut(kernel, shortcut);'#10'  return'
  +' shortcut;'#10'}'#10#10'function bindKernelToShortcut(kernel, shortcut) {'
  +#10'  if (shortcut.kernel) {'#10'    shortcut.kernel = kernel;'#10'    retur'
  +'n;'#10'  }'#10'  const properties = utils.allPropertiesOf(kernel);'#10'  fo'
  +'r (let i = 0; i < properties.length; i++) {'#10'    const property = proper'
  +'ties[i];'#10'    if (property[0] === ''_'' && property[1] === ''_'') contin'
  +'ue;'#10'    if (typeof kernel[property] === ''function'') {'#10'      if (p'
  +'roperty.substring(0, 3) === ''add'' || property.substring(0, 3) === ''set'''
  +') {'#10'        shortcut[property] = function() {'#10'          shortcut.ke'
  +'rnel[property].apply(shortcut.kernel, arguments);'#10'          return shor'
  +'tcut;'#10'        };'#10'      } else {'#10'        shortcut[property] = fu'
  +'nction() {'#10'          return shortcut.kernel[property].apply(shortcut.ke'
  +'rnel, arguments);'#10'        };'#10'      }'#10'    } else {'#10'      sho'
  +'rtcut.__defineGetter__(property, () => shortcut.kernel[property]);'#10'    '
  +'  shortcut.__defineSetter__(property, (value) => {'#10'        shortcut.ker'
  +'nel[property] = value;'#10'      });'#10'    }'#10'  }'#10'  shortcut.kerne'
  +'l = kernel;'#10'}'#10'module.exports = {'#10'  kernelRunShortcut'#10'};'#10
  +'},{"./utils":114}],112:[function(require,module,exports){'#10'const source '
  +'= `// https://www.shadertoy.com/view/4t2SDh'#10'//note: uniformly distribut'
  +'ed, normalized rand, [0,1]'#10'highp float randomSeedShift = 1.0;'#10'highp'
  +' float slide = 1.0;'#10'uniform highp float randomSeed1;'#10'uniform highp '
  +'float randomSeed2;'#10#10'highp float nrand(highp vec2 n) {'#10'  highp flo'
  +'at result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSe'
  +'ed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);'#10'  random'
  +'SeedShift = result;'#10'  if (randomSeedShift > 0.5) {'#10'    slide += 0.0'
  ,'0009; '#10'  } else {'#10'    slide += 0.0009;'#10'  }'#10'  return result;'
  +#10'}`;'#10#10'const name = ''math-random-uniformly-distributed'';'#10#10'co'
  +'nst functionMatch = `Math.random()`;'#10#10'const functionReplace = `nrand('
  +'vTexCoord)`;'#10#10'const functionReturnType = ''Number'';'#10'const onBefo'
  +'reRun = (kernel) => {'#10'  kernel.setUniform1f(''randomSeed1'', Math.rando'
  +'m());'#10'  kernel.setUniform1f(''randomSeed2'', Math.random());'#10'};'#10
  +#10'const plugin = {'#10'  name,'#10'  onBeforeRun,'#10'  functionMatch,'#10
  +'  functionReplace,'#10'  functionReturnType,'#10'  source'#10'};'#10#10'mod'
  +'ule.exports = plugin;'#10'},{}],113:[function(require,module,exports){'#10
  +'class Texture {'#10'  constructor(settings) {'#10'    const {'#10'      tex'
  +'ture,'#10'      size,'#10'      dimensions,'#10'      output,'#10'      con'
  +'text,'#10'      type = ''NumberTexture'','#10'      kernel,'#10'      inter'
  +'nalFormat,'#10'      textureFormat'#10'    } = settings;'#10'    if (!outpu'
  +'t) throw new Error(''settings property "output" required.'');'#10'    if (!'
  +'context) throw new Error(''settings property "context" required.'');'#10'  '
  +'  if (!texture) throw new Error(''settings property "texture" required.'');'
  +#10'    if (!kernel) throw new Error(''settings property "kernel" required.'
  +''');'#10'    this.texture = texture;'#10'    if (texture._refs) {'#10'     '
  +' texture._refs++;'#10'    } else {'#10'      texture._refs = 1;'#10'    }'
  +#10'    this.size = size;'#10'    this.dimensions = dimensions;'#10'    this'
  +'.output = output;'#10'    this.context = context;'#10'    this.kernel = ker'
  +'nel;'#10'    this.type = type;'#10'    this._deleted = false;'#10'    this.'
  +'internalFormat = internalFormat;'#10'    this.textureFormat = textureFormat'
  +';'#10'  }'#10#10'  toArray() {'#10'    throw new Error(`Not implemented on '
  +'${this.constructor.name}`);'#10'  }'#10#10'  clone() {'#10'    throw new Er'
  +'ror(`Not implemented on ${this.constructor.name}`);'#10'  }'#10#10'  delete'
  +'() {'#10'    throw new Error(`Not implemented on ${this.constructor.name}`)'
  +';'#10'  }'#10#10'  clear() {'#10'    throw new Error(`Not implemented on ${'
  +'this.constructor.name}`);'#10'  }'#10'}'#10#10'module.exports = {'#10'  Tex'
  +'ture'#10'};'#10'},{}],114:[function(require,module,exports){'#10'const acor'
  +'n = require(''acorn'');'#10'const { Input } = require(''./input'');'#10'con'
  +'st { Texture } = require(''./texture'');'#10#10'const FUNCTION_NAME = /func'
  +'tion ([^(]*)/;'#10'const STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/m'
  +'g;'#10'const ARGUMENT_NAMES = /([^\s,]+)/g;'#10#10'const utils = {'#10'  sy'
  +'stemEndianness() {'#10'    return _systemEndianness;'#10'  },'#10'  getSyst'
  +'emEndianness() {'#10'    const b = new ArrayBuffer(4);'#10'    const a = ne'
  +'w Uint32Array(b);'#10'    const c = new Uint8Array(b);'#10'    a[0] = 0xdea'
  +'dbeef;'#10'    if (c[0] === 0xef) return ''LE'';'#10'    if (c[0] === 0xde)'
  +' return ''BE'';'#10'    throw new Error(''unknown endianness'');'#10'  },'
  +#10#10'  isFunction(funcObj) {'#10'    return typeof(funcObj) === ''function'
  +''';'#10'  },'#10#10'  isFunctionString(fn) {'#10'    if (typeof fn === ''st'
  +'ring'') {'#10'      return (fn'#10'        .slice(0, ''function''.length)'
  +#10'        .toLowerCase() === ''function'');'#10'    }'#10'    return false'
  +';'#10'  },'#10#10'  getFunctionNameFromString(funcStr) {'#10'    const resu'
  +'lt = FUNCTION_NAME.exec(funcStr);'#10'    if (!result || result.length === '
  +'0) return null;'#10'    return result[1].trim();'#10'  },'#10#10'  getFunct'
  +'ionBodyFromString(funcStr) {'#10'    return funcStr.substring(funcStr.index'
  +'Of(''{'') + 1, funcStr.lastIndexOf(''}''));'#10'  },'#10#10'  getArgumentNa'
  +'mesFromString(fn) {'#10'    const fnStr = fn.replace(STRIP_COMMENTS, '''');'
  +#10'    let result = fnStr.slice(fnStr.indexOf(''('') + 1, fnStr.indexOf('')'
  +''')).match(ARGUMENT_NAMES);'#10'    if (result === null) {'#10'      result'
  +' = [];'#10'    }'#10'    return result;'#10'  },'#10#10'  clone(obj) {'#10
  +'    if (obj === null || typeof obj !== ''object'' || obj.hasOwnProperty(''i'
  +'sActiveClone'')) return obj;'#10#10'    const temp = obj.constructor(); '#10
  +#10'    for (let key in obj) {'#10'      if (Object.prototype.hasOwnProperty'
  +'.call(obj, key)) {'#10'        obj.isActiveClone = null;'#10'        temp[k'
  +'ey] = utils.clone(obj[key]);'#10'        delete obj.isActiveClone;'#10'    '
  +'  }'#10'    }'#10#10'    return temp;'#10'  },'#10#10'  isArray(array) {'#10
  +'    return !isNaN(array.length);'#10'  },'#10#10'  getVariableType(value, s'
  +'trictIntegers) {'#10'    if (utils.isArray(value)) {'#10'      if (value.le'
  +'ngth > 0 && value[0].nodeName === ''IMG'') {'#10'        return ''HTMLImage'
  +'Array'';'#10'      }'#10'      return ''Array'';'#10'    }'#10#10'    switc'
  +'h (value.constructor) {'#10'      case Boolean:'#10'        return ''Boolea'
  +'n'';'#10'      case Number:'#10'        if (strictIntegers && Number.isInte'
  ,'ger(value)) {'#10'          return ''Integer'';'#10'        }'#10'        r'
  +'eturn ''Float'';'#10'      case Texture:'#10'        return value.type;'#10
  +'      case Input:'#10'        return ''Input'';'#10'    }'#10'    switch (v'
  +'alue.nodeName) {'#10'      case ''IMG'':'#10'        return ''HTMLImage'';'
  +#10'      case ''CANVAS'':'#10'        return ''HTMLImage'';'#10'      case '
  +'''VIDEO'':'#10'        return ''HTMLVideo'';'#10'    }'#10'    if (value.ha'
  +'sOwnProperty(''type'')) {'#10'      return value.type;'#10'    }'#10'    re'
  +'turn ''Unknown'';'#10'  },'#10#10'  getKernelTextureSize(settings, dimensio'
  +'ns) {'#10'    let [w, h, d] = dimensions;'#10'    let texelCount = (w || 1)'
  +' * (h || 1) * (d || 1);'#10#10'    if (settings.optimizeFloatMemory && sett'
  +'ings.precision === ''single'') {'#10'      w = texelCount = Math.ceil(texel'
  +'Count / 4);'#10'    }'#10'    if (h > 1 && w * h === texelCount) {'#10'    '
  +'  return new Int32Array([w, h]);'#10'    }'#10'    return utils.closestSqua'
  +'reDimensions(texelCount);'#10'  },'#10#10'  closestSquareDimensions(length)'
  +' {'#10'    const sqrt = Math.sqrt(length);'#10'    let high = Math.ceil(sqr'
  +'t);'#10'    let low = Math.floor(sqrt);'#10'    while (high * low < length)'
  +' {'#10'      high--;'#10'      low = Math.ceil(length / high);'#10'    }'#10
  +'    return new Int32Array([low, Math.ceil(length / low)]);'#10'  },'#10#10
  +'  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {'#10'    const '
  +'totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (di'
  +'mensions[2] || 1) * (dimensions[3] || 1), 4);'#10'    const texelCount = to'
  +'talArea / bitRatio;'#10'    return utils.closestSquareDimensions(texelCount'
  +');'#10'  },'#10#10'  getMemoryOptimizedPackedTextureSize(dimensions, bitRat'
  +'io) {'#10'    const [w, h, d] = dimensions;'#10'    const totalArea = utils'
  +'.roundTo((w || 1) * (h || 1) * (d || 1), 4);'#10'    const texelCount = tot'
  +'alArea / (4 / bitRatio);'#10'    return utils.closestSquareDimensions(texel'
  +'Count);'#10'  },'#10#10'  roundTo(n, d) {'#10'    return Math.floor((n + d '
  +'- 1) / d) * d;'#10'  },'#10'  getDimensions(x, pad) {'#10'    let ret;'#10
  +'    if (utils.isArray(x)) {'#10'      const dim = [];'#10'      let temp = '
  +'x;'#10'      while (utils.isArray(temp)) {'#10'        dim.push(temp.length'
  +');'#10'        temp = temp[0];'#10'      }'#10'      ret = dim.reverse();'
  +#10'    } else if (x instanceof Texture) {'#10'      ret = x.output;'#10'   '
  +' } else if (x instanceof Input) {'#10'      ret = x.size;'#10'    } else {'
  +#10'      throw new Error(`Unknown dimensions of ${x}`);'#10'    }'#10#10'  '
  +'  if (pad) {'#10'      ret = Array.from(ret);'#10'      while (ret.length <'
  +' 3) {'#10'        ret.push(1);'#10'      }'#10'    }'#10#10'    return new '
  +'Int32Array(ret);'#10'  },'#10#10'  flatten2dArrayTo(array, target) {'#10'  '
  +'  let offset = 0;'#10'    for (let y = 0; y < array.length; y++) {'#10'    '
  +'  target.set(array[y], offset);'#10'      offset += array[y].length;'#10'  '
  +'  }'#10'  },'#10#10'  flatten3dArrayTo(array, target) {'#10'    let offset '
  +'= 0;'#10'    for (let z = 0; z < array.length; z++) {'#10'      for (let y '
  +'= 0; y < array[z].length; y++) {'#10'        target.set(array[z][y], offset'
  +');'#10'        offset += array[z][y].length;'#10'      }'#10'    }'#10'  },'
  +#10#10'  flatten4dArrayTo(array, target) {'#10'    let offset = 0;'#10'    f'
  +'or (let l = 0; l < array.length; l++) {'#10'      for (let z = 0; z < array'
  +'[l].length; z++) {'#10'        for (let y = 0; y < array[l][z].length; y++)'
  +' {'#10'          target.set(array[l][z][y], offset);'#10'          offset +'
  +'= array[l][z][y].length;'#10'        }'#10'      }'#10'    }'#10'  },'#10#10
  +'  flattenTo(array, target) {'#10'    if (utils.isArray(array[0])) {'#10'   '
  +'   if (utils.isArray(array[0][0])) {'#10'        if (utils.isArray(array[0]'
  +'[0][0])) {'#10'          utils.flatten4dArrayTo(array, target);'#10'       '
  +' } else {'#10'          utils.flatten3dArrayTo(array, target);'#10'        '
  +'}'#10'      } else {'#10'        utils.flatten2dArrayTo(array, target);'#10
  +'      }'#10'    } else {'#10'      target.set(array);'#10'    }'#10'  },'#10
  +#10'  splitArray(array, part) {'#10'    const result = [];'#10'    for (let '
  +'i = 0; i < array.length; i += part) {'#10'      result.push(new array.const'
  +'ructor(array.buffer, i * 4 + array.byteOffset, part));'#10'    }'#10'    re'
  +'turn result;'#10'  },'#10#10'  getAstString(source, ast) {'#10'    const li'
  +'nes = Array.isArray(source) ? source : source.split(/\r?\n/g);'#10'    cons'
  +'t start = ast.loc.start;'#10'    const end = ast.loc.end;'#10'    const res'
  +'ult = [];'#10'    if (start.line === end.line) {'#10'      result.push(line'
  +'s[start.line - 1].substring(start.column, end.column));'#10'    } else {'#10
  +'      result.push(lines[start.line - 1].slice(start.column));'#10'      for'
  +' (let i = start.line; i < end.line; i++) {'#10'        result.push(lines[i]'
  ,');'#10'      }'#10'      result.push(lines[end.line - 1].slice(0, end.colum'
  +'n));'#10'    }'#10'    return result.join(''\n'');'#10'  },'#10#10'  allPro'
  +'pertiesOf(obj) {'#10'    const props = [];'#10#10'    do {'#10'      props.'
  +'push.apply(props, Object.getOwnPropertyNames(obj));'#10'    } while (obj = '
  +'Object.getPrototypeOf(obj));'#10#10'    return props;'#10'  },'#10#10'  lin'
  +'esToString(lines) {'#10'    if (lines.length > 0) {'#10'      return lines.'
  +'join('';\n'') + '';\n'';'#10'    } else {'#10'      return ''\n'';'#10'    '
  +'}'#10'  },'#10'  warnDeprecated(type, oldName, newName) {'#10'    if (newNa'
  +'me) {'#10'      console.warn(`You are using a deprecated ${ type } "${ oldN'
  +'ame }". It has been replaced with "${ newName }". Fixing, but please upgrad'
  +'e as it will soon be removed.`);'#10'    } else {'#10'      console.warn(`Y'
  +'ou are using a deprecated ${ type } "${ oldName }". It has been removed. Fi'
  +'xing, but please upgrade as it will soon be removed.`);'#10'    }'#10'  },'
  +#10'  flipPixels: (pixels, width, height) => {'#10'    const halfHeight = he'
  +'ight / 2 | 0; '#10'    const bytesPerRow = width * 4;'#10'    const temp = '
  +'new Uint8ClampedArray(width * 4);'#10'    const result = pixels.slice(0);'
  +#10'    for (let y = 0; y < halfHeight; ++y) {'#10'      const topOffset = y'
  +' * bytesPerRow;'#10'      const bottomOffset = (height - y - 1) * bytesPerR'
  +'ow;'#10#10'      temp.set(result.subarray(topOffset, topOffset + bytesPerRo'
  +'w));'#10#10'      result.copyWithin(topOffset, bottomOffset, bottomOffset +'
  +' bytesPerRow);'#10#10'      result.set(temp, bottomOffset);'#10'    }'#10' '
  +'   return result;'#10'  },'#10'  erectPackedFloat: (array, width) => {'#10
  +'    return array.subarray(0, width);'#10'  },'#10'  erect2DPackedFloat: (ar'
  +'ray, width, height) => {'#10'    const yResults = new Array(height);'#10'  '
  +'  for (let y = 0; y < height; y++) {'#10'      const xStart = y * width;'#10
  +'      const xEnd = xStart + width;'#10'      yResults[y] = array.subarray(x'
  +'Start, xEnd);'#10'    }'#10'    return yResults;'#10'  },'#10'  erect3DPack'
  +'edFloat: (array, width, height, depth) => {'#10'    const zResults = new Ar'
  +'ray(depth);'#10'    for (let z = 0; z < depth; z++) {'#10'      const yResu'
  +'lts = new Array(height);'#10'      for (let y = 0; y < height; y++) {'#10' '
  +'       const xStart = (z * height * width) + y * width;'#10'        const x'
  +'End = xStart + width;'#10'        yResults[y] = array.subarray(xStart, xEnd'
  +');'#10'      }'#10'      zResults[z] = yResults;'#10'    }'#10'    return z'
  +'Results;'#10'  },'#10'  erectMemoryOptimizedFloat: (array, width) => {'#10
  +'    return array.subarray(0, width);'#10'  },'#10'  erectMemoryOptimized2DF'
  +'loat: (array, width, height) => {'#10'    const yResults = new Array(height'
  +');'#10'    for (let y = 0; y < height; y++) {'#10'      const offset = y * '
  +'width;'#10'      yResults[y] = array.subarray(offset, offset + width);'#10
  +'    }'#10'    return yResults;'#10'  },'#10'  erectMemoryOptimized3DFloat: '
  +'(array, width, height, depth) => {'#10'    const zResults = new Array(depth'
  +');'#10'    for (let z = 0; z < depth; z++) {'#10'      const yResults = new'
  +' Array(height);'#10'      for (let y = 0; y < height; y++) {'#10'        co'
  +'nst offset = (z * height * width) + (y * width);'#10'        yResults[y] = '
  +'array.subarray(offset, offset + width);'#10'      }'#10'      zResults[z] ='
  +' yResults;'#10'    }'#10'    return zResults;'#10'  },'#10'  erectFloat: (a'
  +'rray, width) => {'#10'    const xResults = new Float32Array(width);'#10'   '
  +' let i = 0;'#10'    for (let x = 0; x < width; x++) {'#10'      xResults[x]'
  +' = array[i];'#10'      i += 4;'#10'    }'#10'    return xResults;'#10'  },'
  +#10'  erect2DFloat: (array, width, height) => {'#10'    const yResults = new'
  +' Array(height);'#10'    let i = 0;'#10'    for (let y = 0; y < height; y++)'
  +' {'#10'      const xResults = new Float32Array(width);'#10'      for (let x'
  +' = 0; x < width; x++) {'#10'        xResults[x] = array[i];'#10'        i +'
  +'= 4;'#10'      }'#10'      yResults[y] = xResults;'#10'    }'#10'    return'
  +' yResults;'#10'  },'#10'  erect3DFloat: (array, width, height, depth) => {'
  +#10'    const zResults = new Array(depth);'#10'    let i = 0;'#10'    for (l'
  +'et z = 0; z < depth; z++) {'#10'      const yResults = new Array(height);'
  +#10'      for (let y = 0; y < height; y++) {'#10'        const xResults = ne'
  +'w Float32Array(width);'#10'        for (let x = 0; x < width; x++) {'#10'  '
  +'        xResults[x] = array[i];'#10'          i += 4;'#10'        }'#10'   '
  +'     yResults[y] = xResults;'#10'      }'#10'      zResults[z] = yResults;'
  +#10'    }'#10'    return zResults;'#10'  },'#10'  erectArray2: (array, width'
  +') => {'#10'    const xResults = new Array(width);'#10'    const xResultsMax'
  +' = width * 4;'#10'    let i = 0;'#10'    for (let x = 0; x < xResultsMax; x'
  +' += 4) {'#10'      xResults[i++] = array.subarray(x, x + 2);'#10'    }'#10
  ,'    return xResults;'#10'  },'#10'  erect2DArray2: (array, width, height) ='
  +'> {'#10'    const yResults = new Array(height);'#10'    const XResultsMax ='
  +' width * 4;'#10'    for (let y = 0; y < height; y++) {'#10'      const xRes'
  +'ults = new Array(width);'#10'      const offset = y * XResultsMax;'#10'    '
  +'  let i = 0;'#10'      for (let x = 0; x < XResultsMax; x += 4) {'#10'     '
  +'   xResults[i++] = array.subarray(x + offset, x + offset + 2);'#10'      }'
  +#10'      yResults[y] = xResults;'#10'    }'#10'    return yResults;'#10'  }'
  +','#10'  erect3DArray2: (array, width, height, depth) => {'#10'    const xRe'
  +'sultsMax = width * 4;'#10'    const zResults = new Array(depth);'#10'    fo'
  +'r (let z = 0; z < depth; z++) {'#10'      const yResults = new Array(height'
  +');'#10'      for (let y = 0; y < height; y++) {'#10'        const xResults '
  +'= new Array(width);'#10'        const offset = (z * xResultsMax * height) +'
  +' (y * xResultsMax);'#10'        let i = 0;'#10'        for (let x = 0; x < '
  +'xResultsMax; x += 4) {'#10'          xResults[i++] = array.subarray(x + off'
  +'set, x + offset + 2);'#10'        }'#10'        yResults[y] = xResults;'#10
  +'      }'#10'      zResults[z] = yResults;'#10'    }'#10'    return zResults'
  +';'#10'  },'#10'  erectArray3: (array, width) => {'#10'    const xResults = '
  +'new Array(width);'#10'    const xResultsMax = width * 4;'#10'    let i = 0;'
  +#10'    for (let x = 0; x < xResultsMax; x += 4) {'#10'      xResults[i++] ='
  +' array.subarray(x, x + 3);'#10'    }'#10'    return xResults;'#10'  },'#10
  +'  erect2DArray3: (array, width, height) => {'#10'    const xResultsMax = wi'
  +'dth * 4;'#10'    const yResults = new Array(height);'#10'    for (let y = 0'
  +'; y < height; y++) {'#10'      const xResults = new Array(width);'#10'     '
  +' const offset = y * xResultsMax;'#10'      let i = 0;'#10'      for (let x '
  +'= 0; x < xResultsMax; x += 4) {'#10'        xResults[i++] = array.subarray('
  +'x + offset, x + offset + 3);'#10'      }'#10'      yResults[y] = xResults;'
  +#10'    }'#10'    return yResults;'#10'  },'#10'  erect3DArray3: (array, wid'
  +'th, height, depth) => {'#10'    const xResultsMax = width * 4;'#10'    cons'
  +'t zResults = new Array(depth);'#10'    for (let z = 0; z < depth; z++) {'#10
  +'      const yResults = new Array(height);'#10'      for (let y = 0; y < hei'
  +'ght; y++) {'#10'        const xResults = new Array(width);'#10'        cons'
  +'t offset = (z * xResultsMax * height) + (y * xResultsMax);'#10'        let '
  +'i = 0;'#10'        for (let x = 0; x < xResultsMax; x += 4) {'#10'         '
  +' xResults[i++] = array.subarray(x + offset, x + offset + 3);'#10'        }'
  +#10'        yResults[y] = xResults;'#10'      }'#10'      zResults[z] = yRes'
  +'ults;'#10'    }'#10'    return zResults;'#10'  },'#10'  erectArray4: (array'
  +', width) => {'#10'    const xResults = new Array(array);'#10'    const xRes'
  +'ultsMax = width * 4;'#10'    let i = 0;'#10'    for (let x = 0; x < xResult'
  +'sMax; x += 4) {'#10'      xResults[i++] = array.subarray(x, x + 4);'#10'   '
  +' }'#10'    return xResults;'#10'  },'#10'  erect2DArray4: (array, width, he'
  +'ight) => {'#10'    const xResultsMax = width * 4;'#10'    const yResults = '
  +'new Array(height);'#10'    for (let y = 0; y < height; y++) {'#10'      con'
  +'st xResults = new Array(width);'#10'      const offset = y * xResultsMax;'
  +#10'      let i = 0;'#10'      for (let x = 0; x < xResultsMax; x += 4) {'#10
  +'        xResults[i++] = array.subarray(x + offset, x + offset + 4);'#10'   '
  +'   }'#10'      yResults[y] = xResults;'#10'    }'#10'    return yResults;'
  +#10'  },'#10'  erect3DArray4: (array, width, height, depth) => {'#10'    con'
  +'st xResultsMax = width * 4;'#10'    const zResults = new Array(depth);'#10
  +'    for (let z = 0; z < depth; z++) {'#10'      const yResults = new Array('
  +'height);'#10'      for (let y = 0; y < height; y++) {'#10'        const xRe'
  +'sults = new Array(width);'#10'        const offset = (z * xResultsMax * hei'
  +'ght) + (y * xResultsMax);'#10'        let i = 0;'#10'        for (let x = 0'
  +'; x < xResultsMax; x += 4) {'#10'          xResults[i++] = array.subarray(x'
  +' + offset, x + offset + 4);'#10'        }'#10'        yResults[y] = xResult'
  +'s;'#10'      }'#10'      zResults[z] = yResults;'#10'    }'#10'    return z'
  +'Results;'#10'  },'#10#10'  flattenFunctionToString: (source, settings) => {'
  +#10'    const { findDependency, thisLookup, doNotDefine } = settings;'#10'  '
  +'  let flattened = settings.flattened;'#10'    if (!flattened) {'#10'      f'
  +'lattened = settings.flattened = {};'#10'    }'#10'    const ast = acorn.par'
  +'se(source);'#10'    const functionDependencies = [];'#10'    let indent = 0'
  +';'#10#10'    function flatten(ast) {'#10'      if (Array.isArray(ast)) {'#10
  +'        const results = [];'#10'        for (let i = 0; i < ast.length; i++'
  +') {'#10'          results.push(flatten(ast[i]));'#10'        }'#10'        '
  +'return results.join('''');'#10'      }'#10'      switch (ast.type) {'#10'  '
  ,'      case ''Program'':'#10'          return flatten(ast.body) + (ast.body['
  +'0].type === ''VariableDeclaration'' ? '';'' : '''');'#10'        case ''Fun'
  +'ctionDeclaration'':'#10'          return `function ${ast.id.name}(${ast.par'
  +'ams.map(flatten).join('', '')}) ${ flatten(ast.body) }`;'#10'        case '
  +'''BlockStatement'': {'#10'          const result = [];'#10'          indent'
  +' += 2;'#10'          for (let i = 0; i < ast.body.length; i++) {'#10'      '
  +'      const flat = flatten(ast.body[i]);'#10'            if (flat) {'#10'  '
  +'            result.push('' ''.repeat(indent) + flat, '';\n'');'#10'        '
  +'    }'#10'          }'#10'          indent -= 2;'#10'          return `{\n$'
  +'{result.join('''')}}`;'#10'        }'#10'        case ''VariableDeclaration'
  +''':'#10'          const declarations = utils.normalizeDeclarations(ast)'#10
  +'            .map(flatten)'#10'            .filter(r => r !== null);'#10'   '
  +'       if (declarations.length < 1) {'#10'            return '''';'#10'    '
  +'      } else {'#10'            return `${ast.kind} ${declarations.join('','
  +''')}`;'#10'          }'#10'          case ''VariableDeclarator'':'#10'     '
  +'       if (ast.init.object && ast.init.object.type === ''ThisExpression'') '
  +'{'#10'              const lookup = thisLookup(ast.init.property.name, true)'
  +';'#10'              if (lookup) {'#10'                return `${ast.id.name'
  +'} = ${flatten(ast.init)}`;'#10'              } else {'#10'                r'
  +'eturn null;'#10'              }'#10'            } else {'#10'              '
  +'return `${ast.id.name} = ${flatten(ast.init)}`;'#10'            }'#10'     '
  +'       case ''CallExpression'': {'#10'              if (ast.callee.property'
  +'.name === ''subarray'') {'#10'                return `${flatten(ast.callee.'
  +'object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatt'
  +'en(value)).join('', '')})`;'#10'              }'#10'              if (ast.c'
  +'allee.object.name === ''gl'' || ast.callee.object.name === ''context'') {'
  +#10'                return `${flatten(ast.callee.object)}.${flatten(ast.call'
  +'ee.property)}(${ast.arguments.map(value => flatten(value)).join('', '')})`;'
  +#10'              }'#10'              if (ast.callee.object.type === ''ThisE'
  +'xpression'') {'#10'                functionDependencies.push(findDependency'
  +'(''this'', ast.callee.property.name));'#10'                return `${ast.ca'
  +'llee.property.name}(${ast.arguments.map(value => flatten(value)).join('', '
  +''')})`;'#10'              } else if (ast.callee.object.name) {'#10'        '
  +'        const foundSource = findDependency(ast.callee.object.name, ast.call'
  +'ee.property.name);'#10'                if (foundSource === null) {'#10'    '
  +'              return `${ast.callee.object.name}.${ast.callee.property.name}'
  +'(${ast.arguments.map(value => flatten(value)).join('', '')})`;'#10'        '
  +'        } else {'#10'                  functionDependencies.push(foundSourc'
  +'e);'#10'                  return `${ast.callee.property.name}(${ast.argumen'
  +'ts.map(value => flatten(value)).join('', '')})`;'#10'                }'#10
  +'              } else if (ast.callee.object.type === ''MemberExpression'') {'
  +#10'                return `${flatten(ast.callee.object)}.${ast.callee.prope'
  +'rty.name}(${ast.arguments.map(value => flatten(value)).join('', '')})`;'#10
  +'              } else {'#10'                throw new Error(''unknown ast.ca'
  +'llee'');'#10'              }'#10'            }'#10'            case ''Retur'
  +'nStatement'':'#10'              return `return ${flatten(ast.argument)}`;'
  +#10'            case ''BinaryExpression'':'#10'              return `(${flat'
  +'ten(ast.left)}${ast.operator}${flatten(ast.right)})`;'#10'            case '
  +'''UnaryExpression'':'#10'              if (ast.prefix) {'#10'              '
  +'  return `${ast.operator} ${flatten(ast.argument)}`;'#10'              } el'
  +'se {'#10'                return `${flatten(ast.argument)} ${ast.operator}`;'
  +#10'              }'#10'              case ''ExpressionStatement'':'#10'    '
  +'            return `${flatten(ast.expression)}`;'#10'              case ''S'
  +'equenceExpression'':'#10'                return `(${flatten(ast.expressions'
  +')})`;'#10'              case ''ArrowFunctionExpression'':'#10'             '
  +'   return `(${ast.params.map(flatten).join('', '')}) => ${flatten(ast.body)'
  +'}`;'#10'              case ''Literal'':'#10'                return ast.raw;'
  +#10'              case ''Identifier'':'#10'                return ast.name;'
  +#10'              case ''MemberExpression'':'#10'                if (ast.obj'
  +'ect.type === ''ThisExpression'') {'#10'                  return thisLookup('
  +'ast.property.name);'#10'                }'#10'                if (ast.compu'
  +'ted) {'#10'                  return `${flatten(ast.object)}[${flatten(ast.p'
  +'roperty)}]`;'#10'                }'#10'                return flatten(ast.o'
  +'bject) + ''.'' + flatten(ast.property);'#10'              case ''ThisExpres'
  ,'sion'':'#10'                return ''this'';'#10'              case ''NewEx'
  +'pression'':'#10'                return `new ${flatten(ast.callee)}(${ast.ar'
  +'guments.map(value => flatten(value)).join('', '')})`;'#10'              cas'
  +'e ''ForStatement'':'#10'                return `for (${flatten(ast.init)};$'
  +'{flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;'#10'    '
  +'          case ''AssignmentExpression'':'#10'                return `${flat'
  +'ten(ast.left)}${ast.operator}${flatten(ast.right)}`;'#10'              case'
  +' ''UpdateExpression'':'#10'                return `${flatten(ast.argument)}'
  +'${ast.operator}`;'#10'              case ''IfStatement'':'#10'             '
  +'   return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;'#10'     '
  +'         case ''ThrowStatement'':'#10'                return `throw ${flatt'
  +'en(ast.argument)}`;'#10'              case ''ObjectPattern'':'#10'         '
  +'       return ast.properties.map(flatten).join('', '');'#10'              c'
  +'ase ''ArrayPattern'':'#10'                return ast.elements.map(flatten).'
  +'join('', '');'#10'              case ''DebuggerStatement'':'#10'           '
  +'     return ''debugger;'';'#10'              case ''ConditionalExpression'''
  +':'#10'                return `${flatten(ast.test)}?${flatten(ast.consequent'
  +')}:${flatten(ast.alternate)}`;'#10'              case ''Property'':'#10'   '
  +'             if (ast.kind === ''init'') {'#10'                  return flat'
  +'ten(ast.key);'#10'                }'#10'      }'#10'      throw new Error(`'
  +'unhandled ast.type of ${ ast.type }`);'#10'    }'#10'    const result = fla'
  +'tten(ast);'#10'    if (functionDependencies.length > 0) {'#10'      const f'
  +'lattenedFunctionDependencies = [];'#10'      for (let i = 0; i < functionDe'
  +'pendencies.length; i++) {'#10'        const functionDependency = functionDe'
  +'pendencies[i];'#10'        if (!flattened[functionDependency]) {'#10'      '
  +'    flattened[functionDependency] = true;'#10'        }'#10'        flatten'
  +'edFunctionDependencies.push(utils.flattenFunctionToString(functionDependenc'
  +'y, settings) + ''\n'');'#10'      }'#10'      return flattenedFunctionDepen'
  +'dencies.join('''') + result;'#10'    }'#10'    return result;'#10'  },'#10
  +#10'  normalizeDeclarations: (ast) => {'#10'    if (ast.type !== ''VariableD'
  +'eclaration'') throw new Error(''Ast is not of type "VariableDeclaration"'')'
  +';'#10'    const normalizedDeclarations = [];'#10'    for (let declarationIn'
  +'dex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {'
  +#10'      const declaration = ast.declarations[declarationIndex];'#10'      '
  +'if (declaration.id && declaration.id.type === ''ObjectPattern'' && declarat'
  +'ion.id.properties) {'#10'        const { properties } = declaration.id;'#10
  +'        for (let propertyIndex = 0; propertyIndex < properties.length; prop'
  +'ertyIndex++) {'#10'          const property = properties[propertyIndex];'#10
  +'          if (property.value.type === ''ObjectPattern'' && property.value.p'
  +'roperties) {'#10'            for (let subPropertyIndex = 0; subPropertyInde'
  +'x < property.value.properties.length; subPropertyIndex++) {'#10'           '
  +'   const subProperty = property.value.properties[subPropertyIndex];'#10'   '
  +'           if (subProperty.type === ''Property'') {'#10'                nor'
  +'malizedDeclarations.push({'#10'                  type: ''VariableDeclarator'
  +''','#10'                  id: {'#10'                    type: ''Identifier'
  +''','#10'                    name: subProperty.key.name'#10'                '
  +'  },'#10'                  init: {'#10'                    type: ''MemberEx'
  +'pression'','#10'                    object: {'#10'                      typ'
  +'e: ''MemberExpression'','#10'                      object: declaration.init'
  +','#10'                      property: {'#10'                        type: '
  +'''Identifier'','#10'                        name: property.key.name'#10'   '
  +'                   },'#10'                      computed: false'#10'       '
  +'             },'#10'                    property: {'#10'                   '
  +'   type: ''Identifier'','#10'                      name: subProperty.key.na'
  +'me'#10'                    },'#10'                    computed: false'#10' '
  +'                 }'#10'                });'#10'              } else {'#10' '
  +'               throw new Error(''unexpected state'');'#10'              }'
  +#10'            }'#10'          } else if (property.value.type === ''Identif'
  +'ier'') {'#10'            normalizedDeclarations.push({'#10'              ty'
  +'pe: ''VariableDeclarator'','#10'              id: {'#10'                typ'
  +'e: ''Identifier'','#10'                name: property.value && property.val'
  +'ue.name ? property.value.name : property.key.name'#10'              },'#10
  +'              init: {'#10'                type: ''MemberExpression'','#10' '
  +'               object: declaration.init,'#10'                property: {'#10
  ,'                  type: ''Identifier'','#10'                  name: propert'
  +'y.key.name'#10'                },'#10'                computed: false'#10' '
  +'             }'#10'            });'#10'          } else {'#10'            t'
  +'hrow new Error(''unexpected state'');'#10'          }'#10'        }'#10'   '
  +'   } else if (declaration.id && declaration.id.type === ''ArrayPattern'' &&'
  +' declaration.id.elements) {'#10'        const { elements } = declaration.id'
  +';'#10'        for (let elementIndex = 0; elementIndex < elements.length; el'
  +'ementIndex++) {'#10'          const element = elements[elementIndex];'#10' '
  +'         if (element.type === ''Identifier'') {'#10'            normalizedD'
  +'eclarations.push({'#10'              type: ''VariableDeclarator'','#10'    '
  +'          id: {'#10'                type: ''Identifier'','#10'             '
  +'   name: element.name'#10'              },'#10'              init: {'#10'  '
  +'              type: ''MemberExpression'','#10'                object: decla'
  +'ration.init,'#10'                property: {'#10'                  type: '''
  +'Literal'','#10'                  value: elementIndex,'#10'                 '
  +' raw: elementIndex.toString(),'#10'                  start: element.start,'
  +#10'                  end: element.end'#10'                },'#10'          '
  +'      computed: true'#10'              }'#10'            });'#10'          '
  +'} else {'#10'            throw new Error(''unexpected state'');'#10'       '
  +'   }'#10'        }'#10'      } else {'#10'        normalizedDeclarations.pu'
  +'sh(declaration);'#10'      }'#10'    }'#10'    return normalizedDeclaration'
  +'s;'#10'  },'#10#10'  splitHTMLImageToRGB: (gpu, image) => {'#10'    const r'
  +'Kernel = gpu.createKernel(function(a) {'#10'      const pixel = a[this.thre'
  +'ad.y][this.thread.x];'#10'      return pixel.r * 255;'#10'    }, {'#10'    '
  +'  output: [image.width, image.height],'#10'      precision: ''unsigned'','
  +#10'      argumentTypes: { a: ''HTMLImage'' },'#10'    });'#10'    const gKe'
  +'rnel = gpu.createKernel(function(a) {'#10'      const pixel = a[this.thread'
  +'.y][this.thread.x];'#10'      return pixel.g * 255;'#10'    }, {'#10'      '
  +'output: [image.width, image.height],'#10'      precision: ''unsigned'','#10
  +'      argumentTypes: { a: ''HTMLImage'' },'#10'    });'#10'    const bKerne'
  +'l = gpu.createKernel(function(a) {'#10'      const pixel = a[this.thread.y]'
  +'[this.thread.x];'#10'      return pixel.b * 255;'#10'    }, {'#10'      out'
  +'put: [image.width, image.height],'#10'      precision: ''unsigned'','#10'  '
  +'    argumentTypes: { a: ''HTMLImage'' },'#10'    });'#10'    const aKernel '
  +'= gpu.createKernel(function(a) {'#10'      const pixel = a[this.thread.y][t'
  +'his.thread.x];'#10'      return pixel.a * 255;'#10'    }, {'#10'      outpu'
  +'t: [image.width, image.height],'#10'      precision: ''unsigned'','#10'    '
  +'  argumentTypes: { a: ''HTMLImage'' },'#10'    });'#10'    const result = ['
  +#10'      rKernel(image),'#10'      gKernel(image),'#10'      bKernel(image)'
  +','#10'      aKernel(image),'#10'    ];'#10'    result.rKernel = rKernel;'#10
  +'    result.gKernel = gKernel;'#10'    result.bKernel = bKernel;'#10'    res'
  +'ult.aKernel = aKernel;'#10'    result.gpu = gpu;'#10'    return result;'#10
  +'  },'#10#10'  splitRGBAToCanvases: (gpu, rgba, width, height) => {'#10'    '
  +'const visualKernelR = gpu.createKernel(function(v) {'#10'      const pixel '
  +'= v[this.thread.y][this.thread.x];'#10'      this.color(pixel.r / 255, 0, 0'
  +', 255);'#10'    }, {'#10'      output: [width, height],'#10'      graphical'
  +': true,'#10'      argumentTypes: { v: ''Array2D(4)'' }'#10'    });'#10'    '
  +'visualKernelR(rgba);'#10#10'    const visualKernelG = gpu.createKernel(func'
  +'tion(v) {'#10'      const pixel = v[this.thread.y][this.thread.x];'#10'    '
  +'  this.color(0, pixel.g / 255, 0, 255);'#10'    }, {'#10'      output: [wid'
  +'th, height],'#10'      graphical: true,'#10'      argumentTypes: { v: ''Arr'
  +'ay2D(4)'' }'#10'    });'#10'    visualKernelG(rgba);'#10#10'    const visua'
  +'lKernelB = gpu.createKernel(function(v) {'#10'      const pixel = v[this.th'
  +'read.y][this.thread.x];'#10'      this.color(0, 0, pixel.b / 255, 255);'#10
  +'    }, {'#10'      output: [width, height],'#10'      graphical: true,'#10
  +'      argumentTypes: { v: ''Array2D(4)'' }'#10'    });'#10'    visualKernel'
  +'B(rgba);'#10#10'    const visualKernelA = gpu.createKernel(function(v) {'#10
  +'      const pixel = v[this.thread.y][this.thread.x];'#10'      this.color(2'
  +'55, 255, 255, pixel.a / 255);'#10'    }, {'#10'      output: [width, height'
  +'],'#10'      graphical: true,'#10'      argumentTypes: { v: ''Array2D(4)'' '
  +'}'#10'    });'#10'    visualKernelA(rgba);'#10'    return ['#10'      visua'
  +'lKernelR.canvas,'#10'      visualKernelG.canvas,'#10'      visualKernelB.ca'
  +'nvas,'#10'      visualKernelA.canvas,'#10'    ];'#10'  },'#10#10'  getMinif'
  +'ySafeName: (fn) => {'#10'    try {'#10'      const ast = acorn.parse(`const'
  ,' value = ${fn.toString()}`);'#10'      const { init } = ast.body[0].declara'
  +'tions[0];'#10'      return init.body.name || init.body.body[0].argument.nam'
  +'e;'#10'    } catch (e) {'#10'      throw new Error(''Unrecognized function '
  +'type.  Please use `() => yourFunctionVariableHere` or function() { return y'
  +'ourFunctionVariableHere; }'');'#10'    }'#10'  },'#10'  sanitizeName: funct'
  +'ion(name) {'#10'    if (dollarSign.test(name)) {'#10'      name = name.repl'
  +'ace(dollarSign, ''S_S'');'#10'    }'#10'    if (doubleUnderscore.test(name)'
  +') {'#10'      name = name.replace(doubleUnderscore, ''U_U'');'#10'    } els'
  +'e if (singleUnderscore.test(name)) {'#10'      name = name.replace(singleUn'
  +'derscore, ''u_u'');'#10'    }'#10'    return name;'#10'  }'#10'};'#10#10'co'
  +'nst dollarSign = /\$/;'#10'const doubleUnderscore = /__/;'#10'const singleU'
  +'nderscore = /_/;'#10#10'const _systemEndianness = utils.getSystemEndianness'
  +'();'#10#10'module.exports = {'#10'  utils'#10'};'#10'},{"./input":110,"./te'
  +'xture":113,"acorn":1}]},{},[107])(107)'#10'});'#10
]);
LazarusResources.Add('XIDEMain','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10#13#10'unit XIDEMain;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$INTERFACES CORBA}'#13
  +#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysU'
  +'tils,'#13#10'{$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, Graphics'
  +', Dialogs, LCLIntf,'#13#10'  ExtCtrls, Menus, ComCtrls, StdCtrls, TypInfo, '
  +'LazIDEIntf, LResources,'#13#10'  Types, IpHtml, Ipfilebroker,'#13#10'  Even'
  +'ts, DllInterface, LazsUtils, CompilerLogUnit,'#13#10'{$else}'#13#10'  HTMLU'
  +'tils,'#13#10'{$endif}'#13#10'  // XComponents units...'#13#10'  PyXUtils, S'
  +'tringUtils, NodeUtils, PasteDialogUnit,'#13#10'  UtilsJSCompile, XIFrame, X'
  +'SVGContainer, XMenu, XScrollBox, XVBox, XHBox, XTree, XMemo,'#13#10'  XTabC'
  +'ontrol, XButton, XLabel, XEditBox, XCheckBox, XHyperLink, XRadioBtns,'#13#10
  +'  XForm, XTable, XProgressBar, XNumericSlider, XNumberSpinner,'#13#10'  XCo'
  +'mboBox, XDatePicker, XColorPicker, XImage, XGroupBox, XCode, XStore,'#13#10
  +'  XBitMap, XTrapEvents, XIDEHelpUnit,'#13#10'  XHTMLText, XHTMLEditor, Even'
  +'tsInterface,'#13#10'  // XIDEComponents units...'#13#10'  XGPUCanvas, XGPUE'
  +'ditor, X3DTable, XThreads, XComposite,'#13#10'  // XIDE project units...'#13
  +#10'  CompileUserCode, XObjectInsp,EventLogging,'#13#10'  CodeEditor, Proper'
  +'tyEditUnit, InputSelectUnit,'#13#10'  PopupMemo, AboutUnit, SavedSystems, S'
  +'tylesUtils, ReplayUserDialog,'#13#10'  MacroComment;'#13#10#13#10'{$ifdef J'
  +'Script}'#13#10'procedure InitialisePage(dummy:string);'#13#10'{$ifdef Pytho'
  +'n}'#13#10'procedure StartupPython;'#13#10'{$endif}'#13#10'{$endif}'#13#10#13
  +#10'{ TXIDEForm }'#13#10#13#10'type'#13#10'TXIDEForm = class(TXForm)'#13#10
  +#13#10'  {$ifndef JScript}'#13#10'  // Lazarus-only Form components...'#13#10
  +'  WebMenu: TMenuItem;'#13#10'  CompileToJS: TMenuItem;'#13#10'  CompilerSho'
  +'wLog: TMenuItem;'#13#10'  RunSettings: TXMenuItem;'#13#10'  {$endif}'#13#10
  +#13#10#13#10'  ToggleDesignRunMode: TXMenuItem;'#13#10'  CodeTreePascalUnitB'
  +'tn: TXButton;'#13#10'  NavTreeUpBtn: TXButton;'#13#10'  NavTreeUpDownHBox: '
  +'TXHBox;'#13#10'  NavTreeDownBtn: TXButton;'#13#10'  ResourceTreeButtonsHBox'
  +': TXHBox;'#13#10'  ResourceTreeDelBtn: TXButton;'#13#10'  ResourceTreeLoadB'
  +'tn: TXButton;'#13#10'  OIAddPropertyButton: TXButton;'#13#10'  DebugTree: T'
  +'XButton;'#13#10'  StyleTreeButtonHBox: TXHBox;'#13#10'  StyleTreeDelBtn: TX'
  +'Button;'#13#10'  StyleTreeApplyBtn: TXButton;'#13#10'  StyleNodeQualifier: '
  +'TXComboBox;'#13#10'  StyleTreeEditBtn: TXButton;'#13#10'  QualifierEditBox:'
  +' TXEditBox;'#13#10'  WatchBox: TXEditBox;'#13#10'  CodeTreeSearchBtn: TXBut'
  +'ton;'#13#10'  CodeTreePythonBtn: TXButton;'#13#10'  XIDEMainMenu: TXMainMen'
  +'u;'#13#10#13#10'  MyRootDiv: TXScrollBox;'#13#10'  InnerRootVBox: TXVBox;'
  +#13#10'  ObjectInspectorTabs: TXTabControl;'#13#10'  UIDesigner: TXTabSheet;'
  +#13#10'  CodeDesigner: TXTabSheet;'#13#10'  CodeTree: TXTree;'#13#10'  NavTr'
  +'ee: TXTree;'#13#10'  PropertyEditorScrollbox: TXScrollBox;'#13#10'  OIButto'
  +'nGroup: TXHBox;'#13#10'  OICut: TXButton;'#13#10'  OIPaste: TXButton;'#13#10
  +'  OICopy: TXButton;'#13#10'  OIDelete: TXButton;'#13#10'  RootHBox: TXHBox;'
  +#13#10'  UIRoot: TXScrollBox;'#13#10'  ResourceInspectorTabs: TXTabControl;'
  +#13#10'  Resources: TXTabSheet;'#13#10'  ResourceTree: TXTree;'#13#10'  Defa'
  +'ultPropertiesLabel: TXLabel;'#13#10'  ResourceEditorScrollbox: TXScrollBox;'
  +#13#10'  CodeTreeEditBtn: TXButton;'#13#10'  CodeTreeDelBtn: TXButton;'#13#10
  +'  CodeTreeFuncBtn: TXButton;'#13#10'  OIClear: TXButton;'#13#10#13#10'  Cod'
  +'eTreeButtonHBox: TXHBox;'#13#10'  EventLoggingLabel: TXLabel;'#13#10'  XLab'
  +'el3: TXLabel;'#13#10'  EventsEditorScrollBox: TXScrollBox;'#13#10'  SystemM'
  +'enu: TXMenuItem;'#13#10'  SystemSaveClip: TXMenuItem;'#13#10'  SystemLoad: '
  +'TXMenuItem;'#13#10'  SystemClear: TXMenuItem;'#13#10'  SystemDeploy: TXMenu'
  +'Item;'#13#10'  OITabs: TXTabControl;'#13#10'  OIPropertiesTab: TXTabSheet;'
  +#13#10'  OIEventsTab: TXTabSheet;'#13#10'  CodeTreeBtnsVB1: TXVBox;'#13#10' '
  +' CodeTreeBtnsVB2: TXVBox;'#13#10'  XIDETrapEvents1: TXTrapEvents;'#13#10'  '
  +'HelpMenu: TXMenuItem;'#13#10'  HelpAbout: TXMenuItem;'#13#10'  HelpOverview'
  +': TXMenuItem;'#13#10'  CodeTreeBtnsVB3: TXVBox;'#13#10'  SystemSettings: TX'
  +'MenuItem;'#13#10'  SystemSaveFile: TXMenuItem;'#13#10'  SystemEncapsulate: '
  +'TXMenuItem;'#13#10'  SystemLoadFromStore: TXMenuItem;'#13#10'  StyleDesigne'
  +'r: TXTabSheet;'#13#10'  StyleSheet: TXTree;'#13#10'  GeneratedStyleSheetTex'
  +'t: TXMemo;'#13#10'  StyleTreeScrollBox: TXScrollBox;'#13#10'  StyleResource'
  ,'sPage: TXTabSheet;'#13#10'  StyleResources: TXTree;'#13#10'  EventsMacroMen'
  +'u: TXMenuItem;'#13#10'  EventsMacroStartRecording: TXMenuItem;'#13#10'  Eve'
  +'ntsMacroStopRecording: TXMenuItem;'#13#10'  EventsMacroStartReplay: TXMenuI'
  +'tem;'#13#10'  EventsMacroInsertComment: TXMenuItem;'#13#10'  EventsMacroSav'
  +'eToClip: TXMenuItem;'#13#10'  EventsMacroLoadFromClip: TXMenuItem;'#13#10' '
  +' EventsMacroResumeRecording: TXMenuItem;'#13#10'  XMemo1: TXMemo;'#13#10#13
  +#10'  procedure CodeTreePythonBtnHandleButtonClick(e: TEventStatus;'#13#10' '
  +'   nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure DummyPositi'
  +'onMarker;   // DO not delete this line.'#13#10#13#10'  {$ifndef JScript}'#13
  +#10'  // Lazarus-only methods...'#13#10'  procedure CompilerShowLogClick(Sen'
  +'der: TObject);'#13#10'  procedure CompileToJSClick(Sender: TObject);'#13#10
  +'  procedure FormActivate(Sender: TObject);'#13#10'  procedure FormClose(Sen'
  +'der: TObject; var CloseAction: TCloseAction); override;'#13#10'  procedure '
  +'FormCreate(Sender: TObject);'#13#10'  procedure FormResize(Sender: TObject)'
  +';'#13#10'  //procedure RITabsMouseDown(Sender: TObject;Button: TMouseButton'
  +'; Shift: TShiftState; X, Y: Integer);'#13#10'  //procedure RITabsMouseUp(Se'
  +'nder: TObject;Button: TMouseButton; Shift: TShiftState; X, Y: Integer);'#13
  +#10'  //procedure RITabsMouseMove(Sender: TObject;Shift: TShiftState; X, Y: '
  +'Integer);'#13#10'  //procedure RITabsPaint;'#13#10'  procedure RunSettingsH'
  +'andleClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiStr'
  +'ing);'#13#10'  {$endif}'#13#10#13#10'  // Common Event Handlers - created a'
  +'t design time along with X components...'#13#10'  function HandleGenericEve'
  +'nt(MyEventType,myValue:string;EventNode:TDataNode):Boolean;'#13#10'  proced'
  +'ure CodeTreeFuncBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myV'
  +'alue: AnsiString);'#13#10'  procedure CodeTreeHandleTreeNodeClick(e:TEventS'
  +'tatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure HelpAbou'
  +'tHandleClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiS'
  +'tring);'#13#10'  procedure HelpOverviewHandleClick(e: TEventStatus; nodeID:'
  +' AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure MyRootDivC'
  +'lick(Sender: TObject);'#13#10'  procedure NavTreeDownBtnHandleButtonClick(e'
  +': TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'  procedure NavTreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; m'
  +'yValue: AnsiString);'#13#10'  procedure NavTreeHandleDragStart(e:TEventStat'
  +'us;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure NavTreeHand'
  +'leDrop(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  pr'
  +'ocedure NavTreeHandleDropAccepted(e: TEventStatus; nodeID: AnsiString;'#13
  +#10'    myValue: AnsiString);'#13#10'  procedure ResourceTreeHandleDrop(e: T'
  +'EventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  '
  +'procedure ResourceTreeHandleDropAccepted(e: TEventStatus; nodeID: AnsiStrin'
  +'g;'#13#10'    myValue: AnsiString);'#13#10'  procedure NavTreeUpBtnHandleBu'
  +'ttonClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiStri'
  +'ng);'#13#10'  procedure OITabsHandleChange(e: TEventStatus; nodeID: AnsiStr'
  +'ing;'#13#10'    myValue: AnsiString);'#13#10'  function NavTreeTreeNodeHint'
  +'Func(TreeLabelStr: String): String;'#13#10'  procedure ObjectInspectorTabsH'
  +'andleChange(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'  procedure ResourceInspectorTabsHandleChange(e: TEventStatus; nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'  procedure OICopyComponentHandleButto'
  +'nClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  pr'
  +'ocedure OICopyHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue:'
  +' AnsiString);'#13#10'  procedure OICutHandleButtonClick(e:TEventStatus;node'
  +'ID: AnsiString; myValue: AnsiString);'#13#10'  procedure OIDeleteHandleButt'
  +'onClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  p'
  +'rocedure OIPasteHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValu'
  +'e: AnsiString);'#13#10'  procedure PropertyEditorScrollboxHandleClick(e:TEv'
  +'entStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure OIAd'
  +'dPropertyButtonHandleButtonClick(e: TEventStatus;'#13#10'    nodeID: AnsiSt'
  +'ring; myValue: AnsiString);'#13#10'  procedure ResourceTreeHandleTreeNodeCl'
  +'ick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  proce'
  +'dure ResourceTreeHandleDragStart(e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'  procedure StyleNodeQualifierHandleChange(e: TEventS'
  +'tatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  proced'
  +'ure StyleSheetHandleDrop(e: TEventStatus; nodeID: AnsiString;'#13#10'    my'
  +'Value: AnsiString);'#13#10'  procedure StyleSheetHandleDropAccepted(e: TEve'
  +'ntStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  pro'
  ,'cedure StyleSheetHandleTreeNodeClick(e: TEventStatus; nodeID: AnsiString;'
  +#13#10'    myValue: AnsiString);'#13#10'  procedure StyleTreeApplyBtnHandleB'
  +'uttonClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'  procedure StyleTreeDelBtnHandleButtonClick(e: TEventStatus;'
  +#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure Syst'
  +'emClearHandleClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'  procedure SystemDeployHandleClick(e:TEventStatus;nodeID: AnsiString'
  +'; myValue: AnsiString);'#13#10'  procedure ResourceTreeDelBtnHandleButtonCl'
  +'ick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'  procedure ResourceTreeLoadBtnHandleButtonClick(e: TEventStatus;'#13
  +#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure SystemE'
  +'ncapsulateHandleClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myVal'
  +'ue: AnsiString);'#13#10'  procedure SystemLoadFromStoreHandleClick(e: TEven'
  +'tStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  proc'
  +'edure SystemLoadHandleClick(e:TEventStatus;nodeID: AnsiString; myValue: Ans'
  +'iString);'#13#10'  procedure SystemSaveClipHandleClick(e:TEventStatus;nodeI'
  +'D: AnsiString; myValue: AnsiString);'#13#10'  procedure SystemSaveFileHandl'
  +'eClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString)'
  +';'#13#10'  procedure SystemSettingsHandleClick(e: TEventStatus; nodeID: Ans'
  +'iString;'#13#10'    myValue: AnsiString);'#13#10'  procedure ToggleDesignRu'
  +'nModeHandleClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'  procedure StyleTreeEditBtnHandleButtonClick(e: TEventStatus; nodeID'
  +': AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure XIDETrapE'
  +'vents1HandleAny(e: TEventStatus; nodeID: AnsiString;  myValue: AnsiString);'
  +#13#10'  procedure CodeTreeDelBtnHandleButtonClick(e:TEventStatus;nodeID: An'
  +'siString; myValue: AnsiString);'#13#10'  procedure CodeTreeEditBtnHandleBut'
  +'tonClick(e:TEventStatus;nodeID: AnsiString;myValue: AnsiString);'#13#10'  p'
  +'rocedure CodeTreePascalUnitBtnHandleButtonClick(e:TEventStatus;nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'  procedure CodeTreeSearchBtnHandleBut'
  +'tonClick(e: TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10' '
  +' procedure DebugTreeHandleButtonClick(e: TEventStatus; nodeID: AnsiString;'
  +#13#10'    myValue: AnsiString);'#13#10'  procedure EventsMacroStartRecordin'
  +'gHandleClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'  procedure EventsMacroStartReplayHandleClick(e: TEventStatu'
  +'s;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure '
  +'EventsMacroStopRecordingHandleClick(e: TEventStatus;'#13#10'    nodeID: Ans'
  +'iString; myValue: AnsiString);'#13#10'  procedure EventsMacroInsertCommentH'
  +'andleClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'  procedure EventsMacroSaveToClipHandleClick(e: TEventStatus;'
  +#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure Even'
  +'tsMacroLoadFromClipHandleClick(e: TEventStatus;'#13#10'    nodeID: AnsiStri'
  +'ng; myValue: AnsiString);'#13#10'  procedure EventsMacroResumeRecordingHand'
  +'leClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString'
  +');'#13#10#13#10'  procedure UIRootClick(Sender: TObject);'#13#10#13#10'priv'
  +'ate'#13#10'  { private declarations }'#13#10'  {$ifndef JScript}'#13#10'  R'
  +'ITabsDragging: Boolean;'#13#10'  RITabsLastPos: TPoint;'#13#10'  {$endif}'
  +#13#10'public'#13#10'  { public declarations }'#13#10' end;'#13#10#13#10'var'
  +#13#10'XIDEForm: TXIDEForm;'#13#10#13#10'implementation'#13#10#13#10'{$R *.l'
  +'fm}'#13#10#13#10'{$ifdef Python}'#13#10'procedure StartupPython;'#13#10'beg'
  +'in'#13#10'  XIDEForm.CodeTreePythonBtn.IsVisible:=true;'#13#10'  PyMemoComp'
  +'onent:=XIDEForm.XMemo1;'#13#10'  RunInitialScript;'#13#10'end;'#13#10'{$end'
  +'if}'#13#10#13#10'function TXIDEForm.HandleGenericEvent(MyEventType,myValue:'
  +'string;EventNode:TDataNode):Boolean;'#13#10'var'#13#10'  CompositeNode,Sear'
  +'chNode:TdataNode;'#13#10'  ok:boolean;'#13#10'begin'#13#10'  result:=true;'
  +#13#10'  // If the EventNode is part of the user''s system definition, then '
  +'select the node in the object inspector.'#13#10'  if (DesignMode=true)'#13
  +#10'  and ((NodeIsDescendantOf(EventNode,UIProjectRootName) > -1)'#13#10'   '
  +' or (EventNode.NodeType=''TXMenuItem'')'#13#10'    or (NodeIsInXForm(EventN'
  +'ode) = true)) then'#13#10'  begin'#13#10'    if ((MyEventType=''Click'')'#13
  +#10'      or ( MyEventType=''ButtonClick'')'#13#10'      or ( MyEventType='''
  +'TreeNodeClick'')) then'#13#10'    begin'#13#10'      if ((EventNode.NodeTyp'
  +'e<>''TXMenuItem'') or (EventNode.IsDynamic=true))  then'#13#10'      begin'
  +#13#10'        ResourceInspectorTabs.TabIndex:=0;'#13#10'        ObjectInspe'
  +'ctorTabs.TabIndex:=0;'#13#10'        if EventNode.NameSpace<>'''' then'#13
  ,#10'        begin'#13#10'          CompositeNode := FindCompositeContainer(E'
  +'ventNode);'#13#10'          if (CompositeNode<>nil) then'#13#10'           '
  +' SelectNavTreeNode(CompositeNode,false);'#13#10'        end'#13#10'        '
  +'else'#13#10'          SelectNavTreeNode(EventNode,false);'#13#10'        re'
  +'sult:=false;  //do no further event handling'#13#10'      end;'#13#10'    e'
  +'nd'#13#10'    else if (MyEventType=''Change'') then'#13#10'    begin'#13#10
  +'      SelectNavTreeNode(EventNode,true);   //refresh'#13#10'    end'#13#10
  +'    else if MyEventType=''HTMLEditorBrowserClosed'' then'#13#10'    begin'
  +#13#10'        // a HTMLEditor browser window has closed...refresh the objec'
  +'t inspector to reflect'#13#10'        // the state of the ''Showing'' flag.'
  +#13#10'        if ObjectInspectorSelectedNavTreeNode = EventNode then'#13#10
  +'        begin'#13#10'          RefreshObjectInspector(EventNode);'#13#10'  '
  +'      end;'#13#10'    end;'#13#10'  end'#13#10'  else if (DesignMode=false)'
  +#13#10'  then'#13#10'  begin'#13#10'    // Run Mode.'#13#10'    // Trap a pr'
  +'operty change event, to push new value to destination properties.'#13#10'  '
  +'  if (MyEventType=''Change'') then'#13#10'    begin'#13#10'      //PushSour'
  +'ceToAttributes(EventNode,?????SourceAttrib);       //...we don''t know whic'
  +'h attribute has changed'#13#10'      PushNodeSourcesToAttributes(EventNode)'
  +';'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TXIDEFor'
  +'m.DummyPositionMarker;     // do not delete this procedure'#13#10'begin'#13
  +#10'end;'#13#10#13#10'procedure TXIDEForm.CodeTreePythonBtnHandleButtonClick'
  +'(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'begin'#13#10'  OIAddCodeUnitNode(''PythonScript'');'#13#10'end;'#13#10#13#10
  +'procedure TXIDEForm.NavTreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiS'
  +'tring; myValue: AnsiString);'#13#10'begin'#13#10'  OINavTreeNodeChange(e,no'
  +'deId,'''',myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.NavTreeHan'
  +'dleDragStart(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'begin'#13#10'  OIDragItem(e,nodeId,myValue);'#13#10'end;'#13#10#13#10'proce'
  +'dure TXIDEForm.NavTreeHandleDrop(e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'begin'#13#10'  OIDropItem(e,nodeId,myValue);'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXIDEForm.NavTreeHandleDropAccepted(e: TEventSta'
  +'tus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10' '
  +' SourceIsNavigator,SourceIsResourceTree:Boolean;'#13#10'  DstNodeName,Part1'
  +':String;'#13#10'  DstNode:TDataNode;'#13#10'  ok:Boolean;'#13#10'  values:T'
  +'NodeEventValue;'#13#10'begin'#13#10'  //showmessage(''checking drop. Source'
  +'name=''+SourceName+'' DstText=''+dstText);'#13#10#13#10'  // e.ValueObject '
  +'is an object of type TNodeEventValue.'#13#10'  // values.myNode is of type '
  +'TTreeNode, and contains data with a unique id.'#13#10'  values:=TNodeEventV'
  +'alue(e.ValueObject);'#13#10#13#10'  SourceIsNavigator:=false;'#13#10'  Sour'
  +'ceIsResourceTree:=false;'#13#10'  if (values.SourceName=''ResourceTree'') t'
  +'hen'#13#10'  begin'#13#10'    SourceIsResourceTree:=true;'#13#10'  end;'#13
  +#10'  if (values.SourceName=''NavTree'') then SourceIsNavigator:=true;'#13#10
  +'  ok:=(SourceIsNavigator )'#13#10'          or (SourceIsResourceTree );'#13
  +#10#13#10'  if ok'#13#10'  and SourceIsResourceTree then'#13#10'  begin'#13
  +#10'    //showmessage(''checking drop. DstText=''+dstText);'#13#10'    // ad'
  +'ditional node-level checks...'#13#10'    if (values.dstText<>'''') then'#13
  +#10'    begin'#13#10'      DstNodename:=TreeLabelToId(values.DstText,''NavTr'
  +'ee'',Part1);'#13#10'      DstNode:=FindDataNodeById(SystemNodeTree,DstNodeN'
  +'ame,'''',true);     //!!!!namespace - assuming top design level only'#13#10
  +'      if (DstNode<>nil) then'#13#10'      begin'#13#10'        ok:=OINavTre'
  +'eAllowDrop(DstNode);'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10
  +'  e.ReturnString:=myBoolToStr(ok);'#13#10'end;'#13#10#13#10'procedure TXIDE'
  +'Form.NavTreeUpBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiSt'
  +'ring; myValue: AnsiString);'#13#10'begin'#13#10'  OIMoveNavSiblingUpDown('''
  +'Up'');'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OITabsHandleChange(e: T'
  +'EventStatus; nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10'begi'
  +'n'#13#10'  OIPropsEventsTabChange;'#13#10'end;'#13#10#13#10'procedure TXIDE'
  +'Form.NavTreeDownBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'begin'#13#10'  OIMoveNavSiblingUpDown('
  +'''Down'');'#13#10'end;'#13#10#13#10'function TXIDEForm.NavTreeTreeNodeHintF'
  +'unc(TreeLabelStr: String): String;'#13#10'begin'#13#10'  result := OITreeNo'
  +'deHint(TreeLabelStr);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.ObjectIn'
  +'spectorTabsHandleChange(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  if ObjectInspectorTab'
  ,'s.TabIndex=2 then'#13#10'  begin'#13#10'     SetStyleOptions;'#13#10'     R'
  +'esourceInspectorTabs.TabIndex:=1;'#13#10'  end'#13#10'  else if ObjectInspe'
  +'ctorTabs.TabIndex=0 then'#13#10'    ResourceInspectorTabs.TabIndex:=0;'#13
  +#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OICopyComponentH'
  +'andleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  OIComponentCopy(nodeId,myValue);'#13#10'end;'#13#10#13
  +#10'procedure TXIDEForm.OICopyHandleButtonClick(e:TEventStatus;nodeID: AnsiS'
  +'tring; myValue: AnsiString);'#13#10'begin'#13#10'  OICopySelectedItem;'#13
  +#10'end;'#13#10#13#10'procedure TXIDEForm.OICutHandleButtonClick(e:TEventSta'
  +'tus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OICutIt'
  +'em(nodeId,myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OIDeleteHa'
  +'ndleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'begin'#13#10'   OIDeleteSelectedItem;'#13#10'end;'#13#10#13#10'procedure'
  +' TXIDEForm.OIPasteHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myVa'
  +'lue: AnsiString);'#13#10'begin'#13#10'  OIPasteItem(nodeId,myValue);'#13#10
  +'end;'#13#10#13#10'procedure TXIDEForm.PropertyEditorScrollboxHandleClick(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10
  +#13#10'end;'#13#10#13#10'procedure TXIDEForm.ResourceTreeHandleTreeNodeClick'
  +'(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13
  +#10'  OIResourceTreeNodeChange(nodeId,myValue);'#13#10'end;'#13#10#13#10'pro'
  +'cedure TXIDEForm.ResourceTreeHandleDragStart(e:TEventStatus;nodeID: AnsiStr'
  +'ing; myValue: AnsiString);'#13#10'begin'#13#10'  OIDragItem(e,nodeId,myValu'
  +'e);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.StyleNodeQualifierHandleCh'
  +'ange(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'begin'#13#10'  {$ifdef JScript}'#13#10'  UpdateNodeQualifierField;'#13#10
  +'  GenerateStyleSheets;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure'
  +' TXIDEForm.StyleSheetHandleDrop(e: TEventStatus; nodeID: AnsiString;'#13#10
  +'  myValue: AnsiString);'#13#10'var'#13#10'  values:TNodeEventValue;'#13#10
  +'  TreeNodeId:String;'#13#10'begin'#13#10'  // e.ValueObject is an object of'
  +' type TNodeEventValue.'#13#10'  // values.myNode is of type TTreeNode, and '
  +'contains data with a unique id.'#13#10#13#10'  {$ifdef JScript}'#13#10'  //'
  +'EditAttributeValue(''StyleSheet'','''',''SelectedNodeText'',DropTarget);'#13
  +#10'  values:=TNodeEventValue(e.ValueObject);'#13#10'  asm'#13#10'    TreeNo'
  +'deId=values.myNode.id;'#13#10'  end;'#13#10'  //showmessage(''dropping on n'
  +'ode ''+TreeNodeId);'#13#10'  StyleSheet.selectedNodeId:=TreeNodeId;'#13#10
  +'  PasteSelectedStyleResources(true,DropTarget,false,TNodeEventValue(e.Value'
  +'Object));// the boolean means this does the paste and reports errors rather'
  +' than just checking it'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure'
  +' TXIDEForm.StyleSheetHandleDropAccepted(e: TEventStatus;'#13#10'  nodeID: A'
  +'nsiString; myValue: AnsiString);'#13#10'var'#13#10'  values:TNodeEventValue'
  +';'#13#10'  SourceName,SrcText,DstText,ReturnString:String;'#13#10'  priorNo'
  +'deText:string;'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  values:=TNod'
  +'eEventValue(e.ValueObject);'#13#10'  SourceName:=values.SourceName;  // nam'
  +'e of tree being dragged from'#13#10'  SrcText:=values.SrcText;        // te'
  +'xt of treenode being dragged'#13#10'  DstText:=values.DstText;        // te'
  +'xt of treenode being dragged over'#13#10'  if SourceName=''StyleResources'''
  +' then'#13#10'  begin'#13#10'    // set e.ReturnString to "True" or "False"'
  +#13#10'    PriorNodeText:= StyleResources.SelectedNodeText;'#13#10'    if Sr'
  +'cText <> priorNodeText then'#13#10'      EditAttributeValue(''StyleResource'
  +'s'','''',''SelectedNodeText'',SrcText);'#13#10'    WatchBox.ItemValue:=''St'
  +'yleResources.SelectedNodeText=''+StyleResources.SelectedNodeText;'#13#10'  '
  +'  if PasteSelectedStyleResources(false,DstText,true,TNodeEventValue(e.Value'
  +'Object))=true  then'#13#10'      ReturnString:=''True'''#13#10'    else'#13
  +#10'      ReturnString:=''False'';'#13#10'  end'#13#10'  else'#13#10'    Ret'
  +'urnString:=''False'';'#13#10'  e.ReturnString:=ReturnString;'#13#10'  {$end'
  +'if}'#13#10'end;'#13#10#13#10#13#10#13#10'procedure TXIDEForm.StyleSheetHand'
  +'leTreeNodeClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: Ansi'
  +'String);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  PopulateStyleEdito'
  +'r(false);// use drop downs if available'#13#10'  {$endif}'#13#10'end;'#13#10
  +#13#10'procedure TXIDEForm.StyleTreeApplyBtnHandleButtonClick(e: TEventStatu'
  +'s;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10' '
  +' {$ifdef JScript}'#13#10'  UpdateNodeQualifierField;'#13#10'  GenerateStyle'
  +'Sheets;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10#13#10'procedure TXIDEFor'
  +'m.StyleTreeDelBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiSt'
  ,'ring; myValue: AnsiString);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10' '
  +' DeleteStyleNode;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXID'
  +'EForm.ResourceTreeHandleDrop(e: TEventStatus; nodeID: AnsiString;'#13#10'  '
  +'myValue: AnsiString);'#13#10'begin'#13#10'end;'#13#10#13#10#13#10'procedure'
  +' TXIDEForm.ResourceTreeHandleDropAccepted(e: TEventStatus;'#13#10'  nodeID:'
  +' AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  SourceIsResourceTree'
  +':Boolean;'#13#10'  values:TNodeEventValue;'#13#10'begin'#13#10'  values:=TN'
  +'odeEventValue(e.ValueObject);'#13#10'  SourceIsResourceTree:=false;'#13#10
  +'  if (values.SourceName=''ResourceTree'') then SourceIsResourceTree:=true;'
  +#13#10'  e.ReturnString:=myBoolToStr(SourceIsResourceTree );'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.ResourceTreeDelBtnHandleButtonClick(e: TEventS'
  +'tatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13
  +#10'  OIDeleteResource;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.Resourc'
  +'eTreeLoadBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString;'
  +' myValue: AnsiString);'#13#10'begin'#13#10'  OILoadResource;'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.SystemEncapsulateHandleClick(e: TEventStatus;'
  +#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIE'
  +'ncapsulate;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.SystemLoadFromStor'
  +'eHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'begin'#13#10'  if DesignMode=false then'#13#10'    ShowMessage'
  +'(''Please switch to Design Mode first'')'#13#10'  else'#13#10'  begin'#13#10
  +'    SavedSystemsForm.Initialise;'#13#10'    XForm.ShowXForm(''SavedSystemsF'
  +'orm'',true);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.UIR'
  +'ootClick(Sender: TObject);'#13#10'begin'#13#10'end;'#13#10#13#10'procedure '
  +'TXIDEForm.SystemClearHandleClick(e:TEventStatus;nodeID: AnsiString;'#13#10
  +'  myValue: AnsiString);'#13#10'var'#13#10'ok:boolean;'#13#10'begin'#13#10' '
  +' ok:=XIDEConfirm(''OK to clear the system?'');'#13#10#13#10'  if ok then'#13
  +#10'  begin'#13#10'    OIClearSystem;'#13#10'    SelectNavTreeNode(MainFormP'
  +'rojectRoot,true);'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TX'
  +'IDEForm.SystemDeployHandleClick(e:TEventStatus;nodeID: AnsiString;'#13#10' '
  +' myValue: AnsiString);'#13#10'begin'#13#10'  OIDeploySystem;'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.SystemLoadHandleClick(e:TEventStatus;nodeID: A'
  +'nsiString;'#13#10'  myValue: AnsiString);'#13#10'begin'#13#10'  if DesignMo'
  +'de=false then'#13#10'    ShowMessage(''Please switch to Design Mode first'''
  +')'#13#10'  else'#13#10'    OISystemLoad(e,nodeId);'#13#10'end;'#13#10#13#10
  +'procedure TXIDEForm.SystemSaveClipHandleClick(e:TEventStatus;nodeID: AnsiSt'
  +'ring;'#13#10'  myValue: AnsiString);'#13#10'begin'#13#10'  SaveSystemToClip'
  +';'#13#10'end;'#13#10#13#10'procedure TXIDEForm.SystemSaveFileHandleClick(e:'
  +' TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'be'
  +'gin'#13#10'  SaveSystemToFile;'#13#10'end;'#13#10#13#10'procedure TXIDEForm'
  +'.ToggleDesignRunModeHandleClick(e:TEventStatus;nodeID: AnsiString;'#13#10' '
  +' myValue: AnsiString);'#13#10'begin'#13#10'  if DesignMode then'#13#10'    '
  +'  SaveSystemData;'#13#10#13#10'  DoToggleDesignRunMode(ToggleDesignRunMode)'
  +';'#13#10'end;'#13#10#13#10'procedure TXIDEForm.StyleTreeEditBtnHandleButton'
  +'Click(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  PopulateStyleEditor(true);//'
  +' edit instead of using drop downs when available'#13#10'  {$endif}'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXIDEForm.XIDETrapEvents1HandleAny(e: TEventStat'
  +'us;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  '
  +'eventNode:TDataNode;'#13#10'  doContinue:Boolean;'#13#10'begin'#13#10'  eve'
  +'ntNode:=FindDataNodeById(SystemNodeTree,e.NodeId,e.NameSpace,true);'#13#10
  +'  doContinue:=HandleGenericEvent(e.eventtype,myValue,eventNode);'#13#10'  T'
  +'rapEventForMacro(e);'#13#10'  e.ContinueAfterTrappers:=doContinue;'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXIDEForm.CodeTreeHandleTreeNodeClick(e:TEventSt'
  +'atus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'   OICod'
  +'eTreeNodeChange(nodeId,myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEFo'
  +'rm.HelpAboutHandleClick(e: TEventStatus; nodeID: AnsiString;'#13#10'  myVal'
  +'ue: AnsiString);'#13#10'begin'#13#10'  XForm.ShowXForm(''AboutXIDEForm'',tr'
  +'ue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.HelpOverviewHandleClick(e'
  +': TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'b'
  +'egin'#13#10'  ClearInspectors;'#13#10'  XIDEHelpForm.InitialiseonShow;'#13
  +#10'  XForm.ShowXForm(''XIDEHelpForm'',false);'#13#10'end;'#13#10#13#10'proc'
  +'edure TXIDEForm.MyRootDivClick(Sender: TObject);'#13#10'begin'#13#10'end;'
  +#13#10#13#10'procedure TXIDEForm.CodeTreeFuncBtnHandleButtonClick(e:TEventSt'
  ,'atus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIAddC'
  +'odeFuncNode;'#13#10'end;'#13#10'procedure TXIDEForm.CodeTreePascalUnitBtnHa'
  +'ndleButtonClick(e:TEventStatus;nodeID: AnsiString;'#13#10'  myValue: AnsiSt'
  +'ring);'#13#10'begin'#13#10'  OIAddCodeUnitNode(''PasUnit'');'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.CodeTreeEditBtnHandleButtonClick(e:TEventStatu'
  +'s;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIEditCod'
  +'eUnit;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.CodeTreeDelBtnHandleBut'
  +'tonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'be'
  +'gin'#13#10'  OIDeleteCodeUnit;'#13#10'end;'#13#10#13#10'procedure XIDESetup'
  +'UIRootNode;'#13#10'begin'#13#10'  UIRootNode.SetAttributeValue(''Deployment'
  +'Mode'',''Design'');'#13#10'  UIRootNode.SetAttributeValue(''SystemName'','''
  +'XIDESystem'');'#13#10'  // Add root node attributes for ''settings'' data..'
  +'.'#13#10'  UIRootNode.SetAttributeValue(''ShowResources'',''Right'');     /'
  +'/Left,Right'#13#10#13#10'  // Add root node events'#13#10'  UIRootNode.myev'
  +'entTypes.Add(''OnEnterRunMode'');'#13#10'  SetLength(UIRootNode.myEventHand'
  +'lers,1);'#13#10'end;'#13#10#13#10#13#10'procedure TXIDEForm.SystemSettingsH'
  +'andleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStrin'
  +'g);'#13#10'var'#13#10'  Reply:Boolean;'#13#10'  ShowResourceTree:String;'#13
  +#10'begin'#13#10'  Reply:=XIDEConfirm(''Show Resources on the Left?'');'#13
  +#10'  if Reply=true then'#13#10'    ShowResourceTree:=''Left'''#13#10'  else'
  +#13#10'    ShowResourceTree:=''Right'';'#13#10'  UIRootNode.SetAttributeValu'
  +'e(''ShowResources'',ShowResourceTree);'#13#10'  if DesignMode then'#13#10' '
  +'   RedisplayResourceTree;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OIAd'
  +'dPropertyButtonHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiStri'
  +'ng; myValue: AnsiString);'#13#10'begin'#13#10'  OIAddInterfaceElement;'#13
  +#10'end;'#13#10#13#10'procedure TXIDEForm.DebugTreeHandleButtonClick(e: TEve'
  +'ntStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13
  +#10'  txt:String;'#13#10'begin'#13#10#13#10'  DebugwriteNodetree(SystemnodeT'
  +'ree,txt,0);'#13#10'  {$ifndef JScript}'#13#10'  WriteToLocalStore(''debugtr'
  +'ee'',txt);'#13#10'  {$else}'#13#10'  myCopyToClip(''debugtree'',txt );'#13
  +#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEForm.ResourceInspecto'
  +'rTabsHandleChange(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: An'
  +'siString);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  if ResourceInspe'
  +'ctorTabs.TabIndex=1 then'#13#10'  begin'#13#10'     ObjectInspectorTabs.Tab'
  +'Index:=2;'#13#10'  end'#13#10'  else if ResourceInspectorTabs.TabIndex=0 th'
  +'en'#13#10'    ObjectInspectorTabs.TabIndex:=0;'#13#10'  {$endif}'#13#10'end'
  +';'#13#10#13#10'procedure TXIDEForm.CodeTreeSearchBtnHandleButtonClick(e: TE'
  +'ventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'
  +#13#10'  OICodeSearch;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.EventsMa'
  +'croStartRecordingHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; '
  +'myValue: AnsiString);'#13#10'begin'#13#10'  StartRecording;'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.EventsMacroStartReplayHandleClick(e: TEventSta'
  +'tus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10
  +'  StartReplay;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.EventsMacroStop'
  +'RecordingHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue:'
  +' AnsiString);'#13#10'begin'#13#10'  StopRecording;'#13#10'end;'#13#10#13#10
  +'procedure TXIDEForm.EventsMacroInsertCommentHandleClick(e: TEventStatus;'#13
  +#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  Insert'
  +'Comment;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.EventsMacroSaveToClip'
  +'HandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStri'
  +'ng);'#13#10'begin'#13#10'  SaveMacroToClip;'#13#10'end;'#13#10#13#10'proced'
  +'ure TXIDEForm.EventsMacroLoadFromClipHandleClick(e: TEventStatus;'#13#10'  '
  +'nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  LoadMacroFr'
  +'omClip(e,nodeId);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.EventsMacroR'
  +'esumeRecordingHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myV'
  +'alue: AnsiString);'#13#10'begin'#13#10'  ResumeMacroRecording;'#13#10'end;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'procedure TXIDEForm.RunSettingsHandleC'
  +'lick(e: TEventStatus; nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13
  +#10'var'#13#10'  Lines:TStringList;'#13#10'  NewPath:String;'#13#10'begin'#13
  +#10'  NewPath:= XIDEPrompt(''Location of fpc compiler (fpc.exe)'',ConfigFPCP'
  +'ath);'#13#10'  if NewPath<>'''' then'#13#10'  begin'#13#10'    ConfigFPCPat'
  +'h := NewPath;'#13#10'    Lines:=TStringList.Create;'#13#10'    Lines.Add(Co'
  +'nfigFPCPath);'#13#10'    Lines.SaveToFile(''XIDERunSettings.dta'');'#13#10
  +'    Lines.Free;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure Initialise'
  ,'Resources;'#13#10'// define project-specific resources.'#13#10'// required '
  +'files have been pre-built into the resource file xide.lrs.'#13#10'// the re'
  +'source folders and files will be created from these lists by the procedure '
  +'WriteResourceFiles in unit UtilsJSCompile.'#13#10'begin'#13#10'  gpujs:=Res'
  +'ourceToString(''gpu-browser'');'#13#10#13#10'  // files needed for this pro'
  +'ject to be compiled by pas2js, to generate the project JS file...'#13#10'  '
  +'AddRequiredFile(''webtranspilerutils'',''resources/project/webtranspileruti'
  +'ls.pas'');'#13#10'  AddRequiredFile(''xthreads'',''resources/project/xthrea'
  +'ds.pas'');'#13#10'  AddRequiredFile(''xgpucanvas'',''resources/project/xgpu'
  +'canvas.pas'');'#13#10'  AddRequiredFile(''xgpueditor'',''resources/project/'
  +'xgpueditor.pas'');'#13#10'  AddRequiredFile(''x3dtable'',''resources/projec'
  +'t/x3dtable.pas'');'#13#10'  AddRequiredFile(''xcomposite'',''resources/proj'
  +'ect/xcomposite.pas'');'#13#10'  AddRequiredFile(''xcompositeintf'',''resour'
  +'ces/project/xcompositeintf.pas'');'#13#10'  AddRequiredFile(''gpu-browser'''
  +',''resources/project/gpu-browser.js'');'#13#10#13#10'  AddRequiredFile(''xi'
  +'demain'',''resources/project/XIDEMain.pas'');'#13#10'  AddRequiredFile(''xo'
  +'bjectinsp'',''resources/project/xobjectinsp.pas'');'#13#10'  AddRequiredFil'
  +'e(''codeeditor'',''resources/project/codeeditor.pas'');'#13#10'  AddRequire'
  +'dFile(''compileusercode'',''resources/project/compileusercode.pas'');'#13#10
  +'  AddRequiredFile(''propertyeditunit'',''resources/project/propertyeditunit'
  +'.pas'');'#13#10'  AddRequiredFile(''inputselectunit'',''resources/project/i'
  +'nputselectunit.pas'');'#13#10'  AddRequiredFile(''popupmemo'',''resources/p'
  +'roject/popupmemo.pas'');'#13#10'  AddRequiredFile(''interfacetypes'',''reso'
  +'urces/project/interfacetypes.pas'');'#13#10'  AddRequiredFile(''interfacety'
  +'pesdll'',''resources/project/interfacetypesdll.pas'');'#13#10'  AddRequired'
  +'File(''aboutunit'',''resources/project/aboutunit.pas'');'#13#10'  AddRequir'
  +'edFile(''xidehelpunit'',''resources/project/xidehelpunit.pas'');'#13#10'  A'
  +'ddRequiredFile(''savedsystems'',''resources/project/savedsystems.pas'');'#13
  +#10'  AddRequiredFile(''stylesutils'',''resources/project/stylesutils.pas'')'
  +';'#13#10'  AddRequiredFile(''eventlogging'',''resources/project/eventloggin'
  +'g.pas'');'#13#10'  AddRequiredFile(''replayuserdialog'',''resources/project'
  +'/replayuserdialog.pas'');'#13#10'  AddRequiredFile(''macrocomment'',''resou'
  +'rces/project/macrocomment.pas'');'#13#10'  AddRequiredFile(''pyxutils'',''r'
  +'esources/project/pyxutils.pas'');'#13#10#13#10#13#10'  // files needed for '
  +'web-pas2jscompiler to be compilable by pas2js, and built into the project J'
  +'S file...'#13#10'  AddRequiredFile(''fppas2js'',''resources/pas2jstranspile'
  +'r/fppas2js.pp'');'#13#10'  AddRequiredFile(''fppjssrcmap'',''resources/pas2'
  +'jstranspiler/fppjssrcmap.pp'');'#13#10'  AddRequiredFile(''pas2jscompiler'''
  +',''resources/pas2jstranspiler/pas2jscompiler.pp'');'#13#10'  AddRequiredFil'
  +'e(''fpjson'',''resources/pas2jstranspiler/fpjson.pp'');                    '
  +'   // used by filecache'#13#10'  AddRequiredFile(''pas2jsfilecache'',''reso'
  +'urces/pas2jstranspiler/pas2jsfilecache.pp'');'#13#10'  AddRequiredFile(''pa'
  +'s2jsfiler'',''resources/pas2jstranspiler/pas2jsfiler.pp'');'#13#10'  AddReq'
  +'uiredFile(''pas2jsfileutils'',''resources/pas2jstranspiler/pas2jsfileutils.'
  +'pp'');'#13#10'  AddRequiredFile(''pas2jsfileutilsnodejs'',''resources/pas2j'
  +'stranspiler/pas2jsfileutilsnodejs.inc'');'#13#10'  AddRequiredFile(''pas2js'
  +'logger'',''resources/pas2jstranspiler/pas2jslogger.pp'');'#13#10'  AddRequi'
  +'redFile(''pas2jspparser'',''resources/pas2jstranspiler/pas2jspparser.pp'');'
  +#13#10'  AddRequiredFile(''pas2js_defines'',''resources/pas2jstranspiler/pas'
  +'2js_defines.inc'');'#13#10'  AddRequiredFile(''nodejsfs'',''resources/pas2j'
  +'stranspiler/nodejsfs.pas'');'#13#10'  AddRequiredFile(''contnrs'',''resourc'
  +'es/pas2jstranspiler/contnrs.pas'');'#13#10'  AddRequiredFile(''nodejs'',''r'
  +'esources/pas2jstranspiler/nodejs.pas'');'#13#10'  AddRequiredFile(''jstree'
  +''',''resources/pas2jstranspiler/jstree.pp'');'#13#10'  AddRequiredFile(''js'
  +'writer'',''resources/pas2jstranspiler/jswriter.pp'');'#13#10'  AddRequiredF'
  +'ile(''jsbase'',''resources/pas2jstranspiler/jsbase.pp'');'#13#10'  AddRequi'
  +'redFile(''jssrcmap'',''resources/pas2jstranspiler/jssrcmap.pas'');'#13#10' '
  +' AddRequiredFile(''jstoken'',''resources/pas2jstranspiler/jstoken.pp'');'#13
  +#10'  AddRequiredFile(''pscanner'',''resources/pas2jstranspiler/pscanner.pp'
  +''');'#13#10'  AddRequiredFile(''pparser'',''resources/pas2jstranspiler/ppar'
  +'ser.pp'');'#13#10'  AddRequiredFile(''pastree'',''resources/pas2jstranspile'
  +'r/pastree.pp'');'#13#10'  AddRequiredFile(''pasresolver'',''resources/pas2j'
  +'stranspiler/pasresolver.pp'');'#13#10'  AddRequiredFile(''pasuseanalyzer'','
  +'''resources/pas2jstranspiler/pasuseanalyzer.pp'');'#13#10'  AddRequiredFile'
  ,'(''pasresolveeval'',''resources/pas2jstranspiler/pasresolveeval.pas'');'#13
  +#10'  AddRequiredFile(''web'',''resources/pas2jstranspiler/web.pas'');'#13#10
  +'  AddRequiredFile(''pas2jsutils'',''resources/pas2jstranspiler/pas2jsutils.'
  +'pp'');'#13#10'  AddRequiredFile(''pas2jsfs'',''resources/pas2jstranspiler/p'
  +'as2jsfs.pp'');'#13#10'  AddRequiredFile(''webfilecache'',''resources/pas2js'
  +'transpiler/webfilecache.pp'');'#13#10'  AddRequiredFile(''pas2jswebcompiler'
  +''',''resources/pas2jstranspiler/pas2jswebcompiler.pp'');'#13#10#13#10'  Ini'
  +'tialiseCompilerResources(''XIDE'',ProjectDirectory);'#13#10#13#10'  if not '
  +'DirectoryExists(''SavedSystems'') then'#13#10'    CreateDir(''SavedSystems'
  +''');'#13#10'end;'#13#10#13#10'{ TXIDEForm }'#13#10'procedure TXIDEForm.Form'
  +'Create(Sender: TObject);'#13#10'var'#13#10'  SystemDescription:String;'#13
  +#10'  RunSettingsNode:TDataNode;'#13#10'begin'#13#10'  MainForm:=self;'#13#10
  +'  MainFormTopControl:=MyRootDiv;'#13#10'  UITopControl:=UIRoot;'#13#10#13#10
  +'  SystemNodeTree.ScreenObject:=nil;       // root node has no screen object'
  +'.'#13#10'  NavTreeComponent:=self.NavTree.myNode;'#13#10'  ResourceTreeComp'
  +'onent:=self.ResourceTree.myNode;'#13#10'  CodeTreeComponent:=self.CodeTree.'
  +'myNode;'#13#10'  LoggingLabelNode:=self.EventLoggingLabel.myNode;'#13#10#13
  +#10'  myNode:=DoXFormCreated(self);'#13#10#13#10'  MainFormProjectRoot:=Find'
  +'DataNodeById(SystemNodeTree,UIProjectRootName,'''',true);'#13#10'  UIRootit'
  +'em:=FindDataNodeById(SystemNodeTree,UIProjectRootName,'''',true);'#13#10'  '
  +'XIDESetupUIRootNode;'#13#10#13#10'  // special case - don''t want the menu '
  +'item ''RunSettings'' to be included in system saves & will not go to browse'
  +'r'#13#10'  RunSettingsNode:=FindDataNodeById(SystemNodeTree,''RunSettings'''
  +','''',true);'#13#10'  RunSettingsNode.NodeClass:=''xxx'';'#13#10#13#10'  In'
  +'itialiseResources;'#13#10'  InitialiseXIDE;'#13#10'  InitialiseXComponentsP'
  +'roject;'#13#10'  XGPUEditor.CreateGPUEditForm;'#13#10'  GPUEditorDoneBtn.my'
  +'Node.registerEvent(''ButtonClick'',@OIEventWrapper.CloseGPUEditor);'#13#10
  +#13#10'  InitialiseStyleDesigner;'#13#10#13#10'  StyleResourcesPage.IsVisibl'
  +'e:=false;      // this is browser/HTML only'#13#10'  ObjectInspectorTabs.Ta'
  +'bIndex:=0;'#13#10'  ResourceInspectorTabs.TabIndex:=0;'#13#10'  MacroEventL'
  +'ist.SetMenuVisibility;'#13#10#13#10'  // is there a saved system from a pre'
  +'vious session?'#13#10'  SystemDescription:=trim(ReadFromLocalStore(''XIDESa'
  +'vedData.txt''));'#13#10'  if SystemDescription<>'''' then'#13#10'  begin'#13
  +#10'    DoSystemLoad(SystemDescription,'''');'#13#10'  end'#13#10'  else'#13
  +#10'    SelectNavTreeNode(MainFormProjectRoot,true);'#13#10#13#10'  {$ifdef '
  +'Python}'#13#10'  StartupPython;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'procedure TXIDEForm.FormActivate(Sender: TObject);'#13#10'begin'#13#10'end;'
  +#13#10#13#10#13#10'procedure TXIDEForm.FormClose(Sender: TObject; var CloseA'
  +'ction: TCloseAction);'#13#10'begin'#13#10'  inherited FormClose(Sender, Clo'
  +'seAction);'#13#10'  SaveSystemData;'#13#10'  {$ifdef Python}'#13#10'  if As'
  +'signed(PythonEngine1) then'#13#10'  begin'#13#10'    PythonEngine1.Finalize'
  +';  //!! to prevent crash when main form is closed  !!!! not working.'#13#10
  +'    PythonEngine1.UnloadDll;'#13#10'    PythonEngine1.Destroy;'#13#10'  end'
  +';'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEForm.CompileToJ'
  +'SClick(Sender: TObject);'#13#10'var'#13#10'  ok:Boolean;'#13#10'  i:integer'
  +';'#13#10'  ExtraDirectives,ExtraHTML:TStringList;'#13#10'begin'#13#10#13#10
  +'  // Start in Design Mode'#13#10'  if not DesignMode then'#13#10'    DoTogg'
  +'leDesignRunMode(ToggleDesignRunMode);'#13#10#13#10'  // Close any open popu'
  +'ps'#13#10'  for i:=length(OpenXForms)-1 downto 0 do'#13#10'  begin'#13#10' '
  +'   CloseXForm(OpenXForms[i].NodeName,OpenXForms[i].NameSpace);'#13#10'  end'
  +';'#13#10#13#10'  // Delete object inspector dynamic property editor fields'
  +#13#10'  ClearInspectors;'#13#10#13#10'  SaveSystemData;'#13#10#13#10'  Extr'
  +'aDirectives:=TStringList.Create;'#13#10'  // Compile the user-created event'
  +' code into a unit, to check for pas2js compile errors.'#13#10'  ok:=Compile'
  +'EventCode(CodeEditForm.CodeEdit,''LazJS'');'#13#10#13#10'  ExtraHTML:=TStri'
  +'ngList.Create;'#13#10'  if ok then'#13#10'  begin'#13#10'    // additional '
  +'inc file for composite resources'#13#10'    SaveCompositesToIncFile;'#13#10
  +#13#10'    {$ifdef Python}'#13#10'    ExtraDirectives.add(''-dPython'');'#13
  +#10'    ExtraHTML:=PyodideScript;'#13#10'    {$endif}'#13#10'    CompileJSan'
  +'dExecute(''resources/project/'',ExtraDirectives,ExtraHTML);'#13#10'    if n'
  +'ot FileExists(''XIDEMain.js'') then'#13#10'      ShowCompilerLog;'#13#10'  '
  +'end'#13#10'  else'#13#10'  begin'#13#10'    DisplayDllCompileErrors;'#13#10
  +'  end;'#13#10'  ExtraDirectives.free;'#13#10'  ExtraHTML.Free;'#13#10'end;'
  +#13#10#13#10#13#10'procedure TXIDEForm.CompilerShowLogClick(Sender: TObject)'
  ,';'#13#10'begin'#13#10'  ShowCompilerLog;'#13#10'end;'#13#10#13#10'procedure'
  +' TXIDEForm.FormResize(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize('
  +'self, MyRootDiv);'#13#10'end;'#13#10#13#10'{$else}'#13#10#13#10'procedure S'
  +'etupAnimatedPointer;'#13#10'var'#13#10'  PointerStyleHTML:string;'#13#10'be'
  +'gin'#13#10'  PointerStyleHTML:=''     <style> '' +LineEnding'#13#10'  +''  '
  +'     #AutomatedCursor { ''  +LineEnding'#13#10'  +''       position: fixed;'
  +' ''  +LineEnding             // fixed = relative to viewport'#13#10'  +''  '
  +'     font-size: 40px;  '' +LineEnding'#13#10'  +''       -ms-transform: rot'
  +'ate(40deg); /* IE 9 */ ''  +LineEnding'#13#10'  +''       -webkit-transform'
  +': rotate(40deg); /* Safari */ ''  +LineEnding'#13#10'  +''       transform:'
  +' rotate(40deg); ''  +LineEnding'#13#10'  +''    } '' +LineEnding'#13#10'  +'
  +'''    </style>  '' +LineEnding;'#13#10#13#10'  asm'#13#10'     var elem = d'
  +'ocument.createElement(''div'');'#13#10'     elem.id = "AutomatedCursor";'#13
  +#10'     elem.innerHTML = "&#9756;";'#13#10'     elem.style.display = "none"'
  +';'#13#10'     elem.style.animationFillMode="forwards";'#13#10'     document'
  +'.body.appendChild(elem);'#13#10#13#10'     document.head.innerHTML = docume'
  +'nt.head.innerHTML+PointerStyleHTML;'#13#10'  end;'#13#10'  InitAutomatedCur'
  +'sor;'#13#10'end;'#13#10#13#10'procedure InitialisePage(dummy:string);'#13#10
  +'var'#13#10'  tempstr,dm,sysname:string;'#13#10'  i:integer;'#13#10'  s:stri'
  +'ng;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  ok:=true;'#13#10#13#10'  Sta'
  +'rtingUp:=true;// suppress event handlers while starting up'#13#10#13#10'  /'
  +'/ this include file contains create statements for all the interface object'
  +'s in main form and other forms'#13#10'  // XForm nodes are added as childre'
  +'n of UIRootNode.'#13#10'  {$I systemintface.inc}'#13#10'  MainForm:=XIDEFor'
  +'m;'#13#10'  //showmessage(''mainform node is ''+MainForm.myNode.NodeName+'''
  +' class=''+MainForm.myNode.NodeClass+'' type=''+MainForm.myNode.NodeType);'
  +#13#10#13#10'  UIRootNode.MyForm:=nil;'#13#10'  //showmessage(''DONE INTFACE'
  +' LOAD................'');'#13#10'  XIDESetupUIRootNode;'#13#10#13#10'  NavT'
  +'reeComponent:=XIDEForm.NavTree.myNode;'#13#10'  ResourceTreeComponent:=XIDE'
  +'Form.ResourceTree.myNode;'#13#10'  CodeTreeComponent:=XIDEForm.CodeTree.myN'
  +'ode;'#13#10'  LoggingLabelNode:=XIDEForm.EventLoggingLabel.myNode;'#13#10#13
  +#10'  MainFormProjectRoot:=FindDataNodeById(SystemNodeTree,UIProjectRootName'
  +','''',true);'#13#10'  UIRootitem:=FindDataNodeById(SystemNodeTree,UIProject'
  +'RootName,'''',true);'#13#10#13#10'  BuildSkeletonResourceTree;'#13#10'  Ini'
  +'tialiseStyleDesigner;'#13#10#13#10'  // this include file (systemnodetree.i'
  +'nc) contains the system description to be loaded at startup.'#13#10'  // It'
  +' includes the XIDE framework components.'#13#10'  // It reflects the system'
  +' as it was defined when the ''Run in Browser'' button was last pressed in t'
  +'he Desktop environment.'#13#10'  {$I systemnodetree.inc}'#13#10'  XMLToNode'
  +'Tree(LoadedSystemString,UIRootNode);   //! has been saved by the ''Run in B'
  +'rowser'' menu button'#13#10'//  showmessage(''after XMLToNodeTree. Node ''+'
  +'SystemRootName+'' has ''+inttostr(length(systemnodetree.childnodes))+'' chi'
  +'ldren'');'#13#10'  InitialiseXIDE;'#13#10#13#10#13#10'  PopupMemoForm.Initi'
  +'aliseMemo;'#13#10'  CodeEditForm.Initialise;'#13#10'  MacroEventList.SetMen'
  +'uVisibility;'#13#10#13#10'  RedisplayResourceTree;'#13#10'  InitialiseStyle'
  +'Resources;'#13#10'  StyleRootNode:=XIDEForm.StyleSheet.myNode;'#13#10'  //B'
  +'uildStylesDataFromTreeData(StyleRootNode);'#13#10'  GenerateStyleSheets;'#13
  +#10#13#10'  //systempas:=''1'' + LineEnding'#13#10'  //+ ''2'' + LineEnding'
  +#13#10'  //+ ''3'';   // this construct was causing pas2js to producs a stac'
  +'k overflow.  Using \n instead.'#13#10#13#10'  {$I eventsinterfacepas.inc}'
  +#13#10'  {$I interfacetypespas.inc}'#13#10#13#10'  // minimal rtl set....'#13
  +#10'  //{$I systempas.inc}'#13#10'  //{$I typespas.inc}'#13#10'  //{$I class'
  +'espas.inc}'#13#10'  //{$I jspas.inc}'#13#10'  //{$I rtlconstspas.inc}'#13#10
  +'  //{$I sysutilspas.inc}'#13#10#13#10'  // common rtl set.....'#13#10'  {$I'
  +' classespas.inc}'#13#10'  {$I contnrspas.inc}'#13#10'  {$I dateutilspas.inc'
  +'}'#13#10'  {$I jspas.inc}'#13#10'  {$I mathpas.inc}'#13#10'  {$I rtlconstsp'
  +'as.inc}'#13#10'  {$I strutilspas.inc}'#13#10'  {$I systempas.inc}'#13#10'  '
  +'{$I sysutilspas.inc}'#13#10'  {$I typespas.inc}'#13#10'  {$I typinfopas.inc'
  +'}'#13#10'  //  {$I rttipas.inc}'#13#10#13#10'  {$I gpu-browserjs.inc}'#13#10
  +#13#10'  SetupAnimatedPointer;'#13#10#13#10'  // If this JS startup was NOT '
  +'initiated from the Lazarus/Desktop runtime, then load up'#13#10'  // the la'
  +'st stored system description. This replaces the user interface area being d'
  +'esigned by the user, but not'#13#10'  // the XIDE framework object inspecto'
  +'r components.'#13#10'  RunningDeployedRuntime:=false;'#13#10#13#10'  asm'#13
  ,#10'    dm = myDeployedMode;'#13#10'  end;'#13#10#13#10'  if dm=''FromLaz'' '
  +'then'#13#10'  begin'#13#10'    {$I systemcomposites.inc}'#13#10'    Initial'
  +'iseComposites;'#13#10'  end;'#13#10#13#10'  //showmessage(''dm=''+dm);'#13
  +#10'  if dm<>''FromLaz'' then'#13#10'  begin'#13#10#13#10'    if dm=''Run'' '
  +'then'#13#10'    begin'#13#10'      // hide the XIDE framework'#13#10'      '
  +'ShowHideObjectInspector(false);'#13#10'    end;'#13#10#13#10' //   showmess'
  +'age(''not running from Laz, so loading last system description'');'#13#10' '
  +'   //look for a system description with the same name as the one we just lo'
  +'aded.'#13#10'    sysname:=UIRootNode.getAttribute(''SystemName'',false).Att'
  +'ribValue;'#13#10'//    showmessage(''looking for saved system XIDESavedData'
  +'''+sysname);'#13#10'    tempstr:=trim(ReadFromLocalStore(''XIDESavedData''+'
  +'sysname));'#13#10'    //showmessage(tempstr);'#13#10'    if tempstr<>'''' t'
  +'hen'#13#10'    begin'#13#10'      //showmessage(''found ''+sysname);'#13#10
  +'      ok:=StringUtils.confirm(''Press OK to resume your previous "''+sysnam'
  +'e+''" session, or Cancel to continue with the basic load'');'#13#10'      i'
  +'f ok then'#13#10'      begin'#13#10'        ok:=DoSystemLoad(tempstr,sysnam'
  +'e);'#13#10'        if ok then'#13#10'        begin'#13#10'          Rebuild'
  +'NavigatorTree;'#13#10'          RebuildCodeTree;'#13#10'        end'#13#10
  +'        else'#13#10'        begin'#13#10'          //showmessage(''load fai'
  +'led'');'#13#10'          OIClearSystem;'#13#10'        end;'#13#10'      en'
  +'d'#13#10'      else ok:=true;'#13#10'    end;'#13#10'  end;'#13#10#13#10'  '
  +'StartingUp:=false;// suppress event handlers while starting up'#13#10#13#10
  +'  SelectNavTreeNode(MainFormProjectRoot,true);'#13#10#13#10'  if ok then'#13
  +#10'  begin'#13#10'      // Deal with the DeployedMode flag'#13#10'      if '
  +'dm=''Run'' then'#13#10'      begin'#13#10'        RunningDeployedRuntime:=t'
  +'rue;'#13#10'        XIDEForm.SystemDeploy.IsVisible:=false;'#13#10'        '
  +'XIDEForm.ToggleDesignRunMode.IsVisible:=false;'#13#10'        XIDEForm.Help'
  +'Menu.IsVisible:=false;'#13#10'        XIDEForm.SystemClear.IsVisible:=false'
  +';'#13#10'        XIDEForm.SystemDeploy.IsVisible:=false;'#13#10'        XID'
  +'EForm.SystemLoad.IsVisible:=false;'#13#10'        ShowGreyOverlay(''UIRootN'
  +'ode'',''Grey1'');'#13#10'        // timeout here so the grey overlay appear'
  +'s'#13#10'        asm'#13#10'        myTimeout(pas.XObjectInsp.ContinueToggl'
  +'eToRunMode,5,''ContinueToggleToRunMode'',0);'#13#10'        end;'#13#10'   '
  +'   end;'#13#10'  end;'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10#13#10
  +'begin'#13#10'//    {$macro on}'#13#10'//    {$define mmm :=showmessage(''he'
  +'llo'')  }'#13#10'//    mmm;'#13#10#13#10'  MainUnitName:=''XIDEMain'';'#13
  +#10#13#10'  {$ifndef JScript}'#13#10'    Application.ShowHint:=true;'#13#10
  +'    {$I rtl.lrs}'#13#10'    {$I xide.lrs}'#13#10'  {$Else}'#13#10'     asm'
  +#13#10'     try{'#13#10'        // now do any Javascript specific start up c'
  +'ode'#13#10'        pas.HTMLUtils.addHandVBoxStyles();'#13#10'        pas.HT'
  +'MLUtils.addWidgetInnerStyles();'#13#10'        }catch(err) { alert(err.mess'
  +'age+'' in XIDEMain'');}'#13#10'     end;'#13#10'  {$endif}'#13#10#13#10'end'
  +'.'#13#10#13#10
]);
LazarusResources.Add('xobjectinsp','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit XObjectInsp;'#13#10#13
  +#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10
  +'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, TypInfo, Stringutil'
  +'s, NodeUtils, Events, PopupMemo,'#13#10'{$ifndef JScript}'#13#10'  LazsUtil'
  +'s, Menus, DynLibs,'#13#10'  Controls, ComCtrls, PropEdits, ExtCtrls, Dialog'
  +'s,Forms,CompilerLogUnit, xpparser,'#13#10'{$else}'#13#10'  AboutUnit,pparse'
  +'r,HTMLUtils,'#13#10'{$endif}'#13#10'  UtilsJSCompile,XIFrame, XSVGContainer'
  +','#13#10'  WrapperPanel,  CompileUserCode,'#13#10'  XHBox, XVBox, XCode,XCo'
  +'lorPicker,'#13#10'  XTree,  XButton, XScrollBox, XEditBox, XCheckBox, XComb'
  +'oBox, XTabControl,'#13#10'  XForm, XTable, XMemo, XMenu, CodeEditor, Proper'
  +'tyEditUnit, EventsInterface,'#13#10'  XGPUCanvas, XGPUEditor, XCompositeInt'
  +'f, StylesUtils, EventLogging;'#13#10#13#10'{$ifdef JScript}'#13#10'procedur'
  +'e ShowXFormForDesign(XFormName:String);'#13#10'procedure CompleteToggleToRu'
  +'nMode(ok:boolean);'#13#10'procedure BrowserSaveData(TheData:String);'#13#10
  +'procedure ContinueToggleToRunMode;'#13#10'procedure CompleteDeploySystem(de'
  +'ployname:String);'#13#10'procedure InitialiseComposites;'#13#10'{$endif}'#13
  +#10#13#10'{$ifndef JScript}'#13#10'type TLoadTimerTag = class'#13#10'       '
  +'public'#13#10'         systemstring:string;'#13#10'         SysName:String;'
  +#13#10'         procedure DoXMLToNodeTree(sender:TObject);'#13#10'       end'
  +';'#13#10'{$endif}'#13#10#13#10'type'#13#10'  TOIEventWrapper = class'#13#10
  +'    procedure OIEditProperty(e:TEventStatus;nodeId:string;myValue:string);'
  +#13#10'    procedure OIEditEvent(e:TEventStatus;nodeId:string;myValue:string'
  +');'#13#10'    procedure OIEditEventCode(e:TEventStatus;nodeId:string;myValu'
  +'e:string);'#13#10'    procedure OIEditEventCodeFromCodeTree(NodeNameToEdit:'
  +'string;EventToEdit:string);'#13#10'    procedure TestButtonClick(e:TEventSt'
  +'atus;nodeId:string;myValue:string);'#13#10'    procedure OIEditPropertyButt'
  +'onClick(e:TEventStatus;nodeId:string;myValue:string);'#13#10'    procedure '
  +'CloseGPUEditor(e:TEventStatus;nodeId:string;myValue:string);'#13#10'    {$i'
  +'fdef JScript}'#13#10'    procedure OIPasteTarget(e:TEventStatus;nodeId:stri'
  +'ng;myValue:string);'#13#10'    {$endif}'#13#10'  end;'#13#10#13#10'procedur'
  +'e DebugWriteNodeTree(StartNode:TdataNode;var txt:String;lvl:integer);'#13#10
  +'procedure InitialiseXIDE;'#13#10'//procedure InitialiseComposites;'#13#10'f'
  +'unction XIDEConfirm(promptString:String):boolean;'#13#10'procedure SetupAva'
  +'ilableResources;'#13#10'procedure RebuildNavigatorTree;'#13#10'procedure Re'
  +'buildCodeTree;'#13#10'procedure RebuildResourcesTree;'#13#10'procedure Buil'
  +'dSkeletonResourceTree;'#13#10'procedure SaveSystemData;'#13#10'procedure OI'
  +'NavTreeNodeChange(e:TEventStatus;nodeId,NameSpace:string;myValue:string);'
  +#13#10'procedure OICodeTreeNodeChange(nodeId:string;myValue:string);'#13#10
  +'procedure OIResourceTreeNodeChange(nodeId:string;myValue:string);'#13#10'pr'
  +'ocedure OIDragItem(e:TEventStatus;nodeId:string;myValue:string);'#13#10'pro'
  +'cedure OIDropItem(e:TEventStatus;nodeId:string;myValue:string);'#13#10'func'
  +'tion OIPasteItem(nodeId:string;myValue:string):boolean;'#13#10'procedure OI'
  +'CutItem(nodeId:string;myValue:string);'#13#10'procedure CopyNavNode( NodeTo'
  +'Copy:TDataNode);'#13#10'procedure OICopySelectedItem;'#13#10'procedure OIDe'
  +'leteSelectedItem;'#13#10'function OIDeleteItem(NodeId,NameSpace:String;Show'
  +'NotFoundMsg:Boolean=true):Boolean;'#13#10'procedure OIComponentCopy(nodeId:'
  +'string;myValue:string);'#13#10'procedure OISystemLoad(e:TEventStatus;nodeId'
  +':string);'#13#10'procedure OIClearSystem;'#13#10'procedure OIDeploySystem;'
  +#13#10'function OITreeNodeHint(TreeLabelStr:String):String;'#13#10'procedure'
  +' PopulateObjectInspector(CurrentNode:TDataNode);'#13#10'procedure OIPropsEv'
  +'entsTabChange;'#13#10'function PopulateResourceInspector(CurrentNode:TDataN'
  +'ode):String;'#13#10'function TreeLabelToID(TreeLabelStr,TreeName:String;var'
  +' FirstBit:String):String;'#13#10'function GetNavigatorHint(InTree:TDataNode'
  +';SystemNodeName:String):String;'#13#10'function CompositeResourcesString(Qu'
  +'otedString:Boolean):String;'#13#10'function BuildSystemString(Encapsulate:B'
  +'oolean):String;'#13#10'Procedure SaveSystemToClip;'#13#10'Procedure SaveSys'
  +'temToFile;'#13#10'procedure ClearResourceInspector;'#13#10'procedure ClearI'
  +'nspectors;'#13#10'//procedure OILoadSavedSystem;'#13#10'procedure OILoadSav'
  +'edSystem2(SysName:String);'#13#10'function DoSystemLoad(SystemDescription,S'
  ,'ysName:string):Boolean;'#13#10'procedure CodeEditorClosed(EditBoxNode:Tdata'
  +'Node);'#13#10'procedure PropertyEditorClosed(EditBoxNode:TdataNode);'#13#10
  +'function isValidSystemData(SystemDescription:string):boolean;'#13#10'proced'
  +'ure EditEventCode(NodeNameToEdit,EventToEdit,MainCode,InitCode:String);'#13
  +#10'procedure OIAddCodeUnitNode(UnitType:String);'#13#10'procedure OIAddCode'
  +'FuncNode;'#13#10'procedure OIEditCodeUnit;'#13#10'procedure OIDeleteCodeUni'
  +'t;'#13#10'procedure DoToggleDesignRunMode(Sender:TXMenuItem);'#13#10'proced'
  +'ure DisplayDllCompileErrors;'#13#10'function OINavTreeAllowDrop(DstNode:TDa'
  +'taNode):Boolean;'#13#10'procedure SelectNavTreeNode(CurrentNode:TDataNode; '
  +'refresh:boolean);'#13#10'Function ConstructSystemTreeString(CurrentItem:TDa'
  +'taNode; level:Integer; IncludeTypes,IncludeProperties:Boolean;'#13#10'     '
  +'                              Exclusions:TStringList;PropType:String):Strin'
  +'g;'#13#10'//function   DfltEventCode:string;'#13#10'procedure OIMoveItem(no'
  +'deId,NameSpace:string;NewParentId:string);'#13#10'procedure OICopyToNewPare'
  +'nt(nodeId,NameSpace:string;NewParentId:string;NewName:String);  overload;'
  +#13#10'{$ifndef JScript}'#13#10'procedure SaveCompositesToIncFile;'#13#10'pr'
  +'ocedure OICopyToNewParent(nodeId,NameSpace:string;NewParentId:string;NewNam'
  +'e:PChar);  overload;'#13#10'{$else}'#13#10'procedure InitAutomatedCursor;'
  +#13#10'{$endif}'#13#10'procedure OIMoveNavSiblingUpDown(UpDown:String);'#13
  +#10'procedure DoSelectNavTreeNode(CurrentNode:TDataNode; refresh:boolean);'
  +#13#10'procedure RefreshObjectInspector(CurrentNode:TDataNode);'#13#10'proce'
  +'dure ShowHideObjectInspector(show:Boolean);'#13#10'function XIDEPrompt(Prom'
  +'ptString,DefaultString:string):string;'#13#10'procedure RedisplayResourceTr'
  +'ee;'#13#10'procedure OIEncapsulate;'#13#10'procedure OIDeleteResource;'#13
  +#10'procedure OILoadResource;'#13#10'procedure OIAddInterfaceElement;'#13#10
  +'procedure DiscoverSavedSystems(var NamesList:TStringList);'#13#10'procedure'
  +' OICodeSearch;'#13#10#13#10#13#10'const'#13#10'  ResourceDataRootName=  ''R'
  +'esourceRoot'' ;'#13#10'  CodeDataRootName=  ''dllRoot'' ;'#13#10'  UIProjec'
  +'tRootName = ''UIRoot'';                    //the scrollbox containing the u'
  +'ser-designed (mainform) system'#13#10'  PropertyEditorScrollboxName:string '
  +'= ''PropertyEditorScrollbox'';'#13#10'  EventsEditorScrollboxName:string = '
  +'''EventsEditorScrollbox'';'#13#10'  ResourceEditorScrollboxName:string = '''
  +'ResourceEditorScrollbox'';'#13#10'  DeploymentModeOptions:Array[0..1] of st'
  +'ring = (''Design'',''Run'');'#13#10'  ShowResourcesOptions:Array[0..1] of s'
  +'tring = (''Left'',''Right'');'#13#10#13#10#13#10'var'#13#10'  MainFormProje'
  +'ctRoot,UIRootItem:TDataNode;'#13#10'  DesignMode:Boolean;'#13#10'  NavTreeC'
  +'omponent,ResourcesNodeTree, ResourceTreeComponent, CodeTreeComponent:TDataN'
  +'ode;'#13#10'  OIEventWrapper:TOIEventWrapper;'#13#10'  LastLazUserInterface'
  +'ItemSelected,LastHTMLUserInterfaceItemSelected:String;'#13#10'  LastHTMLUse'
  +'rInterfaceItemHadBorder:Boolean;'#13#10'  TreeInFocus, ObjectInspectorSelec'
  +'tedNavTreeNode, ObjectInspectorSelectedCodeTreeNode, ObjectInspectorSourceN'
  +'ode:TDataNode;'#13#10'  OISelectedCodeProcName:String;'#13#10'  OISelectedC'
  +'odeLineNum:integer;'#13#10#13#10'  {$ifndef JScript}'#13#10'  UITopControl:'
  +'TWinControl;'#13#10'  {$else}'#13#10'  RunningDeployedRuntime:Boolean;'#13
  +#10'  CompositesString:String;'#13#10'  {$endif}'#13#10#13#10#13#10'implemen'
  +'tation'#13#10'uses PasteDialogUnit, PyXUtils, XIDEMain;'#13#10#13#10'const'
  +#13#10'  AttributeEditorNameDelimiter:string = ''__'';'#13#10#13#10'  //Sand'
  +'raMode:Boolean = true;'#13#10#13#10'var'#13#10'  ObjectInspectorSelectedCod'
  +'eNodeText:String;'#13#10'  AvailableResourcesSelectedNode:TDataNode;'#13#10
  +'  ObjectInspectorSourceCut:Boolean;'#13#10#13#10'type'#13#10'  TCompositeRe'
  +'source = record'#13#10'    ResourceName:String;'#13#10'    SourceString:Str'
  +'ing;'#13#10'  end;'#13#10'//var'#13#10'//  ListOfComposites:Array of TCompo'
  +'siteResource;'#13#10#13#10'function XIDEConfirm(promptString:String):boolea'
  +'n;'#13#10'var'#13#10'  ok:boolean;'#13#10'  macroevent:TMacroEvent;'#13#10
  +'begin'#13#10'  if not EventLogging.MacroEventList.Replaying then'#13#10'   '
  +' ok:=confirm(promptString)'#13#10'  else'#13#10'  begin'#13#10'    macroeve'
  +'nt:=EventLogging.AdvanceEventLog;'#13#10'    if macroevent.EventType<>''Use'
  +'rConfirm'' then'#13#10'    begin'#13#10'      showmessage(''unable to repla'
  +'y user confirmation...'');'#13#10'      ok:=confirm(promptString);'#13#10' '
  +'   end'#13#10'    else'#13#10'    begin'#13#10'      ok:=myStrToBool(macroe'
  +'vent.eventvalue);'#13#10'      if ok then showmessage(''User confirmed OK t'
  +'o:''+LineEnding+promptString)'#13#10'      else showmessage(''User confirme'
  +'d Cancel to:''+LineEnding+promptString);'#13#10'    end;'#13#10'  end;'#13
  +#10#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'Function ConstructSystemTre'
  ,'eString(CurrentItem:TDataNode; level:Integer; IncludeTypes,IncludePropertie'
  +'s:boolean;'#13#10'                                   Exclusions:TStringList'
  +';PropType:String):String;'#13#10'// Recursive'#13#10'var ArrayString:String'
  +';'#13#10'    i,j,numchildren:integer;'#13#10'    InsertingAttributes:Boolea'
  +'n;'#13#10'begin'#13#10'  // In the main form, start at UIRoot node'#13#10#13
  +#10'  if CurrentItem<>nil then'#13#10'  begin'#13#10'//    {$ifdef JScript}'
  +#13#10'//    if CurrentItem.NodeClass=''SVG'' then'#13#10'//    asm'#13#10'/'
  +'/      console.log(CurrentItem.NodeName+'' ''+CurrentItem.NodeType+'' ''+Cu'
  +'rrentItem.IsDynamic);'#13#10'//    end;'#13#10'//    {$endif}'#13#10'    if'
  +' (CurrentItem.NameSpace='''')'#13#10'    and ('#13#10'    ((CurrentItem.Nod'
  +'eClass=''UI'') and (CurrentItem.IsDynamic=true))'#13#10'    or ((CurrentIte'
  +'m.NodeClass=''SVG'') and (CurrentItem.IsDynamic=true))'#13#10'    or ((Curr'
  +'entItem.NodeClass=''UI'') and (CurrentItem.NodeType=''TXForm'') and (Curren'
  +'tItem.NodeName = MainForm.Name))'#13#10'    or ((CurrentItem.NodeClass=''UI'
  +''') and (CurrentItem.NodeType=''TXMainMenu''))'#13#10'    or ((CurrentItem.'
  +'NodeClass=''NV'') and (CurrentItem.IsDynamic=true))'#13#10'    or (CurrentI'
  +'tem=SystemNodeTree)'#13#10'    or (CurrentItem=ResourcesNodeTree)'#13#10'  '
  +'  or (CurrentItem=CodeRootNode)'#13#10'    or (CurrentItem=UIRootNode)'#13
  +#10'    or (CurrentItem=UIRootItem)'#13#10'    or (CurrentItem.NodeClass=''C'
  +'ode'')'#13#10'    or (CurrentItem.NodeClass[1]=''R'')'#13#10'    )'#13#10' '
  +'   then'#13#10'    begin'#13#10'      if (Exclusions=nil)'#13#10'      or ('
  +'Exclusions.IndexOf(CurrentItem.NodeName)<0) then'#13#10'      begin'#13#10
  +'        if CurrentItem.NodeClass[1]<>''R'' then'#13#10'         j:=0;'#13#10
  +'          //showmessage(''Currentitem=''+CurrentItem.NodeClass+'' ''+Curren'
  +'tItem.NodeType+'' ''+CurrentItem.Nodename);'#13#10'        numchildren:=len'
  +'gth(CurrentItem.ChildNodes);'#13#10#13#10'        if level = 0 then ArraySt'
  +'ring:='' '';'#13#10#13#10'        if (IncludeProperties)'#13#10'        and'
  +' ((CurrentItem.NodeClass=''UI'') or (CurrentItem.NodeClass=''NV''))'#13#10
  +'        and (length(CurrentItem.NodeAttributes)>0) then'#13#10'          In'
  +'sertingAttributes:=true'#13#10'        else'#13#10'          InsertingAttri'
  +'butes:=false;'#13#10#13#10'        if level=0'#13#10'        then ArrayStri'
  +'ng:=''['''#13#10'        else'#13#10'        begin'#13#10'          if (Num'
  +'Children>0)'#13#10'          or (InsertingAttributes) then'#13#10'         '
  +'     ArrayString:=ArrayString+'',['''#13#10'          else'#13#10'         '
  +'     ArrayString:=ArrayString+'','';'#13#10'        end;'#13#10#13#10'     '
  +'   if IncludeTypes then'#13#10'          ArrayString:=ArrayString+''"''+Cur'
  +'rentItem.NodeType+''(''+CurrentItem.NodeName+'')"'''#13#10'        else'#13
  +#10'          ArrayString:=ArrayString+''"''+CurrentItem.NodeName+''"'';'#13
  +#10#13#10'        if (InsertingAttributes) then'#13#10'        begin'#13#10
  +'          for j:=0 to length(CurrentItem.NodeAttributes)-1 do'#13#10'      '
  +'    begin'#13#10'            if (Exclusions.IndexOf(CurrentItem.NodeName+'''
  +'.''+CurrentItem.NodeAttributes[j].AttribName)<0)'#13#10'            and ((C'
  +'urrentItem.NodeAttributes[j].AttribType=PropType)'#13#10'                or'
  +' (PropType='''')'#13#10'                or (Currentitem.NodeType=''TXCompos'
  +'iteIntf'')         //!!!! improve this'#13#10'                ) then'#13#10
  +'            begin'#13#10'              ArrayString:=ArrayString+'','';'#13
  +#10'              ArrayString:=ArrayString+''"''+CurrentItem.NodeName+''.''+'
  +'CurrentItem.NodeAttributes[j].AttribName+''"'';'#13#10'            end;'#13
  +#10'          end;'#13#10'        end;'#13#10#13#10'        if (CurrentItem.'
  +'NodeName <> MainForm.Name) then'#13#10'          for i:=0 to numchildren-1 '
  +'do'#13#10'          begin'#13#10'             ArrayString:=ArrayString+Cons'
  +'tructSystemTreeString(CurrentItem.ChildNodes[i],level+1,IncludeTypes,Includ'
  +'eProperties,Exclusions,PropType);'#13#10'          end'#13#10'        else'
  +#13#10'        begin'#13#10'          // Main Form only....'#13#10'         '
  +' // for main form, just want  UIProjectRootName, plus main menu'#13#10'    '
  +'      for i:=0 to numchildren-1 do'#13#10'          begin'#13#10'          '
  +'  if (CurrentItem.ChildNodes[i].NodeType=''TXMainMenu'') then'#13#10'      '
  +'         ArrayString:=ArrayString+ConstructSystemTreeString(CurrentItem.Chi'
  +'ldNodes[i],level+1,IncludeTypes,IncludeProperties,Exclusions,PropType);'#13
  +#10'          end;'#13#10#13#10'          ArrayString:=ArrayString+Construct'
  +'SystemTreeString(UIRootitem,level+1,IncludeTypes,IncludeProperties,Exclusio'
  +'ns,PropType);'#13#10#13#10'        end;'#13#10#13#10'        if ( NumChildr'
  +'en>0)'#13#10'        or (level=0)'#13#10'        or (InsertingAttributes) t'
  +'hen'#13#10'          ArrayString:=ArrayString+'']'';'#13#10#13#10'      end'
  ,';'#13#10'    end;'#13#10'  end;'#13#10#13#10'  result:= ArrayString;'#13#10
  +'end;'#13#10#13#10'Function ConstructCodeTreeString(CurrentItem:TDataNode; l'
  +'evel:Integer):String;'#13#10'// Recursive'#13#10'var ArrayString, ProcsStri'
  +'ng:String;'#13#10'    i,p,numchildren:integer;'#13#10'begin'#13#10'  if Cur'
  +'rentItem<>nil then'#13#10'  begin'#13#10'    if (CurrentItem.NameSpace='''''
  +')'#13#10'    and ('#13#10'    (CurrentItem=CodeRootNode)'#13#10'    or (Cur'
  +'rentItem.NodeClass=''Code'')'#13#10'    )'#13#10'    then'#13#10'    begin'
  +#13#10'      numchildren:=length(CurrentItem.ChildNodes);'#13#10#13#10'     '
  +' p:=0;'#13#10'      ProcsString:='''';'#13#10'      if (CurrentItem.NodeCla'
  +'ss=''Code'')'#13#10'      and (NumChildren=0) then'#13#10'      begin'#13#10
  +'        // This is a raw unit.'#13#10'        // If the compiler has been r'
  +'un (pas2js), then there will be a list of defined procedures'#13#10'       '
  +' // available for display in this tree.'#13#10'        for i:=0 to length(X'
  +'IDEProcsList)-1 do'#13#10'        begin'#13#10'          if lowercase(XIDEP'
  +'rocsList[i].FileName) = lowercase(CurrentItem.NodeName)+''.pas'' then'#13#10
  +'          begin'#13#10'            p:=p+1;'#13#10'            //ProcsString'
  +':=ProcsString+'',"''+inttostr(XIDEProcsList[i].LineNum)+''(''+XIDEProcsList'
  +'[i].Name+'')"'';'#13#10'            ProcsString:=ProcsString+'',"''+XIDEPro'
  +'csList[i].Name+''"'';'#13#10'          end;'#13#10'        end;'#13#10'    '
  +'  end;'#13#10#13#10#13#10'      if level = 0 then ArrayString:='' '';'#13#10
  +#13#10'      if level=0'#13#10'      then ArrayString:=''['''#13#10'      el'
  +'se'#13#10'      begin'#13#10'        if (NumChildren>0) or (p>0)'#13#10'   '
  +'     then'#13#10'              ArrayString:=ArrayString+'',['''#13#10'     '
  +'   else'#13#10'              ArrayString:=ArrayString+'','';'#13#10'      e'
  +'nd;'#13#10#13#10'      ArrayString:=ArrayString+''"''+CurrentItem.NodeType+'
  +'''(''+CurrentItem.NodeName+'')"'';'#13#10#13#10#13#10'      if (p>0) then'
  +#13#10'      begin'#13#10'        // This is a raw unit.'#13#10'        // I'
  +'f the compiler has been run (pas2js), then there will be a list of defined '
  +'procedures'#13#10'        // available for display in this tree.'#13#10'   '
  +'     ArrayString:=ArrayString+ProcsString+'']'';'#13#10'      end;'#13#10#13
  +#10'      for i:=0 to numchildren-1 do'#13#10'      begin'#13#10'         Ar'
  +'rayString:=ArrayString+ConstructCodeTreeString(CurrentItem.ChildNodes[i],le'
  +'vel+1);'#13#10'      end;'#13#10#13#10'      if ( NumChildren>0)'#13#10'   '
  +'   or (level=0)'#13#10'      then'#13#10'        ArrayString:=ArrayString+'
  +''']'';'#13#10#13#10'    end;'#13#10'  end;'#13#10#13#10'  result:= ArrayStr'
  +'ing;'#13#10'end;'#13#10#13#10#13#10'function TreeLabelToID(TreeLabelStr,Tre'
  +'eName:String;var FirstBit:String):String;'#13#10'//e.g. "EditBox(MySimpleID'
  +')"  =>  "MySimpleID"'#13#10'// or  "EditBox(MySimpleID) Click"  =>  "MySimp'
  +'leID"'#13#10'var i,ln:integer;'#13#10'  newstring,tempstr,TreeLabel2:String'
  +';'#13#10'  StartOfIdFound:boolean;'#13#10'begin'#13#10'  TreeLabel2:=TreeLa'
  +'belStr;'#13#10'  StartOfIdFound:=false;'#13#10'  newstring:='''';'#13#10'  '
  +'FirstBit:='''';'#13#10'  ln:=length(TreeLabel2);'#13#10'  i:=1;'#13#10'  wh'
  +'ile i< ln+1 do'#13#10'  begin'#13#10'    tempstr:=TreeLabel2[i];'#13#10'   '
  +' if (StartOfIdFound=true) and  (tempstr<>'')'') then'#13#10'      newstring'
  +':=newstring+tempstr;'#13#10'    if (StartOfIdFound=false) and (tempstr<>''('
  +''') then'#13#10'      FirstBit:=FirstBit+tempstr;'#13#10'    if tempstr=''('
  +''' then'#13#10'      StartOfIdFound:=true;'#13#10'    if tempstr='')'' then'
  +#13#10'      i:=ln;'#13#10'    i:=i+1;'#13#10'  end;'#13#10'  if StartOfIdFo'
  +'und=false then // no brackets'#13#10'  begin'#13#10'    newstring:=TreeLabe'
  +'lStr;'#13#10'  end;'#13#10'  newstring:=myStringReplace( newstring,''Conten'
  +'ts'','''',999,999);'#13#10'  result :=  trim(newstring);'#13#10'end;'#13#10
  +#13#10#13#10'Function ConstructEventsTreeString(CurrentItem:TDataNode;var e:'
  +'integer):String;'#13#10'// Recursive'#13#10'var ArrayString,dflt,tmp:String'
  +';'#13#10'    i,numchildren:integer;'#13#10'begin'#13#10'  dflt:=DfltEventCo'
  +'de;'#13#10'  if CurrentItem<>nil then'#13#10'  if CurrentItem.NameSpace='''
  +''' then'#13#10'  begin'#13#10#13#10'      numchildren:=length(CurrentItem.C'
  +'hildNodes);'#13#10#13#10'      if CurrentItem=MainFormProjectRoot then'#13
  +#10'        ArrayString:='',["Root(Events)"'';'#13#10#13#10'      for i:=0 t'
  +'o CurrentItem.myEventTypes.Count-1 do'#13#10'      begin'#13#10'        if '
  +'(CurrentItem.HasUserEventCode(CurrentItem.myEventTypes[i]))'#13#10'        '
  +'and (CurrentItem.GetEventCode(CurrentItem.myEventTypes[i])<>dflt) then'#13
  +#10'        begin'#13#10'           e:=e+1;'#13#10'           ArrayString:=A'
  +'rrayString+'','';'#13#10'           ArrayString:=ArrayString+''"''+CurrentI'
  +'tem.NodeType+''(''+CurrentItem.NodeName+'') ''+CurrentItem.myEventTypes[i]+'
  ,'''"'''#13#10'        end;'#13#10'      end;'#13#10#13#10' //     {$ifdef JS'
  +'cript} showmessage(CurrentItem.Nodename+'' has ''+inttostr(numchildren)+'' '
  +'children''); {$endif}'#13#10'      for i:=0 to numchildren-1 do'#13#10'    '
  +'  begin'#13#10' //       {$ifdef JScript} showmessage(''Child ''+inttostr(i'
  +')+'' ''+CurrentItem.ChildNodes[i].NodeName); {$endif}'#13#10'        ArrayS'
  +'tring:=ArrayString+ConstructEventsTreeString(CurrentItem.ChildNodes[i],e);'
  +#13#10'      end;'#13#10#13#10'      if CurrentItem=MainFormProjectRoot then'
  +#13#10'        ArrayString:=ArrayString+'']'';'#13#10'  end;'#13#10#13#10'  '
  +'result:= ArrayString;'#13#10'end;'#13#10#13#10'Function ConstructGPUCodeTre'
  +'eString(CurrentItem:TDataNode):String;'#13#10'// Recursive'#13#10'var Array'
  +'String,dflt,tmp:String;'#13#10'    i,numchildren:integer;'#13#10'begin'#13
  +#10'  dflt:=DfltEventCode;'#13#10'  if CurrentItem<>nil then'#13#10'  if Cur'
  +'rentItem.NameSpace='''' then'#13#10'  begin'#13#10#13#10'      numchildren:'
  +'=length(CurrentItem.ChildNodes);'#13#10#13#10'      if CurrentItem=MainForm'
  +'ProjectRoot then'#13#10'        ArrayString:='',["Root(GPUCode)"'';'#13#10
  +#13#10'      if (CurrentItem.NodeType=''TXGPUCanvas'')'#13#10'      and (Cur'
  +'rentItem.NodeClass=''UI'')'#13#10'      and (CurrentItem.IsDynamic=true) th'
  +'en'#13#10'      begin'#13#10'        ArrayString:=ArrayString+'','';'#13#10
  +'        ArrayString:=ArrayString+''"''+CurrentItem.NodeType+''(''+CurrentIt'
  +'em.NodeName+'') "'''#13#10'      end;'#13#10#13#10'      for i:=0 to numchi'
  +'ldren-1 do'#13#10'      begin'#13#10'        ArrayString:=ArrayString+Const'
  +'ructGPUCodeTreeString(CurrentItem.ChildNodes[i]);'#13#10'      end;'#13#10
  +#13#10'      if CurrentItem=MainFormProjectRoot then'#13#10'        ArrayStr'
  +'ing:=ArrayString+'']'';'#13#10'  end;'#13#10#13#10'  result:= ArrayString;'
  +#13#10'end;'#13#10#13#10'function GetNavigatorHint(InTree:TDataNode;SystemNo'
  +'deName:String):String;'#13#10'var'#13#10'SystemNode:TDataNode;'#13#10'found'
  +'attrib:TNodeAttribute;'#13#10'begin'#13#10'  result:='''';'#13#10'  SystemN'
  +'ode:=FindDataNodeById(InTree,SystemNodeName,'''',false);'#13#10'  //showmes'
  +'sage(''GetNavigatorHint ''+SystemNodeName);'#13#10'  if SystemNode<>nil the'
  +'n'#13#10'  begin'#13#10'    foundattrib:=SystemNode.GetAttribute(''Hint'',t'
  +'rue);'#13#10'    if foundattrib.AttribName=''Hint'' then'#13#10'      resul'
  +'t:=foundattrib.AttribValue;'#13#10'  end;'#13#10'  //showmessage(''GetNavig'
  +'atorHint result ''+result);'#13#10'end;'#13#10#13#10'procedure InitResource'
  +'sNodeTree;'#13#10'var'#13#10'  emptyAttribs:TNodeAttributesArray;'#13#10'  '
  +'RRoot:TDataNode;'#13#10'begin'#13#10'  setlength(emptyAttribs,0);'#13#10'  '
  +'RRoot:=FindDataNodeById(SystemNodeTree,''ResourceRoot'','''',false);'#13#10
  +'  if RRoot=nil then'#13#10'  begin'#13#10'    ResourcesNodeTree:=AddChildTo'
  +'DataNode(SystemNodeTree,''ResourceRoot'',ResourceDataRootName,'''','''',emp'
  +'tyAttribs,-1);'#13#10'    ResourcesNodeTree.AddAttribute(''ParentName'',''S'
  +'tring'', SystemRootName,true);'#13#10'    // This represents the set of lib'
  +'rary ''resource'' elements that are available in the resources tree'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'function RegisterResource(ClassName,ScreenO'
  +'bjectType,ScreenObjectName,ParentName:string; position:integer;'#13#10'    '
  +'                      Attribs:TNodeAttributesArray):TDataNode;  overload;'
  +#13#10' var'#13#10'      dfltAttribs:TDefaultAttributesArray;'#13#10'      m'
  +'yAttribs:TNodeAttributesArray;'#13#10'      myparent,myself:TDataNode;'#13
  +#10'      n,i:integer;'#13#10'      TempChildNodes:TChildNodesArray;'#13#10
  +'  begin'#13#10#13#10'    myparent:= FindDataNodeById(ResourcesNodeTree,Pare'
  +'ntName,'''',true);'#13#10'    if myparent<>nil'#13#10'    then'#13#10'    b'
  +'egin'#13#10'      dfltAttribs:=GetDefaultAttribs(ScreenObjectType);'#13#10
  +'      setlength(myAttribs,length(dfltAttribs));'#13#10'      for i:=0 to le'
  +'ngth(dfltAttribs)-1 do'#13#10'      begin'#13#10'        myAttribs[i].Attri'
  +'bName:=dfltAttribs[i].AttribName;'#13#10'        myAttribs[i].AttribType:=d'
  +'fltAttribs[i].AttribType;'#13#10'        myAttribs[i].AttribReadOnly:=dfltA'
  +'ttribs[i].AttribReadOnly;'#13#10'        myAttribs[i].AttribValue:=dfltAttr'
  +'ibs[i].AttribValue;'#13#10'      end;'#13#10#13#10'      myself:=AddChildTo'
  +'DataNode(myparent,ClassName,ScreenObjectName,ScreenObjectType,'''',myAttrib'
  +'s,position);'#13#10#13#10'      if myself<>nil then'#13#10'      begin'#13
  +#10'       // mySelf.AddAttribute(''Hint'',''String'','''',false);'#13#10'  '
  +'      mySelf.AddAttribute(''ParentName'', ParentName,''String'',true);'#13
  +#10#13#10'        // add or update the given attributes'#13#10'        for i'
  +':=0 to length(Attribs)-1 do'#13#10'        begin'#13#10'          mySelf.Se'
  +'tAttributeValue(Attribs[i].AttribName,Attribs[i].AttribValue,Attribs[i].Att'
  +'ribType);'#13#10'        end;'#13#10'        mySelf.SetAttributeValue(''Par'
  ,'entName'', ParentName,''String'');'#13#10#13#10'        // myself is a loca'
  +'l variable.  Re-assign it to the childnodes array.'#13#10'        TempChild'
  +'Nodes:= myparent.ChildNodes;'#13#10'        n:= Length(TempChildNodes);'#13
  +#10'        myparent.ChildNodes[n-1]:=myself;'#13#10'      end;'#13#10#13#10
  +'      result:=myself;'#13#10'    end;'#13#10'  end;'#13#10#13#10'procedure '
  +'BuildSkeletonResourceTree;'#13#10'var'#13#10'  emptyAttribs:TNodeAttributes'
  +'Array;'#13#10'begin'#13#10'  setlength(emptyAttribs,0);'#13#10#13#10'  Reso'
  +'urcesNodeTree:=AddChildToDataNode(SystemNodeTree,''ResourceRoot'',ResourceD'
  +'ataRootName,'''','''',emptyAttribs,-1);'#13#10'  ResourcesNodeTree.AddAttri'
  +'bute(''ParentName'',''String'', SystemRootName,true);'#13#10'  RegisterReso'
  +'urce(''RUI'','''',''Composites'',''ResourceRoot'',-1,emptyAttribs);'#13#10
  +'end;'#13#10#13#10'procedure SaveSystemData;'#13#10'var'#13#10'  TheData:Str'
  +'ing;'#13#10'  NavSelected,CodeSelected:TDataNode;'#13#10'begin'#13#10'  if '
  +'not StartingUp then'#13#10'  begin'#13#10'    NavSelected:=ObjectInspectorS'
  +'electedNavTreeNode;'#13#10'    CodeSelected:=ObjectInspectorSelectedNavTree'
  +'Node;'#13#10#13#10'    TheData:=BuildSystemString(false);'#13#10'    {$ifnd'
  +'ef JScript}'#13#10'    WriteToLocalStore(''XIDESavedData.txt'',TheData);'#13
  +#10'    {$else}'#13#10'    BrowserSaveData(TheData);'#13#10'    {$endif}'#13
  +#10#13#10'    ObjectInspectorSelectedNavTreeNode:=NavSelected;'#13#10'    Ob'
  +'jectInspectorSelectedNavTreeNode:=CodeSelected;'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'{$ifdef JScript}'#13#10'procedure BrowserSaveData(TheData:Strin'
  +'g);'#13#10'var'#13#10'  sysname:string;'#13#10'begin'#13#10'  sysname:=UIRo'
  +'otNode.GetAttribute(''SystemName'',false).AttribValue;'#13#10'  //showmessa'
  +'ge(''saving system ''+sysname);'#13#10'  asm'#13#10'   //alert(''saving loc'
  +'al XIDESavedData''+sysname);'#13#10'   pas.HTMLUtils.WriteToLocalStore("XID'
  +'ESavedData"+sysname,TheData);'#13#10'  end;'#13#10'end;'#13#10'{$endif}'#13
  +#10#13#10'procedure InitialiseXIDE;'#13#10'begin'#13#10#13#10'  InitResource'
  +'sNodeTree;'#13#10'  RebuildResourcesTree;'#13#10'  // Populate navigator an'
  +'d code tree from SystemNodeTree'#13#10'  RebuildNavigatorTree;'#13#10'  Reb'
  +'uildCodeTree;'#13#10#13#10'  {$ifdef JScript}'#13#10'  AboutXIDEForm.BuildT'
  +'ext;'#13#10'  PasteDialogUnit.SetupPasteDialogForm;'#13#10'  PasteDialogUni'
  +'t.PasteTarget.myNode.registerEvent(''MemoPaste'',@OIEventWrapper.OIPasteTar'
  +'get);'#13#10'  XGPUEditor.CreateGPUEditForm;'#13#10#13#10'  {$endif}'#13#10
  +'end;'#13#10#13#10#13#10'{$ifdef JScript}'#13#10'procedure InitialiseComposi'
  +'tes;'#13#10'var'#13#10'  composites:TDataNode;'#13#10'  i:integer;'#13#10' '
  +' itemname,src:String;'#13#10'begin'#13#10'  //showmessage(''InitialiseCompo'
  +'sites ''+CompositesString);'#13#10'  // The string CompositesString contain'
  +'s the XML list of the stored composites defined in the desktop system.'#13
  +#10'  // These are now being transferred into the browser environment.'#13#10
  +'  composites:=FindDataNodeById(SystemNodetree,''Composites'','''',false);'
  +#13#10'  if (composites<>nil)'#13#10'  and (CompositesString<>''</>'') then'
  +#13#10'    XMLToNodeTree(CompositesString,composites,false);'#13#10'  for i:'
  +'=0 to length(composites.ChildNodes)-1 do'#13#10'  begin'#13#10'    itemName'
  +':=composites.ChildNodes[i].NodeName;'#13#10'    // these names all have a _'
  +'xcmp suffix.'#13#10'//    itemName:=Copy(itemName,1,length(itemName)-5);'#13
  +#10'    composites.ChildNodes[i].NodeName:=itemName;'#13#10'    src:=composi'
  +'tes.ChildNodes[i].GetAttribute(''SourceString'',false).AttribValue;'#13#10
  +'    itemName:=Copy(itemName,1,length(itemName)-5);'#13#10'    WriteToLocalS'
  +'tore(itemName+''.xcmp'',src);'#13#10'  end;'#13#10'  RebuildResourcesTree;'
  +#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure ClearAllComposites;'#13#10
  +'var'#13#10'  composites:TDataNode;'#13#10'begin'#13#10'  composites:=FindDa'
  +'taNodeById(SystemNodetree,''Composites'','''',false);'#13#10'  DeleteNodeCh'
  +'ildren(composites);'#13#10'end;'#13#10#13#10'procedure DiscoverSavedFiles(s'
  +'uffix:String;var NamesList:TStringList);'#13#10'{$ifndef JScript}'#13#10'va'
  +'r'#13#10'  Info : TSearchRec;'#13#10'  Count : Longint;'#13#10'  bits:TStri'
  +'ngList;'#13#10'  tmp:String;'#13#10'  dt: TDateTime;'#13#10'  y, d, m, h, m'
  +'in, sec, msec: word;'#13#10'begin'#13#10#13#10'  bits:=TStringList.Create;'
  +#13#10'    Count:=0;'#13#10'    If FindFirst (''SavedSystems/*.''+suffix,faA'
  +'nyFile,Info)=0 then'#13#10'    begin'#13#10'      Repeat'#13#10'        Inc'
  +'(Count);'#13#10'        With Info do'#13#10'          begin'#13#10'        '
  +'    bits:=stringsplit(Name,''.'');'#13#10'            tmp:=bits[0];'#13#10
  +'            if suffix<>''xcmp'' then'#13#10'            begin'#13#10'      '
  +'        dt := Info.TimeStamp;'#13#10'              decodeDate( dt, y, m, d '
  +');'#13#10'              decodeTime( dt, h, min, sec, msec );'#13#10'       '
  ,'       tmp:=tmp+''      ''+format(''%.2d'',[d])+''/''+format(''%.2d'',[m])+'
  +'''/''+inttostr(y)+'#13#10'                       '' ''+format(''%.2d'',[h])'
  +'+'':''+format(''%.2d'',[min])+'':''+format(''%.2d'',[sec]);'#13#10'        '
  +'    end;'#13#10'            if bits[0]<>'''' then'#13#10'              Name'
  +'sList.Add(tmp);'#13#10'          end;'#13#10'      Until FindNext(info)<>0;'
  +#13#10'    end;'#13#10'    FindClose(Info);'#13#10'{$else}'#13#10'var'#13#10
  +'  namesArray:TStringArray;'#13#10'  n:integer;'#13#10'  bits:TStringList;'
  +#13#10'  nm,ts:String;'#13#10'begin'#13#10'  bits:=TStringList.Create;'#13#10
  +'  setlength(namesArray,0);'#13#10'  asm'#13#10'  namesArray = Object.keys(l'
  +'ocalStorage);'#13#10'  end;'#13#10'  for n:= 0 to length(namesArray)-1 do'
  +#13#10'  begin'#13#10'    bits:=stringsplit(namesArray[n],''.'');'#13#10'   '
  +' if (bits.count=2)'#13#10'    and (bits[1]=suffix) then'#13#10'    begin'#13
  +#10'      nm:=bits[0];'#13#10'      asm'#13#10'      if (suffix!=''xcmp'') {'
  +#13#10'      // find the timestamp...'#13#10'      var object = JSON.parse(l'
  +'ocalStorage.getItem(namesArray[n]));'#13#10'      ts = '''';'#13#10'      i'
  +'f ((object!=null)&&(suffix!=''xcmp'')) {'#13#10'        if ( object.hasOwnP'
  +'roperty(''timestamp'') ) {'#13#10'        var tsd = new Date(object.timesta'
  +'mp);'#13#10'        ts = ''      ''+tsd.toLocaleDateString()+'' ''+tsd.toLo'
  +'caleTimeString();'#13#10'        }'#13#10'      }'#13#10'      }'#13#10'   '
  +'   end;'#13#10'      NamesList.Add(nm+ts);'#13#10'    end;'#13#10'  end;'#13
  +#10'{$endif}'#13#10'  bits.Free;'#13#10'end;'#13#10#13#10'procedure Discover'
  +'SavedSystems(var NamesList:TStringList);'#13#10'begin'#13#10'  DiscoverSave'
  +'dFiles(''xide'',NamesList);'#13#10'end;'#13#10'procedure DiscoverSavedCompo'
  +'sites(var NamesList:TStringList);'#13#10'begin'#13#10'  DiscoverSavedFiles('
  +'''xcmp'',NamesList);'#13#10'end;'#13#10#13#10'procedure SetupAvailableResou'
  +'rces;'#13#10'var'#13#10'  AttrParams:TNodeAttributesArray;'#13#10'  NamesLi'
  +'st:TStringList;'#13#10'  i:integer;'#13#10'  str:String;'#13#10'begin'#13#10
  +#13#10'    ClearAttribs(AttrParams);'#13#10'    RegisterResource(''RUI'','''
  +''',''UIComponents'',ResourceDataRootName,-1,AttrParams);'#13#10'    // Set '
  +'up the tree of available components'#13#10#13#10'     ClearAttribs(AttrPara'
  +'ms);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13
  +#10'     RegisterResource(''RUI'','''',''Layout'',''UIComponents'',-1,AttrPa'
  +'rams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(At'
  +'trParams,''ContainerWidth'',''String'',''100'',false);'#13#10'     AddAttri'
  +'b(AttrParams,''ContainerHeight'',''String'',''100'',false);'#13#10'     Add'
  +'Attrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     AddAttrib(At'
  +'trParams,''Border'',''Boolean'',''True'',false);'#13#10'     RegisterResour'
  +'ce(''RUI'',''TXVBox'',''TXVBox'',''Layout'',-1,AttrParams);'#13#10#13#10'  '
  +'   ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''ContainerWi'
  +'dth'',''String'','''',false);'#13#10'     AddAttrib(AttrParams,''ContainerH'
  +'eight'',''String'',''30'',false);'#13#10'     AddAttrib(AttrParams,''Hint'''
  +',''String'','''',false);'#13#10'     AddAttrib(AttrParams,''Border'',''Bool'
  +'ean'',''True'',false);'#13#10'     RegisterResource(''RUI'',''TXHBox'',''TX'
  +'HBox'',''Layout'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams'
  +');'#13#10'     AddAttrib(AttrParams,''ContainerWidth'',''String'',''300'',f'
  +'alse);'#13#10'     AddAttrib(AttrParams,''ContainerHeight'',''String'',''20'
  +'0'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'',''Example '
  +'hint: This is a group box'',false);'#13#10'     RegisterResource(''RUI'','''
  +'TXGroupBox'',''TXGroupBox'',''Layout'',-1,AttrParams);'#13#10#13#10'     Cl'
  +'earAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''ContainerWidth'''
  +',''String'',''100'',false);'#13#10'     AddAttrib(AttrParams,''ContainerHei'
  +'ght'',''String'',''100'',false);'#13#10'     AddAttrib(AttrParams,''Hint'','
  +'''String'','''',false);'#13#10'     AddAttrib(AttrParams,''Border'',''Boole'
  +'an'',''True'',false);'#13#10'     AddAttrib(AttrParams,''ScrollType'',''Str'
  +'ing'',''Right'',false);'#13#10'     RegisterResource(''RUI'',''TXScrollBox'
  +''',''TXScrollBox'',''Layout'',-1,AttrParams);'#13#10#13#10'     ClearAttrib'
  +'s(AttrParams);'#13#10'     AddAttrib(AttrParams,''ContainerWidth'',''String'
  +''',''200'',false);'#13#10'     AddAttrib(AttrParams,''ContainerHeight'',''S'
  +'tring'',''200'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'
  +''','''',false);'#13#10'     RegisterResource(''RUI'',''TXTabControl'',''TXT'
  +'abControl'',''Layout'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrP'
  +'arams);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'
  +#13#10'     RegisterResource(''RUI'',''TXTabSheet'',''TXTabSheet'',''Layout'
  +''',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     '
  ,'AddAttrib(AttrParams,''Width'',''Integer'',''600'',false);'#13#10'     AddA'
  +'ttrib(AttrParams,''Height'',''Integer'',''500'',false);'#13#10'     AddAttr'
  +'ib(AttrParams,''Caption'',''String'',''My Title'',false);'#13#10'     AddAt'
  +'trib(AttrParams,''Top'',''Integer'',''50'',false);'#13#10'     AddAttrib(At'
  +'trParams,''Left'',''Integer'',''50'',false);'#13#10'     AddAttrib(AttrPara'
  +'ms,''Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'','''
  +'TXForm'',''TXForm'',''Layout'',-1,AttrParams);'#13#10#13#10'     ClearAttri'
  +'bs(AttrParams);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',f'
  +'alse);'#13#10'     RegisterResource(''RUI'','''',''Numeric'',''UIComponents'
  +''',-1,AttrParams);'#13#10#13#10'    ClearAttribs(AttrParams);'#13#10'    Cl'
  +'earAttribs(AttrParams);'#13#10'    AddAttrib(AttrParams,''MaxVal'',''Intege'
  +'r'',''100'',false);'#13#10'    AddAttrib(AttrParams,''LabelText'',''String'
  +''',''ProgressBar'',false);'#13#10'    AddAttrib(AttrParams,''ItemValue'','''
  +'Integer'',''5'',false);'#13#10'    AddAttrib(AttrParams,''BarWidth'',''Stri'
  +'ng'',''200'',false);'#13#10'    AddAttrib(AttrParams,''Hint'',''String'','''
  +''',false);'#13#10'    RegisterResource(''RUI'',''TXProgressBar'',''TXProgre'
  +'ssBar'',''Numeric'',-1,AttrParams);'#13#10#13#10'    ClearAttribs(AttrParam'
  +'s);'#13#10'    AddAttrib(AttrParams,''MinVal'',''Integer'',''0'',false);'#13
  +#10'    AddAttrib(AttrParams,''MaxVal'',''Integer'',''100'',false);'#13#10' '
  +'   AddAttrib(AttrParams,''LabelText'',''String'',''Number Slider'',false);'
  +#13#10'    AddAttrib(AttrParams,''ItemValue'',''Integer'',''5'',false);'#13
  +#10'    AddAttrib(AttrParams,''BarWidth'',''String'',''200'',false);'#13#10
  +'    AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'    Regist'
  +'erResource(''RUI'',''TXNumericSlider'',''TXNumericSlider'',''Numeric'',-1,A'
  +'ttrParams);'#13#10#13#10'    ClearAttribs(AttrParams);'#13#10'    AddAttrib'
  +'(AttrParams,''MinVal'',''Integer'',''22'',false);'#13#10'    AddAttrib(Attr'
  +'Params,''MaxVal'',''Integer'',''44'',false);'#13#10'    AddAttrib(AttrParam'
  +'s,''LabelText'',''String'',''NumberField'',false);'#13#10'    AddAttrib(Att'
  +'rParams,''ItemValue'',''String'',''22'',false);'#13#10'    AddAttrib(AttrPa'
  +'rams,''StepSize'',''Real'',''1'',false);'#13#10'    AddAttrib(AttrParams,'''
  +'Hint'',''String'','''',false);'#13#10'    RegisterResource(''RUI'',''TXNumb'
  +'erSpinner'',''TXNumberSpinner'',''Numeric'',-1,AttrParams);'#13#10#13#10#13
  +#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''Hint'''
  +',''String'','''',false);'#13#10'     RegisterResource(''RUI'','''',''Text'''
  +',''UIComponents'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams'
  +');'#13#10'     AddAttrib(AttrParams,''LabelCaption'',''String'',''caption'''
  +',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'
  +#13#10'     RegisterResource(''RUI'',''TXLabel'',''TXLabel'',''Text'',-1,Att'
  +'rParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib'
  +'(AttrParams,''LabelCaption'',''String'',''Hyperlink BBC News'',false);'#13
  +#10'     AddAttrib(AttrParams,''URL'',''String'',''http://www.bbc.co.uk/news'
  +''',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false)'
  +';'#13#10'     RegisterResource(''RUI'',''TXHyperlink'',''TXHyperlink'',''Te'
  +'xt'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'   '
  +'  AddAttrib(AttrParams,''ItemValue'',''String'','''',false);'#13#10'     Ad'
  +'dAttrib(AttrParams,''LabelText'',''String'',''EditBox'',false);'#13#10'    '
  +' AddAttrib(AttrParams,''ReadOnly'',''Boolean'',''False'',false);'#13#10'   '
  +'  AddAttrib(AttrParams,''ContainerWidth'','''','''',false);'#13#10'     Add'
  +'Attrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     RegisterReso'
  +'urce(''RUI'',''TXEditBox'',''TXEditBox'',''Text'',-1,AttrParams);'#13#10#13
  +#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''MemoHe'
  +'ight'',''String'',''200'',false);'#13#10'     AddAttrib(AttrParams,''MemoWi'
  +'dth'',''String'',''500'',false);'#13#10'     AddAttrib(AttrParams,''LabelTe'
  +'xt'',''String'',''Multi-Line EditBox'',false);'#13#10'     AddAttrib(AttrPa'
  +'rams,''ItemValue'',''String'','''',false);'#13#10'     AddAttrib(AttrParams'
  +',''ReadOnly'',''Boolean'',''False'',false);'#13#10'     AddAttrib(AttrParam'
  +'s,''Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'',''T'
  +'XMemo'',''TXMemo'',''Text'',-1,AttrParams);'#13#10#13#10'     ClearAttribs('
  +'AttrParams);'#13#10'     AddAttrib(AttrParams,''TableHeight'',''String'','''
  +'200'',false);'#13#10'     AddAttrib(AttrParams,''TableWidth'',''String'','''
  +'400'',false);'#13#10'     AddAttrib(AttrParams,''ColWidth'',''Integer'',''4'
  +'0'',false);'#13#10'     AddAttrib(AttrParams,''LabelText'',''String'','''','
  +'false);'#13#10'     AddAttrib(AttrParams,''TableData'',''TableString'',''[['
  +'"a","b","c"],["1","2","3"]]'',false);'#13#10'     AddAttrib(AttrParams,''Re'
  ,'adOnly'',''Boolean'',''False'',false);'#13#10'     AddAttrib(AttrParams,''H'
  +'int'',''String'','''',false);'#13#10'     RegisterResource(''RUI'',''TXTabl'
  +'e'',''TXTable'',''Text'',-1,AttrParams);'#13#10#13#10#13#10'     ClearAttri'
  +'bs(AttrParams);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',f'
  +'alse);'#13#10'     RegisterResource(''RUI'','''',''Selectors'',''UIComponen'
  +'ts'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'   '
  +'  AddAttrib(AttrParams,''ButtonWidth'',''String'','''',false);'#13#10'     '
  +'AddAttrib(AttrParams,''Caption'',''String'',''Press Me'',false);'#13#10'   '
  +'  AddAttrib(AttrParams,''Enabled'',''Boolean'',''True'',false);'#13#10'    '
  +' RegisterResource(''RUI'',''TXButton'',''TXButton'',''Selectors'',-1,AttrPa'
  +'rams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(At'
  +'trParams,''Checked'',''Boolean'',''false'',false);'#13#10'     AddAttrib(At'
  +'trParams,''LabelText'',''String'',''checkbox label'',false);'#13#10'     Ad'
  +'dAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     AddAttrib(A'
  +'ttrParams,''Enabled'',''Boolean'',''True'',false);'#13#10'     RegisterReso'
  +'urce(''RUI'',''TXCheckBox'',''TXCheckBox'',''Selectors'',-1,AttrParams);'#13
  +#10#13#10'     ClearAttribs(AttrParams);'#13#10'    // AddAttrib(AttrParams,'
  +'''OptionList'',''String'',ExampleOptionList,false);'#13#10'     AddAttrib(A'
  +'ttrParams,''ItemValue'',''String'','''',false);'#13#10'     AddAttrib(AttrP'
  +'arams,''Caption'',''String'',''radio buttons'',false);'#13#10'     AddAttri'
  +'b(AttrParams,''Hint'',''String'','''',false);'#13#10'     AddAttrib(AttrPar'
  +'ams,''ReadOnly'',''Boolean'',''False'',false);'#13#10'     RegisterResource'
  +'(''RUI'',''TXRadioBtns'',''TXRadioBtns'',''Selectors'',-1,AttrParams);'#13
  +#10#13#10'     ClearAttribs(AttrParams);'#13#10'  // //  AddAttrib(AttrParam'
  +'s,''OptionList'',''String'',ExampleOptionList,false);'#13#10'     AddAttrib'
  +'(AttrParams,''ItemIndex'',''Integer'',''0'',false);'#13#10'     AddAttrib(A'
  +'ttrParams,''LabelText'',''String'',''ComboBox'',false);'#13#10'     AddAttr'
  +'ib(AttrParams,''Hint'',''String'','''',false);'#13#10'     AddAttrib(AttrPa'
  +'rams,''ReadOnly'',''Boolean'',''False'',false);'#13#10'     RegisterResourc'
  +'e(''RUI'',''TXComboBox'',''TXComboBox'',''Selectors'',-1,AttrParams);'#13#10
  +#13#10'     ClearAttribs(AttrParams);'#13#10'     // AddAttrib(AttrParams,'''
  +'TreeData'',''TreeString'',ExampleNodeTree,false);'#13#10'     AddAttrib(Att'
  +'rParams,''ItemText'',''String'',''Tree'',false);'#13#10'     AddAttrib(Attr'
  +'Params,''OpenToLevel'',''Integer'',''1'',false);'#13#10'     AddAttrib(Attr'
  +'Params,''TreeHeight'',''String'',''200'',false);'#13#10'     AddAttrib(Attr'
  +'Params,''TreeWidth'',''String'',''350'',false);'#13#10'     AddAttrib(AttrP'
  +'arams,''Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'''
  +',''TXTree'',''TXTree'',''Selectors'',-1,AttrParams);'#13#10#13#10'     Clea'
  +'rAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''LabelText'',''Stri'
  +'ng'',''Date Picker'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''St'
  +'ring'','''',false);'#13#10'     RegisterResource(''RUI'',''TXDatePicker'','
  +'''TXDatePicker'',''Selectors'',-1,AttrParams);'#13#10#13#10'     ClearAttri'
  +'bs(AttrParams);'#13#10'     AddAttrib(AttrParams,''LabelText'',''String'','
  +'''Colour Picker'',false);'#13#10'     AddAttrib(AttrParams,''ItemValue'','''
  +'String'',''#FF8040'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''St'
  +'ring'','''',false);'#13#10'     RegisterResource(''RUI'',''TXColorPicker'','
  +'''TXColorPicker'',''Selectors'',-1,AttrParams);'#13#10#13#10'     ClearAttr'
  +'ibs(AttrParams);'#13#10'     RegisterResource(''RUI'',''TXMainMenu'',''TXMa'
  +'inMenu'',''Selectors'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrP'
  +'arams);'#13#10'     AddAttrib(AttrParams,''Caption'',''String'',''Menu Item'
  +''',false);'#13#10'     RegisterResource(''RUI'',''TXMenuItem'',''TXMenuItem'
  +''',''Selectors'',-1,AttrParams);'#13#10#13#10#13#10'  //   ClearAttribs(Att'
  +'rParams);'#13#10'  //   AddAttrib(AttrParams,''LabelText'',''String'',''Fil'
  +'e Picker'',false);'#13#10'  //   AddAttrib(AttrParams,''ItemText'',''String'
  +''',''*.pas'',false);'#13#10'  //   AddAttrib(AttrParams,''ItemValue'',''Str'
  +'ing'','''',false);'#13#10'  //   AddAttrib(AttrParams,''Hint'',''String'','
  +''''',false);'#13#10'  //   RegisterResource(''RUI'',''FilePicker'',''FilePi'
  +'cker'',''Selectors'',-1,AttrParams);'#13#10#13#10#13#10'     ClearAttribs(A'
  +'ttrParams);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false'
  +');'#13#10'     RegisterResource(''RUI'','''',''Media'',''UIComponents'',-1,'
  +'AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAtt'
  +'rib(AttrParams,''LabelText'',''String'',''Image'',false);'#13#10'     AddAt'
  +'trib(AttrParams,''Source'',''String'','''',false);       //loading.gif?'#13
  +#10'     AddAttrib(AttrParams,''ImageHeight'',''String'',''200px'',false);'
  ,#13#10'     AddAttrib(AttrParams,''ImageWidth'',''String'',''250px'',false);'
  +#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'   '
  +'  RegisterResource(''RUI'',''TXImage'',''TXImage'',''Media'',-1,AttrParams)'
  +';'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrPar'
  +'ams,''LabelText'',''String'',''Image'',false);'#13#10'     AddAttrib(AttrPa'
  +'rams,''ImageHeight'',''String'',''500px'',false);'#13#10'     AddAttrib(Att'
  +'rParams,''ImageWidth'',''String'',''500px'',false);'#13#10'     AddAttrib(A'
  +'ttrParams,''Hint'',''String'','''',false);'#13#10'     RegisterResource(''R'
  +'UI'',''TXBitMap'',''TXBitMap'',''Media'',-1,AttrParams);'#13#10#13#10'     '
  +'// missing.....Audio'#13#10'     // missing.....Video'#13#10'     // missin'
  +'g.....Chat'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttri'
  +'b(AttrParams,''Hint'',''String'','''',false);'#13#10'     RegisterResource('
  +'''RUI'','''',''IFrame'',''UIComponents'',-1,AttrParams);'#13#10#13#10'     '
  +'ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''HTMLSource'','
  +'''String'','''',false);'#13#10'     AddAttrib(AttrParams,''FrameHeight'','''
  +'Integer'',''300'',false);'#13#10'     AddAttrib(AttrParams,''FrameWidth'','
  +'''Integer'',''300'',false);'#13#10'     RegisterResource(''RUI'',''TXIFrame'
  +''',''TXIFrame'',''IFrame'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(A'
  +'ttrParams);'#13#10'     AddAttrib(AttrParams,''FrameHeight'',''Integer'','''
  +'300'',false);'#13#10'     AddAttrib(AttrParams,''FrameWidth'',''Integer'','
  +'''300'',false);'#13#10'     AddAttrib(AttrParams,''AnimationCode'',''String'
  +''','''',false);'#13#10'     AddAttrib(AttrParams,''Active'',''Boolean'',''F'
  +'alse'',false);'#13#10'     AddAttrib(AttrParams,''Animated'',''Boolean'','''
  +'False'',false);'#13#10'     AddAttrib(AttrParams,''MaxIterations'',''Intege'
  +'r'',''512'',false);'#13#10'     AddAttrib(AttrParams,''StartIteration'',''I'
  +'nteger'',''1'',false);'#13#10'     AddAttrib(AttrParams,''NumFrames'',''Int'
  +'eger'',''100'',false);'#13#10'     AddAttrib(AttrParams,''MaxFramesPerSec'''
  +',''Integer'',''15'',false);'#13#10'     RegisterResource(''RUI'',''TXGPUCan'
  +'vas'',''TXGPUCanvas'',''IFrame'',-1,AttrParams);'#13#10#13#10'     ClearAtt'
  +'ribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''HTMLSource'',''String'
  +''','''',false);'#13#10'     AddAttrib(AttrParams,''FrameHeight'',''Integer'
  +''',''300'',false);'#13#10'     AddAttrib(AttrParams,''FrameWidth'',''Intege'
  +'r'',''300'',false);'#13#10'     AddAttrib(AttrParams,''IsEmbedded'',''Boole'
  +'an'',''True'',false);'#13#10'     AddAttrib(AttrParams,''SourceText'',''Str'
  +'ing'',''...text...'',false);'#13#10'     AddAttrib(AttrParams,''Showing'','
  +'''Boolean'',''False'',false);'#13#10'     RegisterResource(''RUI'',''TXHTML'
  +'Editor'',''TXHTMLEditor'',''IFrame'',-1,AttrParams);'#13#10#13#10'     Clea'
  +'rAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''FrameHeight'',''In'
  +'teger'',''300'',false);'#13#10'     AddAttrib(AttrParams,''FrameWidth'',''I'
  +'nteger'',''300'',false);'#13#10'     AddAttrib(AttrParams,''SourceText'','''
  +'String'',''...text...'',false);'#13#10'     RegisterResource(''RUI'',''TXHT'
  +'MLText'',''TXHTMLText'',''IFrame'',-1,AttrParams);'#13#10#13#10#13#10'     '
  +'ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''FrameHeight'','
  +'''Integer'',''300'',false);'#13#10'     AddAttrib(AttrParams,''FrameWidth'''
  +',''Integer'',''300'',false);'#13#10'     RegisterResource(''RUI'',''TXSVGCo'
  +'ntainer'',''TXSVGContainer'',''IFrame'',-1,AttrParams);'#13#10#13#10#13#10
  +'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''Hint'','''
  +'String'','''',false);'#13#10'     RegisterResource(''RUI'','''',''SVGCompon'
  +'ents'',''IFrame'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams'
  +');'#13#10'     AddAttrib(AttrParams,''XPos'',''Integer'',''50'',false);    '
  +'    //y'#13#10'     AddAttrib(AttrParams,''YPos'',''Integer'',''50'',false)'
  +';         //x'#13#10'     AddAttrib(AttrParams,''TextString'',''String'','''
  +'SVG Text Example'',false);'#13#10'     AddAttrib(AttrParams,''Height'',''In'
  +'teger'',''20'',false);'#13#10'     AddAttrib(AttrParams,''FontFamily'',''St'
  +'ring'','' impact, georgia, times, serif;'',false);'#13#10'     AddAttrib(At'
  +'trParams,''FontWeight'',''String'','' normal'',false);'#13#10'     AddAttri'
  +'b(AttrParams,''FontStyle'',''String'','' normal'',false);'#13#10'     AddAt'
  +'trib(AttrParams,''Rotate'',''Integer'',''0'',false) ;'#13#10'     RegisterR'
  +'esource(''RSVG'',''TXSVGText'',''TXSVGText'',''SVGComponents'',-1,AttrParam'
  +'s);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrP'
  +'arams,''XPos'',''Integer'',''0'',false);        //y'#13#10'     AddAttrib(A'
  +'ttrParams,''YPos'',''Integer'',''110'',false);         //x'#13#10'     AddA'
  +'ttrib(AttrParams,''Width'',''Integer'',''30'',false);'#13#10'     AddAttrib'
  +'(AttrParams,''Height'',''Integer'',''30'',false);'#13#10'     AddAttrib(Att'
  ,'rParams,''StrokeColor'',''Color'',''#000000'',false);          // stroke'#13
  +#10'     //AddAttrib(AttrParams,''FillColor'',''Color'',''none'',false);    '
  +'        //fill'#13#10'     AddAttrib(AttrParams,''FillColor'',''Color'',''#'
  +'FFFFFF'',false);            //fill'#13#10'     AddAttrib(AttrParams,''Strok'
  +'eWidth'',''Integer'',''5'',false);'#13#10'     AddAttrib(AttrParams,''Rotat'
  +'e'',''Integer'',''0'',false);'#13#10'     RegisterResource(''RSVG'',''TXSVG'
  +'Rect'',''TXSVGRect'',''SVGComponents'',-1,AttrParams);'#13#10#13#10'     Cl'
  +'earAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''XPos'',''Integer'
  +''',''60'',false);        //y'#13#10'     AddAttrib(AttrParams,''YPos'',''In'
  +'teger'',''10'',false);         //x'#13#10'     AddAttrib(AttrParams,''Rx'','
  +'''Integer'',''10'',false);'#13#10'     AddAttrib(AttrParams,''Ry'',''Intege'
  +'r'',''10'',false);'#13#10'     AddAttrib(AttrParams,''Width'',''Integer'','
  +'''30'',false);'#13#10'     AddAttrib(AttrParams,''Height'',''Integer'',''30'
  +''',false);'#13#10'     AddAttrib(AttrParams,''StrokeColor'',''Color'',''#00'
  +'0000'',false);          // stroke'#13#10'     //AddAttrib(AttrParams,''Fill'
  +'Color'',''Color'',''none'',false);            //fill'#13#10'     AddAttrib('
  +'AttrParams,''FillColor'',''Color'',''#FFFFFF'',false);            //fill'#13
  +#10'     AddAttrib(AttrParams,''StrokeWidth'',''Integer'',''5'',false);'#13
  +#10'     AddAttrib(AttrParams,''Rotate'',''Integer'',''0'',false);'#13#10'  '
  +'   RegisterResource(''RSVG'',''TXSVGRoundedRect'',''TXSVGRoundedRect'',''SV'
  +'GComponents'',-1,AttrParams);'#13#10#13#10'      ClearAttribs(AttrParams);'
  +#13#10'      AddAttrib(AttrParams,''XPos'',''Integer'',''25'',false);       '
  +' //cy'#13#10'      AddAttrib(AttrParams,''YPos'',''Integer'',''75'',false);'
  +'         //cy'#13#10'      AddAttrib(AttrParams,''Radius'',''Integer'',''20'
  +''',false);       //r'#13#10'      AddAttrib(AttrParams,''StrokeColor'',''Co'
  +'lor'',''#00FF00'',false);          // stroke'#13#10'      AddAttrib(AttrPar'
  +'ams,''FillColor'',''Color'',''#FFFF00'',false);            //fill'#13#10'  '
  +'    AddAttrib(AttrParams,''Strokewidth'',''Integer'',''5'',false);'#13#10' '
  +'     AddAttrib(AttrParams,''Rotate'',''Integer'',''0'',false);'#13#10'     '
  +' RegisterResource(''RSVG'',''TXSVGCircle'',''TXSVGCircle'',''SVGComponents'
  +''',-1,AttrParams);'#13#10#13#10'      ClearAttribs(AttrParams);'#13#10'    '
  +'  AddAttrib(AttrParams,''XPos'',''Integer'',''100'',false);        //cy'#13
  +#10'      AddAttrib(AttrParams,''YPos'',''Integer'',''75'',false);         /'
  +'/cy'#13#10'      AddAttrib(AttrParams,''Rx'',''Integer'',''20'',false);    '
  +'   //rx'#13#10'      AddAttrib(AttrParams,''Ry'',''Integer'',''50'',false);'
  +'       //ry'#13#10'      AddAttrib(AttrParams,''StrokeColor'',''Color'',''#'
  +'000000'',false);          // stroke'#13#10'      //AddAttrib(AttrParams,''F'
  +'illColor'',''Color'',''none'',false);            //fill'#13#10'      AddAtt'
  +'rib(AttrParams,''FillColor'',''Color'',''#FFFFFF'',false);            //fil'
  +'l'#13#10'      AddAttrib(AttrParams,''StrokeWidth'',''Integer'',''5'',false'
  +');'#13#10'      AddAttrib(AttrParams,''Rotate'',''Integer'',''0'',false);'
  +#13#10'      RegisterResource(''RSVG'',''TXSVGEllipse'',''TXSVGEllipse'',''S'
  +'VGComponents'',-1,AttrParams);'#13#10#13#10'      ClearAttribs(AttrParams);'
  +#13#10'      AddAttrib(AttrParams,''X1'',''Integer'',''10'',false);        /'
  +'/x1'#13#10'      AddAttrib(AttrParams,''Y1'',''Integer'',''110'',false);   '
  +'      //y1'#13#10'      AddAttrib(AttrParams,''X2'',''Integer'',''50'',fals'
  +'e);       //x2'#13#10'      AddAttrib(AttrParams,''Y2'',''Integer'',''150'''
  +',false);       //y2'#13#10'      AddAttrib(AttrParams,''StrokeColor'',''Col'
  +'or'',''#FF9900'',false);          // stroke'#13#10'      AddAttrib(AttrPara'
  +'ms,''StrokeWidth'',''Integer'',''5'',false);'#13#10'      AddAttrib(AttrPar'
  +'ams,''Rotate'',''Integer'',''0'',false);'#13#10'      RegisterResource(''RS'
  +'VG'',''TXSVGLine'',''TXSVGLine'',''SVGComponents'',-1,AttrParams);'#13#10#13
  +#10'      ClearAttribs(AttrParams);'#13#10'      AddAttrib(AttrParams,''XCoo'
  +'rds'',''IntegerVector'',''60 , 65 , 70 , 75  , 80 , 85 , 90,  95 , 100 '',f'
  +'alse);'#13#10'      AddAttrib(AttrParams,''YCoords'',''IntegerVector'',''11'
  +'0, 120, 115 ,130 ,125 ,140, 135 ,150 , 145'',false);'#13#10'      AddAttrib'
  +'(AttrParams,''StrokeColor'',''Color'',''#FF9900'',false);          // strok'
  +'e'#13#10'      //AddAttrib(AttrParams,''FillColor'',''Color'',''none'',fals'
  +'e);            //fill'#13#10'      AddAttrib(AttrParams,''FillColor'',''Col'
  +'or'',''#FFFFFF'',false);            //fill'#13#10'      AddAttrib(AttrParam'
  +'s,''StrokeWidth'',''Integer'',''5'',false);'#13#10'      AddAttrib(AttrPara'
  +'ms,''Rotate'',''Integer'',''0'',false);'#13#10'      RegisterResource(''RSV'
  +'G'',''TXSVGPolyLine'',''TXSVGPolyLine'',''SVGComponents'',-1,AttrParams);'
  +#13#10#13#10'      ClearAttribs(AttrParams);'#13#10'      AddAttrib(AttrPara'
  ,'ms,''XCoords'',''IntegerVector'',''50 ,  55 ,   70 , 60 ,  65 ,  50 ,  35  '
  +', 40 ,  30 ,  45 '',false);'#13#10'      AddAttrib(AttrParams,''YCoords'','
  +'''IntegerVector'',''160 , 180 , 180 , 190 , 205 , 195 , 205 , 190 , 180,  1'
  +'80'',false);'#13#10'      AddAttrib(AttrParams,''StrokeColor'',''Color'','''
  +'#FF9900'',false);          // stroke'#13#10'      AddAttrib(AttrParams,''Fi'
  +'llColor'',''Color'',''#AAAAAA'',false);            //fill'#13#10'      AddA'
  +'ttrib(AttrParams,''StrokeWidth'',''Integer'',''5'',false);'#13#10'      Add'
  +'Attrib(AttrParams,''Rotate'',''Integer'',''0'',false);'#13#10'      Registe'
  +'rResource(''RSVG'',''TXSVGPolyGon'',''TXSVGPolyGon'',''SVGComponents'',-1,A'
  +'ttrParams);'#13#10#13#10#13#10'      ClearAttribs(AttrParams);'#13#10'     '
  +' AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'      Registe'
  +'rResource(''RUI'','''',''Composites'',''UIComponents'',-1,AttrParams);'#13
  +#10#13#10'      // Set up the list of previously saved composite items'#13#10
  +'      NamesList:=TStringList.Create;'#13#10'      DiscoverSavedComposites(N'
  +'amesList);'#13#10'      for i:=0 to NamesList.count-1 do'#13#10'      begin'
  +#13#10'        ClearAttribs(AttrParams);'#13#10'        AddAttrib(AttrParams'
  +',''CompositeType'',''String'',NamesList[i],true);'#13#10'        {$ifndef J'
  +'Script}'#13#10'        str:=ReadFromLocalStore(''SavedSystems/''+NamesList['
  +'i]+''.xcmp'');'#13#10'        {$else}'#13#10'        str:=ReadFromLocalStor'
  +'e(NamesList[i]+''.xcmp'');'#13#10'        {$endif}'#13#10'        AddAttrib'
  +'(AttrParams,''SourceString'',''String'',str,true);'#13#10'        AddAttrib'
  +'(AttrParams,''ContainerWidth'',''String'','''',false);'#13#10'        AddAt'
  +'trib(AttrParams,''ContainerHeight'',''String'','''',false);'#13#10'        '
  +'AddAttrib(AttrParams,''InheritColor'',''Boolean'',''True'',false);'#13#10' '
  +'       RegisterResource(''RUI'',''TXComposite'',NamesList[i]+''_xcmp'',''Co'
  +'mposites'',-1,AttrParams);   //suffix to protect nodename-uniqueness'#13#10
  +'      end;'#13#10#13#10'       ClearAttribs(AttrParams);'#13#10'       AddA'
  +'ttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'       RegisterRes'
  +'ource(''RNV'','''',''Non-Visual Components'',ResourceDataRootName,-1,AttrPa'
  +'rams);'#13#10#13#10'       ClearAttribs(AttrParams);'#13#10'       AddAttri'
  +'b(AttrParams,''KeyName'',''String'','''',false);'#13#10'       AddAttrib(At'
  +'trParams,''DataValue'',''String'','''',false);'#13#10'       RegisterResour'
  +'ce(''RNV'',''TXStore'',''TXStore'',''Non-Visual Components'',-1,AttrParams)'
  +';'#13#10#13#10'       ClearAttribs(AttrParams);'#13#10'       RegisterResou'
  +'rce(''RNV'',''TXTrapEvents'',''TXTrapEvents'',''Non-Visual Components'',-1,'
  +'AttrParams);'#13#10#13#10'       ClearAttribs(AttrParams);'#13#10'       Ad'
  +'dAttrib(AttrParams,''Active'',''Boolean'',''False'',false);'#13#10'       R'
  +'egisterResource(''RNV'',''TXThreads'',''TXThreads'',''Non-Visual Components'
  +''',-1,AttrParams);'#13#10#13#10'       ClearAttribs(AttrParams);'#13#10'   '
  +'    RegisterResource(''RNV'',''TXCompositeIntf'',''TXCompositeIntf'',''Non-'
  +'Visual Components'',-1,AttrParams);'#13#10#13#10'//       ClearAttribs(Attr'
  +'Params);'#13#10'//       RegisterResource(''RNV'','''',''Saved Systems'',Re'
  +'sourceDataRootName,-1,AttrParams);'#13#10'//'#13#10'//       // Set up the '
  +'list of previously saved systems'#13#10'//       NamesList.Clear;'#13#10'//'
  +'       DiscoverSavedSystems(NamesList);'#13#10'//       ClearAttribs(AttrPa'
  +'rams);'#13#10'//       for i:=0 to NamesList.count-1 do'#13#10'//       beg'
  +'in'#13#10'//         if NamesList[i]<>'''' then'#13#10'//           Registe'
  +'rResource(''RSS'',''System'',NamesList[i]+''_xide'',''Saved Systems'',-1,At'
  +'trParams);   //suffix to protect nodename-uniqueness'#13#10'//       end;'
  +#13#10#13#10'       NamesList.Free;'#13#10#13#10'end;'#13#10#13#10#13#10'//f'
  +'unction MyInputBox(PromptString,DefaultString:string):string;'#13#10'functi'
  +'on XIDEPrompt(PromptString,DefaultString:string):string;'#13#10'var'#13#10
  +'  str:string;'#13#10'begin'#13#10'  if MacroEventList.Replaying = false the'
  +'n'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'    str:=DefaultString'
  +';'#13#10'    if not InputQuery(''XIDE'', PromptString, str) then'#13#10'   '
  +'   str:=''''   //user cancelled the dialog'#13#10'    else'#13#10'    begin'
  +#13#10'      //Following event handler being called (while probably in desig'
  +'n mode) due to the requirement for'#13#10'      //event logging during desi'
  +'gn.'#13#10'      // Not available for capture by user-written code.'#13#10
  +'      HandleEvent(nil,''UserInput'',''UIRootNode'','''',str);'#13#10'    en'
  +'d;'#13#10'    {$else}'#13#10'    asm'#13#10'     var res = prompt(PromptStr'
  +'ing, DefaultString);'#13#10'     if (res==null) {str=''''}'#13#10'      els'
  +'e {'#13#10'        str=res;'#13#10'        //Following event handler being '
  +'called (while probably in design mode) due to the requirement for'#13#10'  '
  ,'      //event logging during design.'#13#10'        // Not available for ca'
  +'pture by user-written code.'#13#10'        pas.Events.handleEvent(null,''Us'
  +'erInput'',''UIRootNode'','''',str);'#13#10'      }'#13#10'    end;'#13#10' '
  +'   {$endif}'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    str:=Repla'
  +'yUserInput(PromptString);    //!!!! (browser) this will throw Timeouts, so '
  +'any following stuff may occur out of sequence'#13#10'  end;'#13#10'  result'
  +':=str;'#13#10'end;'#13#10#13#10'function getname(PromptString:string):strin'
  +'g;'#13#10'var resultstring,DefaultString:string;'#13#10'  ok:Boolean;'#13#10
  +'begin'#13#10'   DefaultString := ''Created_''+DateTimeToStr(Now);'#13#10'  '
  +' DefaultString :=myStringReplace( DefaultString,'' '',''_'',999,999);'#13#10
  +'   DefaultString :=myStringReplace( DefaultString,'':'',''_'',999,999);'#13
  +#10'   DefaultString :=myStringReplace( DefaultString,''-'',''_'',999,999);'
  +#13#10'   DefaultString :=myStringReplace( DefaultString,''/'',''_'',999,999'
  +');'#13#10#13#10'   ok:=false;'#13#10'   while not ok do'#13#10'   begin'#13
  +#10'     resultstring:= trim(XIDEPrompt(PromptString,DefaultString));'#13#10
  +'     DefaultString:=resultstring;'#13#10'     if FoundString(resultstring,'
  +'''.'')>0 then'#13#10'       showmessage(''Enter the name without dot charac'
  +'ters ''''.'''''')'#13#10'     else if FoundString(resultstring,'' '')>0 the'
  +'n'#13#10'       showmessage(''Enter the name without space characters'')'#13
  +#10'     else if not SysUtils.IsValidIdent(resultstring) then'#13#10'       '
  +'showmessage(''Name is not valid - Use Alphanumeric characters plus ''''_'''
  +'''; first char non-numeric.'')'#13#10'     else'#13#10'       ok:=true;'#13
  +#10'   end;'#13#10#13#10#13#10'   result:=resultstring;'#13#10'end;'#13#10#13
  +#10'function ComponentNameIsUnique(ScreenObjectName,NameSpace:string):Boolea'
  +'n;'#13#10'var'#13#10'  myresult:Boolean;'#13#10'  founditem:TDataNode;'#13
  +#10'begin'#13#10'  myresult:=true;'#13#10'  founditem:=FindDataNodeById(Syst'
  +'emNodeTree,ScreenObjectName,NameSpace,false);'#13#10'  if (founditem<>nil)'
  +#13#10'//  and ((founditem.ScreenObject<>nil) or (founditem.NodeClass=''SVG'
  +'''))'#13#10'//  and (founditem.NodeName=ScreenObjectName)'#13#10'  then'#13
  +#10'  begin'#13#10'    ShowMessage(''Error. Name >''+ScreenObjectName+''< is'
  +' not unique when creating a new system component'' );'#13#10'    myresult:='
  +'false;'#13#10'  end;'#13#10'  result:=myresult;'#13#10'end;'#13#10#13#10'{$'
  +'ifdef JScript}'#13#10#13#10'procedure ShowXFormForDesign(XFormName:String);'
  +#13#10'var'#13#10'  XFormNode:TDataNode;'#13#10'begin'#13#10'  //showmessage'
  +'(''ShowXFormForDesign ''+XFormName);'#13#10'  // Swap the centre section of'
  +' the screen for the requested XForm, so it can be displayed while'#13#10'  '
  +'// still accessing the nav tree and resources tree'#13#10'  asm'#13#10'    '
  +'var ob = document.getElementById(XFormName);'#13#10'    var UIScreen = docu'
  +'ment.getElementById(''UIRoot'');'#13#10'    var UIContent = document.getEle'
  +'mentById(''UIRootContents'');'#13#10'    UIContent.style.display = "none";'
  +#13#10'    UIScreen.appendChild(ob);'#13#10'    //pas.XForm.ShowXForm(XFormN'
  +'ame);'#13#10'    ob.style.position=''relative'';'#13#10'  end;'#13#10'  XFo'
  +'rmNode:=FindDataNodeById(SystemNodeTree,XFormName,'''',true);'#13#10'  TXFo'
  +'rm(XFormNode.ScreenObject).Showing:=''Modal'';'#13#10'end;'#13#10#13#10'pro'
  +'cedure CloseXFormForDesign(XFormName:String);'#13#10'var'#13#10'  UIRootNod'
  +'eName:string;'#13#10'begin'#13#10'  //showmessage(''CloseXFormForDesign ''+'
  +'XFormName);'#13#10'  UIRootNodeName:=UIRootNode.Nodename;'#13#10'  asm'#13
  +#10'    //alert(''UIRootNodeName=''+UIRootNodeName);'#13#10'    var ob = doc'
  +'ument.getElementById(XFormName);'#13#10'    if (ob!=null) {'#13#10'      ob'
  +'.style.position=''fixed'';'#13#10'      ob.style.display = "none";'#13#10' '
  +'     var root =  document.getElementById(UIRootNodeName);'#13#10'      root'
  +'.appendChild(ob);'#13#10'      }'#13#10'    var UIContent = document.getEle'
  +'mentById(''UIRootContents'');'#13#10'    UIContent.style.display = "flex";'
  +#13#10'  end;'#13#10'  //if OpenXForms.IndexOf(XFormName)>-1 then'#13#10'  D'
  +'eleteOpenXForm(XFormName,'''');'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13
  +#10'procedure DeHighlightObject(OldNode:TDataNode);'#13#10'// de-highlight t'
  +'he previous selected component.'#13#10'begin'#13#10'  {$ifndef JScript}'#13
  +#10'  if OldNode<>nil then'#13#10'    begin'#13#10'      SetBooleanProperty('
  +'TComponent(OldNode.ScreenObject),''IsSelected'',false);'#13#10'    end;'#13
  +#10'  {$else}'#13#10'  asm'#13#10'    //alert(''LastHTMLUserInterfaceItemSel'
  +'ected=''+pas.XObjectInsp.LastHTMLUserInterfaceItemSelected+'' hadBorder=''+'
  +'pas.XObjectInsp.LastHTMLUserInterfaceItemHadBorder);'#13#10'    pas.HTMLUti'
  +'ls.UnHighlight(pas.XObjectInsp.LastHTMLUserInterfaceItemSelected,pas.XObjec'
  +'tInsp.LastHTMLUserInterfaceItemHadBorder);'#13#10'  end;'#13#10'  {$endif}'
  ,#13#10#13#10'end;'#13#10#13#10'procedure HighlightNavigatorObject(CurrentNod'
  +'e:TDataNode);'#13#10'var'#13#10'  mf:TForm;'#13#10'  tmp,cfn,mfn, Nodeid:st'
  +'ring;'#13#10'  Border:Boolean;'#13#10'  i:integer;'#13#10'  ParentNode:TDat'
  +'aNode;'#13#10'  TabPage:TXTabSheet;'#13#10'begin'#13#10'  tmp:=CurrentNode.'
  +'GetAttribute(''Border'',true).AttribValue;'#13#10'  if tmp='''' then'#13#10
  +'    Border:=false'#13#10'  else'#13#10'    Border:=myStrToBool(tmp);'#13#10
  +#13#10'  // if the component is in a XForm, show the form'#13#10'  {$ifndef '
  +'JScript}'#13#10'  for i:=length(OpenXForms)-1 downto 0 do'#13#10'  begin'#13
  +#10'    if (OpenXForms[i].NodeName<>MainForm.Name) or (OpenXForms[i].NameSpa'
  +'ce<>'''') then'#13#10'      CloseXForm(OpenXForms[i].NodeName,OpenXForms[i]'
  +'.NameSpace);'#13#10'  end;'#13#10'  if CurrentNode.MyForm<>nil  then'#13#10
  +'    ShowXForm(CurrentNode.MyForm.Name,false,CurrentNode.NameSpace);'#13#10
  +'  {$else}'#13#10'  for i:=length(OpenXForms)-1 downto 0 do'#13#10'  begin'
  +#13#10'    if OpenXForms[i].NameSpace='''' then'#13#10'      CloseXFormForDe'
  +'sign(OpenXForms[i].NodeName);'#13#10'  end;'#13#10'  {$endif}'#13#10#13#10
  +#13#10'  {$ifndef JScript}'#13#10'  // highlight component on screen'#13#10
  +'  if CurrentNode.NodeClass=''UI'' then'#13#10'    SetBooleanProperty(TCompo'
  +'nent(CurrentNode.ScreenObject),''IsSelected'',true)'#13#10'  else'#13#10'  '
  +'  SetBooleanProperty(CurrentNode,''IsSelected'',true);'#13#10'  if LastLazU'
  +'serInterfaceItemSelected <> '''' then'#13#10'  begin'#13#10'    LastLazUser'
  +'InterfaceItemSelected:='''';'#13#10'  end;'#13#10'  if (CurrentNode.ScreenO'
  +'bject<>nil) then'#13#10'  begin'#13#10'    LastLazUserInterfaceItemSelected'
  +':=CurrentNode.NodeName;'#13#10'  end;'#13#10' {$Else}'#13#10'    // HTML - '
  +'highlight component on screen'#13#10'    mf:=MainForm;'#13#10'    mfn:=Main'
  +'Form.Name;'#13#10'    if CurrentNode.MyForm<>nil then'#13#10'      cfn:=Cur'
  +'rentNode.MyForm.Name'#13#10'    else'#13#10'    begin'#13#10'      //showme'
  +'ssage(''CurrentNode.MyForm is nil'');'#13#10'      cfn:=mf.Name;'#13#10'   '
  +' end;'#13#10'    asm'#13#10'     try{'#13#10'     //alert(''highlight compo'
  +'nent on screen...''+CurrentNode.NodeName);'#13#10'     //alert(''cfn=''+cfn'
  +'+'' mfn=''+mfn);'#13#10'      if  (cfn!=mfn) {'#13#10'         $mod.ShowXFo'
  +'rmForDesign(cfn)  }'#13#10'      else {'#13#10'        var UIContent = docu'
  +'ment.getElementById(''UIRootContents'');'#13#10'        UIContent.style.dis'
  +'play = "flex";'#13#10'      }'#13#10#13#10'     var myobj = document.getEle'
  +'mentById(CurrentNode.NameSpace+CurrentNode.NodeName);'#13#10'     if ((myob'
  +'j!=null)&&(myobj!=cfn)) {'#13#10#13#10'       pas.HTMLUtils.Highlight(myobj'
  +'.id);'#13#10'       pas.XObjectInsp.LastHTMLUserInterfaceItemSelected = myo'
  +'bj.id;'#13#10'       pas.XObjectInsp.LastHTMLUserInterfaceItemHadBorder = B'
  +'order;'#13#10#13#10'       }'#13#10'     //alert(''highlight component done'
  +'.'');'#13#10'     }catch(err) { alert(err.message+''  in XObjectInsp.Highli'
  +'ghtNavigatorObject''); }'#13#10'   end;'#13#10#13#10'  {$endif}'#13#10#13#10
  +'  // ok we have raised the relevant form, and highlighted the object.'#13#10
  +'  // Now check up the parent list in case it''s on a closed tab page...'#13
  +#10'  ParentNode:=FindParentOfNode(SystemNodeTree,CurrentNode);'#13#10'  whi'
  +'le (ParentNode<>nil) and (ParentNode.NodeType<>''TXForm'') do'#13#10'  begi'
  +'n'#13#10'    if ParentNode.NodeType=''TXTabSheet'' then'#13#10'    begin'#13
  +#10'      TabPage:=TXTabSheet(ParentNode.ScreenObject);'#13#10'      ParentN'
  +'ode:=FindParentOfNode(SystemNodeTree,ParentNode);'#13#10'      {$ifndef JSc'
  +'ript}'#13#10'      TXTabControl(ParentNode.ScreenObject).ActivePage:=TabPag'
  +'e;'#13#10'      {$else}'#13#10'      ChangeTabPage(TabPage.NodeName,ParentN'
  +'ode.NodeName,'''');'#13#10'      {$endif}'#13#10'    end;'#13#10'    Parent'
  +'Node:=FindParentOfNode(SystemNodeTree,ParentNode);'#13#10'  end;'#13#10#13
  +#10'end;'#13#10#13#10'procedure RefreshObjectInspector(CurrentNode:TDataNode'
  +');'#13#10'var AttributePrefix:string;'#13#10'  i:integer;'#13#10'  Properti'
  +'esNode,EventsNode,WidgetNode:TDataNode;'#13#10'  myAttribs:TNodeAttributesA'
  +'rray;'#13#10'  s:boolean;'#13#10'  BoxName,AttribValue:String;'#13#10'  MyW'
  +'idget:TObject;'#13#10'begin'#13#10'  s:=SuppressEvents;'#13#10'  SuppressEv'
  +'ents:=true;'#13#10'  //showmessage(''RefreshObjectInspector. Node=''+Curren'
  +'tNode.NodeName);'#13#10'  PropertiesNode:=FindDataNodeById(SystemNodeTree,P'
  +'ropertyEditorScrollboxName,'''',true);'#13#10'  EventsNode:=FindDataNodeByI'
  +'d(SystemNodeTree,EventsEditorScrollboxName,'''',true);'#13#10#13#10'  if (P'
  +'ropertiesNode<>nil) and (CurrentNode<>nil)  then'#13#10'  begin'#13#10#13#10
  +'      AttributePrefix:=''OI''+AttributeEditorNameDelimiter+CurrentNode.Node'
  +'Name;'#13#10'      myAttribs:=CurrentNode.NodeAttributes;'#13#10#13#10'    '
  +'  for i:=0 to length(myAttribs)-1 do'#13#10'      begin'#13#10'        //ex'
  ,'clude Suppressed properties that user shouldn''t see'#13#10'        if (Fin'
  +'dSuppressedProperty(CurrentNode.NodeType,CurrentNode.NodeAttributes[i].Attr'
  +'ibName)<0)'#13#10'        and (CurrentNode.NodeAttributes[i].AttribName<>'''
  +'ParentName'') then'#13#10'        begin'#13#10'          BoxName:=Attribute'
  +'Prefix+AttributeEditorNameDelimiter'#13#10'                    +CurrentNode'
  +'.NodeAttributes[i].AttribName+AttributeEditorNameDelimiter'#13#10'         '
  +'           +IntToStr(i+2);'#13#10'          AttribValue:=CurrentNode.NodeAt'
  +'tributes[i].AttribValue;'#13#10'          WidgetNode:=FindDataNodeById(Prop'
  +'ertiesNode,BoxName,'''',false);'#13#10'          if WidgetNode<>nil then'#13
  +#10'          begin'#13#10'            MyWidget:=WidgetNode.ScreenObject;'#13
  +#10#13#10'            if (CurrentNode.NodeAttributes[i].AttribType = ''Boole'
  +'an'')'#13#10'            and (myWidget is TXCheckBox) then'#13#10'         '
  +'   begin'#13#10'               TXCheckBox(myWidget).Checked:=myStrtoBool(At'
  +'tribValue);'#13#10'            end'#13#10'            else if (myWidget is '
  +'TXComboBox) then'#13#10'            begin'#13#10'              TXComboBox(m'
  +'yWidget).ItemValue:=AttribValue;'#13#10'            end'#13#10'            '
  +'else if (myWidget is TXEditBox) then'#13#10'            begin'#13#10'      '
  +'        TXEditBox(myWidget).ItemValue:=AttribValue;'#13#10'            end'
  +#13#10'            else if (myWidget is TXColorPicker) then'#13#10'         '
  +'   begin'#13#10'              TXColorPicker(myWidget).ItemValue:=AttribValu'
  +'e;'#13#10'            end;'#13#10'          end;'#13#10'       end;'#13#10
  +#13#10'     end;'#13#10'  end;'#13#10#13#10'  //------------------- Refresh '
  +'the registered Events Tabpage -----------------------'#13#10'  if (EventsNo'
  +'de<>nil) and (CurrentNode<>nil)  then'#13#10'  begin'#13#10#13#10'    if Cu'
  +'rrentNode.IsDynamic then'#13#10'    begin'#13#10'        for i:=0 to Curren'
  +'tNode.MyEventTypes.count-1 do'#13#10'        begin'#13#10'          BoxName'
  +':=AttributePrefix+AttributeEditorNameDelimiter'#13#10'                    +'
  +'CurrentNode.MyEventTypes[i]+AttributeEditorNameDelimiter'#13#10'           '
  +'         +IntToStr(i+2);'#13#10'          AttribValue:=CurrentNode.myEventH'
  +'andlers[i].TheCode;'#13#10#13#10'          WidgetNode:=FindDataNodeById(Eve'
  +'ntsNode,BoxName,'''',false);'#13#10'          if WidgetNode<>nil then'#13#10
  +'          begin'#13#10'            MyWidget:=WidgetNode.ScreenObject;'#13#10
  +'            if MyWidget<>nil then'#13#10'              TXEditBox(myWidget).'
  +'ItemValue:=AttribValue;'#13#10'          end;'#13#10#13#10'        end;'#13
  +#10'    end;'#13#10'  end;'#13#10#13#10'  SuppressEvents:=s;'#13#10'end;'#13
  +#10#13#10'procedure DoSelectNavTreeNode(CurrentNode:TDataNode; refresh:boole'
  +'an);'#13#10'var'#13#10'  mynodeText,tmp, NodeId:string;'#13#10'  IFrameNode'
  +',tmpnode:TDataNode;'#13#10'  okToContinue:Boolean;'#13#10'  i:integer;'#13
  +#10'begin'#13#10'  okToContinue:=true;'#13#10'  {$ifdef JScript}'#13#10'  as'
  +'m'#13#10'    var ob=document.getElementById(''Grey1'');'#13#10'    if (ob!='
  +'null) {'#13#10'      if (ob.style.display!=''none'') {'#13#10'        okToC'
  +'ontinue=false;'#13#10'      }'#13#10'    }'#13#10'  end;'#13#10'  if length'
  +'(OpenXForms)>0 then'#13#10'    okToContinue:=false;'#13#10'//  asm'#13#10'/'
  +'/    console.log(''DoSelectNavTreeNode ''+CurrentNode.NodeName+'' ok=''+okT'
  +'oContinue);'#13#10'//  end;'#13#10'  {$endif}'#13#10'   //!! Should to oper'
  +'ate this by node id, not text  :: HOWEVER, in the nav tree, node texts are '
  +'all unique.'#13#10'  //showmessage(''DoSelectNavTreeNode ''+CurrentNode.Nod'
  +'eClass+'' ''+CurrentNode.NodeType+'' ''+CurrentNode.NodeName+'' '');'#13#10
  +'  if (DesignMode) and (okToContinue) then'#13#10'  begin'#13#10'     {$ifde'
  +'f Chromium}'#13#10'     {$ifndef JScript}'#13#10'     // For an SVG contain'
  +'er, inspect the Title, and switch to a child SVG node, if appropriate.'#13
  +#10'     if CurrentNode.NodeType=''TXSVGContainer'' then'#13#10'     begin'
  +#13#10'       IFrameNode:=SVGItemFromTitle(TXSVGContainer(CurrentNode.Screen'
  +'Object).FrameTitle);'#13#10'       if IFrameNode<>nil then'#13#10'         '
  +'CurrentNode:=IFrameNode;'#13#10'     end;'#13#10'     {$endif}'#13#10'     '
  +'{$endif}'#13#10#13#10'      mynodeText := CurrentNode.NodeType+''(''+Curren'
  +'tNode.Nodename+'')'';'#13#10'     //showmessage(''mynodeText=''+mynodeText)'
  +';'#13#10#13#10'     TreeInFocus := UIRootNode;'#13#10#13#10'     {$ifndef J'
  +'Script}'#13#10'     TXTree(NavTreeComponent.ScreenObject).SelectedNodeText:'
  +'=mynodeText;  // (Windows) this selects the node in the navtree component, '
  +'if changed.'#13#10'     {$endif}'#13#10#13#10'     if (ObjectInspectorSelec'
  +'tedNavTreeNode=nil)'#13#10'     or (ObjectInspectorSelectedNavTreeNode<>Cur'
  +'rentNode) then'#13#10'     begin'#13#10'       DeHighlightObject(ObjectInsp'
  +'ectorSelectedNavTreeNode);'#13#10#13#10'       //display the attributes of '
  ,'the selected node in the object inspector'#13#10'       ObjectInspectorSele'
  +'ctedNavTreeNode:=CurrentNode;'#13#10'       PopulateObjectInspector(Current'
  +'Node);'#13#10'       {$ifdef JScript}'#13#10'       TXTree(NavTreeComponent'
  +').SelectedNodeText:=mynodeText;   // (Browser) this selects the node in the'
  +' navtree component, if changed.'#13#10'//       if not EventLogging.MacroEv'
  +'entList.Replaying then'#13#10'//       begin'#13#10'//         asm'#13#10'/'
  +'/         setTimeout(function(){},10);              //alert(''refresher tim'
  +'eout'');'#13#10'//         end;'#13#10'//       end;'#13#10'       {$endif}'
  +#13#10#13#10'       // Highlight the selected object (dotted border)'#13#10
  +'       HighlightNavigatorObject(ObjectInspectorSelectedNavTreeNode);'#13#10
  +'     end'#13#10'     else  if (refresh) then'#13#10'     begin'#13#10'     '
  +'  // just refresh all the displayed property values'#13#10'      // showmes'
  +'sage(''RefreshObjectInspector'');'#13#10'       RefreshObjectInspector(Curr'
  +'entNode);'#13#10'     end;'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'pro'
  +'cedure  SelectNavTreeNode(CurrentNode:TDataNode; refresh:boolean);'#13#10'b'
  +'egin'#13#10'  {$ifndef JScript}'#13#10'  DoSelectNavTreeNode(CurrentNode,re'
  +'fresh);'#13#10'  {$else}'#13#10'  asm'#13#10'  //console.log(''SelectNavTre'
  +'eNode ''+CurrentNode.NodeName);'#13#10'  myTimeout(pas.XObjectInsp.DoSelect'
  +'NavTreeNode,5,''DoSelectNavTreeNode'',0,CurrentNode,refresh);'#13#10'  end;'
  +#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10#13#10'procedure  SelectCode'
  +'TreeNode(CurrentNode:TDataNode; refresh:boolean; TreeNodeText:String);'#13
  +#10' var'#13#10'    tmp, NodeId:string;'#13#10' begin'#13#10'     //!!!! Sho'
  +'uld to operate this by node id, not text  :: HOWEVER, in the code tree, nod'
  +'e texts are all unique.'#13#10#13#10'     //showmessage(''SelectCodeTreeNod'
  +'e ''+CurrentNode.Nodename+'' >''+TreeNodeText+''<'');'#13#10'     //mynodeT'
  +'ext := CurrentNode.NodeType+''(''+CurrentNode.Nodename+'')'';'#13#10'     T'
  +'reeInFocus := CodeRootNode;'#13#10#13#10'     {$ifndef JScript}'#13#10'    '
  +' TXTree(CodeTreeComponent.ScreenObject).SelectedNodeText:=TreeNodeText;  //'
  +' this selects the node in the codetree component, if changed.'#13#10'     {'
  +'$endif}'#13#10#13#10'     if CurrentNode<>nil then'#13#10'     begin'#13#10
  +'       if (refresh)'#13#10'       or (ObjectInspectorSelectedCodeTreeNode=n'
  +'il)'#13#10'       or (ObjectInspectorSelectedCodeTreeNode<>CurrentNode) the'
  +'n'#13#10'       begin'#13#10#13#10'         if DesignMode then'#13#10'     '
  +'    begin'#13#10'           ObjectInspectorSelectedCodeTreeNode:=CurrentNod'
  +'e;'#13#10'           {$ifdef JScript}'#13#10'           TXTree(CodeTreeComp'
  +'onent).SelectedNodeText:=TreeNodeText;  // this selects the node in the cod'
  +'etree component, if changed.'#13#10'           {$endif}'#13#10#13#10'      '
  +'   end;'#13#10'       end;'#13#10'       ObjectInspectorSelectedCodeNodeTex'
  +'t:=TreeNodeText;'#13#10'     end'#13#10'     else'#13#10'     begin'#13#10
  +'       ObjectInspectorSelectedCodeTreeNode:=CurrentNode;'#13#10'     end;'
  +#13#10' end;'#13#10#13#10'procedure RebuildResourcesTree;'#13#10' var'#13#10
  +'     newtreestring, nodetext:string;'#13#10'     AttrParams:TNodeAttributes'
  +'Array;'#13#10'     ResTree:TXTree;'#13#10'     i:integer;'#13#10'     mynod'
  +'e:TDataNode;'#13#10' begin'#13#10'   //showmessage(''ConstructSystemTreeStr'
  +'ing for resources'');'#13#10'   ClearResourceInspector;'#13#10'   DeleteNod'
  +'eChildren(ResourcesNodeTree);'#13#10#13#10'   SetupAvailableResources;'#13
  +#10#13#10'   newtreestring:= ConstructSystemTreeString(ResourcesNodeTree,0,f'
  +'alse,false,nil,'''');'#13#10'   ResTree:=TXTree(ResourceTreeComponent.Scree'
  +'nObject);'#13#10'   {$ifndef JScript}'#13#10'   TXTree(ResourceTreeComponen'
  +'t.ScreenObject).TreeData:=newtreestring;'#13#10'   TmyTreeView(ResTree.myCo'
  +'ntrol).ExpandTreeNodes(ResTree.OpenToLevel);'#13#10'   {$else}'#13#10'   TX'
  +'Tree(ResourceTreeComponent).TreeData:=newtreestring;'#13#10'   {$endif}'#13
  +#10'end;'#13#10#13#10'procedure RebuildNavigatorTree;'#13#10'var'#13#10'    '
  +'newtreestring,formstring:string;'#13#10'    AttrParams:TNodeAttributesArray'
  +';'#13#10'    i,j:integer;'#13#10'    fm:TForm;'#13#10'    tempNode:TDataNod'
  +'e;'#13#10'begin'#13#10'(*'#13#10'actual node tree structure...'#13#10'(Syst'
  +'emNodeTree)'#13#10' |'#13#10'UIRootNode'#13#10'   |'#13#10'   MainForm'#13
  +#10'       |'#13#10'       Whole of main form'#13#10'   XForms'#13#10#13#10
  +'what we want to see on the navigator is....'#13#10'UIRootNode'#13#10'   |'
  +#13#10'   MainForm'#13#10'       UIRoot (centre section only)'#13#10'       '
  +'MainMenu'#13#10'       Non-visual components'#13#10'   XForms (dynamic only'
  +')'#13#10#13#10'*)'#13#10#13#10'  // construct string for the ''UI'' section'
  +' of the main form'#13#10'  //showmessage(''ConstructSystemTreeString for na'
  +'v'');'#13#10'  newtreestring:= ConstructSystemTreeString(UIRootNode,0,true,'
  ,'false,nil,'''');'#13#10'  {$ifndef JScript}'#13#10' // WriteToFile(''navtre'
  +'e.txt'',newtreestring);'#13#10'  TXTree(NavTreeComponent.ScreenObject).Tree'
  +'Data:=newtreestring;'#13#10'  {$else}'#13#10'  TXTree(NavTreeComponent).Tre'
  +'eData:=newtreestring;'#13#10'  {$endif}'#13#10'  if ObjectInspectorSelected'
  +'NavTreeNode<>nil then'#13#10'  begin'#13#10'    //showmessage(''selecting n'
  +'ode ''+ObjectInspectorSelectedNavTreeNode.nodename);'#13#10'    tempNode:=O'
  +'bjectInspectorSelectedNavTreeNode;'#13#10'    ObjectInspectorSelectedNavTre'
  +'eNode:=nil;   // so it will be selected/green bordered'#13#10'    SelectNav'
  +'TreeNode(tempNode,true);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure R'
  +'ebuildCodeTree;'#13#10'var'#13#10'    newtreestring,formstring:string;'#13
  +#10'    AttrParams:TNodeAttributesArray;'#13#10'    i,e:integer;'#13#10'    '
  +'fm:TForm;'#13#10'begin'#13#10'(*'#13#10'CodeRootNode'#13#10'   |'#13#10'   '
  +'Unit1'#13#10'   ...'#13#10'   Event Handlers'#13#10'      |'#13#10'      Ev'
  +'ent 1'#13#10'      ...'#13#10'   GPU Canvas widgets'#13#10'      |'#13#10' '
  +'     Widget 1 Animation Code'#13#10'*)'#13#10#13#10'  // construct string f'
  +'or the ''Code'' section of the main form'#13#10'  //showmessage(''Construct'
  +'SystemTreeString for code'');'#13#10'  newtreestring:= ConstructCodeTreeStr'
  +'ing(CodeRootNode,0);'#13#10#13#10'  // For improved visibility, also add no'
  +'des to this tree for all event handlers'#13#10'  // defined within the UIRo'
  +'otNode'#13#10'  e:=0;'#13#10'  newtreestring := ''["Root",''+newtreestring '
  +'+ ConstructEventsTreeString(SystemNodeTree,e);'#13#10#13#10'  // AND any GP'
  +'UCanvas widgets, for access to the AnimationCode property'#13#10'  newtrees'
  +'tring := newtreestring + ConstructGPUCodeTreeString(SystemNodeTree);'#13#10
  +#13#10'  newtreestring := newtreestring + '']'';'#13#10#13#10#13#10'  {$ifnd'
  +'ef JScript}'#13#10'  TXTree(CodeTreeComponent.ScreenObject).TreeData:=newtr'
  +'eestring;'#13#10'  {$else}'#13#10'  TXTree(CodeTreeComponent).TreeData:=new'
  +'treestring;'#13#10'  {$endif}'#13#10'  if ObjectInspectorSelectedCodeTreeNo'
  +'de<>nil then'#13#10'  begin'#13#10'    SelectCodeTreeNode(ObjectInspectorSe'
  +'lectedCodeTreeNode,true,ObjectInspectorSelectedCodeNodeText);'#13#10'  end;'
  +#13#10#13#10'end;'#13#10#13#10'procedure HandleNavTreeClickEvent(DataNodeId:'
  +'String; TreeNodeText:String);'#13#10'var CurrentNode :TDataNode;'#13#10'beg'
  +'in'#13#10'//ShowMessage(''ntc event. node=''+DataNodeId+'' Text=''+TreeNode'
  +'Text);'#13#10'  if TreeNodeText<>''Root'' then'#13#10'  begin'#13#10'    Cu'
  +'rrentNode:=FindDataNodeById(SystemNodeTree,DataNodeId,'''',true);'#13#10'  '
  +'  if CurrentNode=nil then'#13#10'      showmessage(''Cannot find node ''+Da'
  +'taNodeId+'' in XObjectInsp.HandleNavTreeClickEvent'')'#13#10'    else'#13#10
  +'    begin'#13#10'      SelectNavTreeNode(CurrentNode,false);'#13#10'    end'
  +';'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'function FindLineNumForProc('
  +'ProcName:String):integer;'#13#10'var'#13#10'  i,ln:integer;'#13#10'begin'#13
  +#10'  ln:=1;'#13#10'  i:=0;'#13#10'  while i<length(XIDEProcsList) do'#13#10
  +'  begin'#13#10'    if lowercase(XIDEProcsList[i].Name) = lowercase(ProcName'
  +') then'#13#10'    begin'#13#10'      ln:=XIDEProcsList[i].LineNum;'#13#10' '
  +'   end;'#13#10'    i:=i+1;'#13#10'  end;'#13#10'  result:=ln;'#13#10'end;'
  +#13#10#13#10'procedure HandleCodeTreeClickEvent(TreeNodeId,TreeNodeText,Firs'
  +'tBit:String);'#13#10'var'#13#10'  CurrentNode :TDataNode;'#13#10'  ParentTe'
  +'xt, ParentId, p1:String;'#13#10'  {$ifndef JScript}'#13#10'  myTreeNode:TTr'
  +'eeNode;'#13#10'  {$else}'#13#10'  selectedNodeId:String;'#13#10'  {$endif}'
  +#13#10'begin'#13#10'//ShowMessage(''HandleCodeTreeClickEvent. node=''+TreeNo'
  +'deId+'' text=''+TreeNodeText);'#13#10'  OISelectedCodeProcName:='''';'#13#10
  +'  if (TreeNodeText<>CodeRootName)'#13#10'  and (TreeNodeText<>''Root'')'#13
  +#10'  and (TreeNodeText<>''Root(Events)'')'#13#10'  and (TreeNodeText<>''Roo'
  +'t(GPUCode)'') then'#13#10'  begin'#13#10'    CurrentNode:=FindDataNodeById('
  +'SystemNodeTree,TreeNodeId,'''',false);'#13#10'    if CurrentNode<>nil then'
  +#13#10'    begin'#13#10'      SelectCodeTreeNode(CurrentNode,false,TreeNodeT'
  +'ext);'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      // TreeN'
  +'odeId might be the name of a function within a pascal unit (if compiler has'
  +' been run),'#13#10'      // in which case the relevant data node is the par'
  +'ent pasunit.'#13#10'      {$ifndef JScript}'#13#10'      myTreeNode:=TMyTre'
  +'eView(TXTree(CodeTreeComponent.ScreenObject).myControl).Selected;'#13#10'  '
  +'    ParentText:=myTreeNode.Parent.Text;'#13#10'      {$else}'#13#10'      s'
  +'electedNodeId:=TXTree(CodeTreeComponent).SelectedNodeId;'#13#10'      Paren'
  +'tText:=TXTree(CodeTreeComponent).getParentOfNode(selectedNodeId);'#13#10'  '
  +'    //showmessage(''ParentText1=''+ParentText);'#13#10'      ParentText:=TX'
  +'Tree(CodeTreeComponent).TextOfNode(ParentText);'#13#10'      //showmessage('
  ,'''ParentText2=''+ParentText);'#13#10'      {$endif}'#13#10'      ParentId:='
  +'TreeLabelToID(ParentText,''CodeTree'',p1);'#13#10'      CurrentNode:=FindDa'
  +'taNodeById(SystemNodeTree,ParentId,'''',true);'#13#10'      if (CurrentNode'
  +'<>nil)'#13#10'      and (CurrentNode.NodeType=''PasUnit'') then'#13#10'    '
  +'  begin'#13#10'         SelectCodeTreeNode(CurrentNode,false,TreeNodeText);'
  +#13#10'         OISelectedCodeProcName:=TreeNodeId;'#13#10'         //OISele'
  +'ctedCodeLineNum:=strtoint(FirstBit);'#13#10'         OISelectedCodeLineNum:'
  +'=FindLineNumForProc(OISelectedCodeProcName);'#13#10'      end'#13#10'      '
  +'else'#13#10'      begin'#13#10'        showmessage(''Cannot find system nod'
  +'e ''+TreeNodeId);'#13#10'        ObjectInspectorSelectedCodeTreeNode:=nil;'
  +#13#10'      end;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    Obje'
  +'ctInspectorSelectedCodeTreeNode:=nil;'#13#10'end;'#13#10#13#10'procedure Co'
  +'pyNavNode( NodeToCopy:TDataNode);'#13#10'begin'#13#10'   // Copy an item fr'
  +'om the Navigator tree.  Populates ObjectInspectorSourceNode.'#13#10'   if ('
  +'NodeToCopy<>nil)'#13#10'   and (NodeToCopy.NodeName<>'''') and (NodeToCopy.'
  +'NodeType<>'''') then'#13#10'   begin'#13#10'     ObjectInspectorSourceNode:'
  +'=CopyNode(NodeToCopy,true);'#13#10'     ObjectInspectorSourceCut:=false;'#13
  +#10'     //ShowMessage(''CopyNavNode.  Source node is ''+NodeToCopy.NodeName'
  +');'#13#10'   end'#13#10'   else ShowMessage(''Select an item (from the Navi'
  +'gation Tree) to copy before calling this action'');'#13#10'end;'#13#10#13#10
  +'function PickItem( SelectedResourcesTreeNode:TDataNode):string;'#13#10'begi'
  +'n'#13#10'   // Copy an item from the Resources tree, ready for paste elsewh'
  +'ere'#13#10'   if (SelectedResourcesTreeNode<>nil)'#13#10'   and (SelectedRe'
  +'sourcesTreeNode.NodeName<>'''') and (SelectedResourcesTreeNode.NodeType<>'''
  +''')'#13#10'   and (SelectedResourcesTreeNode.NodeType<>''Demo'') and (Selec'
  +'tedResourcesTreeNode.NodeType<>''Test'') then'#13#10'   begin'#13#10'      '
  +'ObjectInspectorSourceNode:=CopyNode(SelectedResourcesTreeNode,true);'#13#10
  +'      ObjectInspectorSourceCut:=false;'#13#10'   end;'#13#10'//   else'#13
  +#10'//     ShowMessage(''Select an item (from the Resource Tree) to copy bef'
  +'ore calling this action'');'#13#10'end;'#13#10#13#10'procedure  SelectResou'
  +'rceTreeNode(TreeNodeText:string;CurrentNode:TDataNode);'#13#10'var'#13#10' '
  +'  mynodeid:string;'#13#10'   ResourceTreeNode:TDataNode;'#13#10'begin'#13#10
  +'  //!!!! Should to operate this by node id, not text  :: HOWEVER, in the re'
  +'source tree, node texts are all unique.'#13#10'  //showmessage(''SelectReso'
  +'urceTreeNode ''+TreeNodeText);'#13#10'  mynodeid:=CurrentNode.NodeName;'#13
  +#10'  AvailableResourcesSelectedNode:=CurrentNode;'#13#10'  PopulateResource'
  +'Inspector(CurrentNode);'#13#10'end;'#13#10#13#10'procedure HandleResourcesT'
  +'reeClickEvent(nodeId,TreeNodeId:String);'#13#10'var CurrentNode :TDataNode;'
  +#13#10'begin'#13#10'  CurrentNode:=FindDataNodeById(ResourcesNodeTree,TreeNo'
  +'deId,'''',true);'#13#10'  //ShowMessage(''HandleResourcesTreeClickEvent tre'
  +'enodeId=''+TreeNodeId+'' currentnode=''+currentnode.NodeName);'#13#10'  if '
  +'CurrentNode=nil then'#13#10'    showmessage(''Cannot find node ''+TreeNodeI'
  +'d+'' in XObjectInsp.HandleResourcesTreeClickEvent'')'#13#10'  else'#13#10' '
  +' begin'#13#10'    SelectResourceTreeNode(TreeNodeId,CurrentNode);'#13#10'  '
  +'  if AvailableResourcesSelectedNode.NodeClass<>''RSS'' then'#13#10'      Pi'
  +'ckItem(CurrentNode);'#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'procedure'
  +' DeleteItemQuietly(InTree,SelectedNode:TDataNode);'#13#10'var'#13#10'   Par'
  +'entNode:TDataNode;'#13#10'begin'#13#10'  //ParentNode:=FindParentOfNodeByNa'
  +'me(InTree,SelectedNode.NodeName);'#13#10'  ParentNode:=FindParentOfNode(InT'
  +'ree,SelectedNode);'#13#10'     DeleteNode(ParentNode,SelectedNode);'#13#10
  +#13#10'     if InTree.NodeName=SystemRootName then'#13#10'     begin'#13#10
  +'      // showmessage(''reset selected node to ''+ParentNode.NodeName);'#13
  +#10'       ObjectInspectorSelectedNavTreeNode:=ParentNode;'#13#10'     end'
  +#13#10'     else if InTree.NodeName=CodeRootName then'#13#10'     begin'#13
  +#10'       ObjectInspectorSelectedCodeTreeNode:=ParentNode;'#13#10'       Ob'
  +'jectInspectorSelectedCodeNodeText:='''';  //!!!! ??'#13#10'       OISelecte'
  +'dCodeProcName:='''';'#13#10'     end;'#13#10#13#10'end;'#13#10#13#10#13#10
  +'function DeleteItem(InTree,SelectedNode:TDataNode):Boolean;'#13#10'var'#13
  +#10'  Deleted:Boolean;'#13#10'begin'#13#10'  Deleted:=false;'#13#10'  if  (S'
  +'electedNode=nil) or (SelectedNode.NodeName='''') then'#13#10'    ShowMessag'
  +'e(''Select an item on the Navigation Tree before calling this action'')'#13
  +#10'  else'#13#10'  begin'#13#10'    if SelectedNode.IsDynamic then'#13#10' '
  +'   begin'#13#10'      if (SelectedNode.NodeName=UIProjectRootName)'#13#10' '
  +'     or (SelectedNode.NodeName=CodeRootName)'#13#10'      or (SelectedNode.'
  ,'NodeName=ResourceDataRootName)'#13#10'      then'#13#10'        ShowMessage'
  +'(''Cannot remove the root node'')'#13#10'      else'#13#10'      begin'#13
  +#10'         DeleteItemQuietly(InTree,SelectedNode);'#13#10#13#10'         i'
  +'f DesignMode then'#13#10'         begin'#13#10'           {$ifdef JScript}'
  +#13#10'           if not RunningDeployedRuntime then'#13#10'           {$end'
  +'if}'#13#10'           SaveSystemData;'#13#10#13#10'           if InTree.Nod'
  +'eName=SystemRootName then'#13#10'           begin'#13#10'              Rebu'
  +'ildNavigatorTree;'#13#10'              RebuildCodeTree;  // (to remove disp'
  +'layed event code items)'#13#10'           end'#13#10' //          else if I'
  +'nTree.NodeName=ResourceDataRootName then'#13#10' //          begin'#13#10' '
  +'//             RebuildResourcesTree;'#13#10' //          end'#13#10'       '
  +'    else if InTree.NodeName=CodeRootName then'#13#10'           begin'#13#10
  +'              RebuildCodeTree;'#13#10'           end;'#13#10'         end;'
  +#13#10#13#10'         Deleted:=true;'#13#10'      end;'#13#10'    end'#13#10
  +'    else'#13#10'      showmessage(''Lazarus-designed components cannot be d'
  +'eleted here.  Only dynamically created components may be deleted at runtime'
  +''');'#13#10'  end;'#13#10'  result:=Deleted;'#13#10'end;'#13#10#13#10'proce'
  +'dure CutItemQuietly(InTree,SelectedNode:TDataNode);'#13#10'begin'#13#10'  O'
  +'bjectInspectorSourceNode:=CopyNode(SelectedNode,true);'#13#10'  //ShowMessa'
  +'ge(''cutting ''+ObjectInspectorSourceNode.NodeName);'#13#10'  ObjectInspect'
  +'orSourceCut:=true;'#13#10'  DeleteItemQuietly(InTree,SelectedNode);'#13#10
  +'  //ShowMessage(''finished cutting.  oi node is ''+ObjectInspectorSourceNod'
  +'e.NodeName);'#13#10'end;'#13#10#13#10'function CutItem(InTree,SelectedNode:'
  +'TDataNode):string;'#13#10'var'#13#10'   myName:string;'#13#10'begin'#13#10
  +'  //ShowMessage(''cutitem.  selectednode=''+SelectedNode.NodeName);'#13#10
  +'  if  (SelectedNode=nil) or (SelectedNode.NodeName='''') then'#13#10'    Sh'
  +'owMessage(''Select an item on the Navigation Tree before calling this actio'
  +'n'')'#13#10'  else'#13#10'  begin'#13#10'    if SelectedNode.IsDynamic then'
  +#13#10'    begin'#13#10'      if (SelectedNode.NodeName=UIProjectRootName)'
  +#13#10'      or (SelectedNode.NodeName=ResourceDataRootName)'#13#10'      th'
  +'en'#13#10'        ShowMessage(''Cannot remove the root node'')'#13#10'     '
  +' else'#13#10'      begin'#13#10'        myName:=SelectedNode.NodeName;'#13
  +#10'        CutItemQuietly(InTree,SelectedNode);'#13#10#13#10'        if des'
  +'ignMode then'#13#10'        begin'#13#10'          SaveSystemData;'#13#10#13
  +#10'          if InTree.NodeName=SystemRootName then'#13#10'          begin'
  +#13#10'            RebuildNavigatorTree;'#13#10'            RebuildCodeTree;'
  +#13#10'          end;'#13#10'  //        else if InTree.NodeName=ResourceDat'
  +'aRootName then'#13#10'  //          RebuildResourcesTree;'#13#10'        en'
  +'d;'#13#10'        ShowMessage(''Node ''+ myName +'' ready to paste'');'#13
  +#10#13#10'      end;'#13#10'    end'#13#10'    else'#13#10'      showmessage'
  +'(''Lazarus-designed components cannot be deleted here.  Only dynamically cr'
  +'eated components may be deleted at runtime'');'#13#10#13#10'  end;'#13#10'e'
  +'nd;'#13#10#13#10'procedure RenameChildNodes(MyNode:TDataNode;Prefix:string)'
  +';'#13#10'var'#13#10'   i:integer;'#13#10'begin'#13#10'  for i:=0 to length('
  +'MyNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    MyNode.ChildNodes[i].Node'
  +'Name:=Prefix + MyNode.ChildNodes[i].NodeName;'#13#10'    RenameChildNodes(M'
  +'yNode.ChildNodes[i],Prefix);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedu'
  +'re RenameCompositeNodes(MyNode:TDataNode;NameSpace:string);'#13#10'var'#13
  +#10'   i:integer;'#13#10'begin'#13#10'  for i:=0 to length(MyNode.ChildNodes'
  +')-1 do'#13#10'  begin'#13#10'    MyNode.ChildNodes[i].NameSpace:=NameSpace;'
  +#13#10'    RenameChildNodes(MyNode.ChildNodes[i],NameSpace);'#13#10'  end;'
  +#13#10'end;'#13#10#13#10#13#10'procedure PasteItemQuietly(InTree:TDataNode;p'
  +'os:integer;ParentNode,SourceNode:TDataNode);'#13#10'var'#13#10'   TreePos:i'
  +'nteger;'#13#10'   glb:Boolean;'#13#10'   //pn:String;'#13#10'begin'#13#10' '
  +' //showmessage(''PasteItemQuietly'');'#13#10'  SourceNode.ScreenObject:=nil'
  +';'#13#10'  TreePos:=pos;'#13#10'  {$ifndef JScript}'#13#10'  glb:=  GlobalS'
  +'uppressFrameDisplay;'#13#10'  {$endif}'#13#10#13#10'  if ObjectInspectorSou'
  +'rceCut=false then'#13#10'    // this is a copy - have to rename all child n'
  +'odes'#13#10'    if SourceNode.NodeType <> ''TXComposite'' then'#13#10'     '
  +' RenameChildNodes(SourceNode,SourceNode.NodeName);    //!!!! this will brea'
  +'k any references in event code to these nodes'#13#10#13#10'  if InTree.Node'
  +'Name=SystemRootName then'#13#10'  begin'#13#10'    // un-highlight selected'
  +' item in nav tree'#13#10'    if ObjectInspectorSelectedNavTreeNode<>nil the'
  +'n'#13#10'    {$ifndef JScript}'#13#10'      if ObjectInspectorSelectedNavTr'
  ,'eeNode.NodeClass=''UI'' then'#13#10'        SetBooleanProperty(ObjectInspec'
  +'torSelectedNavTreeNode.ScreenObject,''IsSelected'',false)'#13#10'      else'
  +#13#10'        SetBooleanProperty(ObjectInspectorSelectedNavTreeNode,''IsSel'
  +'ected'',false);'#13#10'      {$else}'#13#10'      if IsPublishedProp(Object'
  +'InspectorSelectedNavTreeNode,''IsSelected'') then'#13#10'        SetBoolPro'
  +'p(ObjectInspectorSelectedNavTreeNode,''IsSelected'',false);'#13#10'      {$'
  +'endif}'#13#10#13#10'    //.........Create the new node and associated scree'
  +'n object........................'#13#10'    {$ifndef JScript}'#13#10'    Gl'
  +'obalSuppressFrameDisplay:=false;'#13#10'    {$endif}'#13#10'    ObjectInspe'
  +'ctorSelectedNavTreeNode:=InsertSystemNode(ParentNode,SourceNode,TreePos);'
  +#13#10'    {$ifndef JScript}'#13#10'    GlobalSuppressFrameDisplay:=glb;'#13
  +#10'    {$endif}'#13#10#13#10'    if DesignMode then'#13#10'    begin'#13#10
  +'      SaveSystemData;'#13#10#13#10'      // rebuild the system description '
  +'tree'#13#10'      RebuildNavigatorTree;'#13#10'      RebuildCodeTree;'#13#10
  +'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'function CanAddChildToParen'
  +'t(ParentNode,SourceNode:TDataNode):Boolean;'#13#10'begin'#13#10'  result:=f'
  +'alse;'#13#10' // showmessage(''add ''+SourceNode.NodeClass+'' to ''+ParentN'
  +'ode.NodeType);'#13#10'  if (ParentNode.NodeType<>''TXSVGContainer'') and (S'
  +'ourceNode.NodeClass = ''SVG'') then'#13#10'     ShowMessage(''Can only past'
  +'e SVG items to an SVGContainer.'')'#13#10'  else if (ParentNode.NodeType='''
  +'TXSVGContainer'') and (SourceNode.NodeClass <> ''SVG'') then'#13#10'     Sh'
  +'owMessage(''Can only paste SVG items to an SVGContainer.'')'#13#10'  else i'
  +'f (ParentNode.NodeType=''TXTabControl'') and (SourceNode.NodeType<>''TXTabS'
  +'heet'') then'#13#10'    ShowMessage(''Only a TabSheet can be inserted under'
  +' a TabControl element'')'#13#10'  else if (ParentNode.NodeType<>''TXTabCont'
  +'rol'') and (SourceNode.NodeType=''TXTabSheet'') then'#13#10'    ShowMessage'
  +'(''A TabSheet can only be inserted under a TabControl element'')'#13#10'  e'
  +'lse if (ParentNode.NodeType=''TXMainMenu'') and (SourceNode.NodeType<>''TXM'
  +'enuItem'') then'#13#10'    ShowMessage(''Only a MenuItem can be inserted un'
  +'der a MainMenu element'')'#13#10'  else if (ParentNode.NodeType<>''TXMainMe'
  +'nu'') and (ParentNode.NodeType<>''TXMenuItem'') and(SourceNode.NodeType=''T'
  +'XMenuItem'') then'#13#10'    ShowMessage(''A MenuItem can only be inserted '
  +'under a MainMenu or MenuItem element'')'#13#10'  else if (ParentNode.NodeTy'
  +'pe=''TXForm'') and (SourceNode.NodeType=''TXMainMenu'') and (ParentNode.Nod'
  +'eName=MainForm.Name) then'#13#10'    ShowMessage(''The Main Form already ha'
  +'s a Main Menu'')'#13#10'  else if (ParentNode.NodeType<>''TXForm'') and (So'
  +'urceNode.NodeType=''TXMainMenu'') then'#13#10'    ShowMessage(''A MainMenu '
  +'can only be inserted under a Form element'')'#13#10'  //else if (ParentNode'
  +'.NodeType<>''TXForm'') and (SourceNode.NodeClass=''NV'') then'#13#10'  else'
  +' if (SourceNode.NodeClass=''NV'') and (ParentNode<>UIRootNode) then'#13#10
  +'    ShowMessage(ParentNode.NodeType+'' ''+SourceNode.NodeClass+'' ''+''A no'
  +'n-visual component can only be inserted under the UI Root Node'')'#13#10'  '
  +'else if (ParentNode.NodeClass=''NV'') then'#13#10'    ShowMessage(''A non-v'
  +'isual component cannot contain child nodes'')'#13#10'  else if (SourceNode.'
  +'NodeType=''TXForm'') and (ParentNode<>UIRootNode) then'#13#10'    ShowMessa'
  +'ge(''XForm can only be added to the UI Root Node'')'#13#10'  else if (Sourc'
  +'eNode.NodeClass<>''NV'') and (SourceNode.NodeType<>''TXForm'') and (ParentN'
  +'ode=UIRootNode) then'#13#10'    ShowMessage(''Only XForm and Non-Visual ite'
  +'ms can be added to the UI Root Node - please select another container'')'#13
  +#10'  else if (SourceNode.NodeClass=''UI'') and (ParentNode.NodeType=''TXFor'
  +'m'') and (ParentNode.NodeName=MainForm.Name) then'#13#10'    ShowMessage('''
  +'In the main form, UI items can only be added within the UI Root Node'')'#13
  +#10'  else'#13#10'    // all ok - go ahead and paste'#13#10'    result:=true'
  +';'#13#10#13#10'end;'#13#10#13#10'function OINavTreeAllowDrop(DstNode:TDataN'
  +'ode):Boolean;'#13#10'var'#13#10'  SrcNode:TDataNode;'#13#10'  ok:Boolean;'
  +#13#10'begin'#13#10'  ok:=true;'#13#10'  SrcNode:=ObjectInspectorSourceNode;'
  +#13#10'//showmessage(''OINavTreeAllowDrop. Dest=''+DstNode.NodeName+'' Src='
  +'''+SrcNode.NodeName);'#13#10'      // cannot drop to Root Node.'#13#10'    '
  +'  if (DstNode.NodeClass=''Root'')'#13#10'      and (SrcNode.NodeType <> ''T'
  +'XForm'') then'#13#10'        ok:=false;'#13#10'      // on main form, canno'
  +'t drop to Form node'#13#10'      if (DstNode.NodeType=''TXForm'')'#13#10'  '
  +'    and (DstNode.NodeName=MainForm.Name)'#13#10'      and (SrcNode.NodeType'
  +' <> ''TXMainMenu'')'#13#10'      and (SrcNode.NodeClass <> ''NV'')'#13#10' '
  +'     and (SrcNode.NodeClass <> ''RNV'') then'#13#10'        ok:=false;'#13
  ,#10'      // have to drop txform onto the UI Root node'#13#10'      if (DstN'
  +'ode<>UIRootNode)'#13#10'      and (SrcNode.NodeType=''TXForm'') then'#13#10
  +'        ok:=false;'#13#10'      // cannot drop non-menu items into a menu'
  +#13#10'      if ((DstNode.NodeType = ''TXMainMenu'')'#13#10'      or (DstNod'
  +'e.NodeType = ''TXMenuItem''))'#13#10'      and (SrcNode.NodeType <> ''TXMen'
  +'uItem'') then'#13#10'        ok:=false;'#13#10'      // cannot drop menu it'
  +'ems into a non-menu'#13#10'      if (DstNode.NodeType <> ''TXMainMenu'')'#13
  +#10'      and (DstNode.NodeType <> ''TXMenuItem'')'#13#10'      and (SrcNode'
  +'.NodeType = ''TXMenuItem'') then'#13#10'        ok:=false;'#13#10'      // '
  +'main menu can only drop to a form item'#13#10'      if (DstNode.NodeType <>'
  +' ''TXForm'')'#13#10'      and (SrcNode.NodeType = ''TXMainMenu'') then'#13
  +#10'        ok:=false;'#13#10'      // main form already has a main menu'#13
  +#10'      if (DstNode.NodeType = ''TXForm'')'#13#10'      and (SrcNode.NodeT'
  +'ype = ''TXMainMenu'')'#13#10'      and (DstNode.NodeName=MainForm.Name) the'
  +'n'#13#10'        ok:=false;'#13#10'      // cannot drop tab page except int'
  +'o a tab control'#13#10'      if (DstNode.NodeType<>''TXTabControl'')'#13#10
  +'      and (SrcNode.NodeType=''TXTabSheet'') then'#13#10'        ok:=false;'
  +#13#10'      if (DstNode.NodeType=''TXTabControl'')'#13#10'      and (SrcNod'
  +'e.NodeType<>''TXTabSheet'') then'#13#10'        ok:=false;'#13#10'      // '
  +'can only drop non-visuals onto the UI Root node'#13#10'      if (DstNode<>U'
  +'IRootNode)'#13#10'      and ((SrcNode.NodeClass = ''NV'')'#13#10'        or'
  +' (SrcNode.NodeClass = ''RNV'')) then'#13#10'        ok:=false;'#13#10'     '
  +' // can only drop SVG items into an SVG Container'#13#10'      if (DstNode.'
  +'NodeType<>''TXSVGContainer'') and (DstNode.NodeClass<>''SVG'')'#13#10'     '
  +' and ((SrcNode.NodeClass = ''SVG'') or (SrcNode.NodeClass = ''RSVG'')) then'
  +#13#10'         ok:=false;'#13#10'      if ((DstNode.NodeType=''TXSVGContain'
  +'er'') or (DstNode.NodeClass=''SVG''))'#13#10'      and (SrcNode.NodeClass <'
  +'> ''SVG'') and (SrcNode.NodeClass <> ''RSVG'') then'#13#10'         ok:=fal'
  +'se;'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'procedure SetSystemName(N'
  +'ewName:String);'#13#10'begin'#13#10'  UIRootNode.SetAttributeValue(''System'
  +'Name'',NewName);'#13#10'  {$ifdef JScript}'#13#10'  asm'#13#10'    document'
  +'.title=NewName;'#13#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'pr'
  +'ocedure LoadNamedSystem(sysname:string);'#13#10'var'#13#10'  SystemDescript'
  +'ion,filename:String;'#13#10'begin'#13#10'//   basename:=myStringReplace(sys'
  +'name,''_xide'','''',1,-1);'#13#10'   filename:=sysname+''.xide'';'#13#10'  '
  +' {$ifndef JScript}'#13#10'   // on Desktop, saved systems are in this sub-f'
  +'older...'#13#10'   filename:=''SavedSystems/''+filename;'#13#10'   {$endif}'
  +#13#10'   SystemDescription:=ReadFromLocalStore(filename);'#13#10#13#10'   D'
  +'oSystemLoad(SystemDescription,sysname);'#13#10'   if UIRootNode.GetAttribut'
  +'e(''SystemName'',true).AttribValue=''XIDESystem'' then'#13#10'     SetSyste'
  +'mName(sysname);'#13#10'//   UIRootNode.SetAttributeValue(''SystemName'',sys'
  +'name);'#13#10'end;'#13#10#13#10'procedure LoadCompositeResource(CompNode:Td'
  +'ataNode);'#13#10'var'#13#10'  SystemDescription:String;'#13#10'begin'#13#10
  +'   SystemDescription:=CompNode.GetAttribute(''SourceString'',false).AttribV'
  +'alue;'#13#10#13#10'   DoSystemLoad(SystemDescription,CompNode.NodeName);'#13
  +#10' //  UIRootNode.SetAttributeValue(''SystemName'',CompNode.NodeName);'#13
  +#10#13#10'end;'#13#10#13#10'function PasteItem(NavTreeDestinationNode:TDataN'
  +'ode;OrigSourceNode:TDataNode;NewName:String):boolean;'#13#10'var'#13#10'   '
  +'SourceNode,ParentNode, NewNode:TDataNode;'#13#10'   TreePos:integer;'#13#10
  +'   ok,TargetIsContainer:Boolean;'#13#10'   CompositeResource:Boolean;'#13#10
  +'   InterfaceNodes:TNodesArray;'#13#10'   i,j:integer;'#13#10'begin'#13#10' '
  +' ok:=false;'#13#10'  if  OrigSourceNode.NodeClass=''RSS'' then'#13#10'    E'
  +'XIT;'#13#10'  // make a copy of the source node (as we may make changes her'
  +'e)'#13#10'  SourceNode:=CopyNode(OrigSourceNode,true);'#13#10#13#10'  Compo'
  +'siteResource:=false;'#13#10'  //showmessage(''PasteItem...source=''+SourceN'
  +'ode.Nodename+'' dest=''+NavTreeDestinationNode.NodeName);'#13#10'  //showme'
  +'ssage(''PasteItem...dest=''+NavTreeDestinationNode.Nodename+'' type=''+NavT'
  +'reeDestinationNode.NodeType+'' class=''+NavTreeDestinationNode.NodeClass);'
  +#13#10'  if (NavTreeDestinationNode=nil) or (SourceNode=nil)'#13#10'  or (Na'
  +'vTreeDestinationNode.NodeName='''') or (SourceNode.NodeName='''') then'#13
  +#10'  begin'#13#10'      if (NavTreeDestinationNode=nil) or (NavTreeDestinat'
  +'ionNode.NodeName='''') then'#13#10'        ShowMessage(''Select a destinati'
  +'on to paste to before calling this action'') ;'#13#10'      if (SourceNode='
  +'nil) or (SourceNode.NodeName='''') then'#13#10'        ShowMessage(''Select'
  ,' an item to copy before calling this action'');'#13#10'  end'#13#10'  else'
  +#13#10'  begin'#13#10'    //ShowMessage(''PasteItem.  Source=''+SourceNode.N'
  +'odeName+'' Dest=''+NavTreeDestinationNode.NodeName);'#13#10'    if (SourceN'
  +'ode.NodeClass=''RUI'')'#13#10'    and (SourceNode.NodeType=''TXComposite'')'
  +' then'#13#10'      CompositeResource:=true;'#13#10#13#10'    if SourceNode.'
  +'NodeClass=''RUI'' then SourceNode.NodeClass:=''UI'';'#13#10'    if SourceNo'
  +'de.NodeClass=''RNV'' then SourceNode.NodeClass:=''NV'';'#13#10'    if Sourc'
  +'eNode.NodeClass=''RSVG'' then SourceNode.NodeClass:=''SVG'';'#13#10#13#10' '
  +'   if (SourceNode.NodeClass<>''UI'')'#13#10'    and (SourceNode.NodeClass<>'
  +'''NV'')'#13#10'    and (SourceNode.NodeClass<>''SVG'')'#13#10'    then'#13
  +#10'    begin'#13#10'       ShowMessage(''Can only add UI, NV and SVG items '
  +'to the Navigator tree'');'#13#10'       EXIT;'#13#10'    end;'#13#10#13#10
  +'    // Is the destination node a container (paste new child) or not (paste '
  +'sibling)'#13#10'    if (NavTreeDestinationNode = UIRootNode)'#13#10'    or '
  +'(NavTreeDestinationNode.NodeType=''TXForm'') then'#13#10'      TargetIsCont'
  +'ainer:=true'#13#10'    else if (NavTreeDestinationNode.NodeType=''TXTabShee'
  +'t'')'#13#10'    and (SourceNode.NodeType=''TXTabSheet'') then'#13#10'      '
  +'TargetIsContainer:=false'#13#10'    else'#13#10'    begin'#13#10'      if ('
  +'NavTreeDestinationNode.ScreenObject = nil)                    //eg. is nil '
  +'for SVG internal widgets'#13#10'      {$ifndef JScript}'#13#10'      or (Na'
  +'vTreeDestinationNode.ScreenObject = NavTreeDestinationNode)'#13#10'      {$'
  +'endif}'#13#10'      then'#13#10'        TargetIsContainer:=false'#13#10'   '
  +'   else'#13#10'      begin'#13#10'        {$ifndef JScript}'#13#10'        '
  +'TargetIsContainer:=GetBooleanProperty(TComponent(NavTreeDestinationNode.Scr'
  +'eenObject),''isContainer'');'#13#10'        {$else}'#13#10'        TargetIs'
  +'Container:=GetBoolProp(NavTreeDestinationNode.ScreenObject,''isContainer'')'
  +';'#13#10'      {$endif}'#13#10'      end;'#13#10'    end;'#13#10#13#10'    '
  +'if TargetIsContainer = true then'#13#10'    begin'#13#10'      //ShowMessag'
  +'e(''paste under container'');'#13#10'      ParentNode:=NavTreeDestinationNo'
  +'de;'#13#10'      TreePos:=-1;'#13#10'    end'#13#10'    else'#13#10'    beg'
  +'in'#13#10'      // ShowMessage(''paste as sibling'');'#13#10'      //Parent'
  +'Node:=FindParentOfNodeByName(SystemNodeTree,NavTreeDestinationNode.NodeName'
  +');'#13#10'      ParentNode:=FindParentOfNode(SystemNodeTree,NavTreeDestinat'
  +'ionNode);'#13#10'      TreePos:=ParentNode.GetChildIndex(NavTreeDestination'
  +'Node);'#13#10'    end;'#13#10#13#10'   //showmessage(''PasteItem. parent='''
  +'+ParentNode.Nodename+'' type=''+ParentNode.NodeType+'' class=''+ParentNode.'
  +'NodeClass);'#13#10#13#10'    if CanAddChildToParent(ParentNode,SourceNode) '
  +'then'#13#10'    begin'#13#10'       if NewName='''' then'#13#10'       begi'
  +'n'#13#10'         if ObjectInspectorSourceCut=false then'#13#10'         be'
  +'gin'#13#10'             // Dialog for name entry'#13#10'             NewNam'
  +'e:=getname(''Enter Component Name:'');'#13#10'         end'#13#10'         '
  +'else'#13#10'         begin'#13#10'            NewName:=SourceNode.NodeName;'
  +#13#10'         end;'#13#10'       end;'#13#10#13#10'       // Is the source'
  +' node named uniquely?'#13#10'       //showmessage(''check unique name ''+Ne'
  +'wName);'#13#10'       if (NewName<>'''') and (ComponentNameIsUnique(NewName'
  +',OrigSourceNode.NameSpace)) then'#13#10'       begin'#13#10'         Source'
  +'Node.NodeName:=NewName;'#13#10'         PasteItemQuietly(UIRootNode,TreePos'
  +',ParentNode,SourceNode);'#13#10'         ok:=true;'#13#10#13#10'          i'
  +'f CompositeResource then'#13#10'          begin'#13#10'            NewNode:'
  +'=FindDataNodeById(ParentNode,NewName,OrigSourceNode.NameSpace,true);'#13#10
  +'            // next, expand the composite node according to its SourceStrin'
  +'g'#13#10'            XMLToNodeTree(SourceNode.GetAttribute(''SourceString'''
  +',true).AttribValue, NewNode, true);'#13#10'            // and reset the ins'
  +'tantiated SourceString to blank'#13#10'            NewNode.SetAttributeValu'
  +'e(''SourceString'','''',''String'',true);'#13#10'            // From within'
  +' the expanded composite, find interface node(s?) and add the defined proper'
  +'ties and events'#13#10'            InterfaceNodes:=FindNodesOfType(NewNode,'
  +'''TXCompositeIntf'');'#13#10'            for i:=0 to length(InterfaceNodes)'
  +'-1 do     //!!!! only allow one of these???'#13#10'            begin'#13#10
  +'              for j:=0 to length(InterfaceNodes[i].NodeAttributes)-1 do'#13
  +#10'                NewNode.AddAttribute(InterfaceNodes[i].NodeAttributes[j]'
  +'.AttribName,''String'',InterfaceNodes[i].NodeAttributes[j].AttribValue,fals'
  +'e);'#13#10'              for j:=0 to InterfaceNodes[i].myEventTypes.Count-1'
  +' do'#13#10'                NewNode.AddEvent(InterfaceNodes[i].myEventTypes['
  ,'j],'''','''');'#13#10'            end;'#13#10'          end;'#13#10'       '
  +'end;'#13#10'    end;'#13#10#13#10'  end;'#13#10'  result:=ok;'#13#10'end;'
  +#13#10#13#10'procedure ShowHideNode(aNode:TDataNode;show:Boolean);'#13#10'be'
  +'gin'#13#10'   if aNode<>nil then'#13#10'     if aNode.NodeClass=''UI'' then'
  +#13#10'     begin'#13#10'         {$ifndef JScript}'#13#10'         SetBoole'
  +'anProperty(aNode.ScreenObject,''IsVisible'',show);'#13#10'         {$else}'
  +#13#10'         if IsPublishedProp(aNode,''IsVisible'') then'#13#10'        '
  +' begin'#13#10'           SetBoolProp(aNode,''IsVisible'',show);'#13#10'    '
  +'     end;'#13#10'         {$endif}'#13#10'     end;'#13#10'end;'#13#10#13#10
  +'(*'#13#10'function  repchar(instring,refstring:string):string;'#13#10'var i'
  +',j,k,m,num1,num2, wrap,testlength:integer;'#13#10'    newstring:string;'#13
  +#10'begin'#13#10'  if length(refstring)< 1 then showmessage(''Error ....refs'
  +'tring is too short in ComponentWrapper.repchar'');'#13#10'  j:=0;'#13#10'  '
  +'k:=0;'#13#10'  newstring:='''';'#13#10'  testlength:=8;'#13#10'  if length('
  +'instring)> testlength'#13#10'  then'#13#10'  begin'#13#10'    for i:=1 to t'
  +'estlength do'#13#10'    begin'#13#10'      newstring:= newstring+instring[i'
  +'];'#13#10'    end;'#13#10'    if (ord(instring[i]) > 126)'#13#10'    then'
  +#13#10'    begin'#13#10'       newstring:= newstring+instring[i];'#13#10'   '
  +'    if ord(instring[i])=160 then showmessage(''Error ....char 160 is a rese'
  +'rved value in ComponentWrapper.repchar'');'#13#10'    end'#13#10'    else'
  +#13#10'    for i:=testlength+1 to length(instring) do'#13#10'    begin'#13#10
  +'      k:=k+1;'#13#10'      if k > 13 then k:=1;'#13#10'      m:= (k xor 5);'
  +#13#10'      num1:=ord(instring[i]);'#13#10'      if num1=160 then num1:=127'
  +';'#13#10'      num1:=num1-32;'#13#10'      j:=j+1;'#13#10'      if j>length'
  +'(refstring)then j:=1;'#13#10'      wrap:= 4 * m + ord(refstring[j]);'#13#10
  +'      if  wrap>126 then  wrap := wrap -95;'#13#10'      num2:=(wrap-32);'#13
  +#10'      num2:=trunc(num2/4);'#13#10'      num1:=(num1 xor num2)+32;'#13#10
  +'      if num1=127 then num1:=160;'#13#10'      if (num1>126)and(num1<>160) '
  +'then showmessage(''Error ....char out of range in ComponentWrapper.repchar '
  +' ''+inttostr(num1)+'' ''+chr(num1));'#13#10'      newstring:=newstring+ chr'
  +'(num1);'#13#10'    end;'#13#10'  end else showmessage(''Error ....instring '
  +'too short in ComponentWrapper.repchar'');'#13#10'  result:=newstring;'#13#10
  +'end;'#13#10#13#10#13#10'function addpoochar(instring:string):string;'#13#10
  +'var i,j,k,m,num:integer;'#13#10'    newstring:string;'#13#10'begin'#13#10' '
  +' k:=0;'#13#10'  instring:=''sdfkisbdoisopjwepojwegaegohaspeoulvdoidfvd;ldfh'
  +'ddbldv;l,sc;ascethpnij[pfgb][lwefp;asckbjefog;lkdrpojgpoiejrgoigerauiervoie'
  +'roiheg'';'#13#10'  instring:=instring+ instring+instring+instring+instring+'
  +'instring+instring+instring+instring+instring+instring+instring+instring+ins'
  +'tring;'#13#10'   instring:=instring+ instring+instring+instring+instring+in'
  +'string+instring+instring+instring+instring+instring+instring+instring+instr'
  +'ing;'#13#10'   instring:=instring+ instring+instring+instring+instring+inst'
  +'ring+instring+instring+instring+instring+instring+instring+instring+instrin'
  +'g;'#13#10'   instring:=instring+ instring+instring+instring+instring+instri'
  +'ng+instring+instring+instring+instring+instring+instring+instring+instring;'
  +#13#10'  newstring:= instring+''mpXiWmfG'';'#13#10'  for i:=1 to length(inst'
  +'ring) do'#13#10'  begin'#13#10'    k:=k+1;'#13#10'    if k > 11 then k:=1;'
  +#13#10'    m:= (k xor 5);'#13#10'    j:=1+(i xor 5);'#13#10'    if ord(instr'
  +'ing[i]) > 126'#13#10'    then newstring[j]:=instring[i]'#13#10'    else'#13
  +#10'    begin'#13#10'      num:=ord(instring[i])+m;'#13#10'      if num>126 '
  +'then num := num - 95;'#13#10'      newstring[j]:= chr(num);'#13#10'    end '
  +';'#13#10'    if (j>length(newstring)) or (j<1) then showmessage(''poo j = '
  +'''+ inttostr(j));'#13#10'    if (ord(instring[i]) > 126) or ( ord(instring['
  +'i]) <32  )  then showmessage(''odd char = >''+instring[i]+''<'');'#13#10'  '
  +'  if (ord(newstring[j]) > 126) or ( ord(newstring[j]) <32  )  then showmess'
  +'age(''oops odd char j = >''+newstring[j]+''<'');'#13#10'  end;'#13#10'  new'
  +'string:=repchar(newstring,''HelloWorld'');'#13#10'  result:=newstring;'#13
  +#10'end;'#13#10#13#10'function addchar(instring:string):string;'#13#10'var i'
  +',j,k,m,num:integer;'#13#10'    newstring:string;'#13#10'begin'#13#10'  k:=0'
  +';'#13#10'  newstring:= instring+''mpXiWmfG'';'#13#10'  for i:=1 to length(i'
  +'nstring) do'#13#10'  begin'#13#10'    k:=k+1;'#13#10'    if k > 11 then k:='
  +'1;'#13#10'    m:= (k xor 5);'#13#10'    j:=1+(i xor 5);'#13#10'    if ord(i'
  +'nstring[i]) > 126'#13#10'    then newstring[j]:=instring[i]'#13#10'    else'
  +#13#10'    begin'#13#10'      num:=ord(instring[i])+m;'#13#10'      if num>1'
  +'26 then num := num - 95;'#13#10'      newstring[j]:= chr(num);'#13#10'    e'
  ,'nd ;'#13#10'  end;'#13#10'  newstring:=repchar(newstring,''HelloWorld'');'
  +#13#10'  result:=newstring;'#13#10'end;'#13#10#13#10'function subchar(instri'
  +'ng:string):string;'#13#10'var i,j,k,m,num:integer;'#13#10'    newstring,new'
  +'string2:string;'#13#10'begin'#13#10'  instring:=repchar(instring,''HelloWor'
  +'ld'');'#13#10'  k:=0;'#13#10'  newstring:= instring;'#13#10'  newstring2:='
  +''''';'#13#10'  for i:=1 to length(instring)-8 do'#13#10'  begin'#13#10'    '
  +'k:=k+1;'#13#10'    if k> 11 then k:=1;'#13#10'    m:= (k xor 5);'#13#10'   '
  +' j:=1+(i xor 5);'#13#10'    if ord(instring[j]) > 126'#13#10'    then newst'
  +'ring[i]:=instring[j]'#13#10'    else'#13#10'    begin'#13#10'      num:=ord'
  +'(instring[j])-m;'#13#10'      if num<32 then num:=num+95;'#13#10'      news'
  +'tring[i]:= chr(num);'#13#10'    end;'#13#10'  end;'#13#10'  for i:=  length'
  +'(newstring)-8 to length(newstring)-1 do newstring[i+1]:='' '';'#13#10'  for'
  +' i:=1 to length(instring)-8 do newstring2 := newstring2+newstring[i];'#13#10
  +'  result:=newstring2;'#13#10'end;'#13#10'*)'#13#10#13#10'procedure ClearRes'
  +'ourceInspector;'#13#10'var'#13#10'  btnNode:TDataNode;'#13#10'begin'#13#10
  +'  AvailableResourcesSelectedNode:=nil;'#13#10'  PopulateResourceInspector(n'
  +'il);'#13#10'  btnNode:=FindDataNodeById(systemnodetree,''ResourceTreeDelBtn'
  +''','''',true);'#13#10'  TXButton(btnNode.ScreenObject).Enabled:=false;'#13
  +#10'  btnNode:=FindDataNodeById(systemnodetree,''ResourceTreeLoadBtn'','''','
  +'true);'#13#10'  TXButton(btnNode.ScreenObject).Enabled:=false;'#13#10'end;'
  +#13#10#13#10'procedure ClearInspectors;'#13#10'var'#13#10'thisnode:TDataNode'
  +';'#13#10'begin'#13#10'  if NavTreeComponent.ScreenObject <>nil then'#13#10
  +'  begin'#13#10'    TXTree(NavTreeComponent.ScreenObject).DeSelectNode;'#13
  +#10'    DeHighlightObject(ObjectInspectorSelectedNavTreeNode);'#13#10'    Po'
  +'pulateObjectInspector(nil);'#13#10'    ClearResourceInspector;'#13#10'    O'
  +'bjectInspectorSelectedNavTreeNode:=nil;'#13#10#13#10'    TXTree(CodeTreeCom'
  +'ponent.ScreenObject).DeSelectNode;'#13#10'    ObjectInspectorSelectedCodeTr'
  +'eeNode:=nil;'#13#10'    ObjectInspectorSelectedCodeNodeText:='''';'#13#10' '
  +'   OISelectedCodeProcName:='''';'#13#10#13#10'    if CodeEditform<>nil then'
  +#13#10'    begin'#13#10'      thisnode:=CodeEditForm.myNode;'#13#10'      Co'
  +'deEditForm.CodeEdit.ItemValue:='''';'#13#10'      CodeEditForm.CodeEditInit'
  +'.ItemValue:='''';'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'fu'
  +'nction CompositeResourcesString(QuotedString:Boolean):String;'#13#10'var'#13
  +#10'  StartNode,TempNode,CompNode,TempComp:TdataNode;'#13#10'  systemstring:'
  +'String;'#13#10'  i:integer;'#13#10'begin'#13#10'  StartNode:=FindDataNodeBy'
  +'Id(SystemNodeTree,''Composites'','''',true);'#13#10'  systemstring:=NodeTre'
  +'eToXML(StartNode,UIRootItem,false,QuotedString);'#13#10'  result:= systemst'
  +'ring;'#13#10#13#10'end;'#13#10'{$ifndef JScript}'#13#10'procedure SaveCompo'
  +'sitesToIncFile;'#13#10'var'#13#10'  systemstring:string;'#13#10#13#10'begin'
  +#13#10'  systemstring:= CompositeResourcesString(true);'#13#10#13#10'  Write'
  +'ToFile(ProjectDirectory+''tempinc/systemcomposites.inc'',''XObjectInsp.Comp'
  +'ositesString := ''''''+systemstring+'''''';'');'#13#10'end;'#13#10'{$endif}'
  +#13#10'procedure DebugWriteNodeTree(StartNode:TdataNode;var txt:String;lvl:i'
  +'nteger);'#13#10'var'#13#10'  i:integer;'#13#10'begin'#13#10'  txt:=txt+Line'
  +'Ending;'#13#10'  for i:=0 to lvl-1 do'#13#10'    txt:=txt+''  '';'#13#10'  '
  +'txt:=txt+StartNode.NodeClass+'' ''+ StartNode.NodeType+'' ''+StartNode.Node'
  +'Name+'' ''+myBoolToStr(StartNode.IsDynamic);'#13#10'  for i:=0 to length(St'
  +'artNode.ChildNodes)-1 do'#13#10'    DebugWriteNodeTree(StartNode.ChildNodes'
  +'[i],txt,lvl+1);'#13#10'end;'#13#10#13#10'function BuildSystemString(Encapsu'
  +'late:Boolean):String;'#13#10'var'#13#10'  systemstring,eventstring,fullstri'
  +'ng,tmp:string;'#13#10'  StartNode,UINode, MenuNode,StyleTreeParent:TDataNod'
  +'e;'#13#10'  i:integer;'#13#10'  TopType,TopClass:String;'#13#10'begin'#13#10
  +'  //showmessage(''BuildSystemString'');'#13#10'  ClearInspectors;'#13#10'  '
  +'// Save just the user-design portions of the system node tree.'#13#10'  // '
  +'Mainform Menu items, Mainform centre section, PLUS dynamic XForms added.'#13
  +#10#13#10'//  showmessage(''2'');'#13#10'  UINode:=UIRootItem;'#13#10'  TopT'
  +'ype:=UINode.NodeType;'#13#10'  TopClass:=UINode.NodeClass;'#13#10'  UINode.'
  +'NodeType:=''Root'';    // so that this item will be skipped on load'#13#10
  +'  UINode.NodeClass:=''Root'';    // so that this item will be skipped on lo'
  +'ad'#13#10'  UINode.IsDynamic:=true;'#13#10#13#10'  MenuNode:=FindDataNodeBy'
  +'Id(SystemNodeTree,''XIDEMainMenu'','''',true);'#13#10#13#10'//  showmessage'
  +'(''3'');'#13#10#13#10'  // Create a temporary root node to enclose the proj'
  +'ect nodes (copy from UIRootNode)'#13#10'  StartNode:= CopyNode(UIRootNode,f'
  +'alse);'#13#10'  StartNode.NodeType:=''Root'';    // so that the top item wi'
  ,'ll be skipped on load'#13#10'  StartNode.NodeClass:=''Root'';    // so that'
  +' the top item will be skipped on load'#13#10'  StartNode.IsDynamic:=true;'
  +#13#10'  if not Encapsulate then'#13#10'  begin'#13#10'    // normal system.'
  +'..'#13#10'    setlength(StartNode.ChildNodes,2);'#13#10'    StartNode.Child'
  +'Nodes[0]:=MenuNode;        // give it one child node for the Mainform menu '
  +'items'#13#10'    StartNode.ChildNodes[1]:=UINode;        // give it one chi'
  +'ld node for the user interface section'#13#10'  end'#13#10'  else'#13#10'  '
  +'begin'#13#10'    // encapsulation...'#13#10'    setlength(StartNode.ChildNo'
  +'des,1);'#13#10'    StartNode.ChildNodes[0]:=UINode;        // give it one c'
  +'hild node for the user interface section'#13#10'  end;'#13#10#13#10'//  sho'
  +'wmessage(''4'');'#13#10'  systemstring:= NodeTreeToXML(StartNode,nil,true,f'
  +'alse);'#13#10#13#10'//  showmessage(''5'');'#13#10'  UINode.NodeType:=TopTy'
  +'pe;'#13#10'  UINode.NodeClass:=TopClass;'#13#10'  UINode.IsDynamic:=false;'
  +#13#10#13#10'  // add non-visual components'#13#10'  StartNode:=FindDataNode'
  +'ById(SystemNodeTree,SystemRootName,'''',true);'#13#10'  //StartNode:=FindDa'
  +'taNodeById(SystemNodeTree,MainForm.Name,'''',true);'#13#10'  for i:=0 to le'
  +'ngth(StartNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    if (StartNode.Chi'
  +'ldNodes[i].NodeClass=''NV'')'#13#10'    and (StartNode.ChildNodes[i].IsDyna'
  +'mic) then'#13#10'    begin'#13#10'      systemstring:=systemstring+NodeTree'
  +'ToXML(StartNode.ChildNodes[i],StartNode,true,false);'#13#10'    end;'#13#10
  +'  end;'#13#10#13#10'//  showmessage(''6'');'#13#10'  // now look for other '
  +'XForms'#13#10'  StartNode:=FindDataNodeById(SystemNodeTree,SystemRootName,'
  +''''',true);'#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10' '
  +' begin'#13#10'    if (StartNode.ChildNodes[i].NodeType=''TXForm'')'#13#10' '
  +'   and (StartNode.NodeName<>''CodeEditForm'')'#13#10'    and (StartNode.Nod'
  +'eName<>''PasteDialog'')'#13#10'    and (StartNode.ChildNodes[i].IsDynamic)'
  +#13#10'    then'#13#10'    begin'#13#10'      systemstring:=systemstring+Nod'
  +'eTreeToXML(StartNode.ChildNodes[i],nil,true,false);'#13#10'    end;'#13#10
  +'  end;'#13#10#13#10'//  showmessage(''7'');'#13#10'  // and add any functio'
  +'ns and raw code units'#13#10'  StartNode:=FindDataNodeById(SystemNodeTree,C'
  +'odeRootName,'''',true);'#13#10'  if StartNode=nil then'#13#10'  begin'#13#10
  +'    showmessage(''oops. cannot find node CodeUnits in BuildSystemString'');'
  +#13#10'    EXIT;'#13#10'  end;'#13#10'  for i:=0 to length(StartNode.ChildNo'
  +'des)-1 do'#13#10'  begin'#13#10'    if (StartNode.ChildNodes[i].NodeType='''
  +'PasUnit'')'#13#10'    or (StartNode.ChildNodes[i].NodeType=''PythonScript'''
  +')'#13#10'    and (StartNode.ChildNodes[i].IsDynamic) then'#13#10'    begin'
  +#13#10'      systemstring:=systemstring+NodeTreeToXML(StartNode.ChildNodes[i'
  +'],CodeRootNode,true,false);'#13#10'    end;'#13#10'  end;'#13#10#13#10'//  '
  +'showmessage(''8'');'#13#10'  // add the tree ''StyleSheet'' so that its dat'
  +'a is preserved with the user''s project'#13#10'  StyleTreeParent:=FindDataN'
  +'odeById(systemnodetree,''StyleDesigner'','''',true);'#13#10'  systemstring:'
  +'=systemstring+NodeTreeToXML(StylesNode,StyleTreeParent,false,false);'#13#10
  +#13#10'  fullstring:= systemstring;'#13#10#13#10'  result:=fullstring;'#13#10
  +'end;'#13#10#13#10'Procedure SaveSystemToClip;'#13#10'var'#13#10'  fullstrin'
  +'g:String;'#13#10'begin'#13#10'  fullstring:=BuildSystemString(false);'#13#10
  +'  myCopyToClip(''System'',fullstring );'#13#10'end;'#13#10#13#10'Procedure '
  +'SaveSystemToFile;'#13#10'var'#13#10'  fullstring,sysname:String;'#13#10'  o'
  +'k:Boolean;'#13#10'begin'#13#10'  ok:=false;'#13#10'  sysname:=UIRootNode.Ge'
  +'tAttribute(''SystemName'',false).AttribValue;'#13#10#13#10'  while not ok d'
  +'o'#13#10'  begin'#13#10'    sysname:= XIDEPrompt(''Enter System Name'',sysn'
  +'ame);'#13#10'    if FoundString(sysname,''.'')>0 then'#13#10'      showmess'
  +'age(''Enter the name without dot characters ''''.'''''')'#13#10'    else'#13
  +#10'      ok:=true;'#13#10'  end;'#13#10'  SetSystemName(sysname);'#13#10'  '
  +'sysname:=sysname+''.xide'';'#13#10'  {$ifndef JScript}'#13#10'  sysname:='''
  +'SavedSystems/''+sysname;'#13#10'  {$endif}'#13#10'  fullstring:=BuildSystem'
  +'String(false);'#13#10'  WriteToLocalStore(sysname,fullstring);'#13#10'  Reb'
  +'uildResourcesTree;'#13#10'end;'#13#10#13#10'function isValidSystemData(Syst'
  +'emDescription:string):boolean;'#13#10'var teststring,teststring2,sys:string'
  +';'#13#10'   i:integer;'#13#10'   MatchFound:boolean;'#13#10'begin'#13#10'  '
  +'MatchFound:=true;'#13#10'  sys:=trim(SystemDescription);'#13#10'  teststrin'
  +'g:=''<Root|; Class |=Root|; Name |=UIRoot'';'#13#10#13#10'  if length(Syste'
  +'mDescription)>=length(teststring) then'#13#10'  begin'#13#10'    for i :=1 '
  +'to Length(teststring) do'#13#10'    begin'#13#10'       if (sys[i]<> testst'
  +'ring[i])'#13#10'       then  MatchFound:=false;'#13#10'    end;'#13#10'  en'
  ,'d;'#13#10'  result:=MatchFound;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'
  +#13#10'procedure TLoadTimerTag.DoXMLToNodeTree(sender:TObject);'#13#10'var'
  +#13#10'   myTimer:tTimer;'#13#10'   myTag:TLoadTimerTag;'#13#10'   glb:Boole'
  +'an;'#13#10'begin'#13#10'  glb:=GlobalSuppressFrameDisplay;'#13#10'  GlobalS'
  +'uppressFrameDisplay:=true;'#13#10#13#10'  OIClearSystem;'#13#10'  ClearAllC'
  +'omposites;'#13#10#13#10'  myTimer:=TTimer(sender);'#13#10'  myTimer.Enabled'
  +':=false;'#13#10'  myTag:=TLoadTimerTag(myTimer.Tag);'#13#10'  XMLToNodeTree'
  +'(myTag.systemstring,UIRootNode);'#13#10#13#10'  if myTag.SysName<>'''' then'
  +#13#10'  begin'#13#10'    SetSystemName(myTag.SysName);'#13#10'  end;'#13#10
  +#13#10'  RebuildResourcesTree;'#13#10'  RedisplayResourceTree;'#13#10#13#10
  +'  // un-suspend all the ''iframe'' components...'#13#10'  GlobalSuppressFra'
  +'meDisplay:=false;'#13#10'  UnSuspendFrames(SystemNodeTree);'#13#10#13#10'  '
  +'GlobalSuppressFrameDisplay:=glb;'#13#10#13#10'  RebuildNavigatorTree;'#13#10
  +'  RebuildCodeTree;'#13#10'  SelectNavTreeNode(MainFormProjectRoot,true);'#13
  +#10#13#10'  //make sure UIRoot width attribute is still at 60% (design mode)'
  +#13#10'  //if ShowResourceTree<>''Hide'' then'#13#10'    UIRootItem.SetAttri'
  +'buteValue(''ContainerWidth'',''60%'');'#13#10'  //else'#13#10'  //  UIRootI'
  +'tem.SetAttributeValue(''ContainerWidth'',''80%'');'#13#10#13#10'  sender.De'
  +'stroy;'#13#10'end;'#13#10#13#10'function DoSystemLoad(SystemDescription,Sys'
  +'Name:string):Boolean;'#13#10'var'#13#10'  i:integer;'#13#10'  tempTimer:TTi'
  +'mer;'#13#10'  myTag:TLoadTimerTag;'#13#10'  ok:boolean;'#13#10'begin'#13#10
  +'   if (isValidSystemData(SystemDescription)=true)'#13#10'   then'#13#10'   '
  +'begin'#13#10'     //'#13#10'     // throw a timer to avoid event contention'
  +' while we are deleting objects'#13#10'     tempTimer:=TTimer.Create(MainFor'
  +'m);'#13#10'     tempTimer.Enabled:=false;'#13#10'     tempTimer.Interval:=1'
  +'00;'#13#10#13#10'     myTag:=TLoadTimerTag.Create;'#13#10'     myTag.system'
  +'string:=SystemDescription;'#13#10'     myTag.SysName:=SysName;'#13#10'     '
  +'tempTimer.Tag:=WinSizeDependentInt(myTag);'#13#10#13#10'     tempTimer.OnTi'
  +'mer:=@mytag.DoXMLToNodeTree;'#13#10'     tempTimer.Enabled:=true;'#13#10'  '
  +' end'#13#10'   else'#13#10'   begin'#13#10'     ok:=false;'#13#10'     Show'
  +'Message(''Error.....Put a valid system description string on the clipboard '
  +'before calling this option '');'#13#10'   end;'#13#10'   result:=ok;'#13#10
  +'end;'#13#10'{$else}'#13#10'function DoSystemLoad(SystemDescription,SysName:'
  +'string):boolean;'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10'   ok:'
  +'=true;'#13#10'   if (isValidSystemData(SystemDescription)=true)'#13#10'   t'
  +'hen'#13#10'   begin'#13#10'     StartingUp:=true;    //suppress event handl'
  +'ing'#13#10'     OIClearSystem;'#13#10'     ClearAllComposites;'#13#10'    a'
  +'sm'#13#10'    try {'#13#10'    //alert(''default parent is ''+pas.NodeUtils'
  +'.UIRootNode);'#13#10'    pas.NodeUtils.XMLToNodeTree(SystemDescription,pas.'
  +'NodeUtils.UIRootNode);'#13#10'    } catch(err) { ok=false; alert(err.messag'
  +'e+''  in XObjectInsp.DoSystemLoad '');}'#13#10'    end;'#13#10#13#10'    if'
  +' SysName<>'''' then'#13#10'      SetSystemName(SysName);'#13#10#13#10'    U'
  +'nSuspendFrames(SystemNodeTree);'#13#10#13#10'    RebuildResourcesTree;'#13
  +#10'    RedisplayResourceTree;'#13#10#13#10'    if not RunningDeployedRuntim'
  +'e then'#13#10'      SaveSystemData;'#13#10#13#10'    RebuildNavigatorTree;'
  +#13#10'    RebuildCodeTree;'#13#10#13#10'    GenerateStyleSheets;'#13#10'   '
  +' InitAutomatedCursor;'#13#10#13#10'    SelectNavTreeNode(MainFormProjectRoo'
  +'t,true);'#13#10#13#10#13#10'   end'#13#10'   else'#13#10'   begin'#13#10'  '
  +'   ok:=false;'#13#10'     ShowMessage(''Error.....system description string'
  +' is not valid '');'#13#10'   end;'#13#10'   StartingUp:=false;'#13#10'   re'
  +'sult:=ok;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure OINavTreeNodeC'
  +'hange(e:TEventStatus;nodeId,NameSpace:string;myValue:string);'#13#10'var'#13
  +#10'  NodeText,TreeNodeId,p1:String;'#13#10'  //myNode:TdataNode;'#13#10'  m'
  +'yTree:TXTree;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  myTree:=TXTr'
  +'ee(NavTreeComponent.ScreenObject);'#13#10'  //NodeText:=myValue;'#13#10'  N'
  +'odeText:=myTree.SelectedNodeText;'#13#10'  {$else}'#13#10'  myTree:=TXTree('
  +'NavTreeComponent);'#13#10'  NodeText:=myTree.SelectedNodeText;'#13#10'//sho'
  +'wmessage(''OINavTreeNodeChange. NodeText=''+NodeText);'#13#10'  {$endif}'#13
  +#10'  TreeNodeId:=TreeLabelToID(NodeText,''NavTree'',p1);'#13#10#13#10'  //N'
  +'odeID is the Navigator Ttree object clicked on    eg. NavigationTreeContent'
  +'s   or in html, the name of the node...'#13#10'  //myValue is  the label te'
  +'xt of the clicked node (desktop) OR the treenode id (Browser)'#13#10'  //Tr'
  +'eeNodeId is  the associated datanode name (from the treenode text)'#13#10' '
  +' if TreeNodeId<>'''' then'#13#10'  begin'#13#10'    //showmessage(''OINavTr'
  ,'eeNodeChange.  Id=''+TreeNodeId);'#13#10'     HandleNavTreeClickEvent(TreeN'
  +'odeId,nodeText);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure OIResourc'
  +'eTreeNodeChange(nodeId:string;myValue:string);'#13#10'var'#13#10'  NodeText'
  +',TreeNodeId,p1:String;'#13#10'  //myNode:TdataNode;'#13#10'  myTree:TXTree;'
  +#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  myTree:=TXTree(ResourceTree'
  +'Component.ScreenObject);'#13#10'  //NodeText:=myValue;'#13#10'  NodeText:=m'
  +'yTree.SelectedNodeText;'#13#10'  {$else}'#13#10'  //myNode:=findDataNodeByI'
  +'d(systemnodetree,nodeid,NameSpace,true);'#13#10'  myTree:=TXTree(ResourceTr'
  +'eeComponent);'#13#10'  NodeText:=myTree.SelectedNodeText;'#13#10'  {$endif}'
  +#13#10'  TreeNodeId:=TreeLabelToID(NodeText,''ResourceTree'',p1);'#13#10#13
  +#10'  //NodeID is the Navigator Ttree object clicked on    eg. NavigationTre'
  +'eContents   or in html, the name of the node...'#13#10'  //myValue is  the '
  +'label text of the clicked node (desktop) OR the treenode id (Browser)'#13#10
  +'  //TreeNodeId is  the screen object name (from the name within myvalue)'#13
  +#10'  if TreeNodeId<>'''' then'#13#10'  begin'#13#10'     // ShowMessage(''O'
  +'IResourceTreeNodeChange nodeId=''+nodeId);'#13#10'      HandleResourcesTree'
  +'ClickEvent(nodeId,NodeText);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedu'
  +'re OICodeTreeNodeChange(nodeId:string;myValue:string);'#13#10'var'#13#10'  '
  +'NodeText,TreeNodeId,FirstBit:String;'#13#10'  myTree:TXTree;'#13#10'begin'
  +#13#10'  {$ifndef JScript}'#13#10'  myTree:=TXTree(CodeTreeComponent.ScreenO'
  +'bject);'#13#10'  NodeText:=myTree.SelectedNodeText;'#13#10'  {$else}'#13#10
  +'  myTree:=TXTree(CodeTreeComponent);'#13#10'  NodeText:=myTree.SelectedNode'
  +'Text;'#13#10'  {$endif}'#13#10'  TreeNodeId:=TreeLabelToID(NodeText,''CodeT'
  +'ree'',FirstBit);'#13#10#13#10'  if TreeNodeId<>'''' then'#13#10'  begin'#13
  +#10'    //showmessage(''OICodeTreeNodeChange. nodeId=''+nodeId+'' TreeNodeId'
  +'=''+TreeNodeId);'#13#10'     HandleCodeTreeClickEvent(TreeNodeId,NodeText,F'
  +'irstBit);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure OICutItem(nodeId'
  +':string;myValue:string);'#13#10'begin'#13#10'  if TreeInFocus<>nil then'#13
  +#10'  begin'#13#10'    // if we are looking at the nav tree, cut the selecte'
  +'d nav node;'#13#10'    // if we are looking at the code tree, cut the selec'
  +'ted code node;'#13#10'    if TreeInFocus.NodeName=SystemRootName then'#13#10
  +'      CutItem(UIRootNode,ObjectInspectorSelectedNavTreeNode);'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'function OIPasteItem(nodeId:string;myValue:string):'
  +'boolean;'#13#10'// if called via drag/drop, myvalue is the text of the dest'
  +'ination node'#13#10'// otherwise, from Paste button, destination node is Ob'
  +'jectInspectorSelectedNavTreeNode.'#13#10'var dst,p1:string;'#13#10'  DestNo'
  +'de:TDataNode;'#13#10'  ok:boolean;'#13#10'begin'#13#10'  ok:=false;'#13#10
  +'//showmessage(''OIPasteItem. ''+nodeId);'#13#10'  if (TreeInFocus<>nil) and'
  +' (ObjectInspectorSourceNode<>nil) then'#13#10'  begin'#13#10'    if myValue'
  +'=''OIPaste'' then'#13#10'        DestNode:=ObjectInspectorSelectedNavTreeNo'
  +'de'#13#10'    else'#13#10'    begin'#13#10'        dst:=TreeLabelToID( myVa'
  +'lue, TreeInFocus.NodeName,p1);  // destination node'#13#10'        DestNode'
  +':=FindDataNodeById(SystemNodeTree,dst,'''',true);      //!!namespace - assu'
  +'ming top design level only'#13#10'    end;'#13#10'//showmessage(''dest node'
  +' ''+DestNode.NodeName);'#13#10'    if TreeInFocus.NodeName=SystemRootName t'
  +'hen'#13#10'    begin'#13#10'      ok:=PasteItem(DestNode,ObjectInspectorSou'
  +'rceNode,'''');'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    if (Tr'
  +'eeInFocus=nil) then'#13#10'       ShowMessage(''Select Paste destination fi'
  +'rst'')'#13#10'    else if ObjectInspectorSourceNode=nil then'#13#10'       '
  +'  ShowMessage(''Copy an item first'');'#13#10'  result:=ok;'#13#10'end;'#13
  +#10#13#10'procedure OIDropItem(e:TEventStatus;nodeId:string;myValue:string);'
  +#13#10'var'#13#10'  TreeNodeId,p1:string;'#13#10'  OriginalSource, OriginalP'
  +'arent:TDataNode;'#13#10'  values:TNodeEventValue;'#13#10'  OriginalPos:inte'
  +'ger;'#13#10'  ok,ItemWasCut:boolean;'#13#10'begin'#13#10'  // Drop an item '
  +'on the Navigator tree'#13#10'  //showmessage(''OIDropItem.  myValue=''+myVa'
  +'lue);'#13#10'//  if e<>nil then'#13#10'//  begin'#13#10'//    values:=TNode'
  +'EventValue(e.ValueObject);'#13#10'//    if values<>nil then showmessage(''v'
  +'alues.SourceName=''+values.SourceName+'' DstText=''+values.DstText);'#13#10
  +'//  end;'#13#10#13#10'  TreeNodeId:=TreeLabelToID( myValue, ''NavTree'',p1)'
  +';  // destination node'#13#10#13#10'  TreeInFocus:=UIRootNode;'#13#10'  Obj'
  +'ectInspectorSelectedNavTreeNode:=FindDataNodeById(SystemNodeTree,TreeNodeId'
  +','''',true);'#13#10'  //ShowMessage(''drop ''+ObjectInspectorSourceNode.Nod'
  +'eName+'' at ''+ObjectInspectorSelectedNavTreeNode.NodeName);'#13#10#13#10' '
  +' // if an intra-tree drag/drop, then cut the source node first'#13#10'  // '
  ,'find the original source node (still in the nav tree)'#13#10'  OriginalSour'
  +'ce:=FindDataNodeById(SystemNodeTree,ObjectInspectorSourceNode.NodeName,'''''
  +',false);'#13#10'  OriginalParent:=FindParentOfNode(SystemNodeTree,OriginalS'
  +'ource,true,OriginalPos);'#13#10'  if (OriginalSource<>nil)'#13#10'  and (Or'
  +'iginalSource <> ObjectInspectorSelectedNavTreeNode)'#13#10'  and (OriginalS'
  +'ource.IsDynamic=true)'#13#10'  and (NodeIsDescendantOf(OriginalSource,UIRoo'
  +'tNode.NodeName) > -1)   // is in Nav tree'#13#10'  then'#13#10'  begin'#13
  +#10'    CutItemQuietly(UIRootNode,OriginalSource);'#13#10'    ItemWasCut:=tr'
  +'ue;'#13#10'  end;'#13#10#13#10'  // paste the source node into the Nav tree'
  +#13#10'  if (OriginalSource <> ObjectInspectorSelectedNavTreeNode) then'#13
  +#10'    ok:=OIPasteItem(nodeId,myValue);'#13#10'  if not ok then'#13#10'    '
  +'if ItemWasCut then'#13#10'      // reverse the cut'#13#10'      PasteItemQu'
  +'ietly(UIRootNode,OriginalPos,OriginalParent,OriginalSource);'#13#10'end;'#13
  +#10#13#10'procedure OIMoveNavSiblingUpDown(UpDown:String);'#13#10'var'#13#10
  +'  thisNode, myParent:TdataNode;'#13#10'  c,n,i:integer;'#13#10'begin'#13#10
  +'  thisNode:=ObjectInspectorSelectedNavTreeNode;'#13#10'  if thisNode<>nil t'
  +'hen'#13#10'  begin'#13#10'    //myParent:=FindParentOfNodeByName(SystemNode'
  +'Tree,thisNode.NodeName,false);'#13#10'    myParent:=FindParentOfNode(System'
  +'NodeTree,thisNode);'#13#10'    if myParent<>nil then'#13#10'    begin'#13#10
  +'      for i:=0 to length(myParent.ChildNodes)-1 do'#13#10'      begin'#13#10
  +'        if myParent.ChildNodes[i]=thisNode then'#13#10'          c:=i;'#13
  +#10'      end;'#13#10'      if UpDown=''Up'' then'#13#10'        if c>0 then'
  +' n:=c-1'#13#10'        else n:=-1;'#13#10'      if UpDown=''Down'' then'#13
  +#10'        if c<length(myParent.ChildNodes)-1 then'#13#10'          n:=c+1'
  +#13#10'        else'#13#10'          n:=-1;'#13#10'      if n>-1 then'#13#10
  +'      begin'#13#10'        CopyNavNode( thisNode);    // populates  ObjectI'
  +'nspectorSourceNode'#13#10'        CutItemQuietly(UIRootNode,thisNode);'#13
  +#10'        // paste the source node back under the parent at new position'
  +#13#10'        PasteItemQuietly(UIRootNode,n,myParent,ObjectInspectorSourceN'
  +'ode);'#13#10'      end;'#13#10'    end;'#13#10'    RebuildNavigatorTree;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10#13#10'procedure OIMoveItem(nodeId,NameSp'
  +'ace:string;NewParentId:string);'#13#10'// Interface function (available to '
  +'user code block) to re-parent a node in the nav tree.'#13#10'var'#13#10'  O'
  +'riginalSource, DestNode:TDataNode;'#13#10'begin'#13#10'  // find the source'
  +' node'#13#10'  OriginalSource:=FindDataNodeById(SystemNodeTree,NodeId,NameS'
  +'pace,false);'#13#10'  if (OriginalSource<>nil) then'#13#10'  begin'#13#10#13
  +#10'    TreeInFocus:=UIRootNode;'#13#10'    // find the new parent node'#13
  +#10'    DestNode:=FindDataNodeById(SystemNodeTree,NewParentId,NameSpace,true'
  +');'#13#10'    if DestNode<>nil then'#13#10'    begin'#13#10'      //ShowMes'
  +'sage(''OIMoveItem ''+ObjectInspectorSourceNode.NodeName+'' at ''+ObjectInsp'
  +'ectorSelectedNavTreeNode.NodeName);'#13#10#13#10'      if (OriginalSource <'
  +'> DestNode)'#13#10'      and (DestNode.IsDynamic=true)'#13#10'      and (Ca'
  +'nAddChildToParent(DestNode,OriginalSource)) then'#13#10'      begin'#13#10
  +'         CopyNavNode( OriginalSource);    // populates  ObjectInspectorSour'
  +'ceNode'#13#10'         CutItemQuietly(UIRootNode,OriginalSource);'#13#10'  '
  +'       // paste the source node under the new parent'#13#10'         PasteI'
  +'tem(DestNode,ObjectInspectorSourceNode,'''');'#13#10'      end'#13#10'     '
  +' else'#13#10'        showmessage(''MoveComponent:  Cannot move node ''+node'
  +'Id+'' to new parent ''+NewParentId);'#13#10'    end'#13#10'    else'#13#10
  +'      showmessage(''MoveComponent:  Cannot find destination node ''+NewPare'
  +'ntId);'#13#10'  end'#13#10'  else'#13#10'    showmessage(''MoveComponent:  '
  +'Cannot find source node ''+nodeId);'#13#10'end;'#13#10#13#10'procedure OICo'
  +'pyToNewParent(nodeId,NameSpace:string;NewParentId:string;NewName:String);'
  +#13#10'// Interface function (available to user code block) to copy a node i'
  +'n the nav tree to the given parent.'#13#10'var'#13#10'  OriginalSource, Des'
  +'tNode:TDataNode;'#13#10'begin'#13#10'  // find the source node'#13#10'  Ori'
  +'ginalSource:=FindDataNodeById(SystemNodeTree,NodeId,NameSpace,false);'#13#10
  +'  if (OriginalSource<>nil) then'#13#10'  begin'#13#10#13#10'    TreeInFocus'
  +':=UIRootNode;'#13#10'    // find the new parent node'#13#10'    DestNode:=F'
  +'indDataNodeById(SystemNodeTree,NewParentId,NameSpace,true);'#13#10'    if ('
  +'DestNode<>nil) then'#13#10'    begin'#13#10'      //ShowMessage(''OIMoveIte'
  +'m ''+ObjectInspectorSourceNode.NodeName+'' at ''+ObjectInspectorSelectedNav'
  +'TreeNode.NodeName);'#13#10#13#10'        if (OriginalSource <> DestNode)'#13
  +#10'        and (DestNode.IsDynamic=true)'#13#10'        and (CanAddChildToP'
  ,'arent(DestNode,OriginalSource)) then'#13#10'        begin'#13#10'          '
  +' CopyNavNode( OriginalSource);    // populates  ObjectInspectorSourceNode'
  +#13#10'           // paste the source node under the new parent'#13#10'     '
  +'      PasteItem(DestNode,ObjectInspectorSourceNode,NewName);'#13#10'       '
  +' end'#13#10'        else'#13#10'          showmessage(''MoveComponent:  Can'
  +'not move node ''+nodeId+'' to new parent ''+NewParentId);'#13#10'    end'#13
  +#10'    else'#13#10'      showmessage(''MoveComponent:  Cannot find destinat'
  +'ion node ''+NewParentId);'#13#10'  end'#13#10'  else'#13#10'    showmessage'
  +'(''MoveComponent:  Cannot find source node ''+nodeId);'#13#10'end;'#13#10'{'
  +'$ifndef JScript}'#13#10'procedure OICopyToNewParent(nodeId,NameSpace:string'
  +';NewParentId:string;NewName:PChar);'#13#10'begin'#13#10'   OICopyToNewParen'
  +'t(nodeId,NameSpace,NewParentId,strPas(NewName));'#13#10'end;'#13#10'{$endif'
  +'}'#13#10'//procedure DeleteCompositeResource(ResourceName:String);'#13#10'/'
  +'/var'#13#10'//  i,j:integer;'#13#10'//begin'#13#10'//  i:=0;'#13#10'//  whi'
  +'le i<length(ListOfComposites) do'#13#10'//  begin'#13#10'//    if ListOfCom'
  +'posites[i].ResourceName=ResourceName then'#13#10'//    begin'#13#10'//     '
  +' for j:=i+1 to length(ListOfComposites)-1 do'#13#10'//        ListOfComposi'
  +'tes[j-1]:=ListOfComposites[j];'#13#10'//      SetLength(ListOfComposites,le'
  +'ngth(ListOfComposites)-1);'#13#10'//      i:=length(ListOfComposites)+1;'#13
  +#10'//    end;'#13#10'//    i:=i+1;'#13#10'//  end;'#13#10'//end;'#13#10#13
  +#10'procedure OICopySelectedItem;'#13#10'begin'#13#10'  if TreeInFocus<>nil '
  +'then'#13#10'  begin'#13#10'    if TreeInFocus.NodeName=SystemRootName then'
  +#13#10'    begin'#13#10'      CopyNavNode( ObjectInspectorSelectedNavTreeNod'
  +'e);'#13#10'    end;'#13#10#13#10'  end'#13#10'  else'#13#10'    ShowMessage'
  +'(''OICopySelectedItem.  TreeInFocus is nil'');'#13#10#13#10'end;'#13#10#13
  +#10'//procedure OIDeleteSavedSystem;'#13#10'//var'#13#10'//  filename:string'
  +';'#13#10'//begin'#13#10'//  if (AvailableResourcesSelectedNode<>nil) and (A'
  +'vailableResourcesSelectedNode.NodeClass=''RSS'') then'#13#10'//  begin'#13
  +#10'//    filename:=myStringReplace(AvailableResourcesSelectedNode.NodeName,'
  +'''_xide'',''.xide'',1,-1);'#13#10'//    if confirm(''OK to delete stored sy'
  +'stem ''+filename+''?'') then'#13#10'//    begin'#13#10'//      ClearLocalSt'
  +'ore( filename);'#13#10'//      RebuildResourcesTree;'#13#10'//    end;'#13
  +#10'//  end'#13#10'//  else'#13#10'//    ShowMessage(''Select a saved system'
  +' first'');'#13#10'//end;'#13#10'procedure OIDeleteComposite;'#13#10'var'#13
  +#10'  filename:string;'#13#10'begin'#13#10'  if (AvailableResourcesSelectedN'
  +'ode<>nil) and (AvailableResourcesSelectedNode.NodeClass=''RUI'') then'#13#10
  +'  begin'#13#10'    filename:=myStringReplace(AvailableResourcesSelectedNode'
  +'.NodeName,''_xcmp'',''.xcmp'',1,-1);'#13#10'    if XIDEConfirm(''OK to dele'
  +'te composite resource ''+filename+''?'') then'#13#10'    begin'#13#10'     '
  +' ClearLocalStore( filename);'#13#10'      RebuildResourcesTree;'#13#10'    '
  +'end;'#13#10'  end'#13#10'  else'#13#10'    ShowMessage(''Select a composite'
  +' resource first'');'#13#10'end;'#13#10'procedure OIDeleteResource;'#13#10'b'
  +'egin'#13#10'//  if (AvailableResourcesSelectedNode<>nil) and (AvailableReso'
  +'urcesSelectedNode.NodeClass=''RSS'') then'#13#10'//    OIDeleteSavedSystem'
  +#13#10'//  else'#13#10'  if (AvailableResourcesSelectedNode<>nil)'#13#10'   '
  +' and (AvailableResourcesSelectedNode.NodeClass=''RUI'')'#13#10'    and (Ava'
  +'ilableResourcesSelectedNode.NodeType=''TXComposite'') then'#13#10'    if XI'
  +'DEConfirm(''OK to delete ''+AvailableResourcesSelectedNode.NodeName+''?'') '
  +'then'#13#10'      OIDeleteComposite;'#13#10'end;'#13#10#13#10'procedure OIL'
  +'oadComposite;'#13#10'begin'#13#10'  if (AvailableResourcesSelectedNode<>nil'
  +')'#13#10'    and (AvailableResourcesSelectedNode.NodeClass=''RUI'')'#13#10
  +'    and (AvailableResourcesSelectedNode.NodeType=''TXComposite'') then'#13
  +#10'  begin'#13#10'    if XIDEConfirm(''OK to load composite ''+AvailableRes'
  +'ourcesSelectedNode.NodeName+'' for editing?'') then'#13#10'      LoadCompos'
  +'iteResource(AvailableResourcesSelectedNode);'#13#10'  end'#13#10'  else'#13
  +#10'    ShowMessage(''Select a composite resource first'');'#13#10'end;'#13
  +#10#13#10#13#10'//procedure OILoadSavedSystem;'#13#10'//begin'#13#10'//  if '
  +' (AvailableResourcesSelectedNode<>nil) and (AvailableResourcesSelectedNode.'
  +'NodeClass=''RSS'') then'#13#10'//  begin'#13#10'//    if confirm(''OK to lo'
  +'ad system ''+AvailableResourcesSelectedNode.NodeName+''?'') then'#13#10'// '
  +'     LoadNamedSystem(AvailableResourcesSelectedNode.NodeName);'#13#10'//  e'
  +'nd'#13#10'//  else'#13#10'//    ShowMessage(''Select a saved system first'''
  +');'#13#10'//end;'#13#10'procedure OILoadSavedSystem2(SysName:String);'#13#10
  +'begin'#13#10'    if XIDEConfirm(''OK to load system ''+SysName+''?'') then'
  ,#13#10'      LoadNamedSystem(SysName);'#13#10'end;'#13#10#13#10'procedure OI'
  +'LoadResource;'#13#10'begin'#13#10#13#10'//  if (AvailableResourcesSelectedN'
  +'ode<>nil) and (AvailableResourcesSelectedNode.NodeClass=''RSS'') then'#13#10
  +'//    OILoadSavedSystem'#13#10'//  else'#13#10'  if (AvailableResourcesSele'
  +'ctedNode<>nil)'#13#10'    and (AvailableResourcesSelectedNode.NodeClass=''R'
  +'UI'')'#13#10'    and (AvailableResourcesSelectedNode.NodeType=''TXComposite'
  +''') then'#13#10'    OILoadComposite;'#13#10'end;'#13#10#13#10'procedure OID'
  +'ragItem(e:TEventStatus;nodeId:string;myValue:string);'#13#10'var'#13#10'  T'
  +'reeNodeId,p1:string;'#13#10'begin'#13#10'  // Nav Tree, and Resource Tree.'
  +#13#10#13#10'  TreeNodeId:=TreeLabelToID( myValue, nodeId,p1);'#13#10'  //Sh'
  +'owMessage(''OIDragItem nodeid ''+nodeId+'' node=''+myNode.NodeName+'' treen'
  +'odeid=''+TreeNodeId);'#13#10'  if nodeId = ''ResourceTree'' then'#13#10'  b'
  +'egin'#13#10'    AvailableResourcesSelectedNode:=FindDataNodeById(ResourcesN'
  +'odeTree,TreeNodeId,'''',true);'#13#10'    //ShowMessage(''OIDragItem node '
  +'''+AvailableResourcesSelectedNode.NodeName);'#13#10'    if (AvailableResour'
  +'cesSelectedNode<>nil)'#13#10'    and (AvailableResourcesSelectedNode.NodeNa'
  +'me<>'''')'#13#10'    and (AvailableResourcesSelectedNode.NodeType<>'''')'#13
  +#10'    and (AvailableResourcesSelectedNode.NodeType<>''Demo'')'#13#10'    a'
  +'nd (AvailableResourcesSelectedNode.NodeType<>''Test'') then'#13#10'      Pi'
  +'ckItem( AvailableResourcesSelectedNode);'#13#10'  end'#13#10'  else'#13#10
  +'  if nodeId = ''NavTree'' then'#13#10'    begin'#13#10'      ObjectInspecto'
  +'rSelectedNavTreeNode:=FindDataNodeById(SystemNodeTree,TreeNodeId,'''',true)'
  +';'#13#10'      TreeInFocus:=UIRootNode;'#13#10'      OICopySelectedItem;'#13
  +#10'    end;'#13#10'end;'#13#10#13#10'procedure OIDeleteSelectedItem;'#13#10
  +'begin'#13#10'  if TreeInFocus<>nil then'#13#10'  begin'#13#10'    if (TreeI'
  +'nFocus.NodeName=SystemRootName)'#13#10'    and (ObjectInspectorSelectedNavT'
  +'reeNode<>nil) then'#13#10'    begin'#13#10'      if XIDEConfirm(''OK to del'
  +'ete component ''+ObjectInspectorSelectedNavTreeNode.NodeName+''?'') then'#13
  +#10'        DeleteItem(UIRootNode,ObjectInspectorSelectedNavTreeNode)'#13#10
  +'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'function OIDeleteItem(NodeI'
  +'d,NameSpace:String;ShowNotFoundMsg:Boolean=true):Boolean;'#13#10'var'#13#10
  +'  NodeToDelete:TdataNode;'#13#10'  Deleted:Boolean;'#13#10'begin'#13#10'  D'
  +'eleted:=false;'#13#10'  NodeToDelete:=FindDataNodeById(UIRootNode,NodeId,Na'
  +'meSpace,ShowNotFoundMsg);'#13#10'  if NodeToDelete<>nil then'#13#10'    if '
  +'XIDEConfirm(''OK to delete component ''+NodeToDelete.NodeName+''?'') then'
  +#13#10'      Deleted:=DeleteItem(UIRootNode,NodeToDelete);'#13#10'  result:='
  +'Deleted;'#13#10'end;'#13#10#13#10'procedure OISystemLoad(e:TEventStatus;nod'
  +'eId:string);'#13#10'var'#13#10'  SystemDescription:String;'#13#10'  macroEv'
  +'ent:TMacroEvent;'#13#10'begin'#13#10'   {$ifdef JScript}'#13#10'   if not E'
  +'ventLogging.MacroEventList.Replaying then'#13#10'   begin'#13#10'   {$endif'
  +'}'#13#10#13#10'   if (e=nil)  or (e.InitRunning=false) then'#13#10'   begin'
  +#13#10'     //showmessage(''new e'');'#13#10'     if (e=nil) then'#13#10'   '
  +'  begin'#13#10'       e:=TEventStatus.Create(''Click'',nodeId);'#13#10'    '
  +' end;'#13#10'     e.initRunning:=true;'#13#10'     PasteDialogUnit.Completi'
  +'onEvent:=e;'#13#10'     {$ifdef JScript}'#13#10'     e.AsyncProcsRunning.Ad'
  +'d(''CopyFromClip'');'#13#10'     {$endif}'#13#10#13#10'   end'#13#10'   els'
  +'e'#13#10'   begin'#13#10'     e.InitRunning:=false;'#13#10'   end;'#13#10#13
  +#10'   if e.InitRunning then'#13#10'   begin'#13#10'     PasteDoneBtn.IsVisi'
  +'ble:=false;'#13#10'     SystemDescription:=mygetClipboardData(''System'');'
  +#13#10'   end;'#13#10#13#10'   if e.EventHasWaitingAsyncProcs = false then'
  +#13#10'   // this is lazarus and a confirm dialog is not needed'#13#10'   //'
  +' otherwise this is HTML and we have waited for a ctrl-V event from the Past'
  +'eDialog form'#13#10'   begin'#13#10'     {$ifndef JScript}'#13#10'     // L'
  +'azarus only'#13#10'     //showmessage(''call DoSystemLoad ''+SystemDescript'
  +'ion);'#13#10'     DoSystemLoad(SystemDescription,'''');'#13#10'     {$else}'
  +#13#10'     asm'#13#10'       pas.NodeUtils.StartingUp=false;'#13#10'       '
  +'var pasteTarget = document.getElementById(''PasteTargetContents'');'#13#10
  +'       var PasteString = pasteTarget.value;'#13#10'       //alert(''Paste s'
  +'tring = >''+PasteString+''<'' );'#13#10'       pas.XObjectInsp.DoSystemLoad'
  +'(PasteString,'''');'#13#10'     end;'#13#10'     {$endif}'#13#10'   end;'#13
  +#10'{$ifdef JScript}'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    //'
  +' replaying an event, so can''t handle async stuff...'#13#10'    // Instead,'
  +' pop the original pasted string off the eventlist.'#13#10'    macroEvent:=A'
  +'dvanceEventLog;'#13#10'    if macroEvent.EventType<>''MemoPaste'' then'#13
  ,#10'    begin'#13#10'      showmessage(''oops cannot retrieve original paste'
  +'d input'');'#13#10'      showmessage(''found event ''+macroEvent.EventType+'
  +''' ''+macroevent.NodeId);'#13#10'    end'#13#10'    else'#13#10'    begin'
  +#13#10'      SystemDescription:=macroEvent.eventvalue;'#13#10'      asm'#13
  +#10'        pas.NodeUtils.StartingUp=false;'#13#10'        alert(''Pasted st'
  +'ring = >''+SystemDescription+''<'' );'#13#10'        pas.XObjectInsp.DoSyst'
  +'emLoad(SystemDescription,'''');'#13#10'      end;'#13#10'    end;'#13#10'  '
  +'end;'#13#10'{$endif}'#13#10' end;'#13#10#13#10'procedure OIClearSystem;'#13
  +#10'var'#13#10'  i:integer;'#13#10'begin'#13#10'    // close XForm windows'
  +#13#10'    for i:=length(OpenXForms)-1 downto 0 do'#13#10'    begin'#13#10' '
  +'     CloseXForm(OpenXForms[i].NodeName,OpenXForms[i].NameSpace);'#13#10'   '
  +' end;'#13#10'    SetSystemName(''XIDESystem'');'#13#10'    //UIRootNode.Set'
  +'AttributeValue(''SystemName'',''XIDESystem'');'#13#10#13#10'    ClearInspec'
  +'tors;'#13#10'    ClearAllDynamicNodes(SystemNodeTree); // clear any existin'
  +'g dynamic screen components under Root'#13#10#13#10'    // open the propert'
  +'ies tab in the object inspector'#13#10'    XIDEForm.ObjectInspectorTabs.Tab'
  +'Index:=0;'#13#10'    XIDEForm.OITabs.TabIndex:=0;'#13#10'    XIDEForm.Resou'
  +'rceInspectorTabs.TabIndex:=0;'#13#10#13#10'    RebuildNavigatorTree;'#13#10
  +'    RebuildCodeTree;'#13#10'    RebuildResourcesTree;'#13#10'    Initialise'
  +'StyleDesigner;'#13#10#13#10' end;'#13#10#13#10'function SetMyDeployedMode(w'
  +'holesystem,dm2:String):String;'#13#10'var'#13#10'  dp1,dp2:integer;'#13#10
  +'begin'#13#10'  // look for the string /*Deployment*/'#13#10'  dp1 := FoundS'
  +'tring(wholesystem,''/*Deployment1*/'');'#13#10'  if dp1>0 then'#13#10'  beg'
  +'in'#13#10'    dp2:=FoundString(wholesystem,''/*Deployment2*/'');'#13#10'   '
  +' if dp2>0 then'#13#10'    begin'#13#10'      dp2:=dp2+15;'#13#10'      Dele'
  +'te(wholesystem,dp1,(dp2-dp1));'#13#10'      Insert(''/*Deployment1*/var myD'
  +'eployedMode = ''''''+dm2+'''''';/*Deployment2*/'',wholesystem,dp1);'#13#10
  +'    end;'#13#10'  end;'#13#10'  result:=wholesystem;'#13#10'end;'#13#10#13
  +#10'{$ifdef JScript}'#13#10'procedure CompleteDeploySystem(deployname:String'
  +');'#13#10'var'#13#10'  wholesystem,currentNodeTree,dm2,sysname,dpstr:String'
  +';'#13#10'  ok:boolean;'#13#10'  dp1,dp2:integer;'#13#10'begin'#13#10'  // m'
  +'ake temporary changes to root node attributes'#13#10'  sysname:=UIRootNode.'
  +'GetAttribute(''SystemName'',false).AttribValue;'#13#10'  dm2:=UIRootNode.Ge'
  +'tAttribute(''DeploymentMode'',false).AttribValue;'#13#10'  UIRootNode.SetAt'
  +'tributeValue(''SystemName'',deployname);'#13#10#13#10'  ok:=CompileEventCod'
  +'e(CodeEditForm.CodeEdit,''JSJS'');'#13#10'  DeleteGreyOverlay(''Grey1'');'
  +#13#10'  if ok then'#13#10'  begin'#13#10'    wholesystem:=''<!DOCTYPE HTML>'
  +'''  +LineEnding;'#13#10'    // the resulting javascript will have been inse'
  +'rted in the HTML page.'#13#10'    // dump the contents of the page onto the'
  +' clipboard'#13#10'    // However, for deployed startup, this needs to be am'
  +'ended in 3 places:'#13#10'    // wholesystem is a snapshot of the current p'
  +'age.  It also includes the javascript initialisation code which'#13#10'    '
  +'// loads up the user''s system description on startup....'#13#10'    // 1) '
  +'Delete the contents of <body>. (is rebuilt on startup).'#13#10'    // 2) Se'
  +'t the variable LoadedSystemString instead to supply the current system stat'
  +'e.'#13#10'    // 3) Set the variable myDeployedMode (Run, or Design).'#13#10
  +#13#10'    asm'#13#10'      var htmlElement = document.getElementsByTagName('
  +'"HTML")[0];'#13#10'      if (htmlElement!=null) {'#13#10'        var myBody'
  +' = document.getElementsByTagName("BODY")[0];'#13#10'        if (myBody!=nul'
  +'l) {'#13#10'          var saveme = myBody.innerHTML;'#13#10'          myBod'
  +'y.innerHTML = ''<div  id = "UIRootNode" class="vbox" style="height:100%; wi'
  +'dth:100%;top:0px;left:0px; position:relative; z-index:0;">'''#13#10'       '
  +'     +''<div  id = "XIDEForm" class="vbox" style="height:100%; width:100%;t'
  +'op:0px;left:0px">'''#13#10'            +''</div>'''#13#10'          +''</di'
  +'v>'';'#13#10'          wholesystem = wholesystem+''<HTML lang="en">''+htmlE'
  +'lement.innerHTML+''</HTML>'';'#13#10'          myBody.innerHTML = saveme;'
  +#13#10'          }'#13#10'        else {alert(''CompleteDeploySystem. body e'
  +'lement not found'');}'#13#10'        }'#13#10'      else {alert(''CompleteD'
  +'eploySystem. html element not found'');}'#13#10'    end;'#13#10#13#10'    /'
  +'/ set myDeployedMode...'#13#10'    wholesystem:=SetMyDeployedMode(wholesyst'
  +'em,dm2);'#13#10#13#10'    // set LoadedSystemString...'#13#10'    currentNo'
  +'deTree := NodeTreeToXML(SystemNodeTree,nil,false,true);'#13#10'    // look '
  +'for the string ''pas.NodeUtils.LoadedSystemString ='''#13#10'    dp1 := 0;'
  +#13#10'    dp1 := FoundString(wholesystem,chr(112)+''as.NodeUtils.LoadedSyst'
  ,'emString = "*";'');  // length 39'#13#10'    if dp1>0 then'#13#10'    begin'
  +#13#10'      dp1 := dp1 + 39;'#13#10'      dp2 := FoundString(wholesystem,'''
  +'<\/Root>";'');   // length 10'#13#10'      if dp2>0 then'#13#10'      begin'
  +#13#10'        dp2 := dp2 + 10;'#13#10'        Delete(wholesystem,dp1,(dp2-d'
  +'p1));'#13#10'        Insert(''pas.NodeUtils.LoadedSystemString = ''''''+cur'
  +'rentNodeTree+'''''';'',wholesystem,dp1);'#13#10'      end;'#13#10'    end;'
  +#13#10#13#10'    PasteDialogUnit.PasteTarget.ItemValue:=wholesystem;'#13#10
  +'    PasteDialogUnit.PasteDoneBtn.IsVisible:=true;'#13#10'    PasteDialogUni'
  +'t.PasteLabel.LabelCaption:=''Press Done to complete the copy to clipboard a'
  +'ction'';'#13#10'    PasteDialogUnit.PasteTarget.IsVisible:=false;'#13#10#13
  +#10'    OpenModal(''PasteDialog'');'#13#10#13#10'  end;'#13#10'  UIRootNode.'
  +'SetAttributeValue(''SystemName'',sysname);'#13#10'end;'#13#10'{$endif}'#13
  +#10#13#10'procedure OIDeploySystem;'#13#10'// Save a web-ready copy of the w'
  +'hole system (including XIDE framework) to the clipboard'#13#10'var'#13#10' '
  +' wholesystem,jsText,sysname,deployname:String;'#13#10'  lines,ExtraLines,Ex'
  +'traDirectives:TStringList;'#13#10'  ok:boolean;'#13#10'  dm:String;'#13#10
  +'begin'#13#10'  // First delete object inspector dynamic property editor fie'
  +'lds'#13#10'  ClearInspectors;'#13#10#13#10'  sysname:=UIRootNode.GetAttribu'
  +'te(''SystemName'',false).AttribValue;'#13#10'  deployname:=XIDEPrompt(''Nam'
  +'e of Deployed System'',sysname);'#13#10#13#10'  ExtraDirectives:=TStringLis'
  +'t.Create;'#13#10#13#10'  {$ifndef JScript}'#13#10'  lines:=TStringList.Crea'
  +'te;'#13#10'  // Compile the user-created event code into a unit.'#13#10'  o'
  +'k:=CompileEventCode(CodeEditForm.CodeEdit,''LazJS'');'#13#10'  if ok then'
  +#13#10'  begin'#13#10'     Screen.Cursor := crHourglass;'#13#10#13#10'     U'
  +'IRootNode.SetAttributeValue(''SystemName'',deployname);'#13#10'     // Save'
  +' the system definition data for the compiler'#13#10'     SaveSystemToIncFil'
  +'e;'#13#10'     UIRootNode.SetAttributeValue(''SystemName'',sysname);'#13#10
  +#13#10'     // additional inc file for composite resources'#13#10'     SaveC'
  +'ompositesToIncFile;'#13#10#13#10'     {$ifdef Python}'#13#10'     ExtraDire'
  +'ctives.Add(''-dPython'');'#13#10'     {$endif}'#13#10'     // now cross com'
  +'pile from a saved copy of this source with the conditional define'#13#10'  '
  +'   // switch (JScript) set to compile the JS version instead of the Lazarus'
  +' version'#13#10'     TranspileMyProgram(''XIDEMain'',ProjectDirectory,''res'
  +'ources/project/'',CodeEditForm.CodeEdit,false,ExtraDirectives);'#13#10#13#10
  +'     if FileExists(''XIDEMain.js'') then'#13#10'       lines.LoadFromFile('
  +'''XIDEMain.js'');'#13#10#13#10'     Screen.Cursor := crDefault;'#13#10#13#10
  +'  end'#13#10'  else'#13#10'  begin'#13#10'    DisplayDllCompileErrors;'#13
  +#10'  end;'#13#10#13#10'  {$ifdef Python}'#13#10'  ExtraLines:=PyodideScript'
  +';'#13#10'  ExtraLines.AddStrings(lines);'#13#10'  lines.Text:=ExtraLines.Te'
  +'xt;'#13#10'  {$else}'#13#10'  lines.insert(0,''    <script type="applicatio'
  +'n/javascript" >'');'#13#10'  {$endif}'#13#10'  lines.add(''   </script>  '''
  +');'#13#10#13#10'  jsText:=lines.text;'#13#10#13#10'  dm:=UIRootNode.GetAttr'
  +'ibute(''DeploymentMode'',false).AttribValue ;'#13#10'  wholesystem := Creat'
  +'eHTMLWrapper(''XIDEMain'',dm,true,jsText);'#13#10'  lines.Free;'#13#10'  my'
  +'CopyToClip(''HTML System'',wholesystem );'#13#10#13#10'  {$else}'#13#10'  S'
  +'howGreyOverlay(''UIRootNode'',''Grey1'');'#13#10'  // timeout here so the g'
  +'rey overlay appears'#13#10'  asm'#13#10'    myTimeout(pas.XObjectInsp.Compl'
  +'eteDeploySystem,20,''CompleteDeploySystem'',0,deployname);'#13#10'  end;'#13
  +#10#13#10'  {$endif}'#13#10#13#10'  ExtraDirectives.Free;'#13#10'end;'#13#10
  +#13#10'procedure OIComponentCopy(nodeId:string;myValue:string);'#13#10'begin'
  +#13#10'  PickItem( AvailableResourcesSelectedNode);'#13#10'end;'#13#10#13#10
  +'procedure ShowHideObjectInspector(show:Boolean);'#13#10'var'#13#10'  aNode:'
  +'TdataNode;'#13#10'begin'#13#10'   if not show then'#13#10'   begin'#13#10' '
  +'    DeHighlightObject(ObjectInspectorSelectedNavTreeNode);'#13#10'     Clea'
  +'rInspectors;'#13#10'   end;'#13#10#13#10'   aNode:=FindDataNodeById(SystemN'
  +'odeTree,''InnerRootVBox'','''',true);'#13#10'   if aNode<>nil then'#13#10' '
  +'    ShowHideNode(aNode,show);'#13#10#13#10'   aNode:=FindDataNodeById(Syste'
  +'mNodeTree,''ResourceInspectorTabs'','''',true);'#13#10'   if aNode<>nil the'
  +'n'#13#10'     //if ShowResourceTree<>''Hide'' then'#13#10'       ShowHideNo'
  +'de(aNode,show);'#13#10#13#10'   if show then'#13#10'   begin'#13#10'     //'
  +'if ShowResourceTree<>''Hide'' then'#13#10'       TXScrollBox(UIRootItem.Scr'
  +'eenObject).ContainerWidth:=''60%'''#13#10'     //else'#13#10'     //  TXScr'
  +'ollBox(UIRootItem.ScreenObject).ContainerWidth:=''80%'';'#13#10'   end'#13
  +#10'   else'#13#10'   begin'#13#10'     TXScrollBox(UIRootItem.ScreenObject)'
  ,'.ContainerWidth:=''100%'';'#13#10'   end;'#13#10#13#10'end;'#13#10#13#10'{$'
  +'ifndef JScript}'#13#10'procedure RedisplayResourceTree;'#13#10'var'#13#10' '
  +' hbox:TWinControl;'#13#10'  aNode:TdataNode;'#13#10'  ob1,ob2,ob3:TControl;'
  +#13#10'  lr:String;'#13#10'begin'#13#10'  aNode:=FindDataNodeById(SystemNode'
  +'Tree,''RootHBox'','''',true);'#13#10'  hbox:=TWinControl(aNode.ScreenObject'
  +');'#13#10'  aNode:=FindDataNodeById(SystemNodeTree,''ResourceInspectorTabs'
  +''','''',true);'#13#10'  ob1:=TControl(aNode.ScreenObject);'#13#10'  //if Sh'
  +'owResourceTree=''Hide'' then'#13#10'  //begin'#13#10'  //  TXTabControl(ob1'
  +').IsVisible:=false;'#13#10'  //end'#13#10'  //else'#13#10'  begin'#13#10'  '
  +'  aNode:=FindDataNodeById(SystemNodeTree,''InnerRootVBox'','''',true);'#13
  +#10'    ob2:=TControl(aNode.ScreenObject);'#13#10'    aNode:=FindDataNodeByI'
  +'d(SystemNodeTree,''UIRoot'','''',true);'#13#10'    ob3:=TControl(aNode.Scre'
  +'enObject);'#13#10#13#10'    hbox.RemoveControl(ob1);'#13#10'    hbox.Remove'
  +'Control(ob2);'#13#10'    hbox.RemoveControl(ob3);'#13#10#13#10'    lr:=UIRo'
  +'otNode.GetAttribute(''ShowResources'',true).AttribValue;'#13#10'    //if Sh'
  +'owResourceTree=''Left'' then'#13#10'    if lr=''Left'' then'#13#10'    begi'
  +'n'#13#10'      ob1.Parent:=hbox;'#13#10'      ob2.Parent:=hbox;'#13#10'    '
  +'  ob3.Parent:=hbox;'#13#10'    end'#13#10'    //else if ShowResourceTree='''
  +'Right'' then'#13#10'    else'#13#10'    begin'#13#10'      ob2.Parent:=hbox'
  +';'#13#10'      ob3.Parent:=hbox;'#13#10'      ob1.Parent:=hbox;'#13#10'    '
  +'end;'#13#10'    TXTabControl(ob1).IsVisible:=true;'#13#10'  end;'#13#10'  i'
  +'f DesignMode then'#13#10'    ShowHideObjectInspector(true);'#13#10'end;'#13
  +#10'{$else}'#13#10'procedure RedisplayResourceTree;'#13#10'var'#13#10'  aNod'
  +'e:TdataNode;'#13#10'  ob1:TObject;'#13#10'  lr:String;'#13#10'begin'#13#10
  +'  aNode:=FindDataNodeById(SystemNodeTree,''ResourceInspectorTabs'','''',tru'
  +'e);'#13#10'  ob1:=aNode.ScreenObject;'#13#10'//  if ShowResourceTree=''Hide'
  +''' then'#13#10'//  begin'#13#10'//    TXTabControl(ob1).IsVisible:=false;'
  +#13#10'//  end'#13#10'//  else'#13#10'  begin'#13#10'    TXTabControl(ob1).I'
  +'sVisible:=true;'#13#10'    lr:=UIRootNode.GetAttribute(''ShowResources'',tr'
  +'ue).AttribValue;'#13#10'    asm'#13#10'    var hbox=document.getElementById'
  +'(''RootHBoxContents'');'#13#10'    ob1=document.getElementById(''ResourceIn'
  +'spectorTabs'');'#13#10'    var ob2=document.getElementById(''InnerRootVBox'
  +''');'#13#10'    var ob3=document.getElementById(''UIRoot'');'#13#10#13#10' '
  +'   hbox.removeChild(ob1);'#13#10'    hbox.removeChild(ob2);'#13#10'    hbox'
  +'.removeChild(ob3);'#13#10#13#10'    //if (pas.XObjectInsp.ShowResourceTree='
  +'=''Left'') {'#13#10'    if (lr==''Left'') {'#13#10'      hbox.appendChild(o'
  +'b1);'#13#10'      hbox.appendChild(ob2);'#13#10'      hbox.appendChild(ob3)'
  +';'#13#10'    }'#13#10'    //if (pas.XObjectInsp.ShowResourceTree==''Right'''
  +') {'#13#10'    else {'#13#10'      hbox.appendChild(ob2);'#13#10'      hbox'
  +'.appendChild(ob3);'#13#10'      hbox.appendChild(ob1);'#13#10'    }'#13#10
  +'    end;'#13#10'  end;'#13#10'  if DesignMode then'#13#10'    ShowHideObjec'
  +'tInspector(true);'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure Displa'
  +'yDllCompileErrors;'#13#10'var'#13#10'  nm,nm2:String;'#13#10'begin'#13#10' '
  +' CodeEditForm.Mode:=''dll'';'#13#10'  CodeEditForm.InitialiseOnShow(''Compi'
  +'ler Errors'','''','''');'#13#10#13#10'  ShowXForm(''CodeEditForm'',true);  '
  +'   // the relevant text and message contents have already been populated'#13
  +#10#13#10'  {$ifndef JScript}'#13#10'  {$else}'#13#10'  nm:=CodeEditor.CodeE'
  +'ditForm.CodeEdit.NodeName;'#13#10'  nm2:=CodeEditor.CodeEditForm.CodeEditIn'
  +'it.NodeName;'#13#10'  asm'#13#10'  pas.XCode.DoKeyUp(nm2+''Contents'',nm2,'
  +''''',null);'#13#10'  pas.XCode.DoKeyUp(nm+''Contents'',nm,'''',null);'#13#10
  +'  end;'#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure CompleteT'
  +'oggleToRunMode(ok:boolean);'#13#10'var'#13#10'  MenuItemNode:TDataNode;'#13
  +#10'  MenuItem:TXMenuItem;'#13#10'//  Messages:TStringList;'#13#10'  dm:Stri'
  +'ng;'#13#10'  i:integer;'#13#10'begin'#13#10'  //showmessage(''CompleteToggl'
  +'eToRunMode'');'#13#10#13#10'  MenuItemNode:=FindDataNodeById(SystemNodeTree'
  +',''ToggleDesignRunMode'','''',true);'#13#10'  MenuItem:=TXMenuItem(MenuItem'
  +'Node.ScreenObject);'#13#10'  if ok then'#13#10'  begin'#13#10'    // event '
  +'code has compiled successfully'#13#10'    DesignMode:=false;'#13#10'    Men'
  +'uItem.Caption:=''Design Mode'';'#13#10'    // Hide Object Inspector'#13#10
  +'    ShowHideObjectInspector(false);'#13#10#13#10'    {$ifndef JScript}'#13
  +#10'    //Unload the events dll, if previously loaded'#13#10'    if MyLibC <'
  +'>  DynLibs.NilHandle then'#13#10'      if FreeLibrary(MyLibC) then'#13#10' '
  +'       MyLibC:= DynLibs.NilHandle;'#13#10#13#10'    GlobalSuppressFrameDisp'
  +'lay:=false;'#13#10'    UnsuspendFrames(SystemNodeTree);'#13#10#13#10'    Do'
  ,'FormResize(MainForm, MainFormTopControl);'#13#10'    TWinControl(MainFormPr'
  +'ojectRoot.ScreenObject).SetFocus;'#13#10#13#10'    GatherSourcedAttributes('
  +'SystemNodeTree);'#13#10'    PushAllSourcesToAttributes;'#13#10#13#10'    Ha'
  +'ndleEventLater(nil,''OnEnterRunMode'',''UIRootNode'','''','''');'#13#10'   '
  +' {$ifdef Python}'#13#10'    //Clear the python engine and re-initialise'#13
  +#10'    DoPy_InitEngine;'#13#10'    RunInitialScript;'#13#10'    //do later '
  +'.... exec all defined python scripts'#13#10'    GatherAndRunPythonScriptsLa'
  +'ter;'#13#10'    {$endif}'#13#10'    {$else}'#13#10'    GatherSourcedAttribu'
  +'tes(SystemNodeTree);'#13#10'    PushAllSourcesToAttributes;'#13#10#13#10'  '
  +'  HandleEvent(nil,''OnEnterRunMode'',''UIRootNode'','''','''');'#13#10'    '
  +'{$ifdef Python}'#13#10'    //exec all defined python scripts'#13#10'    try'
  +#13#10'    PyProcs.GatherAndRunPythonScripts(0);'#13#10'    except'#13#10'  '
  +'    on E: Exception do'#13#10'      begin'#13#10'        showmessage(''Erro'
  +'r executing Python script: ''+e.Message);'#13#10'      end;'#13#10'    end;'
  +#13#10'    {$endif}'#13#10'    {$endif}'#13#10'    SuppressUserEvents:=false'
  +';'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    // Pascal compilatio'
  +'n of event code has failed'#13#10'    SuppressUserEvents:=true;'#13#10'    '
  +'{$ifndef JScript}'#13#10'    DisplayDllCompileErrors;'#13#10'    {$else}'#13
  +#10'    if RunningDeployedRuntime   then'#13#10'    begin'#13#10'      showm'
  +'essage(''Unable to compile event code.  Cannot load this system'');'#13#10
  +'      //!! need to clear the system here, or something.....'#13#10'      OI'
  +'ClearSystem;'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10' //    '
  +' Messages:=TStringList.Create;'#13#10' //     Messages.Text:=CodeEditForm.C'
  +'odeEdit.MessageLines;'#13#10'      DisplayDllCompileErrors;'#13#10'      Co'
  +'deEditForm.NavigateToFirstError;'#13#10#13#10'    end;'#13#10'    {$endif}'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure Con'
  +'tinueToggleToRunMode;'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10' '
  +'   // Compile the user-created event code, using embedded pas2js compiler'
  +#13#10'    // and generate js'#13#10'    ok:=CompileEventCode(CodeEditForm.C'
  +'odeEdit,''JSJS'');'#13#10'    CompleteToggleToRunMode(ok);'#13#10'    Delet'
  +'eGreyOverlay(''Grey1'');'#13#10'end;'#13#10'{$endif}'#13#10#13#10#13#10'pro'
  +'cedure DoToggleDesignRunMode(Sender:TXMenuItem);'#13#10'var'#13#10'  Target'
  +'Node :TDataNode;'#13#10'  myNode:TDataNode;'#13#10'  tmp,dm:string;'#13#10
  +'  ok:Boolean;'#13#10'  GPUNodes:TNodesArray;'#13#10'  i:integer;'#13#10'beg'
  +'in'#13#10'  ok:=true;'#13#10'//  showmessage(''DoToggleDesignRunMode 1'');'
  +#13#10#13#10'  if (DesignMode=true)'#13#10'  then'#13#10'  begin'#13#10'    '
  +'// Go to Run Mode'#13#10'    EditAttributeValue(''XMemo1'','''',''ItemValue'
  +''','''',false);'#13#10'    SetLength(SourcedAttribs,0);'#13#10'    {$ifndef'
  +' JScript}'#13#10'    // Check pas2js Compilation of the user-created event '
  +'code first.'#13#10'    ok:=CompileEventCode(CodeEditForm.CodeEdit,''LazJS'''
  +');'#13#10'    if ok then'#13#10'    begin'#13#10'      // Now Compile the u'
  +'ser-created event code into the dll.'#13#10'      ok:=CompileEventCode(Code'
  +'EditForm.CodeEdit,''LazDll'');'#13#10'      CompleteToggleToRunMode(ok);'#13
  +#10'    end'#13#10'    else'#13#10'    begin'#13#10'      DisplayDllCompileE'
  +'rrors;'#13#10'    end;'#13#10'    {$else}'#13#10'    for i:=length(OpenXFor'
  +'ms)-1 downto 0 do'#13#10'    begin'#13#10'      if OpenXForms[i].NameSpace='
  +''''' then'#13#10'        CloseXFormForDesign(OpenXForms[i].NodeName);'#13#10
  +'    end;'#13#10#13#10'    asm'#13#10'      if (pyodideReady!="yes") {'#13#10
  +'        alert(''pyodide is not ready'');'#13#10'        ok = false;'#13#10
  +'      }'#13#10'    end;'#13#10'    if ok then'#13#10'    begin'#13#10'     '
  +' ShowGreyOverlay(''UIRootNode'',''Grey1'');'#13#10'      // timeout here so'
  +' the grey overlay appears'#13#10'      asm'#13#10'        myTimeout(pas.XOb'
  +'jectInsp.ContinueToggleToRunMode,5,''ContinueToggleToRunMode'',0);'#13#10' '
  +'     end;'#13#10'    end;'#13#10'    {$endif}'#13#10'  end'#13#10'  else'#13
  +#10'  begin'#13#10'    // Go to Design Mode'#13#10'    if StartingUp=false t'
  +'hen'#13#10'    begin'#13#10'      // First, STOP any running GPU components'
  +#13#10'      GPUNodes:=FindNodesOfType(SystemNodeTree,''TXGPUCanvas'');'#13
  +#10'      for i:=0 to length(GPUNodes)-1 do'#13#10'      begin'#13#10'      '
  +'  if GPUNodes[i].ScreenObject<>nil then'#13#10'        begin'#13#10'       '
  +'   //showmessage(''stopping gpu ''+GPUNodes[i].NodeName);'#13#10'          '
  +'TXGPUCanvas(GPUNodes[i].ScreenObject).Active:=false;'#13#10'        end;'#13
  +#10'      end;'#13#10'    end;'#13#10'    {$ifdef JScript}'#13#10'    if Run'
  +'ningDeployedRuntime then'#13#10'    begin'#13#10'      showmessage(''Design'
  +' Mode not available'');'#13#10'      EXIT;'#13#10'    end;'#13#10'    {$end'
  ,'if}'#13#10#13#10'    DesignMode:=true;'#13#10'    SuppressUserEvents:=true;'
  +#13#10'    SetLength(SourcedAttribs,0);        // keep these during design m'
  +'ode !!!!????'#13#10'    TXMenuItem(Sender).Caption:=''Run Mode'';'#13#10'  '
  +'  // Show Object Inspector'#13#10'    ShowHideObjectInspector(true);'#13#10
  +'    {$ifndef JScript}'#13#10'    GlobalSuppressFrameDisplay:=true;'#13#10' '
  +'   DoFormResize(MainForm,MainFormTopControl);'#13#10'    {$endif}'#13#10'  '
  +'end;'#13#10'end;'#13#10#13#10#13#10#13#10'procedure EditResourceAttributeVa'
  +'lue(NodeName,AttrName,NewValue:string);'#13#10'// Editing a node in  the Re'
  +'sources Navigator tree'#13#10'var'#13#10'   myNode:TDataNode;'#13#10'   myA'
  +'ttrib:TNodeAttribute;'#13#10'begin'#13#10'   // find the given node'#13#10
  +'   myNode:=FindDataNodeById(ResourcesNodeTree,NodeName,'''',true);'#13#10' '
  +'  if myNode<>nil then'#13#10'   begin'#13#10'     myAttrib:=myNode.GetAttri'
  +'bute(AttrName,false);'#13#10'     if myAttrib.AttribValue<>NewValue then'#13
  +#10'     begin'#13#10'       // update the attribute value'#13#10'       myN'
  +'ode.SetAttributeValue(AttrName,NewValue);'#13#10'     end;'#13#10'   end;'
  +#13#10'end;'#13#10#13#10'procedure SaveEditedInputs(targetNode:TDataNode;myI'
  +'nputs:TCodeInputs);'#13#10'var'#13#10'  //j,k:integer;'#13#10'  InputStr:St'
  +'ring;'#13#10'begin'#13#10'  //if EventNum>-1 then'#13#10'  //begin'#13#10' '
  +' //  k:=0;'#13#10'  //  for j:=0 to length(myInputs)-1 do'#13#10'  //    if'
  +' trim(myInputs[j].InputNodeName)<>'''' then'#13#10'  //    begin'#13#10'  /'
  +'/        setlength(targetNode.myEventHandlers[EventNum].TheInputs,k+1);'#13
  +#10'  //        targetNode.myEventHandlers[EventNum].TheInputs[k].InputSynon'
  +'ym:=myInputs[j].InputSynonym;'#13#10'  //        targetNode.myEventHandlers'
  +'[EventNum].TheInputs[k].InputNodeName:=myInputs[j].InputNodeName;'#13#10'  '
  +'//        targetNode.myEventHandlers[EventNum].TheInputs[k].InputAttribName'
  +':=myInputs[j].InputAttribName;'#13#10'  //        targetNode.myEventHandler'
  +'s[EventNum].TheInputs[k].InputValue:='''';'#13#10'  //        k:=k+1;'#13#10
  +'  //    end;'#13#10'  //end'#13#10'  //else'#13#10'  begin'#13#10'    Input'
  +'Str:=CodeInputsToString(myInputs);'#13#10'    targetNode.SetAttributeValue('
  +'''Inputs'',InputStr);'#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'procedur'
  +'e EditEventCode(NodeNameToEdit,EventToEdit,MainCode,InitCode:String);'#13#10
  +'var'#13#10'  targetNode:TDataNode;'#13#10'  i,j,k:integer;'#13#10'begin'#13
  +#10'  targetNode:=FindDataNodeById(SystemNodetree,NodeNameToEdit,'''',true);'
  +#13#10#13#10'  for i:=0 to targetNode.myEventTypes.count-1 do'#13#10'  begin'
  +#13#10'    if targetNode.myEventTypes[i] = EventToEdit then'#13#10'    begin'
  +#13#10'      targetNode.myEventHandlers[i].TheCode:=MainCode;'#13#10'      t'
  +'argetNode.myEventHandlers[i].InitCode:=InitCode;'#13#10'    end;'#13#10'  e'
  +'nd;'#13#10#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.TestButtonClic'
  +'k(e:TEventStatus;nodeId:string;myValue:string);'#13#10'begin'#13#10'       '
  +'     //showmessage(''OIEditProperty ''+nodeId+'' ''+myValue);'#13#10'      '
  +'      EditAttributeValue(''TestDynamic1'','''',''Caption'',''dynamic event '
  +'ok'');'#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.OIEditPropertyBut'
  +'tonClick(e:TEventStatus;nodeId:string;myValue:string);'#13#10'var'#13#10'  '
  +'bits:TStringList;'#13#10'  NodeNameToEdit,PropertyToEdit, EditBoxName, Sour'
  +'ceName, tempstr:String;'#13#10'  targetNode:TDataNode;'#13#10'  targetAttri'
  +'bute:TNodeAttribute;'#13#10'  AllKernels:TAnimCodeArray;'#13#10'begin'#13#10
  +'  bits:=stringsplit(nodeId,AttributeEditorNameDelimiter);'#13#10'  if bits.'
  +'Count = 4 then'#13#10'  begin'#13#10'    if (bits[0]=''OI'') or (bits[0]='''
  +'RI'') then       // OI, Editboxname, NodeName, suffix'#13#10'    begin'#13
  +#10'      NodeNameToEdit:=bits[1];'#13#10'      PropertyToEdit:=bits[2];'#13
  +#10'    end;'#13#10'  end;'#13#10#13#10'  targetNode:=FindDataNodeById(Syste'
  +'mNodeTree,NodeNameToEdit,'''',true);'#13#10'  targetAttribute:= targetNode.'
  +'GetAttribute(PropertyToEdit,true);'#13#10#13#10'  if (targetNode.NodeType<>'
  +'''TXGPUCanvas'')'#13#10'  or ((targetAttribute.AttribName<>''AnimationCode'
  +''') and (targetAttribute.AttribName<>''InitStageData'')) then'#13#10'  begi'
  +'n'#13#10'    // pop up the property editor.'#13#10'    PropertyEditForm.Tar'
  +'getNode:=targetNode;'#13#10'    PropertyEditForm.TargetAttribute:=targetAtt'
  +'ribute;'#13#10#13#10'    // show validation details (eg range, function,...'
  +') according to type....'#13#10'    // and display data source details...'#13
  +#10'    PropertyEditForm.PropertyEditName.ItemValue:=PropertyToEdit;'#13#10
  +'    PropertyEditForm.PropertyEditType.ItemValue:=targetAttribute.AttribType'
  +';'#13#10'    SourceName:=targetAttribute.AttribSource.InputNodeName;'#13#10
  +'    if targetAttribute.AttribSource.InputAttribName<>'''' then'#13#10'    b'
  +'egin'#13#10'      SourceName:=SourceName+''.''+targetAttribute.AttribSource'
  ,'.InputAttribName;'#13#10'//      showmessage(''This attribute has source '''
  +'+SourceName);'#13#10'    end;'#13#10'    PropertyEditForm.PropertyEditSourc'
  +'eBox.ItemValue:=SourceName;'#13#10'    // PropertyEditBox is the editbox (o'
  +'r combobox, checkbox etc) in the object inspector...'#13#10'    EditBoxName'
  +':=myStringReplace(nodeId,''Btn'','''',1,9999);'#13#10'    PropertyEditBox:='
  +'FindDataNodeById(SystemNodeTree,EditBoxName,'''',true);'#13#10#13#10'    Pr'
  +'opertyEditForm.SetupPages;'#13#10'    ShowXForm(''PropertyEditForm'',true);'
  +#13#10'  end'#13#10'  else'#13#10'  // Special Case - edit the AnimationCode'
  +' in a TXGPUCanvas component using the dedicated popup editor...'#13#10'  //'
  +' Special Case - edit the InitStageData in a TXGPUCanvas component using the'
  +' dedicated popup editor...'#13#10'  begin'#13#10'    if targetAttribute.Att'
  +'ribName=''InitStageData'' then'#13#10'      ShowGPUEditor(targetNode,2)'#13
  +#10'    else'#13#10'      ShowGPUEditor(targetNode,0);'#13#10'  end;'#13#10
  +#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.OIEditProperty(e:TEventSt'
  +'atus;nodeId:string;myValue:string);'#13#10'var'#13#10'  bits:TStringList;'
  +#13#10'  NodeNameToEdit,AttrNameToEdit:String;'#13#10'  ok:boolean;'#13#10'b'
  +'egin'#13#10'  //showmessage(''OIEditProperty ''+nodeId+'' ''+myValue);'#13
  +#10'  // fudge...'#13#10'  ok:=true;'#13#10'  {$ifdef JScript}'#13#10'  asm'
  +#13#10'    if (myValue==undefined) {ok=false};'#13#10'  end;'#13#10'  if not'
  +' ok then EXIT;'#13#10'  {$endif}'#13#10'      bits:=stringsplit(nodeId,Attr'
  +'ibuteEditorNameDelimiter);'#13#10'      if bits.Count = 4 then'#13#10'     '
  +' begin'#13#10'        if (bits[0]=''OI'') or (bits[0]=''RI'') then       //'
  +' OI, Editboxname, NodeName, Attrname, suffix'#13#10'        begin'#13#10'  '
  +'        NodeNameToEdit:=bits[1];'#13#10'          AttrNameToEdit:=bits[2];'
  +#13#10'          if bits[0]=''OI'' then'#13#10'          begin'#13#10'      '
  +'      //showmessage(''OIEditProperty ''+nodeId+'' ''+AttrNameToEdit+'' ''+m'
  +'yValue);'#13#10'            EditAttributeValue(NodeNameToEdit,'''',AttrName'
  +'ToEdit,myValue);'#13#10'            RefreshObjectInspector(ObjectInspectorS'
  +'electedNavTreeNode);'#13#10'          end'#13#10'          else'#13#10'    '
  +'        EditResourceAttributeValue(NodeNameToEdit,AttrNameToEdit,myValue);'
  +#13#10#13#10'        end;'#13#10'      end;'#13#10'end;'#13#10#13#10'procedu'
  +'re TOIEventWrapper.OIEditEvent(e:TEventStatus;nodeId:string;myValue:string)'
  +';'#13#10'var'#13#10'  bits:TStringList;'#13#10'  NodeNameToEdit,EventToEdit'
  +',EventInitCode:String;'#13#10'  EventNode:TDataNode;'#13#10'begin'#13#10'  '
  +'    bits:=stringsplit(nodeId,AttributeEditorNameDelimiter);'#13#10'      if'
  +' bits.Count = 4 then'#13#10'      begin'#13#10'        if (bits[0]=''OI'') '
  +'or (bits[0]=''RI'') then       // OI, Editboxname, NodeName, suffix'#13#10
  +'        begin'#13#10'          NodeNameToEdit:=bits[1];'#13#10'          Ev'
  +'entToEdit:=bits[2];'#13#10'          EventNode:=FindDataNodeById(SystemNode'
  +'Tree,NodeNameToEdit,'''',true);'#13#10'          EventInitCode:=EventNode.G'
  +'etEventCode(EventToEdit);'#13#10'          //showmessage(''OIEditEvent ''+n'
  +'odeId+'' ''+myValue);'#13#10'          EditEventCode(NodeNameToEdit,EventTo'
  +'Edit,myValue,EventInitCode);'#13#10'        end;'#13#10'      end;'#13#10'e'
  +'nd;'#13#10#13#10'procedure TOIEventWrapper.CloseGPUEditor(e:TEventStatus;no'
  +'deId:string;myValue:string);'#13#10'begin'#13#10'  GPUEvents.CloseCodeEdito'
  +'r(e,nodeId,myValue);'#13#10'  if ObjectInspectorSelectedNavTreeNode<>nil th'
  +'en'#13#10'    RefreshObjectInspector(ObjectInspectorSelectedNavTreeNode);'
  +#13#10'end;'#13#10#13#10'procedure CodeEditorClosed(EditBoxNode:TdataNode);'
  +#13#10'var'#13#10'  tmp:string;'#13#10'  CodeNode:TDataNode;'#13#10'begin'#13
  +#10'  //showmessage(''CodeEditorClosed. Mode=''+CodeEditForm.Mode+'' return '
  +'status ''+ CodeEditStatus);'#13#10'  if CodeEditStatus = ''ok'' then'#13#10
  +'  begin'#13#10'    tmp:=CodeEditForm.CodeEdit.ItemValue;'#13#10'    if Code'
  +'EditForm.Mode=''EventCode'' then'#13#10'    begin'#13#10'      if EditBoxNo'
  +'de<>nil then'#13#10'         // set value of the associated edit box'#13#10
  +'         TXEditBox(EditBoxNode.ScreenObject).ItemValue:=CodeEditForm.CodeEd'
  +'it.ItemValue;'#13#10'         // nb. above doesn''t trigger the onchange ev'
  +'ent for the edit box.'#13#10'      // update the Code data...'#13#10'      '
  +'EditEventCode(CodeEditForm.TargetNodeName,CodeEditForm.EventType,CodeEditFo'
  +'rm.CodeEdit.ItemValue,'#13#10'                                             '
  +'                          CodeEditForm.CodeEditInit.ItemValue);'#13#10'    '
  +'  if ObjectInspectorSelectedNavTreeNode<>nil then'#13#10'        RefreshObj'
  +'ectInspector(ObjectInspectorSelectedNavTreeNode);'#13#10#13#10'    end'#13
  +#10'    else if (CodeEditForm.Mode=''UnitCode'')'#13#10'      or (CodeEditFo'
  +'rm.Mode=''PasUnitCode'')'#13#10'      or (CodeEditForm.Mode=''PythonScriptC'
  ,'ode'')'#13#10'      or (CodeEditForm.Mode=''FunctionCode'') then'#13#10'   '
  +' begin'#13#10'      tmp:=CodeEditForm.TargetNodeName;'#13#10'      // name '
  +'of unit is in TargetNodeName'#13#10'      CodeNode:=FindDataNodeById(CodeRo'
  +'otNode,CodeEditForm.TargetNodeName,'''',true);'#13#10'      if (CodeNode.No'
  +'deType=''PasUnit'')'#13#10'      and (CodeEditForm.Mode=''FunctionCode'') t'
  +'hen'#13#10'      begin'#13#10'        // we are displaying compiler errors '
  +'in the unit...'#13#10'        // !! needs sorting out. Unit code is partly '
  +'auto-generated so cannot allow edits here !!'#13#10'        showmessage(''o'
  +'ops - see CodeEditorClosed'');'#13#10'      end'#13#10'      else'#13#10'  '
  +'    begin'#13#10'        tmp:=CodeEditForm.CodeEdit.ItemValue;'#13#10'     '
  +'   CodeNode.SetAttributeValue(''Code'',tmp,''String'');'#13#10'        tmp:'
  +'=CodeEditForm.codeeditFunctionResultType.ItemValue;'#13#10'        CodeNode'
  +'.SetAttributeValue(''Type'',tmp,''String'');'#13#10'        SaveEditedInput'
  +'s(CodeNode,CodeEditForm.MyInputs);'#13#10'      end;'#13#10'    end'#13#10
  +'    else if (CodeEditForm.Mode=''SearchCode'')  then'#13#10'    begin'#13#10
  +'      // do nothing'#13#10'    end;'#13#10#13#10'    RebuildCodeTree;'#13#10
  +'  end;'#13#10'  OIEditBox:=nil;'#13#10'end;'#13#10#13#10'procedure Property'
  +'EditorClosed(EditBoxNode:TdataNode);'#13#10'var'#13#10'  tmp:string;'#13#10
  +'  SourceBits:TStringList;'#13#10'  SourceNode, SourceAttrib:String;'#13#10
  +'  EditNode:TDataNode;'#13#10'begin'#13#10'  //showmessage(''PropertyEditorC'
  +'losed. return status ''+ PropertyEditStatus);'#13#10'  if PropertyEditStatu'
  +'s = ''ok'' then'#13#10'  begin'#13#10'    EditNode:= PropertyEditForm.EditN'
  +'ode;'#13#10'    // Set the value of TargetAttribute from the widget on the '
  +'Edit tabpage...'#13#10'    if EditNode.NodeType=''TXEditBox'' then'#13#10' '
  +'     PropertyEditForm.TargetAttribute.AttribValue:=EditNode.GetAttribute('''
  +'ItemValue'',false).AttribValue'#13#10'    else if EditNode.NodeType=''TXMem'
  +'o'' then'#13#10'      PropertyEditForm.TargetAttribute.AttribValue:=EditNod'
  +'e.GetAttribute(''ItemValue'',false).AttribValue'#13#10'    else if EditNode'
  +'.NodeType=''TXTree'' then'#13#10'     PropertyEditForm.TargetAttribute.Attr'
  +'ibValue:=EditNode.GetAttribute(''TreeData'',false).AttribValue'#13#10'    e'
  +'lse if EditNode.NodeType=''TXTable'' then'#13#10'    begin'#13#10'      Pro'
  +'pertyEditForm.TargetAttribute.AttribValue:=EditNode.GetAttribute(''TableDat'
  +'a'',false).AttribValue;'#13#10'      if PropertyEditForm.TargetAttribute.At'
  +'tribName=''TableData'' then'#13#10'      begin'#13#10'        PropertyEditF'
  +'orm.TargetNode.SetAttributeValue(''NumRows'',EditNode.GetAttribute(''NumRow'
  +'s'',false).AttribValue);'#13#10'        PropertyEditForm.TargetNode.SetAttr'
  +'ibuteValue(''NumCols'',EditNode.GetAttribute(''NumCols'',false).AttribValue'
  +');'#13#10'      end;'#13#10'    end'#13#10'    else if EditNode.NodeType='''
  +'TXCheckBox'' then'#13#10'      PropertyEditForm.TargetAttribute.AttribValue'
  +':=EditNode.GetAttribute(''Checked'',false).AttribValue'#13#10'    else if E'
  +'ditNode.NodeType=''TXComboBox'' then'#13#10'      PropertyEditForm.TargetAt'
  +'tribute.AttribValue:=EditNode.GetAttribute(''ItemValue'',false).AttribValue'
  +#13#10'    else if EditNode.NodeType=''TXColorPicker'' then'#13#10'      Pro'
  +'pertyEditForm.TargetAttribute.AttribValue:=EditNode.GetAttribute(''ItemValu'
  +'e'',false).AttribValue;'#13#10#13#10'    //showmessage(''PropertyEditorClos'
  +'ed. calling EditAttributeValue'');'#13#10'    // Update the property value '
  +'in the target node...'#13#10'    //EditAttributeValue(PropertyEditForm.Targ'
  +'etNode.NodeName,'''',PropertyEditForm.TargetAttribute.AttribName,PropertyEd'
  +'itForm.TargetAttribute.AttribValue);'#13#10'    EditAttributeValue(Property'
  +'EditForm.TargetNode,PropertyEditForm.TargetAttribute.AttribName,PropertyEdi'
  +'tForm.TargetAttribute.AttribValue);'#13#10#13#10'    // Set the data source'
  +' for the property, if specified...'#13#10'    tmp:=trim(PropertyEditForm.Pr'
  +'opertyEditSourceBox.ItemValue);'#13#10'    if tmp<>'''' then'#13#10'    beg'
  +'in'#13#10'      SourceBits:=stringsplit(tmp,''.'');'#13#10'      SourceNode'
  +':=SourceBits[0];'#13#10'      if SourceBits.Count>1 then'#13#10'        Sou'
  +'rceAttrib:=SourceBits[1];'#13#10'      PropertyEditForm.TargetNode.SetAttri'
  +'buteSource(PropertyEditForm.TargetAttribute.AttribName,SourceNode,SourceAtt'
  +'rib);'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      Property'
  +'EditForm.TargetNode.SetAttributeSource(PropertyEditForm.TargetAttribute.Att'
  +'ribName,'''','''');'#13#10'    end;'#13#10#13#10'    RefreshObjectInspector'
  +'(PropertyEditForm.TargetNode);'#13#10'  end;'#13#10'  PropertyEditBox:=nil;'
  +#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.OIEditEventCodeFromCodeTr'
  +'ee(NodeNameToEdit:string;EventToEdit:string);'#13#10'var'#13#10'  EditBoxNa'
  +'me, EventCode, EventInitCode:string;'#13#10'  bits:TStringList;'#13#10'  ta'
  ,'rgetNode:TDataNode;'#13#10'  EventNum,i:integer;'#13#10'begin'#13#10'  // p'
  +'op up the syntax editor.'#13#10'//  CodeEditForm.Initialise(''Event Handler'
  +''',NodeNameToEdit,EventToEdit);'#13#10'//  EditBoxName:=myStringReplace(nod'
  +'eId,''Btn'','''',1,9999);'#13#10'//  OIEditBox:=FindDataNodeById(SystemNode'
  +'Tree,EditBoxName,'''',true);'#13#10'  OIEditBox:=nil;'#13#10'  targetNode:='
  +'FindDataNodeById(SystemNodeTree,NodeNameToEdit,'''',true);'#13#10'  EventCo'
  +'de:=targetNode.GetEventCode(EventToEdit);'#13#10'  EventInitCode:=targetNod'
  +'e.GetEventInitCode(EventToEdit);'#13#10'  if Trim(EventCode)='''' then'#13
  +#10'  begin'#13#10'    // provide a template event procedure'#13#10'    Even'
  +'tCode:= ''begin'' + LineEnding +'#13#10'                '' '' + LineEnding '
  +'+'#13#10'                ''end;'' + LineEnding;'#13#10'  end;'#13#10'  Code'
  +'EditForm.CodeEdit.ItemValue := EventCode;'#13#10'  CodeEditForm.CodeEditIni'
  +'t.ItemValue := EventInitCode;'#13#10'  EventNum:=targetNode.EventNum(EventT'
  +'oEdit);'#13#10'  CodeEditForm.CodeEdit.MessageLines:='''';'#13#10'  CodeEdi'
  +'tForm.CodeEditInit.MessageLines:='''';'#13#10#13#10'  CodeEditForm.CodeEdit'
  +'MainTabs.TabIndex:=0;'#13#10'  CodeEditForm.Mode:=''EventCode'';'#13#10'  C'
  +'odeEditForm.InitialiseOnShow(''Event Handler'',NodeNameToEdit,EventToEdit);'
  +#13#10'  ShowXForm(''CodeEditForm'',true);'#13#10#13#10'end;'#13#10#13#10'pr'
  +'ocedure TOIEventWrapper.OIEditEventCode(e:TEventStatus;nodeId:string;myValu'
  +'e:string);'#13#10'var'#13#10'  EditBoxName, EventCode, EventInitCode:string'
  +';'#13#10'  bits:TStringList;'#13#10'  NodeNameToEdit,EventToEdit:String;'#13
  +#10'  targetNode:TDataNode;'#13#10'  EventNum,i:integer;'#13#10'begin'#13#10
  +'  bits:=stringsplit(nodeId,AttributeEditorNameDelimiter);'#13#10'  if bits.'
  +'Count = 4 then'#13#10'  begin'#13#10'    if (bits[0]=''OI'') or (bits[0]='''
  +'RI'') then       // OI, Editboxname, NodeName, suffix'#13#10'    begin'#13
  +#10'      NodeNameToEdit:=bits[1];'#13#10'      EventToEdit:=bits[2];'#13#10
  +'    end;'#13#10'  end;'#13#10'  // pop up the syntax editor.'#13#10'  // re'
  +'move the ''Btn'' suffix'#13#10'  EditBoxName:=Copy(nodeId,1,length(nodeId)-'
  +'3);'#13#10'  OIEditBox:=FindDataNodeById(SystemNodeTree,EditBoxName,'''',tr'
  +'ue);'#13#10'  EventCode:=TXEditBox(OIEditBox.ScreenObject).ItemValue;'#13#10
  +'  if Trim(EventCode)='''' then'#13#10'  begin'#13#10'    // provide a templ'
  +'ate event procedure'#13#10'    if (FoundString(EventToEdit,''Thread'')=1)'
  +#13#10'    and (FoundString(EventToEdit,''ThreadVars'')<>1) then'#13#10'    '
  +'  EventCode:= DfltThreadEventCode(NodeNameToEdit)'#13#10'    else if (Event'
  +'ToEdit=''DropAccepted'') then'#13#10'      EventCode := DfltTreeNodeEventCo'
  +'de'#13#10'    else'#13#10'      EventCode:= DfltEventCode;'#13#10'  end;'#13
  +#10'  CodeEditForm.CodeEdit.ItemValue := EventCode;'#13#10'  targetNode:=Fin'
  +'dDataNodeById(SystemNodeTree,NodeNameToEdit,'''',true);'#13#10'  CodeEditFo'
  +'rm.CodeEditInit.ItemValue := targetNode.GetEventInitCode(EventToEdit);'#13
  +#10#13#10'  CodeEditForm.CodeEdit.MessageLines:='''';'#13#10'  CodeEditForm.'
  +'CodeEditInit.MessageLines:='''';'#13#10#13#10'  CodeEditForm.Mode:=''EventC'
  +'ode'';'#13#10'  CodeEditForm.CodeEditMainTabs.TabIndex:=0;'#13#10'  CodeEdi'
  +'tForm.InitialiseOnShow(''Event Handler'',NodeNameToEdit,EventToEdit);'#13#10
  +#13#10'  ShowXForm(''CodeEditForm'',true);'#13#10#13#10'end;'#13#10#13#10'{$'
  +'ifdef JScript}'#13#10'procedure TOIEventWrapper.OIPasteTarget(e:TEventStatu'
  +'s;nodeId:string;myValue:string);'#13#10'var'#13#10'  i:integer;'#13#10'  Pa'
  +'steEvent:TEventStatus;'#13#10'begin'#13#10'//  happens when user hits ctrl-'
  +'V on the paste dialog form'#13#10'//  showmessage(''OIPasteTarget. value='''
  +'+myValue);'#13#10#13#10'  PasteEvent:=PasteDialogUnit.CompletionEvent;'#13
  +#10#13#10'  if PasteEvent<>nil then'#13#10'  begin'#13#10'    i:=PasteEvent.'
  +'AsyncProcsRunning.IndexOf(''CopyFromClip'');'#13#10'    if i>-1 then'#13#10
  +'    begin'#13#10'      PasteEvent.AsyncProcsRunning.Delete(i);'#13#10'    e'
  +'nd;'#13#10'  end;'#13#10'  FinishHTMLPasteAction(myValue);'#13#10#13#10'end'
  +';'#13#10'{$endif}'#13#10#13#10#13#10#13#10'function OITreeNodeHint(TreeLabe'
  +'lStr:String):String;'#13#10'var'#13#10'   SystemNodeName,p1:string;'#13#10
  +'begin'#13#10'  //showmessage(''OINodeTreeHint ''+TreeLabelStr);'#13#10'  Sy'
  +'stemNodeName:=TreeLabelToID( TreeLabelStr,''NavTree'',p1);'#13#10'  result '
  +':= GetNavigatorHint(SystemNodeTree,SystemNodeName);'#13#10'end;'#13#10#13#10
  +'procedure AddPropertyEditButton(BoxName:String; PropHBox:TXHBox; HBoxNode:T'
  +'DataNode;ro:Boolean);'#13#10'//                     HBox     <name>HB'#13#10
  +'//                       widget   <name>'#13#10'//                       Bu'
  +'tton    <name>Btn'#13#10'var'#13#10'  NewBtn:TXButton;'#13#10'  BtnNode:TDa'
  +'taNode;'#13#10'begin'#13#10'    NewBtn:=TXButton(AddDynamicWidget(''TXButto'
  +'n'',MainForm,HBoxNode,BoxName+''Btn'','''',''Top'',-1).ScreenObject);'#13#10
  ,'    NewBtn.ButtonWidth:=''30px'';'#13#10'    NewBtn.SpacingAround:=0;'#13#10
  +#13#10'    if ro then'#13#10'    begin'#13#10'      NewBtn.Caption:='' '';'
  +#13#10'      NewBtn.Enabled:=false'#13#10'    end'#13#10'    else'#13#10'   '
  +' begin'#13#10'      NewBtn.Caption:=''...'';'#13#10'      NewBtn.Hint:=''Ed'
  +'it Property'';'#13#10'      NewBtn.myNode.RegisterEvent(''ButtonClick'',@OI'
  +'EventWrapper.OIEditPropertyButtonClick);'#13#10'    end;'#13#10'end;'#13#10
  +#13#10'function AddPropertyContainer(ParentNode:TDataNode;BoxName:String; va'
  +'r VBoxNode,HBoxNode:TdataNode):TXHbox;'#13#10'var'#13#10'  NewHBox:TXHBox;'
  +#13#10'  NewVBox:TXVBox;'#13#10'   //                   VBox     <name>VB'#13
  +#10'   //                     HBox     <name>HB'#13#10'begin'#13#10'  VBoxNo'
  +'de:=AddDynamicWidget(''TXVBox'',MainForm,ParentNode,BoxName+''VB'','''',''L'
  +'eft'',-1);'#13#10'  NewVBox:=TXVBox(VBoxNode.ScreenObject);'#13#10'  HBoxNo'
  +'de:=AddDynamicWidget(''TXHBox'',MainForm,VBoxNode,BoxName+''HB'','''',''Rig'
  +'ht'',-1);'#13#10'  NewHBox:=TXHBox(HBoxNode.ScreenObject);'#13#10#13#10'  N'
  +'ewVBox.Border:=false;'#13#10'  NewHBox.Border:=false;'#13#10'  NewHBox.Cont'
  +'ainerHeight:='''';'#13#10#13#10'  NewHBox.Alignment:=''Right'';'#13#10#13#10
  +'  result:=NewHBox;'#13#10'end;'#13#10#13#10'procedure AddCheckBox(Propertie'
  +'sNode:TDataNode;BoxName,LblText,ItmValue:String;ro:Boolean;attribHint:Strin'
  +'g);'#13#10'var'#13#10'  NewCheckBox:TXCheckBox;'#13#10'  NewHBox:TXHBox;'#13
  +#10'  NewNode, HBoxNode, VBoxNode:TDataNode;'#13#10'  fn:TAddComponentFunc;'
  +#13#10'begin'#13#10'  NewHBox:=AddPropertyContainer(PropertiesNode,BoxName,V'
  +'BoxNode,HBoxNode);'#13#10'  NewCheckBox:=TXCheckBox(AddDynamicWidget(''TXCh'
  +'eckBox'',MainForm,HBoxNode,BoxName,'''',''Top'',-1).ScreenObject);'#13#10#13
  +#10'  AddPropertyEditButton(BoxName,NewHBox,HBoxNode,ro);'#13#10#13#10'  New'
  +'CheckBox.Checked:=myStrToBool(ItmValue);'#13#10'  NewCheckBox.LabelText:=Lb'
  +'lText;'#13#10'  NewCheckBox.ReadOnly:=ro;'#13#10'  NewCheckBox.LabelPos:='''
  +'Left'';'#13#10'  NewCheckBox.Hint:=attribHint;'#13#10#13#10'  NewHBox.Align'
  +'ment:=''Right'';'#13#10#13#10'  NewCheckBox.myNode.registerEvent(''Click'','
  +'@OIEventWrapper.OIEditProperty);'#13#10'end;'#13#10#13#10'procedure AddProp'
  +'ertyEditBox(ParentNode:TDataNode;BoxName,LblText,ItmValue:String;ro:Boolean'
  +';IsResource:Boolean;attribHint:String);'#13#10'var'#13#10'  NewEditBox:TXEd'
  +'itBox;'#13#10'  VBoxNode,HBoxNode,NewNode:TDataNode;'#13#10'  NewHBox:TXHBo'
  +'x;'#13#10'  fn:TAddComponentFunc;'#13#10'begin'#13#10'  NewHBox:=AddPropert'
  +'yContainer(ParentNode,BoxName,VBoxNode,HBoxNode);'#13#10'  NewEditBox:=TXEd'
  +'itBox(AddDynamicWidget(''TXEditBox'',MainForm,HBoxNode,BoxName,'''',''Top'''
  +',-1).ScreenObject);'#13#10#13#10'  if (not IsResource) then'#13#10'    AddP'
  +'ropertyEditButton(BoxName,NewHBox,HBoxNode,ro);'#13#10#13#10'  NewEditBox.L'
  +'abelText:=LblText;'#13#10'  NewEditBox.BoxWidth:=''120px'';'#13#10'  NewEdi'
  +'tBox.ReadOnly:=ro;'#13#10'  NewEditBox.LabelPos:=''Left'';'#13#10'  NewEdit'
  +'Box.Hint:=attribHint;'#13#10'  NewHBox.ContainerHeight:='''';'#13#10#13#10
  +'  NewHBox.Alignment:=''Right'';     //!!!! why do I have to set this again '
  +'here, for it to take effect??'#13#10#13#10'//  if length(ItmValue) < 131073'
  +' then'#13#10'    NewEditBox.ItemValue:=ItmValue;'#13#10'//  else'#13#10'// '
  +' begin'#13#10'//    NewEditBox.ItemValue:=''...'';'#13#10'//    NewEditBox.'
  +'Enabled:=false;'#13#10'//  end;'#13#10#13#10'  // event handler....'#13#10
  +'  // by default, the XEditBox has an onExit event handler that calls Handle'
  +'Event with an'#13#10'  // event type of ''Change''.'#13#10'  // HandleEvent'
  +' will expect to find a function of type TEventHandler defined within the ma'
  +'in or popup form, which'#13#10'  // was created at design time in the Lazar'
  +'us IDE.'#13#10'  // The name of the expected function is <EditBoxName>Handl'
  +'eChange.'#13#10'  // HOWEVER - Here, where the editbox is dynamically creat'
  +'ed,'#13#10'  // have to register an event in the data node instead.'#13#10
  +'  NewEditBox.myNode.registerEvent(''Change'',@OIEventWrapper.OIEditProperty'
  +');'#13#10'end;'#13#10#13#10'procedure AddPropertyColorPicker(ParentNode:TDa'
  +'taNode;BoxName,LblText,ItmValue:String;ro:Boolean;IsResource:Boolean;attrib'
  +'Hint:String);'#13#10'var'#13#10'  NewColorPicker:TXColorPicker;'#13#10'  VB'
  +'oxNode,HBoxNode:TDataNode;'#13#10'  NewHBox:TXHBox;'#13#10'begin'#13#10'  N'
  +'ewHBox:=AddPropertyContainer(ParentNode,BoxName,VBoxNode,HBoxNode);'#13#10
  +'  NewHBox.ContainerHeight:='''';'#13#10'  NewColorPicker:=TXColorPicker(Add'
  +'DynamicWidget(''TXColorPicker'',MainForm,HBoxNode,BoxName,'''',''Top'',-1).'
  +'ScreenObject);'#13#10#13#10'  if (not IsResource) then'#13#10'    AddProper'
  +'tyEditButton(BoxName,NewHBox,HBoxNode,ro);'#13#10#13#10'  NewColorPicker.It'
  +'emValue:=ItmValue;'#13#10'  NewColorPicker.LabelText:=LblText;'#13#10'  New'
  +'ColorPicker.BoxWidth:=''120px'';'#13#10'  NewColorPicker.ReadOnly:=ro;'#13
  ,#10'  NewColorPicker.LabelPos:=''Left'';'#13#10'  NewColorPicker.Hint:=attri'
  +'bHint;'#13#10#13#10'  NewHBox.Alignment:=''Right'';     //!!!! why do I hav'
  +'e to set this again here, for it to take effect??'#13#10#13#10'  // event h'
  +'andler....'#13#10'  NewColorPicker.myNode.registerEvent(''Change'',@OIEvent'
  +'Wrapper.OIEditProperty);'#13#10'end;'#13#10#13#10'procedure AddEventEditBox'
  +'(ParentNode:TDataNode;BoxName,LblText,ItmValue:String;ro:Boolean);'#13#10'v'
  +'ar'#13#10'  NewHBox:TXHBox;'#13#10'  NewButton:TXButton;'#13#10'  NewEditBo'
  +'x:TXEditBox;'#13#10'  NewNode1,NewNode2:TDataNode;'#13#10'    //           '
  +'        VBox     <name>VB'#13#10'    //                     HBox     <name>'
  +'HB'#13#10'    //                       EditBox   <name>'#13#10'    //      '
  +'                 Button    <name>Btn'#13#10'begin'#13#10'  NewHBox:=AddProp'
  +'ertyContainer(ParentNode,BoxName,NewNode1,NewNode2);'#13#10'  NewHBox.Conta'
  +'inerHeight:='''';'#13#10'  NewEditBox:=TXEditBox(AddDynamicWidget(''TXEditB'
  +'ox'',MainForm,NewNode2,BoxName,'''',''Top'',-1).ScreenObject);'#13#10'  New'
  +'Button:=TXButton(AddDynamicWidget(''TXButton'',MainForm,NewNode2,BoxName+'''
  +'Btn'','''',''Top'',-1).ScreenObject);'#13#10#13#10'  NewEditBox.ItemValue:='
  +'ItmValue;'#13#10'  NewEditBox.LabelText:=LblText;'#13#10'  NewEditBox.BoxWi'
  +'dth:=''100px'';'#13#10'  NewEditBox.ReadOnly:=ro;'#13#10'  NewEditBox.Label'
  +'Pos:=''Left'';'#13#10#13#10'  NewButton.Caption:=''...'';'#13#10'  NewButto'
  +'n.Hint:=''Edit Event Code'';'#13#10#13#10'  NewHBox.Alignment:=''Right'';'
  +#13#10#13#10'  // event handlers....'#13#10'  NewEditBox.myNode.registerEven'
  +'t(''Change'',@OIEventWrapper.OIEditEvent);'#13#10'  NewButton.myNode.Regist'
  +'erEvent(''ButtonClick'',@OIEventWrapper.OIEditEventCode);'#13#10'end;'#13#10
  +#13#10'procedure AddComboBox(PropertiesNode:TDataNode;BoxName,LblText,ItmVal'
  +'ue:String;ro:Boolean;Options:TStringList;attribHint:String);'#13#10'var'#13
  +#10'  NewComboBox:TXComboBox;'#13#10'  NewHBox:TXHBox;'#13#10'  VBoxNode,HBo'
  +'xNode:TDataNode;'#13#10'begin'#13#10'  NewHBox:=AddPropertyContainer(Proper'
  +'tiesNode,BoxName,VBoxNode,HBoxNode);'#13#10'  NewHBox.ContainerHeight:='''''
  +';'#13#10'  NewComboBox:=TXComboBox(AddDynamicWidget(''TXComboBox'',MainForm'
  +',HBoxNode,BoxName,'''',''Top'',-1).ScreenObject);'#13#10#13#10'  AddPropert'
  +'yEditButton(BoxName,NewHBox,HBoxNode,ro);'#13#10#13#10'  NewComboBox.LabelT'
  +'ext:=LblText;'#13#10'  NewComboBox.BoxWidth:=''120px'';'#13#10'  NewComboBo'
  +'x.ReadOnly:=ro;'#13#10'  NewComboBox.LabelPos:=''Left'';'#13#10'  NewComboB'
  +'ox.Alignment:=''Right'';'#13#10'  NewComboBox.Hint:=attribHint;'#13#10'  //'
  +'NewComboBox.OptionList:=StringListToListString(Options);'#13#10'  NewComboB'
  +'ox.OptionList:=StringListToJSONString(Options);'#13#10#13#10'  NewComboBox.'
  +'ItemValue:=ItmValue;  // this will set itemindex'#13#10#13#10'  NewHBox.Ali'
  +'gnment:=''Right'';'#13#10#13#10'  NewComboBox.myNode.registerEvent(''Change'
  +''',@OIEventWrapper.OIEditProperty);'#13#10'end;'#13#10#13#10'procedure Popu'
  +'lateObjectInspector(CurrentNode:TDataNode);'#13#10'var AttributePrefix:stri'
  +'ng;'#13#10'  i:integer;'#13#10'  PropertiesNode, EventsNode,OITabs:TDataNod'
  +'e;'#13#10'  myAttribs:TNodeAttributesArray;'#13#10'  ro:boolean;'#13#10'  s'
  +':boolean;'#13#10'  AttribOptions:TStringList;'#13#10'  tmp1,tmp2:string;'#13
  +#10'  tabIndex:String;'#13#10'  dfltAttrib:TDefaultAttribute;'#13#10'begin'
  +#13#10'  //if CurrentNode=nil then EXIT;'#13#10'  s:=SuppressEvents;'#13#10
  +'  SuppressEvents:=true;'#13#10#13#10'  //if CurrentNode<>nil then showmessa'
  +'ge(''PopulateObjectInspector. Node=''+CurrentNode.NodeName);'#13#10'  Prope'
  +'rtiesNode:=FindDataNodeById(SystemNodeTree,PropertyEditorScrollboxName,'''''
  +',true);'#13#10'  EventsNode:=FindDataNodeById(SystemNodeTree,EventsEditorSc'
  +'rollboxName,'''',true);'#13#10'  OITabs:=FindDataNodeById(SystemNodeTree,'''
  +'OITabs'','''',true);'#13#10'  if OITabs<>nil then'#13#10'    tabIndex:=OITa'
  +'bs.GetAttribute(''TabIndex'',false).AttribValue'#13#10'  else'#13#10'  begi'
  +'n'#13#10'    showmessage(''cannot find OITabs'');'#13#10'    EXIT;'#13#10' '
  +' end;'#13#10#13#10'  //showmessage(''TabIndex=''+TabIndex);'#13#10'  if (Pr'
  +'opertiesNode<>nil) then'#13#10'  begin'#13#10'    EditAttributeValue(Proper'
  +'tiesNode,''IsVisible'',''false'');'#13#10'    DeleteNodeChildren(Properties'
  +'Node);'#13#10'  end;'#13#10'  if (EventsNode<>nil) then'#13#10'  begin'#13
  +#10'    EditAttributeValue(EventsNode,''IsVisible'',''false'');'#13#10'    D'
  +'eleteNodeChildren(EventsNode);'#13#10'  end;'#13#10#13#10'  if (PropertiesN'
  +'ode<>nil) and (CurrentNode<>nil)  then'#13#10'  begin'#13#10'    if TabInde'
  +'x=''0'' then'#13#10'    begin'#13#10'      if CurrentNode<>nil then'#13#10
  +'      begin'#13#10'      //showmessage(''show properties'');'#13#10'       '
  +' {$ifdef JScript}'#13#10'        TXTabControl(OITabs.ScreenObject).TabIndex'
  +':=0;   //fudge. (browser)...make sure tab is still visible //   openTab(Tab'
  ,'Name,TabControlName,NameSpace:string);'#13#10'        {$endif}'#13#10'     '
  +'   AttributePrefix:=''OI''+AttributeEditorNameDelimiter+CurrentNode.NodeNam'
  +'e;'#13#10'        AddPropertyEditBox(PropertiesNode,AttributePrefix+Attribu'
  +'teEditorNameDelimiter'#13#10'                                  +''Name''+At'
  +'tributeEditorNameDelimiter'#13#10'                                  +''0'','
  +'''Name'',CurrentNode.NodeName,true,false,CurrentNode.NodeName);'#13#10#13#10
  +'        myAttribs:=CurrentNode.NodeAttributes;'#13#10'        for i:=0 to l'
  +'ength(myAttribs)-1 do'#13#10'        begin'#13#10'          dfltAttrib:=Get'
  +'DefaultAttrib(CurrentNode.NodeType,CurrentNode.NodeAttributes[i].AttribName'
  +');'#13#10'          ro:=CurrentNode.NodeAttributes[i].AttribReadOnly;'#13#10
  +'          //exclude Suppressed properties that user shouldn''t see'#13#10' '
  +'         if (FindSuppressedProperty(CurrentNode.NodeType,CurrentNode.NodeAt'
  +'tributes[i].AttribName)<0)'#13#10'          and (CurrentNode.NodeAttributes'
  +'[i].AttribName<>''ParentName'') then'#13#10'            if CurrentNode.Node'
  +'Attributes[i].AttribType = ''Boolean'' then'#13#10'            begin'#13#10
  +'              //showmessage(''bool property ''+CurrentNode.NodeAttributes[i'
  +'].AttribName+'' ''+CurrentNode.NodeAttributes[i].AttribValue);'#13#10'     '
  +'         AddCheckBox(PropertiesNode,AttributePrefix+AttributeEditorNameDeli'
  +'miter'#13#10'                      +CurrentNode.NodeAttributes[i].AttribNam'
  +'e+AttributeEditorNameDelimiter'#13#10'                      +IntToStr(i+2),'
  +#13#10'                       CurrentNode.NodeAttributes[i].AttribName,Curre'
  +'ntNode.NodeAttributes[i].AttribValue,ro,dfltAttrib.AttribHint);'#13#10'    '
  +'        end'#13#10'            else'#13#10'            begin'#13#10'       '
  +'       AttribOptions:=LookupAttribOptions(CurrentNode.NodeType,CurrentNode.'
  +'NodeAttributes[i].AttribName);'#13#10'              if AttribOptions<>nil t'
  +'hen'#13#10'              begin'#13#10'                AddComboBox(Propertie'
  +'sNode,AttributePrefix+AttributeEditorNameDelimiter'#13#10'                 '
  +'     +CurrentNode.NodeAttributes[i].AttribName+AttributeEditorNameDelimiter'
  +#13#10'                      +IntToStr(i+2),'#13#10'                       C'
  +'urrentNode.NodeAttributes[i].AttribName,CurrentNode.NodeAttributes[i].Attri'
  +'bValue,ro,'#13#10'                       AttribOptions,dfltAttrib.AttribHin'
  +'t);'#13#10'              end'#13#10'              else if CurrentNode.NodeA'
  +'ttributes[i].AttribType=''Color'' then'#13#10'                AddPropertyCo'
  +'lorPicker(PropertiesNode,AttributePrefix+AttributeEditorNameDelimiter'#13#10
  +'                      +CurrentNode.NodeAttributes[i].AttribName+AttributeEd'
  +'itorNameDelimiter'#13#10'                      +IntToStr(i+2),'#13#10'     '
  +'                  CurrentNode.NodeAttributes[i].AttribName,CurrentNode.Node'
  +'Attributes[i].AttribValue,ro,false,dfltAttrib.AttribHint)'#13#10'          '
  +'    else'#13#10'                AddPropertyEditBox(PropertiesNode,Attribute'
  +'Prefix+AttributeEditorNameDelimiter'#13#10'                    +CurrentNode'
  +'.NodeAttributes[i].AttribName+AttributeEditorNameDelimiter'#13#10'         '
  +'           +IntToStr(i+2),'#13#10'                     CurrentNode.NodeAttr'
  +'ibutes[i].AttribName,CurrentNode.NodeAttributes[i].AttribValue,ro,false,dfl'
  +'tAttrib.AttribHint);'#13#10'            end;'#13#10#13#10'        end;'#13
  +#10'        EditAttributeValue(PropertiesNode,''IsVisible'',''true'');'#13#10
  +'       end;'#13#10'      end;'#13#10'      //------------------- Display th'
  +'e registered Events -----------------------'#13#10'      if EventsNode<>nil'
  +'  then'#13#10'      begin'#13#10' //       EditAttributeValue(''OITabs'','''
  +'TabIndex'',''1'');     // raise the events tab (fudge...sigsiv avoidance...'
  +'?)'#13#10'        if TabIndex=''1'' then'#13#10'        begin'#13#10'      '
  +'    {$ifdef JScript}'#13#10'          TXTabControl(OITabs.ScreenObject).Tab'
  +'Index:=1;   //fudge. (browser)...make sure tab is still visible //   openTa'
  +'b(TabName,TabControlName,NameSpace:string);'#13#10'          {$endif}'#13#10
  +#13#10'          if CurrentNode<>nil then'#13#10'          if ((CurrentNode.'
  +'IsDynamic) or (CurrentNode=UIRootNode)) then'#13#10'          begin'#13#10
  +'            AttributePrefix:=''OI''+AttributeEditorNameDelimiter+CurrentNod'
  +'e.NodeName;'#13#10#13#10'              for i:=0 to CurrentNode.MyEventTypes'
  +'.count-1 do'#13#10'              begin'#13#10#13#10'                AddEven'
  +'tEditBox(EventsNode,AttributePrefix+AttributeEditorNameDelimiter //OI__node'
  +'name__'#13#10'                            +CurrentNode.MyEventTypes[i]+Attr'
  +'ibuteEditorNameDelimiter   //eventtype__'#13#10'                           '
  +' +IntToStr(i+2),                                             //suffix'#13#10
  +'                             CurrentNode.MyEventTypes[i],'#13#10'          '
  +'                   CurrentNode.myEventHandlers[i].TheCode,'#13#10'         '
  ,'                    true);'#13#10#13#10'              end;'#13#10'         '
  +' end;'#13#10'          EditAttributeValue(EventsNode,''IsVisible'',''true'''
  +');'#13#10'        end;'#13#10'      end;'#13#10' //     EditAttributeValue('
  +'''OITabs'',''TabIndex'',TabIndex);     // put back as it was'#13#10'  end;'
  +#13#10#13#10'  SuppressEvents:=s;'#13#10#13#10'end;'#13#10#13#10'procedure O'
  +'IPropsEventsTabChange;'#13#10'begin'#13#10'  PopulateObjectInspector(Object'
  +'InspectorSelectedNavTreeNode);'#13#10'end;'#13#10#13#10#13#10'function Popu'
  +'lateResourceInspector(CurrentNode:TDataNode):String;'#13#10'var AttributePr'
  +'efix:string;'#13#10'  i:integer;'#13#10'  PropertiesNode,btnNode:TDataNode;'
  +#13#10'  myAttribs,AttrParams:TNodeAttributesArray;'#13#10'  ro:boolean;'#13
  +#10'  s:boolean;'#13#10'begin'#13#10'  s:=SuppressEvents;'#13#10'  SuppressE'
  +'vents:=true;'#13#10#13#10'  if (CurrentNode<>nil)'#13#10'  and ((CurrentNod'
  +'e.NodeClass=''RSS'')'#13#10'    or (CurrentNode.NodeType=''TXComposite'')) '
  +'then'#13#10'  begin'#13#10'    btnNode:=FindDataNodeById(systemnodetree,''R'
  +'esourceTreeDelBtn'','''',true);'#13#10'    TXButton(btnNode.ScreenObject).E'
  +'nabled:=true;'#13#10'    btnNode:=FindDataNodeById(systemnodetree,''Resourc'
  +'eTreeLoadBtn'','''',true);'#13#10'    TXButton(btnNode.ScreenObject).Enable'
  +'d:=true;'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    btnNode:=Find'
  +'DataNodeById(systemnodetree,''ResourceTreeDelBtn'','''',true);'#13#10'    T'
  +'XButton(btnNode.ScreenObject).Enabled:=false;'#13#10'    btnNode:=FindDataN'
  +'odeById(systemnodetree,''ResourceTreeLoadBtn'','''',true);'#13#10'    TXBut'
  +'ton(btnNode.ScreenObject).Enabled:=false;'#13#10'  end;'#13#10#13#10'  Prop'
  +'ertiesNode:=FindDataNodeById(SystemNodeTree,ResourceEditorScrollboxName,'''
  +''',true);'#13#10'  if PropertiesNode<>nil  then'#13#10'  begin'#13#10'    E'
  +'ditAttributeValue(PropertiesNode,''IsVisible'',''false'');'#13#10'    Delet'
  +'eNodeChildren(PropertiesNode);'#13#10#13#10'    if (CurrentNode<>nil) and ('
  +'CurrentNode.NodeType<>'''') then     // eg. on node headers (placeholders)'
  +#13#10'    begin'#13#10#13#10'      AttributePrefix:=''RI''+AttributeEditorN'
  +'ameDelimiter+CurrentNode.NodeName;'#13#10'      AddPropertyEditBox(Properti'
  +'esNode,AttributePrefix+AttributeEditorNameDelimiter'#13#10'                '
  +'                +''Type''+AttributeEditorNameDelimiter'#13#10'             '
  +'                   +''1'',''Type'',CurrentNode.NodeType,true,true,'''');'#13
  +#10#13#10'      myAttribs:=CurrentNode.NodeAttributes;'#13#10'      for i:=0'
  +' to length(myAttribs)-1 do'#13#10'      begin'#13#10'        if CurrentNode'
  +'.NodeAttributes[i].AttribName<>''ParentName'' then'#13#10'        begin'#13
  +#10'          ro:=CurrentNode.NodeAttributes[i].AttribReadOnly;'#13#10'     '
  +'     AddPropertyEditBox(PropertiesNode,AttributePrefix+AttributeEditorNameD'
  +'elimiter'#13#10'                    +CurrentNode.NodeAttributes[i].AttribNa'
  +'me+AttributeEditorNameDelimiter'#13#10'                    +IntToStr(i+2),'
  +#13#10'                     CurrentNode.NodeAttributes[i].AttribName,Current'
  +'Node.NodeAttributes[i].AttribValue,ro,true,'''');'#13#10'        end;'#13#10
  +'      end;'#13#10'    end;'#13#10'    EditAttributeValue(PropertiesNode,''I'
  +'sVisible'',''True'');'#13#10'  end;'#13#10'  SuppressEvents:=s;'#13#10'end;'
  +#13#10#13#10'procedure OIAddCodeUnitNode(UnitType:String);'#13#10'var'#13#10
  +'  NewName,UnitCode:String;'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10
  +'  // create a data node for the new unit, and add under CodeRootNode.'#13#10
  +'  // Dialog for name entry'#13#10'  NewName:=getname(''Enter Unit Name:'');'
  +#13#10#13#10'  // Is the source node named uniquely?'#13#10'  if (NewName<>'
  +''''') and (ComponentNameIsUnique(NewName,'''')) then'#13#10'  begin'#13#10
  +'    NewNode:=TDataNode.Create(''Code'',NewName,'''',UnitType,true);'#13#10
  +'    NewNode.NodeName:=NewName;'#13#10'    UnitCode:= DfltUnitCode(NewName,U'
  +'nitType);'#13#10'    NewNode.SetAttributeValue(''Code'',UnitCode,''String'''
  +');'#13#10#13#10'    ObjectInspectorSelectedCodeTreeNode:=InsertSystemNode(C'
  +'odeRootNode,NewNode,-1);'#13#10'    OISelectedCodeProcName:='''';'#13#10'  '
  +'  ObjectInspectorSelectedCodeNodeText:='''';'#13#10#13#10'    // rebuild th'
  +'e code tree'#13#10'    RebuildCodeTree;'#13#10#13#10'  end;'#13#10'end;'#13
  +#10#13#10#13#10'procedure OIAddCodeFuncNode;'#13#10'var'#13#10'  NewName,FnC'
  +'ode:String;'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10'  if (ObjectIns'
  +'pectorSelectedCodeTreeNode=nil)'#13#10'  or (ObjectInspectorSelectedCodeTre'
  +'eNode.NodeName<>''CodeUnits'') then'#13#10'    showmessage(''Please select '
  +'the parent node ''''CodeUnits'''' first'')'#13#10'  else'#13#10'  begin'#13
  +#10'  // create a data node for the new function, and add under the selected'
  +' Unit node.'#13#10'    // Dialog for name entry'#13#10'    NewName:=getname'
  +'(''Enter Function Name:'');'#13#10#13#10'     // Is the function node named'
  ,' uniquely?'#13#10'    if (NewName<>'''') and (ComponentNameIsUnique(NewName'
  +','''')) then'#13#10'    begin'#13#10'      NewNode:=TDataNode.Create(''Code'
  +''',NewName,'''',''Function'',true);'#13#10'      NewNode.NodeName:=NewName;'
  +#13#10'      FnCode:= DfltFunctionCode(NewName);'#13#10'      NewNode.SetAtt'
  +'ributeValue(''Code'',FnCode,''String'');'#13#10#13#10'      ObjectInspector'
  +'SelectedCodeTreeNode:=InsertSystemNode(ObjectInspectorSelectedCodeTreeNode,'
  +'NewNode,-1);'#13#10'      ObjectInspectorSelectedCodeNodeText:='''';'#13#10
  +'      OISelectedCodeProcName:='''';'#13#10'      // rebuild the code tree'
  +#13#10'      RebuildCodeTree;'#13#10#13#10'    end;'#13#10'  end;'#13#10'end'
  +';'#13#10#13#10#13#10#13#10#13#10'procedure OIEditCodeUnit;'#13#10'var'#13#10
  +'  UnitCode, Inputs, EventType:string;'#13#10'  tmp,NodeNameToEdit:String;'
  +#13#10'  FuncInputs:TCodeInputs;'#13#10'  i:integer;'#13#10'  bits:TStringLi'
  +'st;'#13#10'  AllKernels:TAnimCodeArray;'#13#10'begin'#13#10'  if ObjectInsp'
  +'ectorSelectedCodeTreeNode<>nil then'#13#10'  begin'#13#10'    if (ObjectIns'
  +'pectorSelectedCodeTreeNode.NodeType=''PasUnit'')'#13#10'    or (ObjectInspe'
  +'ctorSelectedCodeTreeNode.NodeType=''PythonScript'')'#13#10'    or (ObjectIn'
  +'spectorSelectedCodeTreeNode.NodeType=''Function'') then'#13#10'    begin'#13
  +#10'      NodeNameToEdit:=ObjectInspectorSelectedCodeTreeNode.NodeName;'#13
  +#10#13#10'      // pop up the syntax editor.'#13#10'      //CodeEditForm.Ini'
  +'tialise(''Unit'',NodeNameToEdit,'''');'#13#10'      UnitCode:=ObjectInspect'
  +'orSelectedCodeTreeNode.GetAttribute(''Code'',true).AttribValue;'#13#10'    '
  +'  if UnitCode='''' then'#13#10'      begin'#13#10'        // provide a temp'
  +'late unit or function'#13#10'        if ObjectInspectorSelectedCodeTreeNode'
  +'.NodeType=''PasUnit'' then'#13#10'          UnitCode:= DfltUnitCode(NodeNam'
  +'eToEdit,''PasUnit'')'#13#10'        else if ObjectInspectorSelectedCodeTree'
  +'Node.NodeType=''Function'' then'#13#10'          UnitCode:= DfltFunctionCod'
  +'e(NodeNameToEdit)'#13#10'        else if ObjectInspectorSelectedCodeTreeNod'
  +'e.NodeType=''PythonScript'' then'#13#10'          UnitCode:= DfltPythonCode'
  +';'#13#10'      end;'#13#10'      CodeEditForm.CodeEdit.ItemValue := UnitCod'
  +'e;'#13#10'      CodeEditForm.CodeEdit.MessageLines:='''';'#13#10#13#10'//  '
  +'    if ObjectInspectorSelectedCodeTreeNode.NodeType<>''PasUnit'' then'#13#10
  +'//      begin'#13#10'//        Inputs:=ObjectInspectorSelectedCodeTreeNode.'
  +'GetAttribute(''Inputs'',true).AttribValue;'#13#10'//        FuncInputs:=Str'
  +'ingToCodeInputs(Inputs);'#13#10'//        for i:=0 to length(FuncInputs)-1 '
  +'do'#13#10'//        begin'#13#10'//          CodeEditForm.AddInputBox(FuncI'
  +'nputs[i]);'#13#10'//        end;'#13#10'//      end;'#13#10#13#10'      Cod'
  +'eEditForm.Mode:=ObjectInspectorSelectedCodeTreeNode.NodeType+''Code'';'#13
  +#10'      CodeEditForm.InitialiseOnShow(ObjectInspectorSelectedCodeTreeNode.'
  +'NodeType,NodeNameToEdit,'''');'#13#10'      {$ifdef JScript}'#13#10'      S'
  +'howXForm(''CodeEditForm'',true);'#13#10'      {$endif}'#13#10'      if Obje'
  +'ctInspectorSelectedCodeTreeNode.NodeType=''PasUnit'' then'#13#10'      begi'
  +'n'#13#10'        //showmessage(''OIEditCodeUnit ''+ObjectInspectorSelectedC'
  +'odeTreeNode.NodeType+'' ''+ObjectInspectorSelectedCodeTreeNode.NodeName+'' '
  +'''+inttostr(OISelectedCodeLineNum));'#13#10'        CodeEditForm.SetCursorP'
  +'osition(OISelectedCodeLineNum,1);'#13#10'      end;'#13#10'      {$ifndef J'
  +'Script}'#13#10'      ShowXForm(''CodeEditForm'',true);'#13#10'      {$endif'
  +'}'#13#10#13#10'    end'#13#10'    else'#13#10'    if (ObjectInspectorSelect'
  +'edCodeTreeNode.NodeClass=''UI'')'#13#10'    or (ObjectInspectorSelectedCode'
  +'TreeNode.NodeClass=''NV'')'#13#10'    or (ObjectInspectorSelectedCodeTreeNo'
  +'de.NodeClass=''SVG'')'#13#10'    or ((ObjectInspectorSelectedCodeTreeNode.N'
  +'odeClass=''Root'')'#13#10'      and (ObjectInspectorSelectedCodeTreeNode.No'
  +'deName=''UIRootNode''))'#13#10'    then'#13#10'    begin'#13#10'      // se'
  +'lected node is UI so we are looking at some event handler code'#13#10'     '
  +' // OR Selected node is the UI Root so we are looking at one of the ''syste'
  +'m'' level events'#13#10'      // navigate to the relevant UI element'#13#10
  +'      DoSelectNavTreeNode(ObjectInspectorSelectedCodeTreeNode,false);'#13#10
  +'      // Find which event to edit...'#13#10'      // delete to first )'#13
  +#10'      tmp:=ObjectInspectorSelectedCodeNodeText;'#13#10'      bits:=Strin'
  +'gSplit(tmp,'')'');'#13#10'      if bits.Count=2 then'#13#10'      begin'#13
  +#10'        // event follows the space'#13#10'        EventType:=TrimWhiteSp'
  +'ace(bits[1]);'#13#10'        if EventType<>'''' then'#13#10'          // Po'
  +'p up the event code editor'#13#10'          OIEventWrapper.OIEditEventCodeF'
  +'romCodeTree(ObjectInspectorSelectedCodeTreeNode.Nodename,EventType)'#13#10
  +'        else if (ObjectInspectorSelectedCodeTreeNode.NodeType=''TXGPUCanvas'
  ,''')'#13#10'        then'#13#10'        begin'#13#10'          ShowGPUEditor'
  +'(ObjectInspectorSelectedCodeTreeNode,0);'#13#10'        end;'#13#10#13#10' '
  +'     end;'#13#10#13#10'    end'#13#10'    else'#13#10#13#10'      showmessa'
  +'ge(''Select a Code Node first - selected node is not an appropriate type'')'
  +';'#13#10#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    showmessage('''
  +'Select a Code Node first'');'#13#10'  end;'#13#10'end;'#13#10#13#10'procedu'
  +'re OICodeSearch;'#13#10'begin'#13#10'  // pop up the syntax editor.'#13#10
  +'  CodeEditForm.CodeEdit.ItemValue := '''';'#13#10'  CodeEditForm.CodeEdit.M'
  +'essageLines:='''';'#13#10#13#10'  CodeEditForm.Mode:=''SearchCode'';'#13#10
  +'  if (ObjectInspectorSelectedCodeTreeNode<>nil)'#13#10'  and (ObjectInspect'
  +'orSelectedCodeTreeNode.NodeType=''PasUnit'') then'#13#10'  begin'#13#10'   '
  +' CodeEditForm.CodeEditFindTxt.ItemValue:=OISelectedCodeProcName;'#13#10'  e'
  +'nd;'#13#10'  CodeEditForm.InitialiseOnShow(''Search Results'','''','''');'
  +#13#10'  ShowXForm(''CodeEditForm'',true);'#13#10'  {$ifdef JScript}'#13#10
  +'  CodeEditForm.CodeEditFindTxt.HasFocus:=true;'#13#10'  {$endif}'#13#10'end'
  +';'#13#10#13#10'procedure OIDeleteCodeUnit;'#13#10'begin'#13#10'  if ObjectI'
  +'nspectorSelectedCodeTreeNode<>nil then'#13#10'  begin'#13#10'    if  (Objec'
  +'tInspectorSelectedCodeTreeNode.NodeType=''PasUnit'')'#13#10'    or  (Object'
  +'InspectorSelectedCodeTreeNode.NodeType=''PythonScript'')'#13#10'    or  (Ob'
  +'jectInspectorSelectedCodeTreeNode.NodeType=''Function'') then'#13#10'    be'
  +'gin'#13#10'      if XIDEConfirm(''OK to delete ''+ObjectInspectorSelectedCo'
  +'deTreeNode.NodeName+''?'') then'#13#10'      begin'#13#10'        DeleteIte'
  +'m(CodeRootNode,ObjectInspectorSelectedCodeTreeNode);'#13#10'        OISelec'
  +'tedCodeProcName:='''';'#13#10'      end;'#13#10'    end'#13#10'    else'#13
  +#10'      if  (ObjectInspectorSelectedCodeTreeNode.NodeType=''Root'') then'
  +#13#10'        showmessage(''Select a Code Node (Unit or Function) first'')'
  +#13#10'      else'#13#10'        showmessage(''Cannot delete event code here'
  +''');'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    showmessage(''Sel'
  +'ect a Code Node (Unit or Function) first'');'#13#10'  end;'#13#10'end;'#13
  +#10#13#10'Procedure OIEncapsulate;'#13#10'var'#13#10'  fullstring,itemName:S'
  +'tring;'#13#10'begin'#13#10'  // Take the current user-defined system, and s'
  +'tore its structure in the resource tree under ''Composites'', with'#13#10' '
  +' // a name provided by the user, and save to local storage.'#13#10'  itemNa'
  +'me:=getname(''Enter Name of new Composite Item:'');'#13#10'  fullstring:=Bu'
  +'ildSystemString(true);'#13#10'  itemName:=itemName+''.xcmp'';'#13#10'  {$if'
  +'ndef JScript}'#13#10'  itemName:=''SavedSystems/''+itemName;'#13#10'  {$end'
  +'if}'#13#10'  WriteToLocalStore(itemName,fullstring);'#13#10#13#10'  Rebuild'
  +'ResourcesTree;'#13#10'end;'#13#10#13#10'procedure OIAddInterfaceElement;'#13
  +#10'var'#13#10'  myIntf:TXCompositeIntf;'#13#10'  NewName,tabIndex:String;'
  +#13#10'  ok:Boolean;'#13#10'  OITabs:TDataNode;'#13#10'  i:integer;'#13#10'b'
  +'egin'#13#10'  if (ObjectInspectorSelectedNavTreeNode=nil)'#13#10'  or (Obje'
  +'ctInspectorSelectedNavTreeNode.NodeType<>''TXCompositeIntf'') then'#13#10' '
  +'   showmessage(''Please select a Composite Interface (TXCompositeIntf) elem'
  +'ent first'')'#13#10'  else'#13#10'  begin'#13#10'    myIntf:=TXCompositeInt'
  +'f(ObjectInspectorSelectedNavTreeNode.ScreenObject);'#13#10#13#10'    OITabs'
  +':=FindDataNodeById(SystemNodeTree,''OITabs'','''',true);'#13#10'    if OITa'
  +'bs<>nil then'#13#10'      tabIndex:=OITabs.GetAttribute(''TabIndex'',false)'
  +'.AttribValue;'#13#10#13#10'    if tabIndex=''0'' then'#13#10'    begin'#13
  +#10#13#10'      // create a new attribute for the selected node'#13#10'     '
  +' ok:=false;'#13#10'      while not ok do'#13#10'      begin'#13#10'        '
  +'// Dialog for name entry'#13#10'        NewName:= XIDEPrompt(''Enter Proper'
  +'ty Name'',NewName);'#13#10#13#10'        ok:=true;'#13#10'         // Is th'
  +'e property named uniquely?'#13#10'        if (NewName<>'''') then'#13#10'  '
  +'      begin'#13#10'        if (myIntf.PropertyNameIsUnique(NewName)) then'
  +#13#10'          begin'#13#10'            ObjectInspectorSelectedNavTreeNode'
  +'.AddAttribute(NewName,''String'','''',false);'#13#10'            PopulateOb'
  +'jectInspector(ObjectInspectorSelectedNavTreeNode);'#13#10'          end'#13
  +#10'          else'#13#10'          begin'#13#10'            ok:=false;'#13
  +#10'            showmessage(NewName+'' already exists'');'#13#10'          e'
  +'nd;'#13#10'        end;'#13#10'      end;'#13#10#13#10'    end'#13#10'    e'
  +'lse'#13#10'    begin'#13#10'      // create a new event for the selected no'
  +'de'#13#10'      ok:=false;'#13#10'      while not ok do'#13#10'      begin'
  +#13#10'        // Dialog for name entry'#13#10'        NewName:= XIDEPrompt('
  +'''Enter Event Name'',NewName);'#13#10#13#10'        ok:=true;'#13#10'      '
  ,'   // Is the event named uniquely?'#13#10'        if (NewName<>'''') then'
  +#13#10'        begin'#13#10'        if (myIntf.EventNameIsUnique(NewName)) t'
  +'hen'#13#10'          begin'#13#10'            ObjectInspectorSelectedNavTre'
  +'eNode.AddEvent(NewName,'''','''');'#13#10'            PopulateObjectInspect'
  +'or(ObjectInspectorSelectedNavTreeNode);'#13#10'          end'#13#10'       '
  +'   else'#13#10'          begin'#13#10'            ok:=false;'#13#10'       '
  +'     showmessage(NewName+'' already exists'');'#13#10'          end;'#13#10
  +'        end;'#13#10'      end;'#13#10#13#10'    end;'#13#10'  end;'#13#10'e'
  +'nd;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure InitAutomatedCursor;'#13
  +#10'begin'#13#10'  asm'#13#10'  // Find the animation rule by name'#13#10'  '
  +' var ss = document.styleSheets[0];'#13#10'   var anim;'#13#10'     for (var'
  +' i=0; i<ss.cssRules.length; i++) {'#13#10'          //alert(''i=''+i+'' nam'
  +'e=''+ss.cssRules[i].name);'#13#10'   '#9'if (ss.cssRules[i].name === ''anim'
  +''') {'#13#10'   '#9'  anim = ss.cssRules[i];'#13#10'   '#9'  break;'#13#10
  +'           }'#13#10'         }'#13#10'      if (anim==null) {'#13#10'      '
  +'  //alert(''did not find anim'');'#13#10'        // Dynamically create a ke'
  +'yframe animation..... Initalise to top left corner'#13#10'        document.'
  +'styleSheets[0].insertRule("@keyframes anim {from {top: 0px;  left: 0px;} to'
  +' {top: 0px;  left: 0px;}}");'#13#10'        var AutomatedCursorDiv = docume'
  +'nt.getElementById("AutomatedCursor");'#13#10'        AutomatedCursorDiv.sty'
  +'le.animation = "anim 1s linear forwards";'#13#10'        //AutomatedCursorD'
  +'iv.style.animation = "anim 1s linear";'#13#10'      }'#13#10'  end;'#13#10
  +'end;'#13#10'{$endif}'#13#10#13#10#13#10#13#10'begin'#13#10'//  setlength(Li'
  +'stOfComposites,0);'#13#10#13#10'  AddAttribOptions(''Root'',''DeploymentMod'
  +'e'',DeploymentModeOptions);'#13#10'  AddAttribOptions(''Root'',''ShowResour'
  +'ces'',ShowResourcesOptions);'#13#10#13#10'  DesignMode:=true;'#13#10'  OIEv'
  +'entWrapper := TOIEventWrapper.Create;'#13#10'  ObjectInspectorSelectedNavTr'
  +'eeNode:=nil;'#13#10'  ObjectInspectorSelectedCodeTreeNode:=nil;'#13#10'  OI'
  +'SelectedCodeProcName:='''';'#13#10'  OISelectedCodeLineNum:=1;'#13#10'  Ava'
  +'ilableResourcesSelectedNode:=nil;'#13#10'  ObjectInspectorSelectedCodeNodeT'
  +'ext:='''';'#13#10'  {$ifndef JScript}'#13#10'  GlobalSuppressFrameDisplay:='
  +'true;'#13#10'  {$endif}'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('codeeditor','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit CodeEditor;'#13#10'{$'
  +'ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'int'
  +'erface'#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUtils,Compi'
  +'leUserCode,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, '
  +'Graphics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, StdCtrls, ComCtrls, G'
  +'rids,'#13#10'  TypInfo, LazIDEIntf,'#13#10'  LazsUtils,'#13#10'  Events, Ty'
  +'pes,'#13#10'  SynEdit, SynEditTypes,'#13#10'  {$else}'#13#10'  HTMLUtils,'
  +#13#10'  {$endif}'#13#10'  webTranspilerUtils, UtilsJSCompile, WrapperPanel,'
  +' XScrollBox, XVBox, XHBox, XTree, XMemo, XTabControl, XButton,'#13#10'  XLa'
  +'bel, XEditBox, XCheckBox, XComboBox, XHyperLink, XRadioBtns, XCode, XForm, '
  +'XGPUCanvas, XGPUEditor,'#13#10'  XMenu, InputSelectUnit, PopupMemo,EventsIn'
  +'terface;'#13#10#13#10#13#10#13#10'type'#13#10#13#10'  { TCodeEditForm }'#13
  +#10#13#10'  TCodeEditForm = class(TXForm)'#13#10'    CodeEditInputLabelsHBox'
  +': TXHBox;'#13#10'    CodeEditFormXHBox2: TXHBox;'#13#10'    CodeEditSaveBtn'
  +': TXButton;'#13#10'    CodeEditCancelBtn: TXButton;'#13#10'    CodeEditForm'
  +'XHBox1: TXHBox;'#13#10'    CodeEditFormXVBox1: TXVBox;'#13#10'    CodeEdit:'
  +' TXCode;'#13#10'    CodeEditParamListScrollBox: TXScrollBox;'#13#10'    Cod'
  +'eEditListLbl: TXLabel;'#13#10'    CodeEditAddInputBtn: TXButton;'#13#10'   '
  +' CodeEditDelInputBtn: TXButton;'#13#10'    CodeEditInputsVBox: TXVBox;'#13
  +#10'    CodeEditInputsVBox1: TXVBox;'#13#10'    CodeEditColLabl1: TXLabel;'
  +#13#10'    CodeEditColLbl2: TXLabel;'#13#10'    CodeEditColLbl3: TXLabel;'#13
  +#10'    CodeEditFunctionResultType: TXComboBox;'#13#10'    CodeEditHelpBtn: '
  +'TXButton;'#13#10'    CodeEditMainTabs: TXTabControl;'#13#10'    CodeEditMai'
  +'nCodeTab: TXTabSheet;'#13#10'    CodeEditInitTab: TXTabSheet;'#13#10'    Co'
  +'deEditInit: TXCode;'#13#10'    CodeEditFindBtn: TXButton;'#13#10'    CodeEd'
  +'itFindTxt: TXEditBox;'#13#10'    CodeEditFindNextBtn: TXButton;'#13#10'    '
  +'CodeEditFindCase: TXCheckBox;'#13#10'    CodeEditFindGlobal: TXCheckBox;'#13
  +#10'    CodeEditContextLabel: TXLabel;'#13#10'    {$ifndef JScript}'#13#10' '
  +'   procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResize(S'
  +'ender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13#10'   '
  +' {$endif}'#13#10'    procedure AddInputBox(myInput:TCodeInputRec);'#13#10' '
  +'   procedure Initialise;'#13#10'    procedure InitialiseOnShow(Context,Node'
  +'Name,EvType:String);'#13#10'    procedure CodeEditAddInputBtnHandleButtonCl'
  +'ick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    pro'
  +'cedure CodeEditDelInputBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiStri'
  +'ng; myValue: AnsiString);'#13#10'    procedure CodeEditHandleClickMessage(e'
  +':TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedur'
  +'e CodeEditInitHandleClickMessage(e: TEventStatus; nodeID: AnsiString; myVal'
  +'ue: AnsiString);'#13#10'    procedure CodeEditCancelBtnHandleButtonClick(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure'
  +' CodeEditHelpBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString;  myVal'
  +'ue: AnsiString);'#13#10'    procedure CodeEditSaveBtnHandleButtonClick(e:TE'
  +'ventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure E'
  +'ditInputSynonym(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'    procedure EditInputSource(e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'    procedure ShowInputSelector(e:TEventStatus;nodeID'
  +': AnsiString;myValue: AnsiString);'#13#10'    procedure InputCheckBoxClick('
  +'e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedu'
  +'re CodeEditFindBtnHandleButtonClick(e: TEventStatus; nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'    procedure CodeEditFindNextBtnHandleButtonCli'
  +'ck(e: TEventStatus; nodeID: AnsiString; myValue: AnsiString);'#13#10'    fu'
  +'nction ValidateInputs:Boolean;'#13#10'    procedure DoLocalSearch(TextToFin'
  +'d:String);'#13#10'    procedure DoGlobalSearch(TextToFind:String);'#13#10' '
  +'   procedure NavigateToFirstError;'#13#10'    procedure SetCursorPosition(t'
  +'argetLine,targetChar:integer);'#13#10'    procedure DisplayIncFile(FileName'
  +',lineNum,charPos:String);'#13#10'    procedure HandleMessageClick(e:TEventS'
  +'tatus;nodeID: AnsiString; myValue: AnsiString; ThisCodeEdit:TXCode);'#13#10
  +'    procedure CodeEditMainTabsHandleChange(e: TEventStatus; nodeID: AnsiStr'
  +'ing; myValue: AnsiString);'#13#10'  private'#13#10#13#10'  public'#13#10'  '
  ,'  Mode:String;               //  dll, EventCode, FunctionCode, UnitCode, Pa'
  +'sUnitCode, PythonScriptCode'#13#10'    TargetNodeName:String;'#13#10'    Ev'
  +'entType:String;'#13#10#13#10'    NumInputs:integer;'#13#10'    MyInputs:TCo'
  +'deInputs;'#13#10'    CheckedInputs:Array of Boolean;'#13#10'    {$ifdef JSc'
  +'ript}'#13#10'    LastSearchIndex:integer;'#13#10'    RegExp:TObject;'#13#10
  +'    {$endif}'#13#10'end;'#13#10#13#10'var'#13#10'  CodeEditForm: TCodeEditF'
  +'orm;'#13#10'  CodeEditStatus:String;'#13#10'  OIEditBox, CodeFormRoot:TData'
  +'Node;'#13#10#13#10'implementation'#13#10'uses XObjectInsp;'#13#10#13#10'{$R'
  +' *.lfm}'#13#10#13#10'{ TCodeEditForm }'#13#10#13#10'procedure TCodeEditForm'
  +'.InitialiseOnShow(Context,NodeName,EvType:String);'#13#10'begin'#13#10'  Ta'
  +'rgetNodeName:=NodeName;'#13#10'  EventType:=EvType;'#13#10'  self.CodeEditC'
  +'ontextLabel.LabelCaption:=Context+'' ''+NodeName+'' ''+EvType;'#13#10'  Cod'
  +'eEdit.LabelText:='''';'#13#10'  NumInputs:=0;'#13#10'  DeleteNodeChildren(C'
  +'odeEditParamListScrollBox.myNode);'#13#10#13#10'  CodeEditFindGlobal.Checke'
  +'d:=false;'#13#10#13#10'  if (Mode=''dll'') then'#13#10'  begin'#13#10'    C'
  +'odeEditFindTxt.ItemValue:='''';'#13#10'    CodeEdit.ContainerHeight:=''100%'
  +''';           // CodeEdit is % of the parent component (tabpage)'#13#10'   '
  +' CodeEditInitTab.IsVisible:=false;'#13#10'    CodeEditFunctionResultType.Is'
  +'Visible:=false;'#13#10'    CodeEditInputsVBox.IsVisible:=false;'#13#10'    '
  +'CodeEdit.MessagesHeight:=''30%'';'#13#10'  end'#13#10'  else if (Mode=''Eve'
  +'ntCode'') then'#13#10'  begin'#13#10'    CodeEditFindTxt.ItemValue:='''';'
  +#13#10'    CodeEditFunctionResultType.IsVisible:=false;'#13#10'    CodeEditI'
  +'nputsVBox.IsVisible:=false;'#13#10'    if CodeEdit.MessageLines='''' then'
  +#13#10'      CodeEdit.MessagesHeight:=''1'''#13#10'    else'#13#10'      Cod'
  +'eEdit.MessagesHeight:=''30%'';'#13#10'    CodeEdit.ContainerHeight:=''95%'''
  +';           // CodeEdit is % of the parent component (tabpage)'#13#10#13#10
  +'    if FoundString(EventType,''Thread'')<>1 then'#13#10'    begin'#13#10'  '
  +'    CodeEditInitTab.IsVisible:=true;'#13#10'      CodeEditInit.ContainerHei'
  +'ght:=''95%'';'#13#10'      CodeEditInit.MessagesHeight:=''1'';'#13#10'     '
  +'end'#13#10'    else'#13#10'    begin'#13#10'      // no initialisation code'
  +' allowed for worker threads'#13#10'      CodeEditInitTab.IsVisible:=false;'
  +#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'  if (Mode=''FunctionCode'
  +''') then'#13#10'  begin'#13#10'    CodeEdit.ContainerHeight:=''60%'';      '
  +'     // CodeEdit is % of the parent component (tabpage)'#13#10'    CodeEdit'
  +'InitTab.IsVisible:=false;'#13#10'    CodeEditFunctionResultType.IsVisible:='
  +'true;'#13#10'    if CodeEdit.MessageLines='''' then'#13#10'      CodeEdit.M'
  +'essagesHeight:=''1'''#13#10'    else'#13#10'      CodeEdit.MessagesHeight:='
  +'''10%'';'#13#10'    CodeEditInputsVBox.IsVisible:=true;'#13#10'    CodeEdit'
  +'FindTxt.ItemValue:='''';'#13#10#13#10'    InputSelectForm.ExclNodeName:=Tar'
  +'getNodeName;'#13#10'    InputSelectForm.ExclPropertyName:='''';'#13#10'    '
  +'InputSelectForm.PropType:='''';'#13#10'    InputSelectForm.Initialise;'#13
  +#10'  end'#13#10'  else'#13#10'  if (Mode=''SearchCode'') then'#13#10'  begi'
  +'n'#13#10'    CodeEdit.ContainerHeight:=''100%'';           // CodeEdit is %'
  +' of the parent component (tabpage)'#13#10'    CodeEditInitTab.IsVisible:=fa'
  +'lse;'#13#10'    CodeEditFunctionResultType.IsVisible:=false;'#13#10'    Cod'
  +'eEditInputsVBox.IsVisible:=false;'#13#10'    CodeEdit.MessagesHeight:=''30%'
  +''';'#13#10'    CodeEditFindGlobal.Checked:=true;'#13#10'    CodeEditFindCas'
  +'e.Checked:=true;'#13#10'    CodeEditFindTxt.HasFocus:=true;'#13#10'    {$if'
  +'def JScript}'#13#10'    // if navigating here from a PasUnit sub-procedure '
  +'on the code tree, then automatically run a search'#13#10'    // for instanc'
  +'es of the procedure name...'#13#10'    if self.CodeEditFindTxt.ItemValue<>'
  +''''' then'#13#10'      DoGlobalSearch(self.CodeEditFindTxt.ItemValue);'#13
  +#10'    {$endif}'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    CodeEd'
  +'it.ContainerHeight:=''95%'';            // CodeEdit is % of the parent comp'
  +'onent (tabpage)'#13#10'    CodeEditInitTab.IsVisible:=false;'#13#10'    Cod'
  +'eEditFunctionResultType.IsVisible:=false;'#13#10'    CodeEditInputsVBox.IsV'
  +'isible:=false;'#13#10'    if CodeEdit.MessageLines='''' then'#13#10'      C'
  +'odeEdit.MessagesHeight:=''1'''#13#10'    else'#13#10'      CodeEdit.Message'
  +'sHeight:=''30%'';'#13#10'    CodeEditFindTxt.ItemValue:='''';'#13#10'  end;'
  +#13#10#13#10'  if CodeEditInitTab.IsVisible=true then'#13#10'  begin'#13#10
  +'    // make the same messages visible on both tabs'#13#10'    CodeEditInit.'
  +'ContainerHeight:=CodeEdit.ContainerHeight;'#13#10'    CodeEditInit.Messages'
  +'Height:=CodeEdit.MessagesHeight;'#13#10'    CodeEditInit.MessageLines:=Code'
  +'Edit.MessageLines;'#13#10'  end;'#13#10#13#10'  if (Mode<>''EventCode'') th'
  ,'en'#13#10'    CodeEditMainTabs.TabIndex:=0;'#13#10#13#10'  if (Mode<>''Pyth'
  +'onScriptCode'') then'#13#10'    CodeEdit.Language:=''Pascal'''#13#10'  else'
  +#13#10'    CodeEdit.Language:=''Python'';'#13#10#13#10'end;'#13#10#13#10'{$i'
  +'fndef JScript}'#13#10'procedure TCodeEditForm.FormCreate(Sender: TObject);'
  +#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10#13#10'  Initialis'
  +'e;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.FormResize(Sender: TObj'
  +'ect);'#13#10'begin'#13#10'  DoFormResize(self, CodeEditFormXVBox1);'#13#10
  +'  //!! fudge.... have to set minWidth as alClient fails to reset size of th'
  +'is panel....!!'#13#10'  CodeEdit.myControl.Constraints.MinWidth:=CodeEdit.W'
  +'idth;'#13#10'  CodeEdit.myControl.Constraints.MinHeight:=CodeEdit.Height;'
  +#13#10'end;'#13#10#13#10'procedure TCodeEditForm.FormShow(Sender: TObject);'
  +#13#10'begin'#13#10'  // scroll the messages to the bottom'#13#10'  CodeEdit'
  +'.TheMessages.VertScrollBar.Position:=CodeEdit.TheMessages.Lines.Count-1;'#13
  +#10'  if (Mode=''dll'') then'#13#10'    NavigateToFirstError'#13#10'  else i'
  +'f (Mode=''SearchCode'') then'#13#10'  begin'#13#10'    // if navigating her'
  +'e from a PasUnit sub-procedure on the code tree, then automatically run a s'
  +'earch'#13#10'    // for instances of the procedure name...'#13#10'    if se'
  +'lf.CodeEditFindTxt.ItemValue<>'''' then'#13#10'      DoGlobalSearch(self.Co'
  +'deEditFindTxt.ItemValue);'#13#10'    TEdit(CodeEditFindTxt.myControl).SetFo'
  +'cus;'#13#10'  end;'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure'
  +' TCodeEditForm.Initialise;'#13#10'begin'#13#10'  numInputs:=0;'#13#10'  Set'
  +'Length(MyInputs,0);'#13#10'  SetLength(CheckedInputs,0);'#13#10'  CodeFormR'
  +'oot:=FindDataNodeById(myNode,''CodeEditFormXVBox1'','''',true);'#13#10'  Co'
  +'deEditFunctionResultType.OptionList:=Attributetypes;'#13#10'  CodeEditFunct'
  +'ionResultType.ItemIndex:=0;'#13#10#13#10'  TargetNodeName:='''';'#13#10'  E'
  +'ventType:='''';'#13#10'  self.CodeEditContextLabel.LabelCaption:='''';'#13
  +#10'  CodeEdit.LabelText:='''';'#13#10'//  NumInputs:=0;'#13#10'  DeleteNode'
  +'Children(CodeEditParamListScrollBox.myNode);'#13#10#13#10'  {$ifndef JScrip'
  +'t}'#13#10'  TXForm(self).Height:=trunc(MainForm.Height*90/100);'#13#10'  TX'
  +'Form(self).Width:=trunc(MainForm.Width*90/100);'#13#10'  {$else}'#13#10'  T'
  +'XForm(self).Top:=50;'#13#10'  TXForm(self).Left:=50;'#13#10#13#10'  asm'#13
  +#10'    var ob=document.getElementById(this.NameSpace+this.NodeName+''Conten'
  +'ts'');'#13#10'    if (ob!=null) {'#13#10'      var str=''90%'';'#13#10'    '
  +'  pas.HTMLUtils.SetHeightWidthHTML(this,ob,''W'',str);'#13#10'      pas.HTM'
  +'LUtils.SetHeightWidthHTML(this,ob,''H'',str);'#13#10'    }'#13#10'  end;'#13
  +#10#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure TCodeEditForm.'
  +'AddInputBox(myInput:TCodeInputRec);'#13#10'var'#13#10'  HBoxNode:TDataNode;'
  +#13#10'  NewHBox:TXHBox;'#13#10'  NewCheckBox:TXCheckBox;'#13#10'  NewEditBo'
  +'x1, NewEditBox2:TXEditBox;'#13#10'  NewButton:TXButton;'#13#10'  ParentNode'
  +':TDataNode;'#13#10'  BoxName,ItmValue:String;'#13#10'begin'#13#10'  numInpu'
  +'ts:=numInputs+1;'#13#10'  SetLength(myInputs,numInputs);'#13#10'  myInputs['
  +'length(myInputs)-1]:=myInput;'#13#10'  SetLength(CheckedInputs,numInputs);'
  +#13#10#13#10'  ParentNode:=CodeEditParamListScrollBox.myNode;'#13#10'  BoxNa'
  +'me:=''CodeEditInputCombo_''+intToStr(numInputs);'#13#10#13#10'  HBoxNode:=A'
  +'ddDynamicWidget(''TXHBox'',CodeEditForm,ParentNode,''HB''+BoxName,'''',''Le'
  +'ft'',-1);'#13#10'  NewHBox:=TXHBox(HBoxNode.ScreenObject);'#13#10'  NewChec'
  +'kBox:=TXCheckBox(AddDynamicWidget(''TXCheckBox'',CodeEditForm,HBoxNode,''CB'
  +'''+BoxName,'''',''Top'',-1).ScreenObject);'#13#10'  NewEditBox1:=TXEditBox('
  +'AddDynamicWidget(''TXEditBox'',CodeEditForm,HBoxNode,''EB1''+BoxName,'''','
  +'''Top'',-1).ScreenObject);'#13#10'  NewEditBox2:=TXEditBox(AddDynamicWidget'
  +'(''TXEditBox'',CodeEditForm,HBoxNode,''EB2''+BoxName,'''',''Top'',-1).Scree'
  +'nObject);'#13#10'  NewButton:=TXButton(AddDynamicWidget(''TXButton'',CodeEd'
  +'itForm,HBoxNode,''Btn''+BoxName,'''',''Top'',-1).ScreenObject);'#13#10#13#10
  +#13#10'  {$ifndef JScript}'#13#10'  NewHBox.BgColor:=HexRGBToColor(''#BFCDDB'
  +''');'#13#10'  {$else}'#13#10'  NewHBox.BgColor:=''#DBCDBF'';'#13#10'  {$end'
  +'if}'#13#10#13#10'  NewHBox.Border:=false;'#13#10#13#10'  NewCheckBox.LabelT'
  +'ext:='''';'#13#10'  NewCheckBox.myNode.registerEvent(''Click'',@CodeEditFor'
  +'m.InputCheckBoxClick);'#13#10#13#10'  NewEditBox1.ItemValue:=myInput.InputS'
  +'ynonym;'#13#10'  NewEditBox1.LabelText:='''';'#13#10#13#10'  NewEditBox2.La'
  +'belText:='''';'#13#10'  NewEditBox2.ContainerWidth:=''50%'';'#13#10'  NewEd'
  +'itBox2.BoxWidth:=''100%'';'#13#10'  NewEditBox2.ReadOnly:=true;'#13#10#13#10
  +'  NewButton.Caption:=''...'';'#13#10#13#10'  if myInput.InputNodeName<>'''''
  +' then'#13#10'    NewEditBox2.ItemValue:=myInput.InputNodeName+''.''+myInput'
  +'.InputAttribName;'#13#10#13#10'  NewEditBox1.myNode.registerEvent(''Change'
  ,''',@CodeEditForm.EditInputSynonym);'#13#10'  NewEditBox2.myNode.registerEve'
  +'nt(''Change'',@CodeEditForm.EditInputSource);'#13#10'  NewButton.myNode.reg'
  +'isterEvent(''ButtonClick'',@CodeEditForm.ShowInputSelector);'#13#10'end;'#13
  +#10#13#10'procedure TCodeEditForm.InputCheckBoxClick(e:TEventStatus;nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  numstr:string;'#13#10
  +'  n:integer;'#13#10'  bits:TStringList;'#13#10'begin'#13#10'  bits:=strings'
  +'plit(nodeId,''_'');'#13#10'  if bits.count>1 then'#13#10'  begin'#13#10'   '
  +' numstr:=bits[1];'#13#10'    n:=strtoint(numstr);'#13#10'    CheckedInputs['
  +'n-1]:=MyStrToBool(myValue);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedur'
  +'e TCodeEditForm.EditInputSynonym(e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'var'#13#10'  numstr:string;'#13#10'  n:integer;'#13#10
  +'  bits:TStringList;'#13#10'begin'#13#10'  // index for myInputs always matc'
  +'hes the integer suffix of the combo box name (-1).'#13#10'  // Gaps due to '
  +'deleted inputs are handled on form closure.'#13#10'  bits:=stringsplit(node'
  +'Id,''_'');'#13#10'  if bits.count>1 then'#13#10'  begin'#13#10'    numstr:='
  +'bits[1];'#13#10'    n:=strtoint(numstr);'#13#10'    myInputs[n-1].InputSyno'
  +'nym:=myValue;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TCodeEditFor'
  +'m.EditInputSource(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'var'#13#10'  numstr:string;'#13#10'  n:integer;'#13#10'  bits,SourceB'
  +'its:TStringList;'#13#10'begin'#13#10'  // index for myInputs always matches'
  +' the integer suffix of the combo box name (-1).'#13#10'  // Gaps due to del'
  +'eted inputs are handled on form closure.'#13#10'  bits:=stringsplit(nodeId,'
  +'''_'');'#13#10'  if bits.count>1 then'#13#10'  begin'#13#10'    numstr:=bit'
  +'s[1];'#13#10'    n:=strtoint(numstr);'#13#10'    SourceBits:=StringSplit(my'
  +'Value,''.'');'#13#10'    if SourceBits.Count=2 then'#13#10'    begin'#13#10
  +'      myInputs[n-1].InputNodeName:=SourceBits[0];'#13#10'      myInputs[n-1'
  +'].InputAttribName:=SourceBits[1];'#13#10'    end'#13#10'    else'#13#10'   '
  +' begin'#13#10'      myInputs[n-1].InputNodeName:=myValue;'#13#10'    end;'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.ShowInputSele'
  +'ctor(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13
  +#10'  numstr:string;'#13#10'  n:integer;'#13#10'  bits:TStringList;'#13#10'b'
  +'egin'#13#10'  // index for myInputs always matches the integer suffix of th'
  +'e combo box name (-1).'#13#10'  // Gaps due to deleted inputs are handled o'
  +'n form closure.'#13#10'  bits:=stringsplit(nodeId,''_'');'#13#10'  if bits.'
  +'count>1 then'#13#10'  begin'#13#10'    numstr:=bits[1];'#13#10'    n:=strto'
  +'int(numstr);'#13#10'    InputSelectForm.TargetEditBoxNode:=FindDataNodeById'
  +'(UIRootNode,''EB2''+''CodeEditInputCombo_''+intToStr(n),'''',true);'#13#10
  +#13#10'    InputSelectForm.Initialise;'#13#10'    ShowXForm(''InputSelectFor'
  +'m'',true);'#13#10#13#10'    {$ifndef JScript}'#13#10'    // on return...'#13
  +#10'    InputSelectForm.InputSelectClosed;'#13#10'    {$endif}'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'procedure TCodeEditForm.CodeEditHelpBtnHandleButton'
  +'Click(e:TEventStatus;nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13
  +#10'begin'#13#10'  ShowXForm(''PopupMemoForm'',false);'#13#10'end;'#13#10#13
  +#10#13#10'procedure TCodeEditForm.CodeEditAddInputBtnHandleButtonClick(e:TEv'
  +'entStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  emp'
  +'tyRec:TCodeInputRec;'#13#10'begin'#13#10'  // add an element to the CodeEdi'
  +'tParamListScrollBox'#13#10'  // The element is a ComboBox with avaliable op'
  +'tions listing all system properties, and eligible functions.'#13#10'  AddIn'
  +'putBox(emptyRec);'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.CodeEdit'
  +'DelInputBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: An'
  +'siString);'#13#10'var'#13#10'  i:integer;'#13#10'  delNode:TDataNode;'#13#10
  +'begin'#13#10'  //showmessage(''not yet implemented'');'#13#10'  // delete a'
  +'ll checked inputs'#13#10'  for i:=0 to length(CheckedInputs)-1 do'#13#10'  '
  +'begin'#13#10'    if CheckedInputs[i]=true then'#13#10'    begin'#13#10'    '
  +'  delNode:=FindDataNodeById(CodeFormRoot,''HBCodeEditInputCombo_''+IntToStr'
  +'(i+1),'''',true);'#13#10'      DeleteNode(CodeEditParamListScrollBox.myNode'
  +',delNode);'#13#10'      CheckedInputs[i]:=false;'#13#10'      myInputs[i].I'
  +'nputNodeName:='''';'#13#10'      myInputs[i].InputAttribName:='''';'#13#10
  +'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'Fun'
  +'ction GetErrorLineNum(ErrorString,Delimiter:string):integer;'#13#10'  var  '
  +' LinNumPos,linenum:integer;'#13#10'        lineNumStr:string;'#13#10'  begi'
  +'n'#13#10'    lineNumStr:=''-1'';'#13#10'    LinNumPos:=pos(Delimiter,ErrorS'
  +'tring);'#13#10'    if LinNumPos >0 then'#13#10'      lineNumStr := rightstr'
  +'(ErrorString,(1+length(errorstring)-length(Delimiter)-LinNumPos));'#13#10' '
  ,'   Try'#13#10'      linenum:= strtoint(lineNumStr);'#13#10'    except'#13#10
  +'    On E : EConvertError do'#13#10'      linenum:= -1;'#13#10'    end;'#13
  +#10'    result:=linenum;'#13#10'  end;'#13#10'{$endif}'#13#10#13#10'procedur'
  +'e TCodeEditForm.NavigateToFirstError;'#13#10'var'#13#10'  i:integer;'#13#10
  +'  FoundLineNum:Boolean;'#13#10'  FileName,CharPos:string;'#13#10'  LineNum:'
  +'String;'#13#10'  LNum:integer;'#13#10'  tmp1:TStringList;'#13#10'begin'#13
  +#10'  // search the messages list.  Look for a name(line,char) string.'#13#10
  +'  // If the line also contains keyword ''Error'' then navigate to the indic'
  +'ated code block'#13#10'  lNum:=-1;'#13#10'  {$ifndef JScript}'#13#10'  i:=0'
  +';'#13#10'  while i<CodeEdit.TheMessages.lines.count do'#13#10'  begin'#13#10
  +'    if FoundString(CodeEdit.TheMessages.lines[i],''Error'')>0 then'#13#10' '
  +'   begin'#13#10'      CodeEdit.GetFileNameLineNumAndCharPos(FoundLineNum,Co'
  +'deEdit.TheMessages.lines[i], ''('',FileName,LineNum,CharPos );'#13#10'     '
  +' if (trim(FileName)<>'''')'#13#10'      and (lineNum<>'''') then'#13#10'   '
  +'   begin'#13#10'        LNum:=i;'#13#10'        i:=CodeEdit.TheMessages.lin'
  +'es.count;'#13#10'      end;'#13#10'    end;'#13#10'    i:=i+1;'#13#10'  end'
  +';'#13#10'  {$else}'#13#10'  tmp1:=TStringList.Create;'#13#10'  tmp1.Text:=C'
  +'odeEdit.MessageLines;'#13#10'  i:=0;'#13#10'  while i<tmp1.count do'#13#10
  +'  begin'#13#10'    if FoundString(tmp1[i],''Error'')>0 then'#13#10'    begi'
  +'n'#13#10'      CodeEdit.GetFileNameLineNumAndCharPos(FoundLineNum,tmp1[i], '
  +'''('',FileName,LineNum,CharPos );'#13#10'      if (trim(FileName)<>'''')'#13
  +#10'      and (lineNum<>'''') then'#13#10'      begin'#13#10'        LNum:=i'
  +';'#13#10'        i:=tmp1.count;'#13#10'      end;'#13#10'    end;'#13#10'  '
  +'  i:=i+1;'#13#10'  end;'#13#10'  FreeAndNil(tmp1);'#13#10'  {$endif}'#13#10
  +'  if lNum>-1 then'#13#10'  begin'#13#10'    DisplayIncFile(Filename,lineNum'
  +',CharPos);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.S'
  +'etCursorPosition(targetLine,targetChar:integer);'#13#10'begin'#13#10'  // s'
  +'howmessage(''targetline=''+inttostr(targetline));'#13#10'  // set cursor po'
  +'sition'#13#10'  if (targetChar>-1) then'#13#10'    if CodeEditMainTabs.TabI'
  +'ndex=0 then'#13#10'      CodeEdit.GoToLineCharPos(targetLine,targetChar)'#13
  +#10'    else'#13#10'      CodeEditInit.GoToLineCharPos(targetLine,targetChar'
  +');'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.DisplayIncFile(FileName'
  +',lineNum,charPos:String);'#13#10'var'#13#10'  tmp1:TStringList;'#13#10'  FS'
  +'trings,FStrings2:TStringList;'#13#10'  TargetNode:TDataNode;'#13#10'  targe'
  +'tLine:integer;'#13#10'  Context:String;'#13#10'begin'#13#10'  {$ifndef JScr'
  +'ipt}'#13#10'    tmp1:=LoadIncludeFile(nil,FileName,''tempinc/'');'#13#10'  '
  +'{$else}'#13#10'    tmp1:=LoadIncludeFile(myWebCompiler.Compiler,FileName,'''
  +'tempinc/'');'#13#10'  {$endif}'#13#10#13#10'  if tmp1.Count>0 then'#13#10' '
  +' begin'#13#10'    CodeEdit.ItemValue:=tmp1.Text;'#13#10'    CodeEditInit.It'
  +'emValue:='''';'#13#10'    FreeAndNil(tmp1);'#13#10#13#10'    self.TargetNod'
  +'eName:='''';'#13#10'    self.EventType:='''';'#13#10'    //filename is Node'
  +'Name + EventType'#13#10'    FStrings2:=StringSplit(FileName,''.'');'#13#10
  +'    if FStrings2.Count=2 then'#13#10'    begin'#13#10'      if FStrings2[1]'
  +'=''inc'' then'#13#10'      begin'#13#10'        // could be a function or a'
  +'n event handler'#13#10'        FStrings:=StringSplit(FStrings2[0],''__'');'
  +#13#10'        if FStrings.Count>=2 then'#13#10'        begin'#13#10'       '
  +'   self.TargetNodeName:=FStrings[0];'#13#10'          self.EventType:=FStri'
  +'ngs[1];'#13#10'          self.Mode:=''EventCode'';'#13#10'          Context'
  +':=''Event Handler'';'#13#10#13#10'          CodeEditInitTab.IsVisible:=true'
  +';'#13#10#13#10'          // Load up both the main event code AND the initia'
  +'lisation code...'#13#10'          TargetNode:=FindDataNodeById(SystemNodeTr'
  +'ee,self.TargetNodeName,'''',true);'#13#10'          CodeEditInit.ItemValue:'
  +'=TargetNode.GetEventInitCode(self.EventType);'#13#10#13#10'          CodeEd'
  +'it.ItemValue:=TargetNode.GetEventCode(self.EventType);'#13#10'          tar'
  +'getLine:=StrToInt(linenum)-1;'#13#10'          if FoundString(FileName,''In'
  +'it.'')>0 then'#13#10'             CodeEditMainTabs.TabIndex:=1;'#13#10'    '
  +'    end'#13#10'        else'#13#10'        begin'#13#10'          self.Targ'
  +'etNodeName:=FStrings[0];'#13#10'          self.Mode:=''FunctionCode'';'#13
  +#10'          Context:=''Function'';'#13#10'          targetLine:=StrToInt(l'
  +'inenum);'#13#10'        end;'#13#10#13#10'        //self.CodeEditContextLab'
  +'el.LabelCaption:=self.TargetNodeName+'' ''+self.EventType;'#13#10'        /'
  +'/CodeEdit.LabelText:=self.TargetNodeName+'' ''+self.EventType;'#13#10'     '
  +'   FreeAndNil(FStrings);'#13#10'      end'#13#10'      else'#13#10'      be'
  +'gin'#13#10'        self.TargetNodeName:=FStrings2[0];'#13#10'        self.E'
  ,'ventType:='''';'#13#10'        self.Mode:=''UnitCode'';'#13#10'        Cont'
  +'ext:=''PasUnit'';'#13#10'        //self.CodeEditContextLabel.LabelCaption:='
  +'self.TargetNodeName;'#13#10'        //CodeEdit.LabelText:=self.TargetNodeNa'
  +'me;'#13#10'        targetLine:=StrToInt(linenum);'#13#10'      end;'#13#10
  +'    end;'#13#10'    FreeAndNil(FStrings2);'#13#10'    self.InitialiseOnShow'
  +'(Context,self.TargetNodeName,self.EventType);'#13#10'    SetCursorPosition('
  +'targetLine,strToInt(charPos));'#13#10'  end'#13#10'  else'#13#10'  begin'#13
  +#10'    showmessage(''This file is not available for edit'');'#13#10'  end;'
  +#13#10'  FreeAndNil(tmp1);'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.'
  +'HandleMessageClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString; '
  +'ThisCodeEdit:TXCode);'#13#10'var linenumber,targetLine:integer;'#13#10'    '
  +'SelectedLine,FileName,CharPos:string;'#13#10'    FoundLineNum:Boolean;'#13
  +#10'    FStrings:TStringList;'#13#10'    tmp,LineNum,Context:String;'#13#10
  +'    TargetNode:TDataNode;'#13#10'    Messages:TStringList;'#13#10'begin'#13
  +#10'  //showmessage(''CodeEdit HandleClickMessage ''+ nodeID + '' ''+myValue'
  +');'#13#10' {$ifndef JScript}'#13#10' linenumber:=thisCodeEdit.TheMessages.C'
  +'aretPos.Y;'#13#10' SelectedLine:= thisCodeEdit.TheMessages.lines[linenumber'
  +'];'#13#10' thisCodeEdit.GetFileNameLineNumAndCharPos(FoundLineNum,SelectedL'
  +'ine, ''('',FileName,LineNum,CharPos );'#13#10' {$else}'#13#10' // Find the '
  +'message line thats been clicked on'#13#10' try'#13#10' linenumber:=StrToInt'
  +'(myValue);'#13#10' except'#13#10'   On E : EConvertError do'#13#10'   EXIT;'
  +#13#10' end;'#13#10' Messages:=TStringList.Create;'#13#10' Messages.Text:=th'
  +'isCodeedit.MessageLines;'#13#10' //showmessage(''linenumber=''+inttostr(lin'
  +'enumber)+'' count=''+inttostr(Messages.Count));'#13#10' if linenumber>Messa'
  +'ges.Count then'#13#10'   EXIT;'#13#10' SelectedLine:= Messages[linenumber-1'
  +'];'#13#10' Messages.Free;'#13#10' // Find the indicated line number from th'
  +'e message'#13#10' thisCodeEdit.GetFileNameLineNumAndCharPos(FoundLineNum,Se'
  +'lectedLine, ''('',FileName,LineNum,CharPos );'#13#10' //showmessage(''FileN'
  +'ame=''+FileName+'' Indicated Linenum is ''+linenum);'#13#10' {$endif}'#13#10
  +#13#10' CodeEditMainTabs.TabIndex:=0;'#13#10#13#10' //load the indicated fil'
  +'e from the tempinc folder into the code edit box'#13#10' if (trim(FileName)'
  +'<>'''')'#13#10' and (lineNum<>'''')'#13#10' and (charPos<>'''') then'#13#10
  +' begin'#13#10'   FStrings:=StringSplit(FileName,''.'');'#13#10'   if ((FStr'
  +'ings.Count=2)'#13#10'     and (FStrings[1]=''inc''))'#13#10'   or (CodeEdit'
  +'Form.Mode = ''dll'') then'#13#10'   begin'#13#10'     DisplayIncFile(FileNa'
  +'me,lineNum,CharPos);'#13#10'   end'#13#10'   else'#13#10'   begin'#13#10'  '
  +'   //if Filename includes a dot, then it''s a nodename and eventtype.'#13#10
  +'     //if it contains .AnimationCode, then it''s a GPU kernel block'#13#10
  +'     //Otherwise it''s a code element (function or Pasunit or PythonScript '
  +'nodename)'#13#10#13#10'     // save any edits already done...'#13#10'     C'
  +'odeEditStatus:=''ok'';'#13#10'     if CodeEditForm.Mode<>''SearchCode'' the'
  +'n'#13#10'       CodeEditorClosed(nil);'#13#10#13#10'     if FStrings.Count>'
  +'1 then'#13#10'     begin'#13#10'       self.TargetNodeName:=FStrings[0];'#13
  +#10'       targetNode:=FindDataNodeByid(systemNodeTree,self.TargetNodeName,'
  +''''',false);'#13#10'       if targetNode<>nil then'#13#10'       begin'#13
  +#10'         if (FStrings.Count=3)'#13#10'         and (FStrings[2]=''Animat'
  +'ionCode'') then'#13#10'         begin'#13#10'           self.Mode:=''Animat'
  +'ionCode'';'#13#10'           Context:=targetNode.NodeType;'#13#10'         '
  +'  self.EventType:='''';'#13#10'           CodeEditInit.ItemValue:='''';'#13
  +#10'           CodeEdit.ItemValue:='''';'#13#10'           CodeEditMainTabs.'
  +'TabIndex:=0;'#13#10'         end'#13#10'         else if FStrings.Count>2 t'
  +'hen'#13#10'         begin'#13#10'           self.EventType:=FStrings[1];'#13
  +#10'           self.Mode:=''EventCode'';'#13#10'           Context:=''Event '
  +'Handler'';'#13#10'           CodeEditInit.ItemValue:=TargetNode.GetEventIni'
  +'tCode(self.EventType);'#13#10'           CodeEdit.ItemValue:=TargetNode.Get'
  +'EventCode(self.EventType);'#13#10'           if FStrings[2]=''EventInitCode'
  +''' then'#13#10'           begin'#13#10'             CodeEditMainTabs.TabInd'
  +'ex:=1;'#13#10'           end'#13#10'           else'#13#10'           begin'
  +#13#10'             CodeEditMainTabs.TabIndex:=0;'#13#10'           end;'#13
  +#10'         end'#13#10'         else'#13#10'         begin'#13#10'         '
  +'  if targetNode.NodeType=''PasUnit'' then'#13#10'             self.Mode:='''
  +'PasUnitCode'''#13#10'           else if targetNode.NodeType=''Function'' th'
  +'en'#13#10'             self.Mode:=''FunctionCode'''#13#10'           else i'
  +'f targetNode.NodeType=''PythonScript'' then'#13#10'             self.Mode:='
  ,'''PythonScriptCode'';'#13#10'           Context:=targetNode.NodeType;'#13#10
  +'           self.EventType:='''';'#13#10'           CodeEditInit.ItemValue:='
  +''''';'#13#10'           CodeEdit.ItemValue:=TargetNode.GetAttribute(''Code'
  +''',true).AttribValue;'#13#10'           CodeEditMainTabs.TabIndex:=0;'#13#10
  +'         end;'#13#10'       end;'#13#10'     end;'#13#10#13#10'     targetL'
  +'ine:=StrToInt(linenum)+1;'#13#10'     if self.Mode<>''AnimationCode'' then'
  +#13#10'     begin'#13#10'       self.InitialiseOnShow(Context,targetNode.Nod'
  +'eName,self.EventType);'#13#10'       SetCursorPosition(targetLine,strToInt('
  +'charPos));'#13#10'     end'#13#10'     else'#13#10'     begin'#13#10'      '
  +' // GPU Animation code has a separate editor form...'#13#10'       ShowGPUK'
  +'ernel(targetNode,FileName,targetLine,CharPos);'#13#10#13#10'     end;'#13#10
  +'   end;'#13#10#13#10'   FreeAndNil(FStrings);'#13#10' end;'#13#10'end;'#13
  +#10#13#10'procedure TCodeEditForm.CodeEditHandleClickMessage(e:TEventStatus;'
  +'nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  self.Handle'
  +'MessageClick(e,nodeID,myValue,CodeEdit);'#13#10'end;'#13#10#13#10'procedure'
  +' TCodeEditForm.CodeEditInitHandleClickMessage(e: TEventStatus;'#13#10'  nod'
  +'eID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  self.HandleMes'
  +'sageClick(e,nodeID,myValue,CodeEditInit);'#13#10'end;'#13#10#13#10'procedur'
  +'e TCodeEditForm.CodeEditMainTabsHandleChange(e: TEventStatus;'#13#10'  node'
  +'ID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  if CodeEditMain'
  +'Tabs.TabIndex = 1 then'#13#10'    if CodeEditForm.CodeEditInit.ItemValue = '
  +''''' then'#13#10'      CodeEditForm.CodeEditInit.ItemValue := DfltEventCode'
  +';'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.DoGlobalSearch(TextToFin'
  +'d:String);'#13#10'  {$ifndef JScript}'#13#10'  procedure SearchThisText(The'
  +'Name,TheType,TheText:String);'#13#10'  var'#13#10'    lineNumber: integer;'
  +#13#10'    TempMemo:TMemo;'#13#10'    atPos:integer;'#13#10'  begin'#13#10' '
  +'    TempMemo:=TMemo.Create(nil);'#13#10'     TempMemo.Lines.Text:=TheText;'
  +#13#10'      for lineNumber := 0 to TempMemo.lines.count-1 do'#13#10'      b'
  +'egin'#13#10'        if self.CodeEditFindCase.Checked then'#13#10'          '
  +'atPos:=Pos( UpperCase(TextToFind), UpperCase(TempMemo.lines[lineNumber]) )'
  +#13#10'        else'#13#10'          atPos:=Pos( TextToFind, TempMemo.lines['
  +'lineNumber] );'#13#10'        if atPos > 0 then'#13#10'          //ShowMess'
  +'age( ''Found in line '' + IntToStr(lineNumber) );'#13#10'          //self.C'
  +'odeEdit.TheMessages.Append(TheName+'' : ''+TheType+'' : ''+TempMemo.lines[l'
  +'ineNumber]);'#13#10'          self.CodeEdit.AddMessage(TheName+''.''+TheTyp'
  +'e+''(''+inttostr(lineNumber)+'',''+inttostr(atPos)+'') ''+TempMemo.lines[li'
  +'neNumber]);'#13#10'      end;'#13#10'  end;'#13#10'  {$else}'#13#10'  proce'
  +'dure SearchThisText(TheName,TheType,TheText:String);'#13#10'  var'#13#10'  '
  +'  lines:TStringList;'#13#10'    i,p:integer;'#13#10'  begin'#13#10'    line'
  +'s:=TStringList.Create;'#13#10'    lines.Text:=TheText;'#13#10'    for i:=0 '
  +'to lines.Count-1 do'#13#10'    begin'#13#10'      if self.CodeEditFindCase.'
  +'Checked then'#13#10'        p:=FoundStringCI(lines[i], TextToFind)'#13#10' '
  +'     else'#13#10'        p:=FoundString(lines[i], TextToFind);'#13#10'     '
  +' if p>0 then'#13#10'        self.CodeEdit.AddMessage(TheName+''.''+TheType+'
  +'''(''+inttostr(i)+'',''+inttostr(p)+'') ''+lines[i]);'#13#10'    end;'#13#10
  +'    FreeAndNil(lines);'#13#10'  end;'#13#10'  {$endif}'#13#10#13#10'  proce'
  +'dure SearchEventsCode(CurrentItem:TDataNode);'#13#10'  var dflt:String;'#13
  +#10'      i,k,numchildren:integer;'#13#10'      AllKernels:TAnimCodeArray;'
  +#13#10'  begin'#13#10'    dflt:=DfltEventCode;'#13#10'    if CurrentItem<>ni'
  +'l then'#13#10'    if CurrentItem.NameSpace='''' then'#13#10'    begin'#13#10
  +'        numchildren:=length(CurrentItem.ChildNodes);'#13#10'        for i:='
  +'0 to CurrentItem.myEventTypes.Count-1 do'#13#10'        begin'#13#10'      '
  +'    if (CurrentItem.HasUserEventCode(CurrentItem.myEventTypes[i]))'#13#10' '
  +'         and (CurrentItem.GetEventCode(CurrentItem.myEventTypes[i])<>dflt) '
  +'then'#13#10'          begin'#13#10'             SearchThisText(CurrentItem.'
  +'nodeName+''.''+CurrentItem.myEventTypes[i],'#13#10'                        '
  +'    ''EventCode'','#13#10'                            CurrentItem.GetEventC'
  +'ode(CurrentItem.myEventTypes[i]));'#13#10'             SearchThisText(Curre'
  +'ntItem.nodeName+''.''+CurrentItem.myEventTypes[i],'#13#10'                 '
  +'           ''EventInitCode'','#13#10'                            CurrentIte'
  +'m.GetEventInitCode(CurrentItem.myEventTypes[i]));'#13#10'          end;'#13
  +#10'        end;'#13#10'        if (CurrentItem.NodeType=''TXGPUCanvas'') th'
  +'en'#13#10'        begin'#13#10'          AllKernels:=TXGPUCanvas(CurrentIte'
  +'m.ScreenObject).FetchAllAnimCode;'#13#10'          for k:=0 to length(AllKe'
  ,'rnels)-1 do'#13#10'          begin'#13#10'            SearchThisText(Curren'
  +'tItem.nodeName+''.''+inttostr(k),''AnimationCode'',AllKernels[k].CodeBlock.'
  +'Text);'#13#10'          end;'#13#10'        end;'#13#10#13#10'        for i'
  +':=0 to numchildren-1 do'#13#10'        begin'#13#10'          SearchEventsC'
  +'ode(CurrentItem.ChildNodes[i]);'#13#10'        end;'#13#10#13#10'    end;'
  +#13#10'  end;'#13#10'  procedure SearchCodeNode(ThisNode:TdataNode);'#13#10
  +'  var'#13#10'    i:integer;'#13#10'  begin'#13#10'    if (ThisNode.NodeType'
  +'=''PasUnit'')'#13#10'    or (ThisNode.NodeType=''PythonScript'')'#13#10'   '
  +' or (ThisNode.NodeType=''Function'') then'#13#10'    begin'#13#10'      Sea'
  +'rchThisText(ThisNode.NodeName,ThisNode.NodeType,ThisNode.GetAttribute(''Cod'
  +'e'',true).AttribValue);'#13#10'    end;'#13#10'    for i:=0 to length(ThisN'
  +'ode.ChildNodes)-1 do'#13#10'      SearchCodeNode(ThisNode.ChildNodes[i]);'
  +#13#10'  end;'#13#10#13#10'begin'#13#10'  // text blocks to be searched....'
  +#13#10'  //   Raw Units'#13#10'  //   Functions'#13#10'  //   Event handlers'
  +#13#10'  // search through each text block, listing name, line number and li'
  +'ne text for each found occurrence'#13#10'  // (list found elements in messa'
  +'ges block)'#13#10'  //!! save any changes first....??'#13#10'  CodeEditStat'
  +'us:=''ok'';'#13#10'  if CodeEditForm.Mode<>''SearchCode'' then'#13#10'  beg'
  +'in'#13#10'    CodeEditorClosed(nil);'#13#10'    CodeEditForm.Mode:=''Search'
  +'Code'';'#13#10'    CodeEditForm.InitialiseOnShow(''Search Results'','''','''
  +''');'#13#10'  end;'#13#10#13#10'  self.CodeEdit.MessageLines:='''';'#13#10
  +'  self.CodeEdit.ItemValue:='''';'#13#10'  SearchCodeNode(CodeRootNode);'#13
  +#10'  SearchEventsCode(UIRootNode);'#13#10#13#10'end;'#13#10#13#10'procedure'
  +' TCodeEditForm.DoLocalSearch(TextToFind:String);'#13#10'var'#13#10'    foun'
  +'d:integer;'#13#10'    {$ifndef JScript}'#13#10'    opts:TSynSearchOptions;'
  +#13#10'    {$else}'#13#10'    txt,qual:String;'#13#10'    {$endif}'#13#10'be'
  +'gin'#13#10'    {$ifndef JScript}'#13#10'    if self.CodeEditFindCase.Checke'
  +'d then'#13#10'      opts := [ssoEntireScope]'#13#10'    else'#13#10'      o'
  +'pts:= [ssoEntireScope,ssoMatchCase];'#13#10'    found:=self.CodeEdit.TheEdi'
  +'tor.SearchReplace(TextToFind,'''',opts);'#13#10#13#10'    {$else}'#13#10'  '
  +'  qual:=''g'';'#13#10'    if self.CodeEditFindCase.Checked then'#13#10'    '
  +'  qual:=''gi'';'#13#10'    txt:=TextToFind;'#13#10'    asm'#13#10'    var t'
  +'extfield=document.getElementById(''CodeEditContentsReal'');'#13#10'    //va'
  +'r regex=new RegExp(txt, "gi");'#13#10'    var regex=new RegExp(txt, qual);'
  +#13#10'    this.RegExp=regex;'#13#10#13#10'    var ok=regex.test(textfield.v'
  +'alue);'#13#10'    //alert(''test regex.lastIndex=''+regex.lastIndex);'#13#10
  +#13#10'    if (!ok)'#13#10'      {found=-1;}'#13#10'    else {'#13#10'      '
  +'found=regex.lastIndex;  }'#13#10#13#10'    //alert(''search(regex) ''+regex'
  +'+'' found=''+found);'#13#10'    this.LastSearchIndex=found;'#13#10'    end;'
  +#13#10'    if found>-1 then'#13#10'      self.CodeEdit.GoToCharPos(found-len'
  +'gth(txt));'#13#10'    self.LastSearchIndex:=found;'#13#10'    found:=found+'
  +'1;'#13#10'    {$endif}'#13#10'  if found<1 then'#13#10'    showmessage(''No'
  +'t found'');'#13#10#13#10'end;'#13#10#13#10'procedure TCodeEditForm.CodeEdit'
  +'FindBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myVa'
  +'lue: AnsiString);'#13#10'begin'#13#10'  if self.CodeEditFindTxt.ItemValue='
  +''''' then'#13#10'    showmessage(''Please enter text to be found'')'#13#10
  +'  else'#13#10'  begin'#13#10'    if CodeEditFindGlobal.Checked=false then'
  +#13#10'      DoLocalSearch(self.CodeEditFindTxt.ItemValue)'#13#10'    else'
  +#13#10'      DoGlobalSearch(self.CodeEditFindTxt.ItemValue);'#13#10'  end;'
  +#13#10'end;'#13#10'procedure TCodeEditForm.CodeEditFindNextBtnHandleButtonCl'
  +'ick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'var'#13#10'    found,startidx:integer;'#13#10'    {$ifndef JScript}'#13
  +#10'    opts:TSynSearchOptions;'#13#10'    {$else}'#13#10'    txt:String;'#13
  +#10'    {$endif}'#13#10'begin'#13#10'  if self.CodeEditFindTxt.ItemValue='''
  +''' then'#13#10'    showmessage(''Please enter text to be found'')'#13#10'  '
  +'else'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'    if self.CodeEdi'
  +'tFindCase.Checked then'#13#10'      opts := [ssoFindContinue]'#13#10'    el'
  +'se'#13#10'      opts:= [ssoFindContinue,ssoMatchCase];'#13#10'    found:=se'
  +'lf.CodeEdit.TheEditor.SearchReplace(self.CodeEditFindTxt.ItemValue,'''',opt'
  +'s);'#13#10'    {$else}'#13#10'    txt:=self.CodeEditFindTxt.ItemValue;'#13
  +#10'    startidx:=self.LastSearchIndex;'#13#10'    asm'#13#10'    if ((this.'
  +'RegExp==null)||(this.RegExp==undefined)) {'#13#10'      alert(''Please use '
  +'"Find" first''); }'#13#10'    else {'#13#10'      var regex=this.RegExp;'#13
  +#10'      regex.lastIndex=startidx;'#13#10'      var textfield=document.getE'
  ,'lementById(''CodeEditContentsReal'');'#13#10'      var ok=regex.test(textfi'
  +'eld.value);'#13#10'      if (!ok)'#13#10'        {found=-1;}'#13#10'      e'
  +'lse {'#13#10'        found=regex.lastIndex;  }'#13#10'      //alert(''test '
  +'regex.lastIndex=''+regex.lastIndex);'#13#10#13#10'      this.LastSearchInde'
  +'x=found;'#13#10'      //alert(''regex ''+regex+'' found=''+found);'#13#10' '
  +'     }'#13#10'    end;'#13#10'    if found>-1 then'#13#10'      self.CodeEd'
  +'it.GoToCharPos(found-length(txt));'#13#10'    found:=found+1;'#13#10'    {$'
  +'endif}'#13#10'    if found<1 then'#13#10'      showmessage(''No further occ'
  +'urrences'');'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'function TC'
  +'odeEditForm.ValidateInputs:Boolean;'#13#10'var'#13#10'  ok:Boolean;'#13#10
  +'  i:integer;'#13#10'begin'#13#10'  ok:=true;'#13#10'  for i:=0 to length(My'
  +'Inputs)-1 do'#13#10'    if trim(myInputs[i].InputNodeName)<>'''' then'#13#10
  +'    begin'#13#10'      if trim(myInputs[i].InputSynonym)='''' then'#13#10' '
  +'       ok:=false;'#13#10'    end;'#13#10'  if ok=false then'#13#10'    show'
  +'message(''Please provide a Synonym for each declared input'');'#13#10#13#10
  +'  result:=ok;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.CodeEditSave'
  +'BtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString'
  +');'#13#10'var'#13#10'    XFormNode:TDataNode;'#13#10'    ok:Boolean;'#13#10
  +'begin'#13#10'  ok:=ValidateInputs;'#13#10'  if ok then'#13#10'  begin'#13#10
  +'    CodeEditStatus:=''ok'';'#13#10'    TXForm(self).Showing:=''No'';'#13#10
  +'    CodeEditorClosed(OIEditBox);'#13#10'  end;'#13#10'end;'#13#10#13#10'pro'
  +'cedure TCodeEditForm.CodeEditCancelBtnHandleButtonClick(e:TEventStatus;node'
  +'ID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'    XFormNode:TData'
  +'Node;'#13#10'begin'#13#10'  CodeEditStatus:=''Cancel'';'#13#10'  TXForm(sel'
  +'f).Showing:=''No'';'#13#10'  {$ifndef JScript}'#13#10'  {$else}'#13#10'  OI'
  +'EditBox:=nil;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10#13#10'end.'#13#10
  +#13#10
]);
LazarusResources.Add('compileusercode','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit CompileUserCode;'#13
  +#10#13#10'(*'#13#10'This unit manages the Free Pascal compilation of user-cr'
  +'eated event handler code'#13#10'into a dll, with functions callable in run '
  +'mode.'#13#10#13#10'Equivalent compilation to JS, for use in the HTML runtim'
  +'e, is done using pas2js compiler.'#13#10#13#10'*)'#13#10#13#10'{$ifndef JSc'
  +'ript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'interface'#13
  +#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUtils,  UtilsJSC'
  +'ompile,'#13#10'  webTranspilerUtils,'#13#10'  XComposite,'#13#10'{$ifndef J'
  +'Script}'#13#10'  {$if defined ( windows)}'#13#10'  Windows,                '
  +'           // for CurrentThreadID'#13#10'  {$endif}'#13#10'  //CompilerLogU'
  +'nit,'#13#10'  LazsUtils, Controls, URIParser,'#13#10'  PropEdits,TypInfo, D'
  +'ialogs, Dynlibs,Process,'#13#10'  XCode, Forms, Events, xpparser;'#13#10'{$'
  +'else}'#13#10'  HTMLUtils,XCode,XIFrame,Events,'#13#10'  webfilecache, pas2j'
  +'swebcompiler, pparser,'#13#10'  InterfaceTypes;'#13#10'{$endif}'#13#10#13#10
  +'{$ifdef Python}'#13#10'{$ifndef JScript}'#13#10'type'#13#10'  // record typ'
  +'e for queued async functions'#13#10'  TPyXQueueRec = record'#13#10'    QDum'
  +'my: string;'#13#10'  end;'#13#10'  PPyXQueueRec = ^TPyXQueueRec;'#13#10'{$e'
  +'ndif}'#13#10'type'#13#10'  TPyProcs = class(TObject)'#13#10'    procedure G'
  +'atherAndRunPythonScripts(dummy:PtrInt);'#13#10'  end;'#13#10'var'#13#10'   '
  +' PyProcs:TPyProcs;'#13#10'{$endif}'#13#10#13#10'function CompileEventCode(M'
  +'yCodeEditor:TXCode;RunMode:String):Boolean;'#13#10'function   DfltUnitCode('
  +'UnitName,UnitType:String):string;'#13#10'function   DfltFunctionCode(FnName'
  +':String):string;'#13#10'function   DfltEventCode:string;'#13#10'function   '
  +'DfltThreadEventCode(NodeName:String):string;'#13#10'function   DfltTreeNode'
  +'EventCode:string;'#13#10'function   DfltPythonCode:string;'#13#10'procedure'
  +' GatherSourcedAttributes(StartNode:TDataNode);'#13#10'{$ifdef Python}'#13#10
  +'{$ifndef JScript}'#13#10'procedure GatherAndRunPythonScriptsLater;'#13#10'{'
  +'$endif}'#13#10'{$endif}'#13#10#13#10'var'#13#10'    ConfigfpcPath:String;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'{$else}'#13#10'var'#13#10'    JSOutput'
  +':String;'#13#10#13#10#13#10'    eventsinterfacepas:String;'#13#10'    inter'
  +'facetypespas:String;'#13#10#13#10'    classespas:String;'#13#10'    contnrs'
  +'pas:String;'#13#10'    dateutilspas:String;'#13#10'    jspas:String;'#13#10
  +'    mathpas:String;'#13#10'    rtlconstspas:String;'#13#10'//    rttipas:St'
  +'ring;'#13#10'    strutilspas:String;'#13#10'    systempas:String;'#13#10'  '
  +'  sysutilspas:String;'#13#10'    typespas:String;'#13#10'    typinfopas:Str'
  +'ing;'#13#10#13#10'//      browserconsolepas:String;'#13#10'//      class2pa'
  +'spas:String;'#13#10'//      hotreloadclientpas:String;'#13#10'//      libjq'
  +'uerypas:String;'#13#10'//      nodejspas:String;'#13#10'//      objpaspas:S'
  +'tring;'#13#10'//      timerpas:String;'#13#10'//      webpas:String;'#13#10
  +'//      webaudiopas:String;'#13#10'//      webbluetoothpas:String;'#13#10'/'
  +'/      webglpas:String;'#13#10'//      webrouterpas:String;'#13#10'{$endif}'
  +#13#10#13#10#13#10#13#10'implementation'#13#10'uses  XObjectInsp, PyXUtils;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'type'#13#10'   TMyDLL = function (var '
  +'instring:string): string; stdcall ;'#13#10#13#10'var'#13#10'    AProcess: T'
  +'Process;'#13#10'{$endif}'#13#10'var'#13#10'    PascalCode,ExportsList,Names'
  +'paceUnits:TStringList;'#13#10#13#10#13#10'{$ifndef JScript}'#13#10'procedur'
  +'e DeleteDynamicIncFiles;'#13#10'var'#13#10'  lSearchRec:TSearchRec;'#13#10
  +'  lPath:string;'#13#10'begin'#13#10'  if not DirectoryExists(''tempinc'') t'
  +'hen'#13#10'    CreateDir(''tempinc'');'#13#10#13#10'  lPath := ''tempinc/'''
  +';'#13#10#13#10'  if FindFirst(lPath+''*.*'',faAnyFile,lSearchRec) = 0 then'
  +#13#10'  begin'#13#10'    try'#13#10'      repeat'#13#10'        SysUtils.De'
  +'leteFile(lPath+lSearchRec.Name);    //!! does not delete any files it think'
  +'s are open...'#13#10'      until SysUtils.FindNext(lSearchRec) <> 0;'#13#10
  +'    finally'#13#10'      SysUtils.FindClose(lSearchRec);  // Free resources'
  +' on successful find'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10
  +'procedure CloseMyFile(FileName:String);'#13#10'var'#13#10'   tf: TextFile;'
  +#13#10'begin'#13#10'  if FileExists(FileName) then'#13#10'  begin'#13#10'   '
  +' AssignFile(tf,FileName);'#13#10'   {$I-}'#13#10'    Reset(tf);'#13#10'   {'
  +'$I+}'#13#10'   if IOResult <> 0 then   // file is open'#13#10'   begin'#13
  ,#10'    try'#13#10'      CloseFile(tf);'#13#10'    finally'#13#10'    end;'
  +#13#10'   end;'#13#10' end;'#13#10'end;'#13#10#13#10'procedure WriteRTLIncFi'
  +'le(filepath,filename,suffix:String);'#13#10'var'#13#10'  TheStream:TFileStr'
  +'eam;'#13#10'  Incname,tempText,oneLine:string;'#13#10'  TxtLines:TStringLis'
  +'t;'#13#10'  i,j:integer;'#13#10'  URI: TURI;'#13#10'begin'#13#10'  // Load '
  +'up the required file'#13#10'  TxtLines:=TStringList.Create;'#13#10'  TxtLin'
  +'es.LoadFromFile(filepath+filename+''.''+suffix);'#13#10#13#10'  // Set up a'
  +' file stream for the target .inc file'#13#10'  IncName:=''tempinc/''+filena'
  +'me+suffix+''.inc'';'#13#10'  try'#13#10'    TheStream:=TFileStream.Create(I'
  +'ncName,fmCreate or fmOpenRead or fmOpenWrite or fmShareDenyNone);'#13#10'  '
  +'except'#13#10'    showmessage(''Unable to create file ''+IncName);'#13#10' '
  +' end;'#13#10#13#10#13#10'  if suffix=''js'' then'#13#10'  begin'#13#10'    '
  +'TxtLines.Text:=''''''''+SubstituteSpecials(TxtLines.Text)+'''''''';'#13#10
  +'  end'#13#10'  else'#13#10'  begin'#13#10'      // Substitute single-quotes'
  +' in the text to be copied'#13#10'      TxtLines.Text:=MyStringReplace(TxtLi'
  +'nes.Text,'''''''',''&myapos;'',-1,-1);'#13#10'      for i:=0 to TxtLines.Co'
  +'unt-1 do'#13#10'      begin'#13#10'        TxtLines[i]:=''+ ''''''+TxtLines'
  +'[i]+''\n'''' '' ;'#13#10'      end;'#13#10'  end;'#13#10#13#10#13#10'  // W'
  +'rap the text with pascal code that will load it into a string variable.'#13
  +#10'  if filename+suffix=''gpu-browserjs'' then'#13#10'  begin'#13#10'    //'
  +' gpu-browser.js'#13#10'    TxtLines.Insert(0,''pas.XGPUCanvas.gpujs = '');'
  +#13#10'  end'#13#10'  else if suffix=''js'' then'#13#10'    TxtLines.Insert('
  +'0,''pas.CompileUserCode.''+filename+suffix+'' = '')'#13#10'  else'#13#10'  '
  +'  TxtLines.Insert(0,''pas.CompileUserCode.''+filename+suffix+'' = '''''''' '
  +''');'#13#10#13#10'  TxtLines.Insert(0,''asm'');'#13#10'  TxtLines.Add('';'''
  +');'#13#10'  TxtLines.Add(''end;'');'#13#10'  //... and will put back the or'
  +'iginal quote chars'#13#10'  if suffix=''js'' then'#13#10'  begin'#13#10'  e'
  +'nd'#13#10'  else'#13#10'  begin'#13#10'    TxtLines.Add(filename+suffix+'':'
  +'=MyStringReplace(''+filename+suffix+'',''''&myapos;'''','''''''''''''''',-1'
  +',-1);'');'#13#10'  end;'#13#10#13#10'  // Save the new .inc file'#13#10'  T'
  +'xtLines.SaveToStream(TheStream);'#13#10#13#10'  TheStream.Free;'#13#10'  Tx'
  +'tLines.Free;'#13#10'end;'#13#10#13#10'procedure WriteRTLIncFile(filepath,fi'
  +'lename:String);  overload;'#13#10'begin'#13#10'  WriteRTLIncFile(filepath,f'
  +'ilename,''pas'');'#13#10'end;'#13#10#13#10'procedure WriteRTLIncFiles;'#13
  +#10'// Write files required by the pas2js compiler'#13#10'begin'#13#10#13#10
  +'  // minimal required rtl set....'#13#10' // WriteRTLIncFile(''resources/rt'
  +'l/'',''system'');'#13#10' // WriteRTLIncFile(''resources/rtl/'',''rtlconsts'
  +''');'#13#10' // WriteRTLIncFile(''resources/rtl/'',''js'');'#13#10' // Writ'
  +'eRTLIncFile(''resources/rtl/'',''sysutils'');'#13#10' // WriteRTLIncFile('''
  +'resources/rtl/'',''types'');'#13#10' // WriteRTLIncFile(''resources/rtl/'','
  +'''classes'');'#13#10#13#10'  // common rtl set.....'#13#10'  WriteRTLIncFil'
  +'e(''resources/rtl/'',''classes'');'#13#10'  WriteRTLIncFile(''resources/rtl'
  +'/'',''contnrs'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''dateutils'''
  +');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''js'');'#13#10'  WriteRTLIn'
  +'cFile(''resources/rtl/'',''math'');'#13#10'  WriteRTLIncFile(''resources/rt'
  +'l/'',''rtlconsts'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''strutils'
  +''');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''system'');'#13#10'  Writ'
  +'eRTLIncFile(''resources/rtl/'',''sysutils'');'#13#10'  WriteRTLIncFile(''re'
  +'sources/rtl/'',''types'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''ty'
  +'pinfo'');'#13#10#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''rtti'');'
  +#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''timer'');'#13#10'  //  Wri'
  +'teRTLIncFile(''resources/rtl/'',''nodejs'');'#13#10'  //  WriteRTLIncFile('
  +'''resources/rtl/'',''objpas'');'#13#10'  //  WriteRTLIncFile(''resources/rt'
  +'l/'',''libjquery'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''hotr'
  +'eloadclient'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''class2pas'
  +''');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''browserconsole'');'
  +#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''web'');'#13#10'  //  Write'
  +'RTLIncFile(''resources/rtl/'',''webaudio'');'#13#10'  //  WriteRTLIncFile('
  +'''resources/rtl/'',''webbluetooth'');'#13#10'  //  WriteRTLIncFile(''resour'
  +'ces/rtl/'',''webgl'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''we'
  +'brouter'');'#13#10#13#10'  WriteRTLIncFile(''resources/project/'',''gpu-bro'
  +'wser'',''js'');'#13#10'end;'#13#10#13#10#13#10'procedure LoadFPCConfig;'#13
  +#10'var'#13#10'  TheStream : TFileStream;'#13#10'  TheLines:TStringList;'#13
  +#10'  ProgPath:String;'#13#10'begin'#13#10'  // pick up the last-used config'
  ,' file XIDERunSettings.dta'#13#10'  ProgPath:=ExtractFilePath(Application.Ex'
  +'eName);'#13#10'  TheLines:=TStringList.Create;'#13#10'  if FileExists(ProgP'
  +'ath+''XIDERunSettings.dta'') then'#13#10'  begin'#13#10'    try'#13#10'    '
  +'  TheStream:=TFileStream.Create(ProgPath +''XIDERunSettings.dta'',fmOpenRea'
  +'d or fmShareDenyNone);'#13#10'      TheLines.LoadFromStream(TheStream);'#13
  +#10'      TheStream.Free;'#13#10'    except'#13#10'      TheLines.AddStrings'
  +'(ConfigFPCPath,true);'#13#10'    end;'#13#10'    if TheLines.Count>0 then'
  +#13#10'    begin'#13#10'      ConfigfpcPath:=TheLines[0];'#13#10'    end;'#13
  +#10'  end;'#13#10'  FreeAndNil(TheLines);'#13#10'end;'#13#10#13#10'{$endif}'
  +#13#10#13#10#13#10'function BuildEventheader(NameSpace,NodeName,EventType,Ru'
  +'nMode,Phase:String):String;'#13#10'var'#13#10'  procName:String;'#13#10'beg'
  +'in'#13#10'  procName:= ''procedure ''+NameSpace+NodeName + ''Handle'' + Eve'
  +'ntType + Phase;'#13#10'  if RunMode<>''JSJS'' then'#13#10'  begin'#13#10'  '
  +'  result:=procName + ''(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStr'
  +'ing); '';'#13#10'    if RunMode=''LazDll'' then'#13#10'      result:=result'
  +' + ''  stdcall; '';'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    re'
  +'sult:=procName + ''(e:TEventStatus;nodeID,myValue:String); '';'#13#10'  end'
  +';'#13#10'end;'#13#10#13#10'procedure GatherEventHeaders(RunMode,NameSpace:S'
  +'tring;StartNode:TDataNode;UnitCode:TStringList;var n:integer);'#13#10'var'
  +#13#10'    i,j:integer;'#13#10'    tmp,Dflt:string;'#13#10'begin'#13#10'  if'
  +' StartNode.NameSpace= NameSpace then'#13#10'  begin'#13#10'    // user-crea'
  +'ted event code is held in the data nodes (node.myEventHandlers[i].TheCode)'
  +#13#10'    if (StartNode.IsDynamic) or (StartNode=UIRootNode) then'#13#10'  '
  +'    for i:=0 to length(StartNode.myEventHandlers)-1 do'#13#10'      begin'
  +#13#10'        // (exclude events for worker threads...)'#13#10'        if ('
  +'StartNode.NodeType<>''TXThreads'')'#13#10'        or (FoundString(StartNode'
  +'.myEventTypes[i],''Thread'')<>1) then'#13#10'        begin'#13#10'         '
  +' tmp:=StartNode.myEventHandlers[i].TheCode;'#13#10'          dflt:=DfltEven'
  +'tCode;'#13#10'          if (trim(StartNode.myEventHandlers[i].TheCode)<>'''
  +''')'#13#10'          and (tmp<>Dflt) then'#13#10'          begin'#13#10'   '
  +'         n:=n+1;'#13#10'            tmp:=BuildEventHeader(NameSpace,StartNo'
  +'de.NodeName,StartNode.myEventTypes[i],RunMode,'''');'#13#10'            Uni'
  +'tCode.Add(tmp);'#13#10'          end;'#13#10'        end;'#13#10'      end;'
  +#13#10'  end;'#13#10#13#10'    for i:=0 to length(StartNode.ChildNodes)-1 do'
  +#13#10'      GatherEventHeaders(RunMode,NameSpace,StartNode.ChildNodes[i],Un'
  +'itCode,n);'#13#10#13#10'end;'#13#10#13#10'procedure GatherEventHeadersForWo'
  +'rkerThreads(RunMode:String;StartNode:TDataNode;CodeBlock:TStringList);'#13
  +#10'var'#13#10'    i,j:integer;'#13#10'    tmp,Dflt:string;'#13#10'begin'#13
  +#10#13#10'  if (StartNode.IsDynamic)'#13#10'  and (StartNode.NodeType=''TXTh'
  +'reads'')  then'#13#10'  begin'#13#10'    for i:=0 to length(StartNode.myEve'
  +'ntHandlers)-1 do'#13#10'    begin'#13#10'      if (FoundString(StartNode.my'
  +'EventTypes[i],''Thread'')=1)'#13#10'      and (FoundString(StartNode.myEven'
  +'tTypes[i],''ThreadVars'')<>1) then'#13#10'      begin'#13#10'        tmp:=S'
  +'tartNode.myEventHandlers[i].TheCode;'#13#10'        dflt:=DfltThreadEventCo'
  +'de(StartNode.NodeName);'#13#10'        if (trim(StartNode.myEventHandlers[i'
  +'].TheCode)<>'''')'#13#10'        and (tmp<>Dflt) then'#13#10'        begin'
  +#13#10'          tmp:=BuildEventHeader('''',StartNode.NodeName,StartNode.myE'
  +'ventTypes[i],RunMode,'''');  //!!!!namespace'#13#10'          CodeBlock.Add'
  +'(tmp);'#13#10'        end;'#13#10'      end;'#13#10'    end;'#13#10'  end;'
  +#13#10#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'    Gath'
  +'erEventHeadersForWorkerThreads(RunMode,StartNode.ChildNodes[i],CodeBlock);'
  +#13#10'end;'#13#10#13#10'procedure GatherVarsForWorkerThreads1(RunMode:Strin'
  +'g;StartNode:TDataNode;CodeBlock:TStringList);'#13#10'var'#13#10'    i,j:int'
  +'eger;'#13#10'    tmp,VarNames:string;'#13#10'    VarNamesList:TStringList;'
  +#13#10'begin'#13#10#13#10'  if (StartNode.IsDynamic)'#13#10'  and (StartNode'
  +'.NodeType=''TXThreads'')  then'#13#10'  begin'#13#10'    VarNames := StartN'
  +'ode.GetAttribute(''ThreadVarNums'',true).AttribValue;'#13#10'    if VarName'
  +'s<>'''' then'#13#10'    begin'#13#10'      CodeBlock.Add(''type TXVars''+St'
  +'artNode.NodeName+'' = class(TObject)'');'#13#10'      CodeBlock.Add(''priva'
  +'te'');'#13#10'      VarNamesList:=TStringList.Create;'#13#10'      VarNames'
  +'List.StrictDelimiter:=true;'#13#10'      VarNamesList.Delimiter:='','';'#13
  +#10'      VarNamesList.LineBreak:='','';'#13#10'      VarNamesList.Text:=Var'
  +'Names;'#13#10'      for i:=0 to VarNamesList.Count-1 do'#13#10'      begin'
  +#13#10'          CodeBlock.Add(''  f''+VarNamesList[i]+'':float;'');'#13#10
  ,'      end;'#13#10'      for i:=0 to VarNamesList.Count-1 do'#13#10'      be'
  +'gin'#13#10'          CodeBlock.Add(''  procedure set''+VarNamesList[i]+''(A'
  +'Value:float);'');'#13#10'      end;'#13#10'      CodeBlock.Add(''public'');'
  +#13#10'      for i:=0 to VarNamesList.Count-1 do'#13#10'      begin'#13#10' '
  +'         CodeBlock.Add(''  property ''+VarNamesList[i]+'':float read f''+Va'
  +'rNamesList[i]+'' write set''+VarNamesList[i]+'';'');'#13#10'      end;'#13
  +#10'      CodeBlock.Add(''end;'');'#13#10'      CodeBlock.Add(''var XVars''+'
  +'StartNode.NodeName+'':TXVars''+StartNode.NodeName+'';'');'#13#10#13#10'    '
  +'  VarNamesList.Free;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    '
  +'for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'      GatherVarsForWor'
  +'kerThreads1(RunMode,StartNode.ChildNodes[i],CodeBlock);'#13#10'end;'#13#10
  +'procedure GatherVarsForWorkerThreads2(RunMode:String;StartNode:TDataNode;Co'
  +'deBlock:TStringList);'#13#10'var'#13#10'    i,j:integer;'#13#10'    tmp,Var'
  +'Names:string;'#13#10'    VarNamesList:TStringList;'#13#10'begin'#13#10#13#10
  +'  if (StartNode.IsDynamic)'#13#10'  and (StartNode.NodeType=''TXThreads'') '
  +' then'#13#10'  begin'#13#10'    VarNames := StartNode.GetAttribute(''Thread'
  +'VarNums'',true).AttribValue;'#13#10'    if VarNames<>'''' then'#13#10'    b'
  +'egin'#13#10'      VarNamesList:=TStringList.Create;'#13#10'      VarNamesLi'
  +'st.StrictDelimiter:=true;'#13#10'      VarNamesList.Delimiter:='','';'#13#10
  +'      VarNamesList.LineBreak:='','';'#13#10'      VarNamesList.Text:=VarNam'
  +'es;'#13#10'      for i:=0 to VarNamesList.Count-1 do'#13#10'      begin'#13
  +#10'          CodeBlock.Add(''procedure TXVars''+StartNode.NodeName+''.set'''
  +'+VarNamesList[i]+''(AValue:float);'');'#13#10'          CodeBlock.Add(''beg'
  +'in'');'#13#10'          CodeBlock.Add(''{$if defined ( windows)}'');'#13#10
  +'          CodeBlock.Add(''  if GetCurrentThreadID = MainThreadID  then '');'
  +'         //!!!! and browser code????'#13#10'          CodeBlock.Add(''{$end'
  +'if}'');'#13#10'          CodeBlock.Add(''    f''+VarNamesList[i]+'' := AVal'
  +'ue;'');                   //!!!! else... raise error?'#13#10'          Code'
  +'Block.Add(''end;'');'#13#10'      end;'#13#10#13#10'      VarNamesList.Free'
  +';'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    for i:=0 to length('
  +'StartNode.ChildNodes)-1 do'#13#10'      GatherVarsForWorkerThreads2(RunMode'
  +',StartNode.ChildNodes[i],CodeBlock);'#13#10'end;'#13#10'procedure GatherVar'
  +'sForWorkerThreads3(RunMode:String;StartNode:TDataNode;CodeBlock:TStringList'
  +');'#13#10'var'#13#10'    i,j:integer;'#13#10'    tmp,VarNames:string;'#13#10
  +'    VarNamesList:TStringList;'#13#10'begin'#13#10#13#10'  if (StartNode.IsD'
  +'ynamic)'#13#10'  and (StartNode.NodeType=''TXThreads'')  then'#13#10'  begi'
  +'n'#13#10'    VarNames := StartNode.GetAttribute(''ThreadVarNums'',true).Att'
  +'ribValue;'#13#10'    if VarNames<>'''' then'#13#10'    begin'#13#10'      C'
  +'odeBlock.Add(''  XVars''+StartNode.NodeName+'':=TXVars''+StartNode.NodeName'
  +'+''.Create;'');'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    for i'
  +':=0 to length(StartNode.ChildNodes)-1 do'#13#10'      GatherVarsForWorkerTh'
  +'reads3(RunMode,StartNode.ChildNodes[i],CodeBlock);'#13#10'end;'#13#10#13#10
  +'procedure GatherEventCode(RunMode,NameSpace:String;Compiler:TObject;StartNo'
  +'de:TDataNode;UnitCode:TStringList);'#13#10'var'#13#10'    i,j:integer;'#13
  +#10'    hdr,tmp,Dflt,nm,et:string;'#13#10'    IncCode,InitCode:TStringList;'
  +#13#10'begin'#13#10'  if StartNode.NameSpace=NameSpace then'#13#10'  begin'
  +#13#10'    nm:=StartNode.NodeName;'#13#10'    // user-created event code is '
  +'held in the data nodes (node.myEventHandlers[i].TheCode)'#13#10'    IncCode'
  +':=TStringList.Create;'#13#10'    if (StartNode.IsDynamic) or (StartNode=UIR'
  +'ootNode) then'#13#10'      for i:=0 to length(StartNode.myEventHandlers)-1 '
  +'do'#13#10'      // (exclude events for worker threads...)'#13#10'      if ('
  +'StartNode.NodeType<>''TXThreads'')'#13#10'      or (FoundString(StartNode.m'
  +'yEventTypes[i],''Thread'')<>1) then'#13#10'      begin'#13#10'        et:=S'
  +'tartNode.myEventTypes[i];'#13#10'        tmp:=StartNode.myEventHandlers[i].'
  +'TheCode;'#13#10'        Dflt:=DfltEventCode;'#13#10'        if (trim(tmp)<>'
  +''''')'#13#10'        and (tmp<>Dflt) then'#13#10'        begin'#13#10'     '
  +'      // Insert a procedure containing the code for the event initialisatio'
  +'n'#13#10'           hdr:=BuildEventHeader(NameSpace,StartNode.NodeName,Star'
  +'tNode.myEventTypes[i],RunMode,''Init'');'#13#10'           tmp:=trim(StartN'
  +'ode.myEventHandlers[i].InitCode);'#13#10'           InitCode:=StringSplit(t'
  +'mp,LineEnding);'#13#10'           InitCode.Insert(0,hdr);'#13#10'          '
  +' if InitCode.Count=1 then'#13#10'             InitCode.Add(''begin end;'');'
  +#13#10'           WriteIncFile(Compiler,Namespace+StartNode.NodeName, StartN'
  +'ode.myEventTypes[i]+''__Init'',''tempinc/'', UnitCode, InitCode);'#13#10#13
  ,#10'           // Insert a procedure containing the main code for the event'
  +#13#10'           hdr:=BuildEventHeader(NameSpace,StartNode.NodeName,StartNo'
  +'de.myEventTypes[i],RunMode,''Main'');'#13#10'           IncCode:=StringSpli'
  +'t(StartNode.myEventHandlers[i].TheCode,LineEnding);'#13#10'           IncCo'
  +'de.Insert(0,hdr);'#13#10'           WriteIncFile(Compiler,NameSpace+StartNo'
  +'de.NodeName, StartNode.myEventTypes[i],''tempinc/'', UnitCode, IncCode);'#13
  +#10#13#10'           // Insert a control procedure to run the init and main '
  +'code for the event'#13#10'           tmp:=BuildEventHeader(NameSpace,StartN'
  +'ode.NodeName,StartNode.myEventTypes[i],RunMode,'''');'#13#10'           Uni'
  +'tCode.Add(tmp);'#13#10#13#10'           UnitCode.Add(''begin'');'#13#10'   '
  +'        UnitCode.Add(''  AppMethods.mmiSetEventsNameSpace(''''''+NameSpace+'
  +''''''');'');'#13#10'           UnitCode.Add(''  if (e=nil) or (e.InitRunnin'
  +'g=false) then'');'#13#10'           UnitCode.Add(''  begin'');'#13#10'     '
  +'      UnitCode.Add(''    if (e=nil) then'');'#13#10'           UnitCode.Add'
  +'(''    begin'');'#13#10'           UnitCode.Add(''      e:=TEventStatus.Cre'
  +'ate(''''''+StartNode.myEventTypes[i]+'''''',''''''+StartNode.NodeName+'''''
  +''');'');'#13#10'           UnitCode.Add(''      e.NameSpace:=''''''+NameSpa'
  +'ce+'''''';'');'#13#10'           UnitCode.Add(''    end;'');'#13#10'       '
  +'     // If the event has initialisation code, run this first...'#13#10'    '
  +'       UnitCode.Add(''    e.InitRunning:=true;'');'#13#10'           UnitCo'
  +'de.Add(''    ''+NameSpace+StartNode.NodeName + ''Handle'' + StartNode.myEve'
  +'ntTypes[i] + ''Init(e,nodeID,myValue);'');'#13#10#13#10'           UnitCode'
  +'.Add(''  end'');'#13#10'           UnitCode.Add(''  else'');'#13#10'       '
  +'    UnitCode.Add(''    e.InitRunning:=false;'');'#13#10#13#10'           //'
  +' If the initialisation code has called any async functions, these will have'
  +' been logged in the'#13#10'           // event status.  Do not continue wit'
  +'h the main event code unless all of the async functions'#13#10'           /'
  +'/ have recorded completion.'#13#10'           UnitCode.Add(''  if e.EventHa'
  +'sWaitingAsyncProcs = true then'');'#13#10'           UnitCode.Add(''  begin'
  +''');'#13#10'           UnitCode.Add(''    if e.ClearAsync(''''ShowBusy'''')'
  +' then'');'#13#10'           UnitCode.Add(''      AppMethods.mmiStartMain(e)'
  +';'');'#13#10'           UnitCode.Add(''    EXIT;'');'#13#10'           Unit'
  +'Code.Add(''  end'');'#13#10'           UnitCode.Add(''  else'');'#13#10'   '
  +'        UnitCode.Add(''    e.InitRunning:=false;'');'#13#10#13#10'         '
  +'  // run the main event code'#13#10'           UnitCode.Add(''  ''+NameSpac'
  +'e+StartNode.NodeName + ''Handle'' + StartNode.myEventTypes[i] + ''Main(e,no'
  +'deID,myValue);'');'#13#10#13#10'           UnitCode.Add(''end;'');'#13#10#13
  +#10'           {$ifndef JScript}'#13#10'           if RunMode=''LazDll'' the'
  +'n'#13#10'             ExportsList.Add(''exports ''+NameSpace+StartNode.Node'
  +'Name + ''Handle'' + StartNode.myEventTypes[i]+'';'');'#13#10'           {$e'
  +'ndif}'#13#10#13#10'        end;'#13#10'      end;'#13#10'    FreeAndNil(Inc'
  +'Code);'#13#10#13#10'  end;'#13#10#13#10'  for i:=0 to length(StartNode.Chil'
  +'dNodes)-1 do'#13#10'      GatherEventCode(RunMode,NameSpace,Compiler,StartN'
  +'ode.ChildNodes[i],UnitCode);'#13#10#13#10'end;'#13#10#13#10'procedure Gathe'
  +'rEventCodeForWorkerThreads(RunMode,NameSpace:String;Compiler:TObject;StartN'
  +'ode:TDataNode;CodeBlock:TStringList);'#13#10'var'#13#10'    i,j:integer;'#13
  +#10'    hdr,tmp,Dflt,nm,et:string;'#13#10'    IncCode,InitCode:TStringList;'
  +#13#10'begin'#13#10'  nm:=StartNode.NodeName;'#13#10'  // user-created event'
  +' code is held in the data nodes (node.myEventHandlers[i].TheCode)'#13#10'  '
  +'IncCode:=TStringList.Create;'#13#10'  if (StartNode.NodeType=''TXThreads'')'
  +#13#10'  and (StartNode.IsDynamic) then'#13#10'    for i:=0 to length(StartN'
  +'ode.myEventHandlers)-1 do'#13#10'    if FoundString(StartNode.myEventTypes['
  +'i],''Thread'')=1 then          // just the Thread<n> events'#13#10'    begi'
  +'n'#13#10'      et:=StartNode.myEventTypes[i];'#13#10'      tmp:=StartNode.m'
  +'yEventHandlers[i].TheCode;'#13#10'      Dflt:=DfltThreadEventCode(StartNode'
  +'.NodeName);'#13#10'      if (trim(tmp)<>'''')'#13#10'      and (tmp<>Dflt) '
  +'then'#13#10'      begin'#13#10#13#10'         // Insert a procedure contain'
  +'ing the main code for the event'#13#10'         hdr:=BuildEventHeader(NameS'
  +'pace,StartNode.NodeName,StartNode.myEventTypes[i],RunMode,'''');'#13#10'   '
  +'      IncCode:=StringSplit(StartNode.myEventHandlers[i].TheCode,LineEnding)'
  +';'#13#10'         IncCode.Insert(0,hdr);'#13#10'         WriteIncFile(Compi'
  +'ler,StartNode.NodeName, StartNode.myEventTypes[i],''tempinc/'', CodeBlock, '
  +'IncCode);'#13#10#13#10'         {$ifndef JScript}'#13#10'         if RunMod'
  +'e=''LazDll'' then'#13#10'           CodeBlock.Add(''exports ''+NameSpace+St'
  ,'artNode.NodeName + ''Handle'' + StartNode.myEventTypes[i]+'';'');'#13#10'  '
  +'       {$endif}'#13#10#13#10'      end;'#13#10'    end;'#13#10'  FreeAndNil'
  +'(IncCode);'#13#10#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13
  +#10'    GatherEventCodeForWorkerThreads(RunMode,NameSpace,Compiler,StartNode'
  +'.ChildNodes[i],CodeBlock);'#13#10'end;'#13#10#13#10#13#10'function BuildFun'
  +'cHeaderWithParams(FuncNode:TDataNode;num:integer):String;'#13#10'var'#13#10
  +'   k:integer;'#13#10'   tmp:string;'#13#10'   FuncInputs:TCodeInputs;'#13#10
  +'begin'#13#10'  tmp:=FuncNode.GetAttribute(''Inputs'',true).AttribValue;'#13
  +#10'  FuncInputs:=StringToCodeInputs(tmp);'#13#10'  if length(FuncInputs)>0 '
  +'then'#13#10'  begin'#13#10'    tmp:=''function ''+FuncNode.NameSpace+FuncNo'
  +'de.NodeName+''('';'#13#10'    for k:=0 to length(FuncInputs)-1 do'#13#10'  '
  +'  begin'#13#10'      if k>0 then tmp:=tmp+'';'';'#13#10'      tmp:=tmp+Func'
  +'Inputs[k].InputSynonym+'':String'';'#13#10'    end;'#13#10'    tmp:=tmp+'')'
  +':String; '';'#13#10'    if (num=1) then'#13#10'      tmp:=tmp+'' overload;'
  +''';'#13#10'    result:=tmp;'#13#10'  end'#13#10'  else'#13#10'    result:='
  +''''';'#13#10'end;'#13#10'function BuildFuncHeaderNoParams(FuncNode:TDataNod'
  +'e;num:integer):String;'#13#10'var'#13#10'   tmp:string;'#13#10'   FuncInput'
  +'s:TCodeInputs;'#13#10'begin'#13#10'  tmp:=FuncNode.GetAttribute(''Inputs'','
  +'true).AttribValue;'#13#10'  FuncInputs:=StringToCodeInputs(tmp);'#13#10#13
  +#10'  tmp:='''';'#13#10'  tmp:=''function ''+FuncNode.NameSpace+FuncNode.Nod'
  +'eName+'':String;'';'#13#10'  if (num=1)'#13#10'  and (length(FuncInputs)>0)'
  +' then'#13#10'    tmp:=tmp+'' overload;'';'#13#10'  result:=tmp;'#13#10'end;'
  +#13#10#13#10'procedure BuildThreadEventsUnit(Compiler:TObject;RunMode:String'
  +');'#13#10'var'#13#10'  UnitCode:TStringList;'#13#10'    procedure AddUnitCo'
  +'deLine(str:String);'#13#10'    begin'#13#10'      UnitCode.add(str);'#13#10
  +'    end;'#13#10'begin'#13#10'  UnitCode:=TStringList.Create;'#13#10'  // No'
  +'te: this unit does not contain the user-interface functions provided for ma'
  +'in-thread events'#13#10'  // (units InterfaceTypes, or dllInterface).'#13#10
  +#13#10'  AddUnitCodeLine(''unit ''+DllName+''Threads;'');'#13#10'  AddUnitCo'
  +'deLine(''{$ifndef JScript}'');'#13#10'  AddUnitCodeLine(''{$mode objfpc}{$H'
  +'+}'');'#13#10'  AddUnitCodeLine(''{$endif}'');'#13#10'  AddUnitCodeLine(''i'
  +'nterface'');'#13#10'  AddUnitCodeLine(''uses Classes, SysUtils, Math, contn'
  +'rs, dateutils,'');'#13#10'  AddUnitCodeLine(''{$if defined ( windows)}'');'
  +#13#10'  AddUnitCodeLine(''  windows, '');'#13#10'  AddUnitCodeLine(''{$endi'
  +'f}'');'#13#10'  AddUnitCodeLine(''  rtlconsts, strutils, types, typinfo, Ev'
  +'entsInterface;'');'#13#10#13#10'  AddUnitCodeLine('''');'#13#10'  AddUnitCo'
  +'deLine(''type AnsiString=String;'');'#13#10#13#10'  AddUnitCodeLine('''');'
  +#13#10'  GatherEventHeadersForWorkerThreads(RunMode,SystemNodeTree,UnitCode)'
  +';'#13#10#13#10'  AddUnitCodeLine('''');'#13#10'  GatherVarsForWorkerThreads'
  +'1(RunMode,SystemNodeTree,UnitCode);'#13#10#13#10'  AddUnitCodeLine('''');'
  +#13#10'  AddUnitCodeLine(''implementation'' );'#13#10'  AddUnitCodeLine('''''
  +');'#13#10#13#10'  GatherVarsForWorkerThreads2(RunMode,SystemNodeTree,UnitCo'
  +'de);'#13#10'  GatherEventCodeForWorkerThreads(RunMode,'''',Compiler,SystemN'
  +'odeTree,UnitCode);'#13#10#13#10'  AddUnitCodeLine(''    '' );'#13#10'  AddU'
  +'nitCodeLine(''begin'');'#13#10'  GatherVarsForWorkerThreads3(RunMode,System'
  +'NodeTree,UnitCode);'#13#10'  AddUnitCodeLine(''end.'');'#13#10#13#10'  {$if'
  +'ndef JScript}'#13#10'  // save the generated pas file'#13#10'  SysUtils.Del'
  +'eteFile(''tempinc/''+DllName+''Threads''+''.pas'');'#13#10'  UnitCode.SaveT'
  +'oFile(''tempinc/''+DllName+''Threads''+''.pas'');'#13#10'  {$else}'#13#10' '
  +' TPas2JSWebCompiler(Compiler).WebFS.SetFileContent(DllName+''Threads''+''.p'
  +'as'',UnitCode.Text);'#13#10'  {$endif}'#13#10#13#10'  // add this unit to t'
  +'he uses list in the main module'#13#10'  PascalCode.Add('',''+DllName+''Thr'
  +'eads'');'#13#10#13#10'  FreeAndNil(UnitCode);'#13#10'end;'#13#10#13#10'func'
  +'tion GatherUserUnits(RunMode:String; Compiler:TObject):String;'#13#10'var'
  +#13#10'    i,j,k:integer;'#13#10'    tmp,FirstUnitName,nm:string;'#13#10'   '
  +' lines, FuncCode:TStringList;'#13#10'    UnitNode, FuncNode:TdataNode;'#13
  +#10'    UnitCode:TStringList;'#13#10'    FuncInputs:TCodeInputs;'#13#10'    '
  +'procedure AddUnitCodeLine(str:String);'#13#10'    begin'#13#10'      UnitCo'
  +'de.add(str);'#13#10'    end;'#13#10#13#10'begin'#13#10#13#10'  // user-crea'
  +'ted units are held as data nodes (attribute ''Code'')'#13#10'  // create a '
  +'pas file on disk for each unit, and insert the unit name for the dll ''uses'
  +''' clause'#13#10'  UnitCode:=TStringList.Create;'#13#10'  Lines:=TStringLis'
  +'t.Create;'#13#10#13#10'  {$ifdef JScript}'#13#10'  XIDEUserUnits.clear;'#13
  +#10'  {$endif}'#13#10#13#10'  for i:=0 to length(CodeRootNode.ChildNodes)-1 '
  ,'do'#13#10'  begin'#13#10'        if CodeRootNode.ChildNodes[i].NodeType=''P'
  +'asUnit'' then'#13#10'        begin'#13#10'           UnitNode:=CodeRootNode'
  +'.ChildNodes[i];'#13#10'           if i=0 then FirstUnitName:=UnitNode.NodeN'
  +'ame;'#13#10'           // Raw Unit code is all in attribute attribute : Cod'
  +'e'#13#10'           UnitCode.Clear;'#13#10'           nm:=UnitNode.NodeName'
  +';'#13#10#13#10'           // add user-written unit code block'#13#10'      '
  +'     tmp:=UnitNode.GetAttribute(''Code'',true).AttribValue;'#13#10'        '
  +'   Lines:=StringSplit(tmp,LineEnding);'#13#10'           for j:=0 to Lines.'
  +'Count-1 do'#13#10'             AddUnitCodeLine(Lines[j]);'#13#10#13#10'    '
  +'       {$ifndef JScript}'#13#10'           // save the generated pas file'
  +#13#10'           SysUtils.DeleteFile(''tempinc/''+UnitNode.NodeName+''.pas'
  +''');'#13#10'           UnitCode.SaveToFile(''tempinc/''+UnitNode.NodeName+'
  +'''.pas'');'#13#10'           {$else}'#13#10'           TPas2JSWebCompiler(C'
  +'ompiler).WebFS.SetFileContent(UnitNode.NodeName+''.pas'',UnitCode.Text);'#13
  +#10'           XIDEUserUnits.add(UnitNode.NodeName+''.pas'');'#13#10'       '
  +'    {$endif}'#13#10#13#10'           // add this unit to the uses list in t'
  +'he main module'#13#10'           PascalCode.Add('',''+UnitNode.NodeName);'
  +#13#10'        end;'#13#10'  end;'#13#10#13#10'  // Build a separate unit to'
  +' hold ''event'' code for worker threads (within TXThreads components)'#13#10
  +'  // This code is in a separate unit from the main event code so that the s'
  +'cope of worker threads'#13#10'  // can be limited (they are self-contained,'
  +' with no access to data/functions in the main thread).'#13#10'  BuildThread'
  +'EventsUnit(Compiler,RunMode);'#13#10#13#10'  FreeAndNil(lines);'#13#10'  Fr'
  +'eeAndNil(UnitCode);'#13#10#13#10'  result:=FirstUnitName;'#13#10#13#10'end;'
  +#13#10#13#10'procedure GatherUserFuncs(RunMode,NameSpace:String; Compiler:TO'
  +'bject; StartNode:TDataNode;UnitCode:TStringList;var n:integer);'#13#10'var'
  +#13#10'    i,j,k:integer;'#13#10'    tmp,nm:string;'#13#10'    lines, FuncCo'
  +'de:TStringList;'#13#10'    UnitNode, FuncNode:TdataNode;'#13#10'    FuncInp'
  +'uts:TCodeInputs;'#13#10#13#10'begin'#13#10#13#10'  // user-created units ar'
  +'e held as data nodes (attribute ''Code'')'#13#10'  // find the user-defined'
  +' functions, and add them to the main unit'#13#10'  // in the implementation'
  +' section (UnitCode)'#13#10#13#10'  if (StartNode=CodeRootNode) then'#13#10
  +'  begin'#13#10'    Lines:=TStringList.Create;'#13#10'    FuncCode:=TStringL'
  +'ist.Create;'#13#10#13#10'    UnitNode:=StartNode;'#13#10#13#10'    // Inser'
  +'t declared functions'#13#10'    for j:=0 to length(UnitNode.ChildNodes)-1 d'
  +'o'#13#10'      if (UnitNode.ChildNodes[j].NodeType=''Function'')'#13#10'   '
  +'   and (UnitNode.ChildNodes[j].NameSpace=NameSpace) then'#13#10'      begin'
  +#13#10'        n:=n+1;'#13#10'        FuncNode:=UnitNode.ChildNodes[j];'#13
  +#10'        tmp:=FuncNode.GetAttribute(''Inputs'',true).AttribValue;'#13#10
  +'        FuncInputs:=StringToCodeInputs(tmp);'#13#10'        if length(FuncI'
  +'nputs)>0 then'#13#10'          tmp:=BuildFuncHeaderWithParams(FuncNode,2)'
  +#13#10'        else'#13#10'          tmp:=BuildFuncHeaderNoParams(FuncNode,2'
  +');'#13#10#13#10'        UnitCode.Add(tmp);'#13#10#13#10'        FuncCode.Cl'
  +'ear;'#13#10'        tmp:=FuncNode.GetAttribute(''Code'',true).AttribValue;'
  +#13#10'        Lines:=StringSplit(tmp,LineEnding);'#13#10'        for k:=0 t'
  +'o Lines.Count-1 do'#13#10'          FuncCode.Add(Lines[k]);'#13#10#13#10'  '
  +'      // each function is held in its own inc file so that we can display t'
  +'he relevant code section'#13#10'        // when there are compiler errors'
  +#13#10'        WriteIncFile(Compiler,FuncNode.NameSpace+FuncNode.NodeName, '
  +''''',''tempinc/'', UnitCode, FuncCode);'#13#10#13#10'        // add the ove'
  +'rloaded function to fetch values of all declared inputs'#13#10'        if l'
  +'ength(FuncInputs)>0 then'#13#10'        begin'#13#10'          tmp:=BuildFu'
  +'ncHeaderNoParams(FuncNode,2);'#13#10'          Lines.Clear;'#13#10'        '
  +'  Lines.Add(tmp);'#13#10'          Lines.Add(''begin'');'#13#10'           '
  +'    tmp:=''result:=''+FuncNode.NameSpace+FuncNode.NodeName+''('';'#13#10'  '
  +'        for k:=0 to length(FuncInputs)-1 do'#13#10'          begin'#13#10' '
  +'           if k>0 then tmp:=tmp+'','';'#13#10'            // either fetch a'
  +'n attribute value, or execute a function'#13#10'            if FuncInputs[k'
  +'].InputAttribName<>'''' then'#13#10'              tmp:=tmp+''GetPropertyVal'
  +'ue(''''''+FuncInputs[k].InputNodeName+'''''',''''''+FuncInputs[k].InputAttr'
  +'ibName+'''''')'''#13#10'            else'#13#10'              tmp:=tmp+Func'
  +'Inputs[k].InputNodeName;'#13#10'          end;'#13#10'          tmp:=tmp+'''
  +');'';'#13#10'          Lines.Add(tmp);'#13#10'          Lines.Add(''end;'')'
  +';'#13#10'          for k:=0 to Lines.Count-1 do'#13#10'            UnitCode'
  ,'.Add(Lines[k]);'#13#10'        end;'#13#10'      end;'#13#10'    FreeAndNil'
  +'(FuncCode);'#13#10'    FreeAndNil(Lines);'#13#10'  end;'#13#10#13#10#13#10
  +'  if (StartNode=CodeRootNode) then'#13#10'    for i:=0 to length(StartNode.'
  +'ChildNodes)-1 do'#13#10'      GatherUserFuncs(RunMode,NameSpace,Compiler,St'
  +'artNode.ChildNodes[i],UnitCode,n);'#13#10#13#10'end;'#13#10#13#10'procedure'
  +' BuildNamespaceUnit(RunMode,NameSpace:String; Compiler:TObject);'#13#10'var'
  +#13#10'    UnitCode:TStringList;'#13#10'    n:integer;'#13#10'    procedure '
  +'AddUnitCodeLine(str:String);'#13#10'    begin'#13#10'      UnitCode.add(str'
  +');'#13#10'    end;'#13#10#13#10'begin'#13#10#13#10'  // create a pas file o'
  +'n disk for each unit, and insert the unit name for the dll ''uses'' clause'
  +#13#10'  {$ifdef JScript}'#13#10'  NamespaceUnits.Add(NameSpace);'#13#10'  {'
  +'$endif}'#13#10#13#10'  n:=0;'#13#10'  UnitCode:=TStringList.Create;'#13#10
  +#13#10'           // Unit code is built from separate attributes : Code, Ini'
  +'t.'#13#10'           UnitCode.Clear;'#13#10'           AddUnitCodeLine(''un'
  +'it ''+NameSpace+'';'');'#13#10'           AddUnitCodeLine(''{$ifndef JScrip'
  +'t}'');'#13#10'           AddUnitCodeLine(''{$mode objfpc}{$H+}'');'#13#10' '
  +'          AddUnitCodeLine(''{$endif}'');'#13#10'           AddUnitCodeLine('
  +'''interface'');'#13#10'           AddUnitCodeLine(''uses Classes, SysUtils,'
  +' Math, contnrs, dateutils,'');'#13#10'           AddUnitCodeLine(''  rtlcon'
  +'sts, strutils, types, typinfo, EventsInterface,'');'#13#10'           if Ru'
  +'nMode=''LazDll'' then'#13#10'             AddUnitCodeLine(''  InterfaceType'
  +'sDll;'')'#13#10'           else'#13#10'           begin'#13#10'            '
  +' AddUnitCodeLine(''  InterfaceTypes;'');'#13#10'           end;'#13#10#13#10
  +'           GatherEventHeaders(RunMode,NameSpace,SystemNodeTree,UnitCode,n);'
  +#13#10#13#10'           AddUnitCodeLine(''implementation'');'#13#10#13#10'  '
  +'         GatherUserFuncs(RunMode,NameSpace,Compiler,CodeRootNode,UnitCode,n'
  +');'#13#10#13#10'           GatherEventCode(RunMode,NameSpace,Compiler,Syste'
  +'mNodeTree,UnitCode);'#13#10#13#10'           AddUnitCodeLine(''    '' );'#13
  +#10'           AddUnitCodeLine(''begin'');'#13#10'           AddUnitCodeLine'
  +'(''end.'');'#13#10#13#10'           if n>0 then'#13#10'           begin'#13
  +#10'             {$ifndef JScript}'#13#10'             // save the generated'
  +' pas file'#13#10'             //!!!! namespaces....255 char limit on file n'
  +'ames !!!!!!!!!'#13#10'             SysUtils.DeleteFile(''tempinc/''+NameSpa'
  +'ce+''.pas'');'#13#10'             UnitCode.SaveToFile(''tempinc/''+NameSpac'
  +'e+''.pas'');'#13#10'             {$else}'#13#10'             TPas2JSWebComp'
  +'iler(Compiler).WebFS.SetFileContent(NameSpace+''.pas'',UnitCode.Text);'#13
  +#10'             {$endif}'#13#10#13#10'             // add this unit to the '
  +'uses list in the main module'#13#10'             PascalCode.Add('',''+NameS'
  +'pace);'#13#10#13#10'           end;'#13#10#13#10'  // Build a separate unit'
  +' to hold ''event'' code for worker threads (within TXThreads components)'#13
  +#10'  // This code is in a separate unit from the main event code so that th'
  +'e scope of worker threads'#13#10'  // can be limited (they are self-contain'
  +'ed, with no access to data/functions in the main thread).'#13#10'  //BuildT'
  +'hreadEventsUnit(Compiler,RunMode);'#13#10#13#10'  FreeAndNil(UnitCode);'#13
  +#10#13#10'end;'#13#10#13#10'function ConstructNamespaceUnits(RunMode,NameSpa'
  +'ce:String; Compiler:TObject; StartNode:TDataNode):String;'#13#10'var'#13#10
  +'    i:integer;'#13#10'    CompositeNameSpace:String;'#13#10'begin'#13#10'  '
  +'// Where a system node is an encapsulated sub-system, the child nodes will '
  +'have a non-blank NamesSpace value.'#13#10'  // For all ''namespace'' nodes,'
  +' construct a separate unit to contain user functions and event code local t'
  +'o the namespace group.'#13#10'  CompositeNameSpace:=NameSpace;'#13#10'  if '
  +'StartNode.NodeType=''TXComposite'' then'#13#10'  begin'#13#10'    Composite'
  +'NameSpace:=CompositeNameSpace+StartNode.NodeName;'#13#10'    if length(Star'
  +'tNode.ChildNodes)>0 then'#13#10'      BuildNamespaceUnit(RunMode,CompositeN'
  +'ameSpace,Compiler);'#13#10'  end;'#13#10#13#10'  // Walk the system tree lo'
  +'oking for namespace components'#13#10'  for i:=0 to length(StartNode.ChildN'
  +'odes)-1 do'#13#10'    if (StartNode.ChildNodes[i].NodeClass=''UI'')'#13#10
  +'    or (StartNode.ChildNodes[i].NodeClass=''Root'') then'#13#10'      Const'
  +'ructNamespaceUnits(RunMode,CompositeNameSpace,Compiler,StartNode.ChildNodes'
  +'[i]);'#13#10#13#10'end;'#13#10#13#10'{$ifdef Python}'#13#10'procedure TPyPr'
  +'ocs.GatherAndRunPythonScripts(dummy:PtrInt);'#13#10'var'#13#10'    ok:Boole'
  +'an;'#13#10'    i,j:integer;'#13#10'    tmp,nm:string;'#13#10'    lines:TStr'
  +'ingList;'#13#10'    UnitNode:TdataNode;'#13#10'    PyCode:TStringList;'#13
  +#10'    procedure AddUnitCodeLine(str:String);'#13#10'    begin'#13#10'     '
  ,' PyCode.add(str);'#13#10'    end;'#13#10#13#10'begin'#13#10'  ok:=true;'#13
  +#10'  // user-created scripts are held as data nodes (class ''Code'', type '
  +'''PythonScript'')'#13#10'  // create a pas file on disk for each unit, and '
  +'insert the unit name for the dll ''uses'' clause'#13#10'  Lines:=TStringLis'
  +'t.Create;'#13#10'  PyCode:=TStringList.Create;'#13#10#13#10'  for i:=0 to l'
  +'ength(CodeRootNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    PyCode.Clear;'
  +#13#10'    if CodeRootNode.ChildNodes[i].NodeType=''PythonScript'' then'#13
  +#10'    begin'#13#10'       UnitNode:=CodeRootNode.ChildNodes[i];'#13#10'   '
  +'    // code is all in attribute : Code'#13#10'       nm:=UnitNode.NodeName;'
  +#13#10#13#10'       // add user-written unit code block'#13#10'       tmp:=U'
  +'nitNode.GetAttribute(''Code'',true).AttribValue;'#13#10'       Lines:=Strin'
  +'gSplit(tmp,LineEnding);'#13#10'       for j:=0 to Lines.Count-1 do'#13#10' '
  +'        AddUnitCodeLine(Lines[j]);'#13#10'    end;'#13#10#13#10'    if PyCo'
  +'de.Count>0 then'#13#10'    begin'#13#10'      {$ifndef JScript}'#13#10'    '
  +'  try'#13#10'      PythonEngine1.ExecStrings( PyCode );'#13#10'      except'
  +#13#10'        on E: Exception do'#13#10'        begin'#13#10'          show'
  +'message(''Python error in ''+nm+'' : ''+e.Message);'#13#10'        end;'#13
  +#10'      end;'#13#10'      {$else}'#13#10'      tmp:=PyCode.Text;'#13#10'  '
  +'    asm'#13#10'      console.log(''running python user code ''+nm);'#13#10
  +'      end;'#13#10'      asm'#13#10'      try {'#13#10'      pyodide.runPyth'
  +'on(tmp);'#13#10'      } catch(err) { alert(err.message+''  in ''+nm); }'#13
  +#10'      end;'#13#10'      {$endif}'#13#10'    end;'#13#10'  end;'#13#10#13
  +#10'  FreeAndNil(PyCode);'#13#10'  FreeAndNil(Lines);'#13#10'end;'#13#10'{$i'
  +'fndef JScript}'#13#10'procedure GatherAndRunPythonScriptsLater;'#13#10'var'
  +#13#10'  QueueRecToSend: PPyXQueueRec;'#13#10'begin'#13#10'  New(QueueRecToS'
  +'end);'#13#10'  Application.QueueAsyncCall(@PyProcs.GatherAndRunPythonScript'
  +'s,PtrInt(QueueRecToSend)); // put msg into queue that will be processed fro'
  +'m the main thread after all other messages'#13#10'end;'#13#10'{$endif}'#13
  +#10'{$endif}'#13#10#13#10'{$ifndef JScript}'#13#10#13#10'procedure WriteProj'
  +'ectIncFiles;'#13#10'begin'#13#10'  WriteRTLIncFile(''resources/xcomponents/'
  +''',''eventsinterface'');'#13#10'  WriteRTLIncFile(''resources/project/'','''
  +'interfacetypes'');'#13#10#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'fun'
  +'ction initialiseCodeToBeCompiled(RunMode:String; Compiler:TObject):String; '
  +'   //RunMode is LazJS, LazDll or JSJS'#13#10'var'#13#10'    tmp,FirstUnitNa'
  +'me:String;'#13#10'    i,n:integer;'#13#10'begin'#13#10' // delete old .inc '
  +'and .pas files'#13#10'  {$ifndef JScript}'#13#10' DeleteDynamicIncFiles;'#13
  +#10'  WriteRTLIncFiles;'#13#10'  WriteProjectIncFiles;'#13#10'  {$endif}'#13
  +#10' PascalCode.Clear;'#13#10' ExportsList.Clear;'#13#10' n:=0;'#13#10' setl'
  +'ength(XIDEProcsList,0);'#13#10#13#10' if (RunMode = ''LazJS'') or (RunMode '
  +'= ''JSJS'') then'#13#10' begin'#13#10'   // Build pascal source code for ev'
  +'ents unit - to be compiled by the Pas2JS compiler'#13#10'   PascalCode.Add('
  +'''unit ''+DllName+'';'' );'#13#10'   PascalCode.Add(''interface'' );'#13#10
  +'   PascalCode.Add(''    '' );'#13#10'   PascalCode.Add(''uses'');'#13#10'  '
  +' PascalCode.Add(''  Classes, SysUtils, Math, EventsInterface, InterfaceType'
  +'s, '');  //!!!! make uses clause editable ??'#13#10'   PascalCode.Add(''  c'
  +'ontnrs, dateutils, rtlconsts, {rtti,} strutils, types, typinfo'');'#13#10#13
  +#10'   FirstUnitName:=GatherUserUnits(RunMode,Compiler);'#13#10'   Construct'
  +'NamespaceUnits(RunMode,'''',Compiler,UIRootItem);'#13#10'   PascalCode.Add('
  +''';'');'#13#10'   PascalCode.Add('''');'#13#10#13#10'   GatherEventHeaders('
  +'RunMode,'''',SystemNodeTree,PascalCode,n);'#13#10#13#10'   PascalCode.Add('
  +''''');'#13#10'   PascalCode.Add(''implementation'' );'#13#10'   PascalCode.'
  +'Add('''');'#13#10'   GatherUserFuncs(RunMode,'''',Compiler,CodeRootNode,Pas'
  +'calCode,n);'#13#10#13#10'   GatherEventCode(RunMode,'''',Compiler,SystemNod'
  +'eTree,PascalCode);'#13#10#13#10'   PascalCode.Add(''    '' );'#13#10'   Pas'
  +'calCode.Add(''begin'');'#13#10'   PascalCode.Add(''end.'');'#13#10' end'#13
  +#10' else if RunMode = ''LazDll'' then'#13#10' begin'#13#10'   // Build sour'
  +'ce code for events DLL - to be compiled by the Free Pascal compiler'#13#10
  +'   PascalCode.Add(''library ''+DllName+'';'' );'#13#10'   PascalCode.Add('''
  +'{$mode objfpc}{$H+}{$R+}'');'#13#10'   PascalCode.Add( ''    '' );'#13#10' '
  +'  PascalCode.Add(''uses'');'#13#10'   //windows, ??'#13#10'   {$ifdef linux'
  +'}'#13#10'   PascalCode.Add(''  cthreads,'');'#13#10'   {$endif}'#13#10'   P'
  +'ascalCode.Add(''  Classes, SysUtils, Math, {initc,} EventsInterface, Interf'
  +'aceTypesDll '');'#13#10'   FirstUnitName:=GatherUserUnits(RunMode,nil);'#13
  +#10'   ConstructNamespaceUnits(RunMode,'''',nil,SystemNodeTree);'#13#10'   P'
  ,'ascalCode.Add('';'');'#13#10'   PascalCode.Add('''');'#13#10'   PascalCode.'
  +'Add('''');'#13#10#13#10'   GatherUserFuncs(RunMode,'''',nil,CodeRootNode,Pa'
  +'scalCode,n);'#13#10#13#10'   GatherEventCode(RunMode,'''',nil,SystemNodeTre'
  +'e,PascalCode);'#13#10#13#10'   PascalCode.Add( ''    '' );'#13#10'   Pascal'
  +'Code.Add( ''procedure SetDllContext(mmi:IMyMethodInterface); stdcall;'' );'
  +#13#10'   PascalCode.Add( ''begin'' );'#13#10'   PascalCode.Add( ''  Interfa'
  +'ceTypesDll.SetDllContext(mmi);  '' );'#13#10'   PascalCode.Add( ''end;'' );'
  +#13#10'   PascalCode.Add( ''exports SetDllContext;'' );'#13#10'   PascalCode'
  +'.Add( ''    '' );'#13#10'   for i:=0 to ExportsList.Count-1 do'#13#10'     '
  +'PascalCode.Add(ExportsList[i]);'#13#10'   PascalCode.Add( ''    '' );'#13#10
  +'    PascalCode.Add( ''begin'');'#13#10'    PascalCode.Add( ''  '' );'#13#10
  +'    PascalCode.Add( ''end.'');'#13#10' end;'#13#10' result:=FirstUnitName;'
  +#13#10'end;'#13#10#13#10'procedure GatherSourcedAttributes(StartNode:TDataNo'
  +'de);'#13#10'var'#13#10'  i:integer;'#13#10'  CompositeNode:TDataNode;'#13#10
  +'  //TCodeInputRec'#13#10'begin'#13#10'  if StartNode.IsDynamic then'#13#10
  +'  begin'#13#10'    for i:=0 to length(StartNode.NodeAttributes)-1 do'#13#10
  +'    begin'#13#10'      if StartNode.NodeAttributes[i].AttribSource.InputNod'
  +'eName<>'''' then'#13#10'      begin'#13#10'        setlength(SourcedAttribs'
  +',length(SourcedAttribs)+1);'#13#10'        SourcedAttribs[length(SourcedAtt'
  +'ribs)-1].TheAttribute:=StartNode.NodeAttributes[i];'#13#10'        SourcedA'
  +'ttribs[length(SourcedAttribs)-1].TheNode:=StartNode;'#13#10'        Sourced'
  +'Attribs[length(SourcedAttribs)-1].InProgress:=false;'#13#10'        Sourced'
  +'Attribs[length(SourcedAttribs)-1].SourceNode:=FindDataNodeById(SystemNodeTr'
  +'ee,StartNode.NodeAttributes[i].AttribSource.InputNodeName,'#13#10'         '
  +'                                                                     StartN'
  +'ode.NameSpace,true);'#13#10'      end;'#13#10'    end;'#13#10'    // if thi'
  +'s node is a TXCompositeIntf (composite interface element) then each of its '
  +'non-default attributes'#13#10'    // will need to be set up with values sou'
  +'rced from the element container (type TXComposite).'#13#10'    if StartNode'
  +'.NodeType=''TXCompositeIntf'' then'#13#10'    begin'#13#10'      CompositeN'
  +'ode:=FindCompositeContainer(StartNode);'#13#10'      if CompositeNode<>nil '
  +'then'#13#10'      for i:=0 to length(StartNode.NodeAttributes)-1 do'#13#10
  +'        if (not IsADefaultAttrib(''TXCompositeIntf'',StartNode.NodeAttribut'
  +'es[i].AttribName)) then'#13#10'        begin'#13#10'          setlength(Sou'
  +'rcedAttribs,length(SourcedAttribs)+1);'#13#10'          SourcedAttribs[leng'
  +'th(SourcedAttribs)-1].TheAttribute:=StartNode.NodeAttributes[i];'#13#10'   '
  +'       SourcedAttribs[length(SourcedAttribs)-1].TheNode:=StartNode;'#13#10
  +'          SourcedAttribs[length(SourcedAttribs)-1].InProgress:=false;'#13#10
  +'          SourcedAttribs[length(SourcedAttribs)-1].SourceNode:=FindComposit'
  +'eContainer(StartNode);'#13#10'          SourcedAttribs[length(SourcedAttrib'
  +'s)-1].TheAttribute.AttribSource.InputAttribName:=StartNode.NodeAttributes[i'
  +'].AttribName;'#13#10'          SourcedAttribs[length(SourcedAttribs)-1].The'
  +'Attribute.AttribSource.InputNodeName:=CompositeNode.NodeName;'#13#10'      '
  +'  end;'#13#10'    end;'#13#10'    // if this node is a TXComposite (composi'
  +'te element) then each of its non-default attributes'#13#10'    // will need'
  +' to be set up with values sourced from an interface element internal to the'
  +' composite (type TXCompositeIntf).'#13#10'    if StartNode.NodeType=''TXCom'
  +'posite'' then'#13#10'    begin'#13#10'      for i:=0 to length(StartNode.No'
  +'deAttributes)-1 do'#13#10'      begin'#13#10'        if (not IsADefaultAttr'
  +'ib(''TXComposite'',StartNode.NodeAttributes[i].AttribName))'#13#10'        '
  +'and (StartNode.NodeAttributes[i].AttribSource.InputAttribName='''') then   '
  +' // don''t do this if there is already an explicit source'#13#10'        be'
  +'gin'#13#10'          CompositeNode:=FindInterfaceNode(StartNode,StartNode.N'
  +'odeName,StartNode.NodeAttributes[i].AttribName);'#13#10'          if Compos'
  +'iteNode<>nil then'#13#10'          begin'#13#10'            setlength(Sourc'
  +'edAttribs,length(SourcedAttribs)+1);'#13#10'            SourcedAttribs[leng'
  +'th(SourcedAttribs)-1].TheAttribute:=StartNode.NodeAttributes[i];'#13#10'   '
  +'         SourcedAttribs[length(SourcedAttribs)-1].TheNode:=StartNode;'#13#10
  +'            SourcedAttribs[length(SourcedAttribs)-1].InProgress:=false;'#13
  +#10'            SourcedAttribs[length(SourcedAttribs)-1].SourceNode:=FindInt'
  +'erfaceNode(StartNode,StartNode.NodeName,StartNode.NodeAttributes[i].AttribN'
  +'ame);'#13#10'            SourcedAttribs[length(SourcedAttribs)-1].TheAttrib'
  +'ute.AttribSource.InputAttribName:=StartNode.NodeAttributes[i].AttribName;'
  +#13#10'            SourcedAttribs[length(SourcedAttribs)-1].TheAttribute.Att'
  ,'ribSource.InputNodeName:=CompositeNode.NodeName;'#13#10'          end;'#13
  +#10'        end;'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'  fo'
  +'r i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    Gathe'
  +'rSourcedAttributes(StartNode.ChildNodes[i]);'#13#10'  end;'#13#10'end;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'function DefaultFPCConfig:String;'#13#10
  +'var'#13#10'  cfg:String;'#13#10'begin'#13#10#13#10'  //cfg.Add(''resources/'
  +'xcomponents'');       // Location of the units of the XComponents package'
  +#13#10'  {$ifdef windows}'#13#10'  cfg:=''C:/fpcupdeluxe/fpc/bin/i386-win32'
  +''';   // Location of Lazarus installation (needed for Free Pascal compilati'
  +'on of user events dll)'#13#10'  {$endif}'#13#10'  {$ifdef linux}'#13#10'  c'
  +'fg:=''/home/pi/fpcupdeluxe/fpc/bin/arm-linux'';'#13#10'  {$endif}'#13#10'  '
  +'result:=cfg;'#13#10#13#10'end;'#13#10#13#10'function CompileEventCode(MyCod'
  +'eEditor:TXCode; RunMode:String):Boolean;'#13#10'var'#13#10'   TheStream : T'
  +'FileStream;'#13#10'   Lines, ExtraDirectives:TStringList;'#13#10'   PASFile'
  +'Name:string;'#13#10'   DLLFileName:string;'#13#10'   ProgPath:String;'#13#10
  +'   i:integer;'#13#10'   FoundError,FoundFatal:Boolean;'#13#10'begin'#13#10
  +'  Screen.Cursor := crHourglass;'#13#10#13#10'  ExtraDirectives:=TStringList'
  +'.Create;'#13#10#13#10'  ProgPath:=ExtractFilePath(Application.ExeName);'#13
  +#10'  XIDEProjectDir:=ProgPath;'#13#10#13#10'  Lines:=TStringList.Create;'#13
  +#10'  DllName:=MainUnitName+''Events'';'#13#10#13#10'  // clean up from prev'
  +'ious runs'#13#10'  MyCodeEditor.MessageLines:='''';'#13#10#13#10'  PASFileN'
  +'ame:= DllName+''.pas'';'#13#10'  SysUtils.DeleteFile(''resources/project/'''
  +'+PASFileName);'#13#10'  SysUtils.DeleteFile(''resources/project/''+DllName+'
  +'''.o'');'#13#10#13#10'  InitialiseCodeToBeCompiled(RunMode,nil);'#13#10'  M'
  +'yCodeEditor.ItemValue:=PascalCode.Text;'#13#10'  // save the text to be com'
  +'piled to the .pas file'#13#10'  MyCodeEditor.TheEditor.Lines.SaveToFile(''r'
  +'esources/project/''+PASFileName);'#13#10#13#10'  if RunMode = ''LazJS'' the'
  +'n'#13#10'  begin'#13#10'    // run the pas2js compiler just for the events '
  +'unit to check for errors'#13#10'    {$ifdef Python}'#13#10'    ExtraDirecti'
  +'ves.add(''-dPython'');'#13#10'    {$endif}'#13#10'    TranspileMyProgram(Dl'
  +'lName,ProgPath,''resources/project/'',MyCodeEditor,false,ExtraDirectives);'
  +#13#10'    // retrieve the list of functions to be shown under the code tree'
  +#13#10'    RebuildCodeTree;  //xpparser.XIDEProcsList;'#13#10'  end'#13#10#13
  +#10'  else if RunMode = ''LazDll'' then'#13#10'  begin'#13#10'    // run the'
  +' free pascal compiler (FPC) to create the dll'#13#10'    // (from http://wi'
  +'ki.freepascal.org/Executing_External_Programs#TProcess)'#13#10#13#10'    DL'
  +'LFileName:= DllName+''.''+SharedSuffix;'#13#10'    {$ifdef linux}'#13#10'  '
  +'  DLLFileName:=''lib''+DLLFileName;'#13#10'    {$endif}'#13#10'    SysUtils'
  +'.DeleteFile(''resources/project/''+DLLFileName);'#13#10'    SysUtils.Delete'
  +'File(''fpcerrors.txt'');'#13#10'    SysUtils.DeleteFile(''fpcdebug.txt'');'
  +#13#10#13#10'    //Unload the lib, if already loaded'#13#10'    if MyLibC <>'
  +'  DynLibs.NilHandle then'#13#10'      if FreeLibrary(MyLibC) then'#13#10'  '
  +'      MyLibC:= DynLibs.NilHandle;'#13#10#13#10'    // create the TProcess o'
  +'bject'#13#10'    AProcess := TProcess.Create(nil);'#13#10#13#10'    // Tell'
  +' the new AProcess what the command to execute is.'#13#10'    // Use the Fre'
  +'e Pascal compiler'#13#10'    AProcess.Executable:= ConfigfpcPath+''/fpc'';'
  +#13#10#13#10'    // add parameters'#13#10'    AProcess.Parameters.Add(''@''+'
  +'ConfigfpcPath+''/fpc.cfg'');'#13#10#13#10'    AProcess.Parameters.Add(''res'
  +'ources/project/''+PASFileName);'#13#10'    AProcess.Parameters.Add(''-Fu./r'
  +'esources/xcomponents'');      // for EventsInterface.pas'#13#10'    AProces'
  +'s.Parameters.Add(''-Fu./tempinc'');'#13#10'    AProcess.Parameters.Add(''-F'
  +'i./tempinc'');'#13#10'    AProcess.Parameters.Add(''-Fefpcerrors.txt'');'#13
  +#10'    AProcess.Parameters.Add(''-dDll'');'#13#10'    AProcess.Parameters.A'
  +'dd(''-gl'');'#13#10'    //AProcess.Parameters.Add(''-debug-log=DllDebugLog.'
  +'log'');'#13#10'    AProcess.Parameters.Add(''-vewilv'');              //ver'
  +'bose     //v: writes to fpcdebug.txt'#13#10'    AProcess.Parameters.Add(''-'
  +'Xg'');              //debugging    //compiler debugging'#13#10'    AProcess'
  +'.Parameters.Add(''-B'');                //build all units'#13#10'    AProce'
  +'ss.Parameters.Add(''-Cr'');               //range checking'#13#10'//    APr'
  +'ocess.Parameters.Add(''-k -R ./'');               //pass to linker'#13#10' '
  +'   //AProcess.Parameters.Add(''-gw'');'#13#10#13#10'    {$ifdef linux}'#13
  +#10'    AProcess.Parameters.Add(''-fPIC'');              // Generate PIC cod'
  +'e'#13#10'    {$endif}'#13#10#13#10'    // We will define an option for when'
  +' the program'#13#10'    // is run. This option will make sure that our prog'
  ,'ram'#13#10'    // does not continue until the program we will launch'#13#10
  +'    // has stopped running.'#13#10'    // see for bug fix ..... http://wiki'
  +'.freepascal.org/Executing_External_Programs#Reading_large_output'#13#10'   '
  +' //AProcess.Options := AProcess.Options + [poWaitOnExit, poUsePipes, poNoCo'
  +'nsole];'#13#10'    //AProcess.Options := AProcess.Options + [poWaitOnExit, '
  +'poUsePipes, poNewConsole];'#13#10'    AProcess.Options := AProcess.Options '
  +'+ [poWaitOnExit, poUsePipes];'#13#10#13#10'    Lines.clear;'#13#10'    // N'
  +'ow let AProcess run the program'#13#10'    try'#13#10'      try'#13#10'    '
  +'  AProcess.Execute;'#13#10'      except'#13#10'        on E:Exception do'#13
  +#10'        begin'#13#10'          showmessage(''Unable to execute process f'
  +'pc.exe.  Check Run Settings. ''+e.Message);'#13#10'          MyCodeEditor.M'
  +'essageLines:=''Error: Unable to execute process fpc.exe.  Check Run Setting'
  +'s. ''+e.Message;'#13#10'        end;'#13#10'      end;'#13#10'    finally'
  +#13#10'      // Now read the output of fpc into a memo'#13#10'      if FileE'
  +'xists(''fpcerrors.txt'') then'#13#10'      begin'#13#10'        Lines.LoadF'
  +'romFile(''fpcerrors.txt'');'#13#10'        MyCodeEditor.MessageLines:=Lines'
  +'.Text;'#13#10'      end'#13#10'      else'#13#10'      begin'#13#10'       '
  +' MyCodeEditor.MessageLines:=''Error: Cannot find fpc output file fpcerrors.'
  +'txt.  Check Run Settings.'';'#13#10'      end;'#13#10'    end;'#13#10'    /'
  +'/ This is not reached until process stops running.'#13#10'    AProcess.Free'
  +';'#13#10'  end;'#13#10#13#10'  // check messages for errors'#13#10'  FoundE'
  +'rror:=false;'#13#10'  FoundFatal:=false;'#13#10'  i:=0;'#13#10'  while (i<M'
  +'yCodeEditor.TheMessages.lines.Count)'#13#10'  and (FoundError=false)'#13#10
  +'  and (FoundFatal=false) do'#13#10'  begin'#13#10'    MyCodeEditor.GetMessa'
  +'ge(FoundError,MyCodeEditor.TheMessages.lines[i],''Error:'');'#13#10'    MyC'
  +'odeEditor.GetMessage(FoundFatal,MyCodeEditor.TheMessages.lines[i],''Fatal:'
  +''');'#13#10'    i:=i+1;'#13#10'  end;'#13#10#13#10'  // does the compiled f'
  +'ile exist?'#13#10'  if (RunMode = ''LazDll'')'#13#10'  and (not FileExists('
  +'''resources/project/''+DLLFileName)) then'#13#10'    FoundError:=true;'#13
  +#10#13#10'  Lines.Free;'#13#10'  ExtraDirectives.Free;'#13#10'  Screen.Curso'
  +'r := crDefault;'#13#10#13#10'  if (FoundError) or (FoundFatal) then'#13#10
  +'    result:=false'#13#10'  else'#13#10'    result:=true;'#13#10#13#10'end;'
  +#13#10#13#10#13#10'{$else}'#13#10#13#10'function ExtractModuleName(instr:Str'
  +'ing):String;'#13#10'var'#13#10'  k:integer;'#13#10'  found:boolean;'#13#10
  +'  modname:String;'#13#10'begin'#13#10'  found:=false;'#13#10'  k:=1;'#13#10
  +'  while k< length(instr) do'#13#10'  begin'#13#10'    if instr[k]=''"'' the'
  +'n'#13#10'    begin'#13#10'      if found then'#13#10'        k:=length(inSt'
  +'r)'#13#10'      else'#13#10'        found:=true;'#13#10'    end'#13#10'    '
  +'else if found then'#13#10'      modname:=modname+instr[k];'#13#10'    k:=k+'
  +'1;'#13#10'  end;'#13#10'  //showmessage(''found name ''+modname);'#13#10'  '
  +'result:=modname;'#13#10'end;'#13#10#13#10'function LocateNextModule(var inL'
  +'ines:TStringList):integer;'#13#10'var'#13#10'  i,j,k:integer;'#13#10'  modn'
  +'ame,tmp:String;'#13#10'begin'#13#10'  result:=-1;'#13#10'  tmp:=inLines.Tex'
  +'t;'#13#10'  //asm alert(''start of locate...''+tmp); end;'#13#10'  i:=0;'#13
  +#10'  j:=0;'#13#10'  while i < inLines.Count do'#13#10'  begin'#13#10'    j:'
  +'=FoundString(inLines[i],''rtl.module("'');'#13#10'    if j > 0 then'#13#10
  +'    begin'#13#10'      //showmessage(''found ''+inLines[i]);'#13#10'      r'
  +'esult:=i;'#13#10'      i:=inLines.Count;'#13#10'    end;'#13#10'    i:=i+1;'
  +#13#10'  end;'#13#10'  //showmessage(''linenum=''+inttostr(result)+'' line i'
  +'s ''+inLines[result]);'#13#10'end;'#13#10#13#10'function CompileEventCode(M'
  +'yCodeEditor:TXCode; RunMode:String):Boolean;'#13#10'var'#13#10'  tmp,FirstU'
  +'nitName,CurrentUnitName:String;'#13#10'  ok:Boolean;'#13#10'  i,j:integer;'
  +#13#10'  args,JSOutputLines,JSKeep : TStringList;'#13#10'  Res,PasModuleExis'
  +'ts : Boolean;'#13#10'  lWebFS : TPas2JSWebFS;'#13#10'  NSUnits:array of Str'
  +'ing;'#13#10'begin'#13#10'  NamespaceUnits.Clear;'#13#10#13#10'  MyWebCompil'
  +'er.mycodeeditor:=MyCodeEditor;'#13#10'  DllName:=MainUnitName+''Events'';'
  +#13#10'  //showmessage(''CompileEventCode ''+RunMode);'#13#10'  // clean up '
  +'from previous runs'#13#10'  MyCodeEditor.MessageLines:='''';'#13#10#13#10' '
  +' //.....Run the compiler .......'#13#10#13#10'  //showmessage(''CompileEven'
  +'tCode. starting compile section...'');'#13#10#13#10'    MyWebCompiler.Compi'
  +'ler.Log.OnLog:=@MyWebCompiler.DoLog;'#13#10#13#10'    MyWebCompiler.Compile'
  +'r.WebFS.LoadBaseURL:='''';'#13#10#13#10'    FirstUnitName:=InitialiseCodeTo'
  +'BeCompiled(RunMode,MyWebCompiler.Compiler); // populates PascalCode stringl'
  +'ist, and builds user units'#13#10'    //showmessage(''FirstUnitName=''+Firs'
  ,'tUnitName);'#13#10'    MyCodeEditor.ItemValue:=PascalCode.Text;'#13#10#13#10
  +'    Res:=False;'#13#10#13#10'    lWebFS:=MyWebCompiler.Compiler.WebFS;'#13
  +#10'    // Load up the RTL sources that are required for the compilation... '
  +'   //!!!! maybe do this only once??'#13#10'    asm'#13#10'    lWebFS.SetFil'
  +'eContent(''eventsinterface.pas'',pas.CompileUserCode.eventsinterfacepas);'
  +#13#10'    lWebFS.SetFileContent(''interfacetypes.pas'',pas.CompileUserCode.'
  +'interfacetypespas);'#13#10'    end;'#13#10'    LoadRTLFilesForPas2JS(lWebFS'
  +');'#13#10#13#10'    // Load up the main .pas file'#13#10'    lWebFS.SetFile'
  +'Content(DllName+''.pas'',PascalCode.Text);'#13#10#13#10'    args:=TStringLi'
  +'st.Create;'#13#10'    try'#13#10'      //Args.Add(-Jeutf-8);      //  encod'
  +'e messages as:  Unicode UTF-8. Default when using -Fe.'#13#10'      //-Jmin'
  +'clude               //  include Pascal sources in source map.'#13#10'//    '
  +'  Args.Add(''-Tbrowser'');   //  Set target platform'#13#10'    // -Tnodejs'
  +#13#10'      Args.Add(''-vwnhe'');'#13#10'      Args.Add(''-O-'');          '
  +' //  Disable optimizations'#13#10'      Args.Add(''-Jc'');           //  Wr'
  +'ite all JavaScript concatenated into the output file'#13#10'      //      A'
  +'rgs.Add(''-Jirtl.js'');   //  Insert JS file <x> into main JS file.'#13#10
  +'      Args.Add(''-Jirtl.js-'');         //  Remove a JS file.'#13#10'      '
  +'Args.Add(''-dJScript'');'#13#10'      Args.Add(''-B'');                //bu'
  +'ild all units'#13#10'// -Pecmascript5     // Set target processor.'#13#10'/'
  +'/ -MobjFPC  // FPC''s Object Pascal compatibility mode (default)'#13#10'// '
  +'-Sc      // Support operators like C (*=,+=,/= and -=)'#13#10'// -Ju<x> : A'
  +'dd <x> to foreign unit paths. Foreign units are not compiled.'#13#10'      '
  +'Args.Add(DllName+''.pas'');'#13#10#13#10'      //..........................'
  +'..............................'#13#10'      MyWebCompiler.Compiler.Run('''''
  +','''',Args,True);'#13#10'      Res:=MyWebCompiler.Compiler.ExitCode=0;'#13
  +#10'      //........................................................'#13#10
  +#13#10'    finally'#13#10'     Args.Free;'#13#10'    end;'#13#10#13#10'    /'
  +'/EditAttributeValue(''XMemo2'','''',''ItemValue'',PascalCode.Text);        '
  +'//!!!! temporary for debugging'#13#10#13#10'    if res=true then'#13#10'   '
  +' begin'#13#10'      //showmessage(''compiler all done - success'');'#13#10
  +#13#10'    // First De-register the events unit, plus any other user units u'
  +'sed'#13#10'    SetLength(NSUnits,NamespaceUnits.Count);'#13#10'    for i:=0'
  +' to NamespaceUnits.Count-1 do'#13#10'    begin'#13#10'      NSUnits[i]:=Nam'
  +'espaceUnits[i];'#13#10'    end;'#13#10'    asm'#13#10'    try {'#13#10'    '
  +'  var hd=document.head;'#13#10'      var div=document.getElementById(''User'
  +'EventCodeContainer'');'#13#10'      if (div==null) {'#13#10'         div=do'
  +'cument.createElement(''div'');'#13#10'         div.id=''UserEventCodeContai'
  +'ner'';'#13#10'         hd.appendChild(div);'#13#10'         }'#13#10'      '
  +'div.innerHTML='''';'#13#10#13#10'      // remove the prior registration of '
  +'this module...'#13#10'      if (pas[pas.Events.DllName]) {'#13#10'        p'
  +'as[pas.Events.DllName]=null;'#13#10'        // and any user units ....'#13
  +#10'        var codeRoot=pas.NodeUtils.CodeRootNode;'#13#10'        for (var'
  +' i=0; i<codeRoot.ChildNodes.length; i++) {'#13#10'             if (codeRoot'
  +'.ChildNodes[i].NodeType==''PasUnit'')'#13#10'                {'#13#10'     '
  +'            //alert(''removing unit ''+codeRoot.ChildNodes[i].NodeName);'#13
  +#10'                 pas[codeRoot.ChildNodes[i].NodeName]=null;'#13#10'     '
  +'            }'#13#10'           }'#13#10'        // and any TXComposite (na'
  +'mespace) units....'#13#10'        for (i=0; i<NSUnits.length; i++) {'#13#10
  +'          pas[NSUnits[i]]=null;'#13#10'        }'#13#10'        // and the '
  +'worker threads unit ....'#13#10'        pas[pas.Events.DllName+''Threads'']'
  +'=null;'#13#10'        }'#13#10'      } catch(err) { alert(err.message + '' '
  +'in CompileEventCode (units de-registration) '');     div.innerHTML=''''; ok'
  +'=false;}'#13#10'     end;'#13#10#13#10#13#10'    // Capture the output from'
  +' the Pas2JS compiler'#13#10'    JSOutput:=MyWebCompiler.Compiler.WebFS.GetF'
  +'ileContent(DllName+''.js'');'#13#10#13#10'    // Delete from the JS file al'
  +'l units that already exist in the main page...'#13#10'    if FirstUnitName='
  +''''' then FirstUnitName:=DllName;'#13#10'    //showmessage(''FirstUnitName='
  +'''+DllName);'#13#10#13#10'    // pas2js has produced a JS output file inclu'
  +'ding all referenced rtl units.'#13#10'    // Chop up the output into separa'
  +'te modules, and retain only those rtl modules'#13#10'    // that are not al'
  +'ready registered...'#13#10'    JSOutputLines:=TStringList.Create;'#13#10'  '
  +'  JSOutputLines.Text:=JSOutput;'#13#10'    JSKeep:=TStringList.Create;'#13
  +#10#13#10'    PasModuleExists:=false;'#13#10#13#10'    CurrentUnitName:=''.'
  ,''';'#13#10'    while (CurrentUnitName<>'''')'#13#10'    and (CurrentUnitNam'
  +'e<>FirstUnitName) do'#13#10'    begin'#13#10'      i:=LocateNexTModule(JSOu'
  +'tputLines);'#13#10'      CurrentUnitName:=ExtractModuleName(JSOutputLines[i'
  +']);'#13#10'      //showmessage(''i=''+inttostr(i)+'' checking module ''+Cur'
  +'rentUnitName);'#13#10'      if (i-1) > 0 then'#13#10'        for j:=0 to i-'
  +'1 do'#13#10'        begin'#13#10'          if PasModuleExists=false then'#13
  +#10'            JSKeep.Add(JSOutputLines[0]);'#13#10'          JSOutputLines'
  +'.Delete(0);'#13#10'        end;'#13#10'      //deal with this module...'#13
  +#10'      if (CurrentUnitName<>FirstUnitName) then'#13#10'      begin'#13#10
  +'        PasModuleExists:=true;'#13#10'        asm'#13#10'        //alert(pa'
  +'s[CurrentUnitName]);'#13#10'          if (pas[CurrentUnitName]==undefined) '
  +'{'#13#10'             PasModuleExists = false;'#13#10'          }'#13#10'  '
  +'      end;'#13#10'        if PasModuleExists = false then'#13#10'        be'
  +'gin'#13#10'          //showmessage(''keeping module ''+CurrentUnitName);'#13
  +#10'          JSKeep.Add(JSOutputLines[0]);'#13#10'        end;'#13#10'     '
  +'   JSOutputLines.Delete(0);'#13#10'      end;'#13#10'      //tmp:=CopyThisM'
  +'odule(JSOutputLines);'#13#10'    end;'#13#10#13#10'    //tmp:=JSKeep.Text;'
  +#13#10'    //asm alert( tmp); end;'#13#10#13#10'    JSOutput:=JSKeep.Text + '
  +'JSOutputLines.Text;'#13#10'    JSOutputLines.Free;'#13#10'    JSKeep.Free;'
  +#13#10'  end;'#13#10#13#10'  //EditAttributeValue(''XMemo1'','''',''ItemValu'
  +'e'',JSOutput);        //!!!! temporary for debugging'#13#10#13#10'  ok:=res'
  +';'#13#10'  if res=true then'#13#10'  begin'#13#10#13#10'    //showmessage('
  +'''Events compilation done.  Output=''+JSOutput);'#13#10#13#10'    // Inject'
  +' the generated JS script'#13#10'     asm'#13#10'      try {'#13#10'        '
  +'//alert(''inject script : ''+ pas.CompileUserCode.JSOutput);'#13#10'       '
  +' var script = document.createElement(''script'');'#13#10'        script.inn'
  +'erHTML = pas.CompileUserCode.JSOutput;'#13#10'        div.appendChild(scrip'
  +'t);'#13#10'      } catch(err) { alert(err.message + '' in CompileEventCode '
  +'(injecting script) '');     div.innerHTML=''''; ok=false;}'#13#10#13#10'   '
  +'   try {'#13#10#13#10'        //alert(''try re-registration...'');'#13#10' '
  +'       // must re-register the events unit and any user units in its uses c'
  +'lause....'#13#10'        var module = pas[pas.Events.DllName];'#13#10'     '
  +'   //alert(''module ''+pas.Events.DllName+''=''+module);'#13#10'        if '
  +'(module!=null) {'#13#10'          rtl.loadintf(module);      // to register'
  +' the new module''s properties'#13#10'          rtl.loadimpl(module);      /'
  +'/ to register the new module''s properties'#13#10'        }'#13#10'        '
  +'else {alert(''Problem encountered with unit registration in rtl'');'#13#10
  +'              ok=false;'#13#10'              }'#13#10'        } catch(err) '
  +'{ alert(err + '' in CompileEventCode (module registration) '');     div.inn'
  +'erHTML=''''; ok=false;}'#13#10'        //} catch(err) { alert(err.name+'' '
  +'''+err.at+'' ''+err.text+'' ''+err.message + '' in CompileEventCode 2 ''); '
  +'    div.innerHTML=''''; ok=false;}'#13#10#13#10'    end;'#13#10'  end;'#13
  +#10#13#10'  // retrieve the list of functions to be shown under the code tre'
  +'e'#13#10'  RebuildCodeTree;  //pparser.XIDEProcsList;'#13#10#13#10'  //....'
  +'decide if there are errors or not .......'#13#10'  if ok=false then showmes'
  +'sage(''Compilation failed'')'#13#10'  else showmessage(''Compilation succes'
  +'sful'');'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10#13#10'{$endif}'#13#10
  +#13#10'function   DfltUnitCode(UnitName,UnitType:String):string;'#13#10'begi'
  +'n'#13#10'  if UnitType=''PasUnit'' then'#13#10'    result:=''unit ''+UnitNa'
  +'me+'';'' + LineEnding'#13#10'          +''{$ifdef Dll}''+ LineEnding'#13#10
  +'          +''{$mode objfpc}{$H+}{$R+}''+ LineEnding'#13#10'          +''{$e'
  +'ndif}''+ LineEnding'#13#10'          + ''interface ''+ LineEnding'#13#10'  '
  +'        + ''uses Classes, Sysutils,''+ LineEnding'#13#10'          + ''   M'
  +'ath, contnrs, dateutils, rtlconsts, {rtti,} strutils, types, typinfo,''+ Li'
  +'neEnding'#13#10'          + ''{$ifdef Dll} InterfaceTypesDll; {$else} Inter'
  +'faceTypes; {$endif} '' + LineEnding'#13#10'          + LineEnding'#13#10'  '
  +'        + ''implementation '' + LineEnding'#13#10'          + '' '' + LineE'
  +'nding'#13#10'          + ''begin'' + LineEnding'#13#10'          + ''// IMP'
  +'ORTANT: do not use any of the XIDE interface functions '' + LineEnding'#13
  +#10'          + ''//(eg. SetPropertyValue etc in unit InterfaceTypesDll) '' '
  +'+ LineEnding'#13#10'          + ''// inside the unit initialization section'
  +'.....errors will occur.'' + LineEnding'#13#10'          + ''end. '''#13#10
  +'  else  if UnitType=''PythonScript'' then'#13#10'    result:=''#Python scri'
  +'pt'''#13#10'  else  if UnitType=''Function'' then'#13#10'    result:=''// D'
  ,'eclare variables and functions local to this unit...(within implementation '
  +'section)'';'#13#10'end;'#13#10#13#10'function   DfltFunctionCode(FnName:Str'
  +'ing):string;'#13#10'begin'#13#10'  result:= ''begin '' + LineEnding +'#13#10
  +'            ''  result := '''''''';'' + LineEnding +'#13#10'            ''e'
  +'nd;'' + LineEnding;'#13#10'end;'#13#10'function   DfltEventCode:string;'#13
  +#10'begin'#13#10'  result:= ''begin'' + LineEnding +'#13#10'            '' '
  +''' + LineEnding +'#13#10'            ''end;'' + LineEnding;'#13#10'end;'#13
  +#10'function   DfltThreadEventCode(NodeName:String):string;'#13#10'begin'#13
  +#10'  result:= ''begin'' + LineEnding +'#13#10'           ''  with XVars''+N'
  +'odeName+'' do '' + LineEnding +'#13#10'           ''  begin'' + LineEnding '
  +'+'#13#10'           ''  end;'' + LineEnding +'#13#10'           ''end;'' + '
  +'LineEnding;'#13#10'end;'#13#10'function   DfltTreeNodeEventCode:string;'#13
  +#10'begin'#13#10'  result:= ''var'' + LineEnding +'#13#10'          ''  valu'
  +'es:TNodeEventValue;'' + LineEnding +'#13#10'          ''  SourceName,SrcTex'
  +'t,DstText:String;''  + LineEnding +'#13#10'          ''begin'' + LineEnding'
  +' +'#13#10'          ''  values:=TNodeEventValue(e.ValueObject);'' + LineEnd'
  +'ing +'#13#10'          ''  SourceName:=values.SourceName;  // name of tree '
  +'being dragged from'' + LineEnding +'#13#10'          ''  SrcText:=values.Sr'
  +'cText;        // text of treenode being dragged'' + LineEnding +'#13#10'   '
  +'       ''  DstText:=values.DstText;        // text of treenode being dragge'
  +'d over'' + LineEnding +'#13#10'          ''  // set e.ReturnString to "True'
  +'" or "False" '' + LineEnding +'#13#10'          ''  e.ReturnString:=''''Tru'
  +'e'''';'' + LineEnding +'#13#10'          ''end;'' + LineEnding;'#13#10'end;'
  +#13#10'function   DfltPythonCode:string;'#13#10'begin'#13#10'  result:= ''# '
  +'Python script'' + LineEnding;'#13#10'end;'#13#10#13#10'begin'#13#10'  Pasca'
  +'lCode:=TStringList.Create;'#13#10'  ExportsList:=TStringList.Create;'#13#10
  +'  {$ifdef Python}'#13#10'  PyProcs:=TPyProcs.Create;'#13#10'  {$endif}'#13
  +#10'  {$ifndef JScript}'#13#10'  MyLibC := dynlibs.NilHandle;'#13#10'  Confi'
  +'gFPCPath:=DefaultFPCConfig;'#13#10'  LoadFPCConfig;'#13#10'  {$else}'#13#10
  +'  NamespaceUnits:=TStringList.Create;'#13#10'  {$endif}'#13#10'end.'#13#10
  +#13#10#13#10
]);
LazarusResources.Add('propertyeditunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit PropertyEditUnit;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10
  +#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, '
  +'NodeUtils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, G'
  +'raphics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, Grids, TypIn'
  +'fo, LazIDEIntf,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'
  +' StdCtrls,'#13#10'  {$else}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  '
  +'WrapperPanel,XVBox,XScrollBox, XHBox, XTree, XTable,XMemo, XTabControl, XBu'
  +'tton, XLabel,'#13#10'  XEditBox, XCheckBox, XHyperLink, XRadioBtns, XCode, '
  +'XForm, XComboBox,'#13#10'  XColorPicker, CodeEditor, InputSelectUnit,Events'
  +'Interface;'#13#10#13#10'type'#13#10#13#10'  { TPropertyEditForm }'#13#10#13
  +#10'  TPropertyEditForm = class(TXForm)'#13#10'    PropertyEditFormXHBox2: T'
  +'XHBox;'#13#10'    PropertyEditFormXTabControl11: TXTabControl;'#13#10'    P'
  +'ropertyEditSourceHBox: TXHBox;'#13#10'    PropertyEditVBox1: TXVBox;'#13#10
  +'    PropertyEditTabSheet1: TXTabSheet;'#13#10'    PropertyEditTabSheet2: TX'
  +'TabSheet;'#13#10'    PropertyEditTab1VBox1: TXVBox;'#13#10'    PropertyEdit'
  +'Name: TXEditBox;'#13#10'    PropertyEditType: TXEditBox;'#13#10'    Propert'
  +'yEditDoneBtn: TXButton;'#13#10'    PropertyEditCancelBtn: TXButton;'#13#10
  +'    PropertyEditSourceBox: TXEditBox;'#13#10' //   PropertyEditSourceTree: '
  +'TXTree;'#13#10'    PropertyEditSourceBtn: TXButton;'#13#10'    PropertyEdit'
  +'TabSheet3: TXTabSheet;'#13#10'    PropertyEditVBox99: TXVBox;'#13#10'    Pr'
  +'opertyEditLabel: TXLabel;'#13#10'    PropertyEditVBox66: TXVBox;'#13#10'   '
  +' {$ifndef JScript}'#13#10'    procedure FormCreate(Sender: TObject);'#13#10
  +'    procedure FormResize(Sender: TObject);'#13#10'    {$endif}'#13#10'    p'
  +'rocedure PropertyEditCancelBtnHandleButtonClick(e:TEventStatus;nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'    procedure PropertyEditDoneBtnHandl'
  +'eButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'    procedure PropertyEditSourceBtnHandleButtonClick(e:TEventStatus;nodeID:'
  +' AnsiString; myValue: AnsiString);'#13#10'//    procedure PropertyEditSourc'
  +'eTreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'    procedure HandleTreeDataNodeSelect(e:TEventStatus;nodeID:'
  +' AnsiString; myValue: AnsiString);'#13#10'    procedure HandleTreeDataDragS'
  +'tart(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    pr'
  +'ocedure HandleTreeDataDrop(e:TEventStatus;nodeID: AnsiString; myValue: Ansi'
  +'String);'#13#10'    procedure InsertSiblingNode(e:TEventStatus;nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'    procedure InsertChildNode(e:TEvent'
  +'Status;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure Delet'
  +'eTreeNode(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10' '
  +'   procedure CopyTreeNode(e:TEventStatus;nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'    procedure PasteTreeNode(e:TEventStatus;nodeID: AnsiStrin'
  +'g; myValue: AnsiString);'#13#10'    procedure InsertTableRow(e:TEventStatus'
  +';nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure InsertTable'
  +'Column(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    '
  +'procedure DeleteTableRow(e:TEventStatus;nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'    procedure DeleteTableColumn(e:TEventStatus;nodeID: AnsiSt'
  +'ring; myValue: AnsiString);'#13#10'    procedure CopyStringToTable(e:TEvent'
  +'Status;nodeID: AnsiString; myValue: AnsiString);'#13#10#13#10'    procedure'
  +' SetupPages;'#13#10'  private'#13#10#13#10'  public'#13#10'    //myNode:TDa'
  +'taNode;'#13#10'    TargetNode:TDataNode;'#13#10'    EditNode:TDataNode;'#13
  +#10'    TargetAttribute:TNodeAttribute;'#13#10'  end;'#13#10#13#10'var'#13#10
  +'  PropertyEditForm: TPropertyEditForm;'#13#10'  PropertyEditBox:TDataNode;'
  +#13#10'  PropertyEditStatus:String;'#13#10#13#10'  {$ifndef JScript}'#13#10
  +'  CopiedTreeNode:TTreeNode;'#13#10'  {$else}'#13#10'  CopiedTreeNode:String'
  +';'#13#10'  {$endif}'#13#10#13#10'implementation'#13#10'{$R *.lfm}'#13#10'us'
  +'es xobjectinsp;'#13#10#13#10'var'#13#10'  SourceOptionsList:String;'#13#10
  +#13#10'procedure TPropertyEditForm.SetupPages;'#13#10'var'#13#10'  NewEditBo'
  +'x:TXEditBox;'#13#10'  NewCheckBox:TXCheckBox;'#13#10'  NewColorPicker:TXCol'
  +'orPicker;'#13#10'  NewComboBox:TXComboBox;'#13#10'  NewMemo:TXMemo;'#13#10
  +'  NewTree:TXTree;'#13#10'  NewHBox:TXHBox;'#13#10'  NewTable:TXTable;'#13#10
  ,'  NewBtn1,NewBtn2,NewBtn3,NewBtn4,NewBtn5:TXButton;'#13#10'  AttribOptions:'
  +'TStringList;'#13#10'  str:String;'#13#10'begin'#13#10'  PropertyEditStatus:'
  +'=''Cancel'';'#13#10'  InputSelectForm.ExclNodeName:=TargetNode.NodeName;'#13
  +#10'  InputSelectForm.ExclPropertyName:=TargetAttribute.AttribName;'#13#10' '
  +' InputSelectForm.PropType:=TargetAttribute.AttribType;'#13#10#13#10'  Delet'
  +'eNodeChildren(PropertyEditVBox66.myNode);'#13#10#13#10'  self.Caption := '''
  +'Property Editor : ''+TargetNode.Nodename + ''.'' + TargetAttribute.AttribNa'
  +'me;'#13#10'  PropertyEditLabel.LabelCaption:=''Edit the value of property '
  +'''+TargetAttribute.AttribName;'#13#10#13#10'  //Build the necessary widget('
  +'s) for editing the property according to type'#13#10'  if (TargetAttribute.'
  +'AttribType=''String'')'#13#10'  or (TargetAttribute.AttribType=''Integer'')'
  +' then'#13#10'  begin'#13#10'    AttribOptions:=LookupAttribOptions(TargetNo'
  +'de.NodeType,TargetAttribute.AttribName);'#13#10'    if AttribOptions<>nil t'
  +'hen'#13#10'    begin'#13#10'      NewComboBox:=TXComboBox(AddDynamicWidget('
  +'''TXComboBox'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditWid'
  +'get'','''',''Left'',-1).ScreenObject);'#13#10'      //NewComboBox.OptionLis'
  +'t:=StringListToListString(AttribOptions);'#13#10'      NewComboBox.OptionLi'
  +'st:=StringListToJSONString(AttribOptions);'#13#10'      NewComboBox.LabelTe'
  +'xt:='''';'#13#10'      EditNode:=NewComboBox.myNode;'#13#10'      NewComboB'
  +'ox.ItemValue:=TargetAttribute.AttribValue;'#13#10'    end'#13#10'    else'
  +#13#10'    begin'#13#10'       // property Itemvalue in a TXMemo is type Str'
  +'ing, but needs a memo editor'#13#10'      if ((TargetAttribute.AttribName='
  +'''ItemValue'') and (TargetNode.NodeType=''TXMemo''))'#13#10'            or '
  +'((TargetAttribute.AttribName=''MapData'') and (TargetNode.NodeType=''TXBitM'
  +'ap''))'#13#10'            or ((TargetAttribute.AttribName=''MapColors'') an'
  +'d (TargetNode.NodeType=''TXBitMap''))'#13#10'            or ((TargetAttribu'
  +'te.AttribName=''MapPixelArray'') and (TargetNode.NodeType=''TXBitMap''))'#13
  +#10'            or ((TargetAttribute.AttribName=''HTMLSource''))'#13#10'    '
  +'        or ((TargetAttribute.AttribName=''SourceText'') and (TargetNode.Nod'
  +'eType=''TXHTMLText''))'#13#10'            or ((TargetAttribute.AttribName='
  +'''SourceText'') and (TargetNode.NodeType=''TXHTMLEditor''))'#13#10'        '
  +'    or ((TargetAttribute.AttribName=''XMLString'') and (TargetNode.NodeType'
  +'=''TXSVGContainer''))'#13#10'            or ((TargetAttribute.AttribName='''
  +'OptionList''))'#13#10'      then'#13#10'      begin'#13#10'        NewMemo:'
  +'=TXMemo(AddDynamicWidget(''TXMemo'',PropertyEditForm,PropertyEditVBox66.myN'
  +'ode,''PropertyEditWidget'','''',''Left'',-1).ScreenObject);'#13#10'        '
  +'NewMemo.LabelText:='''';'#13#10'        NewMemo.MemoHeight:=''90%'';'#13#10
  +'        NewMemo.MemoWidth:=''95%'';'#13#10'        NewMemo.ItemValue:=Targe'
  +'tAttribute.AttribValue;'#13#10'        EditNode:=NewMemo.myNode;'#13#10'   '
  +'   end'#13#10'      else'#13#10'      begin'#13#10'        // just a short '
  +'string (or number) - EditBox'#13#10'        NewEditBox:=TXEditBox(AddDynami'
  +'cWidget(''TXEditBox'',PropertyEditForm,PropertyEditVBox66.myNode,''Property'
  +'EditWidget'','''',''Left'',-1).ScreenObject);'#13#10'        NewEditBox.Lab'
  +'elText:='''';'#13#10'        EditNode:=NewEditBox.myNode;'#13#10'        Ne'
  +'wEditBox.ItemValue:=TargetAttribute.AttribValue;'#13#10'        NewEditBox.'
  +'BoxWidth:=''90%'';'#13#10'      end;'#13#10'    end;'#13#10'  end'#13#10'  '
  +'else if TargetAttribute.AttribType=''TreeString'' then'#13#10'  // property'
  +' TreeData is type String, but needs a special editor'#13#10'  begin'#13#10
  +'     NewTree:=TXTree(AddDynamicWidget(''TXTree'',PropertyEditForm,PropertyE'
  +'ditVBox66.myNode,''PropertyEditWidget'','''',''Left'',-1).ScreenObject);'#13
  +#10'     NewTree.TreeData:=TargetAttribute.AttribValue;'#13#10'     NewTree.'
  +'TreeHeight:=''80%'';'#13#10'     NewTree.TreeWidth:=''100%'';'#13#10'     N'
  +'ewTree.LabelText:='''';'#13#10'     NewTree.ReadOnly:=false;'#13#10'     Ne'
  +'wTree.Draggable:=true;'#13#10'     // tree needs event handlers for editing'
  +#13#10'     // copy, cut, paste, drag/drop, delete, insert'#13#10'     NewTr'
  +'ee.myNode.registerEvent(''TreeNodeClick'',@PropertyEditForm.HandleTreeDataN'
  +'odeSelect);'#13#10'     NewTree.myNode.registerEvent(''DragStart'',@Propert'
  +'yEditForm.HandleTreeDataDragStart);'#13#10'     NewTree.myNode.registerEven'
  +'t(''Drop'',@PropertyEditForm.HandleTreeDataDrop);'#13#10#13#10'     NewHBox'
  +':=TXHBox(AddDynamicWidget(''TXHBox'',PropertyEditForm,PropertyEditVBox66.my'
  +'Node,''PropertyEditHBox66'','''',''Left'',-1).ScreenObject);'#13#10'     Ne'
  +'wHBox.ContainerHeight:='''';'#13#10#13#10'     NewBtn1:=TXButton(AddDynamic'
  +'Widget(''TXButton'',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn1'','''
  +''',''Left'',-1).ScreenObject);'#13#10'     NewBtn1.Caption:=''Insert Siblin'
  ,'g'';'#13#10'     NewBtn1.myNode.registerEvent(''ButtonClick'',@PropertyEdit'
  +'Form.InsertSiblingNode);'#13#10#13#10'     NewBtn2:=TXButton(AddDynamicWidg'
  +'et(''TXButton'',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn2'','''','
  +'''Left'',-1).ScreenObject);'#13#10'     NewBtn2.Caption:=''Insert Child'';'
  +#13#10'     NewBtn2.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.I'
  +'nsertChildNode);'#13#10#13#10'     NewBtn3:=TXButton(AddDynamicWidget(''TXB'
  +'utton'',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn3'','''',''Left'','
  +'-1).ScreenObject);'#13#10'     NewBtn3.Caption:=''Delete Node'';'#13#10'   '
  +'  NewBtn3.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.DeleteTree'
  +'Node);'#13#10#13#10'     NewBtn4:=TXButton(AddDynamicWidget(''TXButton'',Pr'
  +'opertyEditForm,NewHBox.myNode,''PropertyEditCopyBtn'','''',''Left'',-1).Scr'
  +'eenObject);'#13#10'     NewBtn4.Caption:=''Copy'';'#13#10'     NewBtn4.myNo'
  +'de.registerEvent(''ButtonClick'',@PropertyEditForm.CopyTreeNode);'#13#10#13
  +#10'     NewBtn5:=TXButton(AddDynamicWidget(''TXButton'',PropertyEditForm,Ne'
  +'wHBox.myNode,''PropertyEditPasteBtn'','''',''Left'',-1).ScreenObject);'#13
  +#10'     NewBtn5.Caption:=''Paste'';'#13#10'     NewBtn5.myNode.registerEven'
  +'t(''ButtonClick'',@PropertyEditForm.PasteTreeNode);'#13#10#13#10'     EditN'
  +'ode:=NewTree.myNode;'#13#10'  end'#13#10'  else if TargetAttribute.AttribTy'
  +'pe=''TableString'' then'#13#10'  begin'#13#10'    NewTable:=TXTable(AddDyna'
  +'micWidget(''TXTable'',PropertyEditForm,PropertyEditVBox66.myNode,''Property'
  +'EditWidget'','''',''Left'',-1).ScreenObject);'#13#10'    NewTable.IsNumeric'
  +':=TXTable(TargetNode.ScreenObject).IsNumeric;'#13#10'    NewTable.TableData'
  +':=TargetAttribute.AttribValue;'#13#10'    str:= NewTable.TableData;'#13#10
  +'    NewTable.TableHeight:=''70%'';'#13#10'    NewTable.TableWidth:=''100%'''
  +';'#13#10'    NewTable.LabelText:='''';'#13#10'    if TargetNode.NodeType='''
  +'TXTable'' then'#13#10'    begin'#13#10'      str:=TargetNode.GetAttribute('
  +'''ColWidth'',false).AttribValue;'#13#10'      if str<>'''' then'#13#10'    '
  +'    NewTable.ColWidth:=strtoint(str);'#13#10'    end;'#13#10#13#10'    //Ne'
  +'wTable.HasHeaderRow:=TXTable(TargetNode.ScreenObject).HasHeaderRow;'#13#10
  +'    NewTable.HasHeaderRow:=false;       // allow for editing col headers'#13
  +#10#13#10'    NewHBox:=TXHBox(AddDynamicWidget(''TXHBox'',PropertyEditForm,P'
  +'ropertyEditVBox66.myNode,''PropertyEditHBox66'','''',''Left'',-1).ScreenObj'
  +'ect);'#13#10'    NewHBox.ContainerHeight:='''';'#13#10#13#10'    NewBtn1:=T'
  +'XButton(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBox.myNode,''Pro'
  +'pertyEditBtn1'','''',''Left'',-1).ScreenObject);'#13#10'    NewBtn1.Caption'
  +':=''Insert Row'';'#13#10'    NewBtn1.myNode.registerEvent(''ButtonClick'',@'
  +'PropertyEditForm.InsertTableRow);'#13#10#13#10'    NewBtn2:=TXButton(AddDyn'
  +'amicWidget(''TXButton'',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn2'
  +''','''',''Left'',-1).ScreenObject);'#13#10'    NewBtn2.Caption:=''Insert Co'
  +'lumn'';'#13#10'    NewBtn2.myNode.registerEvent(''ButtonClick'',@PropertyEd'
  +'itForm.InsertTableColumn);'#13#10#13#10'    NewBtn3:=TXButton(AddDynamicWid'
  +'get(''TXButton'',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn3'','''','
  +'''Left'',-1).ScreenObject);'#13#10'    NewBtn3.Caption:=''Delete Row'';'#13
  +#10'    NewBtn3.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.Delet'
  +'eTableRow);'#13#10#13#10'    NewBtn4:=TXButton(AddDynamicWidget(''TXButton'
  +''',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn4'','''',''Left'',-1).S'
  +'creenObject);'#13#10'    NewBtn4.Caption:=''Delete Column'';'#13#10'    New'
  +'Btn4.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.DeleteTableColu'
  +'mn);'#13#10#13#10'    EditNode:=NewTable.myNode;'#13#10#13#10'    // option'
  +' to edit the TableData string directly - EditBox'#13#10'    NewEditBox:=TXE'
  +'ditBox(AddDynamicWidget(''TXEditBox'',PropertyEditForm,PropertyEditVBox66.m'
  +'yNode,''PropertyEditWidget2'','''',''Left'',-1).ScreenObject);'#13#10'    N'
  +'ewEditBox.LabelText:=''OR edit TableData as string....'';'#13#10'    NewEdi'
  +'tBox.LabelPos:=''Top'';'#13#10'    //EditNode:=NewEditBox.myNode;'#13#10'  '
  +'  NewEditBox.ItemValue:=TargetAttribute.AttribValue;'#13#10'    NewEditBox.'
  +'BoxWidth:=''90%'';'#13#10'    NewBtn5:=TXButton(AddDynamicWidget(''TXButton'
  +''',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditBtn5'','''',''L'
  +'eft'',-1).ScreenObject);'#13#10'    NewBtn5.Caption:=''Apply to Table'';'#13
  +#10'    NewBtn5.Hint:=''Apply the string value to the Table'';'#13#10'    Ne'
  +'wBtn5.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.CopyStringToTa'
  +'ble);'#13#10#13#10#13#10'  end'#13#10'  else if TargetAttribute.AttribType='
  +'''Boolean'' then'#13#10'  begin'#13#10'    NewCheckBox:=TXCheckBox(AddDynam'
  +'icWidget(''TXCheckBox'',PropertyEditForm,PropertyEditVBox66.myNode,''Proper'
  +'tyEditWidget'','''',''Left'',-1).ScreenObject);'#13#10'    NewCheckBox.Labe'
  ,'lText:='''';'#13#10'    EditNode:=NewCheckBox.myNode;'#13#10'    NewCheckBo'
  +'x.Checked:=myStrToBool(TargetAttribute.AttribValue);'#13#10'  end'#13#10'  '
  +'else if TargetAttribute.AttribType=''Color'' then'#13#10'  begin'#13#10'   '
  +' NewColorPicker:=TXColorPicker(AddDynamicWidget(''TXColorPicker'',PropertyE'
  +'ditForm,PropertyEditVBox66.myNode,''PropertyEditWidget'','''',''Left'',-1).'
  +'ScreenObject);'#13#10'    NewColorPicker.LabelText:='''';'#13#10'    EditNo'
  +'de:=NewColorPicker.myNode;'#13#10'    NewColorPicker.ItemValue:=TargetAttri'
  +'bute.AttribValue;'#13#10'  end;'#13#10'  PropertyEditFormXTabControl11.TabI'
  +'ndex:=2;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TPrope'
  +'rtyEditForm.FormCreate(Sender: TObject);'#13#10'//var'#13#10'//  myNode:TDa'
  +'taNode;'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'end;'#13
  +#10#13#10'procedure TPropertyEditForm.FormResize(Sender: TObject);'#13#10'be'
  +'gin'#13#10'  DoFormResize(self, PropertyEditVBox1);'#13#10'end;'#13#10#13#10
  +'{$endif}'#13#10#13#10#13#10'procedure TPropertyEditForm.PropertyEditCancelB'
  +'tnHandleButtonClick('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: A'
  +'nsiString);'#13#10'begin'#13#10'  PropertyEditStatus:=''Cancel'';'#13#10'  '
  +'TXForm(self).Showing:=''No'';'#13#10'  PropertyEditBox:=nil;'#13#10'end;'#13
  +#10#13#10'procedure TPropertyEditForm.PropertyEditDoneBtnHandleButtonClick('
  +#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'beg'
  +'in'#13#10'  PropertyEditStatus:=''ok'';'#13#10'  TXForm(self).Showing:=''No'
  +''';'#13#10'  PropertyEditorClosed(PropertyEditBox);'#13#10'end;'#13#10#13#10
  +'procedure TPropertyEditForm.PropertyEditSourceBtnHandleButtonClick('#13#10
  +'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13
  +#10'    InputSelectForm.TargetEditBoxNode:=PropertyEditSourceBox.myNode;'#13
  +#10'    if TargetNode.NodeType<>''TXComposite'' then                   //!!!'
  +'! improve this'#13#10'      InputSelectForm.PropType:=TargetAttribute.Attri'
  +'bType'#13#10'    else'#13#10'      InputSelectForm.PropType:='''';'#13#10' '
  +'   InputSelectForm.Initialise;'#13#10'    ShowXForm(''InputSelectForm'',tru'
  +'e);'#13#10#13#10'    // on return...'#13#10'    InputSelectForm.InputSelect'
  +'Closed;'#13#10'end;'#13#10'(*'#13#10'procedure TPropertyEditForm.PropertyEd'
  +'itSourceTreeHandleTreeNodeClick('#13#10'  e:TEventStatus;nodeID: AnsiString'
  +'; myValue: AnsiString);'#13#10'var'#13#10'  ObjName:String;'#13#10'  Select'
  +'edNode:TDataNode;'#13#10'begin'#13#10'  // value is the node label'#13#10' '
  +' //showmessage(''value=''+myValue);'#13#10'  ObjName:=TreeLabelToID( myValu'
  +'e);'#13#10'  //ObjName is  the screen object name (from the name within myv'
  +'alue)'#13#10'  if ObjName<>'''' then'#13#10'  begin'#13#10'    //showmessag'
  +'e(''PropertyEditSourceTreeHandleTreeNodeClick.  Id=''+ObjName);'#13#10'    '
  +'// if name contains a ''.'' then it''s a property.'#13#10'    // Functions '
  +'have a node type of Function'#13#10'    if FoundString(ObjName,''.'')>0 the'
  +'n'#13#10'    begin'#13#10'      PropertyEditSourceBox.ItemValue:=ObjName;'
  +#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      SelectedNode:=F'
  +'indDataNodeById(CodeRootNode,ObjName,'''',false);'#13#10'      if SelectedN'
  +'ode<>nil then'#13#10'        if SelectedNode.NodeType=''Function'' then'#13
  +#10'          PropertyEditSourceBox.ItemValue:=ObjName;'#13#10'    end;'#13
  +#10'  end;'#13#10'end;'#13#10'*)'#13#10#13#10'procedure TPropertyEditForm.Ha'
  +'ndleTreeDataNodeSelect('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'begin'#13#10#13#10'end;'#13#10#13#10'procedure TPrope'
  +'rtyEditForm.HandleTreeDataDragStart('#13#10'  e:TEventStatus;nodeID: AnsiSt'
  +'ring; myValue: AnsiString);           //!!!! do this with node id''s....'#13
  +#10'var'#13#10'  treeNode:TDataNode;'#13#10'  myXTree:TXTree;'#13#10'begin'
  +#13#10'  //showmessage(''dragstart. value=''+myValue);'#13#10'  // value is '
  +'the text of the selected (dragged) node'#13#10'  {$ifndef JScript}'#13#10' '
  +' treeNode:=FindDataNodeById(SystemNodeTree,nodeId,'''',true);'#13#10'  myXT'
  +'ree:=TXTree(treenode.ScreenObject);'#13#10'  myXTree.SelectedNodeText:=myVa'
  +'lue;'#13#10#13#10'  {$else}'#13#10'  //treeNode:=FindDataNodeById(SystemNod'
  +'eTree,nodeId,'''',true);'#13#10'  //myXTree:=TXTree(treenode.ScreenObject);'
  +#13#10'  //myXTree.NodeBeingDragged:=myValue;'#13#10'  {$endif}'#13#10'end;'
  +#13#10#13#10'procedure TPropertyEditForm.HandleTreeDataDrop('#13#10'  e:TEve'
  +'ntStatus;nodeID: AnsiString; myValue: AnsiString);         //!!!! node id'''
  +'s'#13#10'var'#13#10'  myXTree:TXTree;'#13#10'  treeNode:TDataNode;'#13#10'b'
  +'egin'#13#10'  //showmessage(''drop.  data=''+myValue);'#13#10'  // Selected'
  +'NodeText is the node being dragged'#13#10'  // myValue is the target node'
  +#13#10'  treeNode:=FindDataNodeById(SystemNodeTree,nodeId,'''',true);'#13#10
  +'  myXTree:=TXTree(treenode.ScreenObject);'#13#10#13#10#13#10'  {$ifndef JSc'
  ,'ript}'#13#10'  myXTree.MoveNode(myXTree.SelectedNodeText,myValue);'#13#10' '
  +' {$else}'#13#10'  myXTree.MoveNode(myXTree.NodeBeingDragged,myValue);      '
  +'   //!!!! change this to use node id instead of text'#13#10'  myXTree.NodeB'
  +'eingDragged:='''';'#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedu'
  +'re TPropertyEditForm.InsertSiblingNode('#13#10'  e:TEventStatus;nodeID: Ans'
  +'iString; myValue: AnsiString);'#13#10'var'#13#10'  TheTree:TDataNode;'#13#10
  +'  i:integer;'#13#10'begin'#13#10'  TheTree:=FindDataNodeById(PropertyEditVB'
  +'ox66.myNode,''PropertyEditWidget'','''',true);'#13#10'  i:=1;'#13#10'  whil'
  +'e (not TXtree(TheTree.ScreenObject).NodeTextIsUnique(''New Node''+intToStr('
  +'i))) do'#13#10'    i:=i+1;'#13#10'  TXtree(TheTree.ScreenObject).InsertNewS'
  +'iblingNode(''New Node''+intToStr(i));'#13#10'end;'#13#10#13#10'procedure TP'
  +'ropertyEditForm.InsertChildNode('#13#10'  e:TEventStatus;nodeID: AnsiString'
  +'; myValue: AnsiString);'#13#10'var'#13#10'  TheTree:TDataNode;'#13#10'  i:i'
  +'nteger;'#13#10'begin'#13#10'  TheTree:=FindDataNodeById(PropertyEditVBox66.'
  +'myNode,''PropertyEditWidget'','''',true);'#13#10'  i:=1;'#13#10'  while (no'
  +'t TXtree(TheTree.ScreenObject).NodeTextIsUnique(''New Node''+intToStr(i))) '
  +'do'#13#10'    i:=i+1;'#13#10'  TXtree(TheTree.ScreenObject).InsertNewChildN'
  +'ode(''New Node''+intToStr(i));'#13#10'end;'#13#10#13#10'procedure TProperty'
  +'EditForm.DeleteTreeNode('#13#10'  e:TEventStatus;nodeID: AnsiString; myValu'
  +'e: AnsiString);'#13#10'var'#13#10'  TheTree:TDataNode;'#13#10'begin'#13#10
  +'  TheTree:=FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'
  +''','''',true);'#13#10#13#10'  TXtree(TheTree.ScreenObject).DeleteSelectedNo'
  +'de;'#13#10#13#10#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.CopyTr'
  +'eeNode('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'var'#13#10'  TheTree:TDataNode;'#13#10'  {$ifndef JScript}'#13#10'  m'
  +'yTree:TmyTreeView;'#13#10'  {$endif}'#13#10'begin'#13#10'  TheTree:=FindDat'
  +'aNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'','''',true);'#13
  +#10'  {$ifndef JScript}'#13#10'  myTree:=TmyTreeView(TXTree(TheTree.ScreenOb'
  +'ject).myControl);'#13#10'  if myTree.Selected<>nil then'#13#10'  begin'#13
  +#10'    CopiedTreeNode:=myTree.Selected;'#13#10'  end'#13#10'  else'#13#10' '
  +'   showmessage(''Please select a tree node first'');'#13#10'{$else}'#13#10
  +'  CopiedTreeNode:=TXTree(TheTree.ScreenObject).SelectedNodeId;'#13#10'{$end'
  +'if}'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'function CopyThisNode'
  +'(myTree:TmyTreeView;ANode,NewParent:TTreeNode):TTreeNode;'#13#10'var'#13#10
  +'  NodeParent:TTreeNode;'#13#10'  NodeText:String;'#13#10'begin'#13#10'  Nod'
  +'eText:=ANode.Text;'#13#10'//  NodeText:=myTree.MakeTextUnique(NodeText);'#13
  +#10'  NodeParent:=myTree.Items.AddChild(NewParent,NodeText);'#13#10'  if ANo'
  +'de.HasChildren then          //!!!! suspect this built-in also needs unique'
  +'ness for node texts...'#13#10'  begin'#13#10'    ANode:=ANode.GetFirstChild'
  +';'#13#10'    if ANode<>nil then'#13#10'    begin'#13#10'      CopyThisNode('
  +'myTree,ANode,NodeParent);'#13#10'      repeat'#13#10'        ANode := ANode'
  +'.getNextSibling;'#13#10'        if ANode<>nil then'#13#10'        begin'#13
  +#10'          CopyThisNode(myTree,ANode,NodeParent);'#13#10'        end;'#13
  +#10'      until ANode = nil;'#13#10'    end;'#13#10'  end;'#13#10'  result:='
  +'NodeParent;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure TPropertyEdi'
  +'tForm.PasteTreeNode('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: A'
  +'nsiString);'#13#10'var'#13#10'  TheTree:TDataNode;'#13#10'  {$ifndef JScrip'
  +'t}'#13#10'  myTree:TmyTreeView;'#13#10'  {$endif}'#13#10'  i:integer;'#13#10
  +'begin'#13#10'{$ifndef JScript}'#13#10'  if (CopiedTreeNode<>nil) then'#13#10
  +'  begin'#13#10'    TheTree:=FindDataNodeById(PropertyEditVBox66.myNode,''Pr'
  +'opertyEditWidget'','''',true);'#13#10'    myTree:=TmyTreeView(TXTree(TheTre'
  +'e.ScreenObject).myControl);'#13#10'    if (myTree.Selected<>nil) then'#13#10
  +'    begin'#13#10'      // traverse the copied tree node, inserting new node'
  +' and children at selected spot'#13#10'      myTree.Selected:=CopyThisNode(m'
  +'yTree,CopiedTreeNode,myTree.Selected);'#13#10'    end'#13#10'    else'#13#10
  +'      showmessage(''Please select a tree node first'');'#13#10'  end'#13#10
  +'{$else}'#13#10'  if (CopiedTreeNode<>'''') then'#13#10'  begin'#13#10'    T'
  +'heTree:=FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'','
  +''''',true);'#13#10'    if TXTree(TheTree.ScreenObject).SelectedNodeId<>'''''
  +' then'#13#10'    begin'#13#10'      //!!!!'#13#10'    end'#13#10'    else'
  +#13#10'      showmessage(''Please select a tree node first'');'#13#10'  end'
  +#13#10'{$endif}'#13#10'  else'#13#10'    showmessage(''Please copy a tree no'
  +'de first'');'#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.InsertTab'
  +'leRow(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'
  ,#13#10'  myTable:TXTable;'#13#10'  myEditBox:TXEditBox;'#13#10'begin'#13#10
  +'  myTable:=TXTable(FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEdi'
  +'tWidget'','''',true).ScreenObject);'#13#10'  myEditBox:=TXEditBox(FindDataN'
  +'odeById(PropertyEditVBox66.myNode,''PropertyEditWidget2'','''',true).Screen'
  +'Object);'#13#10'  myTable.AddTableRows(1);'#13#10'  myEditBox.ItemValue:=my'
  +'Table.TableData;'#13#10'  {$ifndef JScript}'#13#10'  TStringGrid(myTable.my'
  +'Control).FixedRows:=0; //allow editing column headers'#13#10'  {$endif}'#13
  +#10#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.InsertTableColumn(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  '
  +'myTable:TXTable;'#13#10'  myEditBox:TXEditBox;'#13#10'begin'#13#10'  myTabl'
  +'e:=TXTable(FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'
  +''','''',true).ScreenObject);'#13#10'  myEditBox:=TXEditBox(FindDataNodeById'
  +'(PropertyEditVBox66.myNode,''PropertyEditWidget2'','''',true).ScreenObject)'
  +';'#13#10'  myTable.AddTableColumns(1);'#13#10'  myEditBox.ItemValue:=myTabl'
  +'e.TableData;'#13#10'  {$ifndef JScript}'#13#10'  TStringGrid(myTable.myCont'
  +'rol).FixedRows:=0; //allow editing column headers'#13#10'  {$endif}'#13#10
  +'end;'#13#10#13#10'procedure TPropertyEditForm.DeleteTableRow(e:TEventStatus'
  +';nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  myTable:TXTa'
  +'ble;'#13#10'  myEditBox:TXEditBox;'#13#10'begin'#13#10'  myTable:=TXTable(F'
  +'indDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'','''',true)'
  +'.ScreenObject);'#13#10'  myEditBox:=TXEditBox(FindDataNodeById(PropertyEdit'
  +'VBox66.myNode,''PropertyEditWidget2'','''',true).ScreenObject);'#13#10'  my'
  +'Table.DeleteSelectedRow;'#13#10'  myEditBox.ItemValue:=myTable.TableData;'
  +#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.DeleteTableColumn(e:TEv'
  +'entStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  myT'
  +'able:TXTable;'#13#10'  myEditBox:TXEditBox;'#13#10'  r,c:integer;'#13#10'be'
  +'gin'#13#10'  myTable:=TXTable(FindDataNodeById(PropertyEditVBox66.myNode,'''
  +'PropertyEditWidget'','''',true).ScreenObject);'#13#10'  myEditBox:=TXEditBo'
  +'x(FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget2'','''',t'
  +'rue).ScreenObject);'#13#10'  r:=myTable.SelectedRow;'#13#10'  c:=myTable.Se'
  +'lectedCol;'#13#10'  //i:=TStringGridAccess(TStringGrid(myTable.myControl)).'
  +'Col;'#13#10'  if (r<0) or (c<0) then'#13#10'    showmessage(''column not se'
  +'lected'')'#13#10'  else if (c=0) and (myTable.NumCols=1) then'#13#10'    sh'
  +'owmessage(''cannot delete all columns'')'#13#10'  else'#13#10'  begin'#13#10
  +'    {$ifndef JScript}'#13#10'    TStringGridAccess(TStringGrid(myTable.myCo'
  +'ntrol)).DeleteCol(c);'#13#10'    {$else}'#13#10'    asm'#13#10'        var '
  +'ob = document.getElementById(myTable.NameSpace+myTable.NodeName+''Contents'
  +''');'#13#10'        if (ob!=null) {'#13#10'        for (var i = 0, row; row'
  +' = ob.rows[i]; i++) {'#13#10'                row.deleteCell(c);'#13#10'    '
  +'        } }'#13#10'    end;'#13#10'    {$endif}'#13#10'    myTable.TableDat'
  +'a:=myTable.ConstructDataString;'#13#10'    myEditBox.ItemValue:=myTable.Tab'
  +'leData;'#13#10'    {$ifndef JScript}'#13#10'    TStringGrid(myTable.myContr'
  +'ol).FixedRows:=0; //allow editing column headers'#13#10'    {$endif}'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.CopyStringToTab'
  +'le(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13
  +#10'  myTable:TXTable;'#13#10'  myEditBox:TXEditBox;'#13#10'  r,c:integer;'
  +#13#10'begin'#13#10'  myTable:=TXTable(FindDataNodeById(PropertyEditVBox66.m'
  +'yNode,''PropertyEditWidget'','''',true).ScreenObject);'#13#10'  myEditBox:='
  +'TXEditBox(FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget2'
  +''','''',true).ScreenObject);'#13#10'  myTable.TableData:=myEditBox.ItemValu'
  +'e;'#13#10'end;'#13#10#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('inputselectunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InputSelectUnit;'#13
  +#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10
  +'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUt'
  +'ils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, Graphic'
  +'s, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, TypInfo, LazIDEInt'
  +'f,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'#13#10'  {$e'
  +'lse}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  XScrollBox, XVBox, XHBo'
  +'x, XTree, XMemo, XTabControl, XButton, XLabel,'#13#10'  XEditBox, XCheckBox'
  +', XHyperLink, XRadioBtns, XCode, XForm, XComboBox,'#13#10'  XColorPicker,Ev'
  +'entsInterface ;'#13#10#13#10'type'#13#10#13#10'  { TInputSelectForm }'#13#10
  +#13#10'  TInputSelectForm = class(TXForm)'#13#10'    InputSelectTree: TXTree'
  +';'#13#10'    InputSelectVBox1: TXVBox;'#13#10'    InputSelectDoneBtn: TXBut'
  +'ton;'#13#10'    {$ifndef JScript}'#13#10'    procedure FormCreate(Sender: T'
  +'Object);'#13#10'    procedure FormResize(Sender: TObject);'#13#10'    {$end'
  +'if}'#13#10'    procedure Initialise;'#13#10'    procedure InputSelectClosed'
  +';'#13#10'    procedure InputSelectDoneBtnHandleButtonClick(e:TEventStatus;n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'    procedure InputSelectTr'
  +'eeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStrin'
  +'g);'#13#10'  private'#13#10#13#10'  public'#13#10'    ExclNodeName, ExclPro'
  +'pertyName, PropType : String;'#13#10'    SelectedItem:String;'#13#10'    Ta'
  +'rgetEditBoxNode:TDataNode;'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  In'
  +'putSelectForm: TInputSelectForm;'#13#10'  InputSelectStatus:String;'#13#10
  +#13#10'implementation'#13#10'uses xobjectinsp,CodeEditor;'#13#10'{$R *.lfm}'
  +#13#10#13#10'{ TInputSelectForm }'#13#10'procedure TInputSelectForm.Initiali'
  +'se;'#13#10'var'#13#10'  treestring, excludemyname:string;'#13#10'  Exclusio'
  +'ns:TStringList;'#13#10'begin'#13#10'  SelectedItem:='''';'#13#10'  InputSel'
  +'ectStatus:=''Cancel'';'#13#10'  Exclusions:=TStringList.Create;'#13#10'  Ex'
  +'clusions.Add(ResourceDataRootName);'#13#10'  excludemyname:=ExclNodeName;'
  +#13#10'  if ExclPropertyName<>'''' then'#13#10'    excludemyname:=excludemyn'
  +'ame+''.''+exclPropertyName;'#13#10'  Exclusions.Add(excludemyname);'#13#10
  +'  //showmessage(''ConstructSystemTreeString in inputselectform'');'#13#10' '
  +' treestring:= ConstructSystemTreeString(SystemNodeTree,0,true,true,Exclusio'
  +'ns,PropType);'#13#10'  InputSelectTree.TreeData:=treestring;'#13#10'  FreeA'
  +'ndNil(Exclusions);'#13#10'end;'#13#10#13#10'procedure TInputSelectForm.Inpu'
  +'tSelectDoneBtnHandleButtonClick( e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'begin'#13#10'  InputSelectStatus:=''ok'';'#13#10'  TX'
  +'Form(self).Showing:=''No'';'#13#10'  {$ifdef JScript}'#13#10'  InputSelectC'
  +'losed;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10
  +'procedure TInputSelectForm.FormCreate(Sender: TObject);'#13#10'//var'#13#10
  +'//  myNode:TDataNode;'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'
  +#13#10'end;'#13#10#13#10'procedure TInputSelectForm.FormResize(Sender: TObje'
  +'ct);'#13#10'begin'#13#10'  DoFormResize(self, InputSelectVBox1);'#13#10'end'
  +';'#13#10#13#10'{$endif}'#13#10#13#10'procedure TInputSelectForm.InputSelect'
  +'TreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'// myValue is the internal ID of the clicked treenode.'#13#10
  +'// SelectedItem stores the selected node Text.'#13#10'var'#13#10'  NodeText'
  +':String;'#13#10'begin'#13#10'  NodeText:=InputSelectTree.SelectedNodeText;'
  +#13#10'  SelectedItem:=NodeText;'#13#10'end;'#13#10#13#10'procedure TInputSe'
  +'lectForm.InputSelectClosed;'#13#10'begin'#13#10'  if InputSelectStatus=''ok'
  +''' then'#13#10'  begin'#13#10'    TXEditBox(TargetEditBoxNode.ScreenObject)'
  +'.ItemValue:=self.SelectedItem;'#13#10'    CodeEditForm.EditInputSource(nil,'
  +'TargetEditBoxNode.NodeName,self.SelectedItem);'#13#10'    //CodeEditForm.Ed'
  +'itInputCombo(TargetEditBoxNode.NodeName,self.SelectedItem);'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('popupmemo','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit PopupMemo;'#13#10#13
  +#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, Nod'
  +'eUtils,'#13#10'  {$ifndef JScript}'#13#10'  LazsUtils,'#13#10'  {$endif}'#13
  +#10'  XVBox,  XMemo, XForm, XHTMLText;'#13#10#13#10'type'#13#10#13#10'  { TP'
  +'opupMemoForm }'#13#10#13#10'  TPopupMemoForm = class(TXForm)'#13#10'    Pop'
  +'upMemoVBox: TXVBox;'#13#10'    PopupHelpText: TXMemo;'#13#10'    {$ifndef J'
  +'Script}'#13#10'    procedure FormCreate(Sender: TObject);'#13#10'    proced'
  +'ure FormResize(Sender: TObject);'#13#10'    procedure FormShow(Sender: TObj'
  +'ect);'#13#10'    {$endif}'#13#10'  private'#13#10#13#10'  public'#13#10'   '
  +' procedure InitialiseMemo;'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  Po'
  +'pupMemoForm: TPopupMemoForm;'#13#10#13#10'implementation'#13#10'uses'#13#10
  +'  XObjectInsp;'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{ TPopupMemoForm }'#13
  +#10#13#10'{$ifndef JScript}'#13#10'procedure TPopupMemoForm.FormCreate(Sende'
  +'r: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'  I'
  +'nitialiseMemo;'#13#10'end;'#13#10#13#10'procedure TPopupMemoForm.FormResize'
  +'(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(self, PopupMemoVBox);'
  +#13#10'end;'#13#10#13#10'procedure TPopupMemoForm.FormShow(Sender: TObject);'
  +#13#10'begin'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure TPopup'
  +'MemoForm.InitialiseMemo;'#13#10'begin'#13#10'  PopupHelpText.ItemValue:='#13
  +#10'  ''A number of interface functions have been provided for interaction w'
  +'ith the XIDE framework and project data.'' + LineEnding +'#13#10'  '' '' + '
  +'LineEnding +'#13#10'  ''General Functions'' + LineEnding +'#13#10'  ''====='
  +'============'' + LineEnding +'#13#10'  ''procedure SetPropertyValue(nodeNam'
  +'e,propName,newValue:String);  '' + LineEnding +'#13#10'  ''                '
  +'            set a component property (string value)  '' + LineEnding +'#13
  +#10'  ''function  GetPropertyValue(nodeName,propName:String);  ''  + LineEnd'
  +'ing +'#13#10'  ''                            returns a component property v'
  +'alue (as string) ''   + LineEnding +'#13#10'  ''procedure SetPropertyValueI'
  +'ndexed(nodeName,propName:String;newValue:TStringArray; x,y:integer); ''  + '
  +'LineEnding +'#13#10'  ''                            set a portion of a comp'
  +'onent array property  ''  + LineEnding +'#13#10'  ''procedure CopyToClip(st'
  +'r:String); ''    + LineEnding +'#13#10'  ''                            copi'
  +'es the given string to the clipboard ''  + LineEnding +'#13#10'  ''function'
  +'  CopyFromClip(e:TEventStatus):String; '' + LineEnding +'#13#10'  ''       '
  +'   CopyFromClip is an async function (required for browser use), so it must'
  +' be coded in the  '' + LineEnding +'#13#10'  ''          ''''Init'''' secti'
  +'on of an event handler. The result here is a blank string.                 '
  +' '' + LineEnding +'#13#10'  ''          The clipboard string is held in e.R'
  +'eturnString, which cn be picked up in the              '' + LineEnding +'#13
  +#10'  ''          ''''Main'''' section of the event handler.                '
  +'                                    '' + LineEnding +'#13#10'  ''procedure '
  +'ShowXForm(XFormID:String; modal:Boolean);  '' + LineEnding +'#13#10'  ''   '
  +'                         opens a TXForm. [note:''''modal=false'''' currentl'
  +'y only effective on desktop] '' + LineEnding +'#13#10'  ''procedure CloseXF'
  +'orm(XFormID:String);  '' + LineEnding +'#13#10'  ''                        '
  +'    closes a TXForm.  '' + LineEnding +'#13#10'  ''procedure DoEvent(EventT'
  +'ype,NodeId,myValue:String); ''  + LineEnding +'#13#10'  ''                 '
  +'           executes the event handler defined for the given event type and '
  +'component. ''  + LineEnding +'#13#10'  ''procedure MoveComponent(nodeId:str'
  +'ing;NewParentId:string); ''  + LineEnding +'#13#10'  ''                    '
  +'        re-parents the given UI component ''  + LineEnding +'#13#10'  ''pro'
  +'cedure CopyComponent(nodeId,NewParentId,NewName:string); ''  + LineEnding +'
  +#13#10'  ''                            copies the given UI component and pla'
  +'ces the clone under the given parent ''  + LineEnding +'#13#10'  ''function'
  +'  DeleteComponent(nodeId:string;ShowNotFoundMsg:Boolean=true):Boolean; ''  '
  +'+ LineEnding +'#13#10'  ''                            deletes the given UI '
  +'component. Returns false if not done. ''   + LineEnding +'#13#10'  ''functi'
  +'on  UserSystemAsString():String;''  + LineEnding +'#13#10'  ''             '
  +'               Returns the string representation of the current user system'
  ,' (can be imported to XIDE via System>Load)  ''  + LineEnding +'#13#10'  ''f'
  +'unction  LoadUserSystemString(SystemString:String);''  + LineEnding +'#13#10
  +'  ''                            Imports a new user system to the XIDE frame'
  +'work (can only be done in ''''Design'''' mode) ''  + LineEnding +'#13#10'  '
  +'''procedure ShowBusy(e:TEventStatus);''  + LineEnding +'#13#10'  ''        '
  +'                    Shows the busy cursor  ''  + LineEnding +'#13#10'  ''  '
  +'        ShowBusy is an async function (required for browser use), so it mus'
  +'t be coded in the  '' + LineEnding +'#13#10'  ''          ''''Init'''' sect'
  +'ion of an event handler.         '' + LineEnding +'#13#10'  ''procedure Hid'
  +'eBusy;''   + LineEnding +'#13#10'  ''                            Hides the '
  +'busy cursor  ''  + LineEnding +'#13#10'  ''procedure MovePointerBetweenComp'
  +'onents(NodeName1,NodeName2,Sub1,Sub2:String);''  + LineEnding +'#13#10'  '''
  +'                            Runs an animated pointer on screen between the '
  +'two given UI components  ''  + LineEnding +'#13#10'  ''procedure HidePointe'
  +'r;''  + LineEnding +'#13#10'  ''                            Hides the anima'
  +'ted pointer (that was raised by MovePointerBetweenComponents)  ''  + LineEn'
  +'ding +'#13#10'  ''procedure ProcessMessages;''  + LineEnding +'#13#10'  '' '
  +'                           Functional in Desktop execution only.  Executes '
  +'a pascal Application.ProcessMessages statement.  ''  + LineEnding +'#13#10
  +'  ''procedure DebugStart;''  + LineEnding +'#13#10'  ''                    '
  +'        Functional in Browser execution only.  Executes a Javascript ''''de'
  +'bugger;'''' statement - starts the native browser debug facility.  ''  + Li'
  +'neEnding+'#13#10'  ''procedure RunPython(str:String);''  + LineEnding +'#13
  +#10'  ''                            Executes the given Python script  ''  + '
  +'LineEnding;'#13#10'  PopupHelpText.ItemValue:=PopupHelpText.ItemValue +'#13
  +#10'  '' '' + LineEnding +'#13#10'  ''Messages and Dialogs'' + LineEnding +'
  +#13#10'  ''===================='' + LineEnding +'#13#10'  ''procedure ShowMe'
  +'ssage(msg:String);       '' + LineEnding +'#13#10'  ''                     '
  +'       displays a popup alert '' + LineEnding +'#13#10'  ''function  Confir'
  +'m(TextMessage:string):boolean;   ''  + LineEnding +'#13#10'  ''            '
  +'                displays a confirmation alert; returns true/false ''  + Lin'
  +'eEnding +'#13#10'  ''function  Prompt(TextMessage,promptString:string):stri'
  +'ng; ''  + LineEnding +'#13#10'  ''                            displays an i'
  +'nput box; returns user-entered string ''   + LineEnding +'#13#10'  ''proced'
  +'ure ConsoleLog(txt:String);''  + LineEnding +'#13#10'  ''                  '
  +'          Writes a debug message to the console log  ''  + LineEnding;'#13
  +#10#13#10'  PopupHelpText.ItemValue:=PopupHelpText.ItemValue +'#13#10'  '' '
  +''' + LineEnding +'#13#10'  ''TXTable Functions'' + LineEnding +'#13#10'  '''
  +'================='' + LineEnding +'#13#10'  ''procedure  LoadTableFromExcel'
  +'Copy(TableName,CopiedString:String);  ''  + LineEnding +'#13#10'  ''       '
  +'                     Populate the given TXTable component with a string in '
  +'Excel format (eg. as copied from a spreadsheet)  ''  + LineEnding +'#13#10
  +'  ''procedure  LoadTableFromNumArray(TableName,NumArray:T2DNumArray);  ''  '
  +'+ LineEnding +'#13#10'  ''                            Populate the given TX'
  +'Table component from a 2D numeric array  ''  + LineEnding +'#13#10'  ''func'
  +'tion  GetTableDataArray(TableName:String;SkipHeader:Boolean):T2DStringArray'
  +';  ''  + LineEnding +'#13#10'  ''                            Fetch the cell'
  +'s from the given TXTable component as a 2D string array  ''  + LineEnding +'
  +#13#10'  ''function  Array2DToString(arr:T2DNumArray):String;''  + LineEndin'
  +'g +'#13#10'  ''                            Convert numeric 2D array to stri'
  +'ng form eg. [[...],...,[...]]  ''  + LineEnding;'#13#10#13#10'  PopupHelpTe'
  +'xt.ItemValue:=PopupHelpText.ItemValue +'#13#10'  '' '' + LineEnding +'#13#10
  +'  ''TXGPUCanvas Functions'' + LineEnding +'#13#10'  ''====================='
  +''' + LineEnding +'#13#10'  ''function  GetGPUParamNumValue(GPUName,pName:St'
  +'ring):TNumArray; ''  + LineEnding +'#13#10'  ''                            '
  +'For the given TXGPUCanvas component, returns the value of the named numeric'
  +' parameter as an array ''  + LineEnding +'#13#10'  ''function  GetGPUConstI'
  +'ntValue(GPUName,pName:String):integer;''  + LineEnding +'#13#10'  ''       '
  +'                     For the given TXGPUCanvas component, returns the value'
  +' of the named integer parameter ''  + LineEnding +'#13#10'  ''procedure Set'
  +'GPUParamNumValue(GPUName,pName:String;pValue:TNumArray);''  + LineEnding +'
  +#13#10'  ''                            For the given TXGPUCanvas component, '
  +'sets the value of the named numeric parameter as a 1-D array ''  + LineEndi'
  +'ng +'#13#10'  ''procedure SetGPUParam2DNumValue(GPUName,pName:String;pValue'
  ,':T2DNumArray);''  + LineEnding +'#13#10'  ''                            For'
  +' the given TXGPUCanvas component, sets the value of the named numeric param'
  +'eter as a 2-D array ''  + LineEnding +'#13#10'  ''procedure SetGPUConstIntV'
  +'alue(GPUName,pName:String;pValue:integer);''  + LineEnding +'#13#10'  ''   '
  +'                         For the given TXGPUCanvas component, sets the valu'
  +'e of the named integer parameter ''  + LineEnding +'#13#10'  ''function  Ge'
  +'tGPUPixelArray(GPUName:String):T3DNumArray; ''  + LineEnding +'#13#10'  '' '
  +'                           Fetch the current Pixel array for the given TXGP'
  +'UCanvas component  ''  + LineEnding +'#13#10'  ''function  GetGPUPixelArray'
  +'AsString(GPUName:String):String;''  + LineEnding +'#13#10'  ''             '
  +'               Fetch the current Pixel array in string format for the given'
  +' TXGPUCanvas component  ''  + LineEnding +'#13#10'  ''function  GetGPUStage'
  +'Array(GPUName:String):T3DNumArray; ''  + LineEnding +'#13#10'  ''          '
  +'                  Fetch the stage array (resulting from the non-graphical k'
  +'ernel stack) for the given TXGPUCanvas component  ''  + LineEnding +'#13#10
  +'  ''function  GetGPUStageArrayAsString(GPUName:String):String;''  + LineEnd'
  +'ing +'#13#10'  ''                            Fetch the stage array in strin'
  +'g format for the given TXGPUCanvas component  ''  + LineEnding;'#13#10#13#10
  +'  PopupHelpText.ItemValue:=PopupHelpText.ItemValue +'#13#10'  '' '' + LineE'
  +'nding +'#13#10'  ''Python Only'' + LineEnding +'#13#10'  ''==========='' + '
  +'LineEnding +'#13#10'  ''function  ShowPythonPlot(ImgName,fig) ''  + LineEnd'
  +'ing +'#13#10'  ''                            In the given TXImage component'
  +', displays the contents of fig (a matplotlib figure) ''  + LineEnding;'#13
  +#10#13#10#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('interfacetypes','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InterfaceTypes;'#13#10
  +'(*'#13#10'   Interface declarations'#13#10'   for use with the dynamically '
  +'created dll, used for executing user event code (also see unit CompileUserC'
  +'ode)'#13#10' *)'#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10
  +'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtil'
  +'s, EventsInterface;'#13#10#13#10'type'#13#10'Tshowmessage=procedure(msg:Str'
  +'ing) of object;'#13#10'Tsetpropertyvalue=procedure(nodeName:String;propName'
  +':String;newValue:String) of object;'#13#10'TsetpropertyvalueIndexed=procedu'
  +'re(nodeName:String;propName:String;newValue:TStringArray;x,y:integer) of ob'
  +'ject;'#13#10'Tconfirm=function(TextMessage:string):boolean of object;'#13#10
  +'Tgetpropertyvalue=function(nodeName:String;propName:String):string  of obje'
  +'ct;'#13#10'//TgetpropertyvalueIndexed=function(nodeName:String;propName:Str'
  +'ing; x,y,w,h:integer):TStringArray  of object;'#13#10'Tprompt=function(Text'
  +'Message,promptString:string):string of object;'#13#10'Tshowxform=procedure('
  +'XFormID:String; modal:Boolean) of object;'#13#10'Tclosexform=procedure(XFor'
  +'mID:String) of object;'#13#10'TCopyToClip=procedure(str:String) of object;'
  +#13#10'TCopyFromClip=function(e:TEventStatus):String of object;'#13#10'TLoad'
  +'TableFromExcelCopy=procedure(TableName,CopiedString:String) of object;'#13
  +#10'TLoadTableFromNumArray=procedure(TableName:String;NumArray:T2DNumArray) '
  +'of object;'#13#10'TGetTableDataArray=function(TableName:String;SkipHeader:B'
  +'oolean):T2DStringArray of object;'#13#10'TDoEvent=procedure(EventType,NodeI'
  +'d,myValue:String) of object;'#13#10'TMoveComponent=procedure(nodeId:string;'
  +'NewParentId:string) of object;'#13#10'TCopyComponent=procedure(nodeId,NewPa'
  +'rentId,NewName:string) of object;'#13#10'TDeleteComponent=function(nodeId:s'
  +'tring;ShowNotFoundMsg:Boolean=true):Boolean of object;'#13#10'TGetGPUParamN'
  +'umValue=function(GPUName,pName:String):TNumArray of object;'#13#10'TGetGPUC'
  +'onstIntValue=function(GPUName,pName:String):integer of object;'#13#10'TSetG'
  +'PUParamNumValue=procedure(GPUName,pName:String;pValue:TNumArray) of object;'
  +#13#10'TSetGPUParam2DNumValue=procedure(GPUName,pName:String;pValue:T2DNumAr'
  +'ray) of object;'#13#10'TSetGPUConstIntValue=procedure(GPUName,pName:String;'
  +'pValue:integer) of object;'#13#10'TStartMain=procedure(e:TEventStatus) of o'
  +'bject;'#13#10'TShowBusy=procedure(e:TEventStatus) of object;'#13#10'THideBu'
  +'sy=procedure of object;'#13#10'TProcessMessages=procedure of object;'#13#10
  +'TMovePointerBetweenComponents=procedure(NodeName1,NodeName2,Sub1,Sub2:Strin'
  +'g) of object;'#13#10'THidePointer=procedure of object;'#13#10'TUserSystemAs'
  +'String=function():String of object;'#13#10'TLoadUserSystemString=procedure('
  +'SystemString:String) of object;'#13#10'TConsoleLog=procedure(txt:String) of'
  +' object;'#13#10'TArray2DToString=function(arr:T2DNumArray):String of object'
  +';'#13#10'TGetGPUPixelArray=function(GPUName:String):T3DNumArray of object;'
  +#13#10'TGetGPUPixelArrayAsString=function(GPUName:String):String of object;'
  +#13#10'TGetGPUStageArray=function(GPUName:String):T3DNumArray of object;'#13
  +#10'TGetGPUStageArrayAsString=function(GPUName:String):String of object;'#13
  +#10'TDebugStart=procedure of object;'#13#10'TRunPython=procedure(str:String)'
  +' of object;'#13#10'TSetImageSource=procedure(nm,str:String) of object;'#13
  +#10#13#10'{$ifdef JScript}'#13#10'var'#13#10'ShowMessage:Tshowmessage;'#13#10
  +'ShowXForm:Tshowxform;'#13#10'CloseXForm:Tclosexform;'#13#10'Confirm:Tconfir'
  +'m;'#13#10'Prompt:Tprompt;'#13#10'SetPropertyValue:Tsetpropertyvalue;'#13#10
  +'SetPropertyValueIndexed:Tsetpropertyvalueindexed;'#13#10'GetPropertyValue:T'
  +'getpropertyvalue;'#13#10'CopyToClip:TCopyToClip;'#13#10'CopyFromClip:TCopyF'
  +'romClip;'#13#10'LoadTableFromExcelCopy:TLoadTableFromExcelCopy;'#13#10'Load'
  +'TableFromNumArray:TLoadTableFromNumArray;'#13#10'GetTableDataArray:TGetTabl'
  +'eDataArray;'#13#10'DoEvent:TDoEvent;'#13#10'MoveComponent:TMoveComponent;'
  +#13#10'CopyComponent:TCopyComponent;'#13#10'DeleteComponent:TDeleteComponent'
  +';'#13#10'GetGPUParamNumValue:TGetGPUParamNumValue;'#13#10'GetGPUConstIntVal'
  +'ue:TGetGPUConstIntValue;'#13#10'SetGPUParamNumValue:TSetGPUParamNumValue;'
  +#13#10'SetGPUParam2DNumValue:TSetGPUParam2DNumValue;'#13#10'SetGPUConstIntVa'
  +'lue:TSetGPUConstIntValue;'#13#10'ShowBusy:TShowBusy;'#13#10'HideBusy:THideB'
  +'usy;'#13#10'ProcessMessages:TProcessMessages;'#13#10'MovePointerBetweenComp'
  +'onents:TMovePointerBetweenComponents;'#13#10'HidePointer:THidePointer;'#13
  ,#10'UserSystemAsString:TUserSystemAsString;'#13#10'LoadUserSystemString:TLoa'
  +'dUserSystemString;'#13#10'ConsoleLog:TConsoleLog;'#13#10'Array2DToString:TA'
  +'rray2DToString;'#13#10'GetGPUPixelArray:TGetGPUPixelArray;'#13#10'GetGPUPix'
  +'elArrayAsString:TGetGPUPixelArrayAsString;'#13#10'GetGPUStageArray:TGetGPUS'
  +'tageArray;'#13#10'GetGPUStageArrayAsString:TGetGPUStageArrayAsString;'#13#10
  +'DebugStart:TDebugStart;'#13#10'RunPython:TRunPython;'#13#10'SetImageSource:'
  +'TSetImageSource;'#13#10#13#10#13#10'var EventsNameSpace:String;'#13#10#13#10
  +'type TMethodsClass = class(TObject)'#13#10' public'#13#10' CurrentEventType'
  +':String;'#13#10' CurrentNodeId:String;'#13#10#13#10' procedure mmiSetEvents'
  +'NameSpace(NameSpace:String);'#13#10' procedure mmishowmessage(msg:String);'
  +#13#10' procedure mmiShowXForm(XFormID:String; modal:Boolean);'#13#10' proce'
  +'dure mmiCloseXForm(XFormID:String);'#13#10' procedure mmisetpropertyvalue(n'
  +'odeName:String;propName:String;newValue:String);'#13#10' procedure mmisetpr'
  +'opertyvalueindexed(nodeName:String;propName:String;newValue:TStringArray; x'
  +',y:integer);'#13#10' function mmigetpropertyvalue(nodeName:String;propName:'
  +'String):string;'#13#10' Function mmiconfirm(TextMessage:string):boolean;'#13
  +#10' Function mmiprompt(TextMessage,promptString:string):string;'#13#10' pro'
  +'cedure mmiCopyToClip(str:String);'#13#10' function mmiCopyFromClip(e:TEvent'
  +'Status):String;'#13#10' procedure mmiLoadTableFromExcelCopy(TableName,Copie'
  +'dString:String);'#13#10' procedure mmiLoadTableFromNumArray(TableName:Strin'
  +'g;NumArray:T2DNumArray);'#13#10' function mmiGetTableDataArray(TableName:St'
  +'ring;SkipHeader:Boolean):T2DStringArray;'#13#10' procedure mmiDoEvent(Event'
  +'Type,NodeId,myValue:String);'#13#10' procedure mmiMoveComponent(nodeId:stri'
  +'ng;NewParentId:string);'#13#10' procedure mmiCopyComponent(nodeId,NewParent'
  +'Id,NewName:string);'#13#10' function mmiDeleteComponent(nodeId:string;ShowN'
  +'otFoundMsg:Boolean=true):Boolean;'#13#10' function mmiGetGPUParamNumValue(G'
  +'PUName,pName:String):TNumArray;'#13#10' function mmiGetGPUConstIntValue(GPU'
  +'Name,pName:String):integer;'#13#10' procedure mmiSetGPUParamNumValue(GPUNam'
  +'e,pName:String;pValue:TNumArray);'#13#10' procedure mmiSetGPUParam2DNumValu'
  +'e(GPUName,pName:String;pValue:T2DNumArray);'#13#10' procedure mmiSetGPUCons'
  +'tIntValue(GPUName,pName:String;pValue:integer);'#13#10' procedure mmiStartM'
  +'ain(e:TEventStatus);'#13#10' procedure mmiShowBusy(e:TEventStatus);'#13#10
  +' procedure mmiHideBusy;'#13#10' procedure mmiProcessMessages;'#13#10' proce'
  +'dure mmiMovePointerBetweenComponents(NodeName1,NodeName2,Sub1,Sub2:String);'
  +#13#10' procedure mmiHidePointer;'#13#10' function mmiUserSystemAsString():S'
  +'tring;'#13#10' procedure mmiLoadUserSystemString(SystemString:String);'#13
  +#10' procedure mmiConsoleLog(txt:String);'#13#10' function mmiArray2DToStrin'
  +'g(arr:T2DNumArray):String;'#13#10' function mmiGetGPUPixelArray(GPUName:Str'
  +'ing):T3DNumArray;'#13#10' function mmiGetGPUPixelArrayAsString(GPUName:Stri'
  +'ng):String;'#13#10' function mmiGetGPUStageArray(GPUName:String):T3DNumArra'
  +'y;'#13#10' function mmiGetGPUStageArrayAsString(GPUName:String):String;'#13
  +#10' procedure mmiDebugStart;'#13#10' procedure mmiRunPython(str:String);'#13
  +#10' procedure mmiSetImageSource(nm,str:String);'#13#10'end;'#13#10#13#10'ty'
  +'pe AnsiString=String;'#13#10#13#10'var appmethods : TMethodsClass;'#13#10#13
  +#10#13#10'{$endif}'#13#10#13#10#13#10'implementation'#13#10#13#10'{$ifdef JS'
  +'cript}'#13#10'procedure SetInterfaceContext;'#13#10'begin'#13#10'  appmetho'
  +'ds:=TMethodsClass.Create;'#13#10'  ShowMessage:=@AppMethods.mmishowmessage;'
  +#13#10'  showxform:=@appmethods.mmishowxform;'#13#10'  closexform:=@appmetho'
  +'ds.mmiclosexform;'#13#10'  setpropertyvalue:=@AppMethods.mmisetpropertyvalu'
  +'e;'#13#10'  setpropertyvalueindexed:=@AppMethods.mmisetpropertyvalueindexed'
  +';'#13#10'  getpropertyvalue:=@AppMethods.mmigetpropertyvalue;'#13#10'  conf'
  +'irm:=@AppMethods.mmiconfirm;'#13#10'  prompt:=@AppMethods.mmiprompt;'#13#10
  +'  copytoclip:=@AppMethods.mmiCopyToClip;'#13#10'  copyfromclip:=@AppMethods'
  +'.mmiCopyFromClip;'#13#10'  LoadTableFromExcelCopy:=@AppMethods.mmiLoadTable'
  +'FromExcelCopy;'#13#10'  LoadTableFromNumArray:=@AppMethods.mmiLoadTableFrom'
  +'NumArray;'#13#10'  GetTableDataArray:=@AppMethods.mmiGetTableDataArray;'#13
  +#10'  doevent:=@appmethods.mmiDoEvent;'#13#10'  movecomponent:=@appmethods.m'
  +'miMoveComponent;'#13#10'  copycomponent:=@appmethods.mmiCopyComponent;'#13
  +#10'  deletecomponent:=@appmethods.mmiDeleteComponent;'#13#10'  getgpuparamn'
  +'umvalue:=@appmethods.mmiGetGPUParamNumValue;'#13#10'  getgpuconstintvalue:='
  +'@appmethods.mmiGetGPUConstIntValue;'#13#10'  setgpuparamnumvalue:=@appmetho'
  +'ds.mmiSetGPUParamNumValue;'#13#10'  setgpuparam2Dnumvalue:=@appmethods.mmiS'
  +'etGPUParam2DNumValue;'#13#10'  setgpuconstintvalue:=@appmethods.mmiSetGPUCo'
  +'nstIntValue;'#13#10'  showbusy:=@appmethods.mmiShowBusy;'#13#10'  hidebusy:'
  ,'=@appmethods.mmiHideBusy;'#13#10'  processmessages:=@appmethods.mmiProcessM'
  +'essages;'#13#10'  movepointerbetweencomponents:=@appmethods.mmimovepointerb'
  +'etweencomponents;'#13#10'  hidepointer:=@appmethods.mmihidepointer;'#13#10
  +'  UserSystemAsString:=@appmethods.mmiUserSystemAsString;'#13#10'  LoadUserS'
  +'ystemString:=@appmethods.mmiLoadUserSystemString;'#13#10'  ConsoleLog:=@app'
  +'methods.mmiConsoleLog;'#13#10'  Array2DToString:=@appmethods.mmiArray2DToSt'
  +'ring;'#13#10'  GetGPUPixelArray:=@appmethods.mmiGetGPUPixelArray;'#13#10'  '
  +'GetGPUPixelArrayAsString:=@appmethods.mmiGetGPUPixelArrayAsString;'#13#10' '
  +' GetGPUStageArray:=@appmethods.mmiGetGPUStageArray;'#13#10'  GetGPUStageArr'
  +'ayAsString:=@appmethods.mmiGetGPUStageArrayAsString;'#13#10'  DebugStart:=@'
  +'appmethods.mmiDebugStart;'#13#10'  RunPython:=@appmethods.mmiRunPython;'#13
  +#10'  SetImageSource:=@appmethods.mmiSetImageSource;'#13#10'end;'#13#10#13#10
  +'procedure TMethodsClass.mmiSetEventsNameSpace(NameSpace:String);'#13#10'beg'
  +'in'#13#10'  asm'#13#10'  pas.InterfaceTypes.EventsNameSpace=NameSpace;'#13
  +#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmishowmessage(msg:Str'
  +'ing);'#13#10'begin'#13#10'  asm'#13#10'  alert(msg);'#13#10'  end;'#13#10'e'
  +'nd;'#13#10'procedure TMethodsClass.mmisetpropertyvalue(nodeName:String;prop'
  +'Name:String;newValue:String);'#13#10'begin'#13#10'  asm'#13#10'  pas.NodeUt'
  +'ils.EditAttributeValue2(nodeName,pas.InterfaceTypes.EventsNameSpace,propNam'
  +'e,newValue);'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmise'
  +'tpropertyvalueindexed(nodeName:String;propName:String;newValue:TStringArray'
  +'; x,y:integer);'#13#10'begin'#13#10'  asm'#13#10'  pas.NodeUtils.EditAttrib'
  +'uteValueIndexed(nodeName,pas.InterfaceTypes.EventsNameSpace,propName,newVal'
  +'ue,x,y);'#13#10#13#10#13#10'  if (pas.InterfaceTypes.EventsNameSpace!='''')'
  +' {'#13#10#13#10'     var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtil'
  +'s.SystemNodeTree,nodeName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10
  +'     if (mynode!=null) {'#13#10'       if (myNode.NodeType==''TXCompositeIn'
  +'tf'') {'#13#10'          // find the composite container'#13#10'          v'
  +'ar CompositeContainer=pas.XComposite.FindCompositeContainer(myNode);'#13#10
  +'          // set the equivalent property'#13#10'          if (CompositeCont'
  +'ainer!=null) {'#13#10'            CompositeContainer.SetAttributeValue(prop'
  +'Name,newValue);'#13#10'          }'#13#10'       }'#13#10'     }'#13#10'  }'
  +#13#10'  end;'#13#10'end;'#13#10'function TMethodsClass.mmigetpropertyvalue('
  +'nodeName:String;propName:String):String;'#13#10'var'#13#10'  val:String;'#13
  +#10'begin'#13#10'  asm'#13#10'  var myNode=pas.NodeUtils.FindDataNodeById(pa'
  +'s.NodeUtils.SystemNodeTree,nodeName,pas.InterfaceTypes.EventsNameSpace,true'
  +');'#13#10'  if (myNode!=null) {'#13#10'    // special case for actual heigh'
  +'t/width attributes...'#13#10'    if ((propName==''ActualHeight'')||(propNam'
  +'e==''ActualWidth'')) {'#13#10'      //alert(''mmigetpropertyvalue resetting'
  +' h/w'');'#13#10'      pas.XIFrame.ResetHWAttributes(myNode);'#13#10'    }'
  +#13#10'    var attr=myNode.GetAttributeAnyCase(propName,false);'#13#10'    i'
  +'f (attr!=null) {'#13#10'      val=attr.AttribValue;'#13#10'      }'#13#10' '
  +'     else val='''';'#13#10'    }'#13#10'  else  {'#13#10'    val='''';'#13
  +#10'    }'#13#10'  end;'#13#10'  result:=val;'#13#10'end;'#13#10'//function '
  +'TMethodsClass.mmigetpropertyvalueindexed(nodeName:String;propName:String; x'
  +',y,w,h:integer):TstringArray;'#13#10'//begin'#13#10'//  //!!!!'#13#10'//  a'
  +'sm'#13#10'//  end;'#13#10'//end;'#13#10'Function TMethodsClass.mmiconfirm(T'
  +'extMessage:string):boolean;'#13#10'var'#13#10'  ok:boolean;'#13#10'begin'#13
  +#10'  asm'#13#10'  //ok=pas.StringUtils.confirm(TextMessage);'#13#10'  ok=pa'
  +'s.XObjectInsp.XIDEConfirm(TextMessage);'#13#10'  end;'#13#10'  result:=ok;'
  +#13#10'end;'#13#10'Function TMethodsClass.mmiprompt(TextMessage,promptString'
  +':string):string;'#13#10'var'#13#10'  res:String;'#13#10'begin'#13#10'  asm'
  +#13#10'  //res=pas.StringUtils.prompt(TextMessage,promptString);'#13#10'  re'
  +'s=pas.XObjectInsp.XIDEPrompt(TextMessage,promptString);'#13#10'  end;'#13#10
  +'  result:=res;'#13#10'end;'#13#10'procedure TMethodsClass.mmiShowXForm(XFor'
  +'mID:String; modal:Boolean);'#13#10'begin'#13#10'  asm'#13#10'  //alert(''ca'
  +'lling showxform ''+XFormID+'' ns=''+pas.InterfaceTypes.EventsNameSpace);'#13
  +#10'  pas.XForm.ShowXForm(XFormID,modal,pas.InterfaceTypes.EventsNameSpace);'
  +#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiCloseXForm(XForm'
  +'ID:String);'#13#10'begin'#13#10'  asm'#13#10'  pas.XForm.CloseXForm(XFormID'
  +',pas.InterfaceTypes.EventsNameSpace);'#13#10'  end;'#13#10'end;'#13#10'proc'
  +'edure TMethodsClass.mmiCopyToClip(str:String);'#13#10'begin'#13#10'  asm'#13
  +#10'  pas.NodeUtils.myCopyToClip(''String'',str);'#13#10'  end;'#13#10'end;'
  +#13#10'function TMethodsClass.mmiCopyFromClip(e:TEventStatus):String;'#13#10
  ,'var'#13#10'  str:String;'#13#10'begin'#13#10'  // CopyFromClip is an async '
  +'function (required for browser use), so it must be coded in the'#13#10'  //'
  +' ''Init'' section of an event handler. The result here is a blank string.'
  +#13#10'  // mygetClipboardData pops up the paste dialog form, where the user'
  +' must press Ctrl-V.'#13#10'  // The pasted string is then held in e.ReturnS'
  +'tring, which cn be picked up in the'#13#10'  // ''Main'' section of the eve'
  +'nt handler.'#13#10'  str:='''';'#13#10'  asm'#13#10'    if (pas.EventLoggin'
  +'g.MacroEventList.Replaying==false)'#13#10'    {'#13#10'      //alert(''Copy'
  +'FromClip. not replaying'');'#13#10'      if (e!=null)'#13#10'      {'#13#10
  +'        if (e.InitRunning==false) {'#13#10'          alert(''Warning: CopyF'
  +'romClip must be called from the "Init" section of an event handler'');'#13
  +#10'          }'#13#10'        e.AsyncProcsRunning.Add(''CopyFromClip'');'#13
  +#10'        //alert(''mmiCopyFromClip. completion event is ''+e.EventType);'
  +#13#10'        pas.PasteDialogUnit.CompletionEvent=e;'#13#10'        var str'
  +'=pas.NodeUtils.mygetClipboardData(''String'');'#13#10'      }'#13#10'      '
  +'else'#13#10'        alert(''CopyFromClip must be called with parameter "e"'
  +''');'#13#10'    }'#13#10'    else'#13#10'    {'#13#10'      // replaying an'
  +' event, so can''t handle async stuff...'#13#10'      // Instead, pop the or'
  +'iginal pasted string off the eventlist.'#13#10'      var macroEvent=pas.Eve'
  +'ntLogging.AdvanceEventLog();'#13#10'      if (macroEvent.EventType!=''MemoP'
  +'aste'')'#13#10'      {'#13#10'        alert(''oops cannot retrieve original'
  +' pasted input'');'#13#10'        alert(''found event ''+macroEvent.EventTyp'
  +'e+'' ''+macroEvent.NodeId);'#13#10'      }'#13#10'      else'#13#10'      {'
  +#13#10'        str=macroEvent.eventvalue;'#13#10'        e.ReturnString=str;'
  +#13#10'        //alert(''found MemoPaste.  str=''+str);'#13#10'      }'#13#10
  +'    }'#13#10'  end;'#13#10'  result:=str;   // have to await user pressing '
  +'ctrl-v to get pasted data'#13#10'end;'#13#10#13#10'procedure TMethodsClass.'
  +'mmiLoadTableFromExcelCopy(TableName,CopiedString:String);'#13#10'begin'#13
  +#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils'
  +'.SystemNodeTree,TableName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10
  +'    if ((myNode!=null)&&(myNode.NodeType==''TXTable''))'#13#10'    {'#13#10
  +'      myNode.LoadTableFromExcelCopy(CopiedString);'#13#10'    }'#13#10'  en'
  +'d;'#13#10'end;'#13#10#13#10'procedure TMethodsClass.mmiLoadTableFromNumArra'
  +'y(TableName:String;NumArray:T2DNumArray);'#13#10'begin'#13#10'  asm'#13#10
  +'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,'
  +'TableName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myNode!'
  +'=null)&&(myNode.NodeType==''TXTable''))'#13#10'    {'#13#10'      myNode.Lo'
  +'adTableFromNumArray(NumArray);'#13#10'    }'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'function TMethodsClass.mmiGetTableDataArray(TableName:String;SkipHead'
  +'er:Boolean):T2DStringArray;'#13#10'var'#13#10'  arr:T2DStringArray;'#13#10
  +'begin'#13#10'  setlength(arr,0);'#13#10'  asm'#13#10'    var myNode=pas.Nod'
  +'eUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,TableName,pas.Interfac'
  +'eTypes.EventsNameSpace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeTy'
  +'pe==''TXTable''))'#13#10'    {'#13#10'      arr = myNode.GetCellsAsArray(Sk'
  +'ipHeader);'#13#10'    }'#13#10'  end;'#13#10'  result:=arr;'#13#10'end;'#13
  +#10#13#10'procedure TMethodsClass.mmiDoEvent(EventType,NodeId,myValue:String'
  +');'#13#10'begin'#13#10'  asm'#13#10'  if (myValue==undefined) {myValue='''''
  +';}'#13#10'  pas.EventLogging.ReplayEvent(null,EventType,NodeId,pas.Interfac'
  +'eTypes.EventsNameSpace,myValue);'#13#10#13#10'  end;'#13#10'end;'#13#10#13
  +#10'procedure TMethodsClass.mmiMoveComponent(nodeId:string;NewParentId:strin'
  +'g);'#13#10'begin'#13#10'  asm'#13#10'  pas.XObjectInsp.OIMoveItem(nodeId,pa'
  +'s.InterfaceTypes.EventsNameSpace,NewParentId);'#13#10'  end;'#13#10'end;'#13
  +#10'procedure TMethodsClass.mmiCopyComponent(nodeId,NewParentId,NewName:stri'
  +'ng);'#13#10'begin'#13#10'  asm'#13#10'  pas.XObjectInsp.OICopyToNewParent(n'
  +'odeId,pas.InterfaceTypes.EventsNameSpace,NewParentId,NewName);'#13#10'  end'
  +';'#13#10'end;'#13#10'function TMethodsClass.mmiDeleteComponent(nodeId:strin'
  +'g;ShowNotFoundMsg:Boolean=true):Boolean;'#13#10'var'#13#10'  Deleted:Boolea'
  +'n;'#13#10'begin'#13#10'  asm'#13#10'  Deleted=pas.XObjectInsp.OIDeleteItem('
  +'nodeId,pas.InterfaceTypes.EventsNameSpace,ShowNotFoundMsg);'#13#10'  end;'
  +#13#10'  result:=Deleted;'#13#10'end;'#13#10'procedure TMethodsClass.mmiSetG'
  +'PUParamNumValue(GPUName,pName:String;pValue:TNumArray);'#13#10'begin'#13#10
  +'  asm'#13#10'  //alert(''mmiSetGPUParamNumValue ''+GPUName+'' ''+pName);'#13
  +#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTr'
  +'ee,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myNode'
  ,'!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      //alert(''calli'
  +'ng SetParamNumValue ''+pName+'' ''+pValue);'#13#10'      myNode.SetParamNum'
  +'Value(pName,pValue,true);'#13#10'    }'#13#10'  end;'#13#10'end;'#13#10'pro'
  +'cedure TMethodsClass.mmiSetGPUParam2DNumValue(GPUName,pName:String;pValue:T'
  +'2DNumArray);'#13#10'begin'#13#10'  asm'#13#10'  //alert(''mmiSetGPUParam2DN'
  +'umValue ''+GPUName+'' ''+pName);'#13#10'    var myNode=pas.NodeUtils.FindDa'
  +'taNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNa'
  +'meSpace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanv'
  +'as'')) {'#13#10'      //alert(''calling SetParamNumValue ''+pName+'' ''+pVa'
  +'lue);'#13#10'      myNode.SetParam2DNumValue(pName,pValue,true);'#13#10'   '
  +' }'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiSetGPUConstI'
  +'ntValue(GPUName,pName:String;pValue:integer);'#13#10'begin'#13#10'asm'#13#10
  +'//alert(''mmiSetGPUConstIntValue ''+GPUName+'' ''+pName);'#13#10'  var myNo'
  +'de=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.'
  +'InterfaceTypes.EventsNameSpace,true);'#13#10'  if ((myNode!=null)&&(myNode.'
  +'NodeType==''TXGPUCanvas'')) {'#13#10'    //alert(''calling SetConstIntValue'
  +' ''+pName+'' ''+pValue);'#13#10'    myNode.SetConstIntValue(pName,pValue);'
  +#13#10'  }'#13#10'end;'#13#10'end;'#13#10'function TMethodsClass.mmiGetGPUPa'
  +'ramNumValue(GPUName,pName:String):TNumArray;'#13#10'var'#13#10'  pval:TNumA'
  +'rray;'#13#10'begin'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDat'
  +'aNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNam'
  +'eSpace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanva'
  +'s'')) {'#13#10'      pval=myNode.GetParamNumValue(pName);'#13#10'    }'#13
  +#10'  end;'#13#10'  result:=pval;'#13#10'end;'#13#10'function TMethodsClass.'
  +'mmiGetGPUConstIntValue(GPUName,pName:String):integer;'#13#10'var'#13#10'  p'
  +'val:integer;'#13#10'begin'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.'
  +'FindDataNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.Ev'
  +'entsNameSpace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXG'
  +'PUCanvas'')) {'#13#10'      pval=myNode.GetConstIntValue(pName);'#13#10'   '
  +' }'#13#10'  end;'#13#10'  result:=pval;'#13#10'end;'#13#10#13#10'procedure '
  +'TMethodsClass.mmiStartMain(e:TEventStatus);'#13#10'begin'#13#10'  // eg. af'
  +'ter the async function in an event ''Init'' section is complete, fire off'
  +#13#10'  // the event handler again to process the ''Main'' section.'#13#10
  +'  asm'#13#10'    //console.log(this.EventType+'' ''+this.NodeId);'#13#10'  '
  +'  //console.log(this);'#13#10'    var evt = e.EventType;'#13#10'    var nid'
  +' = e.NodeId;'#13#10'    var ns = e.NameSpace;'#13#10'    var eob = e;'#13#10
  +'    setTimeout(function(){pas.Events.handleEvent(eob,'#13#10'              '
  +'               evt,'#13#10'                             nid,'#13#10'       '
  +'                      ns,'#13#10'                             '''','''');  '
  +'}, 100);'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiShowBu'
  +'sy(e:TEventStatus);'#13#10'begin'#13#10'  // ShowBusy is an async function '
  +'(required for browser use), so it must be coded in the'#13#10'  // ''Init'''
  +' section of an event handler.'#13#10'  asm'#13#10'    if (pas.EventLogging.'
  +'MacroEventList.Replaying==false)'#13#10'    {'#13#10'      if (e!=null)'#13
  +#10'      {'#13#10'        if (e.InitRunning==false) {'#13#10'          aler'
  +'t(''Warning: ShowBusy must be called from the "Init" section of an event ha'
  +'ndler'');'#13#10'          }'#13#10'        e.AsyncProcsRunning.Add(''ShowB'
  +'usy'');'#13#10'//        pas.PasteDialogUnit.CompletionEvent=e;'#13#10'    '
  +'    var ob=document.getElementById(''Grey99'');'#13#10'        if (ob==null'
  +') {'#13#10'          pas.HTMLUtils.ShowGreyOverlay(''UIRoot'',''Grey99'');'
  +#13#10'        }'#13#10'      }'#13#10'      else'#13#10'        alert(''Sho'
  +'wBusy must be called with parameter "e"'');'#13#10'    }'#13#10'  end;'#13
  +#10'end;'#13#10'procedure TMethodsClass.mmiHideBusy;'#13#10'begin'#13#10'  a'
  +'sm'#13#10'    pas.HTMLUtils.DeleteGreyOverlay(''Grey99'');'#13#10'  end;'#13
  +#10'end;'#13#10'procedure TMethodsClass.mmiProcessMessages;'#13#10'begin'#13
  +#10'  asm'#13#10'    //!!!!'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure'
  +' TMethodsClass.mmiMovePointerBetweenComponents(NodeName1,NodeName2,Sub1,Sub'
  +'2:String);      //!!!!namespace???'#13#10'begin'#13#10'  asm'#13#10'    pas'
  +'.EventLogging.MovePointer(EventsNameSpace,NodeName1,NodeName2,Sub1,Sub2,fal'
  +'se);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TMethodsClass.mmiHide'
  +'Pointer;'#13#10'begin'#13#10'  asm'#13#10'    var ptr = document.getElement'
  +'ById("AutomatedCursor");'#13#10'    ptr.style.display = "none";'#13#10'  en'
  +'d;'#13#10'end;'#13#10#13#10'function TMethodsClass.mmiUserSystemAsString():'
  +'String;'#13#10'var'#13#10'  SystemString:String;'#13#10'begin'#13#10'  asm'
  ,#13#10'  SystemString=pas.XObjectInsp.BuildSystemString(false);'#13#10'  end'
  +';'#13#10'  result:=SystemString;'#13#10'end;'#13#10#13#10'procedure TMethod'
  +'sClass.mmiLoadUserSystemString(SystemString:String);'#13#10'begin'#13#10'  '
  +'asm'#13#10'    pas.NodeUtils.StartingUp=false;'#13#10'    pas.XObjectInsp.D'
  +'oSystemLoad(SystemString,'''');'#13#10'  end;'#13#10'end;'#13#10#13#10'proc'
  +'edure TMethodsClass.mmiConsoleLog(txt:String);'#13#10'begin'#13#10'  asm'#13
  +#10'    console.log(txt);'#13#10'  end;'#13#10'end;'#13#10#13#10'function TM'
  +'ethodsClass.mmiArray2DToString(arr:T2DNumArray):String;'#13#10'var'#13#10' '
  +' str:String;'#13#10'begin'#13#10'  asm'#13#10'    str=pas.StringUtils.Num2d'
  +'ArrayToString(arr);'#13#10'  end;'#13#10'  result:=str;'#13#10'end;'#13#10
  +#13#10'function TMethodsClass.mmiGetGPUPixelArray(GPUName:String):T3DNumArra'
  +'y;'#13#10'var'#13#10'  pxval:T3DNumArray;'#13#10'begin'#13#10'  pxval:=nil;'
  +#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUt'
  +'ils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10
  +'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      '
  +'pxval=pas.XGPUCanvas.GetOutputArrayValue(GPUName);'#13#10'    }'#13#10'  en'
  +'d;'#13#10'  result:=pxval;'#13#10'end;'#13#10#13#10'function TMethodsClass.'
  +'mmiGetGPUPixelArrayAsString(GPUName:String):String;'#13#10'var'#13#10'  pxv'
  +'al:String;'#13#10'begin'#13#10'  pxval:='''';'#13#10'  asm'#13#10'    var m'
  +'yNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,GPUName,p'
  +'as.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myNode!=null)&&(my'
  +'Node.NodeType==''TXGPUCanvas'')) {'#13#10'      pxval=pas.XGPUCanvas.GetOut'
  +'putArrayString(GPUName);'#13#10'    }'#13#10'  end;'#13#10'  result:=pxval;'
  +#13#10'end;'#13#10#13#10'function TMethodsClass.mmiGetGPUStageArray(GPUName:'
  +'String):T3DNumArray;'#13#10'var'#13#10'  pxval:T3DNumArray;'#13#10'begin'#13
  +#10'  pxval:=nil;'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataN'
  +'odeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameS'
  +'pace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'
  +''')) {'#13#10'      pxval=pas.XGPUCanvas.GetStageArrayValue(GPUName);'#13#10
  +'    }'#13#10'  end;'#13#10'  result:=pxval;'#13#10'end;'#13#10#13#10'functi'
  +'on TMethodsClass.mmiGetGPUStageArrayAsString(GPUName:String):String;'#13#10
  +'var'#13#10'  pxval:String;'#13#10'begin'#13#10'  pxval:='''';'#13#10'  asm'
  +#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNod'
  +'eTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myN'
  +'ode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      pxval=pas.XG'
  +'PUCanvas.GetStageArrayString(GPUName);'#13#10'    }'#13#10'  end;'#13#10'  '
  +'result:=pxval;'#13#10'end;'#13#10'procedure TMethodsClass.mmiDebugStart;'#13
  +#10'begin'#13#10'  asm'#13#10'    debugger;'#13#10'  end;'#13#10'end;'#13#10
  +'procedure TMethodsClass.mmiRunPython(str:String);'#13#10'begin'#13#10'  asm'
  +#13#10'    pyodide.runPython(str);'#13#10'  end;'#13#10'end;'#13#10'procedur'
  +'e TMethodsClass.mmiSetImageSource(nm,str:String);'#13#10'begin'#13#10'  asm'
  +#13#10'    var ob=document.getElementById(nm+"Contents");'#13#10'    if (ob!'
  +'=null) {'#13#10'      ob.src=str;'#13#10'    }'#13#10'  end;'#13#10'end;'#13
  +#10#13#10#13#10'begin'#13#10'  EventsNameSpace:='''';'#13#10'  SetInterfaceC'
  +'ontext;'#13#10'  {$endif}'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('interfacetypesdll','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InterfaceTypesDll;'#13
  +#10'(*'#13#10'   Interface declarations.'#13#10'   For inclusion inside the '
  +'dynamically created dll (fpc compiler), providing functions available in us'
  +'er event code'#13#10'   (also see units CompileUserCode and DllInterface).'
  +#13#10' *)'#13#10'{$mode objfpc}{$H+}'#13#10'{$INTERFACES CORBA}'#13#10'inte'
  +'rface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, EventsInterface'#13#10
  +'  ;'#13#10#13#10'{$ifdef Dll}'#13#10'type'#13#10'Tshowmessage=procedure(msg'
  +':String) of object;                                                        '
  +'stdcall;'#13#10'Tsetpropertyvalue=procedure(nodeName:String;propName:String'
  +';newValue:String) of object;              stdcall;'#13#10'Tsetpropertyvalue'
  +'Indexed=procedure(nodeName:String;propName:String;newValue:TStringArray;x,y'
  +':integer) of object;   stdcall;'#13#10'Tconfirm=function(TextMessage:string'
  +'):boolean of object;                                             stdcall;'
  +#13#10'Tgetpropertyvalue=function(nodeName:String;propName:String):string  o'
  +'f object;                        stdcall;'#13#10'//TgetpropertyvalueIndexed'
  +'=function(nodeName:String;propName:String; x,y,w,h:integer):TStringArray  o'
  +'f object;  stdcall;'#13#10'Tprompt=function(TextMessage,promptString:string'
  +'):string of object;                                  stdcall;'#13#10'Tshowx'
  +'form=procedure(XFormID:String; modal:Boolean) of object;                   '
  +'                    stdcall;'#13#10'Tclosexform=procedure(XFormID:String) o'
  +'f object;                                                     stdcall;'#13
  +#10'TCopyToClip=procedure(str:String) of object;                            '
  +'                             stdcall;'#13#10'TCopyFromClip=function(e:TEven'
  +'tStatus):String of object;                                             stdc'
  +'all;'#13#10'TLoadTableFromExcelCopy=procedure(TableName,CopiedString:String'
  +') of object;                         stdcall;'#13#10'TLoadTableFromNumArray'
  +'=procedure(TableName:String;NumArray:T2DNumArray) of object;               '
  +'   stdcall;'#13#10'TGetTableDataArray=function(TableName:String;SkipHeader:'
  +'Boolean):T2DStringArray of object;       stdcall;'#13#10'TDoEvent=procedure'
  +'(EventType,NodeId,myValue:String) of object;                               '
  +'       stdcall;'#13#10'TMoveComponent=procedure(nodeId:string;NewParentId:s'
  +'tring) of object;                                stdcall;'#13#10'TCopyCompo'
  +'nent=procedure(nodeId,NewParentId,NewName:string) of object;               '
  +'                 stdcall;'#13#10'TDeleteComponent=function(nodeId:string;Sh'
  +'owNotFoundMsg:Boolean=true):Boolean of object;             stdcall;'#13#10
  +'TGetGPUParamNumValue=function(GPUName,pName:String):TNumArray of object;   '
  +'                             stdcall;'#13#10'TGetGPUConstIntValue=function('
  +'GPUName,pName:String):integer of object;                                std'
  +'call;'#13#10'TSetGPUParamNumValue=procedure(GPUName,pName:String;pValue:TNu'
  +'mArray) of object;                        stdcall;'#13#10'TSetGPUParam2DNum'
  +'Value=procedure(GPUName,pName:String;pValue:T2DNumArray) of object;        '
  +'                stdcall;'#13#10'TSetGPUConstIntValue=procedure(GPUName,pNam'
  +'e:String;pValue:integer) of object;                        stdcall;'#13#10
  +'TStartMain=procedure(e:TEventStatus) of object;                        stdc'
  +'all;'#13#10'TShowBusy=procedure(e:TEventStatus) of object;                 '
  +'       stdcall;'#13#10'THideBusy=procedure of object;                      '
  +'  stdcall;'#13#10'TProcessMessages=procedure of object;                    '
  +'    stdcall;'#13#10'TMovePointerBetweenComponents=procedure(NodeName1,NodeN'
  +'ame2,Sub1,Sub2:String) of object; stdcall;'#13#10'THidePointer=procedure of'
  +' object; stdcall;'#13#10'TUserSystemAsString=function():String of object; s'
  +'tdcall;'#13#10'TLoadUserSystemString=procedure(SystemString:String) of obje'
  +'ct; stdcall;'#13#10'TConsoleLog=procedure(txt:String) of object; stdcall;'
  +#13#10'TArray2DToString=function(arr:T2DNumArray):String of object;         '
  +'                        stdcall;'#13#10'TGetGPUPixelArray=function(GPUName:'
  +'String):T3DNumArray of object;                                stdcall;'#13
  +#10'TGetGPUPixelArrayAsString=function(GPUName:String):String of object;    '
  +'                            stdcall;'#13#10'TGetGPUStageArray=function(GPUN'
  +'ame:String):T3DNumArray of object;                                stdcall;'
  +#13#10'TGetGPUStageArrayAsString=function(GPUName:String):String of object; '
  ,'                               stdcall;'#13#10'TDebugStart=procedure of obj'
  +'ect; stdcall;'#13#10'TRunPython=procedure(str:String) of object; stdcall;'
  +#13#10'TSetImageSource=procedure(nm,str:String) of object; stdcall;'#13#10#13
  +#10#13#10'type'#13#10'IMyMethodInterface = interface(IInterface)'#13#10'    '
  +'procedure mmiSetEventsNameSpace(NameSpace:String);  stdcall;'#13#10'    pro'
  +'cedure mmiShowMessage(msg:String); stdcall;'#13#10'    procedure mmiShowXFo'
  +'rm(XFormID:String; modal:Boolean);  stdcall;'#13#10'    procedure mmiCloseX'
  +'Form(XFormID:String);  stdcall;'#13#10'    procedure mmiSetPropertyValue(no'
  +'deName:String;propName:String;newValue:String);  stdcall;'#13#10'    proced'
  +'ure mmiSetPropertyValueIndexed(nodeName:String;propName:String;newValue:TSt'
  +'ringArray; x,y:integer);  stdcall;'#13#10'    function mmiGetPropertyValue('
  +'nodeName:String;propName:String):string;  stdcall;'#13#10'//    function mm'
  +'iGetPropertyValueIndexed(nodeName:String;propName:String; x,y,w,h:integer):'
  +'TstringArray;  stdcall;'#13#10'    Function mmiconfirm(TextMessage:string):'
  +'boolean;  stdcall;'#13#10'    Function mmiprompt(TextMessage,promptString:s'
  +'tring):string;  stdcall;'#13#10'    procedure mmiCopyToClip(str:String);  s'
  +'tdcall;'#13#10'    function mmiCopyFromClip(e:TEventStatus):String;  stdcal'
  +'l;'#13#10'    procedure mmiLoadTableFromExcelCopy(TableName,CopiedString:St'
  +'ring); stdcall;'#13#10'    procedure mmiLoadTableFromNumArray(TableName:Str'
  +'ing;NumArray:T2DNumArray); stdcall;'#13#10'    function mmiGetTableDataArra'
  +'y(TableName:String;SkipHeader:Boolean):T2DStringArray; stdcall;'#13#10'    '
  +'procedure mmiDoEvent(EventType,NodeId,myValue:String);   stdcall;'#13#10'  '
  +'  procedure mmiMoveComponent(nodeId:string;NewParentId:string);  stdcall;'
  +#13#10'    procedure mmiCopyComponent(nodeId,NewParentId,NewName:string);  s'
  +'tdcall;'#13#10'    function mmiDeleteComponent(nodeId:string;ShowNotFoundMs'
  +'g:Boolean=true):Boolean;  stdcall;'#13#10'    function mmiGetGPUParamNumVal'
  +'ue(GPUName,pName:String):TNumArray;  stdcall;'#13#10'    function mmiGetGPU'
  +'ConstIntValue(GPUName,pName:String):integer;  stdcall;'#13#10'    procedure'
  +' mmiSetGPUParamNumValue(GPUName,pName:String;pValue:TNumArray);  stdcall;'
  +#13#10'    procedure mmiSetGPUParam2DNumValue(GPUName,pName:String;pValue:T2'
  +'DNumArray);  stdcall;'#13#10'    procedure mmiSetGPUConstIntValue(GPUName,p'
  +'Name:String;pValue:integer);  stdcall;'#13#10'    procedure mmiStartMain(e:'
  +'TEventStatus); stdcall;'#13#10'    procedure mmiShowBusy(e:TEventStatus); s'
  +'tdcall;'#13#10'    procedure mmiHideBusy; stdcall;'#13#10'    procedure mmi'
  +'ProcessMessages; stdcall;'#13#10'    procedure mmiMovePointerBetweenCompone'
  +'nts(NodeName1,NodeName2,Sub1,Sub2:String); stdcall;'#13#10'    procedure mm'
  +'iHidePointer; stdcall;'#13#10'    function mmiUserSystemAsString():String; '
  +'stdcall;'#13#10'    procedure mmiLoadUserSystemString(SystemString:String);'
  +' stdcall;'#13#10'    procedure mmiConsoleLog(txt:String);  stdcall;'#13#10
  +'    function mmiArray2DToString(arr:T2DNumArray):String;         stdcall;'
  +#13#10'    function mmiGetGPUPixelArray(GPUName:String):T3DNumArray;        '
  +'                        stdcall;'#13#10'    function mmiGetGPUPixelArrayAsS'
  +'tring(GPUName:String):String;                             stdcall;'#13#10' '
  +'   function mmiGetGPUStageArray(GPUName:String):T3DNumArray;               '
  +'                 stdcall;'#13#10'    function mmiGetGPUStageArrayAsString(G'
  +'PUName:String):String;                             stdcall;'#13#10'    proc'
  +'edure mmiDebugStart; stdcall;'#13#10'    procedure mmiRunPython(str:String)'
  +'; stdcall;'#13#10'    procedure mmiSetImageSource(nm,str:String); stdcall;'
  +#13#10'end;'#13#10#13#10#13#10'var AppMethods : IMyMethodInterface;'#13#10#13
  +#10'var'#13#10'showmessage:Tshowmessage;'#13#10'showxform:Tshowxform;'#13#10
  +'closexform:Tclosexform;'#13#10'confirm:Tconfirm;'#13#10'prompt:Tprompt;'#13
  +#10'setpropertyvalue:Tsetpropertyvalue;'#13#10'setpropertyvalueindexed:Tsetp'
  +'ropertyvalueindexed;'#13#10'getpropertyvalue:Tgetpropertyvalue;'#13#10'//ge'
  +'tpropertyvalueindexed:Tgetpropertyvalueindexed;'#13#10'copytoclip:TCopyToCl'
  +'ip;'#13#10'copyfromclip:TCopyFromClip;'#13#10'LoadTableFromExcelCopy:TLoadT'
  +'ableFromExcelCopy;'#13#10'LoadTableFromNumArray:TLoadTableFromNumArray;'#13
  +#10'GetTableDataArray:TGetTableDataArray;'#13#10'doevent:TDoEvent;'#13#10'mo'
  +'vecomponent:TMoveComponent;'#13#10'copycomponent:TCopyComponent;'#13#10'del'
  +'etecomponent:TDeleteComponent;'#13#10'getgpuparamnumvalue:TGetGPUParamNumVa'
  +'lue;'#13#10'getgpuconstintvalue:TGetGPUConstIntValue;'#13#10'setgpuparamnum'
  +'value:TSetGPUParamNumValue;'#13#10'setgpuparam2Dnumvalue:TSetGPUParam2DNumV'
  +'alue;'#13#10'setgpuconstintvalue:TSetGPUConstIntValue;'#13#10'startmain:TSt'
  +'artMain;'#13#10'showbusy:TShowBusy;'#13#10'hidebusy:THideBusy;'#13#10'Proce'
  +'ssMessages:TProcessMessages;'#13#10'MovePointerBetweenComponents:TMovePoint'
  ,'erBetweenComponents;'#13#10'HidePointer:THidePointer;'#13#10'UserSystemAsSt'
  +'ring:TUserSystemAsString;'#13#10'LoadUserSystemString:TLoadUserSystemString'
  +';'#13#10'ConsoleLog:TConsoleLog;'#13#10'Array2DToString:TArray2DToString;'
  +#13#10'GetGPUPixelArray:TGetGPUPixelArray;'#13#10'GetGPUPixelArrayAsString:T'
  +'GetGPUPixelArrayAsString;'#13#10'GetGPUStageArray:TGetGPUStageArray;'#13#10
  +'GetGPUStageArrayAsString:TGetGPUStageArrayAsString;'#13#10'DebugStart:TDebu'
  +'gStart;'#13#10'RunPython:TRunPython;'#13#10'SetImageSource:TSetImageSource;'
  +#13#10#13#10#13#10'procedure SetDllContext(mmi : IMyMethodInterface); stdcal'
  +'l;'#13#10'{$endif}'#13#10#13#10#13#10'implementation'#13#10#13#10'{$ifdef D'
  +'ll}'#13#10'procedure SetDllContext(mmi : IMyMethodInterface); stdcall;'#13
  +#10'var'#13#10'  dummy:String;'#13#10'begin'#13#10'  // Map Appmethods onto '
  +'the interface object passed in'#13#10'  AppMethods := mmi;'#13#10#13#10'  s'
  +'howmessage:=@AppMethods.mmishowmessage;'#13#10'  showxform:=@appmethods.mmi'
  +'showxform;'#13#10'  closexform:=@appmethods.mmiclosexform;'#13#10'  setprop'
  +'ertyvalue:=@AppMethods.mmisetpropertyvalue;'#13#10'  setpropertyvalueindexe'
  +'d:=@AppMethods.mmisetpropertyvalueindexed;'#13#10'  getpropertyvalue:=@AppM'
  +'ethods.mmigetpropertyvalue;'#13#10'//  getpropertyvalueindexed:=@AppMethods'
  +'.mmigetpropertyvalueindexed;'#13#10'  confirm:=@AppMethods.mmiconfirm;'#13
  +#10'  prompt:=@AppMethods.mmiprompt;'#13#10'  copytoclip:=@AppMethods.mmiCop'
  +'yToClip;'#13#10'  copyfromclip:=@AppMethods.mmiCopyFromClip;'#13#10'  LoadT'
  +'ableFromExcelCopy:=@AppMethods.mmiLoadTableFromExcelCopy;'#13#10'  LoadTabl'
  +'eFromNumArray:=@AppMethods.mmiLoadTableFromNumArray;'#13#10'  GetTableDataA'
  +'rray:=@AppMethods.mmiGetTableDataArray;'#13#10'  doevent:=@appmethods.mmiDo'
  +'Event;'#13#10'  movecomponent:=@appmethods.mmiMoveComponent;'#13#10'  copyc'
  +'omponent:=@appmethods.mmiCopyComponent;'#13#10'  deletecomponent:=@appmetho'
  +'ds.mmiDeleteComponent;'#13#10'  getgpuparamnumvalue:=@appmethods.mmiGetGPUP'
  +'aramNumValue;'#13#10'  getgpuconstintvalue:=@appmethods.mmiGetGPUConstIntVa'
  +'lue;'#13#10'//  getgpuparamimgvalue:=@appmethods.mmiGetGPUParamImgValue;'#13
  +#10'  setgpuparamnumvalue:=@appmethods.mmiSetGPUParamNumValue;'#13#10'  setg'
  +'puparam2Dnumvalue:=@appmethods.mmiSetGPUParam2DNumValue;'#13#10'  setgpucon'
  +'stintvalue:=@appmethods.mmiSetGPUConstIntValue;'#13#10'//  setgpuparamimgva'
  +'lue:=@appmethods.mmiSetGPUParamImgValue;'#13#10'  startmain:=@appmethods.mm'
  +'iStartMain;'#13#10'  showbusy:=@appmethods.mmiShowBusy;'#13#10'  hidebusy:='
  +'@appmethods.mmiHideBusy;'#13#10'  ProcessMessages:=@appmethods.mmiProcessMe'
  +'ssages;'#13#10'  MovePointerBetweenComponents:=@appmethods.mmiMovePointerBe'
  +'tweenComponents;'#13#10'  HidePointer:=@appmethods.mmiHidePointer;'#13#10' '
  +' UserSystemAsString:=@appmethods.mmiUserSystemAsString;'#13#10'  LoadUserSy'
  +'stemString:=@appmethods.mmiLoadUserSystemString;'#13#10'  ConsoleLog:=@appm'
  +'ethods.mmiConsoleLog;'#13#10'  Array2DToString:=@appmethods.mmiArray2DToStr'
  +'ing;'#13#10'  GetGPUPixelArray:=@appmethods.mmiGetGPUPixelArray;'#13#10'  G'
  +'etGPUPixelArrayAsString:=@appmethods.mmiGetGPUPixelArrayAsString;'#13#10'  '
  +'GetGPUStageArray:=@appmethods.mmiGetGPUStageArray;'#13#10'  GetGPUStageArra'
  +'yAsString:=@appmethods.mmiGetGPUStageArrayAsString;'#13#10'  DebugStart:=@a'
  +'ppmethods.mmiDebugStart;'#13#10'  RunPython:=@appmethods.mmiRunPython;'#13
  +#10'  SetImageSource:=@appmethods.mmiSetImageSource;'#13#10#13#10' // dummy:'
  +'=GetPropertyValue(''UIRoot'',''Name'');     // fudge...didn''t work'#13#10
  +#13#10'end;'#13#10'{$endif}'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('aboutunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit AboutUnit;'#13#10'{$i'
  +'fndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'inte'
  +'rface'#13#10#13#10'uses'#13#10'Classes, SysUtils, StringUtils, NodeUtils, X'
  +'Form,'#13#10'{$ifndef JScript}'#13#10'Forms, Controls, Dialogs,LazsUtils,Ut'
  +'ilsJSCompile,pas2jscompiler,'#13#10'{$ifdef Chromium}'#13#10'uCEFApplicatio'
  +'n,'#13#10'{$endif}'#13#10'{$else}'#13#10'WebTranspilerUtils,HTMLUtils,'#13
  +#10'{$endif}'#13#10'PyXUtils,WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13
  +#10'XLabel, XEditBox'#13#10', EventsInterface;'#13#10#13#10'type'#13#10#13#10
  +'  { TAboutXIDEForm }'#13#10#13#10'  TAboutXIDEForm = class(TXForm)'#13#10' '
  +'   AboutFormXVBox1: TXVBox;'#13#10'    AboutFormXMemo1: TXMemo;'#13#10'    '
  +'{$ifndef JScript}'#13#10'    procedure FormCreate(Sender: TObject);'#13#10
  +'    procedure FormResize(Sender: TObject);'#13#10'    procedure FormShow(Se'
  +'nder: TObject);'#13#10'    {$endif}'#13#10'    procedure BuildText;'#13#10
  +'  private'#13#10#13#10'  public'#13#10#13#10'  end;'#13#10#13#10'var'#13#10
  +'  AboutXIDEForm: TAboutXIDEForm;'#13#10'  AboutFormRoot:TDataNode;'#13#10#13
  +#10'implementation'#13#10#13#10'{$R *.lfm}'#13#10#13#10#13#10#13#10'{ TAbout'
  +'XIDEForm }'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TAboutXIDEForm.F'
  +'ormCreate(Sender: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(se'
  +'lf);'#13#10'  AboutFormRoot:=FindDataNodeById(myNode,''AboutFormXVBox1'','''
  +''',true);'#13#10#13#10'  BuildText;'#13#10#13#10'end;'#13#10#13#10'procedur'
  +'e TAboutXIDEForm.FormResize(Sender: TObject);'#13#10'begin'#13#10'  DoFormR'
  +'esize(self, AboutFormXVBox1);'#13#10'end;'#13#10#13#10'procedure TAboutXIDE'
  +'Form.FormShow(Sender: TObject);'#13#10'begin'#13#10'  BuildText;'#13#10'end'
  +';'#13#10'{$endif}'#13#10'procedure TAboutXIDEForm.BuildText;'#13#10'var'#13
  +#10'  AboutText:String;'#13#10'  str:string;'#13#10'  vs:String;'#13#10'  {$'
  +'ifndef JScript}'#13#10'  MyCompilerObj :TMyCompilerObj;'#13#10'  {$endif}'
  +#13#10'begin'#13#10'  AboutText :='#13#10'  ''           Helping people writ'
  +'e simple apps that work "everywhere" '' + LineEnding'#13#10' +'' '' + LineE'
  +'nding'#13#10'     +''XIDE is a combined Development and Run Time Environmen'
  +'t designed to run in Chrome/Linux/Windows/Android with as little installati'
  +'on or learning curve as possible.'' + LineEnding'#13#10'     +'' '' + LineE'
  +'nding'#13#10'     +''It allows WYSIWYG Pascal/RAD application development i'
  +'n up to date HTML5 browsers and any native code platform that supports Elec'
  +'tron or Lazarus/Pas2JS and the Chromium Embedded Framework.'' + LineEnding'
  +#13#10'     +'''' + LineEnding'#13#10'     +''The target applications are sm'
  +'all, '#226#128#156'in house'#226#128#157', client side, embedded or explora'
  +'tory apps where the focus is on rapid development, specialist functionality'
  +' or collaborative working.'' + LineEnding'#13#10'     +'''' + LineEnding'#13
  +#10'     +''Applications developed for this run time will run client side in'
  +' any of the target environments without modification or dependencies both o'
  +'n line or off line (once the run time has been installed or the web page do'
  +'wnloaded).'' + LineEnding'#13#10'     +'''' + LineEnding'#13#10'     +''   '
  +'     Version <<<XIDE>>> for Chrome'' + LineEnding'#13#10'     +''        Da'
  +'te 13/04/2020'' + LineEnding'#13#10'     +''        Created with'' + LineEn'
  +'ding'#13#10'     +''            ..............Lazarus    <<<LAZ>>>'' + Line'
  +'Ending'#13#10'     +''            ..............FPC        <<<FPC>>>'' + Li'
  +'neEnding'#13#10'     +''            ..............Pas2JS     <<<Pas2JS>>>'''
  +' + LineEnding'#13#10'     {$ifndef JScript}'#13#10'     {$ifdef Chromium}'
  +#13#10'     +''            ..............CEF library <<<CEF>>>'' + LineEndin'
  +'g'#13#10'     {$endif}'#13#10'     {$endif}'#13#10'     {$ifdef Python}'#13
  +#10'     {$ifndef JScript}'#13#10'     +''            ..............Python <'
  +'<<Python>>>'' + LineEnding'#13#10'     {$else}'#13#10'     +''            .'
  +'.............Pyodide     <<<Pyodide>>>'' + LineEnding'#13#10'     {$endif}'
  +#13#10'     {$endif}'#13#10'     +''        Copyright  '#194#169' Steve Wrig'
  +'ht all rights reserved'' + LineEnding'#13#10'     +''        License: GPL'''
  +' + LineEnding'#13#10'     +''                                              '
  +'                 '' + LineEnding'#13#10'     +''Third Party Libraries and T'
  +'ools included in the run time'' + LineEnding'#13#10'     +''            Pas'
  +'2JS (http://wiki.freepascal.org/pas2js)  - GPL/LGPL Licence'' + LineEnding'
  ,#13#10'     +''            GPUJS  (https://github.com/gpujs/gpu.rocks) - MIT'
  +' Licence'' + LineEnding'#13#10'     +''            Pell   (https://github.c'
  +'om/jaredreich/pell) - MIT Licence'' + LineEnding'#13#10'     +''           '
  +' CEF4Delphi  (https://github.com/salvadordf/CEF4Delphi)    - Lesser GNU Gen'
  +'eral Public License'' + LineEnding'#13#10'     +''            Python4Delphi'
  +' (https://github.com/pyscripter/python4delphi) - MIT Licence'' + LineEnding'
  +#13#10'     +''            pyodide (https://github.com/iodide-project/pyodid'
  +'e)  - Mozilla Public License 2.0'' + LineEnding'#13#10'     +''            '
  +'  + support for running pyodide offline from: '' + LineEnding'#13#10'     +'
  +'''                (https://github.com/iodide-project/pyodide/pull/606)  '' '
  +'+ LineEnding'#13#10'     +'''' + LineEnding'#13#10'     +''This program is '
  +'free software: you can redistribute it and/or modify'' + LineEnding'#13#10
  +'     +''    it under the terms of the GNU General Public License as publish'
  +'ed by'' + LineEnding'#13#10'     +''    the Free Software Foundation, eithe'
  +'r version 3 of the License, or'' + LineEnding'#13#10'     +''    any later '
  +'version. See <https://www.gnu.org/licenses/>'' + LineEnding'#13#10'     +'''
  +''' + LineEnding'#13#10'     +''    The program is distributed in the hope t'
  +'hat it will be useful,'' + LineEnding'#13#10'     +''    but WITHOUT ANY WA'
  +'RRANTY; without even the implied warranty of'' + LineEnding'#13#10'     +'''
  +'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the'' + LineE'
  +'nding'#13#10'     +''    GNU General Public License for more details.'' + L'
  +'ineEnding'#13#10' ;'#13#10#13#10#13#10'  str:=AboutText;'#13#10'  str:=mySt'
  +'ringReplace(str,''<<<XIDE>>>'',''0.2.beta'',1,-1);'#13#10'  str:=myStringRe'
  +'place(str,''<<<LAZ>>>'',''2.1.0'',1,-1);'#13#10'  str:=myStringReplace(str,'
  +'''<<<FPC>>>'',''3.3.1'',1,-1);'#13#10#13#10'  {$ifndef JScript}'#13#10'  //'
  +' get version of pas2js'#13#10'  MyCompilerObj :=TMyCompilerObj.Create;'#13
  +#10'  MyCompilerObj.Compiler:=TPas2jsCompiler.Create;'#13#10'  vs:=MyCompile'
  +'rObj.Compiler.GetVersion(false);'#13#10'  str:=myStringReplace(str,''<<<Pas'
  +'2JS>>>'',vs,1,-1);'#13#10'  MyCompilerObj.Compiler.Free;'#13#10'  MyCompile'
  +'rObj.Free;'#13#10'  {$else}'#13#10'  vs:=MyWebCompiler.Compiler.GetVersion('
  +'false);'#13#10'  str:=myStringReplace(str,''<<<Pas2JS>>>'',vs,1,-1);'#13#10
  +'  {$endif}'#13#10#13#10'  {$ifndef JScript}'#13#10'  {$ifdef Chromium}'#13
  +#10'  // get version of cef library'#13#10'  str:=myStringReplace(str,''<<<C'
  +'EF>>>'',GlobalCEFApp.LibCefVersion,1,-1);'#13#10'  //showmessage(''CEF Libr'
  +'ary version ''+GlobalCEFApp.LibCefVersion);'#13#10'  {$endif}'#13#10'  {$en'
  +'dif}'#13#10'  {$ifdef Python}'#13#10'  str:=myStringReplace(str,''<<<Python'
  +'>>>'',PyXUtils.PythonVersion,1,-1);'#13#10'  str:=myStringReplace(str,''<<<'
  +'Pyodide>>>'',''(basvandertol:runlocal)'',1,-1);'#13#10'  //!!!! (version of'
  +' pyodide???)'#13#10'  {$endif}'#13#10#13#10'  AboutFormXMemo1.ItemValue:=st'
  +'r;'#13#10'end;'#13#10#13#10'begin'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('xidehelpunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit XIDEHelpUnit;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'i'
  +'nterface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUti'
  +'ls, XForm,'#13#10'  {$ifndef JScript}'#13#10'  Forms, Controls, Dialogs,Laz'
  +'sUtils, Events, IpHTML,'#13#10'//    {$ifdef Chromium}'#13#10'//    uCEFChr'
  +'omium, uCEFWindowParent, uCEFInterfaces, uCEFConstants, uCEFTypes, uCEFChro'
  +'miumEvents,'#13#10'//    {$endif}'#13#10'  {$else}'#13#10'  HTMLUtils,'#13
  +#10'  {$endif}'#13#10'  WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13#10' '
  +' XLabel, XEditBox'#13#10'  , EventsInterface, XHTMLText, XScrollBox, XHTMLE'
  +'ditor;'#13#10#13#10'type'#13#10#13#10'  { TXIDEHelpForm }'#13#10#13#10'  TX'
  +'IDEHelpForm = class(TXForm)'#13#10'    HelpFormVBox1: TXVBox;'#13#10'    He'
  +'lpHTMLText: TXHTMLText;'#13#10'    XIDEHelpScrollBox: TXScrollBox;'#13#10' '
  +'   {$ifndef JScript}'#13#10'    procedure FormActivate(Sender: TObject);'#13
  +#10'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResi'
  +'ze(Sender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13#10
  +'    procedure LoadNewText(Data: PtrInt);'#13#10'    {$endif}'#13#10'  priva'
  +'te'#13#10#13#10'  public'#13#10'     procedure InitialiseonShow;'#13#10'  e'
  +'nd;'#13#10#13#10'var'#13#10'  XIDEHelpForm: TXIDEHelpForm;'#13#10'  HelpFor'
  +'mRoot:TDataNode;'#13#10#13#10'implementation'#13#10'uses'#13#10'  XObjectIn'
  +'sp;'#13#10#13#10'{$R *.lfm}'#13#10#13#10'const BaseHtml ='#13#10'//''<h1 st'
  +'yle="text-align: center;"><u>Overview</u></h1><h2 style="text-align: center'
  +';">&nbsp;(Helping people write simple apps that work "everywhere")</h2><h3>'
  +'Purpose</h3><p>XIDE is a combined Development and Run Time Environment for '
  +'Pascal and Python. It is designed to work in exactly the same way in&nbsp; '
  +'Chrome,Linux,Windows or Android modes with as close to zero installation or'
  +' learning curve as possible. The initial target applications are "Line of b'
  +'usiness", "in house"client side, embedded or exploratory apps where the foc'
  +'us is on custom functionality and rapid prototyping or collaborative or cro'
  +'ss platform working with cosmetic aspects of the design such as style and s'
  +'peed being a secondary consideration. It is not intended as a tool to devel'
  +'op web pages that are widely distributed to the general public although it '
  +'can be used for prototyping these.</p><h3>Installation</h3><p>In the browse'
  +'r, XIDE is a single page web app with no dependencies. so installation is j'
  +'ust a matter of loading that initial web page using an up to date copy of C'
  +'hrome. In the desktop, XIDE uses a local copy of Free Pascal and Python, so'
  +' these will need to be installed following the relevant instructions on the'
  +'ir web sites.</p><h3>Functionality</h3><p>In order to ensure that any proje'
  +'ct developed with&nbsp; XIDE will run unmodified in all other environments,'
  +' its core components only supports that subset of functionality that exists'
  +' on all platforms. This is typically that found in the browser as this for '
  +'security reasons is the most restrictive environment. However XIDE is also '
  +'designed to be easily extensible in order to support user specific projects'
  +' or hardware requirements that do not need this portability.&nbsp;</p><p>If'
  +' browser specific functionality (e.g. CSS or SVG) is required by the user t'
  +'hen this can be provided by&nbsp; desktop versions of the IDE if the Chromi'
  +'um Embedded Framework (CEF) is supported for that implementation.&nbsp;</p>'
  +'<h3>Unified User Interface</h3><p>The browser supports a number of differen'
  +'t standards as part of its user interface. These include HTML, CSS, SVG&nbs'
  +'p;and GPU to cover page layout, style editing, vector graphics and graphics'
  +' programming respectively. These all require their own conventions to be us'
  +'ed when accessed directly from the browser and/or JavaScript.</p><p>XIDE un'
  +'ifies the users access to these different browser capabilities using a stan'
  +'dardised Object Inspector / Drag and Drop approach for them all. For HTML a'
  +'nd SVG this should appear seamless to the user with all the SVG containers '
  +'and components accessed in an identical manner to HTML so requiring no furt'
  +'her explanation than provided below for basic screen layout and editing.&nb'
  +'sp;</p><h3>CSS Functionality</h3><p>CSS functionality is provided by suppor'
  +'ting a style design tree in addition to the Code and UI design trees descri'
  +'bed below. As with the UI design tree, Style resources (new design rules, t'
  ,'argets, properties and rule types ) are dragged from a resources tree and d'
  +'ropped on the relevant node of the style tree. The style tree also supports'
  +' logical grouping of targets using "AND" and "OR" nodes.&nbsp; This speeds '
  +'up and simplifies the CSS syntax generation considerably compared to direct'
  +' text entry.</p><h3>GPU Code</h3><p>The GPU code capability would normally '
  +'require a separate development environment and a different language to supp'
  +'ort development of code. XIDE encapsulates the complexities of WebGL by tra'
  +'nspiling from (a subset of) pascal into WebGL / JavaScript code. WebGL has '
  +'been chosen rather than say CUDA or OpenCL et. as WebGL is widely supported'
  +' "out of the box"&nbsp; in most browsers and on most processor/GPU combinat'
  +'ions. As such it minimises the&nbsp; installation and configuration needed '
  +'in order to get XIDE running on a new system.</p><p>The Pascal code for the'
  +' GPU is accessed as a property of a GPU Canvas component which has been dro'
  +'pped onto the User Interface layout screen and/or as a node on the Code des'
  +'igner tree.&nbsp; The Pascal GPU code editor follows the same edit/compile/'
  +'debug cycle as for user code in the rest of the system. The differences are'
  +' that this is code for blocks of threads in parallel. The code describes a '
  +'single instruction multiple data (SIMD) approach where all the threads run '
  +'the same code with thread specific code referencing "this.x" and "this.y" t'
  +'o reflect their position in the block of threads. Parameter names are decla'
  +'red using a Paramlist property of the GPU canvas component and their transf'
  +'er and run time execution is controlled by system calls described below. (N'
  +'.B. parameters need to be passed as arrays so even scalar parameters passed'
  +' into the code need to be referenced as follows "myParam[0]" )</p><p>The Pa'
  +'scal GPU code in a thread cannot access variables in other threads because '
  +'these are all executed in an unspecified order depending on the specifics o'
  +'f the GPU available in the host and so allowing access would entail unaccep'
  +'table race conditions. Instead you can synchronise the threads at a number '
  +'of stages by daisy chaining kernels. (Set the TXGPUCanvas property NumKerne'
  +'ls&gt;1) For each kernel in the chain its return value must be set to "MyVa'
  +'lue". The next kernel in the chain can then read all the thread return valu'
  +'es from the previous kernel by reading from "MyArray".The x,y,z, dimensions'
  +' of each Kernel default to the pixel Height, Width, and ZDepth specified in'
  +' their canvas properties and applied to the final graphical kernel. These d'
  +'efault values can be modified for the additional kernels by modifying the "'
  +'S<span style="font-family: Verdana, Arial, sans-serif; font-size: 12px; whi'
  +'te-space: nowrap;">et Output Dimensions</span>" field at the top of the res'
  +'pective kernel code editor. The initial "MyArray" passed to the first kerne'
  +'l in the chain is set as a property of the GPU canvas and can have any x,y,'
  +'z sizes as chosen by the user. The code can access the size of the input ar'
  +'ray by querying the "MyInputXLength","MyInputYLength" and "MyInputZLength" '
  +'parameters respectively. The final&nbsp; &nbsp;kernel is the graphics displ'
  +'ay kernel where you set the r,g,b values as usual.</p><p>Maths functions av'
  +'ailable in the GPU code are as follows:-</p><p></p><ul><li>abs(a) sign(a) t'
  +'runc(a) ceil(a) max(a,b) min(a,b)</li><li>sin(a) cos(a) arcsin(a) arccos(a)'
  +' arctan(a,b)</li><li>sqrt(a) power(a,b) ln(a) log10(a) log2(a)&nbsp;</li></'
  +'ul><p></p><p>At this time, the subset of pascal functionality supported by&'
  +'nbsp; the GPU is limited and no support is provided for the many sophistica'
  +'ted code optimisation options provided by specialist GPU programming enviro'
  +'nments. As such this capability is aimed at problems that can be made "emba'
  +'rrassingly parallel". See https://gpu.rocks/ for full details of the underl'
  +'ying JavaScript to webGL transpiler technology (N.B. Our releases lag their'
  +'s so some of the features described may not be available yet in our version'
  +')<br></p><h3>Designing a User Interface<br></h3><p><b>Resource and Instance'
  +' trees</b></p><p>XIDE uses a very simple paradigm. Essentially, it consists'
  +' of three elements.</p><p></p><ol><li>&nbsp;A resources tree, showing the a'
  +'vailable widgets (visual and non visual)</li><li>&nbsp;A system design tree'
  +' and object property inspector/editor</li><li>&nbsp;A layout panel showing '
  +'a WYSIWYG version of the current page design.</li></ol><p></p> <p>The UI is'
  +' built by pasting nodes from the resource tree to the system design tree.&n'
  +'bsp;</p><p>Each node has object properties defined by a name/value pairs th'
  +'at can be edited using the object inspector or referenced and or updated by'
  +' run time code.</p><p>Events are also available on each widget so that code'
  +' can be attached to them using the built in code editor and compiler.&nbsp;'
  ,'</p><p>Each property can be bound to a selected data source at design time '
  +'and code added to validate its status at run time. (Non visual components a'
  +'re dragged to the root node of the instance tree.)</p><p><b>Available widge'
  +'ts</b></p><p>The widgets listed in the resource tree include both UI and no'
  +'n visual components. The intention is that each widget is self documenting '
  +'and that the set can be extended using third party contributions</p><p><b>R'
  +'esponsive Design</b></p><p>Web development has encouraged new and more flex'
  +'ible approaches to UI design. Unfortunately it has also led to an explosion'
  +' of choice in this area. In practice this fragmentation creates new costs a'
  +'s well as benefits for our target user base. To counter this trend, XIDE on'
  +'ly supports a simple responsive design layout paradigm.</p><p>In practice t'
  +'his consists of a Main page, Tab controls and Popups to define the constitu'
  +'ent pages in a UI design. Horizontal and Vertical layout boxes (together wi'
  +'th associated alignment properties) are then nested within these pages to c'
  +'ontrol the final layout of components on the page.</p><p><b>Writing applica'
  +'tion code</b></p><p>XIDE uses an event driven model where event handlers wr'
  +'itten in Python and/or Pascal can be attached to pre defined events trigger'
  +'ed by objects in the user interface. These procedures can be inspected and/'
  +'or edited by using the object inspector to navigate to the required UI obje'
  +'ct then pressing the ellipsis button to the right of the required event in '
  +'its events tab. This creates an entry for that event handler under the "Eve'
  +'nt Handlers"node in the code design tree. So once a handler has been added '
  +'it can then also be navigated to by selecting it in the code designer and p'
  +'ressing the edit button.&nbsp;</p><p><b>Pascal Syntax</b></p><p>The Pascal '
  +'syntax recognised by XIDE&nbsp;is that used by the Pas2JS variant of Free P'
  +'ascal. (http://wiki.freepascal.org/pas2js) A detail description of the supp'
  +'orted syntax can be found here. (http://wiki.freepascal.org/pas2js#RTL)</p>'
  +'<p><b>Unit Structure</b></p><p>In addition to the event handler nodes, shar'
  +'ed code can be written by adding units directly to the code design tree as '
  +'"Pascal Units" These must have the "Interface"unit added to their uses clau'
  +'se in order to be able to access the XIDE API. In addition, they can access'
  +' any of the standard set of PAS2JS run time library units. (http://wiki.fre'
  +'epascal.org/pas2js#RTL)&nbsp;</p><p>Functions and procedures&nbsp; in these'
  +' "Pascal Unit" notes can be amended, added to or deleted by selecting the n'
  +'ode on the code design tree and pressing the "Edit" button which will bring'
  +' up the code editor screen as previously described for&nbsp; the event hand'
  +'ler code.<br></p><p>After a Pascal unit has been compiled for the first tim'
  +'e in a session,all the procedures and functions declared in it are displaye'
  +'d as its child nodes in the code design tree. Selecting one of these nodes '
  +'and pressing the edit button below will navigate directly to that code. Alt'
  +'ernatively, selecting a node and pressing "Code Search" will list all refer'
  +'ences to that function or procedure allowing you to navigate directly to th'
  +'e most relevant reference.</p><h3><b>Python&nbsp;</b></h3><p>The Python syn'
  +'tax used is version 3.8.&nbsp;</p><p>Python does not have a unit structure '
  +'like Pascal, however blocks of Python code can be added to the Code Designe'
  +'r tree in the same way as Pascal units. The difference is that these will b'
  +'e run&nbsp; when entering run mode. They will be executed in the order they'
  +' occur on the Code Designer tree and can contain initialisation, declaratio'
  +'ns and / or&nbsp; any other valid executable Python Code.&nbsp;</p><p>To ex'
  +'ecute Python code elsewhere, such as in an event handler, then simply invok'
  +'e the "RunPython(<i>......</i>)" procedure with the relevant python code as'
  +' a string parameter,</p><h3>Using Python Interactively</h3><p>Console input'
  +' and output boxes are supplied so that Python can be used interactively. On'
  +' the desktop, the copy of Python being used is the version installed on the'
  +' host machine, see the documentation for that system to review valid syntax'
  +', permissions etc. In the browser, the version of Python used is that suppo'
  +'rted by mozilla (see&nbsp;<a href="https://hacks.mozilla.org/2019/04/pyodid'
  +'e-bringing-the-scientific-python-stack-to-the-browser/">https://hacks.mozil'
  +'la.org/2019/04/pyodide-bringing-the-scientific-python-stack-to-the-browser/'
  +'</a>)</p><p><b>Accessing user interface objects at run time</b></p><p>XIDE '
  +'is designed to be a cross platform rapid application development system. In'
  +' order to do this it uses a text based system description tree (The System '
  +'Design or instance tree) to reflect the state of a users program at all tim'
  +'e. This is similar to the function of the Document Object Model (DOM) in st'
  ,'andard web applications.</p> <p><b>Types of API Calls</b></p><p>In XIDE&nbs'
  +'p;the instance tree describing a users project can be inspected manually us'
  +'ing the Object Inspector. This allows the user to select any node on the tr'
  +'ee and inspect and/or modify its properties or event handlers as required. '
  +'The XIDE&nbsp;API allows the same actions to be available programmatically.'
  +' This ability to generate events using code is particularly useful in autom'
  +'ated testing, asynchronous call back functions, or multi threading applicat'
  +'ions. The functions available fall into eight types (and work in an identic'
  +'al manner in both Pascal and Python) viz:-</p><p></p><ul><li>&nbsp;Dialog b'
  +'oxes</li><li>&nbsp;Get and/or set a property value of a UI object</li><li>&'
  +'nbsp;Save and load user selected data to the clipboard</li><li>&nbsp;copy o'
  +'r delete a UI component or move it to a new parent.</li><li>&nbsp;Add to, o'
  +'r replace, the event response for a UI object and/or trigger such an event '
  +'artificially</li><li>&nbsp;Show or hide a popup form.</li><li>&nbsp;Show or'
  +' hide a busy indicator.</li><li>&nbsp;get and set GPU parameters (integer,n'
  +'umber and image)</li></ul><p></p><p>The detail syntax for these function ca'
  +'lls is appended below. Note that unless explicitly stated, all values are e'
  +'ither strings or string arrays.</p><p><b>Asynchronous Calls, Multi Threadin'
  +'g and Initialization functions</b></p><p>Many web calls issue requests that'
  +' need to wait for a response from a web service, database or other remote s'
  +'ervice provider. Similarly, when starting another thread in parallel, the m'
  +'ain thread will often need to wait for such child threads to return the res'
  +'ults of their work before it can proceed. XIDE&nbsp;allows main event handl'
  +'ers to specify a "initalisation"function. This is a block of code which iss'
  +'ues all such requests prior to running the main event code when they have a'
  +'ll finished executing. See below for the detail syntax of the available cal'
  +'ls.</p><p>Note however that all such asynchronous calls first parameter is '
  +'"e"the event context (automatically declared and populated by Xide, behind '
  +'the scenes, for every XIDE&nbsp;event) from which they have been issued so '
  +'they know where to return without requiring the user to enter complex boile'
  +'rplate code.</p><p><b>List of&nbsp;XIDE&nbsp;specific API procedure and fun'
  +'ction calls</b></p> <p></p><ul><li>Procedure showMessage(TextMessage:string'
  +');</li><li>Procedure consoleLog(TextMessage:string);</li><li>Function&nbsp;'
  +' &nbsp;confirm(TextMessage:string):boolean;</li><li>Function&nbsp; &nbsp;pr'
  +'ompt(TextMessage,promptString:string):string;</li><li></li><li>Procedure Ru'
  +'nPython(str:String);&nbsp; //<i> Executes the given Python script&nbsp;</i>'
  +'</li><li>Procedure debugStart;&nbsp; //<i>&nbsp;This is a browser only proc'
  +'edure (it can be present in desktop code but will be inactive there). In th'
  +'e browser it executes a Javascript "debugger;" statement which starts the n'
  +'ative debug facility to allow single stepping, value inspection etc.</i></l'
  +'i><li>Procedure setPropertyValue(nodeName:String;propName:String;newValue:S'
  +'tring);</li><li>Procedure setPropertyValueIndexed(nodeName:String;propName:'
  +'String;newValue:TStringArray; x,y:integer);</li><li>Function&nbsp; &nbsp;ge'
  +'tPropertyValue(nodeName:String;propName:String):string;</li><li>Function&nb'
  +'sp; &nbsp;getPropertyValueIndexed(nodeName:String;propName:String; x,y,w,h:'
  +'integer):TstringArray; <i>// When accessing array properties, "x" and "y" a'
  +'re the index positions for the top left position for the range to start. "w'
  +'" and "h" are the width and height of the range. The type TStringArray is d'
  +'eclared in pascal as&nbsp; "My string array = Array of String;"&nbsp; when '
  +'accesed as a string it"s format is [["a","b","c"......"z"],["1","2","3"....'
  +'."9"],....[...etc....]]</i></li><li>Procedure copyToClip(str:String);<i> //'
  +'Place the string on the clipboard&nbsp;</i></li><li>Procedure copyFromClip('
  +'e); <i>// Fetch text from clipboard (note that this is an async operation s'
  +'o this line of code can only appear in an initialization tab of an event pr'
  +'ocedure. After this has executed the main event code tab can access the res'
  +'ult using the parameter e.returnString )</i></li><li>Function&nbsp; loadTab'
  +'leFromExcelCopy(TableName,CopiedString:String); //<i> Populate the given TX'
  +'Table component with a string in Excel format (eg. as copied from a spreads'
  +'heet)</i></li><li style="">procedure&nbsp; LoadTableFromNumArray(TableName,'
  +'NumArray:T2DNumArray);&nbsp;<i> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &'
  +'nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Populate the given T'
  +'XTable component from a 2D numeric array&nbsp;&nbsp;</i></li><li style="">f'
  +'unction&nbsp; GetTableDataArray(TableName:String;SkipHeader:Boolean):String'
  +';&nbsp;<span style="font-style: italic;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp'
  ,'; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Fetch the '
  +'cells from the given TXTable component as a 2D string array&nbsp;&nbsp;</sp'
  +'an></li><li>Procedure copycomponent(NodeToBeCopied,NewParentId,NewNodeID:st'
  +'ring);</li><li>Function&nbsp; &nbsp;deletecomponent(NodeID:string):boolean;'
  +' <i>// this returns true if the operation succeeds in deleteing the node (i'
  +'.e. it existed and has been deleted)</i></li><li>Procedure moveComponent(no'
  +'deId,NewParentId:string);<i>// Re-parent the given XIDE component&nbsp;</i>'
  +'</li><li>Procedure doEvent(EventType,NodeId,myValue:string);<i> //Execute t'
  +'he event code for the given XIDE event type. To modify the response to an e'
  +'xiting event add an "EventTrapper" component to the system this will see th'
  +'e full event stream&nbsp; allowing you to filter this for the event of inte'
  +'rest and code the appropriate additional action.&nbsp; Available informatio'
  +'n on each event consists of the following system defined variables. "e.Even'
  +'tType, e.NodeId, e.eventvalue : string;" to then continue to run the defaul'
  +'t event code, set "e.ContinueAfterTrappers = true;" at the end of the event'
  +' handler&nbsp;</i></li><li>Procedure showXForm(XFormID:String; modal:Boolea'
  +'n);</li><li>Procedure closeXForm(XFormID:String);</li><li>Procedure showBus'
  +'y;</li><li>Procedure hideBusy;</li><li>Procedure setGpuParamNumValue(GPUNam'
  +'e,pName:String;pValue:number);</li><li>Procedure setGpuConstIntValue(GPUNam'
  +'e,pName:String;pValue:integer);</li><li>Procedure setGpuParamImgValue(GPUNa'
  +'me,pName:String;pValue:TImgArray);&nbsp;</li><li>Function&nbsp; &nbsp;getGp'
  +'uPramNumValue(GPUName,pName:String):number;&nbsp;&nbsp;</li><li>Function&nb'
  +'sp; &nbsp;getGpuConstIntValue(GPUName,pName:String):integer;&nbsp;&nbsp;</l'
  +'i><li>Function&nbsp; &nbsp;getGpuParamImgValue(GPUName,pName:String):TImgAr'
  +'ray;&nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;getGPUPixelArray(GPUName:Stri'
  +'ng):T3DNumArray;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb'
  +'sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;g'
  +'etGPUPixelArrayAsString(GPUName:String):String;&nbsp; &nbsp; &nbsp; &nbsp; '
  +'&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</li><'
  +'li>Function&nbsp; &nbsp;getGPUStageArray(GPUName:String):T3DNumArray;&nbsp;'
  +' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs'
  +'p; &nbsp; &nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;getGPUStageArrayAsStrin'
  +'g(GPUName:String):String;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &'
  +'nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</li></ul><p><b>App Developm'
  +'ent and Deployment</b></p><p>During the development phase of a project XIDE'
  +'&nbsp;will usually be loaded in interactive app design mode where you can e'
  +'dit the user interface design and the code behind it. Here by default, the '
  +'IDE re-loads the project you were last working on.&nbsp;</p><p>New projects'
  +' can be started by clearing the current system or loading a previously save'
  +'d system from the clipboard. This behaves the same in native host environme'
  +'nts (Windows or Linux) as it does in Chrome or Android. At the end of this '
  +'phase, you will sometimes want to deploy the developed app to end users wit'
  +'hout allowing access to the IDE. In this case, select the "System / Deploy"'
  +' option from the main menu and this will generate a self contained HTML pag'
  +'e implementing your application and the run time environment needed to exec'
  +'ute it, but with the interactive IDE features disabled. You can now load th'
  +'is to a server of your choice, or email directly to your end user so they c'
  +'an run it from their file system.&nbsp;</p><p>Alternatively, if you wish to'
  +' give them access to inspect and perhaps contribute to, or modify, the app,'
  +' then distribute the blank XIDE app for their preferred platform (Chrome / '
  +'Linux / Windows / Android) and use the "System / Save" option to generate a'
  +' app definition file that they can load into it using the "System / Load" o'
  +'ption on the main menu.&nbsp;</p><p><b>Debugging</b></p><p>When testing Pas'
  +'cal code you have written using XIDE, the PAS2JS compiler error messages wi'
  +'ll flag any source code syntax problems. If you click on one of these error'
  +' messages this will position the cursor at the relevant character position '
  +'in the line of code in the XIDE&nbsp;code editor. Run time errors will some'
  +'times be trapped by error handlers built in to XIDE&nbsp;and generate a hel'
  +'pful error message. If this is not sufficient to uniquely identify the caus'
  +'e of the problem then "ctrl shift J" in Chrome will bring up the built in d'
  +'eveloper console which will hopefully provide the additional information yo'
  +'u need to track down the problem. Alternatively, a break point can be set i'
  +'n the code by inserting a "DebugStart;" instruction that will start the nat'
  +'ive browser debug facility at that point.</p><h3>Implementation, Extensibil'
  ,'ity and Licensing<br></h3><p>XIDE is implemented using the Pas2JS dialect o'
  +'f the Object Pascal programming language. This is because it is efficient, '
  +'easy to learn, and is available on a wide range of processor architectures.'
  +'&nbsp;</p><p>Sometimes, as projects go through their life cycle, new more s'
  +'pecialist requirements emerge. At this point the XIDE framework can be exte'
  +'nded using project or platform specific custom components developed in Laza'
  +'rus. Alternatively the HTML and JavaScript code generated by XIDE can be im'
  +'ported into a general-purpose web design tool stack to enable full enterpri'
  +'se level development.&nbsp;</p><p>XIDE is an open source project distribute'
  +'d using the same licence as Lazarus (GPL)</p><h3>Development Roadmap</h3><p'
  +'>As an open source project, the future development of XIDE depends on how m'
  +'any collaborators choose to contribute to the project, and which aspects ar'
  +'e most important to them.&nbsp;</p><p>The initial project has focused on fu'
  +'nctionality rather than style or speed, and on the ability to operate as a '
  +'fully self contained IDE with the minimum of dependencies.&nbsp;</p><p>As t'
  +'he project matures, it is hoped that new collaborators may add web connecti'
  +'vity, database access, comprehensive style support, support for other opera'
  +'ting systems (eg IOS) or browsers other than Chrome.&nbsp;</p><h3>Compatibi'
  +'lity</h3><p>In desktop mode, XIDE is designed to run on platforms supported'
  +' by&nbsp; Lazarus, and optionally, the&nbsp; Chromium Embedded Framework an'
  +'d&nbsp; Python (i.e. most desktop platforms). If CEF or Python is not avail'
  +'able then XIDE can still run but will then not support their specialist fea'
  +'tures.&nbsp;&nbsp;</p><p>In browser mode XIDE should run on any up to date '
  +'HTML5 enabled browser. However as it is targeting closed user groups (where'
  +' the browser can be specified)&nbsp; it is only tested on recent versions o'
  +'f Chrome.&nbsp;</p><p>Alternatively, Electron or Cordova and Crosswalk can '
  +'be used to provide a hybrid implementation of XIDE. This gives full Web con'
  +'nectivity and CSS on a wide range of platforms but with a trade off in term'
  +'s of size,speed and security.</p><p>Note that the Style Designer is only av'
  +'ailable on the Browser versions as it depends on CCS functionality.</p><p><'
  +'br></p><p></p>'';'#13#10'//''<h1 style="text-align: center;"><u>Overview</u'
  +'></h1><h2 style="text-align: center;">&nbsp;(Helping people write simple ap'
  +'ps that work "everywhere")</h2><h3>Purpose</h3><p>XIDE is a combined Develo'
  +'pment and Run Time Environment for Pascal and Python. It is designed to wor'
  +'k in exactly the same way in&nbsp; Chrome,Linux,Windows or Android modes wh'
  +'ile minimising the required learning curve and installation overhead. The i'
  +'nitial target applications are&nbsp;&nbsp;client side, "Line of business", '
  +'embedded or exploratory apps where the focus is on custom functionality and'
  +' rapid prototyping or cross platform working with cosmetic aspects of the d'
  +'esign being a secondary consideration. It is not intended as a tool to deve'
  +'lop web pages that are widely distributed to the general public.</p><h3>Ins'
  +'tallation</h3><p>In the browser, XIDE for Pascal is a single page web app w'
  +'ith no dependencies. so installation is just a matter of loading that initi'
  +'al web page using an up to date copy of Chrome.&nbsp;</p><p>Python in XIDE '
  +'is based on the Mozilla Pyodide project which brings a full data science st'
  +'ack to the browser, including NumPy, Pandas, Scipy, and Matplotlib. This re'
  +'quires additional HTML and JS files to be installed alongside the Main XIDE'
  +' single page app. The version of the Pyodide files we provide can be hosted'
  +' in a local directory, or on a web server so the same functionality is avai'
  +'lable both on-line and off-line with no further dependencies.</p><p>On the '
  +'desktop, XIDE uses a local copy of Free Pascal and of&nbsp; Python, so thes'
  +'e will need to be installed following the relevant instructions on their we'
  +'b sites. Installation of XIDE is then a matter of loading the XIDE.exe and '
  +'using the main menu "Settings" option to point to the relevant Free Pascal '
  +'and Python directories. The XIDE.exe file is compiled to run on either 32 o'
  +'r 64 bit desktops. To customise XIDE or exclusively target 64 bit machines,'
  +' XIDE can be rebuilt from source using Lazarus.</p><h3>Functionality</h3><p'
  +'>XIDE is designed to bring the power of Free Pascal and the convenience of&'
  +'nbsp; Rapid Application Development (RAD) to the browser. It&nbsp; is a "Br'
  +'owser First" approach which delivers cross platform capability by replicati'
  +'ng browser functionality on the desktop in native code. This allows the use'
  +'r to exploit the greater efficiency of compiled native code compared to int'
  +'erpreted browser environments as required. It also allows a single code bas'
  +'e to support multiple different target environments for different user circ'
  ,'umstances or different stages in a project.&nbsp;</p><p>The Python options '
  +'in XIDE adds broader "Data Science" capabilities to the environment and&nbs'
  +'p; allows the more interactive exploratory approach of Python to be exploit'
  +'ed as required. See&nbsp;&nbsp;<a href="https://hacks.mozilla.org/2019/04/p'
  +'yodide-bringing-the-scientific-python-stack-to-the-browser/">https://hacks.'
  +'mozilla.org/2019/04/pyodide-bringing-the-scientific-python-stack-to-the-bro'
  +'wser/</a></p><h3>Unified User Interface</h3><p>The browser supports a numbe'
  +'r of different standards as part of its user interface. These include HTML,'
  +' CSS, SVG&nbsp;and GPU to cover page layout, style editing, vector graphics'
  +' and graphics programming respectively. These all require their own convent'
  +'ions to be used when accessed directly from the browser and/or JavaScript.<'
  +'/p><p>XIDE unifies the users access to these different browser capabilities'
  +' using a standardised Object Inspector / Drag and Drop approach for them al'
  +'l. For HTML and SVG this should appear seamless to the user with all the SV'
  +'G containers and components accessed in an identical manner to HTML so requ'
  +'iring no further explanation than provided below for basic screen layout an'
  +'d editing.&nbsp;</p><h3>CSS Functionality</h3><p>CSS functionality is provi'
  +'ded by supporting a style design tree in addition to the Code and UI design'
  +' trees described below. As with the UI design tree, Style resources (new de'
  +'sign rules, targets, properties and rule types ) are dragged from a resourc'
  +'es tree and dropped on the relevant node of the style tree. The style tree '
  +'also supports logical grouping of targets using "AND" and "OR" nodes.&nbsp;'
  +' This speeds up and simplifies the CSS syntax generation considerably compa'
  +'red to direct text entry.</p><h3>GPU Code</h3><p>The GPU code capability wo'
  +'uld normally require a separate development environment and a specialised l'
  +'anguage to support development of code. XIDE encapsulates the complexities '
  +'of WebGL by transpiling from (a subset of) pascal into WebGL / JavaScript c'
  +'ode. WebGL has been chosen rather than say CUDA or OpenCL et. as WebGL is w'
  +'idely supported "out of the box"&nbsp; in most browsers and on most process'
  +'or/GPU combinations. As such it minimises the&nbsp; installation and config'
  +'uration needed in order to get XIDE running on a new system.</p><p>The Pasc'
  +'al code for the GPU is accessed as a property of a GPU Canvas component whi'
  +'ch has been dropped onto the User Interface layout screen and/or as a node '
  +'on the Code designer tree.&nbsp; The Pascal GPU code editor follows the sam'
  +'e edit/compile/debug cycle as for user code in the rest of the system. The '
  +'differences are that this is code for blocks of threads in parallel. The co'
  +'de describes a single instruction multiple data (SIMD) approach where all t'
  +'he threads run the same code with thread specific code referencing "this.x"'
  +' and "this.y" to reflect their position in the block of threads. Parameter '
  +'names are declared using a Paramlist property of the GPU canvas component a'
  +'nd their transfer and run time execution is controlled by system calls desc'
  +'ribed below. (N.B. parameters need to be passed as arrays so even scalar pa'
  +'rameters passed into the code need to be referenced as follows "myParam[0]"'
  +' )</p><p>The Pascal GPU code in a thread cannot access variables in other t'
  +'hreads because these are all executed in an unspecified order depending on '
  +'the specifics of the GPU available in the host and so allowing access would'
  +' entail unacceptable race conditions. Instead you can synchronise the threa'
  +'ds at a number of stages by daisy chaining kernels. (Set the TXGPUCanvas pr'
  +'operty NumKernels&gt;1) For each kernel in the chain its return value must '
  +'be set to "MyValue". The next kernel in the chain can then read all the thr'
  +'ead return values from the previous kernel by reading from "MyArray".The x,'
  +'y,z, dimensions of each Kernel default to the pixel Height, Width, and ZDep'
  +'th specified in their canvas properties and applied to the final graphical '
  +'kernel. These default values can be modified for the additional kernels by '
  +'modifying the "S<span style="font-family: Verdana, Arial, sans-serif; font-'
  +'size: 12px; white-space: nowrap;">et Output Dimensions</span>" field at the'
  +' top of the respective kernel code editor. The initial "MyArray" passed to '
  +'the first kernel in the chain is set as a property of the GPU canvas and ca'
  +'n have any x,y,z sizes as chosen by the user. The code can access the size '
  +'of the input array by querying the "MyInputXLength","MyInputYLength" and "M'
  +'yInputZLength" parameters respectively. The final&nbsp; &nbsp;kernel is the'
  +' graphics display kernel where you set the r,g,b values as usual.</p><p>Mat'
  +'hs functions available in the GPU code are as follows:-</p><p></p><ul><li>a'
  +'bs(a) sign(a) trunc(a) ceil(a) max(a,b) min(a,b)</li><li>sin(a) cos(a) arcs'
  ,'in(a) arccos(a) arctan(a,b)</li><li>sqrt(a) power(a,b) ln(a) log10(a) log2('
  +'a)&nbsp;</li></ul><p></p><p>At this time, the subset of pascal functionalit'
  +'y supported by&nbsp; the GPU is limited and no support is provided for the '
  +'many sophisticated code optimisation options provided by specialist GPU pro'
  +'gramming environments. As such this capability is aimed at problems that ca'
  +'n be made "embarrassingly parallel". See https://gpu.rocks/ for full detail'
  +'s of the underlying JavaScript to webGL transpiler technology (N.B. Our rel'
  +'eases lag theirs so some of the features described may not be available yet'
  +' in our version)<br></p><h3>Designing a User Interface<br></h3><p><b>Resour'
  +'ce and Instance trees</b></p><p>XIDE uses a very simple paradigm. Essential'
  +'ly, it consists of three elements.</p><p></p><ol><li>&nbsp;A resources tree'
  +', showing the available widgets (visual and non visual)</li><li>&nbsp;A sys'
  +'tem design tree and object property inspector/editor</li><li>&nbsp;A layout'
  +' panel showing a WYSIWYG version of the current page design.</li></ol><p></'
  +'p> <p>The UI is built by pasting nodes from the resource tree to the system'
  +' design tree.&nbsp;</p><p>Each node has object properties defined by a name'
  +'/value pairs that can be edited using the object inspector or referenced an'
  +'d or updated by run time code.</p><p>Events are also available on each widg'
  +'et so that code can be attached to them using the built in code editor and '
  +'compiler.&nbsp;</p><p>Each property can be bound to a selected data source '
  +'at design time and code added to validate its status at run time. (Non visu'
  +'al components are dragged to the root node of the instance tree.)</p><p><b>'
  +'Available widgets</b></p><p>The widgets listed in the resource tree include'
  +' both UI and non visual components. The intention is that each widget is se'
  +'lf documenting and that the set can be extended using third party contribut'
  +'ions</p><p><b>Responsive Design</b></p><p>Web development has encouraged ne'
  +'w and more flexible approaches to UI design. Unfortunately it has also led '
  +'to an explosion of choice in this area. In practice this fragmentation crea'
  +'tes new costs as well as benefits for our target user base. To counter this'
  +' trend, XIDE only supports a simple responsive design layout paradigm.</p><'
  +'p>In practice this consists of a Main page, Tab controls and Popups to defi'
  +'ne the constituent pages in a UI design. Horizontal and Vertical layout box'
  +'es (together with associated alignment properties) are then nested within t'
  +'hese pages to control the final layout of components on the page.</p><p><b>'
  +'Writing application code</b></p><p>XIDE uses an event driven model where ev'
  +'ent handlers written in Python and/or Pascal can be attached to pre defined'
  +' events triggered by objects in the user interface. These procedures can be'
  +' inspected and/or edited by using the object inspector to navigate to the r'
  +'equired UI object then pressing the ellipsis button to the right of the req'
  +'uired event in its events tab. This creates an entry for that event handler'
  +' under the "Event Handlers"node in the code design tree. So once a handler '
  +'has been added it can then also be navigated to by selecting it in the code'
  +' designer and pressing the edit button.&nbsp;</p><p><b>Pascal Syntax</b></p'
  +'><p>The Pascal syntax recognised by XIDE&nbsp;is that used by the Pas2JS va'
  +'riant of Free Pascal. (http://wiki.freepascal.org/pas2js) A detail descript'
  +'ion of the supported syntax can be found here. (http://wiki.freepascal.org/'
  +'pas2js#RTL)</p><p><b>Unit Structure</b></p><p>In addition to the event hand'
  +'ler nodes, shared code can be written by adding units directly to the code '
  +'design tree as "Pascal Units" These must have the "Interface"unit added to '
  +'their uses clause in order to be able to access the XIDE API. In addition, '
  +'they can access any of the standard set of PAS2JS run time library units. ('
  +'http://wiki.freepascal.org/pas2js#RTL)&nbsp;</p><p>Functions and procedures'
  +'&nbsp; in these "Pascal Unit" notes can be amended, added to or deleted by '
  +'selecting the node on the code design tree and pressing the "Edit" button w'
  +'hich will bring up the code editor screen as previously described for&nbsp;'
  +' the event handler code.<br></p><p>After a Pascal unit has been compiled fo'
  +'r the first time in a session,all the procedures and functions declared in '
  +'it are displayed as its child nodes in the code design tree. Selecting one '
  +'of these nodes and pressing the edit button below will navigate directly to'
  +' that code. Alternatively, selecting a node and pressing "Code Search" will'
  +' list all references to that function or procedure allowing you to navigate'
  +' directly to the most relevant reference.</p><h3><b>Python&nbsp;</b></h3><p'
  +'>The Python syntax used is version 3.8.&nbsp;</p><p>Python does not have a '
  +'unit structure like Pascal, however blocks of Python code can be added to t'
  ,'he Code Designer tree in the same way as Pascal units. The difference is th'
  +'at these will be run&nbsp; when entering run mode. They are executed in the'
  +' order they occur on the Code Designer tree and can contain initialisation,'
  +' declarations and / or&nbsp; any other valid executable Python Code.&nbsp;<'
  +'/p><p>To execute Python code elsewhere, such as in an event handler, then s'
  +'imply invoke the "RunPython(<i>......</i>)" procedure with the relevant pyt'
  +'hon code as a string parameter,</p><h3>Using Python Interactively</h3><p>Co'
  +'nsole input and output boxes are supplied so that Python can be used intera'
  +'ctively. On the desktop, the copy of Python being used is the version insta'
  +'lled on the host machine, see the documentation for that system to review v'
  +'alid syntax, permissions etc. In the browser, the version of Python used is'
  +' that supported by mozilla (see&nbsp;<a href="https://hacks.mozilla.org/201'
  +'9/04/pyodide-bringing-the-scientific-python-stack-to-the-browser/">https://'
  +'hacks.mozilla.org/2019/04/pyodide-bringing-the-scientific-python-stack-to-t'
  +'he-browser/</a>)</p><p><b>Accessing user interface objects at run time</b><'
  +'/p><p>XIDE is designed to be a cross platform rapid application development'
  +' system. In order to do this it uses a text based system description tree ('
  +'The System Design or instance tree) to reflect the state of a users program'
  +' at all time. This is similar to the function of the Document Object Model '
  +'(DOM) in standard web applications.</p> <p><b>Types of API Calls</b></p><p>'
  +'In XIDE&nbsp;the instance tree describing a users project can be inspected '
  +'manually using the Object Inspector. This allows the user to select any nod'
  +'e on the tree and inspect and/or modify its properties or event handlers as'
  +' required. The XIDE&nbsp;API allows the same actions to be available progra'
  +'mmatically. This ability to generate events using code is particularly usef'
  +'ul in automated testing, asynchronous call back functions, or multi threadi'
  +'ng applications. The functions available fall into eight types (and work in'
  +' an identical manner in both Pascal and Python) viz:-</p><p></p><ul><li>&nb'
  +'sp;Dialog boxes</li><li>&nbsp;Get and/or set a property value of a UI objec'
  +'t</li><li>&nbsp;Save and load user selected data to the clipboard</li><li>&'
  +'nbsp;copy or delete a UI component or move it to a new parent.</li><li>&nbs'
  +'p;Add to, or replace, the event response for a UI object and/or trigger suc'
  +'h an event artificially</li><li>&nbsp;Show or hide a popup form.</li><li>&n'
  +'bsp;Show or hide a busy indicator.</li><li>&nbsp;get and set GPU parameters'
  +' (integer,number and image)</li></ul><p></p><p>The detail syntax for these '
  +'function calls is appended below. Note that unless explicitly stated, all v'
  +'alues are either strings or string arrays.</p><p><b>Asynchronous Calls, Mul'
  +'ti Threading and Initialization functions</b></p><p>Many web calls issue re'
  +'quests that need to wait for a response from a web service, database or oth'
  +'er remote service provider. Similarly, when starting another thread in para'
  +'llel, the main thread will often need to wait for such child threads to ret'
  +'urn the results of their work before it can proceed. XIDE&nbsp;allows main '
  +'event handlers to specify a "initalisation"function. This is a block of cod'
  +'e which issues all such requests prior to running the main event code when '
  +'they have all finished executing. See below for the detail syntax of the av'
  +'ailable calls.</p><p>Note however that all such asynchronous calls first pa'
  +'rameter is "e"the event context (automatically declared and populated by Xi'
  +'de, behind the scenes, for every XIDE&nbsp;event) from which they have been'
  +' issued so they know where to return without requiring the user to enter co'
  +'mplex boilerplate code.</p><p><b>List of&nbsp;XIDE&nbsp;specific API proced'
  +'ure and function calls</b></p> <p></p><ul><li>Procedure showMessage(TextMes'
  +'sage:string);</li><li>Procedure consoleLog(TextMessage:string);</li><li>Fun'
  +'ction&nbsp; &nbsp;confirm(TextMessage:string):boolean;</li><li>Function&nbs'
  +'p; &nbsp;prompt(TextMessage,promptString:string):string;</li><li></li><li>P'
  +'rocedure RunPython(str:String);&nbsp; //<i> Executes the given Python scrip'
  +'t&nbsp;</i></li><li>Procedure debugStart;&nbsp; //<i>&nbsp;This is a browse'
  +'r only procedure (it can be present in desktop code but will be inactive th'
  +'ere). In the browser it executes a Javascript "debugger;" statement which s'
  +'tarts the native debug facility to allow single stepping, value inspection '
  +'etc.</i></li><li>Procedure setPropertyValue(nodeName:String;propName:String'
  +';newValue:String);</li><li>Procedure setPropertyValueIndexed(nodeName:Strin'
  +'g;propName:String;newValue:TStringArray; x,y:integer);</li><li>Function&nbs'
  +'p; &nbsp;getPropertyValue(nodeName:String;propName:String):string;</li><li>'
  +'Function&nbsp; &nbsp;getPropertyValueIndexed(nodeName:String;propName:Strin'
  ,'g; x,y,w,h:integer):TstringArray; <i>// When accessing array properties, "x'
  +'" and "y" are the index positions for the top left position for the range t'
  +'o start. "w" and "h" are the width and height of the range. The type TStrin'
  +'gArray is declared in pascal as&nbsp; "My string array = Array of String;"&'
  +'nbsp; when accesed as a string it"s format is [["a","b","c"......"z"],["1",'
  +'"2","3"....."9"],....[...etc....]]</i></li><li>Procedure copyToClip(str:Str'
  +'ing);<i> //Place the string on the clipboard&nbsp;</i></li><li>Procedure co'
  +'pyFromClip(e); <i>// Fetch text from clipboard (note that this is an async '
  +'operation so this line of code can only appear in an initialization tab of '
  +'an event procedure. After this has executed the main event code tab can acc'
  +'ess the result using the parameter e.returnString )</i></li><li>Function&nb'
  +'sp; loadTableFromExcelCopy(TableName,CopiedString:String); //<i> Populate t'
  +'he given TXTable component with a string in Excel format (eg. as copied fro'
  +'m a spreadsheet)</i></li><li style="">procedure&nbsp; LoadTableFromNumArray'
  +'(TableName,NumArray:T2DNumArray);&nbsp;<i> &nbsp; &nbsp; &nbsp; &nbsp; &nbs'
  +'p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Populate '
  +'the given TXTable component from a 2D numeric array&nbsp;&nbsp;</i></li><li'
  +' style="">function&nbsp; GetTableDataArray(TableName:String;SkipHeader:Bool'
  +'ean):String;&nbsp;<span style="font-style: italic;"> &nbsp; &nbsp; &nbsp; &'
  +'nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'
  +' Fetch the cells from the given TXTable component as a 2D string array&nbsp'
  +';&nbsp;</span></li><li>Procedure copycomponent(NodeToBeCopied,NewParentId,N'
  +'ewNodeID:string);</li><li>Function&nbsp; &nbsp;deletecomponent(NodeID:strin'
  +'g):boolean; <i>// this returns true if the operation succeeds in deleteing '
  +'the node (i.e. it existed and has been deleted)</i></li><li>Procedure moveC'
  +'omponent(nodeId,NewParentId:string);<i>// Re-parent the given XIDE componen'
  +'t&nbsp;</i></li><li>Procedure doEvent(EventType,NodeId,myValue:string);<i> '
  +'//Execute the event code for the given XIDE event type. To modify the respo'
  +'nse to an exiting event add an "EventTrapper" component to the system this '
  +'will see the full event stream&nbsp; allowing you to filter this for the ev'
  +'ent of interest and code the appropriate additional action.&nbsp; Available'
  +' information on each event consists of the following system defined variabl'
  +'es. "e.EventType, e.NodeId, e.eventvalue : string;" to then continue to run'
  +' the default event code, set "e.ContinueAfterTrappers = true;" at the end o'
  +'f the event handler&nbsp;</i></li><li>Procedure showXForm(XFormID:String; m'
  +'odal:Boolean);</li><li>Procedure closeXForm(XFormID:String);</li><li>Proced'
  +'ure showBusy;</li><li>Procedure hideBusy;</li><li>Procedure setGpuParamNumV'
  +'alue(GPUName,pName:String;pValue:number);</li><li>Procedure setGpuConstIntV'
  +'alue(GPUName,pName:String;pValue:integer);</li><li>Procedure setGpuParamImg'
  +'Value(GPUName,pName:String;pValue:TImgArray);&nbsp;</li><li>Function&nbsp; '
  +'&nbsp;getGpuPramNumValue(GPUName,pName:String):number;&nbsp;&nbsp;</li><li>'
  +'Function&nbsp; &nbsp;getGpuConstIntValue(GPUName,pName:String):integer;&nbs'
  +'p;&nbsp;</li><li>Function&nbsp; &nbsp;getGpuParamImgValue(GPUName,pName:Str'
  +'ing):TImgArray;&nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;getGPUPixelArray(G'
  +'PUName:String):T3DNumArray;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'
  +' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</li><li>Function&nb'
  +'sp; &nbsp;getGPUPixelArrayAsString(GPUName:String):String;&nbsp; &nbsp; &nb'
  +'sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &'
  +'nbsp;</li><li>Function&nbsp; &nbsp;getGPUStageArray(GPUName:String):T3DNumA'
  +'rray;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '
  +'&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;getGPUStageA'
  +'rrayAsString(GPUName:String):String;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs'
  +'p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</li></ul><p><b>A'
  +'pp Development and Deployment</b></p><p>During the development phase of a p'
  +'roject XIDE&nbsp;will usually be loaded in interactive app design mode wher'
  +'e you can edit the user interface design and the code behind it. Here by de'
  +'fault, the IDE re-loads the project you were last working on.&nbsp;</p><p>N'
  +'ew projects can be started by clearing the current system or loading a prev'
  +'iously saved system from the clipboard. This behaves the same in native hos'
  +'t environments (Windows or Linux) as it does in Chrome or Android. At the e'
  +'nd of this phase, you will sometimes want to deploy the developed app to en'
  +'d users without allowing access to the IDE. In this case, select the "Syste'
  +'m / Deploy" option from the main menu and this will generate a self contain'
  +'ed HTML page implementing your application and the run time environment nee'
  ,'ded to execute it, but with the interactive IDE features disabled. You can '
  +'now load this to a server of your choice, or email directly to your end use'
  +'r so they can run it from their file system.&nbsp;</p><p>Alternatively, if '
  +'you wish to give them access to inspect and perhaps contribute to, or modif'
  +'y, the app, then distribute the blank XIDE app for their preferred platform'
  +' (Chrome / Linux / Windows / Android) and use the "System / Save" option to'
  +' generate a app definition file that they can load into it using the "Syste'
  +'m / Load" option on the main menu.&nbsp;</p><p><b>Debugging</b></p><p>When '
  +'testing Pascal code you have written using XIDE, the PAS2JS compiler error '
  +'messages will flag any source code syntax problems. If you click on one of '
  +'these error messages this will position the cursor at the relevant characte'
  +'r position in the line of code in the XIDE&nbsp;code editor. Run time error'
  +'s will sometimes be trapped by error handlers built in to XIDE&nbsp;and gen'
  +'erate a helpful error message. If this is not sufficient to uniquely identi'
  +'fy the cause of the problem then "ctrl shift J" in Chrome will bring up the'
  +' built in developer console which will hopefully provide the additional inf'
  +'ormation you need to track down the problem. Alternatively, a break point c'
  +'an be set in the code by inserting a "DebugStart;" instruction that will st'
  +'art the native browser debug facility at that point.</p><h3>Implementation,'
  +' Extensibility and Licensing<br></h3><p>XIDE is implemented using the Pas2J'
  +'S dialect of the Object Pascal programming language. This is because it is '
  +'efficient, easy to learn, and is available on a wide range of processor arc'
  +'hitectures.&nbsp;</p><p>Sometimes, as projects go through their life cycle,'
  +' new more specialist requirements emerge. At this point the XIDE framework '
  +'can be extended using project or platform specific custom components develo'
  +'ped in Lazarus. Alternatively the HTML and JavaScript code generated by XID'
  +'E can be imported into a general-purpose web design tool stack to enable fu'
  +'ll enterprise level development.&nbsp;</p><p>XIDE is an open source project'
  +' distributed using the same licence as Lazarus (GPL)</p><h3>Development Roa'
  +'dmap</h3><p>As an open source project, the future development of XIDE depen'
  +'ds on how many collaborators choose to contribute to the project, and which'
  +' aspects are most important to them.&nbsp;</p><p>The initial project has fo'
  +'cused on functionality rather than style, and on the ability to operate as '
  +'a fully self contained IDE with the minimum of dependencie and a simple lea'
  +'rning curve.&nbsp;</p><p>As the project matures, it is hoped that new colla'
  +'borators may add web connectivity, database access, comprehensive style sup'
  +'port, support for other operating systems (eg IOS) or browsers other than C'
  +'hrome.&nbsp;</p><h3>Compatibility</h3><p>In desktop mode, XIDE is designed '
  +'to run on platforms supported by&nbsp; Lazarus, and optionally, the&nbsp; C'
  +'hromium Embedded Framework and&nbsp; Python (i.e. most desktop platforms). '
  +'If CEF or Python is not available then XIDE can still run but will then not'
  +' support their specialist features.&nbsp;&nbsp;</p><p>In browser mode XIDE '
  +'should run on any up to date HTML5 enabled browser. However as it is target'
  +'ing closed user groups (where the browser can be specified)&nbsp; it is onl'
  +'y tested on recent versions of Chrome.&nbsp;</p><p>Alternatively, Electron '
  +'or Cordova and Crosswalk can be used to provide a hybrid implementation of '
  +'XIDE. This gives full Web connectivity and CSS on a wide range of platforms'
  +' but with a trade off in terms of size,speed and security.</p><p>Note that '
  +'the Style Designer is only available on the Browser versions as it depends '
  +'on CSS functionality.</p><p><br></p><p></p>'';'#13#10'''<h1 style="text-ali'
  +'gn: center;"><u>Overview</u></h1><h2 style="text-align: center;">&nbsp;(Hel'
  +'ping people write simple apps that work "everywhere")</h2><h3>Purpose</h3><'
  +'p>XIDE is a combined Development and Run Time Environment for Pascal and Py'
  +'thon. It is designed to work in exactly the same way in&nbsp; Chrome,Linux,'
  +'Windows or Android modes while minimising the required learning curve and i'
  +'nstallation overhead. The initial target applications are&nbsp;&nbsp;client'
  +' side, "Line of business", embedded or exploratory apps where the focus is '
  +'on custom functionality and rapid prototyping or cross platform working wit'
  +'h cosmetic aspects of the design being a secondary consideration. It is not'
  +' intended as a tool to develop web pages that are widely distributed to the'
  +' general public.</p><h3>Installation</h3><p>In the browser, XIDE for Pascal'
  +' is a single page web app with no dependencies. so installation is just a m'
  +'atter of loading that initial web page using an up to date copy of Chrome.&'
  +'nbsp;</p><p>Python in XIDE is based on the Mozilla Pyodide project which br'
  ,'ings a full data science stack to the browser, including NumPy, Pandas, Sci'
  +'py, and Matplotlib. This requires additional HTML and JS files to be instal'
  +'led alongside the Main XIDE single page app. The version of the Pyodide fil'
  +'es we provide can be hosted in a local directory, or on a web server so the'
  +' same functionality is available both on-line and off-line with no further '
  +'dependencies.</p><p>On the desktop, XIDE uses a local copy of Free Pascal a'
  +'nd of&nbsp; Python, so these will need to be installed following the releva'
  +'nt instructions on their web sites. Installation of XIDE is then a matter o'
  +'f loading the XIDE.exe and using the main menu "Settings" option to point t'
  +'o the relevant Free Pascal and Python directories. The XIDE.exe file is com'
  +'piled to run on either 32 or 64 bit desktops. To customise XIDE or exclusiv'
  +'ely target 64 bit machines, XIDE can be rebuilt from source using Lazarus.<'
  +'/p><h3>Functionality</h3><p>XIDE is designed to bring the power of Free Pas'
  +'cal and the convenience of&nbsp; Rapid Application Development (RAD) to the'
  +' browser. It&nbsp; is a "Browser First" approach which delivers cross platf'
  +'orm capability by replicating browser functionality on the desktop in nativ'
  +'e code. This allows the user to exploit the greater efficiency of compiled '
  +'native code compared to interpreted browser environments as required. It al'
  +'so allows a single code base to support multiple different target environme'
  +'nts for different user circumstances or different stages in a project.&nbsp'
  +';</p><p>The Python options in XIDE adds broader "Data Science" capabilities'
  +' to the environment and&nbsp; allows the more interactive exploratory appro'
  +'ach of Python to be exploited as required. See&nbsp;&nbsp;<a href="https://'
  +'hacks.mozilla.org/2019/04/pyodide-bringing-the-scientific-python-stack-to-t'
  +'he-browser/">https://hacks.mozilla.org/2019/04/pyodide-bringing-the-scienti'
  +'fic-python-stack-to-the-browser/</a></p><h3>Unified User Interface</h3><p>T'
  +'he browser supports a number of different standards as part of its user int'
  +'erface. These include HTML, CSS, SVG&nbsp;and GPU to cover page layout, sty'
  +'le editing, vector graphics and graphics programming respectively. These al'
  +'l require their own conventions to be used when accessed directly from the '
  +'browser and/or JavaScript.</p><p>XIDE unifies the users access to these dif'
  +'ferent browser capabilities using a standardised Object Inspector / Drag an'
  +'d Drop approach for them all. For HTML and SVG this should appear seamless '
  +'to the user with all the SVG containers and components accessed in an ident'
  +'ical manner to HTML so requiring no further explanation than provided below'
  +' for basic screen layout and editing.&nbsp;</p><h3>CSS Functionality</h3><p'
  +'>CSS functionality is provided by supporting a style design tree in additio'
  +'n to the Code and UI design trees described below. As with the UI design tr'
  +'ee, Style resources (new design rules, targets, properties and rule types )'
  +' are dragged from a resources tree and dropped on the relevant node of the '
  +'style tree. The style tree also supports logical grouping of targets using '
  +'"AND" and "OR" nodes.&nbsp; This speeds up and simplifies the CSS syntax ge'
  +'neration considerably compared to direct text entry.</p><h3>GPU Code</h3><p'
  +'>The GPU code capability would normally require a separate development envi'
  +'ronment and a specialised language to support development of code. XIDE enc'
  +'apsulates the complexities of WebGL by transpiling from (a subset of) pasca'
  +'l into WebGL / JavaScript code. WebGL has been chosen rather than say CUDA '
  +'or OpenCL et. as WebGL is widely supported "out of the box"&nbsp; in most b'
  +'rowsers and on most processor/GPU combinations. As such it minimises the&nb'
  +'sp; installation and configuration needed in order to get XIDE running on a'
  +' new system.</p><p>The Pascal code for the GPU is accessed as a property of'
  +' a GPU Canvas component which has been dropped onto the User Interface layo'
  +'ut screen and/or as a node on the Code designer tree.&nbsp; The Pascal GPU '
  +'code editor follows the same edit/compile cycle as for user code in the res'
  +'t of the system. The differences are that this is code for blocks of thread'
  +'s in parallel. The code describes a single instruction multiple data (SIMD)'
  +' approach where all the threads run the same code with thread specific code'
  +' referencing "this.thread.x" , "this.thread.y" and "this.thread.z"to reflec'
  +'t their position in the block of threads. Parameter names are declared usin'
  +'g a Paramlist property of the GPU canvas component and their transfer and r'
  +'un time execution is controlled by system calls described below. (N.B. para'
  +'meters need to be passed as arrays so even scalar parameters passed into th'
  +'e code need to be referenced as follows "myParam[0]" )</p><p>The Pascal GPU'
  +' code can daisy chain kernels. (Set the TXGPUCanvas property NumKernels&gt;'
  ,'1) For each kernel in the chain its return value must be set to "MyValue". '
  +'The next kernel in the chain can then read all the thread return values fro'
  +'m the previous kernel by reading from "MyArray".The initial "MyArray" passe'
  +'d to the first kernel in the chain is set as a property ("InitStageData") o'
  +'f the GPU canvas and can have any x,y,z sizes as chosen by the user. The fi'
  +'nal&nbsp; &nbsp;kernel is the graphics display kernel where you set the r,g'
  +',b values as usual. The calculated data input to the graphics display kerne'
  +'l can also be accessed using either the "GetGPUStageArray" or "GetGPUStageA'
  +'rrayAsString" instructions;</p><p>Maths functions available in the GPU code'
  +' are as follows:-</p><p></p><ul><li>abs(a) sign(a) trunc(a) ceil(a) max(a,b'
  +') min(a,b)</li><li>sin(a) cos(a) arcsin(a) arccos(a) arctan(a,b)</li><li>sq'
  +'rt(a) power(a,b) ln(a) log10(a) log2(a)&nbsp;</li></ul><p></p><p>At this ti'
  +'me, the subset of pascal functionality supported by&nbsp; the GPU is limite'
  +'d and no support is provided for the many sophisticated code optimisation o'
  +'ptions provided by specialist GPU programming environments. As such this ca'
  +'pability is aimed at problems that can be made "embarrassingly parallel". S'
  +'ee https://gpu.rocks/ for full details of the underlying JavaScript to webG'
  +'L transpiler technology (N.B. Our releases lag theirs so some of the featur'
  +'es described may not be available yet in our version)<br></p><h3>Limitation'
  +'s of coding for the GPU&nbsp;</h3><p>When coding in Pascal for the GPU, you'
  +' should be aware that there are fundamental limitations on the constructs a'
  +'vailable. In particular:-</p><p></p><ul><li>All parameters passed into the '
  +'GPU&nbsp; are real arrays (scalar parameters are real arrays of length one)'
  +'<br></li><li>You can read from but not write to any of these array paramete'
  +'rs</li><li>You cannot declare a local array</li><li>Each thread returns a s'
  +'ingle real value</li><li>You cannot communicate with any other thread (exce'
  +'pt by synchronising the results in a new kernel)</li><li>You cannot use a b'
  +'oolean type (use 0 or 1 instead)</li><li>You cannot use "Var" parameters in'
  +' a function call</li><li>All function parameters must be a simple type</li>'
  +'<li>Nested function declarations do not follow normal (Pascal) scope rules<'
  +'/li><li>"While loops" should be used instead of "for loops" due to a limita'
  +'tion of our transpiler algorithm</li><li>Loops are unrolled so you MUST SET'
  +' the "<span style="font-family: Verdana, Arial, sans-serif; font-size: 12px'
  +'; white-space: nowrap;">MaxIterations"</span>&nbsp;parameter at a high enou'
  +'gh value to reflect your algorithm''''s requirements</li><li>The number of '
  +'threads in each kernel are given by the KernelXDims,KernelYDims and Kernel '
  +'ZDims properties of the GPU Canvas and these MUST BE SET either manually or'
  +' programatically before activating the GPU.</li><li>The GPU is a Single Ins'
  +'truction Multiple Data machine so branching in a thread does not jump over '
  +'the code in the path not taken,&nbsp; it idles in order to allow other thre'
  +'ads to execute the code in that path if need be.&nbsp;</li><li>Debugging on'
  +' the GPU is "primitive" the only way to do it when running on the hardware '
  +'is to write out intermediate results&nbsp; to the thread output value for s'
  +'elected threads which you dedicate to providing diagnostic output. Alternat'
  +'ively a simple GPU emulator can help you&nbsp; develop the functional logic'
  +' of your algorithm with the full debug capabilities of your development env'
  +'ironment. However this will not warn you of circumstances where you have us'
  +'ed a Pascal construct not available on the GPU.</li></ul><p>Having noted th'
  +'ese limitations, and the need to become familiar with a new programming sty'
  +'le for GPUs, It should be said that for many algorithms, particularly those'
  +' that are naturally "Embarrassingly Parallel", the speed up available by us'
  +'ing a GPU can often be between one and two orders of magnitude.</p><p></p><'
  +'h3>Designing a User Interface<br></h3><p><b>Resource and Instance trees</b>'
  +'</p><p>XIDE uses a very simple paradigm. Essentially, it consists of three '
  +'elements.</p><p></p><ol><li>&nbsp;A resources tree, showing the available w'
  +'idgets (visual and non visual)</li><li>&nbsp;A system design tree and objec'
  +'t property inspector/editor</li><li>&nbsp;A layout panel showing a WYSIWYG '
  +'version of the current page design.</li></ol><p></p> <p>The UI is built by '
  +'pasting nodes from the resource tree to the system design tree.&nbsp;</p><p'
  +'>Each node has object properties defined by a name/value pairs that can be '
  +'edited using the object inspector or referenced and or updated by run time '
  +'code.</p><p>Events are also available on each widget so that code can be at'
  +'tached to them using the built in code editor and compiler.&nbsp;</p><p>Eac'
  +'h property can be bound to a selected data source at design time and code a'
  ,'dded to validate its status at run time. (Non visual components are dragged'
  +' to the root node of the instance tree.)</p><p><b>Available widgets</b></p>'
  +'<p>The widgets listed in the resource tree include both UI and non visual c'
  +'omponents. The intention is that each widget is self documenting and that t'
  +'he set can be extended using third party contributions</p><p><b>Responsive '
  +'Design</b></p><p>Web development has encouraged new and more flexible appro'
  +'aches to UI design. Unfortunately it has also led to an explosion of choice'
  +' in this area. In practice this fragmentation creates new costs as well as '
  +'benefits for our target user base. To counter this trend, XIDE only support'
  +'s a simple responsive design layout paradigm.</p><p>In practice this consis'
  +'ts of a Main page, Tab controls and Popups to define the constituent pages '
  +'in a UI design. Horizontal and Vertical layout boxes (together with associa'
  +'ted alignment properties) are then nested within these pages to control the'
  +' final layout of components on the page.</p><p><b>Writing application code<'
  +'/b></p><p>XIDE uses an event driven model where event handlers written in P'
  +'ython and/or Pascal can be attached to pre defined events triggered by obje'
  +'cts in the user interface. These procedures can be inspected and/or edited '
  +'by using the object inspector to navigate to the required UI object then pr'
  +'essing the ellipsis button to the right of the required event in its events'
  +' tab. This creates an entry for that event handler under the "Event Handler'
  +'s"node in the code design tree. So once a handler has been added it can the'
  +'n also be navigated to by selecting it in the code designer and pressing th'
  +'e edit button.&nbsp;</p><p><b>Pascal Syntax</b></p><p>The Pascal syntax rec'
  +'ognised by XIDE&nbsp;is that used by the Pas2JS variant of Free Pascal. (ht'
  +'tp://wiki.freepascal.org/pas2js) A detail description of the supported synt'
  +'ax can be found here. (http://wiki.freepascal.org/pas2js#RTL)</p><p><b>Unit'
  +' Structure</b></p><p>In addition to the event handler nodes, shared code ca'
  +'n be written by adding units directly to the code design tree as "Pascal Un'
  +'its" These must have the "Interface"unit added to their uses clause in orde'
  +'r to be able to access the XIDE API. In addition, they can access any of th'
  +'e standard set of PAS2JS run time library units. (http://wiki.freepascal.or'
  +'g/pas2js#RTL)&nbsp;</p><p>Functions and procedures&nbsp; in these "Pascal U'
  +'nit" notes can be amended, added to or deleted by selecting the node on the'
  +' code design tree and pressing the "Edit" button which will bring up the co'
  +'de editor screen as previously described for&nbsp; the event handler code.<'
  +'br></p><p>After a Pascal unit has been compiled for the first time in a ses'
  +'sion,all the procedures and functions declared in it are displayed as its c'
  +'hild nodes in the code design tree. Selecting one of these nodes and pressi'
  +'ng the edit button below will navigate directly to that code. Alternatively'
  +', selecting a node and pressing "Code Search" will list all references to t'
  +'hat function or procedure allowing you to navigate directly to the most rel'
  +'evant reference.</p><h3><b>Python&nbsp;</b></h3><p>The Python syntax used i'
  +'s version 3.8.&nbsp;</p><p>Python does not have a unit structure like Pasca'
  +'l, however blocks of Python code can be added to the Code Designer tree in '
  +'the same way as Pascal units. The difference is that these will be run&nbsp'
  +'; when entering run mode. They are executed in the order they occur on the '
  +'Code Designer tree and can contain initialisation, declarations and / or&nb'
  +'sp; any other valid executable Python Code.&nbsp;</p><p>To execute Python c'
  +'ode elsewhere, such as in an event handler, then simply invoke the "RunPyth'
  +'on(<i>......</i>)" procedure with the relevant python code as a string para'
  +'meter,</p><h3>Using Python Interactively</h3><p>Console input and output bo'
  +'xes are supplied so that Python can be used interactively. On the desktop, '
  +'the copy of Python being used is the version installed on the host machine,'
  +' see the documentation for that system to review valid syntax, permissions '
  +'etc. In the browser, the version of Python used is that supported by mozill'
  +'a (see&nbsp;<a href="https://hacks.mozilla.org/2019/04/pyodide-bringing-the'
  +'-scientific-python-stack-to-the-browser/">https://hacks.mozilla.org/2019/04'
  +'/pyodide-bringing-the-scientific-python-stack-to-the-browser/</a>)</p><p><b'
  +'>Accessing user interface objects at run time</b></p><p>XIDE is designed to'
  +' be a cross platform rapid application development system. In order to do t'
  +'his it uses a text based system description tree (The System Design or inst'
  +'ance tree) to reflect the state of a users program at all time. This is sim'
  +'ilar to the function of the Document Object Model (DOM) in standard web app'
  +'lications.</p> <p><b>Types of API Calls</b></p><p>In XIDE&nbsp;the instance'
  ,' tree describing a users project can be inspected manually using the Object'
  +' Inspector. This allows the user to select any node on the tree and inspect'
  +' and/or modify its properties or event handlers as required. The XIDE&nbsp;'
  +'API allows the same actions to be available programmatically. This ability '
  +'to generate events using code is particularly useful in automated testing, '
  +'asynchronous call back functions, or multi threading applications. The func'
  +'tions available fall into eight types (and work in an identical manner in b'
  +'oth Pascal and Python) viz:-</p><p></p><ul><li>&nbsp;Dialog boxes</li><li>&'
  +'nbsp;Get and/or set a property value of a UI object</li><li>&nbsp;Save and '
  +'load user selected data to the clipboard</li><li>&nbsp;copy or delete a UI '
  +'component or move it to a new parent.</li><li>&nbsp;Add to, or replace, the'
  +' event response for a UI object and/or trigger such an event artificially</'
  +'li><li>&nbsp;Show or hide a popup form.</li><li>&nbsp;Show or hide a busy i'
  +'ndicator.</li><li>&nbsp;get and set GPU parameters (integer,number and imag'
  +'e)</li></ul><p></p><p>The detail syntax for these function calls is appende'
  +'d below. Note that unless explicitly stated, all values are either strings '
  +'or string arrays.</p><p><b>Asynchronous Calls, Multi Threading and Initiali'
  +'zation functions</b></p><p>Many web calls issue requests that need to wait '
  +'for a response from a web service, database or other remote service provide'
  +'r. Similarly, when starting another thread in parallel, the main thread wil'
  +'l often need to wait for such child threads to return the results of their '
  +'work before it can proceed. XIDE&nbsp;allows main event handlers to specify'
  +' a "initalisation"function. This is a block of code which issues all such r'
  +'equests prior to running the main event code when they have all finished ex'
  +'ecuting. See below for the detail syntax of the available calls.</p><p>Note'
  +' however that all such asynchronous calls first parameter is "e"the event c'
  +'ontext (automatically declared and populated by Xide, behind the scenes, fo'
  +'r every XIDE&nbsp;event) from which they have been issued so they know wher'
  +'e to return without requiring the user to enter complex boilerplate code.</'
  +'p><p><b>List of&nbsp;XIDE&nbsp;specific API procedure and function calls</b'
  +'></p> <p></p><ul><li>Procedure showMessage(TextMessage:string);</li><li>Pro'
  +'cedure consoleLog(TextMessage:string);</li><li>Function&nbsp; &nbsp;confirm'
  +'(TextMessage:string):boolean;</li><li>Function&nbsp; &nbsp;prompt(TextMessa'
  +'ge,promptString:string):string;</li><li></li><li>Procedure RunPython(str:St'
  +'ring);&nbsp; //<i> Executes the given Python script&nbsp;</i></li><li>Proce'
  +'dure debugStart;&nbsp; //<i>&nbsp;This is a browser only procedure (it can '
  +'be present in desktop code but will be inactive there). In the browser it e'
  +'xecutes a Javascript "debugger;" statement which starts the native debug fa'
  +'cility to allow single stepping, value inspection etc.</i></li><li>Procedur'
  +'e setPropertyValue(nodeName:String;propName:String;newValue:String);</li><l'
  +'i>Procedure setPropertyValueIndexed(nodeName:String;propName:String;newValu'
  +'e:TStringArray; x,y:integer);</li><li>Function&nbsp; &nbsp;getPropertyValue'
  +'(nodeName:String;propName:String):string;</li><li>Function&nbsp; &nbsp;getP'
  +'ropertyValueIndexed(nodeName:String;propName:String; x,y,w,h:integer):Tstri'
  +'ngArray; <i>// When accessing array properties, "x" and "y" are the index p'
  +'ositions for the top left position for the range to start. "w" and "h" are '
  +'the width and height of the range. The type TStringArray is declared in pas'
  +'cal as&nbsp; "My string array = Array of String;"&nbsp; when accesed as a s'
  +'tring it"s format is [["a","b","c"......"z"],["1","2","3"....."9"],....[...'
  +'etc....]]</i></li><li>Procedure copyToClip(str:String);<i> //Place the stri'
  +'ng on the clipboard&nbsp;</i></li><li>Procedure copyFromClip(e); <i>// Fetc'
  +'h text from clipboard (note that this is an async operation so this line of'
  +' code can only appear in an initialization tab of an event procedure. After'
  +' this has executed the main event code tab can access the result using the '
  +'parameter e.returnString )</i></li><li>Function&nbsp; loadTableFromExcelCop'
  +'y(TableName,CopiedString:String); //<i> Populate the given TXTable componen'
  +'t with a string in Excel format (eg. as copied from a spreadsheet)</i></li>'
  +'<li style="">procedure&nbsp; LoadTableFromNumArray(TableName,NumArray:T2DNu'
  +'mArray);&nbsp;<i> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &'
  +'nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Populate the given TXTable compone'
  +'nt from a 2D numeric array&nbsp;&nbsp;</i></li><li style="">function&nbsp; '
  +'GetTableDataArray(TableName:String;SkipHeader:Boolean):String;&nbsp;<span s'
  +'tyle="font-style: italic;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp'
  +'; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Fetch the cells from the'
  ,' given TXTable component as a 2D string array&nbsp;&nbsp;</span></li><li>Pr'
  +'ocedure copycomponent(NodeToBeCopied,NewParentId,NewNodeID:string);</li><li'
  +'>Function&nbsp; &nbsp;deletecomponent(NodeID:string):boolean; <i>// this re'
  +'turns true if the operation succeeds in deleteing the node (i.e. it existed'
  +' and has been deleted)</i></li><li>Procedure moveComponent(nodeId,NewParent'
  +'Id:string);<i>// Re-parent the given XIDE component&nbsp;</i></li><li>Proce'
  +'dure doEvent(EventType,NodeId,myValue:string);<i> //Execute the event code '
  +'for the given XIDE event type. To modify the response to an exiting event a'
  +'dd an "EventTrapper" component to the system this will see the full event s'
  +'tream&nbsp; allowing you to filter this for the event of interest and code '
  +'the appropriate additional action.&nbsp; Available information on each even'
  +'t consists of the following system defined variables. "e.EventType, e.NodeI'
  +'d, e.eventvalue : string;" to then continue to run the default event code, '
  +'set "e.ContinueAfterTrappers = true;" at the end of the event handler&nbsp;'
  +'</i></li><li>Procedure showXForm(XFormID:String; modal:Boolean);</li><li>Pr'
  +'ocedure closeXForm(XFormID:String);</li><li>Procedure showBusy;</li><li>Pro'
  +'cedure hideBusy;</li><li>Procedure setGpuParamNumValue(GPUName,pName:String'
  +';pValue:number);</li><li>Procedure setGpuConstIntValue(GPUName,pName:String'
  +';pValue:integer);</li><li>Procedure setGpuParamImgValue(GPUName,pName:Strin'
  +'g;pValue:TImgArray);&nbsp;</li><li>Function&nbsp; &nbsp;getGpuPramNumValue('
  +'GPUName,pName:String):number;&nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;getG'
  +'puConstIntValue(GPUName,pName:String):integer;&nbsp;&nbsp;</li><li>Function'
  +'&nbsp; &nbsp;getGpuParamImgValue(GPUName,pName:String):TImgArray;&nbsp;&nbs'
  +'p;</li><li>Function&nbsp; &nbsp;getGPUPixelArray(GPUName:String):T3DNumArra'
  +'y;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb'
  +'sp; &nbsp; &nbsp; &nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;getGPUPixelArra'
  +'yAsString(GPUName:String):String;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '
  +'&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</li><li>Function&nb'
  +'sp; &nbsp;getGPUStageArray(GPUName:String):T3DNumArray;&nbsp; &nbsp; &nbsp;'
  +' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs'
  +'p;&nbsp;</li><li>Function&nbsp; &nbsp;getGPUStageArrayAsString(GPUName:Stri'
  +'ng):String;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &'
  +'nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</li></ul><p><b>App Development and Deploy'
  +'ment</b></p><p>During the development phase of a project XIDE&nbsp;will usu'
  +'ally be loaded in interactive app design mode where you can edit the user i'
  +'nterface design and the code behind it. Here by default, the IDE re-loads t'
  +'he project you were last working on.&nbsp;</p><p>New projects can be starte'
  +'d by clearing the current system or loading a previously saved system from '
  +'the clipboard. This behaves the same in native host environments (Windows o'
  +'r Linux) as it does in Chrome or Android. At the end of this phase, you wil'
  +'l sometimes want to deploy the developed app to end users without allowing '
  +'access to the IDE. In this case, select the "System / Deploy" option from t'
  +'he main menu and this will generate a self contained HTML page implementing'
  +' your application and the run time environment needed to execute it, but wi'
  +'th the interactive IDE features disabled. You can now load this to a server'
  +' of your choice, or email directly to your end user so they can run it from'
  +' their file system.&nbsp;</p><p>Alternatively, if you wish to give them acc'
  +'ess to inspect and perhaps contribute to, or modify, the app, then distribu'
  +'te the blank XIDE app for their preferred platform (Chrome / Linux / Window'
  +'s / Android) and use the "System / Save" option to generate a app definitio'
  +'n file that they can load into it using the "System / Load" option on the m'
  +'ain menu.&nbsp;</p><p><b>Debugging</b></p><p>When testing Pascal code you h'
  +'ave written using XIDE, the PAS2JS compiler error messages will flag any so'
  +'urce code syntax problems. If you click on one of these error messages this'
  +' will position the cursor at the relevant character position in the line of'
  +' code in the XIDE&nbsp;code editor. Run time errors will sometimes be trapp'
  +'ed by error handlers built in to XIDE&nbsp;and generate a helpful error mes'
  +'sage. If this is not sufficient to uniquely identify the cause of the probl'
  +'em then "ctrl shift J" in Chrome will bring up the built in developer conso'
  +'le which will hopefully provide the additional information you need to trac'
  +'k down the problem. Alternatively, a break point can be set in the code by '
  +'inserting a "DebugStart;" instruction that will start the native browser de'
  +'bug facility at that point.</p><h3>Implementation, Extensibility and Licens'
  +'ing<br></h3><p>XIDE is implemented using the Pas2JS dialect of the Object P'
  ,'ascal programming language. This is because it is efficient, easy to learn,'
  +' and is available on a wide range of processor architectures.&nbsp;</p><p>S'
  +'ometimes, as projects go through their life cycle, new more specialist requ'
  +'irements emerge. At this point the XIDE framework can be extended using pro'
  +'ject or platform specific custom components developed in Lazarus. Alternati'
  +'vely the HTML and JavaScript code generated by XIDE can be imported into a '
  +'general-purpose web design tool stack to enable full enterprise level devel'
  +'opment.&nbsp;</p><p>XIDE is an open source project distributed using the sa'
  +'me licence as Lazarus (GPL)</p><h3>Development Roadmap</h3><p>As an open so'
  +'urce project, the future development of XIDE depends on how many collaborat'
  +'ors choose to contribute to the project, and which aspects are most importa'
  +'nt to them.&nbsp;</p><p>The initial project has focused on functionality ra'
  +'ther than style, and on the ability to operate as a fully self contained ID'
  +'E with the minimum of dependencie and a simple learning curve.&nbsp;</p><p>'
  +'As the project matures, it is hoped that new collaborators may add web conn'
  +'ectivity, database access, comprehensive style support, support for other o'
  +'perating systems (eg IOS) or browsers other than Chrome.&nbsp;</p><h3>Compa'
  +'tibility</h3><p>In desktop mode, XIDE is designed to run on platforms suppo'
  +'rted by&nbsp; Lazarus, and optionally, the&nbsp; Chromium Embedded Framewor'
  +'k and&nbsp; Python (i.e. most desktop platforms). If CEF or Python is not a'
  +'vailable then XIDE can still run but will then not support their specialist'
  +' features.&nbsp;&nbsp;</p><p>In browser mode XIDE should run on any up to d'
  +'ate HTML5 enabled browser. However as it is targeting closed user groups (w'
  +'here the browser can be specified)&nbsp; it is only tested on recent versio'
  +'ns of Chrome.&nbsp;</p><p>Alternatively, Electron or Cordova and Crosswalk '
  +'can be used to provide a hybrid implementation of XIDE. This gives full Web'
  +' connectivity and CSS on a wide range of platforms but with a trade off in '
  +'terms of size,speed and security.</p><p>Note that the Style Designer is onl'
  +'y available on the Browser versions as it depends on CSS functionality.</p>'
  +'<p><br></p><p></p>'';'#13#10#13#10'{ TXIDEHelpForm }'#13#10#13#10'{$ifndef '
  +'JScript}'#13#10'procedure TXIDEHelpForm.FormCreate(Sender: TObject);'#13#10
  +'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'  HelpFormRoot:=FindDat'
  +'aNodeById(myNode,''HelpFormVBox1'','''',true);'#13#10#13#10'  HelpHTMLText.'
  +'SourceText:=BaseHTML;'#13#10#13#10'end;'#13#10#13#10'procedure TXIDEHelpFor'
  +'m.FormActivate(Sender: TObject);'#13#10'begin'#13#10'end;'#13#10#13#10'proc'
  +'edure TXIDEHelpForm.FormResize(Sender: TObject);'#13#10'begin'#13#10'  DoFo'
  +'rmResize(self, HelpFormVBox1);'#13#10'end;'#13#10#13#10'procedure TXIDEHelp'
  +'Form.FormShow(Sender: TObject);'#13#10'begin'#13#10'  {$ifdef Chromium}'#13
  +#10'  // cef issue.  Browser is reset to nil once the form is displayed (so '
  +'Editor comes up blank), so reinitialize here if reqd.'#13#10'//  HelpHTMLEd'
  +'itor.myStartupTimer.Enabled := True;'#13#10'//  HelpHTMLEditor.RedisplayFra'
  +'me('''');'#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure TXIDEH'
  +'elpForm.LoadNewText(Data: PtrInt);'#13#10'var'#13#10'  ss: TStringStream;'
  +#13#10'  NewHTML: TIpHtml;'#13#10' // called from main thread after all othe'
  +'r messages have been processed to allow thread safe TMemo access'#13#10'  R'
  +'eceivedQueueRec: TQueueRec;'#13#10'begin'#13#10'  ReceivedQueueRec := PQueu'
  +'eRec(Data)^;'#13#10'  ss := TStringStream.Create(ReceivedQueueRec.QEventVal'
  +'ue);'#13#10'  try'#13#10'    NewHTML := TIpHtml.Create; // Will be freed au'
  +'tomatically by IpHtmlPanel1'#13#10'    TIpHtmlPanel(XIDEHelpForm.HelpHTMLTe'
  +'xt.myControl).SetHtml(NewHTML);'#13#10'    NewHTML.LoadFromStream(ss);'#13
  +#10'  finally'#13#10'    ss.Free;'#13#10'  end;'#13#10'end;'#13#10#13#10'(*'
  +#13#10'//!!!! async proc here to fetch new value'#13#10'procedure TXIDEHelpF'
  +'orm.HelpHTMLEditorHandleChange(e: TEventStatus;'#13#10'  nodeID: AnsiString'
  +'; myValue: AnsiString);'#13#10'var'#13#10'  newText:String;'#13#10'  ss: TS'
  +'tringStream;'#13#10'  NewHTML: TIpHtml;'#13#10'  QueueRecToSend: PQueueRec;'
  +#13#10'begin'#13#10'  // !! got here via an event raised inside the HTMLEdit'
  +'or, so there''s some cef-internal threading going on, so'#13#10'  // we can'
  +'''t directly update another component from here (likely to fall over) and a'
  +'lso can''t throw a timer,'#13#10'  // so do whatever is next by using an as'
  +'ync function (which will run in the main thread and not cause problems).'#13
  +#10'  // HelpHTMLText.SourceText:=HelpHTMLEditor.SourceText;'#13#10#13#10'  '
  +'newText:=HelpHTMLEditor.SourceText;'#13#10'  newText:=HelpHTMLText.CreateTe'
  +'xtURL(newText).Text;'#13#10'  HelpHTMLText.myNode.SetAttributeValue(''Sourc'
  +'eText'',newText);'#13#10#13#10'  New(QueueRecToSend);'#13#10'  QueueRecToSe'
  ,'nd^.QEventValue:= newText;'#13#10'  Application.QueueAsyncCall(@self.LoadNe'
  +'wText, PtrInt(QueueRecToSend)); // put msg into queue that will be processe'
  +'d from the main thread after all other messages'#13#10'end;'#13#10'*)'#13#10
  +#13#10'{$endif}'#13#10#13#10'procedure TXIDEHelpForm.InitialiseonShow;'#13#10
  +'var'#13#10'  txt:String;'#13#10'begin'#13#10'  self.Top:=100;'#13#10'  self'
  +'.Left:=150;'#13#10'  HelpHTMLText.SourceText:=HelpHTMLText.SourceText;'#13
  +#10#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('savedsystems','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit SavedSystems;'#13#10
  +#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13
  +#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, Nod'
  +'eUtils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, Grap'
  +'hics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, TypInfo, LazIDE'
  +'Intf,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'#13#10'  '
  +'{$else}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  XScrollBox, XVBox, X'
  +'HBox, XTree, XMemo, XTabControl, XButton, XLabel,'#13#10'  XEditBox, XCheck'
  +'Box, XHyperLink, XRadioBtns, XForm, XComboBox,'#13#10'  EventsInterface, XO'
  +'bjectInsp ;'#13#10#13#10'type'#13#10#13#10'  { TSavedSystemsForm }'#13#10#13
  +#10'  TSavedSystemsForm = class(TXForm)'#13#10'    SavedSystemsList: TXTree;'
  +#13#10'    SavedSystemsVBox: TXVBox;'#13#10'    SavedSystemsLoad: TXButton;'
  +#13#10'    SavedSystemsBtns: TXHBox;'#13#10'    SavedSystemsCancel: TXButton'
  +';'#13#10'    SavedSystemsDelete: TXButton;'#13#10'    {$ifndef JScript}'#13
  +#10'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResi'
  +'ze(Sender: TObject);'#13#10'    {$endif}'#13#10'    procedure SavedSystemsC'
  +'ancelHandleButtonClick(e: TEventStatus;'#13#10'      nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'    procedure SavedSystemsDeleteHandleButtonClic'
  +'k(e: TEventStatus;'#13#10'      nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'    procedure SavedSystemsLoadHandleButtonClick(e: TEventStatus;'#13
  +#10'      nodeID: AnsiString; myValue: AnsiString);'#13#10#13#10'  public'#13
  +#10'    procedure Initialise;'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  '
  +'SavedSystemsForm: TSavedSystemsForm;'#13#10'//  TopComponent:TControl;'#13
  +#10#13#10'implementation'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{$ifndef JScri'
  +'pt}'#13#10'//procedure TSavedSystemsForm.FormCreate(Sender: TObject);'#13#10
  +'//begin'#13#10'//  myNode:=DoXFormCreated(self);'#13#10'//end;'#13#10'//'#13
  +#10'//procedure TSavedSystemsForm.FormResize(Sender: TObject);'#13#10'//begi'
  +'n'#13#10'//  DoFormResize(self, SavedSystemsVBox);'#13#10'//end;'#13#10'//'
  +#13#10#13#10'procedure TSavedSystemsForm.FormCreate(Sender: TObject);'#13#10
  +'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'end;'#13#10#13#10'proce'
  +'dure TSavedSystemsForm.FormResize(Sender: TObject);'#13#10'begin'#13#10'  D'
  +'oFormResize(self, SavedSystemsVBox);'#13#10'end;'#13#10#13#10'{$endif}'#13
  +#10#13#10'procedure TSavedSystemsForm.SavedSystemsCancelHandleButtonClick('
  +#13#10'  e: TEventStatus; nodeID: AnsiString; myValue: AnsiString);'#13#10'b'
  +'egin'#13#10'  TXForm(self).Showing:=''No'';'#13#10'end;'#13#10#13#10'functi'
  +'on RemoveDate(NodeString:String):String;'#13#10'var'#13#10'  i,j:integer;'
  +#13#10'begin'#13#10'  i:=FoundString(NodeString,''      '');'#13#10'  if i>1'
  +' then'#13#10'  begin'#13#10'    for j:=1 to i-1 do'#13#10'      result:=res'
  +'ult+NodeString[j];'#13#10'  end'#13#10'  else'#13#10'    result:=NodeString'
  +';'#13#10'end;'#13#10#13#10'procedure TSavedSystemsForm.SavedSystemsDeleteHa'
  +'ndleButtonClick('#13#10'  e: TEventStatus; nodeID: AnsiString; myValue: Ans'
  +'iString);'#13#10'var'#13#10'  SysName:String;'#13#10'begin'#13#10'  // Get '
  +'SysName from the currently selected item in SavedSystemsList'#13#10'  SysNa'
  +'me:=RemoveDate(SavedSystemsList.SelectedNodeText);'#13#10'  {$ifndef JScrip'
  +'t}'#13#10'  SysName:=''SavedSystems/''+SysName;'#13#10'  {$endif}'#13#10'  '
  +'if SysName<>'''' then'#13#10'  begin'#13#10'    if XIDEConfirm(''OK to dele'
  +'te stored system ''+SysName+''?'') then'#13#10'    begin'#13#10'      Clear'
  +'LocalStore( SysName+''.xide'');'#13#10'      Initialise;'#13#10'    end;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'procedure TSavedSystemsForm.SavedSystems'
  +'LoadHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'var'#13#10'  SysName:String;'#13#10'begin'#13#10'  //'
  +' Get SysName from the currently selected item in SavedSystemsList'#13#10'  '
  +'SysName:=RemoveDate(SavedSystemsList.SelectedNodeText);'#13#10'  if SysName'
  +'<>'''' then'#13#10'  begin'#13#10'    OILoadSavedSystem2(SysName);'#13#10' '
  +'   TXForm(self).Showing:=''No'';'#13#10'  end;'#13#10'end;'#13#10#13#10'pro'
  +'cedure TSavedSystemsForm.Initialise;'#13#10'var'#13#10'  NamesList:TStringL'
  +'ist;'#13#10'  TreeString:String;'#13#10'  i:integer;'#13#10'begin'#13#10'  '
  +'// populate SavedSystemsList from stored data'#13#10'  NamesList:=TStringLi'
  +'st.Create;'#13#10'  NamesList.Clear;'#13#10'  DiscoverSavedSystems(NamesLis'
  ,'t);'#13#10#13#10'//Example Tree String = ''["myTreeName",["AAAAAA","BBBBB"]'
  +',"CCCCC","DDDDDD",["EEEEE","FFFFF"],"GGGGG"]'';'#13#10'  TreeString:=''["Sa'
  +'ved Systems"'';'#13#10#13#10'  for i:=0 to NamesList.count-1 do'#13#10'  be'
  +'gin'#13#10'    if NamesList[i]<>'''' then'#13#10'      TreeString:=TreeStri'
  +'ng + '',"'' + NamesList[i] + ''"'';'#13#10'  end;'#13#10'  TreeString:=Tree'
  +'String + '']'';'#13#10'  SavedSystemsList.TreeData:=TreeString;'#13#10#13#10
  +'  NamesList.Free;'#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('stylesutils','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit StylesUtils;'#13#10#13
  +#10'{$ifdef Dll}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'int'
  +'erface'#13#10'uses Classes, Sysutils, StringUtils, NodeUtils, EventsInterfa'
  +'ce'#13#10' {$ifndef JScript}'#13#10' , Dialogs,XTree'#13#10' {$else}'#13#10
  +' ,Math, contnrs, dateutils, rtlconsts, strutils, types, typinfo,'#13#10' XT'
  +'ree, InterfaceTypes'#13#10' {$endif}'#13#10' ;'#13#10#13#10'//["StyleResour'
  +'ces","StyleRule",["StyleTargets",["TargetTypes",["WidgetType",["All"],["Num'
  +'eric","ProgressBar","NumericSlider","NumberSpinner"],["Text","LabelText","H'
  +'yperlink","EditBox","Memo","Table"],["Selectors","Button","CheckBox","Radio'
  +'Buttons","ComboBox","Tree","DatePicker","ColorPicker","MainMenu","MenuItem"'
  +'],["LayoutWidgets","HBox","VBox","GroupBox","ScrollBox","TabControl","TabSh'
  +'eet","Form"]],["Identifier","ClassName","WidgetID"]],["TargetGrouping","(An'
  +'d)","(Or)","Not(And)","Not(Or)"]],["StyleProperties",["Widget","WidgetPaddi'
  +'ng","WidgetBorder","WidgetCorners","WidgetMargin","WidgetBackground"],["Fon'
  +'t","FontFamily","FontSize","FontColor","FontBackgroundColor","FontWeight","'
  +'FontStyle"],["Transformations","Rotate","Scale","Skew"],["States","Selectab'
  +'le","Cursor","Visibility"],["Effects","Transition","Filter"]]]'#13#10#13#10
  +'// Priority has four levels'#13#10'//   1) !important external rule'#13#10
  +'//   2) !important internal rule'#13#10'//   3)  normal    external rule'#13
  +#10'//   4)  normal    internal rule'#13#10'// where user style rules are ge'
  +'nerated in an external style sheet and author style rules are inline'#13#10
  +#13#10'//Expanding logical functions using Domorgan''s law'#13#10'//   or...'
  +'.......   A, B, C {}'#13#10'//   and.........   ABC {}'#13#10'//   nor.....'
  +'....  :not(A):not(B):not(C) {}'#13#10'//   nand........  :not(A), :not(B), '
  +':not(C) {}'#13#10#13#10'// <sup>.....</sup>  and  <sub>.....</sub> tags def'
  +'ine superscript and subscript text - it is not done in style markup'#13#10
  +'type'#13#10#13#10'  TCSSTreeNodes = (All,Priority,Group,StyleResources,Styl'
  +'eSheet,StyleRule,StyleTargets,TargetGrouping,_And_,_Or_,Not_And_,Not_Or_,Ta'
  +'rgetTypes,WidgetType,Numeric,ProgressBar,NumericSlider,NumberSpinner,Text,L'
  +'abelText,Hyperlink,EditBox,Memo,Table,Selectors,Button,CheckBox,RadioButton'
  +'s,ComboBox,Tree,DatePicker,ColorPicker,MainMenu,MenuItem,LayoutWidgets,HBox'
  +',VBox,GroupBox,ScrollBox,TabControl,TabSheet,Form,Identifier,ClassName,Widg'
  +'etID,Relationship,ChildrenOf,DescendentsOf,SiblingsOf,State,Hover,Visited,F'
  +'ocused,StyleProperties,Widget,WidgetCorners,WidgetPadding,WidgetMargin,Widg'
  +'etBorder,WidgetBackground,Font,FontFamily,FontSize,FontColor,FontBackground'
  +'Color,FontWeight,FontStyle,Transformations,Rotate,Scale,Skew,States,Selecta'
  +'ble,Cursor,Visibility,Effects,Transition,Filter,NotFound);'#13#10#13#10'// '
  +' TStyleTreeNode = record'#13#10'//    SNodeName,SNodeType,qualifier,Qualifi'
  +'erType : string;'#13#10'//    NodeTypeSetID:TCSSTreeNodes;'#13#10'//    chi'
  +'ldren: Array of  TStyleTreeNode;'#13#10'//  end;'#13#10#13#10'  TCSSTermLis'
  +'t = Array of TStringList;'#13#10#13#10#13#10'// Function RecursivelyGenerat'
  +'eTheTreeDescriptionString(SelectedNode:TStyleTreeNode):string;'#13#10' proc'
  +'edure InitStyleTreeDisplay;'#13#10' Procedure SetCSSNodeTypes;'#13#10' Proc'
  +'edure SetStyleOptions;'#13#10' procedure InitialiseStyleDesigner;'#13#10' P'
  +'rocedure SetCSSEditorStyles;'#13#10' procedure  UpdateOrCreateStyleSheet(St'
  +'yleText,myStyleSheetTitle:string;pos:integer);'#13#10#13#10'var'#13#10'  Al'
  +'lowChildren            : Set of TCSSTreeNodes;'#13#10'  StyleSheetNodes    '
  +'      : Set of TCSSTreeNodes;'#13#10'  StyleRuleNodes           : Set of TC'
  +'SSTreeNodes;'#13#10'  ClassificationNodes      : Set of TCSSTreeNodes;'#13
  +#10'  TargetGroupingNodes      : Set of TCSSTreeNodes;'#13#10'  Relationship'
  +'Nodes        : Set of TCSSTreeNodes;'#13#10'  StyletargetNodes         : Se'
  +'t of TCSSTreeNodes;'#13#10'  StylePropertyNodes       : Set of TCSSTreeNode'
  +'s;'#13#10'  EditableTargetNodes      : Set of TCSSTreeNodes;'#13#10'  Targe'
  +'tNodesWithOptions   : Set of TCSSTreeNodes;'#13#10'  StyleRuleSelectors    '
  +'   : Set of TCSSTreeNodes;'#13#10#13#10'{$ifndef JScript}'#13#10'{$else}'#13
  +#10#13#10'Var'#13#10'  DropTarget:string;'#13#10'  PreviousDropTarget:string'
  +';'#13#10#13#10'//  SelectedStyleSheetNodePointer:TStyleTreeNode ;'#13#10'  '
  +'InlineCSSText,ExternalCSSText:string;'#13#10'  StyleRootNode:TDataNode;'#13
  +#10#13#10'  // these procedures are called from the button event handlers'#13
  ,#10'  Function PasteSelectedStyleResources(AllowDrop:Boolean;HoverOver:Strin'
  +'g;mute:Boolean;ValueObject:TNodeEventValue):boolean;// this paste the selec'
  +'ted style rescource to the style instance tree'#13#10'  Procedure ValidateS'
  +'tyleTree;'#13#10'  Procedure DeleteStyleNode;'#13#10'  Procedure PopulateSt'
  +'yleEditor(editInsteadOfDropDown:boolean);'#13#10'  Procedure GenerateStyleS'
  +'heets;'#13#10'  Procedure RefreshStyleSheet(InternalStyleText,ExternalStyle'
  +'Text:string);'#13#10'  Function NotSystemClassName(TestString:String):Boole'
  +'an;'#13#10'  procedure  RemoveStyleSheet(myStyleSheetTitle:string);'#13#10
  +#13#10#13#10'  // these are forward declarations'#13#10'  procedure Initiali'
  +'seStyleResources;'#13#10'  Function GetTypeFromString(instring:string):stri'
  +'ng;'#13#10'  function GetOptionType(SNodeType:String):String;'#13#10'  func'
  +'tion GetQualifierValue(instring:String):string;'#13#10'  Function ResourceN'
  +'odeSetIDOf(snodename:string;quiet:boolean):TCSSTreeNodes;'#13#10'  Function'
  +' stripOutQualifierInfo(instring:string):string;'#13#10'  Function GetName1('
  +'instring:string):string;'#13#10'  Procedure UpdateNodeQualifierField;'#13#10
  +#13#10'{$endif}'#13#10#13#10'var'#13#10'  StyleOptions:Array of TStringList;'
  +#13#10'  StylesNode:TDataNode;'#13#10'  CSSTermList:TCSSTermList;'#13#10#13
  +#10'implementation'#13#10'uses XObjectInsp;'#13#10#13#10#13#10'{$ifndef JScr'
  +'ipt}'#13#10#13#10'{$else}'#13#10#13#10'Procedure Watch(instring:string);'#13
  +#10'begin'#13#10'  setpropertyvalue(''WatchBox'',''ItemValue'',instring)'#13
  +#10'end;'#13#10#13#10#13#10'  Function GetTypeFromString(instring:string):st'
  +'ring;'#13#10'  var Namestringstart:integer;'#13#10'  begin'#13#10'    //sho'
  +'wmessage(''GetTypeFromString <''+instring+''<'');'#13#10'    instring:=trim'
  +'(instring);'#13#10'    //showmessage(''GetTypeFromString 2'');'#13#10'    i'
  +'f      (LeftStr(instring,5) = ''(And)''   ) then GetTypeFromString:=LeftStr'
  +'(instring,5)'#13#10'    else if (LeftStr(instring,4) = ''(Or)''    ) then G'
  +'etTypeFromString:=LeftStr(instring,4)'#13#10'    else if (LeftStr(instring,'
  +'8) = ''Not(And)'') then GetTypeFromString:=LeftStr(instring,8)'#13#10'    e'
  +'lse if (LeftStr(instring,7) = ''Not(Or)'' ) then GetTypeFromString:=LeftStr'
  +'(instring,7)'#13#10'    else'#13#10'    begin'#13#10'      Namestringstart:'
  +'=Pos(''.'',instring);'#13#10'      if Namestringstart>0 then GetTypeFromStr'
  +'ing:=LeftStr(instring,Namestringstart-1)'#13#10'      else GetTypeFromStrin'
  +'g:=instring ;'#13#10'    end;'#13#10'  end;'#13#10#13#10'Function stripOutQ'
  +'ualifierInfo(instring:string):string;'#13#10'var outstr:string;'#13#10'Qual'
  +'ifierstringstart,Qualifierstringend:integer;'#13#10'begin'#13#10'    outstr'
  +':=instring;'#13#10'    if not(    (LeftStr(instring,5) = ''(And)''   )'#13
  +#10'            or (LeftStr(instring,4) = ''(Or)''    )'#13#10'            o'
  +'r (LeftStr(instring,8) = ''Not(And)'')'#13#10'            or (LeftStr(instr'
  +'ing,7) = ''Not(Or)'' ) )'#13#10'    then'#13#10'    begin'#13#10'      Qual'
  +'ifierstringstart:=Pos(''('',instring);'#13#10'      Qualifierstringend:=Pos'
  +'('')'',instring);'#13#10'      if  ((Qualifierstringend-Qualifierstringstar'
  +'t)>0)'#13#10'      then'#13#10'      begin'#13#10'        outstr:=LeftStr(i'
  +'nstring,Qualifierstringstart-2)+Rightstr(instring,length(instring)-Qualifie'
  +'rstringend);'#13#10'      end;'#13#10'    end;'#13#10'    stripOutQualifier'
  +'Info:=outstr;'#13#10' end;'#13#10#13#10'Function GetName1(instring:string):'
  +'string;'#13#10'var outstr:string;'#13#10'markerPos:integer;'#13#10'begin'#13
  +#10'    outstr:=instring;'#13#10'    markerPos:=RPos(''.'',instring);'#13#10
  +'    outstr:=Rightstr(instring,length(instring)-markerPos+1);'#13#10'    //s'
  +'howmessage(''GetName1 found ''+outstr+'' from ''+instring);'#13#10'    GetN'
  +'ame1:=outstr;'#13#10' end;'#13#10#13#10'function GetQualifierValue(instring'
  +':String):string;'#13#10'var'#13#10'  slist:TStringList;'#13#10'  i:integer;'
  +#13#10'  markerPos1, markerPos2:integer;'#13#10'  str:String;'#13#10'begin'
  +#13#10'  slist:=TStringList.Create;'#13#10'  slist.StrictDelimiter:=true;'#13
  +#10'  slist.Delimiter:=''.'';'#13#10'  slist.LineBreak:=''.'';'#13#10'  slis'
  +'t.SkipLastLineBreak:=true;'#13#10'  slist.Text:=instring;'#13#10'//  for i:'
  +'=0 to slist.count-1 do'#13#10'//    showmessage(''i=''+inttostr(i)+'' ''+sl'
  +'ist[i]);'#13#10#13#10'  // if the list has only 2 elements, then those are '
  +'the type, and the name.'#13#10'  // otherwise, the first element is the typ'
  +'e, and the last is the name.'#13#10'  // the ''middle'' elements concatenat'
  +'e back together to give the qualifier string.'#13#10#13#10'  // NEW: 2 elem'
  +'ents should now be type.value.  (there is no name)'#13#10#13#10'  str:='''''
  +';'#13#10'  if slist.count>2 then'#13#10'  begin'#13#10'    // old data...th'
  +'ere was a ''name''. Remove it.'#13#10'    str:=slist.Text;'#13#10'    if st'
  +'r[length(str)]<>'')'' then'#13#10'      slist.Delete(slist.count-1);'#13#10
  ,'  end;'#13#10'  if slist.count>=2 then'#13#10'  begin'#13#10'    slist.Dele'
  +'te(0);'#13#10'    str:=slist.Text;'#13#10'//    showmessage(''str=>''+str+'
  +'''<'');'#13#10'    if (length(str)>0) then'#13#10'    begin'#13#10'      //'
  +' remove trailing delimiter (.)'#13#10'      if str[length(str)]=''.'' then'
  +#13#10'        Delete(str,length(str),1);'#13#10'      // remove parentheses'
  +' around the qualifier value'#13#10'      if str[1]=''('' then'#13#10'      '
  +'  Delete(str,1,1);'#13#10'      if str[length(str)]='')'' then'#13#10'     '
  +'   Delete(str,length(str),1);'#13#10'    end;'#13#10'//    showmessage(''mo'
  +'dified str=>''+str+''<'');'#13#10#13#10'  end;'#13#10#13#10'  result:=str;'
  +#13#10#13#10'  slist.Free;'#13#10'end;'#13#10#13#10#13#10'Procedure RefreshS'
  +'tyleSheet(InternalStyleText,ExternalStyleText:string);'#13#10'var indirectE'
  +'xternalStyleText:string;'#13#10'begin'#13#10'    if (length(trim(InternalSt'
  +'yleText))>0) then'#13#10'      UpdateOrCreateStyleSheet(InternalStyleText,'
  +'''myInternalStyleSheet'',-1)'#13#10'    else'#13#10'      RemoveStyleSheet('
  +'''myInternalStyleSheet'');'#13#10'    if (length(trim(ExternalStyleText))>0'
  +')'#13#10'    then'#13#10'    begin'#13#10'      //indirectExternalStyleText'
  +':=''@import url("data:text/css;charset=utf-8,''+ExternalStyleText +''") '';'
  +#13#10'      RemoveStyleSheet(''myExternalStyleSheet'');'#13#10'      asm'#13
  +#10'      var link = document.createElement(''link'');'#13#10'      link.id='
  +'''myExternalStyleSheet'';'#13#10'      link.rel = ''stylesheet'';'#13#10'  '
  +'    link.href = ''data:text/css;charset=UTF-8,'' + encodeURIComponent(Exter'
  +'nalStyleText);'#13#10'      document.getElementsByTagName(''head'')[0].appe'
  +'ndChild(link);'#13#10'      end;'#13#10'      //UpdateOrCreateStyleSheet(in'
  +'directExternalStyleText,''myExternalStyleSheet'',1);'#13#10'    end'#13#10
  +'    else'#13#10'      RemoveStyleSheet(''myExternalStyleSheet'');'#13#10'en'
  +'d;'#13#10#13#10'Procedure DeleteStyleNode;'#13#10'var SelectedNodeId, Paren'
  +'tNodeId, NodeText, SNodeType:string;'#13#10'begin'#13#10'  SelectedNodeId:='
  +'TXTree(StylesNode).SelectedNodeId;'#13#10'  ParentNodeId:=TXTree(StylesNode'
  +').GetParentOfNode(SelectedNodeId);'#13#10'  NodeText:=TXTree(StylesNode).Se'
  +'lectedNodeText;'#13#10'  SNodeType:=GetTypeFromString(NodeText);'#13#10'  i'
  +'f (SNodeType=''StyleTargets'')'#13#10'  or (SNodeType=''StyleProperties'')'
  +#13#10'  or (SNodeType=''Priority'')'#13#10'  or (SNodeType=''State'')'#13#10
  +'  or (SNodeType=''Group'')'#13#10'  or (SNodeType=''StyleSheet'')'#13#10'  '
  +'then'#13#10'    showmessage(''This node cannot be deleted'')'#13#10'  else'
  +#13#10'  begin'#13#10'    // use DeleteSelectedNode to remove the visible tr'
  +'ee node, and rebuild TreeData'#13#10'    TXTree(StylesNode).DeleteSelectedN'
  +'ode;'#13#10'    if ParentNodeId<>'''' then'#13#10'      //TXTree(StylesNode'
  +').selectedNodeId:=ParentNodeId+''Summary'';'#13#10'      TXTree(StylesNode)'
  +'.selectedNodeId:=ParentNodeId;'#13#10#13#10'    PopulateStyleEditor(false);'
  +#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'  Procedure ValidateStyleTree;'
  +#13#10'  begin'#13#10'//https://www.w3.org/TR/CSS22/selector.html'#13#10#13
  +#10'    // check all logical groups and relationship nodes have at least one'
  +' child.'#13#10'    // check that classnames and ID values exist in the syst'
  +'em.'#13#10'    // transition can only work with targets of hover, selected,'
  +' and visited.'#13#10'    // check that there is at least one style target a'
  +'nd one style property.'#13#10'    // check that relationship qualifiers onl'
  +'y have one child'#13#10'    // :matches() cannot be nested   :-webkit-any(a'
  +', b)'#13#10'//The ID selector.......................    #ID'#13#10'//The Cl'
  +'ass Selector.....................   .ClassName'#13#10'//type and class.....'
  +'....................   Div.Classname'#13#10'//"or" group...................'
  +'..........   #ID , .Classname  , Div.Classname'#13#10'//"and" group........'
  +'....................   a . b'#13#10'//parentheses..........................'
  +'..   : matches()     n.b. cannot be nested   :-webkit-any(a, b)'#13#10'// l'
  +'ogical inverse.......................   :not()  nb cannot be nested and onl'
  +'y takes a simple selector'#13#10#13#10'//  A . B = B . A'#13#10'//  A + B ='
  +' B + A'#13#10#13#10'//  A(B + C)        =  A.B + A.C      // OR node child '
  +'of an AND node'#13#10'//  (A + B).(A + C) =  A + B . C      // OR node chil'
  +'d of an AND node (term in common)'#13#10'//  A(B.C)          =  A . B . C  '
  +'    // AND node child of an AND node'#13#10'//  A + (B + C)     =  A + B + '
  +'C      // OR node child of an OR node'#13#10'//  A + (B.C)       =  A.B + A'
  +'.C      // AND node child of an OR  node'#13#10#13#10'//  A . 0       = 0'
  +#13#10'//  A . not(A)  = 0'#13#10'//  A + not(A)  = 1'#13#10'//  A + 1      '
  +' = 1'#13#10'//  A + 0       = A'#13#10'//  A . 1       = A'#13#10'//  A + A'
  +'       = A'#13#10'//  A . A       = A'#13#10'//  A + (A.B)   = A'#13#10'// '
  ,' A(A + B)    = A'#13#10'//  not(not(A)) = A'#13#10#13#10'//  not(A+B)    = '
  +'not(A) . not(B)'#13#10'//  not(A.B)    = not(A) + not(B)'#13#10#13#10'//a:h'
  +'over MUST come after a:link and a:visited in the CSS definition in order to'
  +' be effective! a:active MUST come after a:hover in the CSS definition in or'
  +'der to be effective! Pseudo-class names are not case-sensitive.'#13#10#13#10
  +#13#10'end;'#13#10#13#10#13#10'  Function getqualifierdefault(SelectedStyleS'
  +'heetNodeType:string):string;'#13#10'  var i:integer;'#13#10'      temp:stri'
  +'ng;'#13#10'      tempstringlist:tstringlist;'#13#10'  begin'#13#10'     tem'
  +'p:='''';'#13#10'     for i:= 0 to length( StyleOptions)-1 do'#13#10'     be'
  +'gin'#13#10'       tempstringlist:=StyleOptions[i];'#13#10'       if Selecte'
  +'dStyleSheetNodeType=tempstringlist[0]'#13#10'       then temp:=tempstringli'
  +'st[3];'#13#10'     end;'#13#10'     getqualifierdefault:=temp;'#13#10'  end'
  +';'#13#10#13#10'  Function getqualifierType(SelectedStyleSheetNodeType:strin'
  +'g):string;'#13#10'  var i:integer;'#13#10'      temp:string;'#13#10'      t'
  +'empstringlist:tstringlist;'#13#10'  begin'#13#10'     temp:='''';'#13#10'  '
  +'   for i:= 0 to length( StyleOptions)-1 do'#13#10'     begin'#13#10'       '
  +'tempstringlist:=StyleOptions[i];'#13#10'       if SelectedStyleSheetNodeTyp'
  +'e=tempstringlist[0]'#13#10'       then'#13#10'       begin'#13#10'         '
  +'temp:=tempstringlist[2];'#13#10'         //showmessage(''found ''+temp+'' i'
  +'n SelectedStyleSheetNodeType'');'#13#10'       end;'#13#10'     end;'#13#10
  +'      getqualifiertype:=temp;'#13#10'  end;'#13#10#13#10'function NotSystem'
  +'ClassName(TestString:String):Boolean;'#13#10'begin'#13#10'    if ((TestStri'
  +'ng<>''modal-background'')'#13#10'        and(TestString<>''modal-content'')'
  +#13#10'        and(TestString<>''vbox'')'#13#10'        and(TestString<>''vb'
  +'oxNoStretch'')'#13#10'        and(TestString<>''vboxNoFlex'')'#13#10'      '
  +'  and(TestString<>''hbox'')'#13#10'        and(TestString<>''hboxNoStretch'
  +''')'#13#10'        and(TestString<>''AlignmentCentre'')'#13#10'        and('
  +'TestString<>''AlignmentRight'')'#13#10'        and(TestString<>''AlignmentL'
  +'eft'')'#13#10'        and(TestString<>''AlignmentLeftContainer'')'#13#10'  '
  +'      and(TestString<>''AlignmentTop'')'#13#10'        and(TestString<>''Al'
  +'ignmentBottom'')'#13#10'        and(TestString<>''menu'')'#13#10'        an'
  +'d(TestString<>''menuItem'')'#13#10'        and(TestString<>''menuBar'')'#13
  +#10'        and(TestString<>''highlight-border'')'#13#10'        and(TestStr'
  +'ing<>''normal-border'')'#13#10'        and(TestString<>''no-border'')'#13#10
  +'        and(TestString<>''textAreaBorder'')'#13#10'        and(TestString<>'
  +'''TabPage'')'#13#10'        and(TestString<>''TabButton'')'#13#10'        a'
  +'nd(TestString<>''TabButtonDiv'')'#13#10'        and(TestString<>''hasChildr'
  +'en'')'#13#10'        and(TestString<>''noChildren'')'#13#10'        and(Tes'
  +'tString<>''widgetinner''))'#13#10'     then NotSystemClassName:=true'#13#10
  +'     else NotSystemClassName:=false;'#13#10'end;'#13#10#13#10#13#10'Functio'
  +'n ResourceNodeSetIDOf(Snodename:string;quiet:boolean):TCSSTreeNodes;'#13#10
  +'var nodeID:TCssTreeNodes;'#13#10'begin'#13#10'  nodeID :=NotFound;'#13#10' '
  +' if  Snodename<>'''' then'#13#10'  begin'#13#10'    if Snodename =''Priorit'
  +'y'' then nodeID :=Priority'#13#10'    else if Snodename =''State'' then nod'
  +'eID :=State'#13#10'    else if Snodename =''Group'' then nodeID :=Group'#13
  +#10'    else if Snodename =''StyleResources'' then nodeID := StyleResources'
  +#13#10'    else if Snodename =''StyleSheet'' then nodeID := StyleSheet'#13#10
  +'    else if Snodename =''StyleRule'' then nodeID := StyleRule'#13#10'    el'
  +'se if Snodename =''StyleTargets'' then nodeID := StyleTargets'#13#10'    el'
  +'se if Snodename =''TargetGrouping'' then nodeID := TargetGrouping'#13#10'  '
  +'  else if Snodename =''(And)'' then nodeID := _And_'#13#10'    else if Snod'
  +'ename =''(Or)'' then nodeID := _Or_'#13#10'    else if Snodename =''Not(And'
  +')'' then nodeID := Not_And_'#13#10'    else if Snodename =''Not(Or)'' then '
  +'nodeID := Not_Or_'#13#10'    else if Snodename =''TargetTypes'' then nodeID'
  +' := TargetTypes'#13#10'    else if Snodename =''WidgetType'' then nodeID :='
  +' WidgetType'#13#10'    else if Snodename =''Numeric'' then nodeID := Numeri'
  +'c'#13#10'    else if Snodename =''ProgressBar'' then nodeID := ProgressBar'
  +#13#10'    else if Snodename =''NumericSlider'' then nodeID := NumericSlider'
  +#13#10'    else if Snodename =''NumberSpinner'' then nodeID := NumberSpinner'
  +#13#10'    else if Snodename =''Text'' then nodeID := Text'#13#10'    else i'
  +'f Snodename =''LabelText'' then nodeID := LabelText'#13#10'    else if Snod'
  +'ename =''Hyperlink'' then nodeID := Hyperlink'#13#10'    else if Snodename '
  +'=''EditBox'' then nodeID := EditBox'#13#10'    else if Snodename =''Memo'' '
  +'then nodeID := Memo'#13#10'    else if Snodename =''Table'' then nodeID := '
  ,'Table'#13#10'    else if Snodename =''Selectors'' then nodeID := Selectors'
  +#13#10'    else if Snodename =''Button'' then nodeID := Button'#13#10'    el'
  +'se if Snodename =''All'' then nodeID := All'#13#10'    else if Snodename ='
  +'''CheckBox'' then nodeID := CheckBox'#13#10'    else if Snodename =''RadioB'
  +'uttons'' then nodeID := RadioButtons'#13#10'    else if Snodename =''ComboB'
  +'ox'' then nodeID := ComboBox'#13#10'    else if Snodename =''Tree'' then no'
  +'deID := Tree'#13#10'    else if Snodename =''DatePicker'' then nodeID := Da'
  +'tePicker'#13#10'    else if Snodename =''ColorPicker'' then nodeID := Color'
  +'Picker'#13#10'    else if Snodename =''MainMenu'' then nodeID := MainMenu'
  +#13#10'    else if Snodename =''MenuItem'' then nodeID := MenuItem'#13#10'  '
  +'  else if Snodename =''LayoutWidgets'' then nodeID := LayoutWidgets'#13#10
  +'    else if Snodename =''HBox'' then nodeID := HBox'#13#10'    else if Snod'
  +'ename =''VBox'' then nodeID := VBox'#13#10'    else if Snodename =''GroupBo'
  +'x'' then nodeID := GroupBox'#13#10'    else if Snodename =''ScrollBox'' the'
  +'n nodeID := ScrollBox'#13#10'    else if Snodename =''TabControl'' then nod'
  +'eID := TabControl'#13#10'    else if Snodename =''TabSheet'' then nodeID :='
  +' TabSheet'#13#10'    else if Snodename =''Form'' then nodeID := Form'#13#10
  +'    else if Snodename =''Identifier'' then nodeID := Identifier'#13#10'    '
  +'else if Snodename =''ClassName'' then nodeID := ClassName'#13#10'    else i'
  +'f Snodename =''WidgetID'' then nodeID := WidgetID'#13#10'    else if Snoden'
  +'ame =''Relationship'' then nodeID := Relationship'#13#10'    else if Snoden'
  +'ame =''ChildrenOf'' then nodeID := ChildrenOf'#13#10'    else if Snodename '
  +'=''DescendentsOf'' then nodeID := DescendentsOf'#13#10'    else if Snodenam'
  +'e =''SiblingsOf'' then nodeID := SiblingsOf'#13#10'    else if Snodename ='
  +'''State'' then nodeID := State'#13#10'    else if Snodename =''Hover'' then'
  +' nodeID := Hover'#13#10'    else if Snodename =''Visited'' then nodeID := V'
  +'isited'#13#10'    else if Snodename =''Focused'' then nodeID := Focused'#13
  +#10'    else if Snodename =''StyleProperties'' then nodeID := StylePropertie'
  +'s'#13#10'    else if Snodename =''Widget'' then nodeID := Widget'#13#10'   '
  +' else if Snodename =''WidgetCorners'' then nodeID := WidgetCorners'#13#10' '
  +'   else if Snodename =''WidgetPadding'' then nodeID := WidgetPadding'#13#10
  +'    else if Snodename =''WidgetMargin'' then nodeID := WidgetMargin'#13#10
  +'    else if Snodename =''WidgetBorder'' then nodeID := WidgetBorder'#13#10
  +'    else if Snodename =''WidgetBackground'' then nodeID := WidgetBackground'
  +#13#10'    else if Snodename =''Font'' then nodeID := Font'#13#10'    else i'
  +'f Snodename =''FontFamily'' then nodeID := FontFamily'#13#10'    else if Sn'
  +'odename =''FontSize'' then nodeID := FontSize'#13#10'    else if Snodename '
  +'=''FontColor'' then nodeID := FontColor'#13#10'    else if Snodename =''Fon'
  +'tBackgroundColor'' then nodeID := FontBackgroundColor'#13#10'    else if Sn'
  +'odename =''FontWeight'' then nodeID := FontWeight'#13#10'    else if Snoden'
  +'ame =''FontStyle'' then nodeID := FontStyle'#13#10'    else if Snodename ='
  +'''Transformations'' then nodeID := Transformations'#13#10'    else if Snode'
  +'name =''Rotate'' then nodeID := Rotate'#13#10'    else if Snodename =''Scal'
  +'e'' then nodeID := Scale'#13#10'    else if Snodename =''Skew'' then nodeID'
  +' := Skew'#13#10'    else if Snodename =''States'' then nodeID := States'#13
  +#10'    else if Snodename =''Selectable'' then nodeID := Selectable'#13#10' '
  +'   else if Snodename =''Cursor'' then nodeID := Cursor'#13#10'    else if S'
  +'nodename =''Visibility'' then nodeID := Visibility'#13#10'    else if Snode'
  +'name =''Effects'' then nodeID := Effects'#13#10'    else if Snodename =''Tr'
  +'ansition'' then nodeID := Transition'#13#10'    else if Snodename =''Filter'
  +''' then nodeID := Filter'#13#10'    else if (quiet = false) then showmessag'
  +'e(''node name >''+Snodename+''< not found'');'#13#10'  end;'#13#10'  Resour'
  +'ceNodeSetIDOf:= nodeID;'#13#10'end;'#13#10#13#10#13#10'  Procedure LocalSho'
  +'wMessage( var DropAllowed:boolean;mute:boolean;mymessage:string);'#13#10'  '
  +'begin'#13#10'    DropAllowed :=false;'#13#10'    if mute=false'#13#10'    t'
  +'hen ShowMessage(mymessage)'#13#10'    else watch(mymessage);'#13#10'  end;'
  +#13#10#13#10#13#10#13#10'  Function PasteSelectedStyleResources(AllowDrop:Bo'
  +'olean;HoverOver:String;mute:Boolean;ValueObject:TNodeEventValue):boolean;'
  +#13#10'  //if mute=true then nodes are not added or alerts sent to the user '
  +'it just tests if it is ok to drop on this node'#13#10'  var'#13#10'    Sele'
  +'ctedStyleSheetNodeText,SelectedStyleSheetNodeId:string;'#13#10'    SNodeTyp'
  +'e,RNodeType:string;'#13#10'      Qualifier,RuleNodeId,NewNodeId,ANodeId:Str'
  +'ing;'#13#10'      DropIsAllowed:boolean;'#13#10'  begin'#13#10'      DropIs'
  +'Allowed:=true;'#13#10'      RNodeType:=GetTypeFromString(trim(getPropertyVa'
  ,'lue(''StyleResources'',''SelectedNodeText'')));'#13#10'      //if AllowDrop'
  +' then showmessage(''RNodeType=''+RNodeType);'#13#10'      asm'#13#10'      '
  +'  SelectedStyleSheetNodeId=ValueObject.myNode.id;'#13#10'        //if (Allo'
  +'wDrop==true) {alert(''SelectedStyleSheetNodeId=''+SelectedStyleSheetNodeId)'
  +';}'#13#10'        var ob=document.getElementById(ValueObject.myNode.id);'#13
  +#10'        if (ob!=null) {'#13#10'          // make sure the nodeid is the '
  +'''DETAILS'' element'#13#10'          if (ob.tagName==''SUMMARY'') {'#13#10
  +'            var summ=ob;'#13#10'            SelectedStyleSheetNodeId=summ.p'
  +'arentNode.id;}'#13#10'          else summ=ob.getElementsByTagName(''SUMMARY'
  +''')[0];'#13#10'          }'#13#10'          else {alert(''SelectedStyleShee'
  +'tNodeId ''+SelectedStyleSheetNodeId+'' not found''); }'#13#10#13#10'       '
  +' SelectedStyleSheetNodeText=summ.innerHTML;'#13#10'      end;'#13#10#13#10
  +'      SNodeType:=GetTypeFromString(SelectedStyleSheetNodeText);'#13#10'    '
  +'  SelectedStyleSheetNodeText:=stripOutQualifierInfo(SelectedStyleSheetNodeT'
  +'ext);'#13#10'      //if AllowDrop then showmessage(''>''+RNodeType +''<    '
  +'>''+SNodeType+''<'');'#13#10'      //EditAttributeValue(''WatchBox'','''','
  +'''ItemValue'',''>''+RNodeType +''<    >''+SNodeType+''<'');'#13#10'      //'
  +'result:=false;'#13#10'      //EXIT;'#13#10#13#10'      if not(ResourceNodeS'
  +'etIDOf(SNodeType,false )  in AllowChildren ) then'#13#10'        LocalShowM'
  +'essage( DropIsAllowed,mute,''This style tree node cannot have children'')'
  +#13#10'      else if SNodeType =''Priority'' then'#13#10'        LocalShowMe'
  +'ssage( DropIsAllowed,mute,''Priority options can be edited, but cannot have'
  +' children'')'#13#10'      else if SNodeType ='''' then'#13#10'        Local'
  +'ShowMessage( DropIsAllowed,mute,''Select a Style resource before pasting'')'
  +#13#10'      else if SNodeType ='''' then'#13#10'        LocalShowMessage( D'
  +'ropIsAllowed,mute,''Select a StyleSheet node before pasting'')'#13#10'     '
  +' else if (SNodeType =''StyleProperties'')'#13#10'      then'#13#10'      be'
  +'gin'#13#10'          if  (ResourceNodeSetIDOf(RNodeType,false) in StyleProp'
  +'ertyNodes )'#13#10'          then'#13#10'          begin'#13#10'           '
  +'  if (AllowDrop =true) then'#13#10'               //!! assumes the selected'
  +' node is the parent'#13#10'               NewNodeId:=TXTree(StylesNode).Ins'
  +'ertNewChildNode(RNodeType+''.''+''(''+getqualifierdefault(RNodeType)+'')'')'
  +';'#13#10'          end'#13#10'          else LocalShowMessage( DropIsAllowe'
  +'d,mute,''Only Style property types can be added to a set of style property '
  +'nodes. (selected type is ''+RNodeType+'')'');'#13#10'      end'#13#10'     '
  +' else'#13#10'      begin'#13#10'        if (SNodeType =''StyleRule'') then'
  +#13#10'          LocalShowMessage( DropIsAllowed,mute,''You can only add the'
  +' the properties and targets of a style rule - not to the style rule itself'
  +''')'#13#10'        else if (SNodeType =''StyleSheet'')'#13#10'        then'
  +#13#10'        begin'#13#10'          if (RNodeType <>''StyleRule'') then'#13
  +#10'            LocalShowMessage( DropIsAllowed,mute,''Only a StyleRule can '
  +'be added to the StyleSheet node'')'#13#10'          else'#13#10'          b'
  +'egin'#13#10'            Qualifier:='' '';//prompt( ''Please name this Style'
  +' Rule :-'', DateTimeToStr(Now));'#13#10'            if (AllowDrop =true) th'
  +'en'#13#10'            begin'#13#10'              //!! assumes root node has'
  +' been selected'#13#10'              NewNodeId:=TXTree(StylesNode).InsertNew'
  +'ChildNode(''StyleRule'');'#13#10'              //now need to select this no'
  +'de'#13#10'              //TXTree(StylesNode).SelectedNodeId:=NewNodeId+''Su'
  +'mmary'';'#13#10'              TXTree(StylesNode).SelectedNodeId:=NewNodeId;'
  +#13#10'              // and insert the standard set of child nodes'#13#10'  '
  +'            TXTree(StylesNode).InsertNewChildNode(''StyleTargets'');'#13#10
  +'              TXTree(StylesNode).InsertNewChildNode(''StyleProperties'');'
  +#13#10'              ANodeId:=TXTree(StylesNode).InsertNewChildNode(''Priori'
  +'ty.(''+getqualifierdefault(''Priority'')+'')'');'#13#10'              TXTre'
  +'e(StylesNode).InsertNewChildNode(''State.(''+getqualifierdefault(''State'')'
  +'+'')'');'#13#10'              TXTree(StylesNode).InsertNewChildNode(''Group'
  +'.(''+getqualifierdefault(''Group'')+'')'');'#13#10'            end;'#13#10
  +'          end;'#13#10'        end'#13#10'        else'#13#10'        begin'
  +#13#10'          //showmessage(''SelectedStyleSheetNodeId=''+SelectedStyleSh'
  +'eetNodeId);'#13#10'          //showmessage(''num children is ''+inttostr(le'
  +'ngth(TXTree(StylesNode).GetChildNodes(SelectedStyleSheetNodeId))));'#13#10
  +'        if (SNodeType =''StyleTargets'')'#13#10'        and (length(TXTree('
  +'StylesNode).GetChildNodes(SelectedStyleSheetNodeId)) > 0)'#13#10'        th'
  +'en'#13#10'          LocalShowMessage( DropIsAllowed,mute,''To add more than'
  ,' one target use a Logical group node (e.g. (And)) then add them as children'
  +' to it'')'#13#10'        else'#13#10'        begin'#13#10'           if ( ('
  +'ResourceNodeSetIDOf(RNodeType,false) in TargetGroupingNodes)'#13#10'       '
  +'    or (ResourceNodeSetIDOf(RNodeType,false) in StyletargetNodes)'#13#10'  '
  +'         or (ResourceNodeSetIDOf(RNodeType,false) in RelationshipNodes))'#13
  +#10'           then'#13#10'           begin'#13#10'             if (Resource'
  +'NodeSetIDOf(RNodeType,false) in EditableTargetNodes)'#13#10'             or'
  +' (ResourceNodeSetIDOf(RNodeType,false) in TargetNodesWithOptions)'#13#10'  '
  +'           then'#13#10'             begin'#13#10'               if (AllowDr'
  +'op =true) then'#13#10'               begin'#13#10'                 NewNodeI'
  +'d:=TXTree(StylesNode).InsertNewChildNode(RNodeType+''.''+''(''+getqualifier'
  +'default(RNodeType)+'')'');'#13#10'               end;'#13#10'             e'
  +'nd'#13#10'             else'#13#10'             begin'#13#10'              '
  +' if (AllowDrop =true) then'#13#10'               begin'#13#10'             '
  +'    NewNodeId:=TXTree(StylesNode).InsertNewChildNode(RNodeType);'#13#10'   '
  +'            end;'#13#10'             end;'#13#10'            end'#13#10'   '
  +'        else LocalShowMessage( DropIsAllowed,mute,''Only Style target types'
  +' (or logical group or relationship nodes) can be added to a style targets n'
  +'ode'');'#13#10'        end;'#13#10'        end;'#13#10'      end;'#13#10#13
  +#10'      if (AllowDrop=true)'#13#10'      and (NewNodeId<>'''') then'#13#10
  +'      begin'#13#10'        TXTree(StylesNode).SelectedNodeId:=NewNodeId;'#13
  +#10'        PopulateStyleEditor(false);'#13#10'      end;'#13#10#13#10'     '
  +' DropTarget:=SNodeType;'#13#10'      if DropIsAllowed then watch('' '');'#13
  +#10'      result:=DropIsAllowed;'#13#10'  end;'#13#10#13#10'function GetOpti'
  +'onType(SNodeType:String):String;'#13#10'var'#13#10'  i:integer;'#13#10'  te'
  +'mpstringlist:tstringlist;'#13#10'begin'#13#10'  result:='''';'#13#10'  for '
  +'i:= 0 to length( StyleOptions)-1 do'#13#10'  begin'#13#10'    tempstringlis'
  +'t:=StyleOptions[i];'#13#10'    if SNodeType=tempstringlist[0]'#13#10'    th'
  +'en'#13#10'    begin'#13#10'       result := tempstringlist[2];'#13#10'    e'
  +'nd;'#13#10'  end;'#13#10'end;'#13#10#13#10'  Procedure UpdateNodeQualifierF'
  +'ield;'#13#10'  var  SelectedStyleSheetNodeText,SelectedStyleSheetNodeType,C'
  +'urrentOptionValue,CurrentOptionType:string;'#13#10'       itemIndex,i,j:int'
  +'eger;'#13#10'       nodeid:String;'#13#10'  begin'#13#10'      // get the n'
  +'ode type and text string'#13#10'    SelectedStyleSheetNodeText:=trim(getPro'
  +'pertyValue(''StyleSheet'',''SelectedNodeText''));'#13#10'    SelectedStyleS'
  +'heetNodeType:=GetTypeFromString(SelectedStyleSheetNodeText);'#13#10'    Cur'
  +'rentOptionType:=GetOptionType(SelectedStyleSheetNodeType);'#13#10'    if Se'
  +'lectedStyleSheetNodeType<>'''' then'#13#10'    begin'#13#10'      //showmes'
  +'sage(''drop down visible ? =''+getPropertyValue(''StyleNodeQualifier'',''Is'
  +'Visible'') );'#13#10'      if getPropertyValue(''StyleNodeQualifier'',''IsV'
  +'isible'') = ''True'''#13#10'      then'#13#10'      begin'#13#10'         C'
  +'urrentOptionValue := getPropertyValue(''StyleNodeQualifier'',''ItemValue'')'
  +#13#10'      end'#13#10'      else'#13#10'      begin'#13#10'        Current'
  +'OptionValue := trim(getPropertyValue(''QualifierEditBox'',''ItemValue''));'
  +#13#10'        if ((SelectedStyleSheetNodeType=''ClassName'') or (SelectedSt'
  +'yleSheetNodeType=''WidgetID'')) then'#13#10'        begin'#13#10'          '
  +'while ((FoundString(CurrentOptionValue,'' '')>0)'#13#10'             or (Fo'
  +'undString(CurrentOptionValue,''.'')>0)) do'#13#10'             begin'#13#10
  +'               showmessage(''Please enter ''+SelectedStyleSheetNodeType+'' '
  +'without spaces or "." characters'');'#13#10'               CurrentOptionVal'
  +'ue:= XIDEPrompt(''Enter ''+SelectedStyleSheetNodeType,CurrentOptionValue);'
  +#13#10'               setPropertyValue(''QualifierEditBox'',''ItemValue'',Cu'
  +'rrentOptionValue);'#13#10'             end;'#13#10'        end;'#13#10'    '
  +'  end;'#13#10'      if  (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,fal'
  +'se) in StylePropertyNodes ) then'#13#10'        SelectedStyleSheetNodeText '
  +':= SelectedStyleSheetNodeType+''.(''+CurrentOptionValue+'')'''#13#10'      '
  +'else'#13#10'        SelectedStyleSheetNodeText := SelectedStyleSheetNodeTyp'
  +'e+''.(''+CurrentOptionValue+'')'';'#13#10'      nodeid:=TXTree(StylesNode).'
  +'SelectedNodeId;'#13#10'      //showmessage(''nodeid=''+nodeid+'' new text ='
  +' ''+ SelectedStyleSheetNodeText);'#13#10'      TXTree(StylesNode).SetNodeTe'
  +'xt(nodeid,SelectedStyleSheetNodeText);'#13#10'      TXTree(StylesNode).Sele'
  +'ctedNodeId:=nodeid;'#13#10'    end;'#13#10'    setPropertyValue(''StyleTree'
  +'ApplyBtn'',''IsVisible'',''false'');'#13#10'  end;'#13#10#13#10'Procedure P'
  +'opulateStyleEditor(editInsteadOfDropDown:boolean);'#13#10'var  SelectedStyl'
  ,'eSheetNodeText,SelectedStyleSheetNodeType,CurrentOptionValue:string;'#13#10
  +'     nodeid:String;'#13#10'     CurrentOptionIndex,i,j:integer;'#13#10'    '
  +' optionstring:string;'#13#10'     tempstringlist:tstringlist;'#13#10'begin'
  +#13#10'  // get the node type and text string'#13#10'  SelectedStyleSheetNod'
  +'eText:=trim(getPropertyValue(''StyleSheet'',''SelectedNodeText''));'#13#10
  +'  nodeid:=TXTree(StylesNode).SelectedNodeId;'#13#10'  //showmessage(''Popul'
  +'ateStyleEditor ''+nodeid);'#13#10'  if (nodeid<>'''') then'#13#10'  begin'
  +#13#10'  SelectedStyleSheetNodeType:=GetTypeFromString(SelectedStyleSheetNod'
  +'eText);'#13#10'  CurrentOptionValue:=GetQualifierValue(SelectedStyleSheetNo'
  +'deText);'#13#10'  //showmessage(''PopulateStyleEditor ''+nodeid+'' type=''+'
  +'SelectedStyleSheetNodeType+'' qual=''+CurrentOptionValue);'#13#10'  if ((Re'
  +'sourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in StylePropertyNodes)/'
  +'/ to edit colors, line widths etc. using the drop down options'#13#10'     '
  +' or (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in  TargetNodesW'
  +'ithOptions)'#13#10'      or (ResourceNodeSetIDOf(SelectedStyleSheetNodeType'
  +',false)in StyleRuleSelectors))'#13#10'  and (editInsteadOfDropDown = false)'
  +#13#10'  then'#13#10'  begin'#13#10'     CurrentOptionIndex:=0;'#13#10'     '
  +'optionstring:='''';'#13#10'     // get option list for this resource type a'
  +'nd set current option values" e.g.....["Option 1","Option 2","Option 3"]'#13
  +#10'     for i:= 0 to length( StyleOptions)-1 do'#13#10'     begin'#13#10'  '
  +'     tempstringlist:=StyleOptions[i];'#13#10'       if trim(SelectedStyleSh'
  +'eetNodeType)=trim(tempstringlist[0])'#13#10'       then'#13#10'       begin'
  +#13#10'         setPropertyValue(''StyleNodeQualifier'',''Hint'',tempstringl'
  +'ist[1]);'#13#10'         for j:=3 to tempstringlist.count-1'#13#10'        '
  +' do'#13#10'         begin;'#13#10'            //showmessage(''>''+tempstrin'
  +'glist[j]+''<>''+CurrentOptionValue+''<'');'#13#10'            if trim(temps'
  +'tringlist[j]) = trim(CurrentOptionValue )'#13#10'            then  CurrentO'
  +'ptionIndex:=j-3;'#13#10'         end;'#13#10'         optionstring:=''["''+'
  +'tempstringlist[3]+''"'';'#13#10'         for j:=4 to tempstringlist.count-1'
  +' do'#13#10'         begin'#13#10'           optionstring:=optionstring+'',"'
  +'''+tempstringlist[j]+''"'';'#13#10'         end;'#13#10'         optionstri'
  +'ng:=optionstring+'']'';'#13#10'  //       setPropertyValue(''OptionEditorLa'
  +'bel'',''IsVisible'',''true'');'#13#10'       end;'#13#10'     end;'#13#10' '
  +'     // make StyleNodeQualifier drop down list visible and hide the edit bo'
  +'x'#13#10'     setPropertyValue(''QualifierEditBox'',''IsVisible'',''false'''
  +');'#13#10'     setPropertyValue(''StyleNodeQualifier'',''IsVisible'',''true'
  +''');'#13#10'     setPropertyValue(''StyleNodeQualifier'',''OptionList'',opt'
  +'ionstring);'#13#10'     setPropertyValue(''StyleNodeQualifier'',''ItemIndex'
  +''',inttostr(CurrentOptionIndex));'#13#10'     setPropertyValue(''StyleTreeE'
  +'ditBtn'',''IsVisible'',''true'');'#13#10'     setPropertyValue(''StyleTreeA'
  +'pplyBtn'',''IsVisible'',''false'');'#13#10'  end'#13#10'  else'#13#10'  // '
  +'Editing.......................'#13#10'  if ((ResourceNodeSetIDOf(SelectedSt'
  +'yleSheetNodeType,false) in StylePropertyNodes)and (editInsteadOfDropDown = '
  +'true)) // to manually edit the css string instead of using the drop downs'
  +#13#10'  or (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in Editab'
  +'leTargetNodes)// to edit class and widget ids'#13#10'  or (ResourceNodeSetI'
  +'DOf(SelectedStyleSheetNodeType,false) in StyleRuleNodes)// to edit the styl'
  +'e rule name'#13#10'  then'#13#10'  begin'#13#10'     // make StyleNodeQuali'
  +'fier drop down list not visible and show the edit box'#13#10'    //showmess'
  +'age(''CurrentOptionValue=''+CurrentOptionValue);'#13#10'     setPropertyVal'
  +'ue(''QualifierEditBox'',''IsVisible'',''true'');'#13#10'     setPropertyVal'
  +'ue(''StyleNodeQualifier'',''IsVisible'',''false'');'#13#10'     setProperty'
  +'Value(''QualifierEditBox'',''ItemValue'',CurrentOptionValue);'#13#10'     s'
  +'etPropertyValue(''StyleTreeEditBtn'',''IsVisible'',''true'');'#13#10'     s'
  +'etPropertyValue(''StyleTreeApplyBtn'',''IsVisible'',''true'');'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'     setPropertyValue(''StyleTreeEditBtn'
  +''',''IsVisible'',''false'');'#13#10'     setPropertyValue(''StyleTreeApplyB'
  +'tn'',''IsVisible'',''true'');'#13#10'     setPropertyValue(''QualifierEditB'
  +'ox'',''ItemValue'',CurrentOptionValue);'#13#10'     setPropertyValue(''Qual'
  +'ifierEditBox'',''IsVisible'',''true'');'#13#10'     setPropertyValue(''Styl'
  +'eNodeQualifier'',''IsVisible'',''false'');'#13#10'  end;'#13#10'  end'#13#10
  +'  else'#13#10'  begin'#13#10'     // there is no tree node selected'#13#10
  +'    setPropertyValue(''StyleNodeQualifier'',''OptionList'',''[]'');'#13#10
  +'    setPropertyValue(''StyleTreeEditBtn'',''IsVisible'',''false'');'#13#10
  ,'    setPropertyValue(''StyleTreeApplyBtn'',''IsVisible'',''false'');'#13#10
  +'    setPropertyValue(''QualifierEditBox'',''ItemValue'','' '');'#13#10'    '
  +'setPropertyValue(''QualifierEditBox'',''IsVisible'',''false'');'#13#10'    '
  +'setPropertyValue(''StyleNodeQualifier'',''IsVisible'',''false'');'#13#10'  '
  +'end;'#13#10'end;'#13#10#13#10'//  A(B + C)        =  A.B + A.C      // OR n'
  +'ode child of an AND node'#13#10'//  (A + B).(A + C) =  A + B . C      // OR'
  +' node child of an AND node (term in common)'#13#10'//  A(B.C)          =  A'
  +' . B . C      // AND node child of an AND node'#13#10'//  A + (B + C)     ='
  +'  A + B + C      // OR node child of an OR node'#13#10'//  A + (B.C)       '
  +'=  A.B + A.C      // AND node child of an OR  node'#13#10'//Expanding logic'
  +'al functions using Domorgan''s law'#13#10'//   or..........   A, B, C {}'#13
  +#10'//   and.........   ABC {}'#13#10'//   nor.........  :not(A):not(B):not('
  +'C) {}'#13#10'//   nand........  :not(A), :not(B), :not(C) {}'#13#10#13#10'F'
  +'unction GetStyleProperties(PropertiesNodeId,StylePriority:String):string;'
  +#13#10'var i,numchildren:integer;'#13#10'    CurrentPropertyString,CSSText:s'
  +'tring;'#13#10'    props:TStringArray;'#13#10'Begin'#13#10'  CSSText:= '''';'
  +#13#10' // showmessage(''GetStyleProperties ''+PropertiesNodeId);'#13#10'  /'
  +'/ style properties are the children of this node.'#13#10'  props:=TXTree(St'
  +'ylesNode).GetChildNodes(PropertiesNodeId);'#13#10'  asm'#13#10'    for (var'
  +' i=0; i<props.length; i++) {'#13#10'      var propid=props[i];'#13#10'     '
  +' //alert(''propid=''+propid);'#13#10'      var ob=document.getElementById(p'
  +'ropid+''Summary'');'#13#10'      if (ob!=null) {'#13#10'        var txt=ob.'
  +'innerHTML;   }'#13#10'      //alert(''txt=''+txt);'#13#10'      var qt=pas.'
  +'StylesUtils.GetOptionType(pas.StylesUtils.GetTypeFromString(txt));'#13#10' '
  +'     var qv=pas.StylesUtils.GetQualifierValue(txt);'#13#10'      //alert('''
  +'qt=''+qt+'' qv=''+qv);'#13#10'      CSSText=CSSText + qt + qv ;'#13#10#13#10
  +'      if ((StylePriority == ''1;'') || (StylePriority==''2;''))'#13#10'    '
  +'  {'#13#10'        // delete trailing spaces'#13#10'        CSSText=CSSText'
  +'.trim();'#13#10'        //remove the final ; character'#13#10'        if (C'
  +'SSText[CSSText.length-1]=='';'') {CSSText=CSSText.substring(0,CSSText.lengt'
  +'h-1);}'#13#10'        // make it important'#13#10'        CSSText=CSSText+'
  +''' !important;'''#13#10'       }'#13#10#13#10'      }'#13#10'  end;'#13#10
  +'  //showmessage(''props=''+CSSText);'#13#10'  result:=CSSText;'#13#10'end;'
  +#13#10#13#10'Function GetStylePriority(CurrentNode:String):string;'#13#10'  '
  +'Begin'#13#10'    GetStylePriority:='' Priority '';'#13#10'  end;'#13#10#13
  +#10'function MakeATermStringList:TStringList;'#13#10'var'#13#10'  newStringL'
  +'ist:TStringList;'#13#10'begin'#13#10'  newStringList := TStringList.Create;'
  +#13#10'  newStringList.Delimiter := ''.'';'#13#10'  newStringList.StrictDeli'
  +'miter := True;'#13#10'  newStringList.duplicates:=dupAccept;'#13#10'  newSt'
  +'ringList.Sorted := False;'#13#10'  newStringList.SkipLastLineBreak:=true;'
  +#13#10'  newStringList.Linebreak:='''';'#13#10'  result:=newStringList;'#13
  +#10'end;'#13#10#13#10'  Function  mergeTermLists2(SNodeType:String;list1,lis'
  +'t2:TCSSTermList;invert:boolean):TCSSTermList;'#13#10'  var i,j,k,n,m:intege'
  +'r;'#13#10'      newOutlist:TCSSTermList;'#13#10'  begin'#13#10'    if ( (Le'
  +'ftStr(SNodeType,5) = ''(And)'') and (invert=false))'#13#10'    or ((LeftStr'
  +'(SNodeType,7) = ''Not(Or)'' )and (invert=true))'#13#10'     // (a+b).(c+d) '
  +' =>  a.c + a.d  + b.c + b.d'#13#10'    then'#13#10'    begin'#13#10'      S'
  +'etlength(newOutlist,0);'#13#10'      For i:= 0 to length(list1)-1 do'#13#10
  +'      begin'#13#10'        for j:= 0 to length(list2)-1 do'#13#10'        b'
  +'egin'#13#10'          k:=length(newOutlist);'#13#10'          Setlength(new'
  +'Outlist, k+1);'#13#10'          newOutlist[ k] := MakeATermStringList;'#13
  +#10'          for n:= 0 to list1[i].count-1 do newOutlist[ k].add(list1[i][n'
  +']);'#13#10'          for m:= 0 to list2[j].count-1 do newOutlist[ k].add(li'
  +'st2[j][m]);'#13#10'        end;'#13#10'      end;'#13#10'    end'#13#10'   '
  +' else'#13#10'    if ((LeftStr(SNodeType,4) = ''(Or)'')  and (invert=false))'
  +#13#10'    or  ((LeftStr(SNodeType,8) = ''Not(And)'')and (invert=true))'#13
  +#10'    then'#13#10'    begin'#13#10'     // (a+b)+(c+d)  =>  a + b + c + d'
  +#13#10'     Setlength(newOutlist,0);'#13#10'     For i:= 0 to length(list1)-'
  +'1 do'#13#10'      begin'#13#10'        k:=length(newOutlist);'#13#10'      '
  +'  Setlength(newOutlist, k+1);'#13#10'        newOutlist[ k] := MakeATermStr'
  +'ingList;'#13#10'        newOutlist[ k].assign(list1[i]);'#13#10'      end;'
  +#13#10'      for j:= 0 to length(list2)-1 do'#13#10'      begin'#13#10'     '
  +'   k:=length(newOutlist);'#13#10'        Setlength(newOutlist, k+1);'#13#10
  +'        newOutlist[ k] := MakeATermStringList;'#13#10'        newOutlist[ k'
  ,'].assign(list2[j]);'#13#10'      end;'#13#10'    end;'#13#10'    mergeTermL'
  +'ists2:=newOutlist;'#13#10'  end;'#13#10#13#10'  Function FlattenSubTree2(Cu'
  +'rrentNodeId:String;invert:boolean):TCSSTermList;'#13#10'  var i, j, numchil'
  +'dren:integer;'#13#10'      nodestring, SNodeType, SQualifier, str :string;'
  +#13#10'      childnodes:TStringArray;'#13#10'      OutList1,OutList2:TCSSTer'
  +'mList;'#13#10'  begin'#13#10'    //showmessage(''FlattenSubTree2 ''+Current'
  +'NodeId);'#13#10'    childnodes:=TXTree(StylesNode).GetChildNodes(CurrentNod'
  +'eId);'#13#10'    SNodeType:=GetTypeFromString(TXTree(StylesNode).TextOfNode'
  +'(CurrentNodeId));'#13#10'    numchildren:= length(childnodes);'#13#10'    i'
  +'f numchildren = 0 then'#13#10'    begin'#13#10'      //showmessage(''target'
  +'s ''+CurrentNodeId+'' no children'');'#13#10'      Setlength(OutList1,1);'
  +#13#10'      OutList1[0] := MakeATermStringList;'#13#10'      //showmessage('
  +'''type=''+SNodeType);'#13#10'      SQualifier:=GetQualifierValue(TXTree(Sty'
  +'lesNode).TextOfNode(CurrentNodeId));'#13#10'      //showmessage(''qual=''+S'
  +'Qualifier);'#13#10'      if (SNodeType=''ClassName'')or(SNodeType=''WidgetI'
  +'D'')'#13#10'      then nodestring :=SQualifier'#13#10'      else nodestring'
  +' :=SNodeType;'#13#10'      nodestring:=''.''+nodestring;'#13#10'      if in'
  +'vert = false'#13#10'      then OutList1[0].Add(nodestring )'#13#10'      el'
  +'se OutList1[0].Add('':not(''+nodestring +'')'')'#13#10'    end'#13#10'    e'
  +'lse'#13#10'    begin'#13#10'     // showmessage(''haschildren.  SNodeType='
  +'''+SNodeType);'#13#10'      if ((LeftStr(SNodeType,8) = ''Not(And)''))'#13
  +#10'      or ((LeftStr(SNodeType,7) = ''Not(Or)'' ))'#13#10'      then'#13#10
  +'      begin'#13#10'        if invert=true then invert:=false else invert:=t'
  +'rue;'#13#10'      end;'#13#10'      OutList1:= FlattenSubTree2(childnodes[0'
  +'],invert);'#13#10'      if numchildren >1 then'#13#10'      for i := 1 to  '
  +'numchildren - 1'#13#10'      do'#13#10'      begin'#13#10'        OutList2:'
  +'= FlattenSubTree2(childnodes[i],invert);'#13#10'        OutList1:=mergeTerm'
  +'Lists2(SNodeType,OutList1,OutList2,invert);'#13#10'//        str:='''';'#13
  +#10'//        for j:=0 to length(OutList1)-1 do str:=str+OutList1[j].Text;'
  +#13#10'//        showmessage(''i=''+inttostr(i)+'' OutList1=''+str+''<'');'
  +#13#10'      end;'#13#10'    end;'#13#10'    result:=outlist1;'#13#10'  end;'
  +#13#10#13#10'  Function MaybeAddTXForWidgetTypeTargets(TargetString:string):'
  +'string;'#13#10'  var teststring:string;'#13#10'  begin'#13#10'    teststrin'
  +'g:=stringreplace(TargetString,''"'','''',[rfReplaceAll]);  // delete double'
  +' quotes'#13#10'    teststring:=rightstr(teststring,length(teststring)-1); /'
  +'/ delete leading full stop'#13#10'    if ResourceNodeSetIDOf(teststring,tru'
  +'e) in styletargetnodes'#13#10'    then TargetString:=''".TX''+teststring+'''
  +'"'';'#13#10'    if TargetString = ''".TXAll"'' then   TargetString:= ''*'';'
  +#13#10'    MaybeAddTXForWidgetTypeTargets:=TargetString;'#13#10'  end;'#13#10
  +#13#10'Function GetStyleTargets(CurrentNode:String):string;'#13#10'var CSSTe'
  +'rmList:TCSSTermList;'#13#10'    CSSText:string;'#13#10'    i,numterms:integ'
  +'er;'#13#10'Begin'#13#10'  //showmessage(''GetStyleTargets ''+CurrentNode);'
  +#13#10'  setlength(CSSTermList,0);'#13#10'  CSSTermList:=FlattenSubTree2(Cur'
  +'rentNode,false);'#13#10#13#10'  numterms:=length(CSSTermList) ;'#13#10'  if'
  +' numterms >0 then'#13#10'  begin'#13#10'    //CSSText:=  MaybeAddTXForWidge'
  +'tTypeTargets(CSSTermList[0].DelimitedText);'#13#10'    CSSText:=  MaybeAddT'
  +'XForWidgetTypeTargets(CSSTermList[0].Text);'#13#10'    // showmessage(''CSS'
  +'Text=''+CSSText);'#13#10'    for i:=1 to numterms-1 do'#13#10'    begin'#13
  +#10'      CSSText:=CSSText+'' , ''+MaybeAddTXForWidgetTypeTargets(CSSTermLis'
  +'t[i].Text);'#13#10'    end;'#13#10'  end;'#13#10'  result:=stringreplace(CS'
  +'SText,''"'','''',[rfReplaceAll]);'#13#10'end;'#13#10#13#10#13#10'Function G'
  +'enerateStyleRule(RuleNodeId:String):string;'#13#10'var i:integer;'#13#10'  '
  +'  Stylepriority,StyleState,StyleTargets,StyleProperties,StyleGroup,TargetSt'
  +'ring:String;'#13#10'    ruleNodes:TStringArray;'#13#10'    str:string;'#13
  +#10'    TopNode:TDataNode;'#13#10'begin'#13#10'  //showmessage(''GenerateSty'
  +'leRule ''+RuleNodeId);'#13#10'  setlength(ruleNodes,0);'#13#10'  ruleNodes:'
  +'=TXTree(StylesNode).GetChildNodes(RuleNodeId);'#13#10#13#10'  StyleTargets:'
  +'=GetStyleTargets(ruleNodes[0]);'#13#10'  Stylepriority:=trim(GetQualifierVa'
  +'lue(TXTree(StylesNode).TextOfNode(RuleNodes[2])));'#13#10'  StyleProperties'
  +':=GetStyleProperties(ruleNodes[1],Stylepriority);'#13#10'  //showmessage('''
  +'priority=''+Stylepriority);'#13#10'//  StyleState:=trim(RuleNode.children[3'
  +'].Qualifier);'#13#10'  StyleState:=trim(GetQualifierValue(TXTree(StylesNode'
  +').TextOfNode(RuleNodes[3])));'#13#10'//  StyleGroup:=trim(RuleNode.children'
  +'[4].Qualifier);'#13#10'  StyleGroup:=trim(GetQualifierValue(TXTree(StylesNo'
  ,'de).TextOfNode(RuleNodes[4])));'#13#10#13#10#13#10'  StyleTargets:='' :-web'
  +'kit-any(''+StyleTargets+'').UI'';'#13#10#13#10'  if styleState<>''Normal;'''
  +' then StyleTargets:=StyleTargets+StyleState;'#13#10'  if StyleGroup<>''Self'
  +';'''#13#10'  then'#13#10'  begin'#13#10'    if StyleGroup =''SiblingsOf;'' '
  +'then StyleTargets:=StyleTargets+''~*'' ;'#13#10'    if StyleGroup =''Childr'
  +'enOf;'' then StyleTargets:=StyleTargets+''>*'' ;'#13#10'    if StyleGroup ='
  +'''DescendentsOf;'' then StyleTargets:=StyleTargets+ '' *'' ;'#13#10'  end;'
  +#13#10#13#10#13#10'  TargetString:=''#UIRootContents''+StyleTargets;'#13#10
  +'  //!!!! other forms.....!!!!'#13#10'  // now look for other XForms'#13#10
  +'  TopNode:=FindDataNodeById(SystemNodeTree,SystemRootName,'''',true);'#13#10
  +'  for i:=0 to length(TopNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    if '
  +'(TopNode.ChildNodes[i].NodeType=''TXForm'')'#13#10'    and (TopNode.NodeNam'
  +'e<>''CodeEditForm'')'#13#10'    and (TopNode.NodeName<>''PasteDialog'')'#13
  +#10'    and (TopNode.ChildNodes[i].IsDynamic)'#13#10'    and (TopNode.ChildN'
  +'odes[i].NameSpace='''')'#13#10'    then'#13#10'    begin'#13#10'      Targe'
  +'tString:=TargetString + '' ,#''+TopNode.ChildNodes[i].NodeName+StyleTargets'
  +';'#13#10'    end;'#13#10'  end;'#13#10#13#10'  if (Stylepriority = ''1;'') '
  +'or (Stylepriority=''3;'')'#13#10'  then'#13#10'    ExternalCSSText:=Externa'
  +'lCSSText+TargetString+'' {''+ StyleProperties +''}'''#13#10'  else'#13#10' '
  +'   InlineCSSText:=InlineCSSText+TargetString+'' {''+ StyleProperties +''} '
  +''';'#13#10#13#10#13#10'end;'#13#10#13#10'  Procedure GenerateStyleSheets;'
  +#13#10'  var CSSText,CurrentRule,PriorityOneStyleRules,PriorityTwoStyleRules'
  +',PriorityThreeStyleRules,PriorityFourStyleRules:string;'#13#10'      i, num'
  +'children:integer;'#13#10'      rules:TStringArray;'#13#10'  begin'#13#10'  '
  +'  //!!!! change this use JSON parser on the underlying treedata????'#13#10
  +#13#10' //   showmessage(''GenerateStyleSheets'');'#13#10'    PriorityOneSty'
  +'leRules:='''';'#13#10'    PriorityTwoStyleRules:='''';'#13#10'    PriorityT'
  +'hreeStyleRules:='''';'#13#10'    PriorityFourStyleRules:='''';'#13#10'    I'
  +'nlineCSSText:= '''';'#13#10'    ExternalCSSText:= '''';'#13#10#13#10'    se'
  +'tlength(rules,0);'#13#10'   // rules:=TXTree(StylesNode).GetChildNodes(''St'
  +'yleSheetContentsScrollNode'');'#13#10'    rules:=TXTree(StylesNode).GetChil'
  +'dNodes(''StyleSheetNode0'');'#13#10#13#10'    numchildren:= length(rules);'
  +#13#10'//    showmessage(''numchildren=''+inttostr(numchildren));'#13#10'   '
  +' if numchildren >0 then'#13#10'    for i := 0 to  numchildren - 1'#13#10'  '
  +'  do'#13#10'    begin'#13#10'      GenerateStyleRule(rules[i]);'#13#10'    '
  +'  //GenerateStyleRule generates the text in  InlineCSSText and  ExternalCSS'
  +'Text'#13#10'    end;'#13#10#13#10'    setPropertyValue(''GeneratedStyleShee'
  +'tText'',''ItemValue'',InlineCSSText);'#13#10' //   setPropertyValue(''Exter'
  +'nalCssText'',''ItemValue'',ExternalCSSText);'#13#10'    RefreshStyleSheet(I'
  +'nlineCSSText,ExternalCSSText);'#13#10'  end;'#13#10#13#10'procedure Initial'
  +'iseStyleResources;'#13#10'begin'#13#10'  EditAttributeValue(''StyleResource'
  +'s'','''',''TreeData'',''["StyleResources","StyleRule",["StyleTargets",["Tar'
  +'getTypes",["WidgetType",["All"],["Numeric","ProgressBar","NumericSlider","N'
  +'umberSpinner"],["Text","LabelText","Hyperlink","EditBox","Memo","Table"],["'
  +'Selectors","Button","CheckBox","RadioButtons","ComboBox","Tree","DatePicker'
  +'","ColorPicker","MainMenu","MenuItem"],["LayoutWidgets","HBox","VBox","Grou'
  +'pBox","ScrollBox","TabControl","TabSheet","Form"]],["Identifier","ClassName'
  +'","WidgetID"]],["TargetGrouping","(And)","(Or)","Not(And)","Not(Or)"]],["St'
  +'yleProperties",["Widget","WidgetPadding","WidgetBorder","WidgetCorners","Wi'
  +'dgetMargin","WidgetBackground"],["Font","FontFamily","FontSize","FontColor"'
  +',"FontBackgroundColor","FontWeight","FontStyle"],["Transformations","Rotate'
  +'","Scale","Skew"],["States","Selectable","Cursor","Visibility"],["Effects",'
  +'"Transition","Filter"]]]'');'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10
  +'procedure  UpdateOrCreateStyleSheet(StyleText,myStyleSheetTitle:string;pos:'
  +'integer);'#13#10'//https://www.w3.org/wiki/Dynamic_style_-_manipulating_CSS'
  +'_with_JavaScript'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  asm'#13#10
  +'    var foundCSSSheet;'#13#10'    foundCSSSheet = false;'#13#10'    var x ='
  +' document.getElementById(myStyleSheetTitle);'#13#10'    if (x!=null) {x.inn'
  +'erHTML = StyleText;}'#13#10'    else'#13#10'    {'#13#10'      var myStyleS'
  +'heet = document.createElement(''style'');'#13#10'      myStyleSheet.id=mySt'
  +'yleSheetTitle;'#13#10'      myStyleSheet.innerHTML = StyleText;'#13#10'    '
  +'  if (pos<0) {'#13#10'        document.head.appendChild(myStyleSheet); }'#13
  +#10'      else {'#13#10'        document.head.prepend(myStyleSheet); }'#13#10
  +'    }'#13#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10' procedure  Remove'
  ,'StyleSheet(myStyleSheetTitle:string);'#13#10' begin'#13#10'   {$ifdef JScri'
  +'pt}'#13#10'   asm'#13#10'     var x = document.getElementById(myStyleSheetT'
  +'itle);'#13#10'     if (x!=null) {x.parentNode.removeChild(x);}'#13#10'   en'
  +'d;'#13#10'   {$endif}'#13#10' end;'#13#10#13#10'Function GetIdsOrClassNames'
  +'(GetIDs:Boolean):TStringList;'#13#10'var'#13#10'   list:TStringList;'#13#10
  +'   TopNode:TdataNode;'#13#10'   i:integer;'#13#10'   function DrillDown(Sta'
  +'rtNode:TdataNode; GetIDs:Boolean):TStringList;'#13#10'   var'#13#10'     th'
  +'eList,cList:TStringList;'#13#10'     classes,tmp:String;'#13#10'     c:inte'
  +'ger;'#13#10'   begin'#13#10'     theList:=TStringList.Create;'#13#10'     t'
  +'heList.Sorted:=true;'#13#10'     theList.Duplicates := dupIgnore;'#13#10'  '
  +'   if StartNode.IsDynamic then'#13#10'       if GetIds then'#13#10'       b'
  +'egin'#13#10'         theList.Add(StartNode.NameSpace+StartNode.nodeName);'
  +#13#10'       end'#13#10'       else'#13#10'       begin'#13#10'         if '
  +'StartNode.HasAttribute(''HTMLClasses'') then'#13#10'         begin'#13#10' '
  +'          classes:=StartNode.GetAttribute(''HTMLClasses'',false).AttribValu'
  +'e;'#13#10'           if classes<>'''' then'#13#10'           begin'#13#10' '
  +'            cList:=TStringList.Create;'#13#10'             cList.StrictDeli'
  +'miter:=true;'#13#10'             cList.Delimiter:='' '';'#13#10'           '
  +'  cList.LineBreak:='' '';'#13#10'             cList.Text:=classes;'#13#10' '
  +'            cList.Sorted := True;'#13#10'             cList.Duplicates := d'
  +'upIgnore;'#13#10'             for c := clist.count - 1 downto 0 do'#13#10' '
  +'            begin'#13#10'               if Trim(clist[c]) = '''' then'#13#10
  +'                 clist.Delete(c);'#13#10'             end;'#13#10'         '
  +'    theList.AddStrings(cList);'#13#10'             cList.Free;'#13#10'     '
  +'        //tmp:=theList.Text;'#13#10'             //tmp:=cList.Text;'#13#10
  +'           end;'#13#10'         end;'#13#10'       end;'#13#10#13#10'     f'
  +'or c:=0 to length(StartNode.childnodes)-1 do'#13#10'     begin'#13#10'     '
  +'  theList.AddStrings(DrillDown(StartNode.childnodes[c],GetIDs));'#13#10'   '
  +'  end;'#13#10'     result:=theList;'#13#10'   end;'#13#10'begin'#13#10'  Cl'
  +'earInspectors;'#13#10'  list := DrillDown( MainFormProjectRoot, GetIDs);'#13
  +#10'  list.StrictDelimiter:=true;'#13#10'  list.Delimiter:=''|'';'#13#10'  l'
  +'ist.LineBreak:=''|'';'#13#10'  list.SkipLastLineBreak:=true;'#13#10'  // no'
  +'w look for other XForms'#13#10'  TopNode:=FindDataNodeById(SystemNodeTree,S'
  +'ystemRootName,'''',true);'#13#10'  for i:=0 to length(TopNode.ChildNodes)-1'
  +' do'#13#10'  begin'#13#10'    if (TopNode.ChildNodes[i].NodeType=''TXForm'''
  +')'#13#10'    and (TopNode.NodeName<>''CodeEditForm'')'#13#10'    and (TopNo'
  +'de.NodeName<>''PasteDialog'')'#13#10'    and (TopNode.ChildNodes[i].IsDynam'
  +'ic)'#13#10'    then'#13#10'    begin'#13#10'      list.AddStrings(DrillDown'
  +'(TopNode.ChildNodes[i],GetIDs));'#13#10'    end;'#13#10'  end;'#13#10'  res'
  +'ult:=list;'#13#10'end;'#13#10#13#10#13#10'Procedure SetCSSEditorStyles;'#13
  +#10'var WhiteSpaceRule,indirectWhiteSpaceRule,spoof:string;'#13#10'begin'#13
  +#10'  WhiteSpaceRule:=''.noChildren,.hasChildren { white-space: pre;}'';'#13
  +#10'  // spoof:= ''.noChildren,.hasChildren { white-space: normal;}'';'#13#10
  +'  //indirectWhiteSpaceRule:=''@import url("data:text/css;charset=utf-8,''+W'
  +'hiteSpaceRule +''") '';'#13#10'  //UpdateOrCreateStyleSheet('' '',''CSSEdit'
  +'orStyles'');'#13#10'  //UpdateOrCreateStyleSheet(spoof,''CSSEditorStyles1'''
  +');'#13#10'  UpdateOrCreateStyleSheet(WhiteSpaceRule,''CSSEditorStyles'',-1)'
  +';'#13#10#13#10'end;'#13#10#13#10'Procedure AddToOptionList(instring:string)'
  +';'#13#10'var numOptionTypes:integer;'#13#10'begin'#13#10'  numOptionTypes:='
  +'length(StyleOptions);'#13#10'  setlength(StyleOptions,numOptionTypes+1);'#13
  +#10'  StyleOptions[numOptionTypes] := TStringList.Create();'#13#10'  StyleOp'
  +'tions[numOptionTypes].Delimiter := ''|'';'#13#10'  StyleOptions[numOptionTy'
  +'pes].StrictDelimiter := True;'#13#10'  StyleOptions[numOptionTypes].Sorted '
  +':= False;'#13#10'  StyleOptions[numOptionTypes].DelimitedText:=instring;'#13
  +#10'  // the first element is the style type'#13#10'  // the second element '
  +'is the hint to be added to the editor popup'#13#10'  // the third option is'
  +' the property designator for CSS'#13#10'  // following items are the option'
  +'s for that style type'#13#10'  // an item described as "FreeFormatEdit" mea'
  +'ns the user simply types the string value with no other checking'#13#10'end'
  +';'#13#10#13#10'Procedure SetStyleOptions;'#13#10'var'#13#10'  theList:TStri'
  +'ngList;'#13#10'  begin'#13#10'     setlength(StyleOptions,0);'#13#10' //   '
  +' AddToOptionList( ''ClassName|hint|FreeFormatEdit|Class Name Not Set'');'#13
  +#10' //    AddToOptionList( ''WidgetID|hint|FreeFormatEdit|Widget ID not set'
  +''');'#13#10'    theList:=GetIdsOrClassNames(false);'#13#10'    AddToOptionL'
  ,'ist( ''ClassName||class|''+ theList.Text);'#13#10'    theList:=GetIdsOrClas'
  +'sNames(true);'#13#10'    AddToOptionList( ''WidgetID||id|''+ theList.Text);'
  +#13#10' //   theList.Free;'#13#10'    //showmessage( ''WidgetID||id''+ GetId'
  +'sOrClassNames(true));'#13#10#13#10'    AddToOptionList(''Priority|StylePrio'
  +'rityare:-1)!important in external file 2)!important inline 3)inline 4)exter'
  +'nal file |priority:|4;|3;|2;|1;'');'#13#10'    AddToOptionList(''State||Sta'
  +'te:|Normal;|:focus|:hover'');'#13#10'    AddToOptionList(''Group||Relations'
  +'hip:|Self;|SiblingsOf;|ChildrenOf;|DescendentsOf;'');'#13#10#13#10'    AddT'
  +'oOptionList(''FontFamily|Asubsetofwebsafefonts|font-family:|CourierNew,Cour'
  +'ier,monospace;|Arial,Helvetica,sans-serif;|TimesNewRoman,Times,serif;|inher'
  +'it;'');'#13#10'    AddToOptionList(''FontSize||font-size:|xx-small;|x-small'
  +';|small;|medium;|large;|x-large;|xx-large;|inherit;'');'#13#10'    AddToOpt'
  +'ionList(''FontColor||color:|white;|silver;|gray;|black;|red;|maroon;|yellow'
  +';|olive;|lime;|green;|aqua;|teal;|blue;|navy;|fuchsia;|purple;|inherit;'');'
  +#13#10'    AddToOptionList(''FontBackgroundColor||background-color:|white;|s'
  +'ilver;|gray;|black;|red;|maroon;|yellow;|olive;|lime;|green;|aqua;|teal;|bl'
  +'ue;|navy;|fuchsia;|purple;|inherit;'');'#13#10'    AddToOptionList(''FontWe'
  +'ight||font-weight:|lighter;|normal;|bold;|bolder;|inherit;'');'#13#10'    A'
  +'ddToOptionList(''FontStyle||font-style:|normal;|italic;|oblique;|line-throu'
  +'gh;|underline;|inherit;'');'#13#10#13#10'    AddToOptionList( ''WidgetBorde'
  +'r|a selection of border colors and thicknesses| border: |0.1em red solid;|0'
  +'.3em red solid;|0.5em red solid;|0.1em green solid;|0.3em green solid;|0.5e'
  +'m green solid;|0.1em blue solid;|0.3em blue solid;|0.5em blue solid;|0.1em '
  +'black solid;|0.3em black solid;|0.5em black solid;|0.1em white solid;|0.3em'
  +' white solid;|0.5em white solid;|inherit; '') ;'#13#10'    // margin is the'
  +' space around the widget'#13#10'    AddToOptionList( ''WidgetMargin|Some op'
  +'tions for the width of the margin between the widget and its border| margin'
  +': | 0.1em; | 0.3em; | 0.5em ; |  0.7em; |  0.9em; | inherit; '') ;'#13#10' '
  +'   // padding is the space around the widget and inside the border'#13#10' '
  +'   AddToOptionList( ''WidgetPadding|Some options for the width of the paddi'
  +'ng between widget border and other components|padding:|0.1em;|0.3em;|0.5em;'
  +'|0.7em;|0.9em;|inherit;'');'#13#10'    AddToOptionList( ''WidgetCorners|cho'
  +'ose one of the first four options to have one corner rounded or the finally'
  +' one to round them all |border-radius:|20px 0 0 0;|0 20px 0 0;|0 0 20px0 ;|'
  +'0 0 0 20px;|20px 20px 20px 20px;|inherit;'') ;'#13#10'    AddToOptionList('
  +'''WidgetBackground||background:|white;|silver;|gray;|black;|red;|maroon;|ye'
  +'llow;|olive;|lime;|green;|aqua;|teal;|blue;|navy;|fuchsia;|purple;|inherit;'
  +''');'#13#10#13#10'    AddToOptionList(''Scale||transform:|scale(0.5);|scale'
  +'(0.7);|scale(1.0);|scale(1.3);|scale(1.6);|scale(2.0);|inherit;'');'#13#10
  +'    AddToOptionList(''Rotate||transform:|rotate(45deg);|rotate(90deg);|rota'
  +'te(135deg);|rotate(180deg);|rotate(225deg);|rotate(270deg);|rotate(315deg);'
  +'|inherit;'');'#13#10'    AddToOptionList( ''Skew|  |transform:| skew(10deg '
  +'10deg);|skew(5deg 5deg);|skew(5deg 15deg);|skew(15deg 5deg);|inherit;'') ;'
  +#13#10#13#10'    AddToOptionList(''Cursor||cursor:|default;|pointer;|crossha'
  +'ir;|move;|text;|wait;|progress;|help;|n-resize;|ne-resize;|e-resize;|se-res'
  +'ize;|inherit;'');'#13#10'    AddToOptionList(''Visibility||visibility:|visi'
  +'ble;|hidden;|inherit;'');'#13#10'    AddToOptionList( ''Selectable|>all< se'
  +'lects text with one click instead of a double click|user-select: |auto;|non'
  +'e;|text;|all;|inherit;'');//all selects text with one click intstead of a d'
  +'oubleclick'#13#10#13#10'    AddToOptionList( ''Transition| |transition:|1s '
  +'linear;|1s ease; |0.5s linear;|0.5s ease;|1.5s linear;|1.5s ease;| inherit;'
  +''') ;'#13#10'    AddToOptionList(''Filter||filter:|none|blur(3px);|brightne'
  +'ss(0.5);|contrast(2);|grayscale(0.5);|hue-rotate(180deg);|opacity(0.5);|sat'
  +'urate(1.5);|sepia(1);|inherit;'');'#13#10#13#10'  end;'#13#10#13#10#13#10'P'
  +'rocedure SetCSSNodeTypes;'#13#10'begin'#13#10'  AllowChildren          :=[ '
  +'StyleSheet, StyleTargets, StyleProperties,_And_,_Or_,Not_And_,Not_Or_];'#13
  +#10'  StyleSheetNodes        :=[StyleSheet];'#13#10'  StyleRuleNodes        '
  +' :=[StyleRule];'#13#10'  ClassificationNodes    :=[Identifier,StyleResource'
  +'s,TargetGrouping,TargetTypes,WidgetType,Numeric,Text,Selectors,LayoutWidget'
  +'s,Relationship,State,StyleProperties,Widget,Font,Transformations,States,Eff'
  +'ects];'#13#10'  TargetGroupingNodes    :=[_And_,_Or_,Not_And_,Not_Or_];'#13
  +#10'  RelationshipNodes      :=[ChildrenOf,DescendentsOf,SiblingsOf];'#13#10
  +'  StylePropertyNodes     :=[WidgetCorners,WidgetPadding,WidgetMargin,Widget'
  +'Border,WidgetBackground,FontFamily,FontSize,FontColor,FontBackgroundColor,F'
  ,'ontWeight,FontStyle,Rotate,Scale,Skew,Selectable,Cursor,Visibility,Transiti'
  +'on,Filter];'#13#10'  StyletargetNodes       :=[All,ProgressBar,NumericSlide'
  +'r,NumberSpinner,LabelText,Hyperlink,EditBox,Memo,Table,Button,CheckBox,Radi'
  +'oButtons,ComboBox,Tree,DatePicker,ColorPicker,MainMenu,MenuItem,HBox,VBox,G'
  +'roupBox,ScrollBox,TabControl,TabSheet,Form,ClassName,WidgetID,Hover,Visited'
  +',Focused];'#13#10'  TargetNodesWithOptions :=[ClassName,WidgetID];'#13#10' '
  +' EditableTargetNodes    :=[];'#13#10'  StyleRuleSelectors     :=[Priority,S'
  +'tate,Group];'#13#10#13#10'end;'#13#10#13#10'procedure InitStyleTreeDisplay;'
  +#13#10' var'#13#10'   str:String;'#13#10' begin'#13#10'//   str:=Recursively'
  +'GenerateTheTreeDescriptionString(StyleTree);'#13#10'   EditAttributeValue('
  +'''StyleSheet'','''', ''TreeData'' ,''["StyleSheet"]'');'#13#10' end;'#13#10
  +#13#10' procedure InitialiseStyleDesigner;'#13#10' begin'#13#10'   Setlength'
  +'(StyleOptions,0);'#13#10'   Setlength(CSSTermList,1);'#13#10'   CSSTermList'
  +'[0] := TStringList.Create;'#13#10'   CSSTermList[0].Add(''*'');'#13#10'   S'
  +'etCSSNodeTypes;'#13#10'   SetStyleOptions;'#13#10'   SetCSSEditorStyles;'#13
  +#10'   EditAttributeValue(''QualifierEditBox'','''',''IsVisible'',''false'')'
  +';'#13#10'   EditAttributeValue(''StyleNodeQualifier'','''',''IsVisible'','''
  +'false'');'#13#10'   EditAttributeValue(''StyleTreeEditBtn'','''',''IsVisibl'
  +'e'',''false'');'#13#10'   EditAttributeValue(''StyleTreeApplyBtn'','''',''I'
  +'sVisible'',''false'');'#13#10'   InitStyleTreeDisplay;'#13#10#13#10'   Styl'
  +'esNode:=FindDataNodeById(systemnodetree,''StyleSheet'','''',true);'#13#10#13
  +#10' end;'#13#10#13#10'end.'#13#10#13#10#13#10
]);
LazarusResources.Add('eventlogging','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit EventLogging;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10'interfa'
  +'ce'#13#10'uses'#13#10'  SysUtils,Classes, StringUtils, NodeUtils, EventsInt'
  +'erface,TypInfo,'#13#10'  Events, XForm, XTree, XComboBox, XTabControl, XMen'
  +'u, ReplayUserDialog,'#13#10'  MacroComment, PasteDialogUnit,'#13#10'  {$ifn'
  +'def JScript}'#13#10'  Dialogs, Forms, Controls, ComCtrls, MouseAndKeyInput,'
  +' LazsUtils,'#13#10'  UtilsJSCompile;'#13#10'  {$Else}'#13#10'  HTMLUtils;'
  +#13#10'  {$endif}'#13#10#13#10'const fieldDelimiter:string = ''%^&'';'#13#10
  +'      eventDelimiter:string = ''&^%'';'#13#10#13#10'{$ifndef JScript}'#13#10
  +'type  TmouseAnimParams = record'#13#10'  Shift:TShiftState;'#13#10'  Screen'
  +'X:integer;'#13#10'  ScreenY:integer;'#13#10'  duration:integer;'#13#10'end;'
  +#13#10'  PmouseAnimParams = ^TmouseAnimParams;'#13#10'type THelperProcs = cl'
  +'ass(TObject)'#13#10'   procedure CallMove(Data:PtrInt);'#13#10'end;'#13#10
  +'{$endif}'#13#10#13#10'type'#13#10#13#10'  TMacroEvent = record'#13#10'    E'
  +'ventType:String;'#13#10'    NodeId:String;'#13#10'    eventvalue:string;'#13
  +#10'  end;'#13#10#13#10'  TMacroEvents= Array of TMacroEvent;'#13#10#13#10' '
  +' TMacroEventList = class(TObject)'#13#10'      MacroEvents:TMacroEvents;'#13
  +#10'      RecordingEnabled:boolean;'#13#10'      ReplayEnabled:boolean;'#13
  +#10'      Replaying:Boolean;'#13#10'      Eventcount:integer;'#13#10'      C'
  +'urrentEvent:integer;     // used during replay'#13#10'      CompletedEvent:'
  +'integer;   // used during replay'#13#10'      initialised:Boolean;'#13#10' '
  +'     StartState:String;'#13#10'      constructor create;'#13#10'  //    fun'
  +'ction CheckForResumeFromLocalStorage:boolean;'#13#10'      procedure add(e:'
  +'TMacroEvent);'#13#10'      function  ToMyString:string;'#13#10'      proced'
  +'ure FromMyString(instring:String);'#13#10'      procedure clear;'#13#10'   '
  +'   procedure SetMenuVisibility;'#13#10'  //    procedure ContinueReplay;'#13
  +#10'   end;'#13#10#13#10'procedure TrapEventForMacro(e:TEventStatus);'#13#10
  +'procedure StartRecording;'#13#10'procedure StopRecording;'#13#10'procedure '
  +'ResumeMacroRecording;'#13#10'procedure StartReplay;'#13#10'procedure Finish'
  +'Replay;'#13#10'procedure InsertComment;'#13#10'procedure SaveMacroToClip;'
  +#13#10'procedure DoMacroLoad(MacroString:String);'#13#10'procedure LoadMacro'
  +'FromClip(e:TEventStatus;nodeId:string);'#13#10'function ReplayUserInput(pro'
  +'mptText:String):String;'#13#10'procedure DoNextEvent(idx:integer);'#13#10'f'
  +'unction AdvanceEventLog:TMacroEvent;'#13#10'procedure SetCompletedEvent(idx'
  +':integer);'#13#10'{$ifndef JScript}'#13#10'procedure  ReplayEvent(e:TEventS'
  +'tatus;EventType,nodeID,NameSpace,myValue:PChar);'#13#10'{$else}'#13#10'proc'
  +'edure CheckEventDone(i,waitcount:integer);'#13#10'{$endif}'#13#10'procedure'
  +' ReplayEvent(e:TEventStatus;EventType,nodeID,NameSpace,myValue:String);'#13
  +#10'procedure MovePointer(NameSpace,NodeName1,NodeName2,Sub1,Sub2:String;dra'
  +'g:Boolean);'#13#10#13#10'var'#13#10'    MacroEventList:TMacroEventList;'#13
  +#10'    LoggingLabelNode:TDataNode;'#13#10'    {$ifndef JScript}'#13#10'    '
  +'Helperprocs:THelperProcs;'#13#10'    {$else}'#13#10'    MyTimeoutFunc:Strin'
  +'g;'#13#10'    {$endif}'#13#10#13#10'implementation'#13#10'uses XObjectInsp;'
  +#13#10#13#10#13#10'function StringToSubStringList(InString,delimiter:String)'
  +':TStringList;'#13#10'var items : TStringList;'#13#10'begin'#13#10'//showmes'
  +'sage(''splitting >''+Instring+''<'');'#13#10'  items := TstringList.Create;'
  +#13#10'  items.StrictDelimiter:=true;'#13#10'  items.LineBreak:=delimiter;'
  +#13#10'  items.text:= InString;'#13#10'//showmessage(''bitcount=''+inttostr('
  +'items.count));'#13#10'  StringToSubStringList:=items;'#13#10'end;'#13#10#13
  +#10#13#10'function stringsplit(str:string; separator:string):TStringList;'#13
  +#10'var'#13#10'   localStringList:TStringList;'#13#10'begin'#13#10'  localSt'
  +'ringList:=StringToSubStringList(str,separator);'#13#10'  result:=localStrin'
  +'gList;'#13#10'end;'#13#10#13#10'procedure ReplayEvent(e:TEventStatus;EventT'
  +'ype,nodeID,NameSpace,myValue:string);'#13#10'// this procedure mirrors the '
  +'''user'' actions required on UI widgets prior to'#13#10'// re-executing the'
  +' relevant event handler.'#13#10#13#10'  procedure SetAStringproperty(Widget'
  +':TObject;PropName,NewValue:String);'#13#10'  begin'#13#10'    {$ifndef JScr'
  +'ipt}'#13#10'    SetStrProp(Widget,PropName,NewValue);'#13#10'    {$else}'#13
  +#10'    SetStringProp(Widget,PropName,NewValue);'#13#10'    {$endif}'#13#10
  ,'  end;'#13#10'  procedure SetAIntegerproperty(Widget:TObject;PropName:Strin'
  +'g;NewValue:integer);'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'   '
  +' SetOrdProp(Widget,PropName,NewValue);'#13#10'    {$else}'#13#10'    SetNat'
  +'iveIntProp(Widget,PropName,NewValue);'#13#10'    {$endif}'#13#10'  end;'#13
  +#10#13#10'  var'#13#10'    eventNode:TDataNode;'#13#10'    handled:Boolean;'
  +#13#10'    i:integer;'#13#10'    bits:TStringList;'#13#10'    NodeObj:TNodeE'
  +'ventValue;'#13#10'    {$ifndef JScript}'#13#10'    MyRecPtr: PNodeDataRec;'
  +#13#10'    {$else}'#13#10'    ob:TObject;'#13#10'    {$endif}'#13#10'  begin'
  +#13#10'//    showmessage(''ReplayEvent ''+EventType+'' ''+nodeID+'' ''+myVal'
  +'ue);'#13#10'    handled:=false;'#13#10'    if NodeId<>'''' then'#13#10'    '
  +'begin'#13#10'      eventNode:=FindDataNodeById(SystemNodeTree,NodeId,NameSp'
  +'ace,true);'#13#10'      // depending on the type of node, and the event typ'
  +'e, we may need to set the state of the widget.'#13#10'      if EventType='''
  +'Change'' then'#13#10'      begin'#13#10'        if (eventNode.NodeType=''TX'
  +'EditBox'')'#13#10'        or (eventNode.NodeType=''TXCode'')'#13#10'       '
  +' or (eventNode.NodeType=''TXColorPicker'')'#13#10'        or (eventNode.Nod'
  +'eType=''TXDatePicker'')'#13#10'        or (eventNode.NodeType=''TXMemo'')'
  +#13#10'        or (eventNode.NodeType=''TXNumberSpinner'')'#13#10'        or'
  +' (eventNode.NodeType=''TXNumericSlider'')'#13#10'        or (eventNode.Node'
  +'Type=''TXRadioBtns'')'#13#10'        then'#13#10'        begin'#13#10'     '
  +'     {$ifndef JScript}'#13#10'          if (eventNode.NodeType<>''TXEditBox'
  +''')  //desktop: not handled - this will not raise a new change event, so st'
  +'ill need to call the change handler'#13#10'          then'#13#10'          '
  +'  handled:=true;'#13#10'          {$else}'#13#10'          if (eventNode.No'
  +'deType<>''TXEditBox'')  //browser: not handled - this will not raise a new '
  +'change event, so still need to call the change handler'#13#10'          and'
  +' (eventNode.NodeType<>''TXRadioBtns'')'#13#10'          then'#13#10'       '
  +'     handled:=true;'#13#10'          {$endif}'#13#10'          SetAStringpr'
  +'operty(eventNode.ScreenObject,''ItemValue'',myValue);'#13#10'        end'#13
  +#10'        else if (eventNode.NodeType=''TXComboBox'')  then'#13#10'       '
  +' begin'#13#10'          //handled:=true;'#13#10'          i:=TXComboBox(eve'
  +'ntNode.ScreenObject).IndexOfOption(myValue);'#13#10'          SetAIntegerpr'
  +'operty(eventNode.ScreenObject,''ItemIndex'',i);'#13#10'        end'#13#10' '
  +'       else if (eventNode.NodeType=''TXTabControl'') then'#13#10'        be'
  +'gin'#13#10'          //handled:=true;'#13#10'          {$ifndef JScript}'#13
  +#10'          i:=TXTabControl(eventNode.ScreenObject).IndexOfPage(myValue);'
  +#13#10'          SetAIntegerproperty(eventNode.ScreenObject,''TabIndex'',i);'
  +#13#10'          {$else}'#13#10'          ChangeTabPage(myValue,NodeId,NameS'
  +'pace);'#13#10'          {$endif}'#13#10'        end'#13#10'        else if '
  +'(eventNode.NodeType=''TXTable'') then'#13#10'        begin'#13#10'         '
  +' handled:=true;'#13#10'          SetAStringproperty(eventNode.ScreenObject,'
  +'''TableData'',myValue);'#13#10'        end;'#13#10'      end'#13#10'      e'
  +'lse if EventType=''Click'' then'#13#10'      begin'#13#10'        if (event'
  +'Node.NodeType=''TXTable'') then'#13#10'        begin'#13#10'          // Cl'
  +'ick needs to set SelectedRow, column...'#13#10'          // event data is <'
  +'row>,<col>'#13#10'          bits:=TStringList.Create;'#13#10'          bits'
  +'.StrictDelimiter:=true;'#13#10'          bits.Delimiter:='','';'#13#10'    '
  +'      bits.Text:=myValue;'#13#10'          if bits.count=2 then'#13#10'    '
  +'      begin'#13#10'            SetAIntegerproperty(eventNode.ScreenObject,'
  +'''SelectedRow'',StrToInt(bits[0]));'#13#10'            SetAIntegerproperty('
  +'eventNode.ScreenObject,''SelectedCol'',StrToInt(bits[1]));'#13#10'         '
  +' end;'#13#10'          bits.Free;'#13#10'        end;'#13#10'      end'#13
  +#10#13#10'      else if EventType=''ButtonClick'' then'#13#10'      begin'#13
  +#10'        {$ifndef JScript}'#13#10'        {$else}'#13#10'        if (even'
  +'tNode.NodeType=''TXButton'') then'#13#10'        begin'#13#10'          //h'
  +'andled:=true;'#13#10'          asm'#13#10'            ob=document.getElemen'
  +'tById(myValue+''Contents'');'#13#10'            if (ob!=null) {'#13#10'    '
  +'          // visual click...'#13#10'              //ob.style.WebkitAnimatio'
  +'nPlayState = "running";   // "paused";'#13#10'              //ob.className '
  +'= current[0].className.replace(" active", "");'#13#10'              //ob.fo'
  +'cus();'#13#10'              ob.className += " replayButton";'#13#10'       '
  +'       myTimeout(function(){pas.HTMLUtils.removeClassName(ob, "replayButton'
  +'");}, 300, ''replayButton'',0);'#13#10'            }'#13#10'          end;'
  +#13#10'        end;'#13#10'        {$endif}'#13#10'      end'#13#10'      el'
  ,'se if EventType=''TreeNodeClick'' then'#13#10'      begin'#13#10'        if'
  +' (eventNode.NodeType=''TXTree'') then'#13#10'        begin'#13#10'         '
  +' // TreeNodeClick needs to set the selected node in the tree'#13#10'       '
  +'   // event data is node id (eg DETAILS element in HTML)'#13#10'          S'
  +'etAStringproperty(eventNode.ScreenObject,''SelectedNodeId'',myValue);'#13#10
  +'        end;'#13#10'      end'#13#10'      else if EventType=''DragStart'' '
  +'then'#13#10'      begin'#13#10'        if (eventNode.NodeType=''TXTree'') t'
  +'hen'#13#10'        begin'#13#10'          {$ifndef JScript}'#13#10'        '
  +'  handled:=true;  //!!!! tbd'#13#10'          {$else}'#13#10'          Drag'
  +'gingTree:=TXTree(eventNode.ScreenObject);'#13#10'          DraggingTree.Nod'
  +'eBeingDragged:=myValue;'#13#10'          {$endif}'#13#10'        end;'#13#10
  +#13#10'      end'#13#10'      else if EventType=''Drop'' then'#13#10'      b'
  +'egin'#13#10'        if (eventNode.NodeType=''TXTree'') then'#13#10'        '
  +'begin'#13#10'          {$ifndef JScript}'#13#10'          //!!!!'#13#10'   '
  +'       {$else}'#13#10'          if DraggingTree<>nil then'#13#10'          '
  +'begin'#13#10'            // set up ''e'' data'#13#10'            NodeObj:=T'
  +'NodeEventValue.Create;'#13#10'            e:=TEventStatus.Create(''Drop'',n'
  +'odeId);'#13#10'            e.NameSpace:=NameSpace;'#13#10'            asm'
  +#13#10'              ob=document.getElementById(myValue+''Summary'');'#13#10
  +'              if (ob!=null) {'#13#10'                NodeObj.DstText=ob.inn'
  +'erHTML; //TEXT of node being dropped on'#13#10'              }'#13#10'     '
  +'       end;'#13#10'            NodeObj.myTree:=eventNode.ScreenObject;'#13
  +#10'            NodeObj.SrcText:=DraggingTree.NodeBeingDragged;'#13#10'     '
  +'       NodeObj.SourceName:=DraggingTree.myNode.NodeName;'#13#10'           '
  +' NodeObj.myNode:=ob;   //!!!! the summary node being dropped on'#13#10'    '
  +'        e.ValueObject:=NodeObj;'#13#10'          end;'#13#10'          {$en'
  +'dif}'#13#10'        end;'#13#10'      end;'#13#10'    end;'#13#10#13#10'   '
  +' if not handled then'#13#10'    begin'#13#10'      {$ifndef JScript}'#13#10
  +'      handleEvent(e,EventType,nodeId,NameSpace,myValue);'#13#10'      {$els'
  +'e}'#13#10'      // timeout here basically (eg.) because TreeNodeClick opens'
  +' the tree node on a timeout, and we want to see'#13#10'      // those chang'
  +'es on screen before continuing.'#13#10'      asm'#13#10'        myTimeout(p'
  +'as.Events.handleEvent,5,''handleEvent'',0,e,EventType,nodeID,NameSpace,myVa'
  +'lue);'#13#10'      end;'#13#10'      {$endif}'#13#10#13#10'    end;'#13#10
  +'end;'#13#10'{$ifndef JScript}'#13#10'procedure  ReplayEvent(e:TEventStatus;'
  +'EventType,nodeID,NameSpace,myValue:PChar);'#13#10'begin'#13#10'  ReplayEven'
  +'t(e,EventType,nodeID,NameSpace,StrPas(myValue));'#13#10'end;'#13#10'{$endif'
  +'}'#13#10#13#10'procedure MovePointer(NameSpace,NodeName1,NodeName2,Sub1,Sub'
  +'2:String;drag:Boolean);'#13#10'  var'#13#10'    Node1,Node2:TDataNode;'#13
  +#10'    {$ifndef JScript}'#13#10'    SelectedControl1,SelectedControl2:TCont'
  +'rol;'#13#10'    PmouseAnimInfo1,PmouseAnimInfo2: PmouseAnimParams;'#13#10' '
  +'   P:TPoint;'#13#10'    function FindTreeNodePos(TreeNode:TDataNode; id:Str'
  +'ing):TPoint;'#13#10'      var'#13#10'        theTree:TXTree;'#13#10'       '
  +' theNode:TTreeNode;'#13#10'        lRect: TRect;'#13#10'        lPoint: TPo'
  +'int;'#13#10'    begin'#13#10'       theTree:=TXTree(TreeNode.ScreenObject);'
  +#13#10'       theNode:=TMyTreeView(theTree.myControl).FindNodeById(id);'#13
  +#10'       if theNode<>nil then'#13#10'       begin'#13#10'         lRect :='
  +' theNode.DisplayRect(true);'#13#10'         lPoint.X := lRect.Left;'#13#10
  +'         lPoint.Y := lRect.Bottom;'#13#10'         lPoint := TTreeView(theT'
  +'ree.myControl).ClientToScreen(lPoint);'#13#10'       end;'#13#10'       res'
  +'ult:=lPoint;'#13#10'    end;'#13#10'    {$endif}'#13#10#13#10'begin'#13#10
  +'  {$ifndef JScript}'#13#10'  Node1:=findDataNodeById(SystemNodeTree,NodeNam'
  +'e1,NameSpace,true);'#13#10'  Node2:=findDataNodeById(SystemNodeTree,NodeNam'
  +'e2,NameSpace,true);'#13#10#13#10'  if (Node1<>nil) and (Node2<>nil)'#13#10
  +'  and (Node1.MyForm = Node2.myForm)'#13#10'  and (Node1.NodeClass=''UI'') a'
  +'nd (Node2.NodeClass=''UI'')'#13#10'  then'#13#10'  begin'#13#10'     // cha'
  +'nge the cursor to the pointy finger cursor during the move'#13#10'     Node'
  +'1.MyForm.Cursor := crHandPoint;       //!!!! not working'#13#10#13#10'     '
  +'new(PmouseAnimInfo1);'#13#10'     PmouseAnimInfo1^.duration:=500;'#13#10'  '
  +'   PmouseAnimInfo1^.Shift:=[];'#13#10#13#10'     if (Node1.NodeType= ''TXTr'
  +'ee'')'#13#10'     and (sub1<>'''') then'#13#10'     begin'#13#10'        P:'
  +'=FindTreeNodePos(Node1,sub1);'#13#10'        PmouseAnimInfo1^.ScreenX:=P.X;'
  +#13#10'        PmouseAnimInfo1^.ScreenY:=P.Y;'#13#10'        PmouseAnimInfo1'
  +'^.ScreenX:=-1;'#13#10'        PmouseAnimInfo1^.ScreenY:=-1;'#13#10'     end'
  ,#13#10'     else'#13#10'     begin'#13#10'       // find the lazarus control'
  +'s handles'#13#10'       SelectedControl1:=TControl(Node1.screenobject);'#13
  +#10#13#10'       // if there is an inner component, use that...'#13#10'     '
  +'  if HasProperty(SelectedControl1,''myControl'') then'#13#10'         Selec'
  +'tedControl1:=TControl(GetObjectProp(SelectedControl1,''myControl''));'#13#10
  +#13#10'       if (SelectedControl1.Visible=true)'#13#10'       and (Selected'
  +'Control1.ClassName<>''TXMenuItem'') then'#13#10'       begin'#13#10'       '
  +'  P:=SelectedControl1.ClientToScreen(Point(0,0));'#13#10'         //showmes'
  +'sage(inttostr(P.X)+'' ''+inttostr(P.Y));'#13#10'         PmouseAnimInfo1^.S'
  +'creenX:=P.X+trunc(SelectedControl1.width/2);'#13#10'         PmouseAnimInfo'
  +'1^.ScreenY:=P.Y+trunc(SelectedControl1.height/2);'#13#10'       end;'#13#10
  +'     end;'#13#10#13#10'     if PmouseAnimInfo1^.ScreenX>-1 then'#13#10'    '
  +' begin'#13#10'       //showmessage(''move to ''+inttostr(PmouseAnimInfo1^.S'
  +'creenX)+'',''+inttostr(PmouseAnimInfo1^.ScreenY));'#13#10'       // move th'
  +'e mouse instantly to the middle of the first control on the form'#13#10'   '
  +'    Application.QueueAsyncCall(@HelperProcs.CallMove,PtrInt(PmouseAnimInfo1'
  +'));'#13#10'     end;'#13#10#13#10'     new(PmouseAnimInfo2);'#13#10'     Pm'
  +'ouseAnimInfo2^.duration:=500;'#13#10'     PmouseAnimInfo2^.Shift:=[];'#13#10
  +'     PmouseAnimInfo2^.ScreenX:=-1;'#13#10'     PmouseAnimInfo2^.ScreenY:=-1'
  +';'#13#10#13#10'     if (Node2.NodeType= ''TXTree'')'#13#10'     and (sub2<>'
  +''''') then'#13#10'     begin'#13#10'        P:=FindTreeNodePos(Node2,sub2);'
  +#13#10'        PmouseAnimInfo2^.ScreenX:=P.X;'#13#10'        PmouseAnimInfo2'
  +'^.ScreenY:=P.Y;'#13#10'     end'#13#10'     else'#13#10'     begin'#13#10' '
  +'      SelectedControl2:=TControl(Node2.screenobject);'#13#10#13#10'       i'
  +'f HasProperty(SelectedControl2,''myControl'') then'#13#10'         Selected'
  +'Control2:=TControl(GetObjectProp(SelectedControl2,''myControl''));'#13#10#13
  +#10'       if SelectedControl2.Visible'#13#10'       and (SelectedControl2.C'
  +'lassName<>''TXMenuItem'') then'#13#10'       begin'#13#10'         P:=Selec'
  +'tedControl2.ClientToScreen(Point(0,0));'#13#10'         PmouseAnimInfo2^.Sc'
  +'reenX:=P.X+trunc(SelectedControl2.width/2);'#13#10'         PmouseAnimInfo2'
  +'^.ScreenY:=P.Y+trunc(SelectedControl2.height/2);'#13#10'       end;'#13#10
  +'     end;'#13#10#13#10'     if PmouseAnimInfo2^.ScreenX>-1 then'#13#10'    '
  +' begin'#13#10'       //showmessage(''move to ''+inttostr(PmouseAnimInfo2^.S'
  +'creenX)+'',''+inttostr(PmouseAnimInfo2^.ScreenY));'#13#10'       // move th'
  +'e mouse slowly to the middle of the second control on the form'#13#10'     '
  +'  Application.QueueAsyncCall(@HelperProcs.CallMove,PtrInt(PmouseAnimInfo2))'
  +';'#13#10'     end;'#13#10#13#10'   end;'#13#10#13#10'  {$else}'#13#10#13#10
  +'     asm'#13#10#13#10'      function CursorMove(x1,y1,x2,y2,drag) {'#13#10
  +'           // This function will change the anim'#13#10'           // Find '
  +'your animation rule by name'#13#10'    '#9'var ss = document.styleSheets[0]'
  +';'#13#10'    '#9'var anim;'#13#10'            try {'#13#10'              fo'
  +'r (var i=0; i<ss.cssRules.length; i++) {'#13#10'                   //alert('
  +'''i=''+i+'' name=''+ss.cssRules[i].name);'#13#10'    '#9#9'if (ss.cssRules['
  +'i].name === ''anim'') {'#13#10'    '#9#9'  anim = ss.cssRules[i];'#13#10'  '
  +'  '#9#9'  break;'#13#10'    '#9'        }'#13#10'                  }'#13#10
  +'               if (anim==null) {alert(''did not find anim'');}'#13#10'     '
  +'          else {'#13#10'       '#9'      var SelectedcssRule1 = anim.cssRul'
  +'es[0]; // This indicates the first line of "anim" above.'#13#10'    '#9'   '
  +'   var SelectedcssRule2 = anim.cssRules[1]; // This indicates the second li'
  +'ne of "anim" above.'#13#10'    '#9'      // Change the attributes'#13#10'  '
  +'  '#9'      SelectedcssRule1.style.cssText = '' top: ''+y1+''px; ''+'' left'
  +': ''+x1+''px; '';'#13#10'    '#9'      SelectedcssRule2.style.cssText = '' '
  +'top: ''+y2+''px; ''+'' left: ''+x2+''px; '';'#13#10'               }'#13#10
  +'            }'#13#10'            catch(err) { alert(''Error ''+ err.message'
  +'); }'#13#10'    }'#13#10'      function ACTransEnd(event) {'#13#10'        '
  +'// NB. this doesn''t fire if the animation is interrupted'#13#10'        //'
  +' Next event replay needs to wait for this animation to complete.'#13#10'   '
  +'     AnimationWaiting=false;'#13#10'      }'#13#10#13#10'      function DoA'
  +'nimation(){'#13#10'         // run the new animation by re-creating the Aut'
  +'omatedCursor div...'#13#10'         var elm = document.getElementById("Auto'
  +'matedCursor");'#13#10'      '#9'   var newone = elm.cloneNode(true);'#13#10
  +'      '#9'   elm.parentNode.replaceChild(newone, elm);'#13#10'         newo'
  +'ne.id = "AutomatedCursor";'#13#10'         if (drag==true) {'#13#10'       '
  +'    newone.innerHTML = "&#128188;";'#13#10'         }'#13#10'         else '
  ,'{'#13#10'           newone.innerHTML = "&#9756;";'#13#10'         }'#13#10
  +'         AnimationWaiting=true;'#13#10'         newone.addEventListener("an'
  +'imationend", ACTransEnd);'#13#10'      }'#13#10#13#10'       function Point'
  +'(x, y) {'#13#10'          this.x = x;'#13#10'          this.y = y;'#13#10' '
  +'       }'#13#10'       function GetElementXY(SelectedControlName) {'#13#10
  +'         var SelectedElement = document.getElementById(SelectedControlName)'
  +';'#13#10'         var rect = SelectedElement.getBoundingClientRect();'#13#10
  +'         //console.log(''GetElementXY(''+SelectedControlName+'') rect=''+re'
  +'ct.top+'',''+rect.left+'' ''+rect.width+'',''+rect.height);'#13#10'        '
  +' var p = new Point(Math.trunc(rect.left + rect.width/2), Math.trunc(rect.to'
  +'p + rect.height/2));'#13#10'         return p;'#13#10'       }'#13#10#13#10
  +'       //console.log('' CursorMove ''+NodeName1+'':''+Sub1+'' to ''+NodeNam'
  +'e2+'':''+Sub2);'#13#10'       var ptr = document.getElementById("AutomatedC'
  +'ursor");'#13#10'       ptr.style.display = "block";'#13#10#13#10'       if '
  +'(Sub1=='''') {'#13#10'         // Find the centre-point of the given elemen'
  +'t'#13#10'         var p1=GetElementXY(NodeName1);'#13#10'       }'#13#10'  '
  +'     else {'#13#10'         // Find the centre-point of the given tree node'
  +#13#10'         p1=GetElementXY(Sub1);'#13#10'       }'#13#10'       if (Sub'
  +'2=='''') {'#13#10'         // Find the centre-point of the given element'#13
  +#10'         var p2=GetElementXY(NodeName2);'#13#10'       }'#13#10'       e'
  +'lse {'#13#10'         // Find the centre-point of the given tree node'#13#10
  +'         p2=GetElementXY(Sub2);'#13#10'       }'#13#10'       if ((p2.x==0)'
  +'&&(p2.y==0)) {p2.x=p1.x; p2.y=p1.y}   //!! sometimes the returned rect is z'
  +'ero...'#13#10'       //console.log(''cursormove ''+p1.x+'',''+p1.y+'' to '''
  +'+p2.x+'',''+p2.y);'#13#10'       CursorMove(p1.x,p1.y,p2.x,p2.y,drag);'#13
  +#10'       DoAnimation();'#13#10'     end;'#13#10'  {$endif}'#13#10'end;'#13
  +#10#13#10'procedure HidePointer;'#13#10'begin'#13#10'  {$ifndef JScript}'#13
  +#10'  // not relevant in the Lazarus/desktop environment'#13#10'  {$else}'#13
  +#10' asm'#13#10'   var ptr = document.getElementById("AutomatedCursor");'#13
  +#10'   ptr.style.display = "none";'#13#10' end;'#13#10'  {$endif}'#13#10'end'
  +';'#13#10#13#10'procedure SetCompletedEvent(idx:integer);'#13#10'begin'#13#10
  +'   MacroEventList.CompletedEvent:=idx;'#13#10'end;'#13#10#13#10'procedure D'
  +'oNextEvent(idx:integer);'#13#10'var p1,p2,p3:string;'#13#10'    TempEvent:T'
  +'MacroEvent;'#13#10'    StartTime,EndTime,NewTime: TDateTime;'#13#10'    i:i'
  +'nteger;'#13#10'    sub1,sub2:String;'#13#10'    LastNode,ThisNode:TDataNode'
  +';'#13#10'begin'#13#10'  MacroEventList.CurrentEvent:=idx;'#13#10'  i:=idx;'
  +#13#10'  TempEvent:=MacroEventList.MacroEvents[i];'#13#10'  p1:=TempEvent.Ev'
  +'entType;'#13#10'  p2:=TempEvent.NodeId;'#13#10'  p3:=TempEvent.eventvalue;'
  +#13#10#13#10#13#10'  EditAttributeValue(LoggingLabelNode,''LabelCaption'','''
  +'Replay... >''+  p1 +''<  >''+  p2+''<  >''+ p3 +''< '');'#13#10#13#10'     '
  +'if  TempEvent.EventType = ''OpenSubMenu'''#13#10'     then'#13#10'     begi'
  +'n'#13#10'       ThisNode:=FindDataNodeById(SystemNodeTree,TempEvent.NodeId,'
  +''''',true);'#13#10'       {$ifndef JScript}'#13#10'       TXMenuItem(ThisNo'
  +'de.ScreenObject).Click;'#13#10'       {$else}'#13#10'       {$endif}'#13#10
  +'     end'#13#10'     else'#13#10'     begin'#13#10'       if   (TempEvent.N'
  +'odeId <> ''EventsMacroStartRecording'')'#13#10'       and  (TempEvent.NodeI'
  +'d <> ''EventsMacroStopRecording'')'#13#10'       and  (TempEvent.NodeId <> '
  +'''EventsMacroStartReplay'')'#13#10'       and  (TempEvent.NodeId <> ''Event'
  +'sMacroSaveToClip'')'#13#10'       and  (TempEvent.NodeId <> ''EventsMacroLo'
  +'adFromClip'')'#13#10'       and  (TempEvent.NodeId <> ''EventsMacroResumeRe'
  +'cording'')'#13#10'       and  (TempEvent.NodeId <> ''MacroCommentForm'')'#13
  +#10'       then'#13#10'       begin'#13#10'         // Move the animated poi'
  +'nter....'#13#10'         if (length(trim(p2))>0)'#13#10'         then'#13#10
  +'         begin'#13#10'           sub1:='''';'#13#10'           sub2:='''';'
  +#13#10'           if (i>0) and (length(trim(MacroEventList.MacroEvents[i-1].'
  +'NodeId))>0) then'#13#10'             LastNode:=FindDataNodeById(SystemNodeT'
  +'ree,MacroEventList.MacroEvents[i-1].NodeId,'''',true)'#13#10'           els'
  +'e'#13#10'             LastNode:=UIRootNode;'#13#10'           ThisNode:=Fin'
  +'dDataNodeById(SystemNodeTree,MacroEventList.MacroEvents[i].NodeId,'''',true'
  +');'#13#10'           {$ifdef JScript}'#13#10'           asm'#13#10'        '
  +'   //console.log(''DoNextEvent ''+i+'' EventType=''+p1+'' LastNode=''+LastN'
  +'ode.NodeName+'' ThisNode=''+ThisNode.NodeName);'#13#10'           end;'#13
  +#10'           {$endif}'#13#10'           if (LastNode<>nil) and (ThisNode<>'
  +'nil) then'#13#10'           begin'#13#10'             if LastNode.NodeType='
  ,'''TXTree'' then'#13#10'               sub1:=TXTree(LastNode.ScreenObject).S'
  +'electedNodeId;'#13#10'             if ThisNode.NodeType=''TXTree'' then'#13
  +#10'               sub2:=TXTree(ThisNode.ScreenObject).SelectedNodeId;'#13#10
  +'             if (TempEvent.EventType=''Drop'') then'#13#10'               M'
  +'ovePointer('''',LastNode.NodeName,p2,sub1,sub2,true)'#13#10'             el'
  +'se'#13#10'               MovePointer('''',ThisNode.NodeName,p2,sub1,sub2,fa'
  +'lse);'#13#10'           end;'#13#10'         end;'#13#10#13#10'         // '
  +'Do the Event processing......'#13#10'         {$ifndef JScript}'#13#10'    '
  +'     ReplayEvent(nil,p1,p2,'''',p3);'#13#10'         {$else}'#13#10'       '
  +'  asm'#13#10'         myTimeout(pas.EventLogging.ReplayEvent,20,''ReplayEve'
  +'nt'',0,null,p1,p2,'''',p3);'#13#10'         end;'#13#10'         {$endif}'
  +#13#10'         //...........................'#13#10#13#10'       end;'#13#10
  +'  //     else'#13#10'  //     begin'#13#10'  //       if TempEvent.NodeId <'
  +'> ''EventsMacroStopRecording'' then'#13#10'  //         showmessage(''Event'
  +' >''+TempEvent.NodeId +''< logged in the macro but not replayed'' );'#13#10
  +'  //     end;'#13#10'     end;'#13#10#13#10'     if i>=length(MacroEventLis'
  +'t.MacroEvents)-1 then'#13#10'     begin'#13#10'       FinishReplay;'#13#10
  +'     end;'#13#10#13#10'     {$ifndef JScript}'#13#10'     SetCompletedEvent'
  +'(idx);'#13#10'     {$else}'#13#10'     asm'#13#10'       if (TempEvent.Node'
  +'Id != ''EventsMacroInsertComment'') {'#13#10'         myTimeout(pas.EventLo'
  +'gging.CheckEventDone, 210, ''checkdone'',0,idx,0);'#13#10'         myTimeou'
  +'t(pas.EventLogging.SetCompletedEvent,200,(''SetCompletedEvent ''+idx.toStri'
  +'ng()),0,idx);'#13#10'       }'#13#10'     end;'#13#10'     {$endif}'#13#10
  +'end;'#13#10#13#10#13#10#13#10'Procedure TMacroEventList.SetMenuVisibility;'
  +#13#10'begin'#13#10' if self.Replaying=false then'#13#10' begin'#13#10'   if'
  +' self.RecordingEnabled then'#13#10'   begin'#13#10'     EditAttributeValue('
  +'''EventsMacroMenu'','''',''Caption'',''Macro - Recording'');'#13#10'     Ed'
  +'itAttributeValue(''EventsMacroStopRecording'','''',''isEnabled'', ''true'')'
  +' ;'#13#10'     EditAttributeValue(''EventsMacroStartRecording'','''',''isEn'
  +'abled'', ''false'');'#13#10'     EditAttributeValue(''EventsMacroStartRepla'
  +'y'','''',''isEnabled'', ''false'');'#13#10'     EditAttributeValue(''Events'
  +'MacroInsertComment'','''',''isEnabled'', ''true'') ;'#13#10'     EditAttrib'
  +'uteValue(''EventsMacroSaveToClip'','''',''isEnabled'', ''false'') ;'#13#10
  +'     EditAttributeValue(''EventsMacroLoadFromClip'','''',''isEnabled'', ''f'
  +'alse'') ;'#13#10'     EditAttributeValue(''EventsMacroResumeRecording'','''
  +''',''isEnabled'', ''false'') ;'#13#10'   end'#13#10'   else'#13#10'   begin'
  +#13#10'     EditAttributeValue(''EventsMacroMenu'','''',''Caption'',''Macro'
  +''');'#13#10'     EditAttributeValue(''EventsMacroStopRecording'','''',''isE'
  +'nabled'', ''false'') ;'#13#10'     EditAttributeValue(''EventsMacroStartRec'
  +'ording'','''',''isEnabled'', ''true'');'#13#10'     EditAttributeValue(''Ev'
  +'entsMacroStartReplay'','''',''isEnabled'', ''true'');'#13#10'     EditAttri'
  +'buteValue(''EventsMacroInsertComment'','''',''isEnabled'', ''false'') ;'#13
  +#10'     EditAttributeValue(''EventsMacroSaveToClip'','''',''isEnabled'', '''
  +'true'') ;'#13#10'     EditAttributeValue(''EventsMacroLoadFromClip'','''','
  +'''isEnabled'', ''true'') ;'#13#10'     EditAttributeValue(''EventsMacroResu'
  +'meRecording'','''',''isEnabled'', ''true'') ;'#13#10'   end;'#13#10' end'#13
  +#10' else'#13#10' begin'#13#10'   //!!!! but basically need to disallow ANY '
  +'user interaction during replay ....?????'#13#10'   EditAttributeValue(''Eve'
  +'ntsMacroMenu'','''',''Caption'',''Macro - Replaying'');'#13#10'   EditAttri'
  +'buteValue(''EventsMacroStopRecording'','''',''isEnabled'', ''false'') ;'#13
  +#10'   EditAttributeValue(''EventsMacroStartRecording'','''',''isEnabled'', '
  +'''false'');'#13#10'   EditAttributeValue(''EventsMacroStartReplay'','''','''
  +'isEnabled'', ''false'');'#13#10'   EditAttributeValue(''EventsMacroInsertCo'
  +'mment'','''',''isEnabled'', ''false'') ;'#13#10'   EditAttributeValue(''Eve'
  +'ntsMacroSaveToClip'','''',''isEnabled'', ''false'') ;'#13#10'   EditAttribu'
  +'teValue(''EventsMacroLoadFromClip'','''',''isEnabled'', ''false'') ;'#13#10
  +'   EditAttributeValue(''EventsMacroResumeRecording'','''',''isEnabled'', '''
  +'false'') ;'#13#10' end;'#13#10'//         SetPropertyValue(''StopMacroRepla'
  +'y'',''isVisible'', ''true'');'#13#10'//         SetPropertyValue(''ResumeMa'
  +'croReplay'',''isVisible'', ''true'');'#13#10#13#10'end;'#13#10#13#10'constr'
  +'uctor TMacroEventList.create;'#13#10'begin'#13#10'  setlength(MacroEvents,0'
  +');'#13#10'  EventCount:=0;'#13#10'  RecordingEnabled:=false;'#13#10'  Repla'
  +'yEnabled:=false;'#13#10'  Replaying:=false;'#13#10'  initialised:=false;'#13
  +#10'end;'#13#10#13#10'//      function TMacroEventList.CheckForResumeFromLoc'
  ,'alStorage:boolean;'#13#10'//      var startstring:string;'#13#10'//      be'
  +'gin'#13#10'//        RecordingEnabled:=false;'#13#10'//        ReplayEnable'
  +'d:=false;'#13#10'//        startstring:=getPropertyValue(''StoreMacro'',''D'
  +'ataValue'');'#13#10'//        if length(trim(startstring))>1 then'#13#10'//'
  +'        begin'#13#10'//          //showmessage(''Saved Event List is >''+st'
  +'artstring +''< '');'#13#10'//          FromMyString(startstring );'#13#10'/'
  +'/        end;'#13#10'//        SetMenuVisibility;'#13#10'//        //SetPro'
  +'pertyValue(''RecordingStatus'',''LabelCaption'',''Not Recording'');'#13#10
  +'//        initialised:=true;'#13#10'//        if (ReplayEnabled=true)'#13#10
  +'//        then  CheckForResumeFromLocalStorage:=true'#13#10'//        else '
  +' CheckForResumeFromLocalStorage:=false;'#13#10'//      end;'#13#10#13#10'pr'
  +'ocedure TMacroEventList.add(e:TMacroEvent);'#13#10'begin'#13#10'  if Record'
  +'ingEnabled = true then'#13#10'  begin'#13#10'    Eventcount:=Eventcount+1;'
  +#13#10'    setlength(MacroEvents,Eventcount);'#13#10'    MacroEvents[Eventco'
  +'unt-1].EventType:=e.EventType;'#13#10'    MacroEvents[Eventcount-1].NodeId:'
  +'=e.NodeId;'#13#10'    MacroEvents[Eventcount-1].eventvalue:=e.eventvalue;'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TMacroEventList.clear;'#13
  +#10'begin'#13#10'    Eventcount:=0;'#13#10'    MacroEventList.CurrentEvent :'
  +'=0;'#13#10'    MacroEventList.CompletedEvent:=-1;'#13#10'    setlength(Macr'
  +'oEvents,Eventcount);'#13#10'end;'#13#10#13#10'function  TMacroEventList.ToM'
  +'yString:string;'#13#10'var i:integer;'#13#10'    tempstring:string;'#13#10
  +'begin'#13#10'  //tempstring:=SubstituteSpecials(self.StartState) + eventDel'
  +'imiter +LineEnding;'#13#10'  tempstring:=self.StartState + eventDelimiter +'
  +'LineEnding;'#13#10'  if RecordingEnabled then tempstring:=tempstring + ''Tr'
  +'ue'' + eventDelimiter else tempstring:=tempstring + ''False'' + eventDelimi'
  +'ter +LineEnding;'#13#10'  if ReplayEnabled then tempstring:=tempstring + '''
  +'True'' + eventDelimiter else tempstring:=tempstring + ''False'' + eventDeli'
  +'miter +LineEnding;'#13#10'  if initialised then tempstring:=tempstring + '''
  +'True'' + eventDelimiter else tempstring:=tempstring + ''False'' + eventDeli'
  +'miter +LineEnding;'#13#10'  tempstring:=tempstring + inttostr(Eventcount) +'
  +' eventDelimiter +LineEnding;'#13#10'  tempstring:=tempstring + inttostr(Cur'
  +'rentEvent) + eventDelimiter +LineEnding;'#13#10'  tempstring:=tempstring + '
  +'inttostr(CompletedEvent) + eventDelimiter +LineEnding;'#13#10'  for i:=0 to'
  +' Eventcount - 1 do'#13#10'  begin'#13#10'    tempstring:=tempstring + Macro'
  +'Events[i].EventType + fieldDelimiter'#13#10'                           + Ma'
  +'croEvents[i].eventvalue +fieldDelimiter'#13#10'                          + '
  +'MacroEvents[i].NodeId     + eventDelimiter +LineEnding;'#13#10'  end;'#13#10
  +'  ToMyString:=tempstring;'#13#10'end;'#13#10#13#10'procedure TMacroEventLis'
  +'t.FromMyString(instring:String);'#13#10'var tempstringlist1,tempstringlist2'
  +':TStringList;'#13#10'    i:integer;'#13#10'    str:string;'#13#10'begin'#13
  +#10'  setlength(MacroEvents,0);'#13#10'  instring:=myStringReplace(instring,'
  +'eventDelimiter+LineEnding,eventDelimiter,-1,-1);'#13#10#13#10'  tempstringl'
  +'ist1:=stringsplit(instring,eventDelimiter);'#13#10'//  StartState:=UnSubsti'
  +'tuteSpecials(tempstringlist1[0]);'#13#10'  StartState:=tempstringlist1[0];'
  +#13#10'  if tempstringlist1[1]=''True'' then RecordingEnabled:=true else Rec'
  +'ordingEnabled:=false;'#13#10'  if tempstringlist1[2]=''True'' then ReplayEn'
  +'abled:=true else ReplayEnabled:=false;'#13#10'  if tempstringlist1[3]=''Tru'
  +'e'' then initialised:=true else initialised:=false;'#13#10'  Eventcount:=st'
  +'rtoint(tempstringlist1[4]);'#13#10'  CurrentEvent:=strtoint(tempstringlist1'
  +'[5]);'#13#10'  CompletedEvent:=strtoint(tempstringlist1[6]);'#13#10'  //set'
  +'length(MacroEvents,tempstringlist1.Count-7);'#13#10'  //showmessage(''Num E'
  +'vents = >''+inttostr(tempstringlist1.Count-7)+''<'');'#13#10'  for i:=7 to '
  +' tempstringlist1.Count - 1 do'#13#10'  begin'#13#10'    str:=tempstringlist'
  +'1[i];'#13#10'    setlength(MacroEvents,i-6);'#13#10'    //showmessage(''Eve'
  +'nt >''+inttostr(i-7)+''< =  >''+tempstringlist1[i]+''<'');'#13#10'    temps'
  +'tringlist2:=stringsplit( tempstringlist1[i],fieldDelimiter);'#13#10'    if '
  +'tempstringlist2.Count<>3 then showmessage(''Error in creating event from ev'
  +'ent list item >''+tempstringlist1[i]+''<'')'#13#10'    else'#13#10'    begi'
  +'n'#13#10'      MacroEvents[i-7].EventType   :=tempstringlist2[0];'#13#10'  '
  +'    MacroEvents[i-7].eventvalue  :=tempstringlist2[1];'#13#10'      MacroEv'
  +'ents[i-7].NodeId      :=tempstringlist2[2];'#13#10'    end;'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'procedure StartRecording;'#13#10'var'#13#10'  ok:Bo'
  +'olean;'#13#10'begin'#13#10'  if (MacroEventList.RecordingEnabled=false )'#13
  +#10'  then'#13#10'  begin'#13#10'    ok:=true;'#13#10'    if length(MacroEve'
  ,'ntList.MacroEvents)>0 then'#13#10'      ok:=confirm(''OK to start recording'
  +' a new Macro?'')'#13#10'    else'#13#10'      showmessage(''Recording a new'
  +' Macro'');'#13#10'    if ok then'#13#10'    begin'#13#10'      MacroEventLi'
  +'st.clear;'#13#10'      //      SetPropertyValue(''StoreMacro'',''DataValue'
  +''','' ''); // initalise the stored macro string to a blank string'#13#10'  '
  +'    MacroEventList.RecordingEnabled:=true;'#13#10'      MacroEventList.SetM'
  +'enuVisibility;'#13#10'      MacroEventList.StartState:=BuildSystemString(fa'
  +'lse);'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure Stop'
  +'Recording;'#13#10'begin'#13#10'  if (MacroEventList.RecordingEnabled=true )'
  +#13#10'  then'#13#10'  begin'#13#10'    MacroEventList.RecordingEnabled:=fal'
  +'se;'#13#10'    MacroEventList.SetMenuVisibility;'#13#10'    Showmessage(''M'
  +'acro Recording has ended'');'#13#10'  end;'#13#10'end;'#13#10#13#10'procedu'
  +'re ResumeMacroRecording;'#13#10'begin'#13#10'  MacroEventList.RecordingEnab'
  +'led:=true;'#13#10'  MacroEventList.SetMenuVisibility;'#13#10'  showmessage('
  +'''Macro Recording has been resumed'');'#13#10'end;'#13#10#13#10'procedure F'
  +'inishReplay;'#13#10'begin'#13#10'  if MacroEventList.Replaying=true then'#13
  +#10'  begin'#13#10'     Hidepointer;'#13#10'     EditAttributeValue(LoggingL'
  +'abelNode,''LabelCaption'','' '');'#13#10'     showmessage(''End of Macro Re'
  +'play'');'#13#10'     MacroEventList.Replaying:=false;'#13#10'     MacroEven'
  +'tList.SetMenuVisibility;'#13#10'  end;'#13#10'end;'#13#10#13#10'{$ifdef JSc'
  +'ript}'#13#10#13#10'procedure CheckEventDone(i,waitcount:integer);'#13#10'be'
  +'gin'#13#10'   asm'#13#10'       // console.log(''checkdone. i=''+i+'' waitc'
  +'ount=''+waitcount);'#13#10'         // waiting for event i to complete'#13
  +#10'         if (waitcount>999) {alert(''wait ''+i+''timed out'');}'#13#10' '
  +'        else'#13#10'         {'#13#10'           if ((pas.EventLogging.Macr'
  +'oEventList.CompletedEvent<i)||(JobsWaiting.length>0)) {'#13#10'            '
  +' myTimeout(pas.EventLogging.CheckEventDone, 200, (''checkdone ''+i.toString'
  +'()), 0, i, (waitcount+1));'#13#10'           }'#13#10'           else'#13#10
  +'           {'#13#10'             if (pas.EventLogging.MacroEventList.Comple'
  +'tedEvent>=i) {'#13#10'               if (i>0) {i=pas.EventLogging.MacroEven'
  +'tList.CurrentEvent;}'#13#10'               if (i< pas.EventLogging.MacroEve'
  +'ntList.Eventcount-1) {'#13#10'//                 console.log(''************'
  +'******** queueing event ''+(i+1)+'' ''+pas.EventLogging.MacroEventList.Macr'
  +'oEvents[i+1].EventType+'' ****************************'');'#13#10'         '
  +'        var diagn=(''DoNextEvent ''+(i+1).toString()+'' ''+pas.EventLogging'
  +'.MacroEventList.MacroEvents[i+1].EventType);'#13#10'                 myTime'
  +'out(pas.EventLogging.DoNextEvent, 800, diagn, 0, i+1);'#13#10'             '
  +'    }'#13#10'               else {pas.EventLogging.FinishReplay();}'#13#10
  +'             }'#13#10'             else {console.log(''doing nothing. i=''+'
  +'i+'' CurrentEvent=''+pas.EventLogging.MacroEventList.CurrentEvent);}'#13#10
  +'           }'#13#10'         }'#13#10'   end;'#13#10'end;'#13#10'{$endif}'
  +#13#10#13#10'procedure StartReplay;'#13#10'var'#13#10'  RowCount,i:integer;'
  +#13#10'begin'#13#10'  if (MacroEventList.RecordingEnabled=false )'#13#10'  t'
  +'hen'#13#10'  begin'#13#10'    if not DesignMode then'#13#10'      showmessa'
  +'ge(''Cannot load system string - switch to Design Mode first'')'#13#10'    '
  +'else'#13#10'    begin'#13#10'      if (MacroEventList.StartState='''')'#13
  +#10'      or (length(MacroEventList.MacroEvents)=0) then'#13#10'      begin'
  +#13#10'        showmessage(''No recorded macro available for replay'');'#13
  +#10'        Hidepointer;'#13#10'        MacroEventList.SetMenuVisibility;'#13
  +#10'      end'#13#10'      else'#13#10'      begin'#13#10'        DoSystemLo'
  +'ad(MacroEventList.StartState,'''');'#13#10#13#10'        //  LastNodeName:='
  +'''UIRoot'';'#13#10'        MacroEventList.Replaying:=true;'#13#10'        M'
  +'acroEventList.CurrentEvent:=0;'#13#10'        MacroEventList.CompletedEvent'
  +':=-1;'#13#10'        MacroEventList.Eventcount:=length(MacroEventList.Macro'
  +'Events);'#13#10'        MacroEventList.RecordingEnabled:=false;'#13#10'    '
  +'    MacroEventList.SetMenuVisibility;'#13#10'        RowCount:= MacroEventL'
  +'ist.Eventcount;'#13#10#13#10'        i:=0;'#13#10'        {$ifndef JScript}'
  +#13#10'        for i:=0 to RowCount-1'#13#10'        do'#13#10'        begin'
  +#13#10'          //MacroEventList.CurrentEvent:=MacroEventList.CurrentEvent+'
  +'1;'#13#10'          Application.ProcessMessages;'#13#10'          sleep(600'
  +');'#13#10'          DoNextEvent(i);'#13#10'        end;'#13#10'        {$el'
  +'se}'#13#10'        // using myTimeout so that the screen is refreshed with '
  +'any updates, before running next event'#13#10'        // BUT NEED TO HAVE T'
  +'HE PREVIOUS EVENT COMPLETED BEFORE FIRING OFF THE NEXT ONE, TO KEEP THE IN-'
  ,'EVENT TIMEOUTS IN ORDER'#13#10'        CheckEventDone(-1,0);'#13#10'       '
  +' {$endif}'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'procedure InsertComment;'#13#10'var'#13#10'  macroEvent:TMacroEvent;'
  +#13#10'begin'#13#10'  if (MacroEventList.RecordingEnabled=false )'#13#10'  t'
  +'hen'#13#10'  begin'#13#10'    if MacroEventList.Replaying then'#13#10'    b'
  +'egin'#13#10'      // replay the comment      (original events logged are: C'
  +'hange, ButtonClick, UserInput)'#13#10'      while macroevent.EventType<>''U'
  +'serInput''  do'#13#10'        macroevent:=EventLogging.AdvanceEventLog;'#13
  +#10#13#10'      if macroevent.EventType<>''UserInput'' then'#13#10'      beg'
  +'in'#13#10'        showmessage(''unable to replay inserted comment...'');'#13
  +#10'      end'#13#10'      else'#13#10'      begin'#13#10'        //showmess'
  +'age(macroevent.eventvalue);'#13#10'        MacroCommentForm.ShowHTMLText(ma'
  +'croevent.eventvalue);'#13#10'        ShowXForm(''MacroCommentForm'',true,'''
  +''');'#13#10'      end;'#13#10'    end'#13#10'    else'#13#10'      showmess'
  +'age(''Comments can only be added when Macro recording is active - Command i'
  +'gnored'');'#13#10'  end'#13#10'  else'#13#10'    //TextMessage:= XIDEPrompt'
  +'(''Enter a comment to be shown when this macro is replayed.......'','''') ;'
  +#13#10'  begin'#13#10'    // pop up a Memo component'#13#10'    MacroComment'
  +'Form.ShowMemo;'#13#10'    ShowXForm(''MacroCommentForm'',true,'''');'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'function AdvanceEventLog:TMacroEvent;'#13#10
  +'var'#13#10'  emptyrec:TMacroEvent;'#13#10'begin'#13#10'  if MacroEventList.'
  +'CurrentEvent<(length(MacroEventList.MacroEvents)-1) then'#13#10'  begin'#13
  +#10'    MacroEventList.CurrentEvent:=MacroEventList.CurrentEvent+1;'#13#10' '
  +'   result:=MacroEventList.MacroEvents[MacroEventList.CurrentEvent];'#13#10
  +'  end'#13#10'  else'#13#10'  begin'#13#10'    emptyrec.eventvalue:='''';'#13
  +#10'    result:=emptyrec;'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'funct'
  +'ion ReplayUserInput(promptText:String):String;'#13#10'var i,NameLength:inte'
  +'ger;'#13#10'    tempstr:string;'#13#10'    macroEvent:TMacroEvent;'#13#10'b'
  +'egin'#13#10'  // pop the original user-entered string off the event log (sh'
  +'ould be next event...)'#13#10'  macroEvent:=AdvanceEventLog;'#13#10'  if ma'
  +'croEvent.EventType<>''UserInput'' then'#13#10'    showmessage(''oops cannot'
  +' retrieve original user input'')'#13#10'  else'#13#10'  begin'#13#10'    te'
  +'mpstr:=macroEvent.eventvalue;'#13#10'    NameLength:=length(tempstr);'#13#10
  +'//    showmessage(''showing popup to test replay of get name dialogue ... s'
  +'tring = ''+tempstr);'#13#10'    ReplayUserDialog.theText:=tempstr;'#13#10#13
  +#10'    showXForm(''ReplayUserDialogForm'',true);'#13#10'    {$ifndef JScrip'
  +'t}'#13#10'    while ReplayUserDialogForm.Showing<>''No'' do'#13#10'      Ap'
  +'plication.ProcessMessages;'#13#10'    {$else}'#13#10'    ReplayUserDialogFo'
  +'rm.RunReplayDialog(nil);'#13#10'    {$endif}'#13#10'    result:=tempstr;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'procedure SaveMacroToClip;'#13#10'var'#13
  +#10'  str:String;'#13#10'begin'#13#10'  str:=MacroEventList.ToMyString;'#13
  +#10'  myCopyToClip(''Macro'',str );'#13#10'end;'#13#10#13#10'procedure DoMac'
  +'roLoad(MacroString:String);'#13#10'begin'#13#10'  MacroEventList.FromMyStri'
  +'ng(MacroString);'#13#10'end;'#13#10#13#10'procedure LoadMacroFromClip(e:TEv'
  +'entStatus;nodeId:string);'#13#10'var'#13#10'  MacroString:String;'#13#10'  '
  +'macroEvent:TMacroEvent;'#13#10'begin'#13#10#13#10'   if (e=nil)  or (e.Init'
  +'Running=false) then'#13#10'   begin'#13#10'     //showmessage(''new e'');'
  +#13#10'     if (e=nil) then'#13#10'     begin'#13#10'       e:=TEventStatus.'
  +'Create(''Click'',nodeId);'#13#10'     end;'#13#10'     e.initRunning:=true;'
  +#13#10'     PasteDialogUnit.CompletionEvent:=e;'#13#10'     {$ifdef JScript}'
  +#13#10'     e.AsyncProcsRunning.Add(''CopyFromClip'');'#13#10'     {$endif}'
  +#13#10#13#10'   end'#13#10'   else'#13#10'   begin'#13#10'     e.InitRunning'
  +':=false;'#13#10'   end;'#13#10#13#10'   if e.InitRunning then'#13#10'   beg'
  +'in'#13#10'     PasteDoneBtn.IsVisible:=false;'#13#10'     MacroString:=myge'
  +'tClipboardData(''Macro'');'#13#10'   end;'#13#10#13#10'   if e.EventHasWait'
  +'ingAsyncProcs = false then'#13#10'   // this is lazarus and a confirm dialo'
  +'g is not needed'#13#10'   // otherwise this is HTML and we have waited for '
  +'a ctrl-V event from the PasteDialog form'#13#10'   begin'#13#10'     {$ifnd'
  +'ef JScript}'#13#10'     // Lazarus only'#13#10'     //showmessage(''call Do'
  +'SystemLoad ''+SystemDescription);'#13#10'     DoMacroLoad(MacroString);'#13
  +#10'     {$else}'#13#10'     asm'#13#10'       pas.NodeUtils.StartingUp=fals'
  +'e;'#13#10'       var pasteTarget = document.getElementById(''PasteTargetCon'
  +'tents'');'#13#10'       var PasteString = pasteTarget.value;'#13#10'       '
  +'//alert(''Paste string = >''+PasteString+''<'' );'#13#10'       pas.EventLo'
  ,'gging.DoMacroLoad(PasteString);'#13#10'     end;'#13#10'     {$endif}'#13#10
  +'   end;'#13#10' end;'#13#10#13#10'//.......................trapper code....'
  +'..................'#13#10'procedure TrapEventForMacro(e:TEventStatus);'#13
  +#10'var'#13#10'  TempEvent:TMacroEvent;'#13#10'  ok:boolean;'#13#10'begin'#13
  +#10#13#10'   TempEvent.EventType  := e.EventType;'#13#10'   TempEvent.NodeId'
  +'     := e.NodeId;'#13#10'   TempEvent.eventvalue := e.eventvalue;'#13#10#13
  +#10'   if (MacroEventList.RecordingEnabled=true )   // recording is in progr'
  +'ess'#13#10'   then'#13#10'   begin'#13#10'     ok:=true;'#13#10'     if Tem'
  +'pEvent.NodeId = ''EventsMacroSaveToClip'' then'#13#10'     begin'#13#10'   '
  +'    Showmessage(''Stop The Macro Recording before calling Save Macro To Cli'
  +'p'');'#13#10'       ok:=false;'#13#10'     end'#13#10'     else if TempEven'
  +'t.NodeId = ''EventsMacroLoadFromClip'' then'#13#10'     begin'#13#10'      '
  +' Showmessage(''Stop The Macro Recording before calling Load Macro From Clip'
  +''');'#13#10'       ok:=false;'#13#10'     end'#13#10'     else if TempEvent'
  +'.NodeId = ''EventsMacroResumeRecording'' then'#13#10'     begin'#13#10'    '
  +'   Showmessage(''Macro Recording is already active - Resume Recording Comma'
  +'nd ignored'');'#13#10'       ok:=false;'#13#10'     end'#13#10'     else if'
  +'   (TempEvent.NodeId = ''EventsMacroStartRecording'') then'#13#10'     begi'
  +'n'#13#10'       Showmessage(''Macro Recording is already active - Start Rec'
  +'ording Command ignored'');'#13#10'       ok:=false;'#13#10'     end'#13#10
  +'     else if  (TempEvent.NodeId = ''EventsMacroStartReplay'') then'#13#10' '
  +'    begin'#13#10'       Showmessage(''Macro Recording is already active - R'
  +'eplay Command ignored'');'#13#10'       ok:=false;'#13#10'     end;'#13#10
  +#13#10'     if (ok) and (TempEvent.NodeId <> ''EventsMacroStopRecording'') t'
  +'hen'#13#10'     begin'#13#10'       MacroEventList.add(TempEvent);'#13#10' '
  +'      EditAttributeValue(LoggingLabelNode,''LabelCaption'',''Record.... >'''
  +'+  e.EventType +''<  >''+  e.NodeId+''<  >''+ e.eventvalue +''< '');'#13#10
  +'     end;'#13#10'   end;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10
  +'procedure THelperProcs.CallMove(Data:PtrInt);'#13#10'var'#13#10' Params: Tm'
  +'ouseAnimParams;'#13#10'begin'#13#10' Params:=PmouseAnimParams(Data)^;'#13#10
  +' MouseInput.Move(Params.Shift,Params.ScreenX,Params.ScreenY,Params.duration'
  +');'#13#10'end;'#13#10'{$endif}'#13#10#13#10'begin'#13#10'  // IMPORTANT: do'
  +' not use any of the dll interface functions inside the'#13#10'  // unit ini'
  +'tialization section.....errors will occur.'#13#10'   MacroEventList:=TMacro'
  +'EventList.create;'#13#10'   {$ifndef JScript}'#13#10'   HelperProcs:=THelpe'
  +'rProcs.Create;'#13#10'   AdditionalScript:='#13#10'   ''<script> '' +LineEn'
  +'ding'#13#10'//   +''function mywait(ms) {   ''  +LineEnding'#13#10'//   +'''
  +'     return new Promise(resolve => setTimeout(resolve, ms));  ''  +LineEndi'
  +'ng     //!!!! but this timeout does not refresh the screen'#13#10'//   +''}'
  +'    ''  +LineEnding'#13#10'//   +''async function mysleep(ms) {  ''  +LineE'
  +'nding'#13#10'//   +''     await mywait(ms); ''  +LineEnding'#13#10'//   +'''
  +'     return;   ''  +LineEnding'#13#10'//   +''}  ''  +LineEnding'#13#10#13
  +#10'   +''var glbTimeoutWaiting=false;  ''  +LineEnding'#13#10'   +''var Ani'
  +'mationWaiting=false;  ''  +LineEnding'#13#10'   +''var jobId=0;     ''  +Li'
  +'neEnding'#13#10'   +''var JobsWaiting=[];  ''  +LineEnding'#13#10#13#10'   '
  +'+''function runFn(fn,ms,fname,job,...args) {  ''  +LineEnding'#13#10'   +'''
  +'  var ars='''''''';  ''  +LineEnding'#13#10'   +''  for (var i = 2; i < arg'
  +'uments.length; i++) {ars=ars+'''' ''''+arguments[i];} ''  +LineEnding'#13#10
  +'//   +''  console.log(''''running ''''+fname+'''' : ''''+ars); ''  +LineEnd'
  +'ing'#13#10'   +''  fn(...args);  ''  +LineEnding'#13#10'   +''  glbTimeoutW'
  +'aiting=false;  ''  +LineEnding'#13#10'   +''  tryNextJob();  ''  +LineEndin'
  +'g'#13#10'   +''}                           ''  +LineEnding'#13#10'   +''fun'
  +'ction tryNextJob() { ''  +LineEnding'#13#10'   +''  if (JobsWaiting.length='
  +'=0) return; ''  +LineEnding'#13#10'   +''  if ((glbTimeoutWaiting==false) '
  +'''+LineEnding'#13#10'   +''   &&(AnimationWaiting==false)) ''+LineEnding'#13
  +#10'   +''    {  ''  +LineEnding'#13#10'   +''    var nextjob=JobsWaiting.sh'
  +'ift();  ''  +LineEnding'#13#10'   +''    job=nextjob.jobid;  ''  +LineEndin'
  +'g'#13#10'   +''    glbTimeoutWaiting=true;  ''  +LineEnding'#13#10'//   +'''
  +'    console.log(''''Queueing ''''+nextjob.fname);  ''  +LineEnding'#13#10'/'
  +'/   +''    console.log(nextjob); ''  +LineEnding'#13#10'   +''    setTimeou'
  +'t(runFn,nextjob.msec,   ...nextjob.args);    //args===[fn,msec,fname,job,..'
  +'.args]   ''  +LineEnding'#13#10'   +''    }   ''  +LineEnding'#13#10'   +'''
  +'  else {   ''  +LineEnding'#13#10'   +''    setTimeout(tryNextJob,100);  '''
  +'  +LineEnding'#13#10'   +''    }  ''  +LineEnding'#13#10'   +''}  ''  +Line'
  ,'Ending'#13#10'   +''function myTimeout(fn,msec,fname,job,...args) {  ''  +L'
  +'ineEnding'#13#10'   +''  var ars='''''''';   ''  +LineEnding'#13#10'   +'' '
  +' for (var i = 3; i < arguments.length; i++) {ars=ars+'''' ''''+arguments[i]'
  +';}   ''  +LineEnding'#13#10'//   +''  if (job==0) {  ''  +LineEnding'#13#10
  +'   +''    jobId=jobId+1;  ''  +LineEnding'#13#10'   +''    if (jobId>30000)'
  +' jobId=1;  ''  +LineEnding'#13#10'   +''    job=jobId;  ''  +LineEnding'#13
  +#10'//   +''    console.log(''''myTimeout ***** new job ''''+job+'''' ''''+f'
  +'name);   ''  +LineEnding'#13#10'   +''    JobsWaiting.push({jobid:job, func'
  +':fn, msec:msec, fname:fname, args:arguments});  ''  +LineEnding'#13#10'   +'
  +'''    tryNextJob();  ''  +LineEnding'#13#10'//   +''  }   ''  +LineEnding'
  +#13#10'   +''  return job;     ''  +LineEnding'#13#10'   +''}  ''  +LineEndi'
  +'ng'#13#10#13#10'   +''</script>'';'#13#10'   {$endif}'#13#10'end.'#13#10#13
  +#10
]);
LazarusResources.Add('replayuserdialog','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit ReplayUserDialog;'#13
  +#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10
  +'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUt'
  +'ils, XForm,'#13#10'  {$ifndef JScript}'#13#10'  Forms, Controls, Dialogs, E'
  +'xtCtrls,LazsUtils,'#13#10'  {$else}'#13#10'  HTMLUtils,'#13#10'  {$endif}'
  +#13#10'  WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13#10'  XLabel, XEditB'
  +'ox'#13#10'  , EventsInterface;'#13#10#13#10'type'#13#10#13#10'  { TReplayUs'
  +'erDialogForm }'#13#10#13#10'  TReplayUserDialogForm = class(TXForm)'#13#10
  +'    ReplayUserEntry: TXEditBox;'#13#10'    {$ifndef JScript}'#13#10'    Rep'
  +'layUserDialogTimer: TTimer;'#13#10'    procedure FormCreate(Sender: TObject'
  +');'#13#10'    procedure FormShow(Sender: TObject);'#13#10'    {$endif}'#13
  +#10'  private'#13#10'  public'#13#10'    procedure RunReplayDialog(Sender:TO'
  +'bject);'#13#10'  end;'#13#10#13#10'Procedure AddChars(instring:string;count'
  +'er,loopEnd:integer);'#13#10#13#10'var'#13#10'  ReplayUserDialogForm: TRepla'
  +'yUserDialogForm;'#13#10'  theText:String;'#13#10#13#10'implementation'#13#10
  +#13#10'{$R *.lfm}'#13#10#13#10'Procedure AddChars(instring:string;counter,lo'
  +'opEnd:integer);'#13#10'var tempstr:string;'#13#10'begin'#13#10'{$ifndef JSc'
  +'ript}'#13#10'   if (counter<loopEnd+1) then'#13#10'   begin'#13#10'     tem'
  +'pstr:=LeftStr(instring,counter);'#13#10'     EditAttributeValue(''ReplayUse'
  +'rEntry'','''',''ItemValue'',tempstr);'#13#10'     Application.ProcessMessag'
  +'es;'#13#10'     sleep(200);'#13#10'     AddChars(instring,counter+1,loopEnd'
  +');'#13#10'     if (counter=loopEnd) then'#13#10'     begin'#13#10'       Ap'
  +'plication.ProcessMessages;'#13#10'       sleep(1000);'#13#10'       closeXF'
  +'orm(''ReplayUserDialogForm'','''');'#13#10'     end;'#13#10'   end;'#13#10
  +'{$else}'#13#10'   // already queued up ALL of the AddChars calls (so not da'
  +'isy-chained here)'#13#10'   tempstr:=LeftStr(instring,counter+1);'#13#10'  '
  +' EditAttributeValue(''ReplayUserEntry'','''',''ItemValue'',tempstr);'#13#10
  +'{$endif}'#13#10'end;'#13#10#13#10'procedure TReplayUserDialogForm.RunReplay'
  +'Dialog(Sender:TObject);'#13#10'var'#13#10'  i,loopEnd:integer;'#13#10'begin'
  +#13#10'  {$ifndef JScript}'#13#10'  ReplayUserDialogTimer.Enabled:=false;'#13
  +#10'  AddChars(theText,0,length(theText));'#13#10'  {$else}'#13#10'  loopEnd'
  +':=length(theText);'#13#10'  // Queue up all of the AddChars jobs.'#13#10'  '
  +'asm'#13#10'    //console.log(''RunReplayDialog. text=''+pas.ReplayUserDialo'
  +'g.theText);'#13#10'    for (var i=0; i<loopEnd; i++) {'#13#10'      myTimeo'
  +'ut(pas.ReplayUserDialog.AddChars,200,''AddChars'',0,pas.ReplayUserDialog.th'
  +'eText,i,loopEnd);'#13#10'    }'#13#10'    myTimeout(pas.XForm.CloseXForm,40'
  +'0,''CloseXForm ReplayUserDialogForm'',0,''ReplayUserDialogForm'','''');'#13
  +#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'{ TReplayUserDialogFor'
  +'m }'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TReplayUserDialogForm.F'
  +'ormCreate(Sender: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(se'
  +'lf);'#13#10'end;'#13#10#13#10'procedure TReplayUserDialogForm.FormShow(Send'
  +'er: TObject);'#13#10'begin'#13#10'  ReplayUserDialogTimer.OnTimer:=@RunRepl'
  +'ayDialog;'#13#10'  ReplayUserDialogTimer.Enabled:=true;'#13#10'end;'#13#10
  +#13#10'{$endif}'#13#10#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('macrocomment','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit MacroComment;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'i'
  +'nterface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUti'
  +'ls, XForm, Events,'#13#10'  {$ifndef JScript}'#13#10'  Forms, Controls, Dia'
  +'logs, ExtCtrls,LazsUtils,'#13#10'  {$else}'#13#10'  HTMLUtils,'#13#10'  {$e'
  +'ndif}'#13#10'  WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13#10'  XLabel,'
  +' XEditBox'#13#10'  , EventsInterface, XHTMLText;'#13#10#13#10'type'#13#10#13
  +#10'  { TMacroCommentForm }'#13#10#13#10'  TMacroCommentForm = class(TXForm)'
  +#13#10'    MacroCommentMemo: TXMemo;'#13#10'    MacroCommentDone: TXButton;'
  +#13#10'    MacroCommentBtns: TXHBox;'#13#10'    MacroCommentHTMLText: TXHTML'
  +'Text;'#13#10'    XVBox1: TXVBox;'#13#10#13#10'    {$ifndef JScript}'#13#10
  +'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormShow(Se'
  +'nder: TObject);'#13#10'    {$endif}'#13#10'    procedure MacroCommentDoneHa'
  +'ndleButtonClick(e: TEventStatus; nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'    procedure MacroCommentFormHandleClosure(e: TEventStatus; nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'  private'#13#10#13#10'  public'#13
  +#10'    procedure SaveMacroComment;'#13#10'    procedure ShowMemo;'#13#10'  '
  +'  procedure ShowHTMLText(txt:String);'#13#10'  end;'#13#10#13#10'var'#13#10
  +'  MacroCommentForm: TMacroCommentForm;'#13#10#13#10'{$ifdef JScript}'#13#10
  +'procedure  ContinueReplay;'#13#10'{$endif}'#13#10#13#10#13#10'implementatio'
  +'n'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{ TMacroCommentForm }'#13#10#13#10'{'
  +'$ifndef JScript}'#13#10'procedure TMacroCommentForm.FormCreate(Sender: TObj'
  +'ect);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'end;'#13#10
  +#13#10'procedure TMacroCommentForm.FormShow(Sender: TObject);'#13#10'begin'
  +#13#10#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure TMacroComment'
  +'Form.SaveMacroComment;'#13#10'begin'#13#10'  // user has closed the form af'
  +'ter insertng comment text.'#13#10'//  {$ifndef JScript}'#13#10'   HandleEve'
  +'nt(nil,''UserInput'',''UIRootNode'','''',MacroCommentForm.MacroCommentMemo.'
  +'ItemValue);'#13#10'//  {$else}'#13#10'//  asm'#13#10'//     pas.Events.hand'
  +'leEvent(null,''UserInput'',''UIRootNode'','''',str);'#13#10'//  end;'#13#10
  +'//  {$endif}'#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure  Co'
  +'ntinueReplay;'#13#10'begin'#13#10'  asm'#13#10'    //alert(''continue repla'
  +'y...'');'#13#10'    var idx=pas.EventLogging.MacroEventList.CurrentEvent;'
  +#13#10'    myTimeout(pas.EventLogging.CheckEventDone, 210, ''checkdone'',0,i'
  +'dx,0);'#13#10'    myTimeout(pas.EventLogging.SetCompletedEvent,200,(''SetCo'
  +'mpletedEvent ''+idx.toString()),0,idx);'#13#10'  end;'#13#10'end;'#13#10'{$'
  +'endif}'#13#10#13#10'procedure TMacroCommentForm.MacroCommentDoneHandleButto'
  +'nClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  if MacroCommentMemo.IsVisible=true then'#13#10'    Sav'
  +'eMacroComment;'#13#10'  closeXForm(''MacroCommentForm'','''');     // will '
  +'call Closure handler'#13#10'end;'#13#10#13#10'procedure TMacroCommentForm.M'
  +'acroCommentFormHandleClosure(e: TEventStatus; nodeID: AnsiString; myValue: '
  +'AnsiString);'#13#10'begin'#13#10'//  showmessage(''comment form closure'');'
  +#13#10'  {$ifdef JScript}'#13#10'  if MacroCommentMemo.IsVisible=false then'
  +#13#10'  // continue replay...'#13#10'  begin'#13#10'    ContinueReplay;'#13
  +#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TMacroCommen'
  +'tForm.ShowMemo;'#13#10'begin'#13#10'  MacroCommentMemo.ItemValue:='''';'#13
  +#10'  MacroCommentMemo.IsVisible:=true;'#13#10'  MacroCommentHTMLText.IsVisi'
  +'ble:=false;'#13#10'end;'#13#10#13#10'procedure TMacroCommentForm.ShowHTMLTe'
  +'xt(txt:String);'#13#10'begin'#13#10'  MacroCommentMemo.IsVisible:=false;'#13
  +#10'  MacroCommentHTMLText.SourceText:=txt;'#13#10'  MacroCommentHTMLText.Is'
  +'Visible:=true;'#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('pyxutils','PAS',[
  'unit PyXUtils;'#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'interface'#13#10
  +#13#10'{$ifndef Python}'#13#10'implementation'#13#10'end.'#13#10'{$else}'#13
  +#10'uses'#13#10'  Classes, SysUtils, StringUtils,'#13#10'  {$ifndef JScript}'
  +#13#10'  Math, Dialogs, Forms, StdCtrls, variants,'#13#10'  PythonEngine, Py'
  +'thonGUIInputOutput,'#13#10'  DllInterface,'#13#10'  {$endif}'#13#10'  XMemo'
  +', EventsInterface;'#13#10#13#10'var'#13#10'  //PythonLibDir,'#13#10'  Pytho'
  +'nVersion:String;'#13#10#13#10'{$ifndef JScript}'#13#10'function PyodideScri'
  +'pt:TStringList;'#13#10'procedure SetupPyEngine(PyLibDir,PyVersion:String);'
  +#13#10'procedure DoPy_InitEngine;'#13#10'{$endif}'#13#10'procedure PyExeStri'
  +'ng(cmds: string);'#13#10'procedure RunInitialScript;'#13#10#13#10'//const'
  +#13#10'//  cPyLibraryWindows = ''C:\Python-for-Lazarus-master\python4lazarus'
  +'\Runtime\python38.dll'';'#13#10'//  cPyLibraryLinux = ''libpython3.8m.so.1.'
  +'0'';'#13#10'//  cPyLibraryMac = ''/Library/Frameworks/Python.framework/Vers'
  +'ions/3.8/lib/libpython3.8.dylib'';'#13#10'//  cPyZipWindows = ''python38.zi'
  +'p'';'#13#10'{$ifndef JScript}'#13#10'type'#13#10'  TMyPyEvents = class(TObj'
  +'ect)'#13#10'    procedure PyVarExtGetData(Sender: TObject; var Data: PPyObj'
  +'ect);'#13#10'    procedure PyVarExtSetData(Sender: TObject; Data: PPyObject'
  +');'#13#10'    procedure PyVarEExtGetData(Sender: TObject; var Data: PPyObje'
  +'ct);'#13#10'    procedure PyVarEExtSetData(Sender: TObject; Data: PPyObject'
  +');'#13#10'    procedure PyIOSent(Sender: TObject; const Data:AnsiString);'
  +#13#10'    procedure PyIOSentUni(Sender: TObject; const Data: UnicodeString)'
  +';'#13#10'  end;'#13#10'  TArgs=Array of Variant;'#13#10'var'#13#10'  Python'
  +'Engine1:TPythonEngine;'#13#10'  PythonIO:TPythonGUIInputOutput;'#13#10'  Py'
  +'InterfaceVar:TPythonDelphiVar;'#13#10'  PyInterfaceE:TPythonDelphiVar;'#13
  +#10'  PyEvents:TMyPyEvents;'#13#10'{$endif}'#13#10'var'#13#10'  PyMemoCompon'
  +'ent:TXmemo;'#13#10#13#10#13#10'implementation'#13#10#13#10'{$ifndef JScript'
  +'}'#13#10'var'#13#10'  glbPyObj,glbPyObjE:PPyObject;'#13#10#13#10#13#10'func'
  +'tion Arr2dstoVarArray(arr2ds:T2DStringArray):Variant;'#13#10'var'#13#10'  v'
  +'arr:Variant;'#13#10'  i,j:integer;'#13#10'begin'#13#10'  varr:=VarArrayCrea'
  +'te([0, Length(arr2ds) - 1, 0, length(arr2ds[0])-1], varVariant);'#13#10'  f'
  +'or i:=0 to length(arr2ds)-1 do'#13#10'  begin'#13#10'    for j:=0 to length'
  +'(arr2ds[0])-1 do'#13#10'    begin'#13#10'      VarArrayPut(varr,arr2ds[i,j]'
  +',[i,j]);'#13#10'      //varr[i,j]:=arr2ds[i,j];'#13#10'    end;'#13#10'  en'
  +'d;'#13#10'  result:=varr;'#13#10'end;'#13#10'function Arr3dntoVarArray(arr3'
  +'dn:T3DNumArray):Variant;'#13#10'var'#13#10'  varr:Variant;'#13#10'  i,j,k:i'
  +'nteger;'#13#10'begin'#13#10'  varr:=VarArrayCreate([0, Length(arr3dn)-1, 0,'
  +' length(arr3dn[0])-1, 0, length(arr3dn[0,0])-1], varVariant);'#13#10'  for '
  +'i:=0 to length(arr3dn)-1 do'#13#10'  begin'#13#10'    for j:=0 to length(ar'
  +'r3dn[0])-1 do'#13#10'    begin'#13#10'     for k:=0 to length(arr3dn[0,0])-'
  +'1 do'#13#10'     begin'#13#10'      VarArrayPut(varr,arr3dn[i,j,k],[i,j,k])'
  +';'#13#10'     end;'#13#10'    end;'#13#10'  end;'#13#10'  result:=varr;'#13
  +#10'end;'#13#10'function ConvertArrayOfVariantTo2DNumArray(varr:TArgs):T2dNu'
  +'mArray;'#13#10'var'#13#10'  arr:T2DNumArray;'#13#10'  v:Variant;'#13#10'  v'
  +'arri:TArgs;'#13#10'  i,j,l,l0:integer;'#13#10'begin'#13#10'  l0:=length(var'
  +'r);'#13#10'  setlength(arr,length(varr));'#13#10'  for i:=0 to length(arr)-'
  +'1 do'#13#10'  begin'#13#10'    varri:=varr[i];'#13#10'    l:=length(varri);'
  +#13#10'    setlength(arr[i],l);'#13#10'    for j:=0 to l-1 do'#13#10'    beg'
  +'in'#13#10'      v:=varri[j];'#13#10'      if v<>null then'#13#10'      try'
  +#13#10'      arr[i,j]:=Double(v);'#13#10'      except'#13#10'        on exce'
  +'ption do'#13#10'          arr[i,j]:=-999;'#13#10'      end'#13#10'      els'
  +'e'#13#10'        arr[i,j]:=-999;'#13#10'    end;'#13#10'  end;'#13#10'  res'
  +'ult:=arr;'#13#10'end;'#13#10#13#10'function RunInterfaceFunc(e:TEventStatus'
  +';fname:String;fnArgs:TArgs):Variant;'#13#10'var'#13#10'  v:Variant;'#13#10
  +'//  str:string;'#13#10'  bool:Boolean;'#13#10'  arr2ds:T2DStringArray;'#13
  +#10'  arr2dn:T2DNumArray;'#13#10'  arr3dn:T3DNumArray;'#13#10'  arr1dn:TNumA'
  +'rray;'#13#10'  i:integer;'#13#10'begin'#13#10'  if fname=''ShowMessage'' th'
  +'en'#13#10'    mmo.mmiShowMessage(fnArgs[0])'#13#10'  else if fname=''ShowXF'
  +'orm'' then'#13#10'    mmo.mmiShowXForm(fnArgs[0], myStrToBool(fnArgs[1]))'
  +#13#10'  else if fname=''CloseXForm'' then'#13#10'    mmo.mmiCloseXForm(fnAr'
  +'gs[0])'#13#10'  else if fname=''GetPropertyValue'' then'#13#10'  begin'#13
  +#10'    v:=mmo.mmiGetPropertyValue(fnArgs[0], fnArgs[1]);'#13#10'  end'#13#10
  +'  else if fname=''SetPropertyValue'' then'#13#10'  begin'#13#10'    mmo.mmi'
  +'SetPropertyValue(fnArgs[0], fnArgs[1], fnArgs[2]);'#13#10'  end'#13#10'  el'
  +'se if fname=''Confirm'' then'#13#10'  begin'#13#10'    bool:=mmo.mmiconfirm'
  ,'(fnArgs[0]);'#13#10'    v:=bool;'#13#10'  end'#13#10'  else if fname=''Prom'
  +'pt'' then'#13#10'  begin'#13#10'    v:=mmo.mmiPrompt(fnArgs[0], fnArgs[1]);'
  +#13#10'  end'#13#10'  else if fname=''CopyToClip'' then'#13#10'  begin'#13#10
  +'    mmo.mmiCopyToClip(fnArgs[0]);'#13#10'  end'#13#10'  else if fname=''Cop'
  +'yFromClip'' then'#13#10'  begin'#13#10'    v:=mmo.mmiCopyFromClip(e);'#13#10
  +'  end'#13#10'  else if fname=''LoadTableFromExcelCopy'' then'#13#10'  begin'
  +#13#10'    mmo.mmiLoadTableFromExcelCopy(fnArgs[0], fnArgs[1]);'#13#10'  end'
  +#13#10'  else if fname=''LoadTableFromNumArray'' then'#13#10'  begin'#13#10
  +'    //fnargs[1] is an array of variant, but needs to be a T2DNumArray???? !'
  +'!!!'#13#10'    arr2dn:=ConvertArrayOfVariantTo2DNumArray(fnargs[1]);'#13#10
  +'    mmo.mmiLoadTableFromNumArray(fnArgs[0], arr2dn);'#13#10'  end'#13#10'  '
  +'else if fname=''GetTableDataArray'' then'#13#10'  begin'#13#10'    arr2ds:='
  +'mmo.mmiGetTableDataArray(fnArgs[0], fnargs[1]);'#13#10'    v:=Arr2dstoVarAr'
  +'ray(arr2ds);'#13#10'  end'#13#10'  else if fname=''DoEvent'' then'#13#10'  '
  +'  mmo.mmiDoEvent(fnArgs[0], fnArgs[1], fnArgs[2])'#13#10'  else if fname='''
  +'MoveComponent'' then'#13#10'    mmo.mmiMoveComponent(fnArgs[0], fnArgs[1])'
  +#13#10'  else if fname=''CopyComponent'' then'#13#10'    mmo.mmiCopyComponen'
  +'t(fnArgs[0], fnArgs[1], fnArgs[2])'#13#10'  else if fname=''DeleteComponent'
  +''' then'#13#10'  begin'#13#10'    bool:=mmo.mmiDeleteComponent(fnArgs[0], f'
  +'nargs[1]);'#13#10'    v:=bool;'#13#10'  end'#13#10'  else if fname=''GetGPU'
  +'ParamNumValue'' then'#13#10'  begin'#13#10'    arr1dn:=mmo.mmiGetGPUParamNu'
  +'mValue(fnArgs[0], fnArgs[1]);'#13#10'    v:=arr1dn;'#13#10'  end'#13#10'  e'
  +'lse if fname=''GetGPUConstIntValue'' then'#13#10'  begin'#13#10'    i:=mmo.'
  +'mmiGetGPUConstIntValue(fnArgs[0], fnArgs[1]);'#13#10'    v:=i;'#13#10'  end'
  +#13#10'  else if fname=''SetGPUParamNumValue'' then'#13#10'    mmo.mmiSetGPU'
  +'ParamNumValue(fnArgs[0], fnArgs[1], fnargs[2])'#13#10'  else if fname=''Set'
  +'GPUParam2DNumValue'' then'#13#10'    mmo.mmiSetGPUParam2DNumValue(fnArgs[0]'
  +', fnArgs[1], fnargs[2])'#13#10'  else if fname=''SetGPUConstIntValue'' then'
  +#13#10'    mmo.mmiSetGPUConstIntValue(fnArgs[0], fnArgs[1], fnargs[2])'#13#10
  +'  else if fname=''StartMain'' then'#13#10'    mmo.mmiStartMain(e)'#13#10'  '
  +'else if fname=''ShowBusy'' then'#13#10'    mmo.mmiShowBusy(e)'#13#10'  else'
  +' if fname=''HideBusy'' then'#13#10'    mmo.mmiHideBusy'#13#10'  else if fna'
  +'me=''ProcessMessages'' then'#13#10'    mmo.mmiProcessMessages'#13#10'  else'
  +' if fname=''MovePointerBetweenComponents'' then'#13#10'    mmo.mmiMovePoint'
  +'erBetweenComponents(fnArgs[0], fnArgs[1], fnArgs[2], fnArgs[3])'#13#10'  el'
  +'se if fname=''HidePointer'' then'#13#10'    mmo.mmiHidePointer'#13#10'  els'
  +'e if fname=''UserSystemAsString'' then'#13#10'    v:=mmo.mmiUserSystemAsStr'
  +'ing()'#13#10'  else if fname=''LoadUserSystemString'' then'#13#10'    mmo.m'
  +'miLoadUserSystemString(fnArgs[0])'#13#10'  else if fname=''ConsoleLog'' the'
  +'n'#13#10'    mmo.mmiConsoleLog(fnArgs[0])'#13#10'  else if fname=''Array2DT'
  +'oString'' then'#13#10'    v:=mmo.mmiArray2DToString(fnargs[0])'#13#10'  els'
  +'e if fname=''GetGPUPixelArray'' then'#13#10'  begin'#13#10'    arr3dn:=mmo.'
  +'mmiGetGPUPixelArray(fnArgs[0]);'#13#10'    v:=Arr3dntoVarArray(arr3dn);'#13
  +#10'  end'#13#10'  else if fname=''GetGPUPixelArrayAsString'' then'#13#10'  '
  +'  v:=mmo.mmiGetGPUPixelArrayAsString(fnArgs[0])'#13#10'  else if fname=''Ge'
  +'tGPUStageArray'' then'#13#10'  begin'#13#10'    arr3dn:=mmo.mmiGetGPUStageA'
  +'rray(fnArgs[0]);'#13#10'    v:=Arr3dntoVarArray(arr3dn);'#13#10'  end'#13#10
  +'  else if fname=''GetGPUStageArrayAsString'' then'#13#10'    v:=mmo.mmiGetG'
  +'PUStageArrayAsString(fnArgs[0])'#13#10'  else if fname=''DebugStart'' then'
  +#13#10'    mmo.mmiDebugStart;'#13#10#13#10'  result:=v;'#13#10'end;'#13#10#13
  +#10'procedure TMyPyEvents.PyVarExtGetData(Sender: TObject; var Data: PPyObje'
  +'ct);'#13#10'begin'#13#10'with PythonEngine1 do'#13#10' begin'#13#10'   Data'
  +' := glbPyObj;'#13#10'   Py_XIncRef(Data); // This is very important'#13#10
  +' end;'#13#10'end;'#13#10'procedure TMyPyEvents.PyVarExtSetData(Sender: TObj'
  +'ect; Data: PPyObject);'#13#10'var'#13#10'  PKeyObj,PArgsObj,PRsltObj,POb:PP'
  +'yObject;'#13#10'  fname:string;'#13#10'  fnArgs:Array of Variant;'#13#10' /'
  +'/ myargs:TStringList;'#13#10'  i:integer;'#13#10'  v:Variant;'#13#10'  t:TV'
  +'arType;'#13#10'  e:TeventStatus;'#13#10'begin'#13#10'with PythonEngine1 do'
  +#13#10' begin'#13#10'  Py_XDecRef(glbPyObj); // This is very important'#13#10
  +'  glbPyObj := Data;'#13#10'  Py_XIncRef(glbPyObj); // This is very importan'
  +'t'#13#10'  //showmessage(''ExtSetData done'');'#13#10#13#10'  // glbPyObj a'
  +'cts as a message from python....instruction to execute a pascal function'#13
  +#10'  // extract the fields from the message'#13#10'  // IMPORTANTLY....the '
  +'Python script has paused while this step is done....yay!'#13#10'  PKeyObj :'
  ,'= PythonEngine1.PyObject_GetAttrString(glbPyObj, ''fname'');'#13#10'  fname'
  +':=PythonEngine1.PyObjectAsString(PKeyObj);'#13#10'  PRsltObj := PythonEngin'
  +'e1.PyObject_GetAttrString(glbPyObj, ''rslt'');'#13#10'  v:=PythonEngine1.Py'
  +'ObjectAsVariant(PRsltObj);'#13#10'  //PArgsObj := PythonEngine1.PyObject_Ge'
  +'tItem(glbPyObj, PythonEngine1.VariantAsPyObject(''args''));'#13#10#13#10'  '
  +'PArgsObj := PythonEngine1.PyObject_GetAttrString(glbPyObj,''args'');'#13#10
  +'  //PythonEngine1.PyTupleToStrings(PArgsObj,myargs);'#13#10#13#10'  // args'
  +' is a set of variants'#13#10'  setlength(fnArgs,PythonEngine1.PyTuple_Size('
  +'PArgsObj));'#13#10'  for i:=0 to length(fnArgs)-1 do'#13#10'  begin'#13#10
  +'   POb:=PythonEngine1.PyTuple_GetItem(PArgsObj,i);'#13#10'   fnArgs[i]:=Pyt'
  +'honEngine1.PyObjectAsVariant(POb);'#13#10'  end;'#13#10#13#10'  t:=varType('
  +'v);'#13#10'  e:=glbEvent;       // slightly dodgy.. this is reset at start '
  +'of new event'#13#10'  if (fname<>''xxx'')'#13#10'  and (varType(v) = 8)  //'
  +' string'#13#10'  and (v=''xxx'') then    // avoid re-triggering when return'
  +' value has been set'#13#10'  begin'#13#10'    //showmessage(''from python. '
  +'fname=''+fname);'#13#10'    // run the requested function'#13#10'    v:=Run'
  +'InterfaceFunc(e,fname,fnArgs);'#13#10'    // pass the current e values to P'
  +'ython'#13#10'    PythonEngine1.PyObject_SetAttrString(glbPyObjE,''EventType'
  +''',PythonEngine1.VariantAsPyObject(UTF8Decode(e.EventType)));'#13#10'    Py'
  +'thonEngine1.PyObject_SetAttrString(glbPyObjE,''NodeId'',PythonEngine1.Varia'
  +'ntAsPyObject(UTF8Decode(e.NodeId)));'#13#10'    PythonEngine1.PyObject_SetA'
  +'ttrString(glbPyObjE,''NameSpace'',PythonEngine1.VariantAsPyObject(UTF8Decod'
  +'e(e.NameSpace)));'#13#10'    PythonEngine1.PyObject_SetAttrString(glbPyObjE'
  +',''ReturnString'',PythonEngine1.VariantAsPyObject(UTF8Decode(e.ReturnString'
  +')));'#13#10'    PyInterfaceE.ValueObject:=glbPyObjE;'#13#10'    // send the'
  +' function result back to Python'#13#10'    //PRsltObj:=PythonEngine1.PyStri'
  +'ng_FromString(PChar(str));'#13#10'    PRsltObj:=PythonEngine1.VariantAsPyOb'
  +'ject(v);'#13#10'    PythonEngine1.PyObject_SetAttrString(glbPyObj,''rslt'','
  +'PRsltObj);'#13#10'    PyInterfaceVar.ValueObject:=glbPyObj;'#13#10'  end;'
  +#13#10'  //myargs.free;'#13#10' end;'#13#10'end;'#13#10#13#10'procedure TMyP'
  +'yEvents.PyVarEExtGetData(Sender: TObject; var Data: PPyObject);'#13#10'begi'
  +'n'#13#10'with PythonEngine1 do'#13#10' begin'#13#10'   Data := glbPyObjE;'
  +#13#10'   Py_XIncRef(Data); // This is very important'#13#10' end;'#13#10'en'
  +'d;'#13#10'procedure TMyPyEvents.PyVarEExtSetData(Sender: TObject; Data: PPy'
  +'Object);'#13#10'begin'#13#10'with PythonEngine1 do'#13#10'  begin'#13#10'  '
  +'  Py_XDecRef(glbPyObjE); // This is very important'#13#10'    glbPyObjE := '
  +'Data;'#13#10'    Py_XIncRef(glbPyObjE); // This is very important'#13#10'  '
  +'end;'#13#10'end;'#13#10#13#10'procedure UpdateMemo(Data:String);'#13#10'var'
  +#13#10'  oldval:string;'#13#10'begin'#13#10'  oldval:=PyMemoComponent.myNode'
  +'.GetAttribute(''ItemValue'',false).AttribValue;'#13#10'  PyMemoComponent.It'
  +'emValue:=oldval+LineEnding+Data;'#13#10'end;'#13#10#13#10'procedure TMyPyEv'
  +'ents.PyIOSent(Sender: TObject; const Data:AnsiString);'#13#10'begin'#13#10
  +'  UpdateMemo(Data);'#13#10'end;'#13#10#13#10'procedure TMyPyEvents.PyIOSent'
  +'Uni(Sender: TObject;  const Data: UnicodeString);'#13#10'begin'#13#10'  Upd'
  +'ateMemo(UTF8Decode(Data));'#13#10'end;'#13#10#13#10'procedure DoPy_InitEngi'
  +'ne;'#13#10'var'#13#10'  pth:string;'#13#10'//  PythonVersion: TPythonVersio'
  +'n;'#13#10#13#10'begin'#13#10'  if Assigned(PythonEngine1) then'#13#10'  beg'
  +'in'#13#10'    // Engine already exists,'#13#10'    // clear out any previou'
  +'sly-declared python vars, functions etc...'#13#10'    PythonEngine1.ExecStr'
  +'ing(''for name in dir(): ''+LineEnding+'#13#10'                            '
  +' ''  if not name.startswith(''''_'''')''+'#13#10'                          '
  +'      '' and not name==''''PyInterfaceVar''''''+'#13#10'                   '
  +'             '' and not name==''''PyInterfaceE'''':''+LineEnding+'#13#10'  '
  +'                           ''    del globals()[name]''+LineEnding);'#13#10
  +'  end'#13#10'  else'#13#10'  begin'#13#10'    // First time in, Create pyth'
  +'on engine and interfaces...'#13#10#13#10'//  if Assigned(PyInterfaceVar) th'
  +'en'#13#10'//    PyInterfaceVar.Destroy;'#13#10'//  if Assigned(PyInterfaceE'
  +') then'#13#10'//    PyInterfaceE.Destroy;'#13#10'//  if Assigned(PythonEngi'
  +'ne1) then'#13#10'//  begin'#13#10'//    PythonEngine1.Finalize;'#13#10'//  '
  +'  PythonEngine1.UnloadDll;'#13#10'//    PythonEngine1.Destroy;'#13#10'//  e'
  +'nd;'#13#10#13#10'    PythonEngine1:=TPythonEngine.Create(nil);'#13#10'    P'
  +'ythonEngine1.Name:=''PythonEngine1'';'#13#10'    PythonEngine1.PyFlags:=[pf'
  +'UseClassExceptionsFlag];'#13#10'    PythonEngine1.RedirectIO:=true;'#13#10
  +'    PythonEngine1.IO:=PythonIO;'#13#10#13#10'  //  pth:=ExtractFileDir(Pyth'
  ,'onLibDir);'#13#10'  //  if pth<>'''' then'#13#10'  //    if pth[length(pth)'
  +']<>''\'' then'#13#10'  //      pth:=pth+''\'';'#13#10'  //  PythonEngine1.D'
  +'llPath:= pth;'#13#10'  //  PythonEngine1.DllName:= ExtractFileName(PythonLi'
  +'bDir);'#13#10'  //  PythonEngine1.RegVersion:=PythonVersion;'#13#10'  //  P'
  +'ythonEngine1.SetPythonHome(pth);'#13#10'  //  MaskFPUExceptions(True);'#13
  +#10'  //  PythonEngine1.AutoLoad:=true;'#13#10#13#10'    PythonEngine1.UseLa'
  +'stKnownVersion:=true;     // use the Python version installed on the machin'
  +'e'#13#10'    PythonEngine1.AutoLoad:=false;'#13#10'    PythonEngine1.LoadDl'
  +'l;'#13#10'    PythonVersion:=PythonEngine1.RegVersion;'#13#10#13#10'    // '
  +'create interface objects for communication to/from Pascal code'#13#10'    P'
  +'yInterfaceVar:=TPythonDelphiVar.Create(nil);'#13#10'    PyInterfaceVar.Name'
  +':=''PyInterfaceVar'';'#13#10'    PyInterfaceVar.VarName:=''PyInterfaceVar'''
  +';'#13#10'    PyInterfaceVar.Module:=''__main__'';'#13#10'    PyInterfaceVar'
  +'.Engine:=PythonEngine1;'#13#10'    PyInterfaceVar.OnExtGetData:=@PyEvents.P'
  +'yVarExtGetData;'#13#10'    PyInterfaceVar.OnExtSetData:=@PyEvents.PyVarExtS'
  +'etData;'#13#10'    PyInterfaceVar.Initialize;'#13#10#13#10'    PyInterfaceE'
  +':=TPythonDelphiVar.Create(nil);'#13#10'    PyInterfaceE.Name:=''PyInterface'
  +'E'';'#13#10'    PyInterfaceE.VarName:=''PyInterfaceE'';'#13#10'    PyInterf'
  +'aceE.Module:=''__main__'';'#13#10'    PyInterfaceE.Engine:=PythonEngine1;'
  +#13#10'    PyInterfaceE.OnExtGetData:=@PyEvents.PyVarEExtGetData;'#13#10'   '
  +' PyInterfaceE.OnExtSetData:=@PyEvents.PyVarEExtSetData;'#13#10'    PyInterf'
  +'aceE.Initialize;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure SetupPyEn'
  +'gine(PyLibDir,PyVersion:String);'#13#10'begin'#13#10'  //PythonLibDir:=PyLi'
  +'bDir;'#13#10'  //PythonVersion:=PyVersion;'#13#10'  PythonIO:=TPythonGUIInp'
  +'utOutput.Create(nil);'#13#10'  PyEvents:=TMyPyEvents.Create;'#13#10'  Pytho'
  +'nIO.OnSendData:=@PyEvents.PyIOSent;'#13#10'  PythonIO.OnSendUniData:=@PyEve'
  +'nts.PyIOSentUni;'#13#10'  // create and start the python engine'#13#10'  Do'
  +'Py_InitEngine;'#13#10'end;'#13#10#13#10'function PyodideScript:TStringList;'
  +#13#10'var'#13#10'  script:TStringList;'#13#10'  myCode:String;'#13#10'begin'
  +#13#10'  script:=TStringList.Create;'#13#10'  // Load the pyodide script fro'
  +'m the web; if unavailable try loading from pyodide_local...'#13#10'  script'
  +'.add(''<script type="application/javascript" >'');'#13#10'  script.add(''va'
  +'r pyodideReady = "no";'');'#13#10'  script.add(''var localErrDone = false;'
  +''');'#13#10'  script.add(''var pysrc1=document.createElement("script")'');'
  +#13#10'  script.add(''var pysrc2=document.createElement("script")'');'#13#10
  +'  script.add(''var pysrc3=document.createElement("script")'');'#13#10'  scr'
  +'ipt.add(''pysrc1.setAttribute("type","application/javascript")'');'#13#10' '
  +' script.add(''pysrc2.setAttribute("type","application/javascript")'');'#13
  +#10'  script.add(''pysrc3.setAttribute("type","application/javascript")'');'
  +#13#10'  script.add(''function loadpyodidefromweb(){'');'#13#10'  script.add'
  +'(''    console.log("try web pyodide load...");'');'#13#10'  script.add(''  '
  +'  window.languagePluginUrl = "https://pyodide-cdn2.iodide.io/v0.15.0/full/"'
  +';'');'#13#10'  script.add(''    pysrc1.setAttribute("src","https://pyodide-'
  +'cdn2.iodide.io/v0.15.0/full/pyodide.js");'');'#13#10'  script.add(''    doc'
  +'ument.getElementsByTagName("head")[0].prepend(pysrc1)'');'#13#10'  script.a'
  +'dd(''}'');'#13#10'  script.add(''function loadpyodidelocal(){ '');'#13#10' '
  +' script.add(''       console.log("try local pyodide load..."); '');'#13#10
  +'  script.add(''       if (pysrc1.parentNode!=null) { '');'#13#10'  script.a'
  +'dd(''         document.getElementsByTagName("head")[0].removeChild(pysrc1);'
  +' }'');'#13#10'  script.add(''       window.languagePluginUrl = "./pyodide_l'
  +'ocal/";'');'#13#10'  script.add(''       pysrc2.setAttribute("src", "pyodid'
  +'e_local/loadlocal.js");'');'#13#10'  script.add(''       document.getElemen'
  +'tsByTagName("head")[0].prepend(pysrc2);'');'#13#10'  script.add(''       py'
  +'src3.setAttribute("src", "pyodide_local/pyodide.js");'');'#13#10'  script.a'
  +'dd(''       pysrc2.after(pysrc3); '');'#13#10'  script.add(''}'');'#13#10' '
  +' script.add(''loadpyodidefromweb(); //dynamically load and add pyodide scri'
  +'pt'');'#13#10'  script.add(''</script>'');'#13#10'  script.add(''<script ty'
  +'pe="text/javascript" > '');'#13#10'  script.add(''pysrc1.onerror = function'
  +' (){'');'#13#10'  script.add(''              console.log("web load failed")'
  +';'');'#13#10'  script.add(''              loadpyodidelocal();'');'#13#10'  '
  +'script.add(''            } '');'#13#10'  script.add(''function noLocalPyodi'
  +'de(){'');'#13#10'  script.add(''  if (localErrDone==false) {'');'#13#10'  s'
  +'cript.add(''    console.log("cannot load local pyodide - Python will be una'
  +'vailable"); '');'#13#10'  script.add(''    console.log("To work with Pyodid'
  ,'e offline, create a folder ./pyodide_local"); '');'#13#10'  script.add(''  '
  +'  console.log("   This folder must contain pyodide files, such as provided '
  +'from:"); '');'#13#10'  script.add(''    console.log("      https://github.c'
  +'om/iodide-project/pyodide/releases/download/0.14.3/pyodide-build-0.14.3.tar'
  +'.bz2");'');'#13#10'  script.add(''    console.log("   and also include the '
  +'file loadlocal.js, which can be found at:");'');'#13#10'  script.add(''    '
  +'console.log("      https://github.com/iodide-project/pyodide/tree/6a2dd522f'
  +'1eb4143f2630deae0a1fa9555546dfe/runlocal");'');'#13#10'  script.add(''    l'
  +'ocalErrDone = true;'');'#13#10'  script.add(''    alert("cannot load pyodid'
  +'e - Python will be unavailable. See console for messages."); '');'#13#10'  '
  +'script.add(''}} '');'#13#10'  script.add(''pysrc2.onerror = function (){'')'
  +';'#13#10'  script.add(''              noLocalPyodide(); '');'#13#10'  scrip'
  +'t.add(''            }'');'#13#10'  script.add(''pysrc3.onerror = function ('
  +'){'');'#13#10'  script.add(''              noLocalPyodide(); '');'#13#10'  '
  +'script.add(''            }'');'#13#10'  script.add(''</script>'');'#13#10' '
  +' script.add(''<script type="text/javascript" > '');'#13#10'  script.add(''f'
  +'unction pysrcLoaded() { '');'#13#10'  script.add(''    // pyodide is now re'
  +'ady to use...  '' );'#13#10'  script.add(''    console.log("python: "+pyodi'
  +'de.runPython("import sys\nsys.version"));'' );'#13#10'  script.add(''    py'
  +'odide.loadPackage("numpy").then(() => {'');'#13#10'  script.add(''      con'
  +'sole.log("numpy is now available");'' );'#13#10'  script.add(''    });'');'
  +#13#10'  script.add(''    pyodide.loadPackage("matplotlib").then(() => {'');'
  +#13#10'  script.add(''      console.log("matplotlib is now available"); '' )'
  +';'#13#10'  script.add(''      pyodideReady = "yes";'');'#13#10'  script.add'
  +'(''    }); '' );'#13#10'  script.add(''  pas.XIDEMain.StartupPython(); '');'
  +#13#10'  script.add('' } '');'#13#10'  script.add(''</script> '');'#13#10'  '
  +'script.add(''<script> '');'#13#10'  script.add(''        window.addEventLis'
  +'tener(''''DOMContentLoaded'''', function() { '');'#13#10'  script.add(''   '
  +'          languagePluginLoader.then(() => { pysrcLoaded();}); '');'#13#10' '
  +' script.add('''#9'    });'');'#13#10'  script.add(''</script> '');'#13#10#13
  +#10'  result:=script;'#13#10'end;'#13#10#13#10'procedure RunInitialScript;'
  +#13#10'var'#13#10'  InitScript:TStringList;'#13#10'  txt:String;'#13#10'  FP'
  +'UExceptionMask:TFPUExceptionMask;'#13#10'begin'#13#10'  SetExceptionMask([e'
  +'xInvalidOp, exDenormalized, exZeroDivide, exOverflow, exUnderflow, exPrecis'
  +'ion]);'#13#10'  InitScript:=TStringList.Create;'#13#10'  // load the initia'
  +'lisation py script'#13#10'  // Sets up an internal library of XIDE Interfac'
  +'e functions, available to the user.'#13#10'  InitScript.Clear;'#13#10'  Ini'
  +'tScript.add(''import sys'');'#13#10'  InitScript.add(''print(sys.version)'''
  +');'#13#10'  InitScript.add(''class MyMessage:'');'#13#10'  InitScript.add('
  +'''  fname = ''''xxx'''''');'#13#10'  InitScript.add(''  args = (''''1'''','
  +'''''2'''',''''3'''')'');'#13#10'  InitScript.add(''  rslt = ''''xxx'''''');'
  +#13#10'  InitScript.add(''Xmsg = MyMessage()'');'#13#10'  InitScript.add(''c'
  +'lass eClass:'');'#13#10'  InitScript.add(''  EventType = '''''''''');'#13#10
  +'  InitScript.add(''  NodeId = '''''''''');'#13#10'  InitScript.add(''  Name'
  +'Space = '''''''''');'#13#10'  InitScript.add(''  ReturnString = '''''''''')'
  +';'#13#10'  InitScript.add(''e = eClass()'');'#13#10'  InitScript.add(''PyIn'
  +'terfaceE.Value = e'');'#13#10'  InitScript.add('''');'#13#10'  InitScript.a'
  +'dd(''def RunXIDEFunc(fname,args):'');'#13#10'  InitScript.add(''  Xmsg.fnam'
  +'e = fname'');'#13#10'  InitScript.add(''  Xmsg.args = args''); // args is T'
  +'uple type'#13#10'  InitScript.add(''  Xmsg.rslt = ''''xxx'''''');'#13#10'  '
  +'InitScript.add(''  PyInterfaceVar.Value = Xmsg'');'#13#10'  InitScript.add('
  +'''  return Xmsg.rslt'');'#13#10'  InitScript.add(''def GetPropertyValue(Nod'
  +'eName,PropName):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''Get'
  +'PropertyValue'''',(NodeName,PropName)).decode(''''utf-8'''')'');'#13#10'// '
  +' InitScript.add(''  print(msg.args[0]+'''' ''''+msg.args[1]+'''' = ''''+msg'
  +'.rslt)'');'#13#10'  InitScript.add(''def SetPropertyValue(NodeName,PropName'
  +',NewValue):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''SetPropertyValu'
  +'e'''',(NodeName,PropName,NewValue))'');'#13#10'  InitScript.add(''def ShowM'
  +'essage(Messg):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''ShowMessage'
  +''''',(Messg,0))'');'#13#10'  InitScript.add(''def ShowXForm(XFormID,Modal):'
  +''');'#13#10'  InitScript.add(''  RunXIDEFunc(''''ShowXForm'''',(XFormID,Mod'
  +'al))'');'#13#10'  InitScript.add(''def CloseXForm(XFormID):'');'#13#10'  In'
  +'itScript.add(''  RunXIDEFunc(''''CloseXForm'''',(XFormID,0))'');'#13#10'  I'
  +'nitScript.add(''def CopyToClip(str):'');'#13#10'  InitScript.add(''  RunXID'
  ,'EFunc(''''CopyToClip'''',(str,0))'');'#13#10'  InitScript.add(''def CopyFro'
  +'mClip(e):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''CopyFromCl'
  +'ip'''',(e,0))'');'#13#10'  InitScript.add(''def LoadTableFromExcelCopy(Tabl'
  +'eName,CopiedString):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''LoadTa'
  +'bleFromExcelCopy'''',(TableName,CopiedString))'');'#13#10'  InitScript.add('
  +'''def LoadTableFromNumArray(TableName,NumArray):'');'#13#10'  InitScript.ad'
  +'d(''  RunXIDEFunc(''''LoadTableFromNumArray'''',(TableName,NumArray))'');'
  +#13#10'  InitScript.add(''def GetTableDataArray(TableName,SkipHeader):'');'
  +#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetTableDataArray'''',(Ta'
  +'bleName,SkipHeader))'');'#13#10'  InitScript.add(''def DoEvent(EventType,No'
  +'deId,myValue):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''DoEvent'''','
  +'(EventType,NodeId,myValue))'');'#13#10'  InitScript.add(''def MoveComponent'
  +'(NodeId,NewParentId):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''MoveC'
  +'omponent'''',(NodeId,NewParentId))'');'#13#10'  InitScript.add(''def CopyCo'
  +'mponent(NodeId,NewParentId,NewName):'');'#13#10'  InitScript.add(''  RunXID'
  +'EFunc(''''CopyComponent'''',(NodeId,NewParentId,NewName))'');'#13#10'  Init'
  +'Script.add(''def DeleteComponent(NodeId,ShowNotFoundMsg):'');'#13#10'  Init'
  +'Script.add(''  return RunXIDEFunc(''''DeleteComponent'''',(NodeId,ShowNotFo'
  +'undMsg))'');'#13#10'  InitScript.add(''def GetGPUParamNumValue(GPUName,pNam'
  +'e):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetGPUParamNumVa'
  +'lue'''',(GPUName,pName))'');'#13#10'  InitScript.add(''def GetGPUConstIntVa'
  +'lue(GPUName,pName):'');'#13#10'  InitScript.add(''  return RunXIDEFunc('''''
  +'GetGPUConstIntValue'''',(GPUName,pName))'');'#13#10'  InitScript.add(''def '
  +'SetGPUParamNumValue(GPUName,pName,pValue):'');'#13#10'  InitScript.add(''  '
  +'RunXIDEFunc(''''SetGPUParamNumValue'''',(GPUName,pName,pValue))'');'#13#10
  +'  InitScript.add(''def SetGPUParam2DNumValue(GPUName,pName,pValue):'');'#13
  +#10'  InitScript.add(''  RunXIDEFunc(''''SetGPUParam2DNumValue'''',(GPUName,'
  +'pName,pValue))'');'#13#10'  InitScript.add(''def SetGPUConstIntValue(GPUNam'
  +'e,pName,pValue):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''SetGPUCons'
  +'tIntValue'''',(GPUName,pName,pValue))'');'#13#10'  InitScript.add(''def Sta'
  +'rtMain(e):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''StartMain'''',(e'
  +',0))'');'#13#10'  InitScript.add(''def ShowBusy(e):'');'#13#10'  InitScript'
  +'.add(''  RunXIDEFunc(''''ShowBusy'''',(e,0))'');'#13#10'  InitScript.add('''
  +'def HideBusy():'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''HideBusy'''
  +''',(0,0))'');'#13#10'  InitScript.add(''def ProcessMessages():'');'#13#10' '
  +' InitScript.add(''  RunXIDEFunc(''''ProcessMessages'''',(0,0))'');'#13#10' '
  +' InitScript.add(''def MovePointerBetweenComponents(NodeName1,NodeName2,Sub1'
  +',Sub2):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''MovePointerBetweenC'
  +'omponents'''',(NodeName1,NodeName2,Sub1,Sub2))'');'#13#10'  InitScript.add('
  +'''def HidePointer():'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''HidePo'
  +'inter'''',(0,0))'');'#13#10'  InitScript.add(''def UserSystemAsString():'')'
  +';'#13#10'  InitScript.add(''  return RunXIDEFunc(''''UserSystemAsString'''''
  +',(0,0)).decode(''''utf-8'''')'');'#13#10'  InitScript.add(''def LoadUserSys'
  +'temString(SystemString):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''Lo'
  +'adUserSystemString'''',(SystemString,0))'');'#13#10'  InitScript.add(''def '
  +'ConsoleLog(txt):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''ConsoleLog'
  +''''',(txt,0))'');'#13#10'  InitScript.add(''def Array2DToString(arr):'');'
  +#13#10'  InitScript.add(''  return RunXIDEFunc(''''Array2DToString'''',(arr,'
  +'0)).decode(''''utf-8'''')'');'#13#10'  InitScript.add(''def GetGPUPixelArra'
  +'y(GPUName):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetGPUPi'
  +'xelArray'''',(GPUName,0))'');'#13#10'  InitScript.add(''def GetGPUPixelArra'
  +'yAsString(GPUName):'');'#13#10'  InitScript.add(''  return RunXIDEFunc('''''
  +'GetGPUPixelArrayAsString'''',(GPUName,0))'');'#13#10'  InitScript.add(''def'
  +' GetGPUStageArray(GPUName):'');'#13#10'  InitScript.add(''  return RunXIDEF'
  +'unc(''''GetGPUStageArray'''',(GPUName,0))'');'#13#10'  InitScript.add(''def'
  +' GetGPUStageArrayAsString(GPUName):'');'#13#10'  InitScript.add(''  return '
  +'RunXIDEFunc(''''GetGPUStageArrayAsString'''',(GPUName,0))'');'#13#10'  Init'
  +'Script.add(''def ShowPythonPlot(ImgName,fig):'');            //!!!! how to '
  +'do this with string var instead of file ????'#13#10'  InitScript.add(''  fi'
  +'g.savefig(ImgName+''''.png'''')'');'#13#10'  InitScript.add(''  SetProperty'
  +'Value(ImgName,''''Source'''',ImgName+''''.png'''')'');'#13#10'  InitScript.'
  +'add(''def ConvertNumpyArrayToJSON(npArray):'');'#13#10'  InitScript.add('' '
  +' return json.dumps(npArray.tolist())'');'#13#10#13#10#13#10'  InitScript.ad'
  +'d(''print(''''Python Engine Initialised'''')'');'#13#10#13#10'  // execute '
  ,'the initialisation py script  (creates MyMessage python class and object)'
  +#13#10'  PythonEngine1.ExecStrings( InitScript );'#13#10'  InitScript.Free;'
  +#13#10#13#10'//  FPUExceptionMask := GetExceptionMask;'#13#10'//  SetExcepti'
  +'onMask([exZeroDivide, exPrecision]);'#13#10'  PythonEngine1.ExecString(''im'
  +'port numpy as np'');       // err ''no module named numpy'''#13#10'  Python'
  +'Engine1.ExecString(''import matplotlib.pyplot as plt'');       // err ''no '
  +'module named numpy'''#13#10'//  SetExceptionMask(FPUExceptionMask);'#13#10
  +#13#10'end;'#13#10'{$else}'#13#10'procedure RunInitialScript;'#13#10'var'#13
  +#10'  InitScript:TStringList;'#13#10'  txt:String;'#13#10'begin'#13#10'  // '
  +'remove any previously-declared python vars, functions etc'#13#10'  txt:=''f'
  +'or name in dir(): ''+LineEnding+'#13#10'       ''  if not name.startswith('
  +'''''_''''):''+LineEnding+'#13#10'       ''    del globals()[name]''+LineEnd'
  +'ing;'#13#10'  asm'#13#10'  pyodide.runPython(txt);'#13#10'  end;'#13#10#13
  +#10'  InitScript:=TStringList.Create;'#13#10'  // load the initialisation py'
  +' script'#13#10'  // Sets up an internal library of XIDE Interface functions'
  +', available to the user.'#13#10'  InitScript.Clear;'#13#10#13#10'  InitScri'
  +'pt.add(''class eClass:'');'#13#10'  InitScript.add(''  EventType = '''''''''
  +''');'#13#10'  InitScript.add(''  NodeId = '''''''''');'#13#10'  InitScript.'
  +'add(''  NameSpace = '''''''''');'#13#10'  InitScript.add(''  ReturnString ='
  +' '''''''''');'#13#10'  InitScript.add(''e = eClass()'');'#13#10'  InitScrip'
  +'t.add('''');'#13#10'  InitScript.add(''from js import pas'');'#13#10'  Init'
  +'Script.add(''import io'');'#13#10'  InitScript.add(''import base64'');'#13
  +#10'  InitScript.add(''def GetPropertyValue(NodeName,PropName):'');'#13#10' '
  +' InitScript.add(''  return pas.InterfaceTypes.GetPropertyValue(NodeName,Pro'
  +'pName)'');'#13#10'  InitScript.add(''def SetPropertyValue(NodeName,PropName'
  +',NewValue):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.SetPropertyV'
  +'alue(NodeName,PropName,NewValue)'');'#13#10'  InitScript.add(''def ShowMess'
  +'age(Messg):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.ShowMessage('
  +'Messg)'');'#13#10'  InitScript.add(''def ShowXForm(XFormID,Modal):'');'#13
  +#10'  InitScript.add(''  pas.InterfaceTypes.ShowXForm(XFormID,Modal)'');'#13
  +#10'  InitScript.add(''def CloseXForm(XFormID):'');'#13#10'  InitScript.add('
  +'''  pas.InterfaceTypes.CloseXForm(XFormID)'');'#13#10'  InitScript.add(''de'
  +'f CopyToClip(str):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.CopyT'
  +'oClip(str)'');'#13#10'  InitScript.add(''def CopyFromClip(e):'');'#13#10'  '
  +'InitScript.add(''  return pas.InterfaceTypes.CopyFromClip(e)'');'#13#10'  I'
  +'nitScript.add(''def LoadTableFromExcelCopy(TableName,CopiedString):'');'#13
  +#10'  InitScript.add(''  pas.InterfaceTypes.LoadTableFromExcelCopy(TableName'
  +',CopiedString)'');'#13#10'  InitScript.add(''def LoadTableFromNumArray(Tabl'
  +'eName,NumArray):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.LoadTab'
  +'leFromNumArray(TableName,NumArray)'');'#13#10'  InitScript.add(''def GetTab'
  +'leDataArray(TableName,SkipHeader):'');'#13#10'  InitScript.add(''  return p'
  +'as.InterfaceTypes.GetTableDataArray(TableName,SkipHeader)'');'#13#10'  Init'
  +'Script.add(''def DoEvent(EventType,NodeId,myValue):'');'#13#10'  InitScript'
  +'.add(''  pas.InterfaceTypes.DoEvent(EventType,NodeId,myValue)'');'#13#10'  '
  +'InitScript.add(''def MoveComponent(NodeId,NewParentId):'');'#13#10'  InitSc'
  +'ript.add(''  pas.InterfaceTypes.MoveComponent(NodeId,NewParentId)'');'#13#10
  +'  InitScript.add(''def CopyComponent(NodeId,NewParentId,NewName):'');'#13#10
  +'  InitScript.add(''  pas.InterfaceTypes.CopyComponent(NodeId,NewParentId,Ne'
  +'wName)'');'#13#10'  InitScript.add(''def DeleteComponent(NodeId,ShowNotFoun'
  +'dMsg):'');'#13#10'  InitScript.add(''  return pas.InterfaceTypes.DeleteComp'
  +'onent(NodeId,ShowNotFoundMsg)'');'#13#10'  InitScript.add(''def GetGPUParam'
  +'NumValue(GPUName,pName):'');'#13#10'  InitScript.add(''  return pas.Interfa'
  +'ceTypes.GetGPUParamNumValue(GPUName,pName)'');'#13#10'  InitScript.add(''de'
  +'f GetGPUConstIntValue(GPUName,pName):'');'#13#10'  InitScript.add(''  retur'
  +'n pas.InterfaceTypes.GetGPUConstIntValue(GPUName,pName)'');'#13#10'  InitSc'
  +'ript.add(''def SetGPUParamNumValue(GPUName,pName,pValue):'');'#13#10'  Init'
  +'Script.add(''  pas.InterfaceTypes.SetGPUParamNumValue(GPUName,pName,pValue)'
  +''');'#13#10'  InitScript.add(''def SetGPUParam2DNumValue(GPUName,pName,pVal'
  +'ue):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.SetGPUParam2DNumVal'
  +'ue(GPUName,pName,pValue)'');'#13#10'  InitScript.add(''def SetGPUConstIntVa'
  +'lue(GPUName,pName,pValue):'');'#13#10'  InitScript.add(''  pas.InterfaceTyp'
  +'es.SetGPUConstIntValue(GPUName,pName,pValue)'');'#13#10'  InitScript.add('''
  +'def StartMain(e):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.StartM'
  +'ain(e)'');'#13#10'  InitScript.add(''def ShowBusy(e):'');'#13#10'  InitScri'
  ,'pt.add(''  pas.InterfaceTypes.ShowBusy(e)'');'#13#10'  InitScript.add(''def'
  +' HideBusy():'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.HideBusy()'
  +''');'#13#10'  InitScript.add(''def ProcessMessages():'');'#13#10'  InitScri'
  +'pt.add(''  pas.InterfaceTypes.ProcessMessages()'');'#13#10'  InitScript.add'
  +'(''def MovePointerBetweenComponents(NodeName1,NodeName2,Sub1,Sub2):'');'#13
  +#10'  InitScript.add(''  pas.InterfaceTypes.MovePointerBetweenComponents(Nod'
  +'eName1,NodeName2,Sub1,Sub2)'');'#13#10'  InitScript.add(''def HidePointer()'
  +':'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.HidePointer()'');'#13
  +#10'  InitScript.add(''def UserSystemAsString():'');'#13#10'  InitScript.add'
  +'(''  return pas.InterfaceTypes.UserSystemAsString()'');'#13#10'  InitScript'
  +'.add(''def LoadUserSystemString(SystemString):'');'#13#10'  InitScript.add('
  +'''  pas.InterfaceTypes.LoadUserSystemString(SystemString)'');'#13#10'  Init'
  +'Script.add(''def ConsoleLog(txt):'');'#13#10'  InitScript.add(''  pas.Inter'
  +'faceTypes.ConsoleLog(txt)'');'#13#10'  InitScript.add(''def Array2DToString'
  +'(arr):'');'#13#10'  InitScript.add(''  return pas.InterfaceTypes.Array2DToS'
  +'tring(arr)'');'#13#10'  InitScript.add(''def GetGPUPixelArray(GPUName):'');'
  +#13#10'  InitScript.add(''  return pas.InterfaceTypes.GetGPUPixelArray(GPUNa'
  +'me)'');'#13#10'  InitScript.add(''def GetGPUPixelArrayAsString(GPUName):'')'
  +';'#13#10'  InitScript.add(''  return pas.InterfaceTypes.GetGPUPixelArrayAsS'
  +'tring(GPUName)'');'#13#10'  InitScript.add(''def GetGPUStageArray(GPUName):'
  +''');'#13#10'  InitScript.add(''  return pas.InterfaceTypes.GetGPUStageArray'
  +'(GPUName)'');'#13#10'  InitScript.add(''def GetGPUStageArrayAsString(GPUNam'
  +'e):'');'#13#10'  InitScript.add(''  return pas.InterfaceTypes.GetGPUStageAr'
  +'rayAsString(GPUName)'');'#13#10'  InitScript.add(''def ShowPythonPlot(ImgNa'
  +'me,fig):'');'#13#10'  InitScript.add(''  buf = io.BytesIO()'');'#13#10'  In'
  +'itScript.add(''  fig.savefig(buf, format=''''png'''')'');'#13#10'  InitScri'
  +'pt.add(''  buf.seek(0)'');'#13#10'  InitScript.add(''  img_str = ''''data:i'
  +'mage/png;base64,'''' + base64.b64encode(buf.read()).decode(''''UTF-8'''')'''
  +');'#13#10'  InitScript.add(''  pas.InterfaceTypes.SetImageSource(ImgName,im'
  +'g_str)'');'#13#10'  InitScript.add(''def ConvertNumpyArrayToJSON(npArray):'
  +''');'#13#10'  InitScript.add(''  return json.dumps(npArray.tolist())'');'#13
  +#10#13#10'  // execute the initialisation py script'#13#10'  txt:=InitScript'
  +'.Text;'#13#10'  asm'#13#10'  pyodide.runPython(txt);'#13#10'  end;'#13#10' '
  +' InitScript.Free;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure PyExeS'
  +'tring(cmds: string);'#13#10'var'#13#10'  s: TStringList;'#13#10'begin'#13#10
  +'  s := TStringList.create;'#13#10'  try'#13#10'    s.text := cmds;'#13#10' '
  +'   {$ifndef JScript}'#13#10'    PythonEngine1.ExecStrings( s );'#13#10'    '
  +'{$else}'#13#10'    asm'#13#10'    pyodide.runPython(cmds);'#13#10'    end;'
  +#13#10'    {$endif}'#13#10'  finally'#13#10'    s.free;'#13#10'  end;'#13#10
  +'end;'#13#10#13#10#13#10'//var.decode(''utf-8'') ... might be of use'#13#10
  +#13#10'end.'#13#10'{$endif}'#13#10#13#10
]);
