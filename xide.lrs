LazarusResources.Add('webtranspilerutils','PAS',[
  'unit WebTranspilerUtils;'#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'inter'
  +'face'#13#10#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils,XCode'
  +#13#10'  {$ifndef JScript}'#13#10'  ,dialogs'#13#10'  {$else}'#13#10'  ,webf'
  +'ilecache, pas2jswebcompiler'#13#10'  {$endif}'#13#10'  ;'#13#10#13#10'{$ifd'
  +'ef JScript}'#13#10'type'#13#10'TWebCompilerObj = Class(TObject)'#13#10'Priv'
  +'ate'#13#10'  FCompiler : TPas2JSWebCompiler;'#13#10'  FCodeEditor:TXCode;'
  +#13#10'  procedure OnUnitLoaded(Sender: TObject; aFileName: String; aError: '
  +'string);'#13#10'Protected'#13#10'Public'#13#10'  procedure DoLog(Sender: TO'
  +'bject; const Msg: String);'#13#10'  Constructor Create;'#13#10'  property m'
  +'yCodeEditor:TXCode read FCodeEditor write FCodeEditor;'#13#10'  property Co'
  +'mpiler:TPas2JSWebCompiler read FCompiler write FCompiler;'#13#10'end;'#13#10
  +#13#10'procedure LoadRTLFilesForPas2JS(lWebFS : TPas2JSWebFS);    //TWebComp'
  +'ilerObj);'#13#10#13#10'var MyWebCompiler:TWebCompilerObj;'#13#10'{$endif}'
  +#13#10#13#10'procedure WriteIncFile(Compiler:TObject;IncName,EventType,IncPa'
  +'th:String;'#13#10'                       var MainCode:TStringList;IncCode:T'
  +'StringList);'#13#10'function LoadIncludeFile(Compiler:TObject;FileName,IncP'
  +'ath:String):TStringList;'#13#10#13#10'implementation'#13#10#13#10'procedure'
  +' WriteIncFile(Compiler:TObject;IncName,EventType,IncPath:String;'#13#10'   '
  +'                    var MainCode:TStringList;IncCode:TStringList);'#13#10'v'
  +'ar'#13#10'{$ifndef JScript}'#13#10'   TheStream:TFileStream;'#13#10'   {$en'
  +'dif}'#13#10'   FileName:string;'#13#10'begin'#13#10'  if EventType<>'''' th'
  +'en IncName:=IncName+''__''+EventType;'#13#10#13#10'  if length(IncName)<251'
  +' then'#13#10'  begin'#13#10#13#10'    {$ifndef JScript}'#13#10'    FileName'
  +':=IncPath+IncName+''.inc'';'#13#10#13#10'    try'#13#10'      TheStream:=TF'
  +'ileStream.Create(Filename,fmCreate or fmOpenRead or fmOpenWrite or fmShareD'
  +'enyNone);'#13#10'      IncCode.SaveToStream(TheStream);'#13#10'      TheStr'
  +'eam.Free;'#13#10'    except'#13#10'      showmessage(''Failed to create inc'
  +'lude file ''+FileName);'#13#10'    end;'#13#10'    {$else}'#13#10'    FileN'
  +'ame:=IncName+''.inc'';'#13#10'    // save the generated inc file'#13#10'   '
  +' TPas2JSWebCompiler(Compiler).WebFS.SetFileContent(FileName,IncCode.Text);'
  +#13#10'    {$endif}'#13#10#13#10'    MainCode.Add(''{$I ''+IncName+''.inc}'''
  +');'#13#10#13#10'  end'#13#10'  else'#13#10'    showmessage(''Unable to writ'
  +'e include file; name is too long. ''+IncName);'#13#10'end;'#13#10#13#10'fun'
  +'ction LoadIncludeFile(Compiler:TObject;FileName,IncPath:String):TStringList'
  +';'#13#10'var'#13#10'  tmp1:TStringList;'#13#10'  {$ifndef JScript}'#13#10' '
  +' TheStream:TFileStream;'#13#10'  {$else}'#13#10'  tmp:String;'#13#10'  {$en'
  +'dif}'#13#10'begin'#13#10'  tmp1:=TStringList.Create;'#13#10'  {$ifndef JScr'
  +'ipt}'#13#10'  try'#13#10'  // find and load the include file...'#13#10'  Th'
  +'eStream:=TFileStream.Create(IncPath+FileName,fmOpenRead or fmShareDenyNone)'
  +';'#13#10'  tmp1.LoadFromStream(TheStream);'#13#10'  TheStream.Free;'#13#10
  +'  except'#13#10'    try'#13#10'    // try once more with a .inc suffix (FPC'
  +' keeps this, pas2js doesn''t (!?).....'#13#10'    TheStream:=TFileStream.Cr'
  +'eate(IncPath+FileName+''.inc'',fmOpenRead or fmShareDenyNone);'#13#10'    t'
  +'mp1.LoadFromStream(TheStream);'#13#10'    FileName:=FileName+''.inc'';'#13
  +#10'    TheStream.Free;'#13#10'    except'#13#10'      showmessage(''file '''
  +'+IncPath+FileName+'' not available'');'#13#10'      tmp1.Clear;'#13#10'    '
  +'end;'#13#10'  end;'#13#10'  {$else}'#13#10' // tmp:=MyWebCompiler.Compiler.'
  +'WebFS.GetFileContent(FileName);'#13#10'  tmp:=TPas2JSWebCompiler(Compiler).'
  +'WebFS.GetFileContent(FileName);'#13#10'  tmp1.Text:=tmp;'#13#10'  {$endif}'
  +#13#10'  result:=tmp1;'#13#10'end;'#13#10#13#10#13#10'{$ifdef JScript}'#13#10
  +'constructor TWebCompilerObj.Create;'#13#10'begin'#13#10'  FCompiler:=TPas2J'
  +'SWebCompiler.Create;'#13#10'end;'#13#10#13#10'procedure TWebCompilerObj.DoL'
  +'og(Sender: TObject; const Msg: String);'#13#10'begin'#13#10'  if myCodeEdit'
  +'or<>nil then'#13#10'    myCodeEditor.MessageLines:=myCodeEditor.MessageLine'
  +'s+LineEnding+Msg;'#13#10'end;'#13#10'procedure TWebCompilerObj.OnUnitLoaded'
  +'(Sender: TObject; aFileName: String; aError: string);'#13#10'begin'#13#10' '
  +' if myCodeEditor<>nil then'#13#10'    if aError='''' then'#13#10'      myCo'
  +'deEditor.MessageLines:=myCodeEditor.MessageLines+LineEnding+''Loaded: ''+aF'
  +'ileName'#13#10'    else'#13#10'      myCodeEditor.MessageLines:=myCodeEdito'
  +'r.MessageLines+LineEnding+''Error Loading "''+aFileName+''": ''+AError;'#13
  +#10'end;'#13#10#13#10'procedure LoadRTLFilesForPas2JS(lWebFS : TPas2JSWebFS)'
  +';  //Compiler:TPas2JSWebCompiler);    //TWebCompilerObj);'#13#10'begin'#13
  +#10'  asm'#13#10'    // minimal required rtl set....'#13#10'    //lWebFS.Set'
  +'FileContent(''system.pas'',pas.UtilsJSCompile.systempas);'#13#10'    //lWeb'
  ,'FS.SetFileContent(''sysutils.pas'',pas.UtilsJSCompile.sysutilspas);'#13#10
  +'    //lWebFS.SetFileContent(''classes.pas'',pas.UtilsJSCompile.classespas);'
  +#13#10'    //lWebFS.SetFileContent(''rtlconsts.pas'',pas.UtilsJSCompile.rtlc'
  +'onstspas);'#13#10'    //lWebFS.SetFileContent(''js.pas'',pas.UtilsJSCompile'
  +'.jspas);'#13#10'    //lWebFS.SetFileContent(''types.pas'',pas.UtilsJSCompil'
  +'e.typespas);'#13#10#13#10'    // common rtl set  (Desktop (windows/linux) a'
  +'nd pas2js) ....'#13#10'    lWebFS.SetFileContent(''classes.pas'',pas.Compil'
  +'eUserCode.classespas);'#13#10'    lWebFS.SetFileContent(''contnrs.pas'',pas'
  +'.CompileUserCode.contnrspas);'#13#10'    lWebFS.SetFileContent(''dateutils.'
  +'pas'',pas.CompileUserCode.dateutilspas);'#13#10'    lWebFS.SetFileContent('
  +'''js.pas'',pas.CompileUserCode.jspas);'#13#10'    lWebFS.SetFileContent(''m'
  +'ath.pas'',pas.CompileUserCode.mathpas);'#13#10'    lWebFS.SetFileContent('''
  +'rtlconsts.pas'',pas.CompileUserCode.rtlconstspas);'#13#10'//    lWebFS.SetF'
  +'ileContent(''rtti.pas'',pas.CompileUserCode.rttipas);'#13#10'    lWebFS.Set'
  +'FileContent(''strutils.pas'',pas.CompileUserCode.strutilspas);'#13#10'    l'
  +'WebFS.SetFileContent(''system.pas'',pas.CompileUserCode.systempas);'#13#10
  +'    lWebFS.SetFileContent(''sysutils.pas'',pas.CompileUserCode.sysutilspas)'
  +';'#13#10'    lWebFS.SetFileContent(''types.pas'',pas.CompileUserCode.typesp'
  +'as);'#13#10'    lWebFS.SetFileContent(''typinfo.pas'',pas.CompileUserCode.t'
  +'ypinfopas);'#13#10#13#10'  //  lWebFS.SetFileContent(''timer.pas'',pas.Util'
  +'sJSCompile.timerpas);'#13#10'  //  lWebFS.SetFileContent(''nodejs.pas'',pas'
  +'.UtilsJSCompile.nodejspas);'#13#10'  //  lWebFS.SetFileContent(''objpas.pas'
  +''',pas.UtilsJSCompile.objpaspas);'#13#10'  //  lWebFS.SetFileContent(''libj'
  +'query.pas'',pas.UtilsJSCompile.libjquerypas);'#13#10'  //  lWebFS.SetFileCo'
  +'ntent(''hotreloadclient.pas'',pas.UtilsJSCompile.hotreloadclientpas);'#13#10
  +'  //  lWebFS.SetFileContent(''class2pas.pas'',pas.UtilsJSCompile.class2pasp'
  +'as);'#13#10'  //  lWebFS.SetFileContent(''browserconsole.pas'',pas.UtilsJSC'
  +'ompile.browserconsolepas);'#13#10'  //  lWebFS.SetFileContent(''web.pas'',p'
  +'as.UtilsJSCompile.webpas);'#13#10'  //  lWebFS.SetFileContent(''webaudio.pa'
  +'s'',pas.UtilsJSCompile.webaudiopas);'#13#10'  //  lWebFS.SetFileContent(''w'
  +'ebbluetooth.pas'',pas.UtilsJSCompile.webbluetoothpas);'#13#10'  //  lWebFS.'
  +'SetFileContent(''webgl.pas'',pas.UtilsJSCompile.webglpas);'#13#10'  //  lWe'
  +'bFS.SetFileContent(''webrouter.pas'',pas.UtilsJSCompile.webrouterpas);'#13
  +#10'  end;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'begin'#13#10'{$ifdef JSc'
  +'ript}'#13#10'MyWebCompiler := TWebCompilerObj.Create;'#13#10'{$endif}'#13#10
  +'end.'#13#10#13#10
]);
LazarusResources.Add('xthreads','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XComponents package.'#13#10#13#10'    This package is distribu'
  +'ted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY'
  +'; without even the implied warranty of'#13#10'    MERCHANTABILITY or FITNES'
  +'S FOR A PARTICULAR PURPOSE.'#13#10#13#10' *********************************'
  +'*************************************'#13#10' *)'#13#10'unit XThreads;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10
  +#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, Types,NodeUti'
  +'ls,StringUtils, Events, EventsInterface,'#13#10'  {$ifndef JScript}'#13#10
  +'  Forms, Controls, StdCtrls, LResources, Graphics, Dialogs, ExtCtrls, PropE'
  +'dits, RTTICtrls,'#13#10'  LazsUtils, Dynlibs,'#13#10'//    {$if defined ( w'
  +'indows)}'#13#10'//    windows,'#13#10'//    {$endif}'#13#10'  {$Else}'#13#10
  +'  HTMLUtils,'#13#10'  {$endif}'#13#10'  WrapperPanel;'#13#10#13#10'type'#13
  +#10#13#10'  {$ifndef JScript}'#13#10'//  TFunctionParameter = function() : s'
  +'tring;'#13#10#13#10'  TMyThread = class(TThread)'#13#10'    ThreadName:stri'
  +'ng;'#13#10'    active:boolean;'#13#10'    myTXThreads:TComponent;'#13#10'  '
  +'  ReturnString:String;'#13#10'    procedure Execute; override;'#13#10'  end'
  +';'#13#10'  {$else}'#13#10'  TMyThread = class(TObject)'#13#10'    ThreadNam'
  +'e:string;'#13#10'    active:boolean;'#13#10'    myTXThreads:TObject;'#13#10
  +'    ThreadID:String;'#13#10'    ReturnString:String;'#13#10'    CurrentWork'
  +'er:TObject;'#13#10'    procedure Execute(TheFunc:TObject);'#13#10'  end;'#13
  +#10'  {$endif}'#13#10#13#10'  {$ifndef JScript}'#13#10'  TXThreads = class(T'
  +'Component)'#13#10'  {$Else}'#13#10'  TXThreads = class(TWrapperPanel)'#13#10
  +'  {$endif}'#13#10'  private'#13#10'    {$ifndef JScript}'#13#10'    FmyNode'
  +':TDataNode;'#13#10'    FmyControl:TControl;'#13#10'    {$endif}'#13#10#13#10
  +'  protected'#13#10'    FBeginThreads:TEventHandler;'#13#10'    FHandleRetur'
  +'n:TEventHandler;'#13#10'    FFinaliseThreads:TEventHandler;'#13#10'    FHan'
  +'dleThread1:TEventHandler;'#13#10'    FHandleThread2:TEventHandler;'#13#10' '
  +'   FHandleThread3:TEventHandler;'#13#10'    FHandleThread4:TEventHandler;'
  +#13#10'    {$ifndef JScript}'#13#10'    function GetName:string;'#13#10'    '
  +'procedure SetMyName(AValue:string);'#13#10'    {$endif}'#13#10'    function'
  +' GetActive:Boolean;'#13#10'    function GetMaxCopiesThread1:integer;'#13#10
  +'    function GetMaxCopiesThread2:integer;'#13#10'    function GetMaxCopiesT'
  +'hread3:integer;'#13#10'    function GetMaxCopiesThread4:integer;'#13#10'   '
  +' function GetThreadVarNums:String;'#13#10#13#10'    procedure SetActive(AVa'
  +'lue:Boolean);'#13#10'    procedure SetMaxCopiesThread1(AValue:integer);'#13
  +#10'    procedure SetMaxCopiesThread2(AValue:integer);'#13#10'    procedure '
  +'SetMaxCopiesThread3(AValue:integer);'#13#10'    procedure SetMaxCopiesThrea'
  +'d4(AValue:integer);'#13#10'    procedure SetThreadVarNums(AValue:String);'
  +#13#10#13#10'  public'#13#10'    ThreadCount :integer;'#13#10'    ThreadList'
  +':array of TMyThread;'#13#10'    {$ifndef JScript}'#13#10'    myEventTypes:T'
  +'StringList;'#13#10'    procedure DoConstructor(TheOwner:TComponent;IsDynami'
  +'c:Boolean);'#13#10'    function CreateWorkerThread(ThreadNameString:string)'
  +':TMyThread;'#13#10'    function getThreadName(ThreadID:LongInt):string;'#13
  +#10'    procedure DoneThread(Sender:TObject);'#13#10'    constructor Create('
  +'TheOwner: TComponent);  override;'#13#10'    constructor Create(TheOwner: T'
  +'Component;IsDynamic:Boolean);'#13#10'    procedure CreateSetOfThreads(Threa'
  +'dSetNum:integer);'#13#10'    {$else}'#13#10'    constructor Create(MyForm:T'
  +'Form;NodeName,NameSpace:String);'#13#10'    procedure MessageReturned(Threa'
  +'dID:String; edata:TObject);'#13#10'    procedure ErrorReturned(ThreadID:Str'
  +'ing);'#13#10'    function CreateWorkerThread(ThreadNameString:string; TheFu'
  +'nc:TObject):TMyThread;'#13#10'    procedure CreateSetOfThreads(ThreadSetNum'
  +':integer; TheFunc:TObject);'#13#10'    {$endif}'#13#10'    procedure StartM'
  +'yThreads;'#13#10'    procedure SetMyEventTypes;'#13#10#13#10'  published'#13
  +#10'    {$ifndef JScript}'#13#10'    property myControl:TControl read FmyCon'
  +'trol write FmyControl;'#13#10'    property Name: String read GetName write '
  +'SetMyName;'#13#10'    property myNode:TDataNode read FmyNode write FmyNode;'
  +#13#10'    {$endif}'#13#10#13#10'    property Active:Boolean read getActive '
  +'write setActive;'#13#10'    property MaxCopiesThread1:integer read GetMaxCo'
  +'piesThread1 write SetMaxCopiesThread1;'#13#10'    property MaxCopiesThread2'
  +':integer read GetMaxCopiesThread2 write SetMaxCopiesThread2;'#13#10'    pro'
  +'perty MaxCopiesThread3:integer read GetMaxCopiesThread3 write SetMaxCopiesT'
  +'hread3;'#13#10'    property MaxCopiesThread4:integer read GetMaxCopiesThrea'
  +'d4 write SetMaxCopiesThread4;'#13#10'    property ThreadVarNums:String read'
  ,' GetThreadVarNums write SetThreadVarNums;'#13#10#13#10'    // Events to be '
  +'visible in Lazarus IDE'#13#10'    property BeginThreads:TEventHandler read '
  +'FBeginThreads write FBeginThreads;'#13#10'    property HandleReturn:TEventH'
  +'andler read FHandleReturn write FHandleReturn;'#13#10'    property Finalise'
  +'Threads:TEventHandler read FFinaliseThreads write FFinaliseThreads;'#13#10
  +'    property HandleThread1: TEventHandler read FHandleThread1 write FHandle'
  +'Thread1;'#13#10'    property HandleThread2: TEventHandler read FHandleThrea'
  +'d2 write FHandleThread2;'#13#10'    property HandleThread3: TEventHandler r'
  +'ead FHandleThread3 write FHandleThread3;'#13#10'    property HandleThread4:'
  +' TEventHandler read FHandleThread4 write FHandleThread4;'#13#10#13#10'  end'
  +';'#13#10#13#10'//  {$ifndef JScript}'#13#10'//  procedure Register;'#13#10
  +'//  {$endif}'#13#10'  var'#13#10'    myDefaultAttribs:TDefaultAttributesArr'
  +'ay;'#13#10#13#10'implementation'#13#10#13#10'const MyNodeType=''TXThreads'''
  +';'#13#10#13#10'procedure TXThreads.SetMyEventTypes;'#13#10'begin'#13#10'  M'
  +'yEventTypes.Add(''BeginThreads'');'#13#10'  MyEventTypes.Add(''HandleReturn'
  +''');'#13#10'  MyEventTypes.Add(''FinaliseThreads'');'#13#10#13#10'  MyEvent'
  +'Types.Add(''Thread1'');'#13#10'  MyEventTypes.Add(''Thread2'');'#13#10'  My'
  +'EventTypes.Add(''Thread3'');'#13#10'  MyEventTypes.Add(''Thread4'');'#13#10
  +#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'//procedure Register;'#13
  +#10'//begin'#13#10'//  {$I Icons/XThreads.lrs}'#13#10'//  RegisterComponents'
  +'(''XComponents'',[TXThreads]);'#13#10'//'#13#10'//  RegisterPropertyEditor('
  +'TypeInfo(TControl), TXThreads, ''myControl'', THiddenPropertyEditor);'#13#10
  +'//  RegisterPropertyEditor(TypeInfo(Integer), TXThreads, ''Tag'', THiddenPr'
  +'opertyEditor);'#13#10'//end;'#13#10#13#10'function TXThreads.getThreadName('
  +'ThreadID:LongInt):string;'#13#10'var i:integer;'#13#10'    tempstr:string;'
  +#13#10'begin'#13#10'  tempstr:='''';'#13#10'  for  i := 0 to length(ThreadLi'
  +'st)-1 do'#13#10'  begin'#13#10'    if (ThreadID = ThreadList[i].ThreadID)'
  +#13#10'    then tempstr:= ThreadList[i].ThreadName;'#13#10'  end;'#13#10'  g'
  +'etThreadName:=tempstr;'#13#10'end;'#13#10#13#10'procedure TMyThread.Execute'
  +';'#13#10'var'#13#10'    e:TEventStatus;'#13#10'begin'#13#10'  e:=TEventStat'
  +'us.Create(ThreadName,TXThreads(self.myTXThreads).myNode.NodeName);'#13#10' '
  +' HandleEvent(e,ThreadName,TXThreads(self.myTXThreads).myNode.NodeName,TXThr'
  +'eads(self.myTXThreads).myNode.NameSpace,'''');'#13#10'  // pick up any retu'
  +'rnstring that may have been set in the user event code'#13#10'  self.Return'
  +'String:=e.ReturnString;'#13#10'end;'#13#10#13#10'procedure TXThreads.DoCons'
  +'tructor(TheOwner:TComponent;IsDynamic:Boolean);'#13#10'var'#13#10'  NewNode'
  +':TDataNode;'#13#10'begin'#13#10'    NewNode:=TDataNode.Create(''NV'',self.N'
  +'ame,'''',''TXThreads'',false);'#13#10'    NewNode.ScreenObject:=self;'#13#10
  +'    NewNode.MyForm:=TForm(TheOwner);'#13#10'    NewNode.IsDynamic:=IsDynami'
  +'c;'#13#10#13#10'    self.MyEventTypes:=TStringList.Create;'#13#10'    self.'
  +'SetMyEventTypes;'#13#10#13#10'    //SetLength(NewNode.myEventHandlers,self.'
  +'myEventTypes.Count);'#13#10'    NewNode.myEventTypes:=self.myEventTypes;'#13
  +#10'    NewNode.InitialiseEventHandlers;'#13#10#13#10#13#10'    AddChildToPa'
  +'rentNode(SystemNodetree,NewNode,-1);'#13#10#13#10'    self.myNode:=NewNode;'
  +#13#10#13#10'    ThreadCount:=0;'#13#10'    setlength(ThreadList,0);'#13#10
  +'end;'#13#10#13#10'constructor TXThreads.Create(TheOwner:TComponent);'#13#10
  +'begin'#13#10'  inherited Create(TheOwner);'#13#10'  DoConstructor(TheOwner,'
  +'false);'#13#10'end;'#13#10#13#10'constructor TXThreads.Create(TheOwner:TCom'
  +'ponent;IsDynamic:Boolean);'#13#10'begin'#13#10'  inherited Create(TheOwner)'
  +';'#13#10'  DoConstructor(TheOwner,IsDynamic);'#13#10'end;'#13#10#13#10'func'
  +'tion TXThreads.GetName:string;'#13#10'begin'#13#10'  result:=inherited Name'
  +';'#13#10'end;'#13#10#13#10'procedure TXThreads.SetMyName(AValue:string);'#13
  +#10'begin'#13#10'  inherited Name:=AValue;'#13#10#13#10'  if myNode<>nil the'
  +'n'#13#10'     myNode.NodeName:=AValue;'#13#10'end;'#13#10#13#10'function Cr'
  +'eateWidget(ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position:'
  +'integer;Alignment:String):TDataNode;'#13#10'var'#13#10'  NewNode:TDataNode;'
  +#13#10'begin'#13#10'  NewNode:=CreateDynamicLazWidget(''TXThreads'',ParentNo'
  +'de.MyForm,ParentNode,ScreenObjectName,NameSpace,Alignment,position);'#13#10
  +'  result:=NewNode;'#13#10'end;'#13#10#13#10'function TXThreads.CreateWorker'
  +'Thread(ThreadNameString:string):TMyThread;'#13#10'var NewThread:TMyThread;'
  +#13#10'begin'#13#10#13#10'  NewThread :=  TMyThread.Create(true);       //Cr'
  +'eateSuspended=true'#13#10'  NewThread.ThreadName:=ThreadNameString;'#13#10
  +#13#10'  NewThread.myTXThreads:=self;'#13#10'  NewThread.OnTerminate:=@self.'
  +'DoneThread;'#13#10'  NewThread.FreeOnTerminate := true;'#13#10#13#10'  NewT'
  ,'hread.active := true;'#13#10#13#10'  ThreadCount := ThreadCount + 1;'#13#10
  +'  setlength(ThreadList,ThreadCount);'#13#10'  ThreadList[ThreadCount-1 ]:= '
  +'NewThread;'#13#10'  NewThread.Start;'#13#10#13#10'  result:=NewThread;'#13
  +#10'end;'#13#10#13#10'procedure TXThreads.CreateSetOfThreads(ThreadSetNum:in'
  +'teger);'#13#10'var'#13#10'  i,max:integer;'#13#10'begin'#13#10'  max:=strTo'
  +'Int(myNode.getAttribute(''MaxCopiesThread''+intToStr(ThreadSetNum),true).At'
  +'tribValue);'#13#10'  for i:=0 to max-1 do'#13#10'  begin'#13#10'    CreateW'
  +'orkerThread(''Thread''+intToStr(ThreadSetNum));'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'procedure TXThreads.DoneThread(Sender:TObject);'#13#10'var'#13
  +#10'  AnyThreadsActive :boolean;'#13#10'  i:integer;'#13#10'  TiD:integer;'
  +#13#10'  ThreadName:string;'#13#10'  ReturnString: string;'#13#10'begin'#13
  +#10'  AnyThreadsActive := false;'#13#10'  TiD:=TMyThread(Sender).ThreadID;'
  +#13#10'  ReturnString := TMyThread(Sender).ReturnString;'#13#10'  ThreadName'
  +':=getThreadName(TiD);'#13#10#13#10'  TMyThread(Sender).active:=false;'#13#10
  +#13#10'  for  i := 0 to length(ThreadList)-1 do'#13#10'  begin'#13#10'    if'
  +' (ThreadList[i]<>nil) and (ThreadList[i].active = true) then'#13#10'      A'
  +'nyThreadsActive := true;'#13#10'  end;'#13#10#13#10'  // Run any user-suppl'
  +'ied message handler'#13#10'  HandleEvent(''HandleReturn'',self.MyNode.NodeN'
  +'ame,self.MyNode.NameSpace,ReturnString);'#13#10#13#10'  if (AnyThreadsActiv'
  +'e = false)'#13#10'  then'#13#10'  begin'#13#10'    self.Active:=false;'#13
  +#10'    // Run any user-supplied finalisation code'#13#10'    HandleEvent('''
  +'FinaliseThreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'''');'#13#10
  +'    {$ifndef JScript}'#13#10'    Screen.Cursor:=crDefault;'#13#10'    {$end'
  +'if}'#13#10'    ThreadCount:=0;'#13#10'    setlength(ThreadList,0);'#13#10' '
  +' end;'#13#10'end;'#13#10#13#10'procedure TXThreads.StartMyThreads;'#13#10'b'
  +'egin'#13#10'  if (self.HandleThread1<>nil) or (myNode.HasUserEventCode(''Th'
  +'read1'')) then CreateSetOfThreads(1);'#13#10'  if (self.HandleThread2<>nil)'
  +' or (myNode.HasUserEventCode(''Thread2'')) then CreateSetOfThreads(2);'#13
  +#10'  if (self.HandleThread3<>nil) or (myNode.HasUserEventCode(''Thread3''))'
  +' then CreateSetOfThreads(3);'#13#10'  if (self.HandleThread4<>nil) or (myNo'
  +'de.HasUserEventCode(''Thread4'')) then CreateSetOfThreads(4);'#13#10'end;'
  +#13#10#13#10'{$else}'#13#10#13#10'constructor TXThreads.Create(MyForm:TForm;'
  +'NodeName,NameSpace:String);'#13#10'begin'#13#10'  inherited Create(NodeName'
  +',NameSpace);'#13#10'  self.NodeClass:=''NV'';'#13#10'  self.NodeType:=''TXT'
  +'hreads'';'#13#10'  self.MyForm:=MyForm;'#13#10#13#10'  self.myNode.MyEventT'
  +'ypes:=TStringList.Create;'#13#10'  self.SetMyEventTypes;'#13#10'  self.IsCo'
  +'ntainer:=false;'#13#10#13#10'  ThreadCount:=0;'#13#10'  setlength(ThreadLis'
  +'t,0);'#13#10'end;'#13#10#13#10'function CreateThreadsWidget(MyNode, ParentN'
  +'ode:TDataNode;ScreenObjectName,NameSpace:string;position:integer;Alignment:'
  +'String):TDataNode;'#13#10'begin'#13#10'//showmessage(''Create TXThreads wid'
  +'get'');'#13#10#13#10'MyNode.ScreenObject:=MyNode;'#13#10#13#10'RefreshCompo'
  +'nentProps(myNode);'#13#10#13#10'result:=myNode;'#13#10'end;'#13#10#13#10'fu'
  +'nction CreateinterfaceObj(MyForm:TForm;NodeName,NameSpace:String):TObject;'
  +#13#10'begin'#13#10'  result:=TObject(TXThreads.Create(MyForm,NodeName,NameS'
  +'pace));'#13#10'end;'#13#10#13#10'(*function TXThreads.getThreadName(ThreadI'
  +'D:String):string;'#13#10'var i:integer;'#13#10'    tempstr:string;'#13#10'b'
  +'egin'#13#10'  tempstr:='''';'#13#10'  for  i := 0 to length(ThreadList)-1 d'
  +'o'#13#10'  begin'#13#10'    if (ThreadID = ThreadList[i].ThreadID)'#13#10' '
  +'   then tempstr:= ThreadList[i].ThreadName;'#13#10'  end;'#13#10'  getThrea'
  +'dName:=tempstr;'#13#10'end; *)'#13#10#13#10'procedure TXThreads.MessageRetu'
  +'rned(ThreadID:String; edata:TObject);'#13#10'var'#13#10'  AnyThreadsActive '
  +':boolean;'#13#10'  i:integer;'#13#10'  msg:String;'#13#10'begin'#13#10'  as'
  +'m'#13#10'  //  msgid =edata.id;'#13#10'    msg = edata.msg;'#13#10'  end;'
  +#13#10'//    showmessage(ThreadID+'' MessageReturned ''+msgid+'' ''+msg);'#13
  +#10#13#10'    AnyThreadsActive := false;'#13#10#13#10'    for  i := 0 to len'
  +'gth(ThreadList)-1 do'#13#10'    begin'#13#10'      if (ThreadList[i]<>nil) '
  +'and (ThreadList[i].ThreadID = ThreadID) then'#13#10'      begin'#13#10'    '
  +'    ThreadList[i].Active := false;'#13#10'        ThreadList[i].ReturnStrin'
  +'g:=msg;'#13#10'      end;'#13#10'    end;'#13#10#13#10'    for  i := 0 to l'
  +'ength(ThreadList)-1 do'#13#10'    begin'#13#10'      if (ThreadList[i]<>nil'
  +') and (ThreadList[i].active = true) then'#13#10'        AnyThreadsActive :='
  +' true;'#13#10'    end;'#13#10#13#10'    // Run any user-supplied message ha'
  +'ndler'#13#10'    HandleEvent(''HandleReturn'',self.MyNode.NodeName,self.MyN'
  +'ode.NameSpace,msg);'#13#10#13#10'    if (AnyThreadsActive = false)'#13#10' '
  ,'   then'#13#10'    begin'#13#10'      self.Active:=false;'#13#10'      // R'
  +'un any user-supplied finalisation code'#13#10'      HandleEvent(''FinaliseT'
  +'hreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'''');'#13#10#13#10'   '
  +'   for  i := 0 to length(ThreadList)-1 do'#13#10'      begin'#13#10'       '
  +' asm'#13#10'          //alert(''cleaning up'');'#13#10'          this.Threa'
  +'dList[i].CurrentWorker.terminate();'#13#10'          this.ThreadList[i].Cur'
  +'rentWorker = undefined;'#13#10'        end;'#13#10'      end;'#13#10#13#10
  +#13#10'      ThreadCount:=0;'#13#10'      setlength(ThreadList,0);'#13#10'  '
  +'  end;'#13#10'end;'#13#10#13#10'procedure TXThreads.ErrorReturned(ThreadID:'
  +'String);'#13#10'var'#13#10'  AnyThreadsActive :boolean;'#13#10'  CurrentThr'
  +'eadindex,i:integer;'#13#10'begin'#13#10'    //showmessage(ThreadID+'' Error'
  +'Returned '');'#13#10#13#10'    AnyThreadsActive := false;'#13#10#13#10'    '
  +'for  i := 0 to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if (Th'
  +'readList[i]<>nil) and (ThreadList[i].ThreadID = ThreadID) then'#13#10'     '
  +' begin'#13#10'        ThreadList[i].Active := false;'#13#10'        ThreadL'
  +'ist[i].ReturnString:='''';'#13#10'      end;'#13#10'    end;'#13#10#13#10' '
  +'   for  i := 0 to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if '
  +'(ThreadList[i]<>nil) and (ThreadList[i].active = true) then'#13#10'        '
  +'AnyThreadsActive := true;'#13#10'    end;'#13#10#13#10'    if (AnyThreadsAc'
  +'tive = false)'#13#10'    then'#13#10'    begin'#13#10'      self.Active:=fa'
  +'lse;'#13#10'      // Run any user-supplied finalisation code'#13#10'      H'
  +'andleEvent(''FinaliseThreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'
  +''''');'#13#10#13#10'      for  i := 0 to length(ThreadList)-1 do'#13#10'   '
  +'   begin'#13#10'        asm'#13#10'          //alert(''cleaning up'');'#13
  +#10'          this.ThreadList[i].CurrentWorker.terminate();'#13#10'         '
  +' this.ThreadList[i].CurrentWorker = undefined;'#13#10'        end;'#13#10' '
  +'     end;'#13#10#13#10#13#10'      ThreadCount:=0;'#13#10'      setlength(T'
  +'hreadList,0);'#13#10'    end;'#13#10'end;'#13#10#13#10'(*'#13#10'----------'
  +'--------------------------------------------------'#13#10'Thread Code Struc'
  +'ture....'#13#10#13#10'var loce=null;       // e is object of type TEventSta'
  +'tus'#13#10#13#10'function EventFunc(e,nodeid,str) {'#13#10'...user code...'
  +#13#10'}'#13#10'function setupThread() {'#13#10'   // onmessage here will ha'
  +'ndle messages received into the worker thread from the main thread...'#13#10
  +'   onmessage = function(event) {'#13#10'                                 //'
  +'eg. {''cmd'': ''start'', ''msg'': ''Hi''}'#13#10'                          '
  +'       loce=event.data;'#13#10'                                 if (loce.Ev'
  +'entType) {'#13#10'                                   // Execute user event '
  +'function...'#13#10'                                   EventFunc(loce,loce.N'
  +'odeId,"");'#13#10'                                   // Notify main thread '
  +'we are done...'#13#10'                                   postMessage({"id":'
  +'loce.EventType , "msg":loce.ReturnString});'#13#10'                        '
  +'           }'#13#10'                               };'#13#10'}'#13#10'setup'
  +'Thread();'#13#10'----------------------------------------------------------'
  +#13#10'*)'#13#10#13#10#13#10#13#10'procedure TMyThread.Execute(TheFunc:TObje'
  +'ct);'#13#10'var'#13#10'  e:TEventStatus;'#13#10'begin'#13#10'  e:=TEventSta'
  +'tus.Create(self.ThreadID,TXThreads(self.myTXThreads).NodeName);'#13#10'  e.'
  +'NameSpace:=TXThreads(self.myTXThreads).NameSpace;'#13#10'asm'#13#10'{'#13#10
  +'  var msgFun = this.myTXThreads.MessageReturned;'#13#10'  msgFun = msgFun.b'
  +'ind(this.myTXThreads);'#13#10#13#10'  var errFun = this.myTXThreads.ErrorRe'
  +'turned;'#13#10'  errFun = errFun.bind(this.myTXThreads);'#13#10#13#10'  var'
  +' myNodeName = this.myTXThreads.NodeName;'#13#10'  var doFunc = TheFunc;'#13
  +#10#13#10'  var setupThreadFunc ='#13#10'  ''function setupThread() { \n'''
  +#13#10'  +''  // onmessage here will handle messages received into the worke'
  +'r thread from the main thread... \n'''#13#10'  +''  onmessage = function(ev'
  +'ent) { \n'''#13#10'  +''          var d=event.data; \n'''#13#10'  +''      '
  +'    if (d.type="EventStart") { \n'''#13#10'  +''            loce=d.evs; \n'
  +''''#13#10'  +''            if (loce.EventType) {\n'''#13#10'  +''          '
  +'    // Execute user event function... \n'''#13#10'  +''              EventF'
  +'unc(loce,loce.NodeId,"");  \n'''#13#10'  +''              // Notify main th'
  +'read we are done... \n'''#13#10'  +''              postMessage({"id":loce.E'
  +'ventType  ,"msg":loce.ReturnString}); \n'''#13#10'  +''            } \n'''
  +#13#10'  +''        }\n'''#13#10'  +''    }; \n'''#13#10'  +''};\n'';'#13#10
  +#13#10'  //alert(''Execute Thread ID=''+this.ThreadID);'#13#10'   // create '
  +'a URL containing the inlne JavaScript Code instead of loading from a file'
  ,#13#10'   // this can be shared across multiple threads'#13#10'   function g'
  +'etInlineJS(EventFn)'#13#10'   {'#13#10'       var FuncString = EventFn.toSt'
  +'ring();'#13#10'       FuncString=FuncString.replace("function", "function E'
  +'ventFunc")'#13#10#13#10'       FuncString = ''var loce = null; \n'''#13#10
  +'                    + FuncString +''; '''#13#10'                    + setup'
  +'ThreadFunc + ''; '''#13#10'                    + ''setupThread(); '';'#13#10
  +'       alert(FuncString);'#13#10'       var CodeBlob = new Blob([FuncString'
  +'], { type: "text/javascript" });'#13#10'       var returnBlob =  URL.create'
  +'ObjectURL(CodeBlob);'#13#10'       return returnBlob ;'#13#10'   };'#13#10
  +#13#10'   var localThreadID = this.ThreadID;'#13#10'   if(typeof(Worker) !=='
  +' "undefined")'#13#10'   {'#13#10'      if ((this.CurrentWorker==null)||(typ'
  +'eof(this.CurrentWorker) == "undefined"))'#13#10'      {'#13#10'         if '
  +'((TheFunc!=null)&&(TheFunc!=undefined)) {'#13#10'         this.CurrentWorke'
  +'r =  new Worker(getInlineJS(TheFunc));'#13#10#13#10'         // handle mess'
  +'ages received FROM worker...'#13#10'         this.CurrentWorker.onmessage ='
  +' function(event) { msgFun(localThreadID, event.data)};  // event.data has i'
  +'d and msg'#13#10'         // send message TO worker...'#13#10'         this'
  +'.CurrentWorker.postMessage({"Type":"EventStart", "evs":e});'#13#10#13#10'  '
  +'       this.CurrentWorker.onerror = function(event) {alert("Error: "+  even'
  +'t.message + "<-- in thread -->"+localThreadID+"<-- at Line " + event.lineno'
  +');'#13#10'                                                        errFun(lo'
  +'calThreadID);'#13#10'                                                      '
  +' };'#13#10'         }'#13#10'         else {alert(''Function for thread ''+'
  +'this.ThreadID+'' is undefined'');}'#13#10'      }'#13#10'      else { alert'
  +'("Error in TMyThread.Execute - CurrentWorker not null"); };'#13#10'   }'#13
  +#10'   else { alert("Sorry, your browser does not support Web Workers..."); '
  +'};'#13#10'}'#13#10';'#13#10'end;'#13#10'end;'#13#10#13#10#13#10'function TX'
  +'Threads.CreateWorkerThread(ThreadNameString:string; TheFunc:TObject):TMyThr'
  +'ead;'#13#10'var NewThread:TMyThread;'#13#10'begin'#13#10'  NewThread :=  TM'
  +'yThread.Create;'#13#10'  NewThread.ThreadName:=ThreadNameString;'#13#10'  N'
  +'ewThread.ThreadID:=ThreadNameString;'#13#10#13#10'  NewThread.myTXThreads:='
  +'self;'#13#10#13#10'  ThreadCount := ThreadCount + 1;'#13#10'  setlength(Thr'
  +'eadList,ThreadCount);'#13#10'  ThreadList[ThreadCount-1 ]:= NewThread;'#13
  +#10' // showmessage(''CreateWorkerThread ID=''+ThreadNameString+'' is on Thr'
  +'eadList at index ''+inttostr(ThreadCount-1));'#13#10' // showmessage(''leng'
  +'th(ThreadList) is ''+inttostr(length(ThreadList)));'#13#10#13#10#13#10'  Ne'
  +'wThread.Execute(TheFunc);   // this creates a Worker instance'#13#10#13#10
  +'  NewThread.active := true;'#13#10#13#10'  result:=NewThread;'#13#10'end;'
  +#13#10'procedure TXThreads.CreateSetOfThreads(ThreadSetNum:integer; TheFunc:'
  +'TObject);'#13#10'var'#13#10'  i,max:integer;'#13#10'begin'#13#10'  max:=str'
  +'ToInt(myNode.getAttribute(''MaxCopiesThread''+intToStr(ThreadSetNum),true).'
  +'AttribValue);'#13#10'  for i:=0 to max-1 do'#13#10'  begin'#13#10'    Creat'
  +'eWorkerThread(self.NodeName+''Thread''+intToStr(ThreadSetNum)+''_''+intToSt'
  +'r(i),TheFunc);'#13#10'  end;'#13#10'end;'#13#10'procedure TXThreads.StartMy'
  +'Threads;'#13#10'var'#13#10'  fn:TObject;'#13#10'begin'#13#10'  fn:=FindEven'
  +'tFunction(self.NameSpace,self.NodeName,''Thread1'',self,false);'#13#10'  if'
  +' (fn<>nil) then CreateSetOfThreads(1,fn);'#13#10'  fn:=FindEventFunction(se'
  +'lf.NameSpace,self.NodeName,''Thread2'',self,false);'#13#10'  if (fn<>nil) t'
  +'hen CreateSetOfThreads(2,fn);'#13#10'  fn:=FindEventFunction(self.NameSpace'
  +',self.NodeName,''Thread3'',self,false);'#13#10'  if (fn<>nil) then CreateSe'
  +'tOfThreads(3,fn);'#13#10'  fn:=FindEventFunction(self.NameSpace,self.NodeNa'
  +'me,''Thread4'',self,false);'#13#10'  if (fn<>nil) then CreateSetOfThreads(4'
  +',fn);'#13#10'end;'#13#10'{$endif}'#13#10#13#10#13#10'function TXThreads.Get'
  +'Active:Boolean;'#13#10'begin'#13#10'  result:=MyStrToBool(MyNode.getAttribu'
  +'te(''Active'',true).AttribValue);'#13#10'end;'#13#10#13#10'function TXThrea'
  +'ds.GetMaxCopiesThread1:integer;'#13#10'begin'#13#10'  result:=StrToInt(MyNo'
  +'de.getAttribute(''MaxCopiesThread1'',true).AttribValue);'#13#10'end;'#13#10
  +#13#10'function TXThreads.GetMaxCopiesThread2:integer;'#13#10'begin'#13#10' '
  +' result:=StrToInt(MyNode.getAttribute(''MaxCopiesThread2'',true).AttribValu'
  +'e);'#13#10'end;'#13#10#13#10'function TXThreads.GetMaxCopiesThread3:integer'
  +';'#13#10'begin'#13#10'  result:=StrToInt(MyNode.getAttribute(''MaxCopiesThr'
  +'ead3'',true).AttribValue);'#13#10'end;'#13#10#13#10'function TXThreads.GetM'
  +'axCopiesThread4:integer;'#13#10'begin'#13#10'  result:=StrToInt(MyNode.getA'
  +'ttribute(''MaxCopiesThread4'',true).AttribValue);'#13#10'end;'#13#10#13#10
  ,'function TXThreads.GetThreadVarNums:String;'#13#10'begin'#13#10'  result:=M'
  +'yNode.getAttribute(''ThreadVarNums'',true).AttribValue;'#13#10'end;'#13#10
  +#13#10#13#10'procedure TXThreads.SetActive(AValue:Boolean);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''Active'',myBoolToStr(AValue),''Boolean'');'
  +#13#10'  if (StartingUp=false) and (AValue=true) then'#13#10'  begin'#13#10
  +'    //showmessage(''calling event beginthreads'');'#13#10'    HandleEvent('
  +'''BeginThreads'',self.myNode.NodeName,self.myNode.NameSpace,'''');  // do a'
  +'ny user-initialisation'#13#10'    //showmessage(''calling startmythreads'')'
  +';'#13#10'    self.StartMyThreads;'#13#10'  end;'#13#10'end;'#13#10#13#10'pr'
  +'ocedure TXThreads.SetMaxCopiesThread1(AValue:integer);'#13#10'begin'#13#10
  +'  myNode.SetAttributeValue(''MaxCopiesThread1'',IntToStr(AValue),''Integer'
  +''');'#13#10'end;'#13#10#13#10'procedure TXThreads.SetMaxCopiesThread2(AValu'
  +'e:integer);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''MaxCopiesThrea'
  +'d2'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10#13#10'procedure TXTh'
  +'reads.SetMaxCopiesThread3(AValue:integer);'#13#10'begin'#13#10'  myNode.Set'
  +'AttributeValue(''MaxCopiesThread3'',IntToStr(AValue),''Integer'');'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXThreads.SetMaxCopiesThread4(AValue:integer);'
  +#13#10'begin'#13#10'  myNode.SetAttributeValue(''MaxCopiesThread4'',IntToStr'
  +'(AValue),''Integer'');'#13#10'end;'#13#10#13#10'procedure TXThreads.SetThre'
  +'adVarNums(AValue:String);'#13#10'begin'#13#10'  myNode.SetAttributeValue('''
  +'ThreadVarNums'',AValue,''String'');'#13#10'end;'#13#10#13#10'begin'#13#10' '
  +' AddDefaultAttribute(myDefaultAttribs,''Active'',''Boolean'',''False'',''Se'
  +'t Active to start all threads'',false);'#13#10'  AddDefaultAttribute(myDefa'
  +'ultAttribs,''MaxCopiesThread1'',''Integer'',''0'',''Number of repeats for t'
  +'he Thread1 event code'',false);'#13#10'  AddDefaultAttribute(myDefaultAttri'
  +'bs,''MaxCopiesThread2'',''Integer'',''0'',''Number of repeats for the Threa'
  +'d2 event code'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Max'
  +'CopiesThread3'',''Integer'',''0'',''Number of repeats for the Thread3 event'
  +' code'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxCopiesTh'
  +'read4'',''Integer'',''0'',''Number of repeats for the Thread4 event code'','
  +'false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''ThreadVarNums'',''S'
  +'tring'','''',''List of variable names (float numeric)'',false);'#13#10'  Ad'
  +'dDefaultsToTable(MyNodeType,myDefaultAttribs);'#13#10#13#10'  {$ifndef JScr'
  +'ipt}'#13#10'  Classes.RegisterClass(TXThreads);'#13#10'  AddNodeFuncLookup('
  +'MyNodeType,@CreateWidget);'#13#10'  {$else}'#13#10'  AddNodeFuncLookup(MyNo'
  +'deType,@CreateinterfaceObj,@CreateThreadsWidget);'#13#10'  SuppressDesigner'
  +'Property(MyNodeType,''Alignment'');'#13#10'  SuppressDesignerProperty(MyNod'
  +'eType,''IsVisible'');'#13#10'  SuppressDesignerProperty(MyNodeType,''LabelP'
  +'os'');'#13#10'  SuppressDesignerProperty(MyNodeType,''LabelText'');'#13#10
  +'  SuppressDesignerProperty(MyNodeType,''Hint'');'#13#10'  {$endif}'#13#10'e'
  +'nd.'#13#10
]);
LazarusResources.Add('xgpucanvas','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XGPUCanvas;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13
  +#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, SysUtils, TypInfo,'
  +' StringUtils, NodeUtils, XIFrame,'#13#10'    UtilsJSCompile, XForm, XCode, '
  +'XButton, XVBox, XTabControl, XMemo, XComboBox, EventsInterface,'#13#10'    '
  +'WebTranspilerUtils,'#13#10'  {$ifndef JScript}'#13#10'    LResources, Forms'
  +', Controls, StdCtrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls,'#13
  +#10'    LazsUtils, LCLIntf, Dynlibs,'#13#10'    LCLType, gettext,'#13#10'   '
  +' {$ifdef Chromium}'#13#10'    uCEFChromium, uCEFInterfaces, uCEFTypes, uCEF'
  +'ProcessMessage, uCEFMiscFunctions,'#13#10'//    cefXUtils,'#13#10'    {$end'
  +'if}'#13#10'  {$else}'#13#10'    webfilecache, pas2jswebcompiler,'#13#10'   '
  +' HTMLUtils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events, XGPUEditor;'
  +#13#10#13#10#13#10'type TGPUNumParam = record'#13#10'  ParamName:String;'#13
  +#10'  ParamValue:TNumArray;'#13#10'  end;'#13#10'type TGPU2DNumParam = recor'
  +'d'#13#10'  ParamName:String;'#13#10'  ParamValue:T2DNumArray;'#13#10'  end;'
  +#13#10'type TGPUNumParams = Array of TGPUNumParam;'#13#10'type TGPU2DNumPara'
  +'ms = Array of TGPU2DNumParam;'#13#10'type TGPUIntConst = record'#13#10'  Co'
  +'nstName:String;'#13#10'  ConstValue:integer;'#13#10'  end;'#13#10'type TGPU'
  +'IntConsts = Array of TGPUIntConst;'#13#10#13#10'type'#13#10'  TXGPUCanvas ='
  +' class(TXIFrame)'#13#10'  private'#13#10'    { Private declarations }'#13#10
  +'    ParamNumArray:TGPUNumParams;'#13#10'    Param2DNumArray:TGPU2DNumParams'
  +';'#13#10'    ConstIntArray:TGPUIntConsts;'#13#10'//    {$ifndef JScript}'#13
  +#10'//    fHandleOnNewFrame:TEventHandler;'#13#10'//    {$endif}'#13#10#13#10
  +'    function GetAnimationCode:string;'#13#10'    function GetActive:Boolean'
  +';'#13#10'    function GetAnimated:Boolean;'#13#10'    function GetParamNumL'
  +'ist:string;'#13#10'    function GetParam2DNumList:string;'#13#10'    functi'
  +'on GetConstIntList:string;'#13#10'    function GetMaxIterations:integer;'#13
  +#10'    function GetStartIteration:integer;'#13#10'    function GetNumFrames'
  +':integer;'#13#10'    function GetMaxFramesPerSec:integer;'#13#10'    functi'
  +'on GetNumKernels:integer;'#13#10'    function GetInitStageData:string;'#13
  +#10'    function GetKernelXDims:string;      //array of integer eg. [100,200'
  +',300]'#13#10'    function GetKernelYDims:string;'#13#10'    function GetKer'
  +'nelZDims:string;'#13#10'    function GetEmulationMode:Boolean;'#13#10'    f'
  +'unction GetEmulationFrame:Integer;'#13#10#13#10'    procedure SetAnimationC'
  +'ode(AValue:string);'#13#10'    procedure SetActive(AValue:Boolean);'#13#10
  +'    procedure SetAnimated(AValue:Boolean);'#13#10'    procedure SetParamNum'
  +'List(AValue:string);'#13#10'    procedure SetConstIntList(AValue:string);'
  +#13#10'    procedure SetParam2DNumList(AValue:string);'#13#10'    procedure '
  +'SetMaxIterations(AValue:integer);'#13#10'    procedure SetStartIteration(AV'
  +'alue:integer);'#13#10'    procedure SetNumFrames(AValue:integer);'#13#10'  '
  +'  procedure SetMaxFramesPerSec(AValue:integer);'#13#10'    procedure SetNum'
  +'Kernels(AValue:integer);'#13#10'    procedure SetInitStageData(AValue:strin'
  +'g);'#13#10'    procedure SetKernelXDims(AValue:string);'#13#10'    procedur'
  +'e SetKernelYDims(AValue:string);'#13#10'    procedure SetKernelZDims(AValue'
  +':string);'#13#10'    procedure SetEmulationMode(AValue:Boolean);'#13#10'   '
  +' procedure SetEmulationFrame(AValue:integer);'#13#10#13#10'    procedure Se'
  +'tMyEventTypes;  override;'#13#10'    procedure SetPropertyDefaults;'#13#10
  +'    procedure StartMyGPU;'#13#10'    procedure StopMyGPU(isdestroying:Boole'
  +'an);'#13#10'    function CompileGPUToJS(var GPUJSOutput:String):Boolean;'#13
  +#10'    function GPUJSCode(AnimCode:TStringList):String;'#13#10'    function'
  +' GPUJSAnimationFooter:String;'#13#10'    procedure setupGPUPage;'#13#10'   '
  +' function AddFuncsBlockIfMissing(GPUCode:String):String;'#13#10#13#10'    {'
  +'$ifndef JScript}'#13#10'    procedure DoGPUCanvasConstructor;'#13#10'    {$'
  +'endif}'#13#10#13#10'  protected'#13#10'    { Protected declarations }'#13#10
  +'  public'#13#10'    { Public declarations }'#13#10'    GeneratedHTML:String'
  +';'#13#10'    GeneratedPascalUnit:String;'#13#10'    GPUStageArray:T3DNumArr'
  +'ay;            // output from non-graphical nested kernels'#13#10'    GPUOu'
  +'tputArray:T3DNumArray;           // output from main graphical kernel'#13#10
  +'    GPUStageString:String;'#13#10'    GPUOutputString:String;'#13#10'    an'
  ,'imCounterString:String;'#13#10'    Dimensions:TDimsArray;'#13#10'    {$ifnd'
  +'ef JScript}'#13#10'    constructor Create(TheOwner: TComponent); override;'
  +#13#10'    constructor Create(TheOwner: TComponent;IsDynamic:Boolean); overr'
  +'ide;'#13#10'    destructor Destroy; override;'#13#10'    procedure ReLoadUR'
  +'L; override;'#13#10'    {$ifdef Chromium}'#13#10'    procedure HandleConsol'
  +'eMessage(Sender: TObject; const browser: ICefBrowser; level: TCefLogSeverit'
  +'y;'#13#10'                                   const message, source: ustring'
  +'; line: Integer; out Result: Boolean) ;'#13#10'    procedure GPUProcessMess'
  +'ageReceived('#13#10'      Sender: TObject; const browser: ICefBrowser;'#13
  +#10'      const frame: ICefFrame; sourceProcess: TCefProcessId;'#13#10'     '
  +' const message: ICefProcessMessage; out Result: Boolean);'#13#10'    {$endi'
  +'f}'#13#10'    {$else}'#13#10'    constructor Create(MyForm:TForm;NodeName,N'
  +'ameSpace:String);  override;'#13#10'    {$endif}'#13#10'    function FullPa'
  +'ramList:String;'#13#10'    function FullXMLString:String;'#13#10'    functi'
  +'on GetParamNumValue(pName:String):TNumArray;'#13#10'    function GetParam2D'
  +'NumValue(pName:String):T2DNumArray;'#13#10'    function GetConstIntValue(pN'
  +'ame:String):integer;'#13#10'    procedure SetParamNumValue(pName:String;pVa'
  +'lue:TNumArray;ForwardToWidget:Boolean);'#13#10'    procedure SetParam2DNumV'
  +'alue(pName:String;pValue:T2DNumArray;ForwardToWidget:Boolean);'#13#10'    p'
  +'rocedure SetConstIntValue(pName:String;pValue:integer);'#13#10'    function'
  +' CompileAndTrimAnimCode:TStringList;'#13#10'    function FetchAllAnimCode:T'
  +'AnimCodeArray;'#13#10'    function BuildKernelList:String;'#13#10'    funct'
  +'ion KernelDimsString(KNum:integer):String;'#13#10'    function BuildPascalA'
  +'nimationUnit(Compiler:TObject;RunMode:String):Boolean;'#13#10'    function '
  +'BuildDimensionsArray(var xdims,ydims,zdims:TStringList):boolean;'#13#10'   '
  +' function CheckForKernels(AnimCode:TStringList):Boolean;'#13#10'    functio'
  +'n JSInitialCode:String;'#13#10'    function JSDeclareParameters:String;'#13
  +#10'    function JSGetPixelArray:String;'#13#10'    function JSPostMessageCo'
  +'de:String;'#13#10'    function JSFinalCode:String;'#13#10'    function Exec'
  +'EmulatorFunc(animcounter,NumZPixels,NumYPixels,NumXPixels:integer):TGPUPixe'
  +'lArray;'#13#10#13#10'published'#13#10'    { Published declarations }'#13#10
  +#13#10'    // Properties defined for this class...'#13#10'    property Activ'
  +'e: Boolean read GetActive write SetActive;'#13#10'    property Animated: Bo'
  +'olean read GetAnimated write SetAnimated;'#13#10'    property AnimationCode'
  +': String read GetAnimationCode write SetAnimationCode;'#13#10'    property '
  +'ParamNumList: String read GetParamNumList write SetParamNumList;'#13#10'   '
  +' property Param2DNumList: String read GetParam2DNumList write SetParam2DNum'
  +'List;'#13#10'    property ConstIntList: String read GetConstIntList write S'
  +'etConstIntList;'#13#10'    property MaxIterations: integer read GetMaxItera'
  +'tions write SetMaxIterations;'#13#10'    property StartIteration: integer r'
  +'ead GetStartIteration write SetStartIteration;'#13#10'    property NumFrame'
  +'s: integer read GetNumFrames write SetNumFrames;'#13#10'    property MaxFra'
  +'mesPerSec: integer read GetMaxFramesPerSec write SetMaxFramesPerSec;'#13#10
  +'    property NumKernels:integer read GetNumKernels write SetNumKernels;'#13
  +#10'    property InitStageData: String read GetInitStageData write SetInitSt'
  +'ageData;'#13#10'    property KernelXDims: String read GetKernelXDims write '
  +'SetKernelXDims;'#13#10'    property KernelYDims: String read GetKernelYDims'
  +' write SetKernelYDims;'#13#10'    property KernelZDims: String read GetKern'
  +'elZDims write SetKernelZDims;'#13#10'    property EmulationMode: Boolean re'
  +'ad GetEmulationMode write SetEmulationMode;'#13#10'    property EmulationFr'
  +'ame: integer read GetEmulationFrame write SetEmulationFrame;'#13#10'    fun'
  +'ction GPUJSCodeForEmulationMode(AnimCode:TStringList):String;'#13#10#13#10
  +'  end;'#13#10#13#10#13#10'procedure SetOutputArrayValue(NodeName:String;con'
  +'st AValue,cval:String);'#13#10'procedure SetStageArrayValue(NodeName:String'
  +';const AValue:String);'#13#10'procedure SetStageArrayValue2(NodeName:String'
  +';AValue:T3DNumArray);'#13#10'procedure SetCounterValue(NodeName:String;cons'
  +'t cval:String);'#13#10'function GetOutputArrayValue(NodeName:String):T3DNum'
  +'Array;'#13#10'function GetOutputArrayString(NodeName:String):String;'#13#10
  +'function GetStageArrayValue(NodeName:String):T3DNumArray;'#13#10'function G'
  +'etStageArrayString(NodeName:String):String;'#13#10'function GetInitStageArr'
  +'ayValue(NodeName:String):T3DNumArray;'#13#10#13#10'var'#13#10'  gpujs:Strin'
  +'g;                 // contents of resource file gpu-browser.js'#13#10#13#10
  +'implementation'#13#10#13#10'const MyNodeType=''TXGPUCanvas'';'#13#10'var'#13
  +#10'  myDefaultAttribs:TDefaultAttributesArray;'#13#10#13#10'procedure TXGPU'
  ,'Canvas.SetMyEventTypes;'#13#10'begin'#13#10'  MyEventTypes.Add(''Click'');'
  +#13#10'  MyEventTypes.Add(''OnStart'');'#13#10'  // NB. the following 2 even'
  +'ts are called from the GPU at points in its execution, but they are'#13#10
  +'  // not synchronous.  The GPU process does not wait for completion of thes'
  +'e events.'#13#10'  MyEventTypes.Add(''OnFirstStageDone'');'#13#10'  MyEvent'
  +'Types.Add(''OnFrameDone'');'#13#10'end;'#13#10#13#10#13#10'function TXGPUCa'
  +'nvas.BuildKernelList:String;'#13#10'var'#13#10'  OList:String;'#13#10'  i:i'
  +'nteger;'#13#10'begin'#13#10'  OList:=''["Graphical (Final)","Common Functio'
  +'ns"'';'#13#10'  for i:=0 to numKernels-1 do'#13#10'    OList:=OList+'',"Ker'
  +'nel ''+inttostr(i+1)+''"'';'#13#10'  OList:=OList+'']'';'#13#10'  result:=O'
  +'List;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.KernelDimsString(KNum:i'
  +'nteger):String;'#13#10'var'#13#10'  xdims,ydims,zdims:TStringList;'#13#10' '
  +' str:string;'#13#10'begin'#13#10'  xdims:=JSONStringToStringList(self.Kerne'
  +'lxDims);'#13#10'  ydims:=JSONStringToStringList(self.KernelyDims);'#13#10' '
  +' zdims:=JSONStringToStringList(self.KernelzDims);'#13#10'  if (xdims.count<'
  +'KNum+1)'#13#10'  or (ydims.count<KNum+1)'#13#10'  or (zdims.count<KNum+1) t'
  +'hen'#13#10'    str:=''**err**'''#13#10'  else'#13#10'  begin'#13#10'    str'
  +':=''[''+xdims[KNum]+'',''+ydims[KNum]+'',''+zdims[KNum]+'']'';'#13#10'  end'
  +';'#13#10'  xdims.Free;'#13#10'  ydims.Free;'#13#10'  zdims.Free;'#13#10'  r'
  +'esult:=str;'#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.SetPropertyDefau'
  +'lts;'#13#10'begin'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10#13#10'f'
  +'unction CreateGPUCanvasWidget(ParentNode:TDataNode;ScreenObjectName,NameSpa'
  +'ce:string;position:integer;Alignment:String):TDataNode;'#13#10'var'#13#10' '
  +' NewNode:TDataNode;'#13#10'begin'#13#10'  NewNode:=CreateDynamicLazWidget('
  +'''TXGPUCanvas'',ParentNode.MyForm,ParentNode,ScreenObjectName,NameSpace,Ali'
  +'gnment,position);'#13#10'  result:=NewNode;'#13#10'end;'#13#10#13#10'proced'
  +'ure TXGPUCanvas.DoGPUCanvasConstructor;'#13#10'begin'#13#10'  {$ifdef Chrom'
  +'ium}'#13#10'  myChromium.OnConsoleMessage:=@self.HandleConsoleMessage;'#13
  +#10'  myChromium.OnProcessMessageReceived:=@self.GPUProcessMessageReceived;'
  +#13#10'  {$endif}'#13#10#13#10'  self.IsContainer:=false;'#13#10'  self.myNo'
  +'de.NodeType:=''TXGPUCanvas'';'#13#10'  SetLength(ParamNumArray,0);'#13#10' '
  +' SetLength(self.GPUOutputArray,0);'#13#10'  AddDefaultAttribs(self,self.myN'
  +'ode,mydefaultAttribs);'#13#10#13#10'  SetPropertyDefaults;'#13#10'end;'#13
  +#10#13#10'constructor TXGPUCanvas.Create(TheOwner:TComponent);'#13#10'begin'
  +#13#10'  inherited Create(TheOwner,false);'#13#10'  DoGPUCanvasConstructor;'
  +#13#10'end;'#13#10#13#10'constructor TXGPUCanvas.Create(TheOwner:TComponent;'
  +'IsDynamic:Boolean);'#13#10'begin'#13#10'  inherited Create(TheOwner,IsDynam'
  +'ic);'#13#10'  DoGPUCanvasConstructor;'#13#10'end;'#13#10#13#10'destructor T'
  +'XGPUCanvas.Destroy;'#13#10'begin'#13#10'  if (not (csDesigning in component'
  +'State)) then'#13#10'  begin'#13#10'    if Active then'#13#10'    begin'#13
  +#10'      self.StopMyGPU(true);'#13#10'    end;'#13#10'    myControl.Free;'
  +#13#10'  end;'#13#10'  inherited Destroy;'#13#10'end;'#13#10#13#10'procedure'
  +' TXGPUCanvas.ReLoadURL;'#13#10'begin'#13#10'  if (self.SuspendRefresh)'#13
  +#10'  {$ifndef JScript}'#13#10'  or (GlobalSuppressFrameDisplay)'#13#10'  {$'
  +'endif}'#13#10'  then'#13#10'    EXIT;'#13#10#13#10'  if (StartingUp=false)'
  +#13#10'  and (self.Active) then'#13#10'    self.StartMyGPU;'#13#10'end;'#13
  +#10#13#10'{$ifdef Chromium}'#13#10#13#10'procedure TXGPUCanvas.HandleConsole'
  +'Message(Sender: TObject; const browser: ICefBrowser; level: TCefLogSeverity'
  +';'#13#10'                                 const message, source: ustring; l'
  +'ine: Integer; out Result: Boolean) ;'#13#10'var'#13#10'  NewText:String;'#13
  +#10'  MType:String;'#13#10'  TempMsg : ICefProcessMessage;'#13#10'begin'#13
  +#10'  // A frame display has ended.'#13#10'  if (not (csDesigning in compone'
  +'ntState))'#13#10'  and (not StartingUp)'#13#10'  and (self.myNode<>nil)'#13
  +#10'  and (self.Active=true)'#13#10'  and (browser<>nil)'#13#10'  and (myChr'
  +'omium<>nil)'#13#10'  and (FoundString(message,self.myNode.NodeName)=1)'#13
  +#10'  then'#13#10'  begin'#13#10'    NewText:=message;'#13#10'    Delete(New'
  +'Text,1,length(self.myNode.NodeName));'#13#10'    MType:=NewText[1];     // '
  +'might be ''O'' or ''S'''#13#10'    Delete(NewText,1,1);'#13#10'    if MType'
  +' = ''O'' then'#13#10'    begin'#13#10'      // converting the JSON string b'
  +'ack to numeric array takes ages so just storing the'#13#10'      // string '
  +'for now.  Do the conversion when the array is wanted.'#13#10'      // Send '
  +'a cef message to fetch the new value of the frame output array'#13#10'     '
  +' // (Use the ArgumentList property if you need to pass some parameters.)'#13
  +#10'      TempMsg := TCefProcessMessageRef.New(''getGPUData'');'#13#10'     '
  ,' TempMsg.ArgumentList.SetString(0,self.myNode.NodeName);'#13#10'      myChr'
  +'omium.SendProcessMessage(PID_RENDERER, TempMsg);'#13#10'    end'#13#10'    '
  +'else if MType = ''C'' then'#13#10'    begin'#13#10'      // this one is use'
  +'d between frames, for an animated GPU'#13#10'      // Only the animation co'
  +'unter is being sent, for efficiency.'#13#10'      TempMsg := TCefProcessMes'
  +'sageRef.New(''getGPUCounter'');'#13#10'      TempMsg.ArgumentList.SetString'
  +'(0,self.myNode.NodeName);'#13#10'      myChromium.SendProcessMessage(PID_RE'
  +'NDERER, TempMsg);'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10'procedur'
  +'e TXGPUCanvas.GPUProcessMessageReceived('#13#10'  Sender: TObject; const br'
  +'owser: ICefBrowser;'#13#10'  const frame: ICefFrame; sourceProcess: TCefPro'
  +'cessId;'#13#10'  const message: ICefProcessMessage; out Result: Boolean);'
  +#13#10'var'#13#10'  oText,sText,acText:String;'#13#10'begin'#13#10'  case me'
  +'ssage.Name of'#13#10'    ''sendGPUarrays'':'#13#10'    begin'#13#10'      C'
  +'efDebugLog(''TXGPUCanvas.GPUProcessMessageReceived. id=''+self.Name);'#13#10
  +'      oText := message.ArgumentList.GetString(0);'#13#10'      sText := mes'
  +'sage.ArgumentList.GetString(1);'#13#10'      acText := message.ArgumentList'
  +'.GetString(2);'#13#10'      // convert the array string to 3d numeric array'
  +#13#10'     self.GPUOutputString:=oText;   // the pixel array'#13#10'     se'
  +'lf.GPUStageString:=sText;  //the final stage array'#13#10'     self.animCou'
  +'nterString:=acText;'#13#10'     //self.GPUStageArray:=JSONStringTo3DNumArra'
  +'y(sText);    //!!!! takes ages ..... tbd'#13#10'     setlength(self.GPUStag'
  +'eArray,0);'#13#10'     Events.CallHandleEventLater(''OnFirstStageDone'','''
  +''', self);     // get back to main thread'#13#10#13#10'    end;'#13#10'    '
  +'''sendGPUcounter'':'#13#10'    begin'#13#10'      CefDebugLog(''TXGPUCanvas'
  +'.GPUProcessMessageReceived. id=''+self.Name);'#13#10'      acText := messag'
  +'e.ArgumentList.GetString(0);'#13#10'     self.animCounterString:=acText;'#13
  +#10'     self.myNode.SetAttributeValue(''LastCounterValue'',acText);'#13#10
  +'     Events.CallHandleEventLater(''OnFrameDone'','''', self);     // get ba'
  +'ck to main thread'#13#10'    end;'#13#10'  else'#13#10'    inherited;'#13#10
  +'  end;'#13#10'end;'#13#10'{$endif}'#13#10#13#10#13#10#13#10'{$else} //JScri'
  +'pt'#13#10#13#10'constructor TXGPUCanvas.Create(MyForm:TForm;NodeName,NameSp'
  +'ace:String);'#13#10'begin'#13#10'  inherited Create(MyForm,NodeName,NameSpa'
  +'ce);'#13#10'  self.NodeType:=''TXGPUCanvas'';'#13#10'  self.IsContainer:=fa'
  +'lse;'#13#10'  SetLength(ParamNumArray,0);'#13#10#13#10'  SetNodePropDefault'
  +'s(self,myDefaultAttribs);'#13#10'  SetPropertyDefaults;'#13#10'end;'#13#10
  +#13#10'function CreateGPUCanvasWidget(MyNode, ParentNode:TDataNode;ScreenObj'
  +'ectName,NameSpace:string;position:integer;Alignment:String):TDataNode;'#13
  +#10'var'#13#10'  NewWidget:TXGPUCanvas;'#13#10'  h,w:integer;'#13#10'  scr,G'
  +'PUMessageHandler:String;'#13#10'begin'#13#10'  DoCreateFrameWidget(MyNode, '
  +'ParentNode,ScreenObjectName,position);'#13#10'  NewWidget:=TXGPUCanvas(myNo'
  +'de);'#13#10#13#10'  asm'#13#10'    var nm = MyNode.NodeName;'#13#10'    var'
  +' ns = MyNode.NameSpace;'#13#10'    var nd = MyNode;'#13#10'    function GPU'
  +'OutputHandler(ev) {'#13#10'    if ((ev.data.objid!=undefined)&&(ev.data.obj'
  +'id==ns+nm)) {'#13#10'//      console.log("handle GPU outbound message "+ev.'
  +'data.objid+"  "+ev.data.mtype);'#13#10'      if (ev.data.mtype=="GPUReady")'
  +' {'#13#10'        let sdattrib=nd.GetAttribute(''InitStageData'',true);'#13
  +#10'        if ((sdattrib!=null)&&(sdattrib!=undefined)) {'#13#10'          '
  +'let lGPUStageArray=pas.StringUtils.DelChars(sdattrib.AttribValue,''"'');'#13
  +#10'          if (lGPUStageArray=='''')   lGPUStageArray=''[[[1]]]'';'#13#10
  +'          let StageArrayValue = JSON.parse(lGPUStageArray);'#13#10'        '
  +'  lGPUStageArray='''';'#13#10'          ob = document.getElementById(ns+nm+'
  +'"Contents");'#13#10'          ob.contentWindow.postMessage({"objid":ns+nm, '
  +'"mtype":"StartTheGPU", "pName":"", "pValue":StageArrayValue},"*")'#13#10'  '
  +'      }'#13#10'        else {console.log(''GPU node not ready'');}'#13#10' '
  +'     }'#13#10'      else if (ev.data.mtype=="Debug") {'#13#10'        conso'
  +'le.log("Debug:"+ev.data.dets);'#13#10'      }'#13#10'      else if (ev.data'
  +'.mtype=="FrameOutput") {'#13#10'        try {'#13#10'          if (ev.data.'
  +'outputArray!="") {'#13#10'            pas.XGPUCanvas.SetOutputArrayValue(ev'
  +'.data.objid,ev.data.outputArray,ev.data.animcount); }'#13#10'          else'
  +' {'#13#10'            pas.XGPUCanvas.SetCounterValue(ev.data.objid,ev.data.'
  +'animcount); }'#13#10'            }catch(err){alert(err.message);'#13#10'   '
  +'     }'#13#10'      }'#13#10'      else if (ev.data.mtype=="StageOutput") {'
  +#13#10'         try {'#13#10'           pas.XGPUCanvas.SetStageArrayValue2(e'
  +'v.data.objid,ev.data.stageArray);'#13#10'           pas.Events.handleEvent('
  ,'null,''OnFirstStageDone'',nm,ns, '''');'#13#10'         }catch(err){alert(e'
  +'rr.message);'#13#10'         }'#13#10'       }'#13#10'      }'#13#10'    }'
  +#13#10'    var ob=document.getElementById(NameSpace+ScreenObjectName);'#13#10
  +'    if (ob!=null) {'#13#10'      window.addEventListener("message", GPUOutp'
  +'utHandler);'#13#10'    }'#13#10'  end;'#13#10#13#10#13#10'  RefreshComponen'
  +'tProps(myNode);'#13#10#13#10'  // refresh the actual h/w attributes'#13#10
  +'  h:=NewWidget.ActualHeight;'#13#10'  w:=NewWidget.ActualWidth;'#13#10#13#10
  +'  setlength(NewWidget.GPUOutputArray,0);'#13#10#13#10'  result:=myNode;'#13
  +#10'end;'#13#10#13#10#13#10'function CreateinterfaceObjGPU(MyForm:TForm;Node'
  +'Name,NameSpace:String):TObject;'#13#10'begin'#13#10'  result:=TObject(TXGPU'
  +'Canvas.Create(MyForm,NodeName,NameSpace));'#13#10'end;'#13#10#13#10#13#10'{'
  +'$endif}'#13#10'function TXGPUCanvas.GetAnimationCode:string;'#13#10'begin'
  +#13#10'  result:=myNode.getAttribute(''AnimationCode'',true).AttribValue;'#13
  +#10'end;'#13#10'function TXGPUCanvas.GetActive:Boolean;'#13#10'begin'#13#10
  +'  result:=myStrToBool(myNode.getAttribute(''Active'',true).AttribValue);'#13
  +#10'end;'#13#10'function TXGPUCanvas.GetAnimated:Boolean;'#13#10'begin'#13#10
  +'  result:=myStrToBool(myNode.getAttribute(''Animated'',true).AttribValue);'
  +#13#10'end;'#13#10'function TXGPUCanvas.GetEmulationMode:Boolean;'#13#10'beg'
  +'in'#13#10'  result:=myStrToBool(myNode.getAttribute(''EmulationMode'',true)'
  +'.AttribValue);'#13#10'end;'#13#10'function TXGPUCanvas.GetEmulationFrame:in'
  +'teger;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAttribute(''Emulati'
  +'onFrame'',true).AttribValue);'#13#10'end;'#13#10'//function TXGPUCanvas.Get'
  +'FetchFrameOutput:Boolean;'#13#10'//begin'#13#10'//  result:=myStrToBool(myN'
  +'ode.getAttribute(''FetchFrameOutput'',true).AttribValue);'#13#10'//end;'#13
  +#10'function TXGPUCanvas.GetParamNumList:string;'#13#10'begin'#13#10'  resul'
  +'t:=myNode.getAttribute(''ParamNumList'',true).AttribValue;'#13#10'end;'#13
  +#10'function TXGPUCanvas.GetParam2DNumList:string;'#13#10'begin'#13#10'  res'
  +'ult:=myNode.getAttribute(''Param2DNumList'',true).AttribValue;'#13#10'end;'
  +#13#10'function TXGPUCanvas.GetConstIntList:string;'#13#10'begin'#13#10'  re'
  +'sult:=myNode.getAttribute(''ConstIntList'',true).AttribValue;'#13#10'end;'
  +#13#10'function TXGPUCanvas.GetMaxIterations:integer;'#13#10'begin'#13#10'  '
  +'result:=StrToInt(myNode.getAttribute(''MaxIterations'',true).AttribValue);'
  +#13#10'end;'#13#10'function TXGPUCanvas.GetStartIteration:integer;'#13#10'be'
  +'gin'#13#10'  result:=StrToInt(myNode.getAttribute(''StartIteration'',true).'
  +'AttribValue);'#13#10'end;'#13#10'function TXGPUCanvas.GetNumFrames:integer;'
  +#13#10'begin'#13#10'  result:=StrToInt(myNode.getAttribute(''NumFrames'',tru'
  +'e).AttribValue);'#13#10'end;'#13#10'function TXGPUCanvas.GetMaxFramesPerSec'
  +':integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAttribute(''MaxF'
  +'ramesPerSec'',true).AttribValue);'#13#10'end;'#13#10'function TXGPUCanvas.G'
  +'etNumKernels:integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAttr'
  +'ibute(''NumKernels'',true).AttribValue);'#13#10'end;'#13#10'function TXGPUC'
  +'anvas.GetInitStageData:string;'#13#10'begin'#13#10'  result:=myNode.getAttr'
  +'ibute(''InitStageData'',true).AttribValue;'#13#10'end;'#13#10'function TXGP'
  +'UCanvas.GetKernelXDims:string;'#13#10'begin'#13#10'  result:=myNode.getAttr'
  +'ibute(''KernelXDims'',true).AttribValue;'#13#10'end;'#13#10'function TXGPUC'
  +'anvas.GetKernelYDims:string;'#13#10'begin'#13#10'  result:=myNode.getAttrib'
  +'ute(''KernelYDims'',true).AttribValue;'#13#10'end;'#13#10'function TXGPUCan'
  +'vas.GetKernelZDims:string;'#13#10'begin'#13#10'  result:=myNode.getAttribut'
  +'e(''KernelZDims'',true).AttribValue;'#13#10'end;'#13#10#13#10'function TXGP'
  +'UCanvas.FullParamList:String;'#13#10'var'#13#10'  plist:String;'#13#10'begi'
  +'n'#13#10'  plist:='''';'#13#10'  if self.ParamNumList<>'''' then plist:='','
  +'''+self.ParamNumList;'#13#10'  if self.Param2DNumList<>'''' then plist:=pli'
  +'st+'',''+self.Param2DNumList;'#13#10'  result:=plist;'#13#10'end;'#13#10#13
  +#10'function TXGPUCanvas.BuildDimensionsArray(var xdims,ydims,zdims:TStringL'
  +'ist):boolean;'#13#10'var'#13#10'  TempStr:String;'#13#10'  n:integer;'#13#10
  +'begin'#13#10'  result:=false;'#13#10'  //setlength(self.Dimensions,numKerne'
  +'ls+1);'#13#10'  setlength(self.Dimensions,numKernels+2);    // add dummy '''
  +'kernel'' for the common functions code'#13#10'  setlength(self.Dimensions[0'
  +'],3);'#13#10'  setlength(self.Dimensions[1],3);'#13#10'  self.Dimensions[0,'
  +'0]:=self.ActualWidth;'#13#10'  self.Dimensions[0,1]:=self.ActualHeight;'#13
  +#10'  self.Dimensions[0,2]:=1;'#13#10'  self.Dimensions[1,0]:=0;'#13#10'  se'
  +'lf.Dimensions[1,1]:=0;'#13#10'  self.Dimensions[1,2]:=0;'#13#10'  TempStr:='
  +'self.KernelXDims;'#13#10'  xdims:=JSONStringToStringList(TempStr);'#13#10' '
  +' TempStr:=self.KernelyDims;'#13#10'  ydims:=JSONStringToStringList(TempStr)'
  ,';'#13#10'  TempStr:=self.KernelzDims;'#13#10'  zdims:=JSONStringToStringLis'
  +'t(TempStr);'#13#10'  // ... some validation tests ...'#13#10'  if xdims.Cou'
  +'nt<>numKernels then'#13#10'  begin'#13#10'    showmessage(''Number of Kerne'
  +'l X Dimensions must match number of kernels (in ''+self.myNode.NodeName+'')'
  +''');'#13#10'    EXIT;'#13#10'  end;'#13#10'  if ydims.Count<>numKernels the'
  +'n'#13#10'  begin'#13#10'    showmessage(''Number of Kernel Y Dimensions mus'
  +'t match number of kernels (in ''+self.myNode.NodeName+'')'');'#13#10'    EX'
  +'IT;'#13#10'  end;'#13#10'  if zdims.Count<>numKernels then'#13#10'  begin'
  +#13#10'    showmessage(''Number of Kernel Z Dimensions must match number of '
  +'kernels (in ''+self.myNode.NodeName+'')'');'#13#10'    EXIT;'#13#10'  end;'
  +#13#10'  for n:=1 to numKernels do'#13#10'  begin'#13#10'    if not IsStrFlo'
  +'atNum(xdims[n-1]) then'#13#10'    begin'#13#10'      showmessage(''GPU Kern'
  +'elXDims item ''+inttostr(n)+'' is not numeric (in ''+self.myNode.NodeName+'
  +''')'');'#13#10'      EXIT;'#13#10'    end;'#13#10'    if not IsStrFloatNum('
  +'ydims[n-1]) then'#13#10'    begin'#13#10'      showmessage(''GPU KernelYDim'
  +'s item ''+inttostr(n)+'' is not numeric (in ''+self.myNode.NodeName+'')'');'
  +#13#10'      EXIT;'#13#10'    end;'#13#10'    if not IsStrFloatNum(zdims[n-1'
  +']) then'#13#10'    begin'#13#10'      showmessage(''GPU KernelZDims item '''
  +'+inttostr(n)+'' is not numeric (in ''+self.myNode.NodeName+'')'');'#13#10' '
  +'     EXIT;'#13#10'    end;'#13#10'  end;'#13#10'  // set up the kernel dime'
  +'nsions...'#13#10'  //for n:=1 to numKernels do'#13#10'  for n:=2 to numKern'
  +'els+1 do'#13#10'  begin'#13#10'    setlength(self.Dimensions[n],3);        '
  +'    //x,y,z'#13#10'    self.Dimensions[n,0]:=strtoint(xdims[n-2]);'#13#10' '
  +'   self.Dimensions[n,1]:=strtoint(ydims[n-2]);'#13#10'    self.Dimensions[n'
  +',2]:=strtoint(zdims[n-2]);'#13#10'  end;'#13#10'  result:=true;'#13#10'end;'
  +#13#10#13#10'function TXGPUCanvas.CheckForKernels(AnimCode:TStringList):Bool'
  +'ean;'#13#10'begin'#13#10'  result:=true;'#13#10'  if AnimCode.Count<1 then'
  +#13#10'  begin'#13#10'    showmessage(''Error: Unable to find any animation '
  +'code block(s)'');'#13#10'    result:=false;'#13#10'  end;'#13#10'  //if Ani'
  +'mCode.Count<numKernels+1 then'#13#10'  if AnimCode.Count<numKernels+2 then'
  +#13#10'  begin'#13#10'    showmessage(''Error: Unable to find ''+inttostr(nu'
  +'mKernels+2)+'' animation code blocks'');'#13#10'    result:=false;'#13#10' '
  +' end;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.JSInitialCode:String;'
  +#13#10'var'#13#10'  str:String;'#13#10'begin'#13#10'  str:='#13#10'  //  ''d'
  +'ocument.domain = "/abc"; '' + LineEnding'#13#10'    ''document.title = "''+'
  +'myNode.NodeName+'' ''+myNode.NodeType+''"; '' + LineEnding'#13#10'    +''/*'
  +'/ ------------------------------------ Initialise the GPU -----------------'
  +'----------------/*/ '' + LineEnding'#13#10'    +''const ''+self.MyNode.Node'
  +'Name+''Matrix = new GPU({mode: ''''gpu''''});   ''+LineEnding'#13#10'    +'
  +'''const ''+self.MyNode.NodeName+'' = new GPU({mode: ''''gpu''''});   ''+Lin'
  +'eEnding'#13#10'    +''let running=true; ''+LineEnding;'#13#10'    str:= str'
  +' + ''let outputArrayString = ''''[]'''';''+LineEnding;'#13#10'    str:= str'
  +' + ''var GPUIntervalRunner;  ''  + LineEnding;'#13#10'  result:=str;'#13#10
  +'end;'#13#10#13#10'function TXGPUCanvas.JSDeclareParameters:String;'#13#10'v'
  +'ar'#13#10'  str,vstr:String;'#13#10'  vn:TNumArray;'#13#10'  va:T2DNumArray'
  +';'#13#10'  i,j,k:integer;'#13#10'begin'#13#10'  str:= ''/*/ ---------------'
  +'----------------- Initialise Parameters List -------------------------/*/ '
  +''' + LineEnding;'#13#10'  // Numeric parameters are 1-D arrays of values'#13
  +#10'  for i:=0 to length(self.ParamNumArray)-1 do'#13#10'  begin'#13#10'    '
  +'vn:=ParamNumArray[i].ParamValue;'#13#10'    vstr:=''['';'#13#10'    for j:='
  +'0 to length(vn)-1 do'#13#10'    begin'#13#10'      if j>0 then vstr:=vstr+'
  +''','';'#13#10'      vstr:=vstr+floattostr(vn[j]);'#13#10'    end;'#13#10'  '
  +'  vstr:=vstr+'']'';'#13#10'    str:=str+''let ''+ParamNumArray[i].ParamName'
  +'+'' = ''+vstr+'';'' +LineEnding;'#13#10'  end;'#13#10'  // Add the 2D array'
  +'s of values'#13#10'  for i:=0 to length(self.Param2DNumArray)-1 do'#13#10' '
  +' begin'#13#10'    va:=Param2DNumArray[i].ParamValue;'#13#10'    vstr:=''['''
  +';'#13#10'    for j:=0 to length(va)-1 do'#13#10'    begin'#13#10'      if j'
  +'>0 then vstr:=vstr+'','';'#13#10'      vstr:=vstr+''['';'#13#10'      for k'
  +':=0 to length(va[j])-1 do'#13#10'      begin'#13#10'        if k>0 then vst'
  +'r:=vstr+'','';'#13#10'        vstr:=vstr+floattostr(va[j,k]);'#13#10'      '
  +'end;'#13#10'      vstr:=vstr+'']'';'#13#10'    end;'#13#10'    vstr:=vstr+'
  +''']'';'#13#10'    str:=str+''let ''+Param2DNumArray[i].ParamName+'' = ''+vs'
  +'tr+'';'' +LineEnding;'#13#10'  end;'#13#10'  str:=str+LineEnding;'#13#10'  '
  +'result:=str;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.JSPostMessageCod'
  ,'e:String;'#13#10'var'#13#10'  str:String;'#13#10'begin'#13#10'  str:=''func'
  +'tion MyStringify(myarr) { '' + LineEnding'#13#10'  +''    var arrayString ='
  +' "["; '' + LineEnding'#13#10'  +''    for (var z=0; z<myarr.length; z++) '''
  +' + LineEnding'#13#10'  +''    {  '' + LineEnding'#13#10'  +''      if (z>0)'
  +' { arrayString = arrayString + ","; }'' + LineEnding'#13#10'  +''      arra'
  +'yString = arrayString + "["; '' + LineEnding'#13#10'  +''      for (var y=0'
  +'; y<myarr[z].length; y++) '' + LineEnding'#13#10'  +''      {   '' + LineEn'
  +'ding'#13#10'  +''        if (y>0) { arrayString = arrayString + ","; }'' + '
  +'LineEnding'#13#10'  +''        arrayString = arrayString + "["; '' + LineEn'
  +'ding'#13#10'  +''        for (var x=0; x<myarr[z][y].length; x++) '' + Line'
  +'Ending'#13#10'  +''        {   '' + LineEnding'#13#10'  +''          if (x>'
  +'0) { arrayString = arrayString + ","; }'' + LineEnding'#13#10'  +''        '
  +'  arrayString = arrayString + myarr[z][y][x];'' + LineEnding'#13#10'  +''  '
  +'      }   '' + LineEnding'#13#10'  +''        arrayString = arrayString + "'
  +']"; '' + LineEnding'#13#10'  +''      }   '' + LineEnding'#13#10'  +''     '
  +' arrayString = arrayString + "]"; '' + LineEnding'#13#10'  +''    }   '' + '
  +'LineEnding'#13#10'  +''    arrayString = arrayString + "]"; '' + LineEnding'
  +#13#10'  +''    return(arrayString); '' + LineEnding'#13#10'  +''}''+ LineEn'
  +'ding;'#13#10#13#10#13#10'  str:=str'#13#10'  +''function PostMessageOutputA'
  +'rray(objid, cval) {''  + LineEnding'#13#10'  // save the output array in a '
  +'div element'#13#10'  +''  var oa = document.getElementById("oarr");'' + Lin'
  +'eEnding'#13#10'  +''  if (oa==null) {oa=document.createElement("DIV"); oa.i'
  +'d="oarr"; '' + LineEnding'#13#10'  +''    oa.style.display="none";'' + Line'
  +'Ending'#13#10'  +''    document.body.appendChild(oa);}'' + LineEnding'#13#10
  +'  // save the animation counter value in a div element'#13#10'  +''  var ac'
  +' = document.getElementById("acdiv");'' + LineEnding'#13#10'  +''  if (ac==n'
  +'ull) {ac=document.createElement("DIV"); ac.id="acdiv"; '' + LineEnding'#13
  +#10'  +''    ac.style.display="none";'' + LineEnding'#13#10'  +''    documen'
  +'t.body.appendChild(ac);}'' + LineEnding'#13#10'  +''  if (running) {'' + Li'
  +'neEnding'#13#10'  +''    oa.innerHTML=outputArrayString;'' + LineEnding'#13
  +#10'  +''    ac.innerHTML=cval;'' + LineEnding;'#13#10'  {$ifndef JScript}'
  +#13#10'  {$ifdef Chromium}'#13#10'  str:=str'#13#10'  // cef.  write to cons'
  +'ole log to trigger a cef event...'#13#10'  +''    if (cval<=''+IntToStr(sel'
  +'f.StartIteration)+'') {  '' + LineEnding'#13#10'  +''      // console.log t'
  +'riggers a cef event - see HandleConsoleMessage... '' + LineEnding'#13#10'  '
  +'+''      console.log("''+myNode.NodeName+''O ");'' + LineEnding'#13#10'  +'
  +'''    }'' + LineEnding'#13#10'  +''    else { '' + LineEnding'#13#10'  +'' '
  +'      console.log("''+myNode.NodeName+''C "); '' + LineEnding'#13#10'  +'' '
  +'   }''  + LineEnding;'#13#10'  {$endif}'#13#10'  {$else}'#13#10'  str:=str'
  +#13#10'  +''    if (cval<=''+IntToStr(self.StartIteration)+'') {  '' + LineE'
  +'nding'#13#10'  +''       window.parent.postMessage({"objid":objid,"mtype":"'
  +'FrameOutput","outputArray":oa.innerHTML,"animcount":ac.innerHTML},"*"); '' '
  +'+ LineEnding'#13#10'  +''    }'' + LineEnding'#13#10'  +''    else { '' + L'
  +'ineEnding'#13#10'  +''       window.parent.postMessage({"objid":objid,"mtyp'
  +'e":"FrameOutput","outputArray":"","animcount":ac.innerHTML},"*"); '' + Line'
  +'Ending'#13#10'  +''    }''  + LineEnding;'#13#10'  {$endif}'#13#10'  str:=s'
  +'tr+''} }''+LineEnding+LineEnding;'#13#10#13#10'  str:=str'#13#10'  +''funct'
  +'ion PostMessageStageArray(objid, cval) {''  + LineEnding'#13#10'  +''  var '
  +'sa = document.getElementById("sarr");'' + LineEnding'#13#10'  +''  if (sa=='
  +'null) {sa=document.createElement("DIV"); sa.id="sarr"; '' + LineEnding'#13
  +#10'  +''    sa.style.display="none";'' + LineEnding'#13#10'  +''    documen'
  +'t.body.appendChild(sa);}'' + LineEnding'#13#10'  +''  if (running) {  '' + '
  +'LineEnding'#13#10'  +''    sa.innerHTML=MyStringify(outputStageArray);'' + '
  +'LineEnding;'#13#10'  {$ifndef JScript}'#13#10'  {$ifdef Chromium}'#13#10'  '
  +'str:=str'#13#10'  +''    if (cval<=''+IntToStr(self.StartIteration)+'') {  '
  +''' + LineEnding'#13#10'  +''      // console.log triggers a cef event - see'
  +' HandleConsoleMessage... '' + LineEnding'#13#10'  +''      console.log("''+'
  +'myNode.NodeName+''S ");'' + LineEnding'#13#10'  +''    }'' + LineEnding;'#13
  +#10'  {$endif}'#13#10'  {$else}'#13#10'  if numKernels>0 then'#13#10'  begin'
  +#13#10'    str:=str+''    if (cval<=''+IntToStr(self.StartIteration)+'') {  '
  +''' + LineEnding;'#13#10'    str:=str+''      window.parent.postMessage({"ob'
  +'jid":objid,"mtype":"StageOutput","stageArray":stageArray},"*"); '' + LineEn'
  +'ding;'#13#10'    str:=str+''    }'' + LineEnding;'#13#10'  end;'#13#10'  {$'
  +'endif}'#13#10'  str:=str+''} }''+LineEnding+LineEnding;'#13#10'  result:=st'
  ,'r;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.JSGetPixelArray:String;'#13
  +#10'var'#13#10'  str:string;'#13#10'begin'#13#10'  //  called from the Frame'
  +'Done function.'#13#10'  //  if self.FetchFrameOutput=true then'#13#10'     '
  +' str:='#13#10'      ''function GetPixelArray(kernel) { '' + LineEnding'#13
  +#10'      //+''return(kernel.getPixels()); '' + LineEnding          // needs'
  +' gpujs v2'#13#10#13#10'      +''  const theImage = kernel.canvas;  '' + Lin'
  +'eEnding'#13#10'      +''  if (theImage==null) {console.log("''+self.MyNode.'
  +'NodeName+''BrowserCanvas is null"); } '' + LineEnding'#13#10'      +''  els'
  +'e { ''  + LineEnding'#13#10'      //   +''  console.log(''''image height = '
  +'''''+theImage.height); '' + LineEnding'#13#10'      +''    tmpcanvas = docu'
  +'ment.createElement(''''canvas'''');  '' + LineEnding'#13#10'      +''    tm'
  +'pcanvas.width=theImage.width;  '' + LineEnding'#13#10'      +''    tmpcanva'
  +'s.height=theImage.height;  '' + LineEnding'#13#10'      +''    var ctx = tm'
  +'pcanvas.getContext("2d");  '' + LineEnding'#13#10'      +''    ctx.drawImag'
  +'e(theImage, 0, 0); '' + LineEnding'#13#10'      +''    if (ctx==null) {cons'
  +'ole.log("Context is null"); } '' + LineEnding'#13#10'      +''    else { '''
  +'  + LineEnding'#13#10'      +''      var  theImageData = ctx.getImageData(0'
  +',0,theImage.width,theImage.height);'' + LineEnding'#13#10'      //   +''   '
  +' console.log("theImageData="+theImageData.data);'' + LineEnding'#13#10'    '
  +'  //   +''    console.log("height="+theImage.height+" width="+theImage.widt'
  +'h+" length="+theImageData.data.length);'' + LineEnding'#13#10'      +''    '
  +'  var arrayString = "["; '' + LineEnding'#13#10'      +''      for (var h=0'
  +'; h<theImage.height; h++) '' + LineEnding'#13#10'      +''      {   '' + Li'
  +'neEnding'#13#10'      +''        if (h>0) { arrayString = arrayString + ","'
  +'; }'' + LineEnding'#13#10'      +''        arrayString = arrayString + "[";'
  +' '' + LineEnding'#13#10'      +''        for (var w=0; w<theImage.width; w+'
  +'+) '' + LineEnding'#13#10'      +''        {   '' + LineEnding'#13#10'     '
  +' +''        // note the pixel colours cycle around in groups of four '' + L'
  +'ineEnding'#13#10'      +''          var i=(h*theImage.width*4)+(w*4); '' + '
  +'LineEnding'#13#10'      +''          var red = theImageData.data[i];  '' + '
  +'LineEnding'#13#10'      +''          var green = theImageData.data[i+1]; '''
  +' + LineEnding'#13#10'      +''          var blue = theImageData.data[i+2]; '
  +' '' + LineEnding'#13#10'      +''          var alpha = theImageData.data[i+'
  +'3]; '' + LineEnding'#13#10'      +''          if (w>0) { arrayString = arra'
  +'yString + ","; }'' + LineEnding'#13#10'      +''          arrayString = arr'
  +'ayString + "[" + red + "," + green + "," + blue + "," + alpha + "]";'' + Li'
  +'neEnding'#13#10'      +''        }   '' + LineEnding'#13#10'      +''      '
  +'  arrayString = arrayString + "]"; '' + LineEnding'#13#10'      +''      } '
  +'  '' + LineEnding'#13#10'      +''      tmpcanvas.remove(); '' + LineEnding'
  +#13#10'      +''      arrayString = arrayString + "]"; '' + LineEnding'#13#10
  +'      +''      return(arrayString); '' + LineEnding'#13#10'      +''    }'''
  +' + LineEnding'#13#10'      +''  }'' + LineEnding'#13#10'      +''}''+ LineE'
  +'nding;'#13#10'  result:=str;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.'
  +'JSFinalCode:String;'#13#10'var'#13#10'  str:string;'#13#10'begin'#13#10'  s'
  +'tr:='#13#10'  ''  function GetMessage(msg) {''  + LineEnding'#13#10'  +''  '
  +'  alert("msg="+msg);  ''  + LineEnding'#13#10'  +''}''  + LineEnding ;'#13
  +#10#13#10'  str:=str'#13#10'  +''  function ClearDown() {''  + LineEnding'#13
  +#10'  +''    stageArray=[[[0]]];  ''  + LineEnding'#13#10'  +''    outputArr'
  +'ayString="[]";  ''  + LineEnding'#13#10'  +''}''  + LineEnding ;'#13#10#13
  +#10'  str:=str'#13#10'  +''  function RunCode(theCode) {''  + LineEnding'#13
  +#10'  +''    eval(theCode);  ''  + LineEnding'#13#10'  +''}''  + LineEnding '
  +';'#13#10#13#10'  {$ifdef JScript}'#13#10'//    // handle an inbound message'
  +' of format:{"objid":<id>, "mtype":"SetParam", "pName":<pName>, "pValue":<pV'
  +'alue>}'#13#10'    str:=str'#13#10'    +''window.addEventListener("message",'
  +' function(ev) { ''+Lineending'#13#10'    + ''  if (ev.data.objid!=undefined'
  +') { ''  +LineEnding'#13#10'//                + ''  console.log("handle GPU '
  +'inbound message "+ev.data.objid+"  "+ev.data.mtype); ''+LineEnding'#13#10' '
  +'   + ''  if (ev.data.mtype=="StartTheGPU") {    ''+lineEnding'#13#10'    + '
  +'''    try {   ''+lineEnding'#13#10'    + ''     stageArray=ev.data.pValue; '
  +' ''+lineEnding'#13#10'    + ''     ev.data.pValue=[];  ''+lineEnding'#13#10
  +'    + ''     StartTheGPU();  ''+lineEnding'#13#10'    + ''     }catch(err){'
  +'alert(err.message);}  ''+lineEnding'#13#10'    + ''  } ''+LineEnding'#13#10
  +'    + ''  if (ev.data.mtype=="SetNumParam") {    ''+lineEnding'#13#10'//   '
  +'              + ''  console.log(ev.data.pName+"=["+ev.data.pValue.toString('
  ,')+"];"); ''+LineEnding'#13#10'    + ''    try {   ''+lineEnding'#13#10'    '
  +'+ ''      eval(ev.data.pName+"=["+ev.data.pValue.toString()+"];");  ''+line'
  +'Ending'#13#10'    + ''     }catch(err){alert(err.message);}  ''+lineEnding'
  +#13#10'    + ''  } ''+LineEnding'#13#10'    + ''  if (ev.data.mtype=="execCo'
  +'de") {    ''+lineEnding'#13#10'//                + ''  console.log("handle '
  +'execCode message "+ev.data.code); ''+LineEnding'#13#10'    + ''    try {   '
  +'''+lineEnding'#13#10'    + ''      eval(ev.data.code);  ''+lineEnding'#13#10
  +'    + ''     }catch(err){alert(err.message);}  ''+lineEnding'#13#10'    + '
  +'''  } ''+LineEnding'#13#10'    + ''} ''+lineEnding'#13#10'    + ''} );''  +'
  +'LineEnding;'#13#10'  {$else}'#13#10'  str:=str+LineEnding;'#13#10'  {$endif'
  +'}'#13#10#13#10'  result:=str;'#13#10'end;'#13#10#13#10'function funcnamesFr'
  +'omPascal(codelist:TStringList):TStringList;'#13#10'// extract individual fu'
  +'nction names from the ''common functions'' code block'#13#10'var'#13#10'   '
  +' i,j,n:integer;'#13#10'    fnm:String;'#13#10'    names:TStringList;'#13#10
  +'begin'#13#10'  n:=0;'#13#10'  names:=TStringList.Create();'#13#10'  for i:='
  +'0 to codelist.count-1 do'#13#10'  begin'#13#10'    if FoundString(trim(code'
  +'list[i]),''function '')=1 then'#13#10'    begin'#13#10'      fnm:= trim(cop'
  +'y(codelist[i],10));'#13#10'      j:=FoundString(fnm,''('');'#13#10'      if'
  +' j=0 then j:=FoundString(fnm,'':'');'#13#10'      fnm:=copy(fnm,0,j-1);'#13
  +#10'      names.add(fnm)'#13#10'    end;'#13#10'  end;'#13#10'  result:=name'
  +'s;'#13#10'end;'#13#10'function funcnamesFromJS(codestr:String;var codelist:'
  +'TStringList):TStringList;'#13#10'// extract individual function names from '
  +'the transpiled ''common functions'' code block'#13#10'var'#13#10'    i,j,k,'
  +'n:integer;'#13#10'    ss,fnm:String;'#13#10'    names:TStringList;'#13#10'b'
  +'egin'#13#10'  n:=0;'#13#10'  names:=TStringList.Create();'#13#10'  codelist'
  +':=TStringList.Create();'#13#10'  codelist.text:=codestr;'#13#10'  for i:=0 '
  +'to codelist.count-1 do'#13#10'  begin'#13#10'    ss:=codelist[i];'#13#10'  '
  +'  if FoundString(ss,''= function '')>0 then'#13#10'    begin'#13#10'      /'
  +'/ find the name, and change the function declaration to   function fname ()'
  +' {......'#13#10'      j:=FoundString(ss,''='');'#13#10'      fnm:= trim(cop'
  +'y(ss,0,j-1));'#13#10'      names.add(fnm);'#13#10'      k:=j+10;'#13#10'   '
  +'   ss:=''function ''+fnm+copy(ss,k);'#13#10'      codelist[i]:=ss;'#13#10' '
  +'   end;'#13#10'  end;'#13#10'  result:=names;'#13#10'end;'#13#10#13#10'func'
  +'tion TXGPUCanvas.GPUJSCode(AnimCode:TStringList):String;'#13#10'//function '
  +'TXGPUCanvas.GPUJSCode(AnimCode:TStringList;dims:TDimsArray):String;'#13#10
  +'var'#13#10'  str,vstr,plist, KName,tempstr:String;'#13#10'  i,j,k,d:integer'
  +';'#13#10'  h,w,n:integer;'#13#10'  xdims,ydims,zdims,fnames,fcode:TStringLi'
  +'st;'#13#10'  ok:boolean;'#13#10'  allcode:TAnimCodeArray;'#13#10'begin'#13
  +#10'  result:='''';'#13#10'  ok := CheckForKernels(AnimCode);'#13#10'  if no'
  +'t ok then EXIT;'#13#10#13#10'  str:=JSInitialCode;'#13#10'  str:=str + JSDe'
  +'clareParameters;'#13#10'  str:=str + JSPostMessageCode;'#13#10'  str:=str +'
  +' JSGetPixelArray;'#13#10#13#10#13#10'  plist:=self.FullParamList;'#13#10'  '
  +'KName:=self.MyNode.NodeName+''CanvasRenderFn'';'#13#10#13#10'  // Create co'
  +'mmon functions'#13#10'  allcode := FetchAllAnimCode;'#13#10'  if trim(AnimC'
  +'ode[1])<>'''' then'#13#10'  begin'#13#10'    ////// find the func names !!!'
  +'!!!!!  (using the original Pascal code)'#13#10'    //fnames:=funcnamesFromP'
  +'ascal(allcode[1].CodeBlock);'#13#10'    fnames:=funcnamesFromJS(AnimCode[1]'
  +',fcode);'#13#10'    str:=str'#13#10'    +fcode.text  + LineEnding;'#13#10' '
  +'   for n:=0 to fnames.Count-1 do'#13#10'    begin'#13#10'      str:=str'#13
  +#10'      +self.MyNode.NodeName+''Matrix.addFunction('''#13#10'      +fnames'
  +'[n]'#13#10'      +'');''  + LineEnding;'#13#10'    end;'#13#10'  end;'#13#10
  +#13#10'  // Build the Dimensions array'#13#10'  ok:=self.BuildDimensionsArra'
  +'y(xdims,ydims,zdims);'#13#10'  if not ok then EXIT;'#13#10#13#10#13#10'  //'
  +' Create the required set of non-graphical kernels.'#13#10'  // All these ke'
  +'rnels operate with the same set of parameters.'#13#10'  for n:=0 to numKern'
  +'els-1 do'#13#10'  begin'#13#10'    str:=str'#13#10'    +''/*/------------ C'
  +'reate Kernel ''+inttostr(n)+'' -------/*/ '' + LineEnding'#13#10'    +''con'
  +'st ''+KName+inttostr(n)+'' = ''+self.MyNode.NodeName+''Matrix.createKernel('
  +'function(myArray,AnimationCounterValue''+plist'#13#10'       +'') { '' + Li'
  +'neEnding;'#13#10'    str:=str + ''  var myValue=0.0;'' + LineEnding;'#13#10
  +'    //str:=str + AnimCode[n+1];'#13#10'    str:=str + AnimCode[n+2];       '
  +'   // extra 1 for common functions'#13#10'    str:=str + ''  return myValue'
  +';'' + LineEnding;   // this goes into the relevant x,y,z position in output'
  +'Array'#13#10'    str:= str'#13#10'    +''},''+LineEnding'#13#10'    +''{  o'
  ,'utput: ['';'#13#10'    for d:=0 to length(self.Dimensions[n+2])-1 do'#13#10
  +'    begin'#13#10'      if d>0 then str:=str+'','';'#13#10'      str:= str +'
  +' inttostr(self.Dimensions[n+2,d]);'#13#10'    end;'#13#10#13#10'    str:= s'
  +'tr'#13#10'    +''],'' + LineEnding'#13#10'    +''  graphical: false,'' + Li'
  +'neEnding;'#13#10#13#10'//    str:= str'#13#10'//    +''])'' + LineEnding'#13
  +#10'//    +''  .setGraphical(false)             '' + LineEnding'#13#10'//   '
  +' +''  .setUseLegacyEncoder(true)       '' + LineEnding;'#13#10#13#10'    //'
  +' integer parameters are loaded as constants'#13#10'    if length(self.Const'
  +'IntArray)>0 then'#13#10'    begin'#13#10'      str:=str'#13#10'      +''  c'
  +'onstants:{'';'#13#10'      for i:=0 to length(self.ConstIntArray)-1 do'#13
  +#10'      begin'#13#10'        if i>0 then str:=str+'', '';'#13#10'        s'
  +'tr:=str'#13#10'        +self.ConstIntArray[i].ConstName+'': ''+inttostr(sel'
  +'f.ConstIntArray[i].ConstValue);'#13#10'      end;'#13#10'      str:=str'#13
  +#10'      +''},''+ LineEnding;'#13#10'    end;'#13#10'    str:=str + ''  use'
  +'LegacyEncoder: true'' + LineEnding;'#13#10'    str:= str + ''});'' + LineEn'
  +'ding;'#13#10'    str:=str+LineEnding;'#13#10'  end;'#13#10#13#10'  //......'
  +'.... Create a final Kernel (Graphical) ..............'#13#10'  h:=self.Actu'
  +'alHeight;'#13#10'  w:=self.ActualWidth;'#13#10#13#10'  str:=str'#13#10'  +'
  +'''/*/------------ Create Graphical Kernel -------/*/ '' + LineEnding'#13#10
  +'  +''const ''+KName+''G = ''+self.MyNode.NodeName+''.createKernel(function('
  +'myArray,AnimationCounterValue''+plist'#13#10'  +'') { '' + LineEnding'#13#10
  +'  +''  var r = 0  ;      '' + LineEnding'#13#10'  +''  var g = 0  ; /*/--in'
  +'italise the default colour for the GPUCanvas pixel in r,g,b,a format --/*/ '
  +' '' + LineEnding'#13#10'  +''  var b = 0  ;   '' + LineEnding'#13#10'  +'' '
  +' var a = 1  ;  '' + LineEnding;'#13#10'  str:=str + AnimCode[0];'#13#10'  s'
  +'tr:= str'#13#10'  +''  this.color((r),(g),(b),(a));'' + LineEnding'#13#10' '
  +' +''})''+LineEnding'#13#10'  +''  .setOutput([''+intToStr(w)+'',''+ intToSt'
  +'r(h)+''])              '' + LineEnding'#13#10'  +''  .setLoopMaxIterations('
  +'[''+IntToStr(self.MaxIterations)+''])   '' + LineEnding'#13#10'  +''  .setG'
  +'raphical(true)                                         '' + LineEnding;'#13
  +#10'  // integer parameters are loaded as constants'#13#10'  if length(self.'
  +'ConstIntArray)>0 then'#13#10'  begin'#13#10'    str:=str'#13#10'    +''  .s'
  +'etConstants({'';'#13#10'    for i:=0 to length(self.ConstIntArray)-1 do'#13
  +#10'    begin'#13#10'      if i>0 then str:=str+'', '';'#13#10'      str:=st'
  +'r'#13#10'      +self.ConstIntArray[i].ConstName+'': ''+inttostr(self.ConstI'
  +'ntArray[i].ConstValue);'#13#10'    end;'#13#10'    str:=str'#13#10'    +'' '
  +'      })'' + LineEnding;'#13#10'  end;'#13#10'  str:= str + '';'' + LineEnd'
  +'ing;'#13#10'  str:=str+LineEnding;'#13#10#13#10#13#10'  str:=str'#13#10'  +'
  +'''/*/-------------------Build the nested Kernel codes ---------------------'
  +'-/*/'' + LineEnding'#13#10'  +''let AnimationCounterValue=''+IntToStr(self.'
  +'StartIteration)+''; ''  +LineEnding'#13#10'  +''let AnimationCounterMax=''+'
  +'IntToStr(self.NumFrames)+''; ''  +LineEnding;'#13#10#13#10'//combineKernels'
  +'(k,k,...,lastKernel,combinedKernel)'#13#10'  if numKernels>0 then'#13#10'  '
  +'begin'#13#10'    str:=str'#13#10'    +''const superKernel = ''+self.MyNode.'
  +'NodeName+''Matrix.combineKernels(''+LineEnding;'#13#10#13#10'    for n:=0 t'
  +'o numKernels-1 do'#13#10'    begin'#13#10'      str:=str'#13#10'      +''  '
  +'  ''+KName+inttostr(n)'#13#10'      +'', '';'#13#10'      str:=str+LineEndi'
  +'ng;'#13#10'    end;'#13#10'    str:=str'#13#10'      +''    function(myArra'
  +'y,AnimationCounterValue''+plist+'') {''+LineEnding'#13#10'      +''      va'
  +'r rslt=''+LineEnding;'#13#10'    for n:=numKernels-1 downto 0 do'#13#10'   '
  +' begin'#13#10'      str:=str'#13#10'      +''        ''+KName+inttostr(n)+'
  +'''( ''+LineEnding;'#13#10'      if n=0 then'#13#10'        str:=str+''     '
  +'   ''+''myArray,''+LineEnding;'#13#10'    end;'#13#10'    for n:=0 to numKe'
  +'rnels-1 do'#13#10'    begin'#13#10'      str:=str'#13#10'      +''        '
  +'''+''AnimationCounterValue''+plist+'')'';'#13#10'      if n<numKernels-1 th'
  +'en'#13#10'        str:=str+'','''#13#10'      else'#13#10'        str:=str+'
  +''';'';'#13#10'      str:=str+LineEnding;'#13#10'    end;'#13#10'    str:=st'
  +'r'#13#10'    +''      return rslt;''+LineEnding'#13#10'    +''    });''+Lin'
  +'eEnding;'#13#10'  end;'#13#10#13#10#13#10#13#10'  // Initialise the stageAr'
  +'ray...   [3D array of real]'#13#10'  // Initial values come from the ''XGPU'
  +'3DTable'' component (data held in property InitStageData)'#13#10'  {$ifndef'
  +' JScript}'#13#10'  str:=str'#13#10'  +''let stageArray=''+StringUtils.DelCh'
  +'ars(self.InitStageData,''"'')+'';   ''+LineEnding;'#13#10'  {$else}'#13#10
  +'  // in the HTML environment, when the GPU canvas is within an iframe eleme'
  ,'nt, it appears that there is'#13#10'  // a problem loading the page when th'
  +'e string is very long (fails). For this reason we have not initialised'#13
  +#10'  // the 3D stageArray here.  Instead, there is a message posted into th'
  +'e iframe document (StartTheGPU),'#13#10'  // which is handled in the iframe'
  +', sets up the array, and then runs this function.'#13#10'  str:=str'#13#10
  +'  +''let stageArray=[[[0]]];''  +LineEnding;'#13#10'  {$endif}'#13#10'  if '
  +'numKernels>0 then'#13#10'    str:=str+''let outputStageArray=Array(''+intto'
  +'Str(self.Dimensions[2,2])+'#13#10'                                   '').fi'
  +'ll(Array(''+inttoStr(self.Dimensions[2,1])+'#13#10'                        '
  +'           '').fill(Array(''+inttoStr(self.Dimensions[2,0])+'').fill(0.0)))'
  +';'' +LineEnding'#13#10'  else'#13#10'    str:=str+''let outputStageArray=[['
  +'[0]]];'' +LineEnding;'#13#10'  str:=str+LineEnding;'#13#10'  str:=str+''fun'
  +'ction StartTheGPU() {''+LineEnding;'#13#10#13#10#13#10#13#10'  // Run the c'
  +'ombined non-graphical kernels...'#13#10'  if numKernels>0 then'#13#10'  beg'
  +'in'#13#10'    // Call the build method for each kernel in turn (flushes out'
  +' transpile errors)'#13#10'    for n:=0 to numKernels-1 do'#13#10'    begin'
  +#13#10'      str:=str'#13#10'      +''    ''+KName+inttostr(n)+''.build(stag'
  +'eArray,AnimationCounterValue''+plist+'');  ''+LineEnding'#13#10'      +''  '
  +'  console.log("Kernel ''+inttostr(n)+'' built ok");  ''+LineEnding;'#13#10
  +'    end;'#13#10'    str:=str+LineEnding;'#13#10#13#10'    str:=str'#13#10' '
  +'   +''    /*/-------------------Run the Nested Kernels --------------------'
  +'--/*/    '' + LineEnding'#13#10'    +''    outputStageArray = superKernel(s'
  +'tageArray,AnimationCounterValue''+plist+'');  ''+LineEnding'#13#10'    +'' '
  +'   PostMessageStageArray("''+myNode.NodeName+''",AnimationCounterValue);'' '
  +'+ LineEnding;'#13#10'  end'#13#10'  else'#13#10'    str:=str'#13#10'    +'''
  +'    outputStageArray = stageArray;  ''+LineEnding;'#13#10#13#10'  str:=str'
  +#13#10'  +''    /*/-------------------Run the Graphical Kernel and place the'
  +' result on the web page----------------------/*/    '' + LineEnding'#13#10
  +'  +''    ''+KName+''G(outputStageArray,AnimationCounterValue''+plist+'');  '
  +'             '' + LineEnding;'#13#10'//  if self.FetchFrameOutput=true then'
  +#13#10'    str:=str'#13#10'    +''    outputArrayString = GetPixelArray(''+s'
  +'elf.MyNode.NodeName+''CanvasRenderFnG); '' + LineEnding'#13#10'    +''    P'
  +'ostMessageOutputArray("''+myNode.NodeName+''",AnimationCounterValue);'' + L'
  +'ineEnding;'#13#10#13#10'  // Put the GPU bitmap on the page...'#13#10'  str'
  +':=str'#13#10'  +''    var ''+self.MyNode.NodeName+''BrowserCanvas = ''+self'
  +'.MyNode.NodeName+''CanvasRenderFnG.canvas;  '' + LineEnding        // GPUjs'
  +' V2'#13#10'//  +''    var ''+self.MyNode.NodeName+''BrowserCanvas = ''+self'
  +'.MyNode.NodeName+''CanvasRenderFnG.getCanvas();  '' + LineEnding // GPUjs v'
  +'1'#13#10'  +''    document.getElementsByTagName("body")[0].appendChild(''+s'
  +'elf.MyNode.NodeName+''BrowserCanvas);     '' + LineEnding ;'#13#10'  str:=s'
  +'tr +'#13#10'    ''    ''+self.MyNode.NodeName+''BrowserCanvas.addEventListe'
  +'ner("webglcontextlost", (e) => { window.location.reload(); }); '' + LineEnd'
  +'ing;'#13#10#13#10'  if self.Animated then'#13#10'    str:=str'#13#10'    +'
  +'''    /*/------------------- Animate the GPUCanvas ----------------------/*'
  +'/    '' + LineEnding'#13#10'    +''    AnimationFrameID=requestAnimationFra'
  +'me(animate) ; ''  + LineEnding;'#13#10#13#10'  str:=str+''}''+LineEnding;  '
  +'// end of function StartTheGPU()'#13#10#13#10'  str:=str + JSFinalCode;'#13
  +#10#13#10'  result:=str;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.GPUJS'
  +'CodeForEmulationMode(AnimCode:TStringList):String;'#13#10'var'#13#10'  str,'
  +'KName,tempstr:String;'#13#10'  h,w,n:integer;'#13#10'  ok:boolean;'#13#10'b'
  +'egin'#13#10'  // This builds a simple graphical kernel that will simply dis'
  +'play the content of its'#13#10'  // InitialStageArray.'#13#10'  // The form'
  +'at of the expected 3D array is  [y...[x...[r,g,b,a]]]'#13#10'  result:='''''
  +';'#13#10'  ok := CheckForKernels(AnimCode);'#13#10'  if not ok then EXIT;'
  +#13#10#13#10'  str:=str + JSInitialCode;'#13#10'  str:=str + JSPostMessageCo'
  +'de;'#13#10'  str:=str + JSGetPixelArray;'#13#10#13#10'  KName:=self.MyNode.'
  +'NodeName+''CanvasRenderFn'';'#13#10#13#10'  //.......... Create a Graphical'
  +' Kernel ..............'#13#10'  h:=self.ActualHeight;'#13#10'  w:=self.Actu'
  +'alWidth;'#13#10#13#10'  str:=str'#13#10'  +''/*/------------ Create Simple '
  +'Graphical Kernel -------/*/ '' + LineEnding'#13#10'  +''const ''+KName+''G '
  +'= ''+self.MyNode.NodeName+''.createKernel(function(myArray) { '' + LineEndi'
  +'ng'#13#10'  +''  var r = 0  ;      '' + LineEnding'#13#10'  +''  var g = 0 '
  +' ; /*/--initalise the default colour for the GPUCanvas pixel in r,g,b,a for'
  +'mat --/*/  '' + LineEnding'#13#10'  +''  var b = 0  ;   '' + LineEnding'#13
  ,#10'  +''  var a = 1  ;  '' + LineEnding;'#13#10'  str:=str'#13#10'  +''  r '
  +'= myArray[this.thread.y][this.thread.x][0]; '' + LineEnding'#13#10'  +''  g'
  +' = myArray[this.thread.y][this.thread.x][1]; '' + LineEnding'#13#10'  +''  '
  +'b = myArray[this.thread.y][this.thread.x][2]; '' + LineEnding'#13#10'  +'' '
  +' //a = myArray[this.thread.y][this.thread.x][3]; '' + LineEnding;'#13#10'  '
  +'str:= str'#13#10'  +''  this.color((r),(g),(b),(a));'' + LineEnding'#13#10
  +'  +''})''+LineEnding'#13#10'  +''  .setOutput([''+intToStr(w)+'',''+ intToS'
  +'tr(h)+''])              '' + LineEnding'#13#10'  +''  .setLoopMaxIterations'
  +'([''+IntToStr(self.MaxIterations)+''])   '' + LineEnding'#13#10'  +''  .set'
  +'Graphical(true)                                         '' + LineEnding;'#13
  +#10'  // integer parameters are loaded as constants'#13#10'  str:= str + '';'
  +''' + LineEnding;'#13#10'  str:=str+LineEnding;'#13#10#13#10'  // Initialise'
  +' the stageArray...   [3D array of real]'#13#10'  {$ifndef JScript}'#13#10' '
  +' str:=str'#13#10'  +''let stageArray=''+StringUtils.DelChars(self.InitStage'
  +'Data,''"'')+'';   ''+LineEnding;'#13#10'  {$else}'#13#10'  // in the HTML e'
  +'nvironment, when the GPU canvas is within an iframe element, it appears tha'
  +'t there is'#13#10'  // a problem loading the page when the string is very l'
  +'ong (fails). For this reason we have not initialised'#13#10'  // the 3D sta'
  +'geArray here.  Instead, there is a message posted into the iframe document '
  +'(StartTheGPU),'#13#10'  // which is handled in the iframe, sets up the arra'
  +'y, and then runs this function.'#13#10'  str:=str'#13#10'  +''let stageArra'
  +'y=[[[0]]];''  +LineEnding;'#13#10'  {$endif}'#13#10#13#10'  str:=str+LineEn'
  +'ding;'#13#10'  str:=str+''function StartTheGPU() {''+LineEnding;'#13#10#13
  +#10'  str:=str'#13#10'  +''    /*/-------------------Run the Graphical Kerne'
  +'l and place the result on the web page----------------------/*/    '' + Lin'
  +'eEnding'#13#10'  +''    ''+KName+''G(stageArray);               '' + LineEn'
  +'ding;'#13#10#13#10'  // Put the GPU bitmap on the page...'#13#10'  str:=str'
  +#13#10'  +''    var ''+self.MyNode.NodeName+''BrowserCanvas = ''+self.MyNode'
  +'.NodeName+''CanvasRenderFnG.canvas;  '' + LineEnding        // GPUjs V2'#13
  +#10'//  +''    var ''+self.MyNode.NodeName+''BrowserCanvas = ''+self.MyNode.'
  +'NodeName+''CanvasRenderFnG.getCanvas();  '' + LineEnding // GPUjs v1'#13#10
  +'  +''    document.getElementsByTagName("body")[0].appendChild(''+self.MyNod'
  +'e.NodeName+''BrowserCanvas);     '' + LineEnding ;'#13#10#13#10'  str:=str+'
  +'''}''+LineEnding;  // end of function StartTheGPU()'#13#10#13#10'  str:=str'
  +' + JSFinalCode;'#13#10#13#10'  result:=str;'#13#10'end;'#13#10#13#10'proced'
  +'ure SetOutputArrayValue(NodeName:String;const AValue,cval:String);'#13#10'v'
  +'ar'#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'  // set the property val'
  +'ue for the relevant XGPUCanvas object'#13#10'  myNode:=FindDataNodeById(Sys'
  +'temNodeTree,NodeName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begi'
  +'n'#13#10'    {$ifndef JScript}'#13#10'    TXGPUCanvas(myNode.ScreenObject).'
  +'GPUOutputString:=AValue;'#13#10'    TXGPUCanvas(myNode.ScreenObject).animCo'
  +'unterString:=cval;'#13#10'    {$else}'#13#10'    TXGPUCanvas(myNode).GPUOut'
  +'putString:=AValue;'#13#10'    TXGPUCanvas(myNode).animCounterString:=cval;'
  +#13#10'    {$endif}'#13#10'    myNode.SetAttributeValue(''LastCounterValue'''
  +',cval);'#13#10'  end;'#13#10'end;'#13#10'procedure SetCounterValue(NodeName'
  +':String;const cval:String);'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'be'
  +'gin'#13#10'  // set the property value for the relevant XGPUCanvas object'
  +#13#10'  myNode:=FindDataNodeById(SystemNodeTree,NodeName,'''',true);'#13#10
  +'  if myNode<>nil then'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'  '
  +'  TXGPUCanvas(myNode.ScreenObject).animCounterString:=cval;'#13#10'    {$el'
  +'se}'#13#10'    TXGPUCanvas(myNode).animCounterString:=cval;'#13#10'    {$en'
  +'dif}'#13#10'  end;'#13#10'  myNode.SetAttributeValue(''LastCounterValue'',c'
  +'val);'#13#10'end;'#13#10#13#10'procedure SetStageArrayValue(NodeName:String'
  +';const AValue:String);'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'
  +#13#10'  //{$ifdef JScript}'#13#10'  //asm'#13#10'  //console.log(''SetStage'
  +'ArrayValue ''+NodeName+'' ''+AValue);'#13#10'  //console.log(''SetStageArra'
  +'yValue ''+NodeName);'#13#10'  //end;'#13#10'  //{$endif}'#13#10'  // set th'
  +'e property value for the relevant XGPUCanvas object'#13#10'  myNode:=FindDa'
  +'taNodeById(SystemNodeTree,NodeName,'''',true);'#13#10'  if myNode<>nil then'
  +#13#10'  begin'#13#10'//    myNode.SetAttributeValue(''GPUStageArray'',AValu'
  +'e);'#13#10'    {$ifndef JScript}'#13#10'    TXGPUCanvas(myNode.ScreenObject'
  +').GPUStageString:=AValue;'#13#10'    TXGPUCanvas(myNode.ScreenObject).GPUSt'
  +'ageArray:=JsonStringTo3DNumArray(AValue);'#13#10'    {$else}'#13#10'    TXG'
  +'PUCanvas(myNode).GPUStageString:=AValue;'#13#10'    TXGPUCanvas(myNode).GPU'
  ,'StageArray:=JsonStringTo3DNumArray(AValue);'#13#10'    {$endif}'#13#10'  en'
  +'d;'#13#10'end;'#13#10#13#10'procedure SetStageArrayValue2(NodeName:String;A'
  +'Value:T3DNumArray);'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'#13
  +#10'  myNode:=FindDataNodeById(SystemNodeTree,NodeName,'''',true);'#13#10'  '
  +'if myNode<>nil then'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'    '
  +'TXGPUCanvas(myNode.ScreenObject).GPUStageArray:=AValue;'#13#10'    TXGPUCan'
  +'vas(myNode.ScreenObject).GPUStageString:='''';'#13#10'    {$else}'#13#10'  '
  +'  TXGPUCanvas(myNode).GPUStageArray:=AValue;'#13#10'    TXGPUCanvas(myNode)'
  +'.GPUStageString:='''';'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10
  +#13#10#13#10'function GetOutputArrayValue(NodeName:String):T3DNumArray;'#13
  +#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'  result:=nil;'#13#10
  +'  myNode:=FindDataNodeById(SystemNodeTree,NodeName,'''',true);'#13#10'  if '
  +'myNode<>nil then'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'      {'
  +'$ifdef Chromium}'#13#10'      TXGPUCanvas(myNode.ScreenObject).GPUOutputArr'
  +'ay:=JSONStringTo3DNumArray(TXGPUCanvas(myNode.ScreenObject).GPUOutputString'
  +');'#13#10'      result:=TXGPUCanvas(myNode.ScreenObject).GPUOutputArray;'#13
  +#10'      {$else}'#13#10'      TXGPUCanvas(myNode.ScreenObject).GPUOutputArr'
  +'ay:=JSONStringTo3DNumArray(TXGPUCanvas(myNode.ScreenObject).GPUOutputString'
  +');'#13#10'      result:=TXGPUCanvas(myNode.ScreenObject).GPUOutputArray;'#13
  +#10'      {$endif}'#13#10'    {$else}'#13#10'    TXGPUCanvas(myNode.ScreenOb'
  +'ject).GPUOutputArray:=JSONStringTo3DNumArray(TXGPUCanvas(myNode.ScreenObjec'
  +'t).GPUOutputString);'#13#10'    result:=TXGPUCanvas(myNode).GPUOutputArray;'
  +#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10'function GetOutpu'
  +'tArrayString(NodeName:String):String;'#13#10'var'#13#10'  myNode:TDataNode;'
  +#13#10'begin'#13#10'  result:='''';'#13#10'  myNode:=FindDataNodeById(System'
  +'NodeTree,NodeName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begin'
  +#13#10'    {$ifndef JScript}'#13#10'      result:=TXGPUCanvas(myNode.ScreenO'
  +'bject).GPUOutputString;'#13#10'    {$else}'#13#10'    result:=TXGPUCanvas(m'
  +'yNode).GPUOutputString;'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'function GetStageArrayValue(NodeName:String):T3DNumArray;'#13#10'var'
  +#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'  result:=nil;'#13#10'  myNod'
  +'e:=FindDataNodeById(SystemNodeTree,NodeName,'''',true);'#13#10'  if myNode<'
  +'>nil then'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'      if lengt'
  +'h( TXGPUCanvas(myNode.ScreenObject).GPUStageArray)=0 then'#13#10'        TX'
  +'GPUCanvas(myNode.ScreenObject).GPUStageArray:=JSONStringTo3DNumArray(TXGPUC'
  +'anvas(myNode.ScreenObject).GPUStageString);'#13#10'      result:=TXGPUCanva'
  +'s(myNode.ScreenObject).GPUStageArray;'#13#10'    {$else}'#13#10'    if leng'
  +'th( TXGPUCanvas(myNode).GPUStageArray)=0 then'#13#10'      TXGPUCanvas(myNo'
  +'de).GPUStageArray:=JSONStringTo3DNumArray(TXGPUCanvas(myNode).GPUStageStrin'
  +'g);'#13#10'    result:=TXGPUCanvas(myNode).GPUStageArray;'#13#10'    {$endi'
  +'f}'#13#10'  end;'#13#10'end;'#13#10#13#10'function GetInitStageArrayValue(N'
  +'odeName:String):T3DNumArray;'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'b'
  +'egin'#13#10'  result:=nil;'#13#10'  myNode:=FindDataNodeById(SystemNodeTree'
  +',NodeName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10'  '
  +'  result:=JSONStringTo3DNumArray(myNode.GetAttribute(''InitStageData'',fals'
  +'e).AttribValue);'#13#10'  end;'#13#10'end;'#13#10#13#10'function GetStageAr'
  +'rayString(NodeName:String):String;'#13#10'var'#13#10'  myNode:TDataNode;'#13
  +#10'begin'#13#10'  result:='''';'#13#10'  myNode:=FindDataNodeById(SystemNod'
  +'eTree,NodeName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begin'#13
  +#10'    {$ifndef JScript}'#13#10'    if TXGPUCanvas(myNode.ScreenObject).GPU'
  +'StageString<>'''' then'#13#10'      result:=TXGPUCanvas(myNode.ScreenObject'
  +').GPUStageString'#13#10'    else'#13#10'      result:=Num3DArrayToJsonStrin'
  +'g( TXGPUCanvas(myNode.ScreenObject).GPUStageArray);'#13#10'    {$else}'#13
  +#10'    if TXGPUCanvas(myNode).GPUStageString<>'''' then'#13#10'      result'
  +':=TXGPUCanvas(myNode).GPUStageString'#13#10'    else'#13#10'      result:=N'
  +'um3DArrayToJsonString(TXGPUCanvas(myNode).GPUStageArray);'#13#10'    {$endi'
  +'f}'#13#10'  end;'#13#10'end;'#13#10#13#10'//function GetParam(NodeName:Stri'
  +'ng; pindex:integer):Float;'#13#10'//begin'#13#10'//  showMessage(''GetParam'
  +''');'#13#10'//  result:=0;'#13#10'//end;'#13#10#13#10'function TXGPUCanvas.'
  +'GPUJSAnimationFooter:String;'#13#10'// This code is added only if the ''Ani'
  +'mated'' property is true...'#13#10'var'#13#10'  str,plist:String;'#13#10'be'
  +'gin'#13#10#13#10'  plist:=self.FullParamList;'#13#10#13#10'  str:=''/*/----'
  +'-------------- Graphics Animation Functions -------------------------------'
  +'--/*/'' + LineEnding;'#13#10#13#10#13#10'// The FrameDone function is calle'
  ,'d after each animation frame is finished.'#13#10'// It is an async function'
  +', so that inbound messages are picked up,'#13#10'// and we can use postMess'
  +'age, eg. for passing'#13#10'// values back out from the IFrame into the pro'
  +'ject environment.'#13#10'  str:=str'#13#10'  +''function FrameDone(kernel) '
  +'{''  + LineEnding;'#13#10'//  if self.FetchFrameOutput=true then'#13#10'// '
  +' begin'#13#10'  str:=str;'#13#10'  str:=str+''    if (running) {outputArray'
  +'String = GetPixelArray(kernel); '' + LineEnding'#13#10'//          +''     '
  +' console.log("FrameDone "+AnimationCounterValue);''  + LineEnding'#13#10'  '
  +'        +''      PostMessageOutputArray("''+myNode.NodeName+''",AnimationCo'
  +'unterValue);}'' + LineEnding;'#13#10'//  end;'#13#10'  str:=str+''    retur'
  +'n new Promise(resolve => { ''  + LineEnding'#13#10'  +''  }); } ''+ LineEnd'
  +'ing;'#13#10#13#10'    str:=str'#13#10'   +''async function DoFrame() {  '' '
  +' + LineEnding;'#13#10'   if numKernels>0 then'#13#10'     str:=str'#13#10' '
  +'    +''    outputStageArray=superKernel(stageArray,AnimationCounterValue''+'
  +'plist+'');  ''+LineEnding'#13#10'   else'#13#10'     str:=str'#13#10'     +'
  +'''    outputStageArray=stageArray;  ''+LineEnding;'#13#10'   str:=str'#13#10
  +'   +''    ''+self.MyNode.NodeName+''CanvasRenderFnG(outputStageArray,Animat'
  +'ionCounterValue''+plist+''); '' + LineEnding'#13#10'   +''    AnimationCoun'
  +'terValue = AnimationCounterValue +1; ''  + LineEnding'#13#10'   +''    if ('
  +'AnimationCounterValue > AnimationCounterMax) {'' + LineEnding'#13#10'   +'''
  +'      AnimationCounterValue = ''+IntToStr(self.StartIteration)+'';};  ''  +'
  +' LineEnding'#13#10'   +''    var xx = await FrameDone(''+self.MyNode.NodeNa'
  +'me+''CanvasRenderFnG) ; ''  + LineEnding'#13#10'   +''} ''  + LineEnding;'
  +#13#10#13#10'   str:=str'#13#10'   +''var AnimationFrameID;  ''  + LineEndin'
  +'g'#13#10'   +''function animate(timestamp){  ''  + LineEnding'#13#10'   +'''
  +'    GPUIntervalRunner=setInterval(DoFrame, 1000/''+IntToStr(self.MaxFramesP'
  +'erSec)+''); '' + LineEnding'#13#10'   +''} ''  + LineEnding;'#13#10#13#10' '
  +' result:=str;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.FetchAllAnimCod'
  +'e:TAnimCodeArray;'#13#10'var'#13#10'  allcode:TAnimCodeArray;'#13#10'  bits'
  +',cdbits:TStringList;'#13#10'  n:integer;'#13#10'  RevisedAnimCode:String;'
  +#13#10'begin'#13#10'  // The property ''AnimationCode'' contains a string wh'
  +'ich is a concatenation of:'#13#10'  //     Code block for the graphical out'
  +'put kernel'#13#10'  //     Code block(s) for the non-graphical nested kerne'
  +'ls (number of these is in property NumKernels).'#13#10'  //     Delimiter b'
  +'etween code blocks is eventListdelimiter'#13#10'  //     Each code block is'
  +' further subdivided into:'#13#10'  //         Pascal Code block'#13#10'  //'
  +'         Dimensions of output array (eg.  x,y,z)'#13#10'  //         Delimi'
  +'ter between code block and dimensions spec is EventAttributeDelimiter'#13#10
  +#13#10'  //setlength(allcode,numKernels+1);     // +1 for the final graphica'
  +'l kernel.'#13#10'  setlength(allcode,numKernels+2);     // +1 for the final'
  +' graphical kernel.  +1 again for a common functions kernel'#13#10'  bits:= '
  +'stringsplit(self.AnimationCode,eventListdelimiter);'#13#10#13#10'  // for e'
  +'ach kernel...'#13#10'  for n:=0 to bits.count-1 do'#13#10'  begin'#13#10'  '
  +'  if length(allcode)<=n then'#13#10'      setlength(allcode,n+1);'#13#10'  '
  +'  // get the code block for this kernel...'#13#10'    allcode[n].CodeBlock:'
  +'=TStringList.Create;'#13#10#13#10'    cdbits:=StringSplit(bits[n],EventAttr'
  +'ibuteDelimiter);'#13#10'    allcode[n].CodeBlock.Text:=cdbits[0];'#13#10#13
  +#10'  end;'#13#10#13#10'  // Add Empty code blocks for missing stages (numbe'
  +'r of code blocks == numKernels+1)'#13#10'  // code[0] is the graphical kern'
  +'el.'#13#10'  // code[1] is reserved for common function declarations'#13#10
  +'  // code[2..n] are the non-graphical kernels'#13#10'  //for n:=bits.Count '
  +'to numKernels do'#13#10'  for n:=bits.Count to numKernels+1 do           //'
  +' numKernels=number of non-graphical kernels.  Plus 1 graphicel kernel.  Plu'
  +'s 1 common functions'#13#10'  begin'#13#10'    allcode[n].CodeBlock:=TStrin'
  +'gList.Create;'#13#10'    if n<>1 then'#13#10'      allcode[n].CodeBlock.Tex'
  +'t:=''//Kernel ''+inttostr(n-1)+LineEnding'#13#10'        +''begin''+LineEnd'
  +'ing'#13#10'        +''  //eg. for 3D array stages, this will pass through t'
  +'he prior kernel result...''+LineEnding'#13#10'        +''  //Note. Dimensio'
  +'ns of myArray are as specified for the prior kernel output.''+LineEnding'#13
  +#10'        +''  myValue:=myArray[this.thread.z,this.thread.y,this.thread.x]'
  +'; ''+LineEnding'#13#10'        +''end;''+LineEnding'#13#10'    else'#13#10
  +'      allcode[n].CodeBlock.Text:=''//common functions ''+LineEnding;'#13#10
  +#13#10'//    setlength(allcode[n].KDimensions,3);'#13#10'//    allcode[n].KD'
  +'imensionsStr:=inttostr(self.ActualWidth)+'',''+inttostr(self.ActualHeight)+'
  ,''',''+inttostr(self.DfltZDepth);'#13#10'//    allcode[n].KDimensions[0]:=se'
  +'lf.ActualWidth;'#13#10'//    allcode[n].KDimensions[1]:=self.ActualHeight;'
  +#13#10'//    allcode[n].KDimensions[2]:=self.DfltZDepth;'#13#10'  end;'#13#10
  +#13#10'  // In case this has adjusted the data, save the concatenated code b'
  +'lock again to the AnimationCode property'#13#10'  RevisedAnimCode:='''';'#13
  +#10'  //for n:=0 to numKernels do'#13#10'  for n:=0 to numKernels+1 do      '
  +'     // numKernels=number of non-graphical kernels.  Plus 1 graphicel kerne'
  +'l.  Plus 1 common functions'#13#10'  begin'#13#10'    if n>0 then'#13#10'  '
  +'    RevisedAnimCode:=RevisedAnimCode + eventListdelimiter;'#13#10'    Revis'
  +'edAnimCode:=RevisedAnimCode + allcode[n].CodeBlock.Text;'#13#10'  end;'#13
  +#10'  self.myNode.SetAttributeValue(''AnimationCode'',RevisedAnimCode);'#13
  +#10'  result:=allcode;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.BuildPa'
  +'scalAnimationUnit(Compiler:TObject;RunMode:String):Boolean;'#13#10'// Wrap '
  +'the user-supplied code from the AnimationCode property in a unit, for compi'
  +'lation to JavaScript by pas2js.'#13#10'// RunMode is ''GPU'' if we are gene'
  +'rating actual GPU kernels to run in the GPU canvas.'#13#10'// Otherwise, Ru'
  +'nMode is set for compilation of system event code, and the GPU kernels are '
  +'included in this'#13#10'// for generation of a GPU emulation unit (LazDll,L'
  +'asJS,JSJS, etc).'#13#10'var'#13#10'  PascalHeader:TStringList;'#13#10'  txt'
  +':String;'#13#10'  AllAnimationCode:TAnimCodeArray;'#13#10'  TheAnimationCod'
  +'e,xdims,ydims,zdims:TStringList;'#13#10'  i,n:integer;'#13#10'  ok:boolean;'
  +#13#10'begin'#13#10'  ok:=true;'#13#10'  PascalHeader:=TStringList.Create;'
  +#13#10#13#10'  if RunMode=''GPU'' then'#13#10'  begin'#13#10'    PascalHeade'
  +'r.Add('' unit GPUCode''+self.myNode.NodeName+''; '');'#13#10'      PascalHe'
  +'ader.Add(''{$ifdef Dll}{$mode objfpc}{$H+}{$R+}{$endif}'');'#13#10'    Pasc'
  +'alHeader.Add(''interface'');'#13#10'    PascalHeader.Add(''uses Classes, Sy'
  +'sUtils, Math;'');'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    // c'
  +'reating the emulation unit...'#13#10'    PascalHeader.Add(''unit GPUCode''+'
  +'self.myNode.NodeName+'';'');'#13#10'    PascalHeader.Add(''{$ifndef JScript'
  +'}'');'#13#10'    PascalHeader.Add(''{$mode objfpc}{$H+}'');'#13#10'    Pasc'
  +'alHeader.Add(''{$endif}'');'#13#10'    PascalHeader.Add(''interface'');'#13
  +#10'    PascalHeader.Add(''uses Classes, SysUtils, Math, contnrs, dateutils,'
  +''');'#13#10'    PascalHeader.Add(''  rtlconsts, strutils, types, typinfo, E'
  +'ventsInterface'');'#13#10'    if RunMode=''LazDll'' then'#13#10'      Pasca'
  +'lHeader.Add(''  ,InterfaceTypesDll;'')'#13#10'    else'#13#10'      PascalH'
  +'eader.Add(''  ,InterfaceTypes;'');'#13#10'  end;'#13#10#13#10'  PascalHeade'
  +'r.Add('' type '');'#13#10'  PascalHeader.Add(''     TNumArray = array of re'
  +'al;'');'#13#10'  PascalHeader.Add(''     T2DNumArray = array of TNumArray;'
  +''');'#13#10'  PascalHeader.Add(''     TConstantsRecord=record'');'#13#10'  '
  +'PascalHeader.Add(''       dummycons:integer;'');'#13#10'  for i:=0 to lengt'
  +'h(self.ConstIntArray)-1 do'#13#10'  begin'#13#10'    PascalHeader.Add(''   '
  +'    ''+self.ConstIntArray[i].ConstName+'':integer;'');'#13#10'  end;'#13#10
  +'  PascalHeader.Add(''     end;'');'#13#10'  PascalHeader.Add(''     TXThrea'
  +'d = record'#9''');'#13#10'  PascalHeader.Add(''       x,y,z:integer;'#9''')'
  +';'#13#10'  PascalHeader.Add(''     end;'#9''');'#13#10'  PascalHeader.Add('
  +'''     TGPUThread = class'#9''');'#13#10'  PascalHeader.Add(''        threa'
  +'d:TXThread;'#9''');'#13#10'  if RunMode=''GPU'' then'#13#10'  begin'#13#10
  +'    PascalHeader.Add(''        const constants:TConstantsRecord = (   '#9
  +''');'#13#10'    PascalHeader.Add(''           dummycons:0;   '#9''');'#13#10
  +'    for i:=0 to length(self.ConstIntArray)-1 do'#13#10'    begin'#13#10'   '
  +'   PascalHeader.Add(''       ''+self.ConstIntArray[i].ConstName+'': ''+intt'
  +'ostr(self.ConstIntArray[i].ConstValue)+'';'');'#13#10'    end;'#13#10'    P'
  +'ascalHeader.Add(''     );'');'#13#10'  end'#13#10'  else'#13#10'  begin'#13
  +#10'    PascalHeader.Add(''        constants:TConstantsRecord;'');'#13#10'  '
  +'end;'#13#10'  PascalHeader.Add(''     procedure color(r,g,b,a:real); virtua'
  +'l; abstract;'#9''');'#13#10'  PascalHeader.Add(''   end;'#9''');'#13#10'  P'
  +'ascalHeader.Add(''   TFuncNotSupported = record'#9''');'#13#10'  PascalHead'
  +'er.Add(''     dummy:string; '#9''');'#13#10'  PascalHeader.Add(''   end;'#9
  +''');'#13#10#13#10'  if RunMode<>''GPU'' then'#13#10'  begin'#13#10'    Pasc'
  +'alHeader.Add(''function Emulate_''+self.myNode.NodeName+''(animcounter,NumZ'
  +'Pixels,NumYPixels,NumXPixels:integer):TGPUPixelArray; {$ifdef Dll}stdcall;{'
  +'$endif}'');'#13#10'  end;'#13#10#13#10'  PascalHeader.Add(''implementation'
  +#9''');'#13#10'  PascalHeader.Add(''   function chr(b:TFuncNotSupported):TFu'
  +'ncNotSupported;'#9''');'#13#10'  PascalHeader.Add(''   begin'#9''');'#13#10
  ,'  PascalHeader.Add(''   end;'#9''');'#13#10'  PascalHeader.Add(''   functio'
  +'n Ord(  X: TFuncNotSupported):TFuncNotSupported;'#9''');'#13#10'  PascalHea'
  +'der.Add(''   begin'#9''');'#13#10'  PascalHeader.Add(''   end;'#9''');'#13
  +#10'  PascalHeader.Add(''   function pred( X: TFuncNotSupported):TFuncNotSup'
  +'ported;'#9''');'#13#10'  PascalHeader.Add(''   begin'#9''');'#13#10'  Pasca'
  +'lHeader.Add(''   end;'#9''');'#13#10'  PascalHeader.Add(''   function Succ('
  +' X: TFuncNotSupported):TFuncNotSupported;'#9''');'#13#10'  PascalHeader.Add'
  +'(''   begin'#9''');'#13#10'  PascalHeader.Add(''   end;'#9''');'#13#10'  Pa'
  +'scalHeader.Add(''   function tan(v: real):real;'#9''');'#13#10'  PascalHead'
  +'er.Add(''   begin'#9''');'#13#10'  if RunMode=''LazDll'' then'#13#10'    Pa'
  +'scalHeader.Add(''     result:=Math.tan(v);'#9''')'#13#10'  else if RunMode='
  +'''LazJS'' then'#13#10'    PascalHeader.Add(''     result:=System.sin(v)/Sys'
  +'tem.cos(v);'#9''');'#13#10'  PascalHeader.Add(''   end;'#9''');'#13#10'  Pa'
  +'scalHeader.Add(''   function sqr(d: TFuncNotSupported):TFuncNotSupported;'#9
  +''');'#13#10'  PascalHeader.Add(''   begin'#9''');'#13#10'  PascalHeader.Add'
  +'(''   end;'#9''');'#13#10'  PascalHeader.Add(''   '#9''');'#13#10#13#10'  P'
  +'ascalHeader.Add(''// -------------- Declare Parameters List (for compilatio'
  +'n) ---------- '');'#13#10'  for i:=0 to length(self.ParamNumArray)-1 do'#13
  +#10'  begin'#13#10'    PascalHeader.Add(''   var ''+ParamNumArray[i].ParamNa'
  +'me+'':TNumArray;'');'#13#10'  end;'#13#10'  for i:=0 to length(self.Param2D'
  +'NumArray)-1 do'#13#10'  begin'#13#10'    PascalHeader.Add(''   var ''+Param'
  +'2DNumArray[i].ParamName+'':T2DNumArray;'');'#13#10'  end;'#13#10'  PascalHe'
  +'ader.Add(''   var  this:TGPUThread;'');'#13#10'  PascalHeader.Add(''   type'
  +'  T2DArray=Array of Array of real;'');'#13#10'  PascalHeader.Add(''   type '
  +' TmyArray=Array of T2DArray;'');'#13#10'  PascalHeader.Add(''   var  myArra'
  +'y:TMyArray;'');'#13#10'  PascalHeader.Add(''   var  r,g,b,a:real;'');'#13#10
  +#13#10'  AllAnimationCode:=self.FetchAllAnimCode;'#13#10'  if length(AllAnim'
  +'ationCode)>1 then'#13#10'    PascalHeader.Add(''   var  myValue:real;'');'
  +#13#10#13#10#13#10'  txt :=  ''   procedure PascalVersionOfGPUCode(Animation'
  +'CounterValue:integer);'';'#13#10'  PascalHeader.Add(txt);'#13#10#13#10'  Pa'
  +'scalHeader.Add('' var'') ;'#13#10'  PascalHeader.Add(''   zzzzz1:integer;'''
  +') ;          // used as position marker in resulting JS script'#13#10'  //.'
  +'............. user code block goes here .................'#13#10'  TheAnima'
  +'tionCode:=TStringList.Create;'#13#10#13#10#13#10'  for n:=0 to length(AllAn'
  +'imationCode)-1 do'#13#10'  begin'#13#10'    if n=0 then'#13#10'    begin'#13
  +#10'      PascalHeader.Add(''var kkkkk''+inttostr(n)+'':integer;'')'#13#10' '
  +'   end'#13#10'    else if n=1 then'#13#10'    begin'#13#10'        PascalHe'
  +'ader.Add(''var kkkkk''+inttostr(n)+'':integer;'');'#13#10'        PascalHea'
  +'der.Add(''var kkdummy''+inttostr(n)+'':integer;'');'#13#10'    end'#13#10' '
  +'   else'#13#10'      PascalHeader.Add(''procedure kkkkk''+inttostr(n)+''(An'
  +'imationCounterValue:integer);'');'#13#10'    TheAnimationCode.Text:=AllAnim'
  +'ationCode[n].CodeBlock.Text;'#13#10'    WriteIncFile(Compiler,myNode.NodeNa'
  +'me+''__''+inttostr(n),'''',''tempinc/'',PascalHeader,TheAnimationCode);   /'
  +'/ one per kernel'#13#10'  end;'#13#10'  //.................................'
  +'.........................'#13#10'  PascalHeader.Add(''var zzzzz2:integer;'''
  +');              // used as position marker in resulting JS script'#13#10#13
  +#10'  if RunMode<>''GPU'' then'#13#10'  begin'#13#10'    ok:=self.BuildDimen'
  +'sionsArray(xdims,ydims,zdims);'#13#10'    if ok then'#13#10'    begin'#13#10
  +'      PascalHeader.Add(''function Emulate_''+self.myNode.NodeName+''(animco'
  +'unter,NumZPixels,NumYPixels,NumXPixels:integer):TGPUPixelArray; {$ifdef Dll'
  +'}stdcall;{$endif}'');'#13#10'      PascalHeader.Add(''var '');'#13#10'     '
  +' PascalHeader.Add(''  i,j,k:integer;'');'#13#10'      PascalHeader.Add(''  '
  +'EmulatedScreen:TGPUPixelArray;'');'#13#10'      PascalHeader.Add(''  outArr'
  +'ay:TMyArray;'');'#13#10#13#10'      PascalHeader.Add(''begin'');'#13#10'   '
  +'   PascalHeader.Add(''  this:=TGPUThread.Create();'');'#13#10#13#10'      P'
  +'ascalHeader.Add(''  // Set all parameters to latest values from the GPU com'
  +'ponent'');'#13#10'      for i:=0 to length(self.ParamNumArray)-1 do'#13#10
  +'      begin'#13#10'        PascalHeader.Add(''   ''+ParamNumArray[i].ParamN'
  +'ame+'':=GetGPUParamNumValue(''''''+self.myNode.NodeName+'''''',''''''+Param'
  +'NumArray[i].ParamName+'''''');'');'#13#10'      end;'#13#10'      for i:=0 '
  +'to length(self.Param2DNumArray)-1 do'#13#10'      begin'#13#10'        Pasc'
  +'alHeader.Add(''   ''+Param2DNumArray[i].ParamName+'':=GetGPUParam2DNumValue'
  +'(''''''+self.myNode.NodeName+'''''',''''''+Param2DNumArray[i].ParamName+'''
  +''''');'');'#13#10'      end;'#13#10'      for i:=0 to length(self.ConstIntA'
  ,'rray)-1 do'#13#10'      begin'#13#10'        PascalHeader.Add(''   this.con'
  +'stants.''+self.ConstIntArray[i].ConstName+'':=GetGPUConstIntValue(''''''+se'
  +'lf.myNode.NodeName+'''''',''''''+self.ConstIntArray[i].ConstName+'''''');'''
  +');'#13#10'      end;'#13#10#13#10'      PascalHeader.Add(''  myArray:=GetGP'
  +'UInitStageArray(''''''+self.myNode.NodeName+'''''');'');'#13#10#13#10'     '
  +' PascalHeader.Add(''  // emulate each thread in turn '');'#13#10'      Pasc'
  +'alHeader.Add(''  // ...separately for each kernel ..... '');'#13#10'      /'
  +'/for n:=1 to length(AllAnimationCode)-1 do'#13#10'      for n:=2 to length('
  +'AllAnimationCode)-1 do      // extra block for common functions'#13#10'    '
  +'  begin'#13#10'        PascalHeader.Add(''  setlength(outArray,''+inttostr('
  +'self.Dimensions[n,2])+'');'');        //Z'#13#10'        PascalHeader.Add('
  +'''  for k:=0 to length(outArray)-1 do'');'#13#10'        PascalHeader.Add('
  +'''  begin '');'#13#10'        PascalHeader.Add(''    setlength(outArray[k],'
  +'''+inttostr(self.Dimensions[n,1])+'');'');   //Y'#13#10'        PascalHeade'
  +'r.Add(''    for j:=0 to length(outArray[k])-1 do'');'#13#10'        PascalH'
  +'eader.Add(''    begin '');'#13#10'        PascalHeader.Add(''      setlengt'
  +'h(outArray[k,j],''+inttostr(self.Dimensions[n,0])+'');''); //X'#13#10'     '
  +'   PascalHeader.Add(''      for i:=0 to length(outArray[k,j])-1 do '');'#13
  +#10'        PascalHeader.Add(''      begin '');'#13#10'        PascalHeader.'
  +'Add(''         this.thread.x := i;'');'#13#10'        PascalHeader.Add(''  '
  +'       this.thread.y := j;'');'#13#10'        PascalHeader.Add(''         t'
  +'his.thread.z := k;'');'#13#10'        PascalHeader.Add(''         kkkkk''+i'
  +'nttostr(n)+''(animcounter); // sets myValue'');'#13#10'        PascalHeader'
  +'.Add(''         outArray[k,j,i] := myValue;'');'#13#10'        PascalHeader'
  +'.Add(''      end;'');'#13#10'        PascalHeader.Add(''    end;'');'#13#10
  +'        PascalHeader.Add(''  end;'');'#13#10'        PascalHeader.Add(''  m'
  +'yArray:=outArray;'');'#13#10'      end;'#13#10#13#10'      PascalHeader.Add'
  +'(''  setlength(EmulatedScreen,NumZPixels);'');'#13#10'      PascalHeader.Ad'
  +'d(''  for k:=0 to NumZPixels-1 do'');'#13#10'      PascalHeader.Add(''  beg'
  +'in '');'#13#10'      PascalHeader.Add(''    setlength(EmulatedScreen[k],Num'
  +'YPixels); '');'#13#10'      PascalHeader.Add(''    for j:=0 to NumYPixels-1'
  +' do'');'#13#10'      PascalHeader.Add(''    begin '');'#13#10'      PascalH'
  +'eader.Add(''      setlength(EmulatedScreen[k,j],NumXPixels); '');'#13#10'  '
  +'    PascalHeader.Add(''      for i:=0 to NumXPixels-1 do '');'#13#10'      '
  +'PascalHeader.Add(''      begin '');'#13#10'      PascalHeader.Add(''       '
  +'  r := 0;'');'#13#10'      PascalHeader.Add(''         g := 0;'');'#13#10' '
  +'     PascalHeader.Add(''         b := 0;'');'#13#10'      PascalHeader.Add('
  +'''         a := 1;'');'#13#10'      PascalHeader.Add(''         this.thread'
  +'.x := i;'');'#13#10'      PascalHeader.Add(''         this.thread.y := j;'''
  +');'#13#10'      PascalHeader.Add(''         this.thread.z := k;'');'#13#10
  +#13#10'      PascalHeader.Add(''         PascalVersionOfGPUCode(animcounter)'
  +'; // sets r,g,b,a'');'#13#10#13#10'      PascalHeader.Add(''         // now'
  +' save the pixel colour value '');'#13#10'      PascalHeader.Add(''         '
  +'setlength(EmulatedScreen[k,j,i],4); '');'#13#10'      PascalHeader.Add(''  '
  +'       EmulatedScreen[k,j,i,0] := r;'');'#13#10'      PascalHeader.Add(''  '
  +'       EmulatedScreen[k,j,i,1] := g;'');'#13#10'      PascalHeader.Add(''  '
  +'       EmulatedScreen[k,j,i,2] := b;'');'#13#10'      PascalHeader.Add(''  '
  +'       EmulatedScreen[k,j,i,3] := a;'');'#13#10'      PascalHeader.Add(''  '
  +'    end;'');'#13#10'      PascalHeader.Add(''    end;'');'#13#10'      Pasc'
  +'alHeader.Add(''  end;'');'#13#10'      PascalHeader.Add(''  result := Emula'
  +'tedScreen; '');'#13#10'      PascalHeader.Add(''end; '');'#13#10'      Pasc'
  +'alHeader.Add(''{$ifdef Dll}exports Emulate_''+self.myNode.NodeName+'';{$end'
  +'if}'');'#13#10'    end;'#13#10'  end;'#13#10#13#10'  if ok then'#13#10'  be'
  +'gin'#13#10'    PascalHeader.Add(''begin'');'#13#10'    PascalHeader.Add(''e'
  +'nd.'');'#13#10#13#10'    if RunMode<>''GPU'' then'#13#10'    begin'#13#10' '
  +'     {$ifndef JScript}'#13#10'      // save the generated pas file'#13#10' '
  +'     SysUtils.DeleteFile(''tempinc/GPUCode''+self.myNode.NodeName+''.pas'')'
  +';'#13#10'      PascalHeader.SaveToFile(''tempinc/GPUCode''+self.myNode.Node'
  +'Name+''.pas'');'#13#10'      {$else}'#13#10'      TPas2JSWebCompiler(Compil'
  +'er).WebFS.SetFileContent(''GPUCode''+self.NodeName+''.pas'',PascalHeader.Te'
  +'xt);'#13#10'      {$endif}'#13#10'    end;'#13#10#13#10'    GeneratedPascal'
  +'Unit:=PascalHeader.Text;'#13#10'  end;'#13#10#13#10'  result:=ok;          '
  +'       //PascalHeader.Text;'#13#10'  FreeAndNil(PascalHeader);'#13#10'  Fre'
  +'eAndNil(TheAnimationCode);'#13#10'end;'#13#10#13#10#13#10'function TXGPUCan'
  ,'vas.CompileGPUToJS(var GPUJSOutput:String):Boolean;'#13#10'var'#13#10'  Pro'
  +'gPath, PasFileName,ObjectFileName,ExeFileName:String;'#13#10'  UnitString:S'
  +'tring;'#13#10'  ok:Boolean;'#13#10'  prog:TStringList;'#13#10'  {$ifdef JSc'
  +'ript}'#13#10'  Res:Boolean;'#13#10'  args:TStringList;'#13#10'  lWebFS : TP'
  +'as2JSWebFS;'#13#10'  {$endif}'#13#10'begin'#13#10'  self.GeneratedHTML:='''
  +''';'#13#10'  result:=false;'#13#10#13#10'  {$ifndef JScript}'#13#10'  ok :='
  +' BuildPascalAnimationUnit(nil,''GPU'');'#13#10'  if (ok = false) then'#13#10
  +'    EXIT;'#13#10#13#10'  UnitString:=GeneratedPascalUnit;'#13#10#13#10'  Pr'
  +'ogPath:=ExtractFilePath(Application.ExeName)+''tempinc/'';'#13#10'  prog:=T'
  +'StringList.Create;'#13#10'  prog.Text:=UnitString;'#13#10#13#10'  // clean '
  +'up from previous runs'#13#10'  PASFileName:= self.myNode.NodeName+''.pas'';'
  +#13#10'  DeleteFile(ProgPath+PASFileName);'#13#10'  ObjectFileName:= self.my'
  +'Node.NodeName+''.o'';'#13#10'  DeleteFile(ProgPath+ObjectFileName);'#13#10
  +'  ExeFileName:= self.myNode.NodeName+''.js'';'#13#10'  DeleteFile(ProgPath+'
  +'ExeFileName);'#13#10#13#10' // GPUCodeEditor.ItemValue:=PascalCode.Text;'#13
  +#10'  // save the text to be compiled to the .pas file'#13#10'  prog.SaveToF'
  +'ile(ProgPath+PASFileName);'#13#10'  prog.Free;'#13#10'  ok:=false;'#13#10#13
  +#10'  GPUCodeEditor.MessageLines:='''';'#13#10#13#10'  TranspileMyProgram(se'
  +'lf.myNode.NodeName,ExtractFilePath(Application.ExeName),''tempinc/'',GPUCod'
  +'eEditor,true,nil);'#13#10'  // and do checking for errors...'#13#10'  // if'
  +' the JS file exists, run on browser...'#13#10'  if FileExists(ExtractFilePa'
  +'th(Application.ExeName)+ExeFileName) then'#13#10'  begin'#13#10'    ok:=tru'
  +'e;'#13#10'    // and get the GPUJSOutput...'#13#10'    GPUJSOutput:=ReadFil'
  +'e(ExtractFilePath(Application.ExeName)+ExeFileName);'#13#10'//    EditAttri'
  +'buteValue(''XMemo1'',''ItemValue'',GPUJSOutput);        //!!!! temporary fo'
  +'r debugging'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    // GPU cod'
  +'e failed to compile - show the editor with messages'#13#10'    GPUCodeEdito'
  +'r.ItemValue:=UnitString;'#13#10'    GPUCodeEditor.MessagesHeight:=''30%'';'
  +#13#10'    EditingGPUNode:=self.myNode;'#13#10'    GPUEditorMode:=''Unit'';'
  +#13#10'    GPUCodeEditor.ReadOnly:=true;'#13#10'    GPUComboBox.OptionList:='
  +'self.BuildKernelList;'#13#10'    GPUComboBox.ItemIndex:=-1;'#13#10'    GPUC'
  +'omboBox.PriorIndex:=-1;'#13#10'    GPUEditorForm.Showing:=''Modal'';'#13#10
  +'  end;'#13#10#13#10'  {$else}'#13#10'  begin'#13#10'    ok := BuildPascalAn'
  +'imationUnit(MyWebCompiler.Compiler,''GPU'');'#13#10'    if (ok = false) the'
  +'n'#13#10'      EXIT;'#13#10#13#10'    UnitString:=GeneratedPascalUnit;'#13
  +#10#13#10'    MyWebCompiler.MyCodeEditor:=GPUCodeEditor;'#13#10'    MyWebCom'
  +'piler.Compiler.Log.OnLog:=@MyWebCompiler.DoLog;'#13#10'    MyWebCompiler.Co'
  +'mpiler.WebFS.LoadBaseURL:='''';'#13#10#13#10'    //showmessage(''FirstUnitN'
  +'ame=''+FirstUnitName);'#13#10'    if MyWebCompiler.MyCodeEditor<>nil then'
  +#13#10'      MyWebCompiler.myCodeEditor.ItemValue:=UnitString;'#13#10#13#10
  +'    Res:=False;'#13#10#13#10'    // Load up the RTL sources that are requir'
  +'ed for the compilation...'#13#10'    lWebFS:=MyWebCompiler.Compiler.WebFS;'
  +#13#10'    LoadRTLFilesForPas2JS(lWebFS);'#13#10#13#10'    lWebFS.SetFileCon'
  +'tent(self.NodeName+''.pas'',UnitString);'#13#10'//    showmessage(''done ma'
  +'in file save'');'#13#10'    args:=TStringList.Create;'#13#10'    try'#13#10
  +'      Args.Add(''-vwnhe'');'#13#10'      Args.Add(''-O-'');           //  D'
  +'isable optimizations'#13#10'      Args.Add(''-Jc'');           //  Write al'
  +'l JavaScript concatenated into the output file'#13#10'      Args.Add(''-Jir'
  +'tl.js-'');         //  Remove a JS file.'#13#10'      Args.Add(''-dJScript'
  +''');'#13#10'      Args.Add(self.NodeName+''.pas'');'#13#10#13#10'      //..'
  +'......................................................'#13#10'      MyWebCo'
  +'mpiler.Compiler.Run('''','''',Args,True);'#13#10'      Res:=MyWebCompiler.C'
  +'ompiler.ExitCode=0;'#13#10'      //........................................'
  +'................'#13#10#13#10'    finally'#13#10'     Args.Free;'#13#10'   '
  +' end;'#13#10#13#10'    //EditAttributeValue(''XMemo2'','''',''ItemValue'',U'
  +'nitString);        //!!!! temporary for debugging'#13#10#13#10'    if res=t'
  +'rue then'#13#10'    begin'#13#10'      //showmessage(''compiler all done'')'
  +';'#13#10'      GPUJSOutput:=MyWebCompiler.Compiler.WebFS.GetFileContent(sel'
  +'f.NodeName+''.js'');'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10
  +'      // GPU code failed to compile - show the editor with messages'#13#10
  +'      GPUCodeEditor.ItemValue:=UnitString;'#13#10'      GPUCodeEditor.Messa'
  +'gesHeight:=''30%'';'#13#10'      EditingGPUNode:=self.myNode;'#13#10'      '
  +'GPUCodeEditor.ReadOnly:=true;'#13#10'      GPUEditorMode:=''Unit'';'#13#10
  +'      GPUComboBox.OptionList:=self.BuildKernelList;'#13#10'      GPUComboBo'
  ,'x.ItemIndex:=-1;'#13#10'      GPUComboBox.PriorIndex:=-1;'#13#10'      GPUE'
  +'ditorForm.Showing:=''Modal'';'#13#10'    end;'#13#10'  end;'#13#10#13#10'  '
  +'//EditAttributeValue(''XMemo1'','''',''ItemValue'',GPUJSOutput);        //!'
  +'!!! temporary for debugging'#13#10#13#10'  ok:=res;'#13#10'  if res=true th'
  +'en'#13#10'  begin'#13#10'  end;'#13#10#13#10'//  showmessage(''RunParser do'
  +'ne.  Output=''+GPUJSOutput);'#13#10#13#10'  {$endif}'#13#10#13#10'  //....d'
  +'ecide if there are errors or not .......'#13#10'  if ok=false then showmess'
  +'age(''GPU Compilation failed'');'#13#10'  //else showmessage(''Compilation '
  +'successful'');'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'function TXGPU'
  +'Canvas.CompileAndTrimAnimCode:TStringList;'#13#10'var'#13#10'  Pas2jsOutput'
  +':String;'#13#10'  PasString,Pas2JSRaw:String;'#13#10'  Pas2JSTrimmed:Tstrin'
  +'gList;'#13#10'  tmp,ss:String;'#13#10'  ok:Boolean;'#13#10'  tmpList:TStrin'
  +'gList;'#13#10'  i,j:integer;'#13#10'begin'#13#10'  PasString:=myNode.getAtt'
  +'ribute(''AnimationCode'',true).AttribValue;'#13#10'  Pas2JSTrimmed:=TString'
  +'List.Create;'#13#10'  if PasString<>'''' then'#13#10'  begin'#13#10#13#10' '
  +'   // Compile the Pascal code'#13#10'    ok:=CompileGPUToJS(Pas2jsOutput);'
  +#13#10#13#10'   // EditAttributeValue(''XMemo1'','''',''ItemValue'',Pas2jsOu'
  +'tput,false);        //!!!! temporary for debugging'#13#10'    if ok then'#13
  +#10'    // Extract the bit of this that we need to keep'#13#10'    begin'#13
  +#10'      tmpList:=TStringList.Create;'#13#10'      tmpList.Text:=Pas2JSOutp'
  +'ut;'#13#10'      //tmpList.SaveToFile(''kkkkkk0.txt'');'#13#10'      // del'
  +'ete up to the zzzzz1 line'#13#10'      while (tmpList.Count>0) and (FoundSt'
  +'ring(tmpList[0],''zzzzz1'')<1) do'#13#10'         tmpList.Delete(0);'#13#10
  +'//      showmessage(''after search for zzzzz1 ''+inttostr(tmpList.Count)+'''
  +' lines left'');'#13#10'      if tmpList.Count>0 then'#13#10'      begin'#13
  +#10'        // delete the zzzzz1 line'#13#10'        tmpList.Delete(0);'#13
  +#10'        // skip to the zzzzz2 line'#13#10'        i:=0;'#13#10'        w'
  +'hile i<tmpList.Count do'#13#10'        begin'#13#10'          ss:=tmpList[i'
  +'];'#13#10'          if FoundString(tmpList[i],''zzzzz2'')>0 then'#13#10'   '
  +'       begin'#13#10'//            showmessage(''found zzzzz2 at line ''+int'
  +'tostr(i));'#13#10'            j:=i;'#13#10'            tmpList[i-1]:=''''; '
  +'    // replace preceding ''};'' with ''}'''#13#10'            i:=tmpList.Co'
  +'unt;'#13#10'          end'#13#10'          else'#13#10'          if (FoundS'
  +'tring(tmpList[i],''kkkkk1'')>0) then'#13#10'          begin'#13#10'        '
  +'    tmpList[i-1]:='''';    // remove the previous closing ''};'' - will be '
  +'added back later.'#13#10'          end'#13#10'          else'#13#10'       '
  +'   if (FoundString(tmpList[i],''kkkkk'')>0)'#13#10'          and (FoundStri'
  +'ng(tmpList[i],''kkkkk2'')=0)'#13#10'          and (FoundString(tmpList[i],'
  +'''function'')>0) then'#13#10'          begin'#13#10'            tmpList[i-1'
  +']:='''';    // remove the previous closing ''};'' - will be added back late'
  +'r.'#13#10'          end;'#13#10'          i:=i+1;'#13#10'        end;'#13#10
  +'        // delete all after the zzzzz2 line'#13#10'        while j<tmpList.'
  +'Count do'#13#10'        begin'#13#10'           tmpList.Delete(j);'#13#10' '
  +'       end;'#13#10'      end;'#13#10'      //tmpList.SaveToFile(''kkkkkk0.t'
  +'xt'');'#13#10'      // now, tmplist has the set of kernel procs, plus the g'
  +'raphical final kernel.'#13#10'      // These need separating.'#13#10#13#10
  +'      Pas2JSRaw:=tmpList.Text;'#13#10#13#10'      //showmessage(''raw=''+Pa'
  +'s2JSRaw);'#13#10#13#10'      // Now filter out any qualifiers that may have'
  +' been added by pas2js'#13#10'      // eg. parameter variable P1 will have t'
  +'ranslated to $impl.P1'#13#10'      // and also modify calls to some maths f'
  +'functions...'#13#10'      Pas2JSRaw := myStringReplace(Pas2JSRaw,''$impl.'''
  +','''',-1,-1);'#13#10'      Pas2JSRaw := myStringReplace(Pas2JSRaw,''This.'''
  +',''this.'',-1,-1);'#13#10'      Pas2JSRaw := myStringReplace(Pas2JSRaw,''pa'
  +'s.System.Trunc'',''Math.floor'',-1,-1);'#13#10'      Pas2JSRaw := myStringR'
  +'eplace(Pas2JSRaw,''pas.Math.Ceil'',''Math.ceil'',-1,-1);'#13#10'      Pas2J'
  +'SRaw := myStringReplace(Pas2JSRaw,''Math.log10'',''Math.log'',-1,-1);'#13#10
  +#13#10#13#10'      // Look for ''for'' loops.  Insert ''var'' ahead of the l'
  +'oop variable.   eg. for (var i=0; i<something; i++)'#13#10'      // NB. for'
  +' loops MUST also be coded using a constant as the comparison element.'#13#10
  +'      Pas2JSRaw := myStringReplace(Pas2JSRaw,'' for ('','' for (var '',-1,-'
  +'1);'#13#10'      Pas2JSRaw := myStringReplace(Pas2JSRaw,'' for (var var'','
  +''' for (var '',-1,-1);'#13#10#13#10'      //!!!! check for GPU invalid char'
  +'s (eg $) here and throw error????'#13#10'      // also refs to rtl.'#13#10
  +#13#10'      // now separate the kernel procs...'#13#10'      //showmessage('
  ,'Pas2JSRaw);'#13#10'      Pas2JSTrimmed:=TStringList.Create;'#13#10'      tm'
  +'pList.Text:= Pas2JSRaw;'#13#10'      j:=-1;'#13#10'      tmp:='''';'#13#10
  +'      for i:=0 to tmpList.Count-1 do'#13#10'      begin'#13#10'        ss:='
  +'tmpList[i];'#13#10'        if (FoundString(tmpList[i],''kkkkk'')>0) then'#13
  +#10'        begin'#13#10'          if j>-1 then'#13#10'          begin'#13#10
  +'            Pas2JSTrimmed.Add(tmp);'#13#10'          end;'#13#10'          '
  +'j:=j+1;'#13#10'          tmp:='''';'#13#10'        end'#13#10'        else'
  +#13#10'          tmp:=tmp+tmpList[i]+LineEnding;'#13#10'        if i=tmpList'
  +'.Count-1 then'#13#10'          Pas2JSTrimmed.Add(tmp);'#13#10'      end;'#13
  +#10'      //Pas2JSTrimmed.SaveToFile(''kkkkkk1.txt'');'#13#10#13#10'      tm'
  +'pList.Free;'#13#10'    end;'#13#10'  end;'#13#10#13#10'  result:=Pas2JSTrim'
  +'med;'#13#10'  //FreeAndNil(Pas2JSTrimmed);'#13#10'end;'#13#10#13#10'functio'
  +'n TXGPUCanvas.FullXMLString:String;'#13#10'var'#13#10'  Pas2JSTrimmed:Tstri'
  +'ngList;   // one string per kernel'#13#10'  tmp:String;'#13#10'  FullString'
  +',HTMLTop,HTMLBottom:String;'#13#10'  {$ifdef JScript}'#13#10'  GPURunnableH'
  +'TML:String;'#13#10'  {$endif}'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10
  +'  if not (csDesigning in ComponentState) then'#13#10'  {$endif}'#13#10'  be'
  +'gin'#13#10'    Pas2JSTrimmed:=self.CompileAndTrimAnimCode;'#13#10'    if Pa'
  +'s2JSTrimmed.Count<1 then'#13#10'    begin'#13#10'      result:='''';'#13#10
  +'      EXIT;'#13#10'    end;'#13#10#13#10'    if self.EmulationMode = false '
  +'then'#13#10'    begin'#13#10'    // Get the set of kernel output dimensions'
  +#13#10'    // and wrap it with the GPU JS...'#13#10'    tmp:= GPUJSCode(Pas2'
  +'JSTrimmed);'#13#10'    FullString:= tmp;'#13#10'    if self.Animated then'
  +#13#10'    begin'#13#10'      FullString:=FullString + GPUJSAnimationFooter;'
  +#13#10'      {$ifdef JScript}'#13#10'      GPURunnableHTML:=GPURunnableHTML '
  +'+ GPUJSAnimationFooter;'#13#10'      {$endif}'#13#10'    end;'#13#10'    en'
  +'d'#13#10'    else'#13#10'    begin'#13#10'      FullString:= GPUJSCodeForEm'
  +'ulationMode(Pas2JSTrimmed);'#13#10'    end;'#13#10#13#10#13#10'    tmp:=UnS'
  +'ubstituteSpecials(gpujs);'#13#10'    HTMLTop:='#13#10'    ''<!DOCTYPE html>'
  +''' +  LineEnding'#13#10'    +''<html lang="en">'' +  LineEnding'#13#10'    '
  +'+''<head>'' +  LineEnding'#13#10'    +''  <meta charset="utf-8"> '' +  Line'
  +'Ending'#13#10'    +''  <title></title>'' +  LineEnding'#13#10'    +''</head'
  +'>'' +  LineEnding'#13#10'    +''<body  style="margin:0px; font:normal 12px '
  +'Verdana, Arial, sans-serif;">'' +  LineEnding'#13#10'    +''<script>''+tmp+'
  +'''</script>  '' +  LineEnding'#13#10#13#10' //   +''<script src="gpu-browse'
  +'r.min.js"></script>'' +  LineEnding'#13#10#13#10#13#10'    +''<div  id="GPU'
  +'Canvas" > ''+  LineEnding'#13#10'    +''<script>''+  LineEnding;'#13#10#13
  +#10'    HTMLBottom:='#13#10'    ''</script>'' +  LineEnding'#13#10'    +''</'
  +'div> ''+  LineEnding'#13#10'    +''</body> '' +  LineEnding'#13#10'    +''<'
  +'/html> ''+  LineEnding;'#13#10#13#10#13#10'    {$ifdef JScript}'#13#10'    '
  +'GPURunnableHTML:='#13#10'    HTMLTop'#13#10'    +FullString +  LineEnding'
  +#13#10'      +''stageArray=''+StringUtils.DelChars(self.InitStageData,''"'')'
  +'+'';   ''+LineEnding'#13#10'      +''window.postMessage({"objid":"''+self.M'
  +'yNode.NodeName+''", "mtype":"StartTheGPU", "pName":"", "pValue":stageArray}'
  +',"*"); ''+LineEnding'#13#10'    +HTMLBottom;'#13#10'    {$endif}'#13#10#13
  +#10'    FullString:='#13#10'      HTMLTop'#13#10'      +FullString +  LineEn'
  +'ding'#13#10'      {$ifndef JScript}'#13#10'      + ''StartTheGPU();  ''+lin'
  +'eEnding'#13#10'      {$else}'#13#10'      +  ''window.parent.postMessage({"'
  +'objid":"''+self.MyNode.NodeName+''","mtype":"GPUReady"},"*"); '' + LineEndi'
  +'ng'#13#10'      {$endif}'#13#10'      +HTMLBottom;'#13#10#13#10#13#10'//   '
  +' EditAttributeValue(''XMemo1'','''',''ItemValue'',FullString,false);       '
  +' //!!!! temporary for debugging'#13#10'    {$ifndef JScript}'#13#10'    sel'
  +'f.GeneratedHTML:=FullString;'#13#10'    {$else}'#13#10'    // this is the s'
  +'ame HTML string, but with a statement included to start the GPU process (as'
  +' this is done'#13#10'    // via a message from outside the iframe, when emb'
  +'edded in the local page.'#13#10'    self.GeneratedHTML:=GPURunnableHTML;'#13
  +#10'    {$endif}'#13#10#13#10'  end;'#13#10'  result:=FullString;'#13#10'end'
  +';'#13#10#13#10#13#10'procedure TXGPUCanvas.setupGPUPage;'#13#10'var'#13#10
  +'  GPUString:String;'#13#10'begin'#13#10'  // called from StartMyGPU'#13#10
  +'  GPUString:=self.FullXMLString;'#13#10'  self.HTMLSource:= '''';'#13#10'  '
  +'self.HTMLSource:= GPUString;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.'
  +'GetParamNumValue(pName:String):TNumArray;'#13#10'var'#13#10'  i:integer;'#13
  +#10'  pval:TNumArray;'#13#10'begin'#13#10'  for i:=0 to length(ParamNumArray'
  +')-1 do'#13#10'    if ParamNumArray[i].ParamName=pName then'#13#10'    begin'
  ,#13#10'      pval:=ParamNumArray[i].ParamValue;'#13#10'    end;'#13#10'  res'
  +'ult:=pval;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.GetParam2DNumValue'
  +'(pName:String):T2DNumArray;'#13#10'var'#13#10'  i:integer;'#13#10'  pval:T2'
  +'DNumArray;'#13#10'begin'#13#10'  for i:=0 to length(Param2DNumArray)-1 do'
  +#13#10'    if Param2DNumArray[i].ParamName=pName then'#13#10'    begin'#13#10
  +'      pval:=Param2DNumArray[i].ParamValue;'#13#10'    end;'#13#10'  result:'
  +'=pval;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.GetConstIntValue(pName'
  +':String):integer;'#13#10'var'#13#10'  i:integer;'#13#10'  pval:integer;'#13
  +#10'begin'#13#10'  for i:=0 to length(ConstIntArray)-1 do'#13#10'    if Cons'
  +'tIntArray[i].ConstName=pName then'#13#10'    begin'#13#10'      pval:=Const'
  +'IntArray[i].ConstValue;'#13#10'    end;'#13#10'  result:=pval;'#13#10'end;'
  +#13#10#13#10'procedure TXGPUCanvas.SetParamNumValue(pName:String;pValue:TNum'
  +'Array;ForwardToWidget:Boolean);'#13#10'var'#13#10'  i,j:integer;'#13#10'  t'
  +'mp:String;'#13#10'  myurl:string;'#13#10'begin'#13#10'  for i:=0 to length('
  +'ParamNumArray)-1 do'#13#10'    if uppercase(ParamNumArray[i].ParamName)=upp'
  +'ercase(pName) then'#13#10'    begin'#13#10'      SetLength(ParamNumArray[i]'
  +'.ParamValue,length(pValue));'#13#10'      for j:=0 to length(pValue)-1 do'
  +#13#10'        ParamNumArray[i].ParamValue[j]:=pValue[j];'#13#10#13#10'     '
  +' if (ForwardToWidget)'#13#10'      and (self.Active)'#13#10'      and (self'
  +'.HTMLSource<>'''')'#13#10'      and (self.HTMLSource<>''about:blank'') then'
  +#13#10'      begin'#13#10'        {$ifndef JScript}'#13#10'        {$ifdef C'
  +'hromium}'#13#10'        myurl:= myChromium.Browser.MainFrame.GetURL();'#13
  +#10'        if myurl<>''about:blank'' then'#13#10'        begin'#13#10'     '
  +'     tmp:=NumArrayToJSONString(pValue);'#13#10'          tmp:=''RunCode("'''
  +'+pName+''=''+tmp+'';")'';'#13#10'          myChromium.Browser.MainFrame.Exe'
  +'cuteJavaScript(tmp, myurl, 0);'#13#10'        end;'#13#10'        {$else}'
  +#13#10'        //!!!! need to refresh the GPU canvas display when it''s on a'
  +' separate browser page....  ??'#13#10'        myurl:='''';'#13#10'        {'
  +'$endif}'#13#10'        {$else}'#13#10'        asm'#13#10'          var ob=d'
  +'ocument.getElementById(this.NameSpace+this.NodeName+''Contents'');'#13#10' '
  +'         if (ob!=null) {'#13#10'            //alert(''found iframe. posting'
  +' param message'');'#13#10'            ob.contentWindow.postMessage({"objid"'
  +':this.NodeName, "mtype":"SetNumParam", "pName":pName, "pValue":pValue},"*")'
  +';'#13#10'            }'#13#10'        end;'#13#10'        {$endif}'#13#10' '
  +'     end;'#13#10#13#10'    end;'#13#10'end;'#13#10#13#10'procedure TXGPUCan'
  +'vas.SetParam2DNumValue(pName:String;pValue:T2DNumArray;ForwardToWidget:Bool'
  +'ean);'#13#10'var'#13#10'  i,j,k:integer;'#13#10'  tmp:String;'#13#10'  myur'
  +'l:string;'#13#10'begin'#13#10'  for i:=0 to length(Param2DNumArray)-1 do'#13
  +#10'    if uppercase(Param2DNumArray[i].ParamName)=uppercase(pName) then'#13
  +#10'    begin'#13#10'      SetLength(Param2DNumArray[i].ParamValue,length(pV'
  +'alue));'#13#10'      for j:=0 to length(pValue)-1 do'#13#10'      begin'#13
  +#10'        setLength(Param2DNumArray[i].ParamValue[j],length(pValue[j]));'
  +#13#10'        for k:=0 to length(pValue[0])-1 do'#13#10'          Param2DNu'
  +'mArray[i].ParamValue[j,k]:=pValue[j,k];'#13#10'      end;'#13#10#13#10'    '
  +'  if (ForwardToWidget)'#13#10'      and (self.Active)'#13#10'      and (sel'
  +'f.HTMLSource<>'''')'#13#10'      and (self.HTMLSource<>''about:blank'') the'
  +'n'#13#10'      begin'#13#10'        {$ifndef JScript}'#13#10'        {$ifde'
  +'f Chromium}'#13#10'        myurl:= myChromium.Browser.MainFrame.GetURL();'
  +#13#10'        if myurl<>''about:blank'' then'#13#10'        begin'#13#10'  '
  +'        tmp:=Num2dArrayToString(pValue);'#13#10'          tmp:=''RunCode("'
  +'''+pName+''=''+tmp+'';")'';'#13#10'          myChromium.Browser.MainFrame.E'
  +'xecuteJavaScript(tmp, myurl, 0);'#13#10'        end;'#13#10'        {$else}'
  +#13#10'        //!!!! need to refresh the GPU canvas display when it''s on a'
  +' separate browser page....  ??'#13#10'        myurl:='''';'#13#10'        {'
  +'$endif}'#13#10'        {$else}'#13#10'        asm'#13#10'          var ob=d'
  +'ocument.getElementById(this.NameSpace+this.NodeName+''Contents'');'#13#10' '
  +'         if (ob!=null) {'#13#10'            //alert(''found iframe. posting'
  +' param message'');'#13#10'            ob.contentWindow.postMessage({"objid"'
  +':this.NodeName, "mtype":"SetNumParam", "pName":pName, "pValue":pValue},"*")'
  +';'#13#10'            }'#13#10'        end;'#13#10'        {$endif}'#13#10' '
  +'     end;'#13#10#13#10'    end;'#13#10'end;'#13#10#13#10'procedure TXGPUCan'
  +'vas.SetConstIntValue(pName:String;pValue:integer);'#13#10'var'#13#10'  i:in'
  +'teger;'#13#10'begin'#13#10'  for i:=0 to length(ConstIntArray)-1 do'#13#10
  +'    if uppercase(ConstIntArray[i].ConstName)=uppercase(pName) then'#13#10' '
  ,'   begin'#13#10'      ConstIntArray[i].ConstValue:=pValue;'#13#10'    end;'
  +#13#10'end;'#13#10#13#10'function TXGPUCanvas.AddFuncsBlockIfMissing(GPUCode'
  +':String):String;'#13#10'var'#13#10'bits:TStringList;'#13#10'n,ExpectedNum:i'
  +'nteger;'#13#10'begin'#13#10'  result:=GPUCode;'#13#10'  if (GPUCode='''') t'
  +'hen'#13#10'    EXIT;'#13#10'  // #### step for loading old systems (where t'
  +'here was no functions block)... create an empty functions block'#13#10'  Ex'
  +'pectedNum := numKernels+2;     // +1 for the final graphical kernel.  +1 ag'
  +'ain for a common functions kernel'#13#10'  bits:= stringsplit(GPUCode,event'
  +'Listdelimiter,false);'#13#10'  if (bits.Count = ExpectedNum-1)'#13#10'  the'
  +'n'#13#10'  begin'#13#10'    bits.Add('' '');'#13#10'    for n:=ExpectedNum-'
  +'1 downto 2 do'#13#10'    begin'#13#10'      bits[n]:=bits[n-1];'#13#10'    '
  +'end;'#13#10'    bits[1]:=''// common functions'';'#13#10'    result:= bits.'
  +'Text;'#13#10'  end;'#13#10'  bits.Free;'#13#10'end;'#13#10#13#10'procedure '
  +'TXGPUCanvas.SetAnimationCode(AValue:string);'#13#10'var'#13#10'  GPUString:'
  +'string;'#13#10'  FullString:String;'#13#10'begin'#13#10'  {$ifndef JScript}'
  +#13#10'  if not (csDesigning in componentState) then'#13#10'  {$endif}'#13#10
  +'  begin'#13#10'    GPUString:=AValue;'#13#10'    GPUString:=AddFuncsBlockIf'
  +'Missing(GPUString);'#13#10#13#10'    //showmessage(''Frame setXMLString ''+'
  +'SVGString);'#13#10'    myNode.SetAttributeValue(''AnimationCode'',GPUString'
  +');'#13#10#13#10'    if (self.Active=true)'#13#10'    and (not StartingUp) t'
  +'hen'#13#10'    begin'#13#10'      FullString:=self.FullXMLString;'#13#10'  '
  +'    myNode.SetAttributeValue(''HTMLSource'',FullString);'#13#10'      //sho'
  +'wmessage(''SetAnimationCode RedisplayFrame'');'#13#10'      RedisplayFrame;'
  +#13#10#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TXGPU'
  +'Canvas.StartMyGPU;'#13#10'var'#13#10'  h,w:integer;'#13#10'  arr:TGPUPixelA'
  +'rray;'#13#10'  arr3d:string;'#13#10'  animcounter,NumZPixels,NumYPixels,Num'
  +'XPixels:integer;'#13#10'begin'#13#10'  // refresh the actual h/w attributes'
  +#13#10'  h:=self.ActualHeight;'#13#10'  w:=self.ActualWidth;'#13#10#13#10'  '
  +'// clear the output data'#13#10'  setlength(self.GPUOutputArray,0);'#13#10
  +'  setlength(self.GPUStageArray,0);'#13#10'  self.GPUStageString:='''';'#13
  +#10'  self.GPUOutputString:='''';'#13#10'  self.animCounterString:='''';'#13
  +#10#13#10'  {$ifndef JScript}'#13#10'  if not (csDesigning in componentState'
  +') then'#13#10'  {$endif}'#13#10'  begin'#13#10'    HandleEvent(''OnStart'','
  +'self.myNode.NodeName,self.myNode.NameSpace,'''');'#13#10#13#10'    if self.'
  +'EmulationMode=true then'#13#10'    begin'#13#10'      animcounter:=self.Emu'
  +'lationFrame;'#13#10'      NumZPixels:=1;'#13#10'      NumYPixels:=h;'#13#10
  +'      NumXPixels:=w;'#13#10'      arr:=self.ExecEmulatorFunc(animcounter,Nu'
  +'mZPixels,NumYPixels,NumXPixels);'#13#10'      arr3d:=Num3DArrayToJSONString'
  +'(arr[0]);'#13#10'      self.InitStageData:=arr3d;'#13#10'    end;'#13#10'  '
  +'  SetupGPUPage;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TXGPUCanva'
  +'s.StopMyGPU(isdestroying:Boolean);'#13#10'var'#13#10'  tmp,doJS,myurl:Strin'
  +'g;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  if not (csDesigning in '
  +'componentState) then'#13#10'  {$endif}'#13#10'  begin'#13#10'    // stop th'
  +'e gpu loop'#13#10'    doJS:=''running=false;'';'#13#10'    if self.Animated'
  +' then'#13#10'      doJS:=doJS + '' clearInterval(GPUIntervalRunner);ClearDo'
  +'wn();'';'#13#10'    if isdestroying then'#13#10'      doJS:=doJS + LineEndi'
  +'ng + myNode.NodeName+''.destroy();'';'#13#10'    {$ifndef JScript}'#13#10' '
  +'   {$ifdef Chromium}'#13#10'    if myChromium<>nil then'#13#10'      if myC'
  +'hromium.Browser<>nil then'#13#10'      begin'#13#10'        myurl:= myChrom'
  +'ium.Browser.MainFrame.GetURL();'#13#10'        if myurl<>''about:blank'' th'
  +'en'#13#10'        begin'#13#10'          tmp:=''RunCode("''+doJS+''")'';'#13
  +#10'          myChromium.Browser.MainFrame.ExecuteJavaScript(tmp, myurl, 0);'
  +#13#10'        end;'#13#10'      end;'#13#10'      // make a change to the H'
  +'TMLSource text, so that the GPU code will be fully rebuilt'#13#10'      // '
  +'when/if the GPU is re-started. (see SetupGPUPage and SetHTMLSource).'#13#10
  +'      myNode.SetAttributeValue(''HTMLSource'',myNode.GetAttribute(''HTMLSou'
  +'rce'',true).AttribValue + ''/**/'');'#13#10'    {$else}'#13#10'    //!!!!  '
  +'external browser ??'#13#10'    {$endif}'#13#10'    {$else}'#13#10'    asm'
  +#13#10'    var ob=document.getElementById(this.NameSpace+this.NodeName+''Con'
  +'tents'');'#13#10'    if (ob!=null) {'#13#10'      ob.contentWindow.postMess'
  +'age({"objid":this.NodeName, "mtype":"execCode", "code":doJS},"*");'#13#10' '
  +'     }'#13#10'    end;'#13#10'    self.HTMLSource:='''';   //about:blank?? '
  +' clear the canvas??'#13#10'    {$endif}'#13#10#13#10'  end;'#13#10'end;'#13
  +#10#13#10'//------------------------------- SetActive ----------------------'
  ,'------'#13#10'// Setting the Active flag will build and run the GPU code in'
  +'side the IFrame'#13#10'//--------------------------------------------------'
  +'--------------------'#13#10'procedure TXGPUCanvas.SetActive(AValue:Boolean)'
  +';'#13#10'begin'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10'    myNod'
  +'e.SetAttributeValue(''Active'',myBoolToStr(AValue),''Boolean'');'#13#10'   '
  +' if (StartingUp=false) and (AValue=true) then'#13#10'    begin'#13#10'     '
  +' self.StartMyGPU;'#13#10'    end'#13#10'    else'#13#10'      self.StopMyGP'
  +'U(false);'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'procedure TXGPUCanva'
  +'s.SetAnimated(AValue:Boolean);'#13#10'begin'#13#10'  myNode.SetAttributeVal'
  +'ue(''Animated'',myBoolToStr(AValue),''Boolean'');'#13#10'end;'#13#10'proced'
  +'ure TXGPUCanvas.SetEmulationMode(AValue:Boolean);'#13#10'begin'#13#10'  myN'
  +'ode.SetAttributeValue(''EmulationMode'',myBoolToStr(AValue),''Boolean'');'
  +#13#10'end;'#13#10'procedure TXGPUCanvas.SetEmulationFrame(AValue:integer);'
  +#13#10'begin'#13#10'  myNode.SetAttributeValue(''EmulationFrame'',intToStr(A'
  +'Value),''Integer'');'#13#10'end;'#13#10'procedure TXGPUCanvas.SetParamNumLi'
  +'st(AValue:string);'#13#10'var'#13#10'  pNames:TStringList;'#13#10'  i:integ'
  +'er;'#13#10'begin'#13#10'  myNode.SetAttributeValue(''ParamNumList'',AValue,'
  +'''String'');'#13#10'  SetLength(ParamNumArray,0);'#13#10#13#10'  //use this'
  +' comma-delimited list to initialise ParamArray.'#13#10'  if AValue<>'''' th'
  +'en'#13#10'  begin'#13#10'    pNames:=TStringList.Create;'#13#10'    pNames.'
  +'StrictDelimiter:=true;'#13#10'    pNames.LineBreak:='','';'#13#10'    pName'
  +'s.Text:=AValue;'#13#10'    SetLength(ParamNumArray,pNames.Count);'#13#10'  '
  +'  for i:=0 to pNames.Count-1 do'#13#10'    begin'#13#10'      ParamNumArray'
  +'[i].ParamName:=trim(pNames[i]);'#13#10'      SetLength(ParamNumArray[i].Par'
  +'amValue,1);'#13#10'      ParamNumArray[i].ParamValue[0]:=0;'#13#10'    end;'
  +#13#10'    pNames.Free;'#13#10'  end;'#13#10#13#10'end;'#13#10'procedure TXG'
  +'PUCanvas.SetParam2DNumList(AValue:string);'#13#10'var'#13#10'  pNames:TStri'
  +'ngList;'#13#10'  i:integer;'#13#10'begin'#13#10'  myNode.SetAttributeValue('
  +'''Param2DNumList'',AValue,''String'');'#13#10'  SetLength(Param2DNumArray,0'
  +');'#13#10#13#10'  //use this comma-delimited list to initialise Param2DNumA'
  +'rray.'#13#10'  if AValue<>'''' then'#13#10'  begin'#13#10'    pNames:=TStri'
  +'ngList.Create;'#13#10'    pNames.StrictDelimiter:=true;'#13#10'    pNames.L'
  +'ineBreak:='','';'#13#10'    pNames.Text:=AValue;'#13#10'    SetLength(Param'
  +'2DNumArray,pNames.Count);'#13#10'    for i:=0 to pNames.Count-1 do'#13#10' '
  +'   begin'#13#10'      Param2DNumArray[i].ParamName:=pNames[i];'#13#10'     '
  +' SetLength(Param2DNumArray[i].ParamValue,1);'#13#10'      SetLength(Param2D'
  +'NumArray[i].ParamValue[0],1);'#13#10'      Param2DNumArray[i].ParamValue[0,'
  +'0]:=0;'#13#10'    end;'#13#10'    pNames.Free;'#13#10'  end;'#13#10#13#10'e'
  +'nd;'#13#10'procedure TXGPUCanvas.SetConstIntList(AValue:string);'#13#10'var'
  +#13#10'  pNames:TStringList;'#13#10'  i:integer;'#13#10'begin'#13#10'  myNod'
  +'e.SetAttributeValue(''ConstIntList'',AValue,''String'');'#13#10'  SetLength'
  +'(ConstIntArray,0);'#13#10#13#10'  //use this comma-delimited list to initia'
  +'lise ParamArray.'#13#10'  if AValue<>'''' then'#13#10'  begin'#13#10'    pN'
  +'ames:=TStringList.Create;'#13#10'    pNames.StrictDelimiter:=true;'#13#10' '
  +'   pNames.LineBreak:='','';'#13#10'    pNames.Text:=AValue;'#13#10'    SetL'
  +'ength(ConstIntArray,pNames.Count);'#13#10'    for i:=0 to pNames.Count-1 do'
  +#13#10'    begin'#13#10'      ConstIntArray[i].ConstName:=pNames[i];'#13#10
  +'      ConstIntArray[i].ConstValue:=0;'#13#10'    end;'#13#10'    pNames.Fre'
  +'e;'#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.SetIn'
  +'itStageData(AValue:string);'#13#10'begin'#13#10'  myNode.SetAttributeValue('
  +'''InitStageData'',AValue,''String'');'#13#10'end;'#13#10'procedure TXGPUCan'
  +'vas.SetKernelXDims(AValue:string);'#13#10'begin'#13#10'  myNode.SetAttribut'
  +'eValue(''KernelXDims'',AValue,''String'');'#13#10'end;'#13#10'procedure TXG'
  +'PUCanvas.SetKernelYDims(AValue:string);'#13#10'begin'#13#10'  myNode.SetAtt'
  +'ributeValue(''KernelYDims'',AValue,''String'');'#13#10'end;'#13#10'procedur'
  +'e TXGPUCanvas.SetKernelZDims(AValue:string);'#13#10'begin'#13#10'  myNode.S'
  +'etAttributeValue(''KernelZDims'',AValue,''String'');'#13#10'end;'#13#10'pro'
  +'cedure TXGPUCanvas.SetMaxIterations(AValue:integer);'#13#10'begin'#13#10'  '
  +'myNode.SetAttributeValue(''MaxIterations'',IntToStr(AValue),''Integer'');'
  +#13#10'end;'#13#10'procedure TXGPUCanvas.SetStartIteration(AValue:integer);'
  +#13#10'begin'#13#10'  myNode.SetAttributeValue(''StartIteration'',IntToStr(A'
  +'Value),''Integer'');'#13#10'end;'#13#10'procedure TXGPUCanvas.SetNumFrames('
  +'AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''NumFrames'
  +''',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10'procedure TXGPUCanvas.'
  ,'SetMaxFramesPerSec(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttribu'
  +'teValue(''MaxFramesPerSec'',IntToStr(AValue),''Integer'');'#13#10'end;'#13
  +#10'procedure TXGPUCanvas.SetNumKernels(AValue:integer);'#13#10'begin'#13#10
  +'  myNode.SetAttributeValue(''NumKernels'',IntToStr(AValue),''Integer'');'#13
  +#10'end;'#13#10#13#10'function TXGPUCanvas.ExecEmulatorFunc(animcounter,NumZ'
  +'Pixels,NumYPixels,NumXPixels:integer):TGPUPixelArray;'#13#10'{$ifndef JScri'
  +'pt}'#13#10'type'#13#10'   TMyFunc=function(animcounter,NumZPixels,NumYPixel'
  +'s,NumXPixels:integer):TGPUPixelArray; stdcall;'#13#10'   // ie. profile for'
  +' function Emulate_''+self.myNode.NodeName+''(animcounter,NumZPixels,NumYPix'
  +'els,NumXPixels:integer):TGPUPixelArray; '');'#13#10'var'#13#10'   fn: TMyFu'
  +'nc;'#13#10'{$endif}'#13#10'var'#13#10'   arr:TGPUPixelArray;'#13#10'   tmp:'
  +'string;'#13#10'begin'#13#10'  // called from StartMyGPU, when in emulation '
  +'mode'#13#10'  setlength(arr,0);'#13#10'  {$ifndef JScript}'#13#10'  if MyLi'
  +'bC<>dynlibs.NilHandle then'#13#10'  begin'#13#10'    fn:= TMyFunc(GetProced'
  +'ureAddress(MyLibC,''Emulate_''+self.myNode.NodeName));'#13#10'    if Assign'
  +'ed(fn) then'#13#10'        try'#13#10'          arr := fn (animcounter,NumZ'
  +'Pixels,NumYPixels,NumXPixels);   //Executes the dll function'#13#10'       '
  +' except'#13#10'          on ex:exception do'#13#10'            showmessage('
  +'''Error raised in function Emulate_''+self.myNode.NodeName+'': ''+ex.Messag'
  +'e);'#13#10'        end'#13#10'    else'#13#10'      showmessage(''Function '
  +'Emulate_''+self.myNode.NodeName+'' not found in ExecEmulatorFunc'')   ;'#13
  +#10'  end;'#13#10'  {$else}'#13#10'  tmp:=''pas.GPUCode''+self.myNode.NodeNa'
  +'me+''.Emulate_''+self.myNode.NodeName;'#13#10'  tmp:=tmp+''(animcounter,Num'
  +'ZPixels,NumYPixels,NumXPixels);'';'#13#10'  asm'#13#10'  arr = eval(tmp);'
  +#13#10'    //arr = pas.??????.Emulate_????(animcounter,NumZPixels,NumYPixels'
  +',NumXPixels);'#13#10'  end;'#13#10'  {$endif}'#13#10'  result:=arr;'#13#10
  +'end;'#13#10#13#10#13#10'begin'#13#10'  // this is the set of node attribute'
  +'s that each GPUCanvas instance will have (added to the set inherited from T'
  +'XIFrame).'#13#10'  AddWrapperDefaultAttribs(myDefaultAttribs);'#13#10'  Add'
  +'DefaultAttribute(myDefaultAttribs,''ActualHeight'',''Integer'','''','''',tr'
  +'ue,false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''ActualWidth'','''
  +'Integer'','''','''',true,false);'#13#10'  AddDefaultAttribute(myDefaultAttr'
  +'ibs,''FrameWidth'',''String'',''300'','''',false);'#13#10'  AddDefaultAttri'
  +'bute(myDefaultAttribs,''FrameHeight'',''String'',''300'','''',false);'#13#10
  +'  AddDefaultAttribute(myDefaultAttribs,''Border'',''Boolean'',''True'','''''
  +',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''SpacingAround'','''
  +'Integer'',''0'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,'
  +'''LabelPos'',''String'',''Top'','''',false);'#13#10'  AddDefaultAttribute(m'
  +'yDefaultAttribs,''LabelText'',''String'',''GPU Canvas'','''',false);'#13#10
  +'  AddDefaultAttribute(myDefaultAttribs,''HTMLSource'',''String'','''','''','
  +'false,false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Active'',''Bo'
  +'olean'',''False'','''',false,false);'#13#10'  AddDefaultAttribute(myDefault'
  +'Attribs,''Animated'',''Boolean'',''False'','''',false);'#13#10'  AddDefault'
  +'Attribute(myDefaultAttribs,''ParamNumList'',''String'','''',''List of numer'
  +'ic parameters (1D arrays) to be passed in to kernels'',false);'#13#10'  Add'
  +'DefaultAttribute(myDefaultAttribs,''Param2DNumList'',''String'','''',''List'
  +' of numeric parameters (2D arrays) to be passed in to kernels'',false);'#13
  +#10'  AddDefaultAttribute(myDefaultAttribs,''ConstIntList'',''String'','''','
  +'''List of integer constants to be passed in to kernels'',false);'#13#10'  A'
  +'ddDefaultAttribute(myDefaultAttribs,''MaxIterations'',''Integer'',''512'','
  +'''Any loops defined inside a kernel must have a maximum iteration count def'
  +'ined by MaxIterations'',false);'#13#10'  AddDefaultAttribute(myDefaultAttri'
  +'bs,''StartIteration'',''Integer'',''1'',''Initial value for AnimationCounte'
  +'rValue'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''NumFrames'
  +''',''Integer'',''100'',''Number of frames after which AnimationCounterValue'
  +' resets to 0'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxF'
  +'ramesPerSec'',''Integer'',''10'',''Target frame rate (may be slower if kern'
  +'el processing times are long)'',false);'#13#10'  AddDefaultAttribute(myDefa'
  +'ultAttribs,''AnimationCode'',''String'','''','''',false);'#13#10'  AddDefau'
  +'ltAttribute(myDefaultAttribs,''NumKernels'',''Integer'',''0'',''Number of n'
  +'ested non-graphical kernels'',false);'#13#10'  AddDefaultAttribute(myDefaul'
  +'tAttribs,''LastCounterValue'',''Integer'',''0'',''For an animated GPU, late'
  +'st value of the animation counter'',true,false);'#13#10'  AddDefaultAttribu'
  +'te(myDefaultAttribs,''InitStageData'',''String'',''[[["1"]]]'',''3D Array s'
  ,'tring for input to the first non-graphical kernel'',false,false);'#13#10'  '
  +'AddDefaultAttribute(myDefaultAttribs,''KernelXDims'',''String'',''[]'',''x-'
  +'dimensions of output from the non-graphical kernels eg. [100,150] for 2 ker'
  +'nels'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''KernelYDims'
  +''',''String'',''[]'',''y-dimensions of output from the non-graphical kernel'
  +'s eg. [100,150] for 2 kernels'',false);'#13#10'  AddDefaultAttribute(myDefa'
  +'ultAttribs,''KernelZDims'',''String'',''[]'',''z-dimensions of output from '
  +'the non-graphical kernels eg. [1,2] for 2 kernels'',false);'#13#10'  AddDef'
  +'aultAttribute(myDefaultAttribs,''EmulationMode'',''Boolean'',''False'',''Wh'
  +'en true, GPU will activate using the pascal kernel code, and display the re'
  +'sult'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''EmulationFra'
  +'me'',''Integer'',''1'',''Animation frame to be run in emulation mode'',fals'
  +'e);'#13#10'  AddDefaultsToTable(MyNodeType,myDefaultAttribs);'#13#10#13#10
  +'  AddAttribOptions(MyNodeType,''Alignment'',AlignmentOptions);'#13#10'  Add'
  +'AttribOptions(MyNodeType,''LabelPos'',LabelPosOptions);'#13#10'  {$IFndef J'
  +'Script}'#13#10'  RegisterClass(TXGPUCanvas);'#13#10'  AddNodeFuncLookup(MyN'
  +'odeType,@CreateGPUCanvasWidget);'#13#10'  {$else}'#13#10'  AddNodeFuncLooku'
  +'p(MyNodeType,@CreateInterfaceObjGPU,@CreateGPUCanvasWidget);'#13#10'  {$end'
  +'if}'#13#10'  SuppressDesignerProperty(MyNodeType,''ContainerHeight'');'#13
  +#10'  SuppressDesignerProperty(MyNodeType,''ContainerWidth'');'#13#10'  Supp'
  +'ressDesignerProperty(MyNodeType,''SuspendRefresh'');'#13#10'  SuppressDesig'
  +'nerProperty(MyNodeType,''BgColor'');'#13#10'  SuppressDesignerProperty(MyNo'
  +'deType,''HTMLSource'');'#13#10#13#10#13#10'end.'#13#10#13#10'///////// unus'
  +'ed experiments ........ //////////////////////////'#13#10#13#10'// +''     '
  +'const ''+self.MyNode.NodeName+'' = new GPU({mode: ''''webgl''''});   ''+Lin'
  +'eEnding;'#13#10' //const gpu = new GPU({ mode: ''gpu'' });'#13#10'// +''   '
  +'  const ''+self.MyNode.NodeName+'' = new GPU({mode: ''''cpu''''});   ''+Lin'
  +'eEnding;'#13#10#13#10'(*'#13#10'str:=str'#13#10'+''  ParamsAsString=functio'
  +'n() { ''+LineEnding'#13#10'// numeric parameters'#13#10'+''     var s="nums'
  +' =["; ''+LineEnding;'#13#10'cma:=''""'';'#13#10'for i:=0 to length(self.Par'
  +'amNumArray)-1 do'#13#10'begin'#13#10'  str:=str+''s = s+''+cma+''+"["+''+Pa'
  +'ramNumArray[i].ParamName+''.toString()+"]";''+LineEnding ;       //eg. s = '
  +'s+","+"["+p1.toString()+"]";'#13#10'  cma:=''","'';'#13#10'end;'#13#10'str:'
  +'=str+''    s=s+"]";''+LineEnding'#13#10'// image parameters'#13#10'+''     '
  +'s=s+" imgs =["; ''+LineEnding;'#13#10'cma:=''""'';'#13#10'for i:=0 to lengt'
  +'h(self.ParamImgArray)-1 do'#13#10'begin'#13#10'  str:=str+''    s = s+''+cm'
  +'a+''+"["+''+ParamImgArray[i].ParamName+''.toString()+"]";''+LineEnding ;   '
  +'    //eg. s = s+","+"["+p1.toString()+"]";'#13#10'  cma:=''","'';'#13#10'en'
  +'d;'#13#10'str:=str+''    s=s+"]";''+LineEnding;'#13#10#13#10'str:=str+''   '
  +' return(s);''+LineEnding;'#13#10'str:=str+''}''+LineEnding;'#13#10'*)'#13#10
  +#13#10'//  {$ifdef JScript}'#13#10'//  str:=str'#13#10'//  +''  function Pos'
  +'tParamMessages(objid) {''  + LineEnding'#13#10'//  +''     var pv=[0]; ''  '
  +'+ LineEnding;'#13#10'//  for i:=0 to length(self.ParamNumArray)-1 do'#13#10
  +'//  begin'#13#10'//  str:=str'#13#10'//  +''          pv=''+ParamNumArray[i'
  +'].ParamName+'';''  + LineEnding'#13#10'////   +''          alert("posting m'
  +'sg. pvalue="+pv);''  + LineEnding'#13#10'//  +''          parent.postMessag'
  +'e({"objid":objid,"mtype":"FrameDone","pName":"''+ParamNumArray[i].ParamName'
  +'+''","pValue":pv},"*"); '' + LineEnding;'#13#10'//  end;'#13#10'//  //!!!! '
  +'Add integers and images.....'#13#10'//  str:=str+''}''+LineEnding;'#13#10'/'
  +'/  {$endif}'#13#10#13#10'//  +''  function FetchParamValuesFromParent()  {'
  +''' +LineEnding'#13#10' // +''    console.log("param 0 is "+parent.window.pa'
  +'s.XGPUCanvas.GetParam(''''''+myNode.NodeName+'''''',0)); ''+LineEnding'#13
  +#10' // +''    console.log("param 0 is "+parent.testnum); ''+LineEnding'#13
  +#10'//  +''  }  ''+LineEnding;'#13#10#13#10'//   {$ifndef JScript}'#13#10'//'
  +'   // Desktop XIDE'#13#10'//   +''        var msg = ParamsAsString(); '' + '
  +'LineEnding'#13#10'//  // +''        alert("changing title to:"+msg); '' + L'
  +'ineEnding'#13#10'//  // +''        document.title = "params ="+msg; '' + Li'
  +'neEnding'#13#10'//  {$ifdef Chromium}'#13#10'//  // Desktop XIDE with CEF4'
  +#13#10'//  +''           var ob=getcomponent("paramString"); '' + LineEnding'
  +#13#10'//  +''           if (ob!=null) {ob.innerHTML=msg;} '' + LineEnding'
  +#13#10'//  // change the document title to trigger a cef titlechange event..'
  +'.'#13#10'//  +''           document.title = "''+myNode.NodeName+'' "+Animat'
  +'ionCounterValue;''  + LineEnding'#13#10'//  {$else}'#13#10'//  // Desktop X'
  +'IDE - GPUCanvas running in external browser page - using polling to get tit'
  ,'le changes'#13#10'//  {$endif}'#13#10'//   {$else}'#13#10'//   // XIDE in B'
  +'rowser Environment'#13#10'//   //  +''      console.log("posting FrameDone '
  +'message");''  + LineEnding'#13#10'//   //+''          PostParamMessages("'''
  +'+self.MyNode.NodeName+''");''  +LineEnding'#13#10'//   {$endif}'#13#10'//  '
  +' +''    }); ''  + LineEnding'#13#10'//   +''  } '' + LineEnding;'#13#10'//'
  +#13#10#13#10'//  .... in DoFrame.....'#13#10'//   {$ifdef JScript}'#13#10'//'
  +'   +''            try {    ''  + LineEnding'#13#10'//   +''              Fe'
  +'tchParamValuesFromParent();  ''  + LineEnding'#13#10'//   +''            }c'
  +'atch(err){alert(err.message); clearInterval(AnimationFrameID);}  ''  + Line'
  +'Ending'#13#10'//   {$endif}'#13#10#13#10'// ....... JS Mode.....'#13#10'//p'
  +'rocedure HandleGPUMessage(gpumsg:TGPUMessage);'#13#10'//var'#13#10'//  Item'
  +'Node:TdataNode;'#13#10'//begin'#13#10'//  if (gpumsg.objid<>'''') then'#13
  +#10'//  begin'#13#10'//    //showmessage(''HandleMessage XGPUCanvas: ''+gpum'
  +'sg.objid+'' ''+gpumsg.mtype+'' ''+NumArrayToJSONString(gpumsg.pvalue));'#13
  +#10'//     //this is a notification sent out from within a GPU frame.'#13#10
  +'//     ItemNode:=findDataNodeById(systemnodetree,gpumsg.objid,false);'#13#10
  +'//     if ItemNode<>nil then'#13#10'//     begin'#13#10'//       // set the'
  +' ParamArray values from the message'#13#10'//       TXGPUCanvas(ItemNode).S'
  +'etParamNumValue(gpumsg.pName, gpumsg.pValue,false);     //!!!! + int + img'
  +#13#10'////      showmessage(TXGPUCanvas(ItemNode).ParamNumArrayToString);'
  +#13#10'//       handleEvent(''OnNewFrame'',ItemNode.NodeName, '''');'#13#10
  +'//     end;'#13#10'//  end;'#13#10'//'#13#10'//end;'#13#10#13#10'(*'#13#10
  +'function TXGPUCanvas.SetParamsFromMessage(msg:String):TNumArray;'#13#10'// '
  +'msg has format ''params =[[n,n,n],[n,n,n]....]'#13#10'//                ''i'
  +'nts =[[i,i,i],[i,i,i]....]'#13#10'//                ''strs =[[s,s,s],[s,s,s'
  +']....]'''#13#10'var'#13#10'  numstr,intstr,imgstr, str, lastbit:string;'#13
  +#10'  n,i,s,j,k:integer;'#13#10'  sets:TStringList;'#13#10'  bits:TStringLis'
  +'t;'#13#10'  bits2:TStringList;'#13#10'begin'#13#10'  str:=msg;'#13#10'  n:='
  +'FoundString(msg,''nums ='');'#13#10'  i:=FoundString(msg,''ints ='');'#13#10
  +'  s:=FoundString(msg,''strs ='');'#13#10'  if (n>0)'#13#10'  and (i>0)'#13
  +#10'  and (s>0) then'#13#10'  begin'#13#10'    imgstr:=str;'#13#10'    Delet'
  +'e(imgstr,1,s+5);'#13#10#13#10'    Delete(str,s,length(str)-s);'#13#10'    i'
  +'ntstr:=str;'#13#10'    Delete(intstr,1,i+5);'#13#10#13#10'    Delete(str,i,'
  +'length(str)-i);'#13#10'    numstr:=str;'#13#10'    Delete(numstr,1,i+5);'#13
  +#10#13#10'    i:=FoundString(numstr,''['');'#13#10'    if i>0 then'#13#10'  '
  +'  begin'#13#10'      Delete(numstr,1,i+1);             //  ''n,n,n],[n,n,n]'
  +'....]'''#13#10'      if numstr<>'''' then'#13#10'      begin'#13#10'       '
  +' bits:=stringsplit(numstr,''],['');  //  ''n,n,n /   n,n,n  / ....   ]]'''
  +#13#10'        lastbit:=bits[bits.count-1];'#13#10'        if length(lastbit'
  +')>1 then'#13#10'        begin'#13#10'          Delete(lastbit,length(lastbi'
  +'t)-1,2);'#13#10'          bits[bits.count-1]:=lastbit;'#13#10'          for'
  +' j:=0 to bits.count-1 do'#13#10'          begin'#13#10'            bits2:=s'
  +'tringsplit(bits[j],'','');'#13#10'            for k:=0 to bits2.count-1 do'
  +#13#10'              self.ParamNumArray[j].ParamValue[k]:=StrToFloat(bits2[k'
  +']);'#13#10'          end;'#13#10'        end;'#13#10'      end;'#13#10'    '
  +'end;'#13#10#13#10'    i:=FoundString(imgstr,''['');'#13#10'    if i>0 then'
  +#13#10'    begin'#13#10'      Delete(imgstr,1,i+1);             //  ''i,i,i]'
  +',[i,i,i]....]'''#13#10'      if imgstr<>'''' then'#13#10'      begin'#13#10
  +'        bits:=stringsplit(imgstr,''],['');  //  ''i,i,i /   i,i,i  / ....  '
  +' ]]'''#13#10'        lastbit:=bits[bits.count-1];'#13#10'        if length('
  +'lastbit)>1 then'#13#10'        begin'#13#10'          Delete(lastbit,length'
  +'(lastbit)-1,2);'#13#10'          bits[bits.count-1]:=lastbit;'#13#10'      '
  +'    for j:=0 to bits.count-1 do'#13#10'          begin'#13#10'            b'
  +'its2:=stringsplit(bits[j],'','');'#13#10'            for k:=0 to bits2.coun'
  +'t-1 do'#13#10'              self.ParamImgArray[j].ParamValue[k]:='''';  //!'
  +'!!! ??'#13#10'          end;'#13#10'        end;'#13#10'      end;'#13#10' '
  +'   end;'#13#10#13#10#13#10#13#10'  end;'#13#10#13#10'end;'#13#10'*)'#13#10
  +#13#10#13#10'//function TXGPUCanvas.ParamNumArrayToString:String;    // (use'
  +'d for debugging)'#13#10'//var'#13#10'//  i,j:integer;'#13#10'//  str:String'
  +';'#13#10'//begin'#13#10'//  str:=''['';'#13#10'//  for i:=0 to length(Param'
  +'NumArray)-1 do'#13#10'//  begin'#13#10'//    if i>0 then str:=str+'','';'#13
  +#10'//    str:=str+ParamNumArray[i].ParamName+'':['';'#13#10'//    for j:=0 '
  +'to length(ParamNumArray[i].ParamValue)-1 do'#13#10'//    begin'#13#10'//   '
  +'   if j>0 then str:=str+'','';'#13#10'//      str:=str+FloatToStr(ParamNumA'
  ,'rray[i].ParamValue[j]);'#13#10'//    end;'#13#10'//    str:=str+'']'';'#13
  +#10'//  end;'#13#10'//  str:=str+'']'';'#13#10'//  result:=str;'#13#10'//end'
  +';'#13#10#13#10#13#10#13#10#13#10#13#10#13#10
]);
LazarusResources.Add('xgpueditor','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XGPUEditor;'
  +#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'interface'#13#10'uses'#13#10' '
  +'   Classes, SysUtils, TypInfo, StringUtils, NodeUtils, XIFrame,'#13#10'    '
  +'UtilsJSCompile, XForm, XCode, XButton, XVBox, XHBox, XTabControl, XMemo, XC'
  +'omboBox, XEditBox,'#13#10'    X3DTable, EventsInterface,'#13#10'    //WebTr'
  +'anspilerUtils,'#13#10'  {$ifndef JScript}'#13#10'    LResources, Forms, Con'
  +'trols, StdCtrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls,'#13#10
  +'    LazsUtils, LCLIntf,'#13#10'    LCLType, gettext,'#13#10'//    {$ifdef C'
  +'hromium}'#13#10'//    uCEFChromium, uCEFInterfaces, uCEFTypes,'#13#10'//   '
  +' {$endif}'#13#10'  {$else}'#13#10'    webfilecache, pas2jswebcompiler,'#13
  +#10'    HTMLUtils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events;'#13#10
  +#13#10'type TAnimCodeRec = record'#13#10'  CodeBlock:TStringList;'#13#10'end'
  +';'#13#10'type TAnimCodeArray = Array of TAnimCodeRec;'#13#10'type TDimsArra'
  +'y = Array of array of integer;'#13#10'type  TGPUEventClass = class'#13#10' '
  +'   procedure CloseCodeEditor(e:TEventStatus;nodeID: AnsiString; myValue: An'
  +'siString);'#13#10'    procedure GPUCodeEditHandleClickMessage(e:TEventStatu'
  +'s;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure LaunchGPUH'
  +'TML(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    pro'
  +'cedure GPUComboBoxChange(e:TEventStatus;nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'    procedure TabChange(e:TEventStatus;nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'    {$ifndef JScript}'#13#10'    procedure Edito'
  +'rResize(Sender: TObject);'#13#10'    procedure EditorDestroy(Sender: TObjec'
  +'t);'#13#10'    {$endif}'#13#10'  end;'#13#10'var'#13#10'  GPUEditorForm:TXF'
  +'orm;'#13#10'  GPUEditorTabControl:TXTabControl;'#13#10'  GPUCodeEditor:TXCo'
  +'de;'#13#10'  GPUComboBox:TXComboBox;'#13#10'  GPUEditBox:TXEditBox;'#13#10
  +'  GPUMemo,GPUPasMemo:TXMemo;'#13#10'  GPUTableEditor:TX3DTable;'#13#10'  Ed'
  +'itingGPUNode:TDataNode;'#13#10'  MemoNode,PasMemoNode,VBNode2,TabPageNode4:'
  +'TdataNode;'#13#10'  {$ifndef JScript}'#13#10'    GPUEditorTopControl:TWinCo'
  +'ntrol;'#13#10'    {$endif}'#13#10'  GPUEditorMode:String;'#13#10'  GPUEvent'
  +'s:TGPUEventClass;'#13#10'  GPUEditorDoneBtn:TXButton;'#13#10#13#10'procedur'
  +'e CreateGPUEditForm;'#13#10'procedure ShowGPUEditor(GPUNode:TDataNode;TabPa'
  +'ge:integer);'#13#10'procedure ShowGPUKernel(GPUNode:TDataNode;filename:stri'
  +'ng;targetLine:integer;CharPos:String);'#13#10'{$ifndef JScript}'#13#10'proc'
  +'edure ShowGPUKernelLater(GPUNode:TDataNode;filename:string;targetLine:integ'
  +'er;CharPos:String);'#13#10'{$endif}'#13#10#13#10'implementation'#13#10'uses'
  +' XGPUCanvas;'#13#10#13#10'{$ifndef JScript}'#13#10'type'#13#10'// record ty'
  +'pe for queued showkernel function'#13#10'TQueueKRec = record'#13#10'  GPUNo'
  +'de:TDataNode;'#13#10'  filename:string;'#13#10'  targetLine:integer;'#13#10
  +'  CharPos:String;'#13#10'end;'#13#10'PQueueKRec = ^TQueueKRec;'#13#10'type'
  +#13#10'  TAsyncProcs = class(TObject)'#13#10'    procedure ShowGPUKernelAsyn'
  +'c(thedata:PtrInt);'#13#10'  end;'#13#10'var'#13#10'    AsyncProcs:TAsyncPro'
  +'cs;'#13#10'{$endif}'#13#10'var'#13#10'MainVB:TXVBox;'#13#10#13#10'procedure'
  +' CreateGPUMemo(ParentNode:TDataNode);'#13#10'begin'#13#10'  MemoNode:=AddDy'
  +'namicWidget(''TXMemo'',GPUEditorForm,ParentNode,''XGPUHTMLMemo'','''',''Lef'
  +'t'',0);'#13#10'  GPUMemo:=TXMemo(MemoNode.ScreenObject);'#13#10'  GPUMemo.M'
  +'emoHeight:=''85%'';'#13#10'  GPUMemo.MemoWidth:=''99%'';'#13#10'  GPUMemo.B'
  +'order:=false;'#13#10'  GPUMemo.LabelPos:=''Top'';'#13#10'  GPUMemo.LabelTex'
  +'t:=''HTML generated at the last GPU activation'';'#13#10'  MemoNode.IsDynam'
  +'ic:=false;'#13#10'end;'#13#10#13#10'procedure CreatePasMemo(ParentNode:TDat'
  +'aNode);'#13#10'begin'#13#10'  PasMemoNode:=AddDynamicWidget(''TXMemo'',GPUE'
  +'ditorForm,ParentNode,''XGPUPasMemo'','''',''Left'',-1);'#13#10'  PasMemoNod'
  +'e.IsDynamic:=false;'#13#10'  GPUPasMemo:=TXMemo(PasMemoNode.ScreenObject);'
  +#13#10'  GPUPasMemo.MemoHeight:=''85%'';'#13#10'  GPUPasMemo.MemoWidth:=''99'
  +'%'';'#13#10'  GPUPasMemo.Border:=false;'#13#10'  GPUPasMemo.LabelPos:=''Top'
  +''';'#13#10'  GPUPasMemo.LabelText:=''Pascal unit generated at the last GPU '
  +'activation'';'#13#10'end;'#13#10#13#10'procedure CreateGPUEditForm;'#13#10
  +'var'#13#10'  FormNode,MainVBNode,TabControlNode,EditorNode,VBNode,BtnNode,T'
  +'ableNode:TDataNode;'#13#10'  VBNode3,BtnNode2,ComboNode,HBTopNode,EditNode:'
  +'TDataNode;'#13#10'  TabPageNode1,TabPageNode2,TabPageNode3:TdataNode;'#13#10
  ,'  LaunchBtn:TXButton;'#13#10'  VB,vb2:TXVBox;'#13#10'  HB:TXHBox;'#13#10'be'
  +'gin'#13#10#13#10#13#10'  // Create the popup form for editing the GPU anima'
  +'tion code block...'#13#10'  if GPUEditorForm=nil then'#13#10'  begin'#13#10
  +'    {$ifndef JScript}'#13#10'    GPUEditorForm:=TXForm.CreateNew(Applicatio'
  +'n);'#13#10'    GPUEditorForm.Name:=''XGPUCodeEditorForm'';'#13#10'    GPUEd'
  +'itorForm.IsContainer:=true;'#13#10'    FormNode:=CreateFormNode(GPUEditorFo'
  +'rm);'#13#10'    GPUEditorForm.BorderStyle:=bsSizeable;           // allows '
  +'resizing'#13#10'    GPUEditorForm.OnResize:=@GPUEvents.EditorResize;'#13#10
  +'    GPUEditorForm.OnDestroy:=@GPUEvents.EditorDestroy;'#13#10#13#10'    {$e'
  +'lse}'#13#10'    FormNode:=AddDynamicWidget(''TXForm'',nil,nil,''XGPUCodeEdi'
  +'torForm'','''',''Left'',-1);'#13#10'    GPUEditorForm:=TXForm(FormNode);'#13
  +#10'    GPUEditorForm.Name:=''XGPUCodeEditorForm'';'#13#10'    {$endif}'#13
  +#10'    GPUEditorForm.Caption:=''XGPUCanvas Animation Code Editor'';'#13#10
  +'    GPUEditorForm.Top:=100;'#13#10'    GPUEditorForm.Left:=100;'#13#10'    '
  +'GPUEditorForm.Height:=500;'#13#10'    GPUEditorForm.Width:=900;'#13#10'    '
  +'FormNode.IsDynamic:=false;'#13#10#13#10'    addchildtoparentnode(SystemNode'
  +'Tree,FormNode,-1);   //!!!! check this doesn''t upset things...don''t want '
  +'these in a systemsave...'#13#10#13#10'    MainVBNode:=AddDynamicWidget(''TX'
  +'VBox'',GPUEditorForm,FormNode,''XGPUMainVBox'','''',''Left'',-1);'#13#10'  '
  +'  MainVB:=TXVBox(MainVBNode.ScreenObject);'#13#10'    MainVB.ContainerHeigh'
  +'t:=''100%'';'#13#10'    MainVB.Border:=false;'#13#10'    MainVBNode.IsDynam'
  +'ic:=false;'#13#10#13#10'    TabControlNode:=AddDynamicWidget(''TXTabControl'
  +''',GPUEditorForm,MainVBNode,''XGPUTabControl'','''',''Left'',-1);'#13#10'  '
  +'  TabControlNode.IsDynamic:=false;'#13#10'    GPUEditorTabControl:=TXTabCon'
  +'trol(TabControlNode.ScreenObject);'#13#10'    GPUEditorTabControl.Container'
  +'Height:=''90%'';'#13#10'    GPUEditorTabControl.ContainerWidth:=''100%'';'
  +#13#10'    TabControlNode.registerEvent(''Change'',@GPUEvents.TabChange);'#13
  +#10#13#10'    TabPageNode1:=AddDynamicWidget(''TXTabSheet'',GPUEditorForm,Ta'
  +'bControlNode,''XGPUTabSheet1'','''',''Left'',-1);'#13#10'    TabPageNode2:='
  +'AddDynamicWidget(''TXTabSheet'',GPUEditorForm,TabControlNode,''XGPUTabSheet'
  +'2'','''',''Left'',-1);'#13#10'    TabPageNode3:=AddDynamicWidget(''TXTabShe'
  +'et'',GPUEditorForm,TabControlNode,''XGPUTabSheet3'','''',''Left'',-1);'#13
  +#10'    TabPageNode4:=AddDynamicWidget(''TXTabSheet'',GPUEditorForm,TabContr'
  +'olNode,''XGPUTabSheet4'','''',''Left'',-1);'#13#10'    TabPageNode1.IsDynam'
  +'ic:=false;'#13#10'    TabPageNode2.IsDynamic:=false;'#13#10'    TabPageNode'
  +'3.IsDynamic:=false;'#13#10'    TabPageNode4.IsDynamic:=false;'#13#10'    TX'
  +'TabSheet(TabPageNode1.ScreenObject).Caption:=''GPU Kernel Code'';'#13#10'  '
  +'  TXTabSheet(TabPageNode2.ScreenObject).Caption:=''Generated HTML'';'#13#10
  +'    TXTabSheet(TabPageNode3.ScreenObject).Caption:=''Initial Stage Matrix'''
  +';'#13#10'    TXTabSheet(TabPageNode4.ScreenObject).Caption:=''Pascal Kernel'
  +'s'';'#13#10'    TXTabControl(TabControlNode.ScreenObject).TabIndex:=0;'#13
  +#10#13#10#13#10'    //---------- Tab Page 1 --------------------------------'
  +'--------------------------'#13#10'    VBNode:=AddDynamicWidget(''TXVBox'',G'
  +'PUEditorForm,TabPageNode1,''XGPUVBox'','''',''Left'',-1);'#13#10'    VB:=TX'
  +'VBox(VBNode.ScreenObject);'#13#10'    VB.ContainerHeight:=''100%'';'#13#10
  +'    VB.Border:=false;'#13#10'    VBNode.IsDynamic:=false;'#13#10#13#10'    '
  +'HBTopNode:=AddDynamicWidget(''TXHBox'',GPUEditorForm,VBNode,''XGPUHBox'','''
  +''',''Left'',-1);'#13#10'    HB:=TXHBox(HBTopNode.ScreenObject);'#13#10'    '
  +'HB.ContainerHeight:='''';'#13#10'    HB.Border:=false;'#13#10'    HBTopNode'
  +'.IsDynamic:=false;'#13#10#13#10'    ComboNode:=AddDynamicWidget(''TXComboBo'
  +'x'',GPUEditorForm,HBTopNode,''XGPUComboBox'','''',''Top'',-1);'#13#10'    G'
  +'PUComboBox:=TXComboBox(ComboNode.ScreenObject);'#13#10'    GPUComboBox.Opti'
  +'onList:=''["Graphical (Final)"]'';'#13#10'    GPUComboBox.ItemIndex:=0;'#13
  +#10'    GPUComboBox.LabelPos:=''Left'';'#13#10'    GPUComboBox.LabelText:='''
  +'Select Kernel Code to Edit'';'#13#10'    ComboNode.IsDynamic:=false;'#13#10
  +'    GPUComboBox.myNode.registerEvent(''Change'',@GPUEvents.GPUComboBoxChang'
  +'e);'#13#10#13#10'    EditNode:=AddDynamicWidget(''TXEditBox'',GPUEditorForm'
  +',HBTopNode,''XGPUEditBox'','''',''Top'',-1);'#13#10'    GPUEditBox:=TXEditB'
  +'ox(EditNode.ScreenObject);'#13#10'    GPUEditBox.LabelPos:=''Left'';'#13#10
  +'    GPUEditBox.LabelText:=''Output Dimensions for this Kernel'';'#13#10'   '
  +' GPUEditBox.ReadOnly:=true;'#13#10'    GPUEditBox.Hint:=''X, Y, Z dimension'
  +'s - from latest settings of KernelXDims, KernelYDims, KernelZDims'';'#13#10
  +'    EditNode.IsDynamic:=false;'#13#10'//    GPUEditBox.myNode.registerEvent'
  +'(''Change'',@GPUEvents.GPUEditBoxChange);'#13#10#13#10'    EditorNode:=AddD'
  ,'ynamicWidget(''TXCode'',GPUEditorForm,VBNode,''XGPUCodeEditor'','''',''Left'
  +''',-1);'#13#10'    GPUCodeEditor:=TXCode(EditorNode.ScreenObject);'#13#10' '
  +'   GPUCodeEditor.ContainerHeight:=''90%'';'#13#10'    GPUCodeEditor.Contain'
  +'erWidth:=''100%'';'#13#10'    GPUCodeEditor.MessagesHeight:=''30%'';'#13#10
  +'    GPUCodeEditor.LabelText:='''';'#13#10'    GPUCodeEditor.myNode.register'
  +'Event(''ClickMessage'',@GPUEvents.GPUCodeEditHandleClickMessage);'#13#10'  '
  +'  EditorNode.IsDynamic:=false;'#13#10#13#10'    BtnNode:=AddDynamicWidget('
  +'''TXButton'',GPUEditorForm,MainVBNode,''XGPUDoneBtn'','''',''Left'',-1);'#13
  +#10'    GPUEditorDoneBtn:=TXButton(BtnNode.ScreenObject);'#13#10'    GPUEdit'
  +'orDoneBtn.Caption:=''Done'';'#13#10'    GPUEditorDoneBtn.myNode.registerEve'
  +'nt(''ButtonClick'',@GPUEvents.CloseCodeEditor);'#13#10'    BtnNode.IsDynami'
  +'c:=false;'#13#10#13#10'    //---------- Tab Page 2 ------------------------'
  +'----------------------------------'#13#10'    VBNode2:=AddDynamicWidget(''T'
  +'XVBox'',GPUEditorForm,TabPageNode2,''XGPUVBox2'','''',''Left'',-1);'#13#10
  +'    VB2:=TXVBox(VBNode2.ScreenObject);'#13#10'    VB2.ContainerHeight:=''10'
  +'0%'';'#13#10'    VB2.Border:=false;'#13#10'    VBNode2.IsDynamic:=false;'#13
  +#10#13#10'    CreateGPUMemo(VBNode2);'#13#10#13#10'    BtnNode2:=AddDynamicW'
  +'idget(''TXButton'',GPUEditorForm,VBNode2,''XGPULaunchBtn'','''',''Left'',-1'
  +');'#13#10'    LaunchBtn:=TXButton(BtnNode2.ScreenObject);'#13#10'    Launch'
  +'Btn.Caption:=''Launch HTML in browser'';'#13#10'    LaunchBtn.myNode.regist'
  +'erEvent(''ButtonClick'',@GPUEvents.LaunchGPUHTML);'#13#10'    LaunchBtn.Hin'
  +'t:=''Launch the generated GPU HTML in a separate browser page to aid diagno'
  +'stics'';'#13#10'    BtnNode2.IsDynamic:=false;'#13#10#13#10'    //---------'
  +'- Tab Page 3 ----------------------------------------------------------'#13
  +#10'    VBNode3:=AddDynamicWidget(''TXVBox'',GPUEditorForm,TabPageNode3,''XG'
  +'PUVBox3'','''',''Left'',-1);'#13#10'    VB:=TXVBox(VBNode3.ScreenObject);'
  +#13#10'    VB.ContainerHeight:=''100%'';'#13#10'    VB.Border:=false;'#13#10
  +'    VBNode3.IsDynamic:=false;'#13#10'    TableNode:=AddDynamicWidget(''TX3D'
  +'Table'',GPUEditorForm,VBNode3,''XGPU3DTable'','''',''Left'',-1);'#13#10'   '
  +' GPUTableEditor := TX3DTable(TableNode.ScreenObject);'#13#10'    TableNode.'
  +'IsDynamic:=false;'#13#10'    GPUTableEditor.ContainerWidth:=''99%'';'#13#10
  +'    GPUTableEditor.ContainerHeight:=''99%'';'#13#10#13#10'    //---------- '
  +'Tab Page 4 ----------------------------------------------------------'#13#10
  +'    CreatePasMemo(TabPageNode4);'#13#10#13#10'    {$ifndef JScript}'#13#10
  +'    GPUEditorTopControl:=MainVB;'#13#10'    {$endif}'#13#10#13#10'  end;'#13
  +#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TGPUEventClass.Edit'
  +'orResize(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(TXForm(Sender'
  +'), GPUEditorTopControl);'#13#10'end;'#13#10'procedure TGPUEventClass.Editor'
  +'Destroy(Sender: TObject);'#13#10'begin'#13#10'end;'#13#10#13#10'{$endif}'#13
  +#10#13#10'procedure SaveThisCodeBlock(idx:integer);'#13#10'var'#13#10'  AllK'
  +'ernels:TAnimCodeArray;'#13#10'  AllCode:String;'#13#10'  i:integer;'#13#10
  +'begin'#13#10'  AllKernels:=TXGPUCanvas(EditingGPUNode.ScreenObject).FetchAl'
  +'lAnimCode;'#13#10'  // Re-concatenate the kernel code blocks'#13#10'  for i'
  +':=0 to length(AllKernels)-1 do'#13#10'  begin'#13#10'    if i<>idx then'#13
  +#10'    begin'#13#10'      AllCode:=AllCode+AllKernels[i].CodeBlock.Text'#13
  +#10'    end'#13#10'    else'#13#10'    begin'#13#10'      AllCode:=AllCode+G'
  +'PUCodeEditor.ItemValue;'#13#10'    end;'#13#10#13#10'    if i<length(AllKer'
  +'nels)-1 then'#13#10'      AllCode:=AllCode+eventListdelimiter;'#13#10'  end'
  +';'#13#10'  EditAttributeValue(EditingGPUNode,''AnimationCode'',AllCode);'#13
  +#10'end;'#13#10#13#10'procedure TGPUEventClass.CloseCodeEditor(e:TEventStatu'
  +'s;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  // carefu'
  +'l here... if the compile has failed the editor may be showing the whole gpu'
  +' code unit,'#13#10'  // and not just the user code from the AnimationCode p'
  +'roperty.'#13#10'  TXGPUCanvas(EditingGPUNode.ScreenObject).Active:=false;'
  +#13#10#13#10'  GPUEditorForm.Showing:=''No'';'#13#10'  GPUMemo.ItemValue:='''
  +''';  //!! Lazarus bug? Can''t reopen the form (crashes) if this is pre-popu'
  +'lated with a long string.'#13#10#13#10'  if GPUEditorMode=''Animation'' the'
  +'n'#13#10'  begin'#13#10'    // Update the property value ...         !! BUT'
  +' NOT IF THE WHOLE UNIT IS ON DISPLAY>>>>>'#13#10'    SaveThisCodeBlock(GPUC'
  +'omboBox.ItemIndex);'#13#10'    // and the init Stage Array'#13#10'    Editi'
  +'ngGPUNode.SetAttributeValue(''InitStageData'',GPUTableEditor.Table3DData);'
  +#13#10'  end;'#13#10'  // Clear the 3D table data'#13#10'  GPUTableEditor.Ta'
  +'ble3DData:=''[[[0]]]'';'#13#10'//  if ObjectInspectorSelectedNavTreeNode<>n'
  +'il then'#13#10'//    RefreshObjectInspector(ObjectInspectorSelectedNavTreeN'
  ,'ode);'#13#10'end;'#13#10#13#10'procedure TGPUEventClass.GPUCodeEditHandleCl'
  +'ickMessage(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'var linenumber:integer;'#13#10'    SelectedLine,FileName,CharPos:string;'#13
  +#10'    FoundLineNum:Boolean;'#13#10'    LineNum:String;'#13#10'    {$ifdef '
  +'JScript}'#13#10'    Messages:TStringList;'#13#10'    {$endif}'#13#10'begin'
  +#13#10'   //showmessage(''GPUCodeEditHandleClickMessage ''+ nodeID + '' ''+m'
  +'yValue);'#13#10'  {$ifndef JScript}'#13#10'  linenumber:=GPUCodeEditor.TheM'
  +'essages.CaretPos.Y;'#13#10'  SelectedLine:= GPUCodeEditor.TheMessages.lines'
  +'[linenumber];'#13#10'  GPUCodeEditor.GetFileNameLineNumAndCharPos(FoundLine'
  +'Num,SelectedLine, ''('',FileName,LineNum,CharPos );'#13#10'  {$else}'#13#10
  +'  // Find the message line thats been clicked on'#13#10'  try'#13#10'  line'
  +'number:=StrToInt(myValue);'#13#10'  except'#13#10'    On E : EConvertError '
  +'do'#13#10'    EXIT;'#13#10'  end;'#13#10'  Messages:=TStringList.Create;'#13
  +#10'  Messages.Text:=GPUCodeEditor.MessageLines;'#13#10'  if linenumber>Mess'
  +'ages.Count then'#13#10'    EXIT;'#13#10'  SelectedLine:= Messages[linenumbe'
  +'r-1];'#13#10'  Messages.Free;'#13#10#13#10'  // Find the indicated line num'
  +'ber from the message'#13#10'  GPUCodeEditor.GetFileNameLineNumAndCharPos(Fo'
  +'undLineNum,SelectedLine, ''('',FileName,LineNum,CharPos );'#13#10#13#10'  /'
  +'/showmessage(''FileName=''+FileName+'' Indicated Linenum is ''+linenum);'#13
  +#10'  {$endif}'#13#10#13#10'  //load the indicated code block into the code '
  +'edit box'#13#10'  if trim(FileName)<>'''' then'#13#10'  begin'#13#10'    Sh'
  +'owGPUKernel(EditingGPUNode,FileName,linenumber,CharPos);'#13#10'  end;'#13
  +#10'end;'#13#10#13#10'procedure TGPUEventClass.LaunchGPUHTML(e:TEventStatus;'
  +'nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  myHTML:String'
  +';'#13#10'begin'#13#10'  if GPUMemo.ItemValue<>'''' then'#13#10'  begin'#13
  +#10'    myHTML:=GPUMemo.ItemValue;'#13#10'    TXGPUCanvas(EditingGPUNode.Scr'
  +'eenObject).LaunchHTML(''Data'',myHTML,''GPU Diagnostic'');'#13#10'  end;'#13
  +#10'end;'#13#10#13#10'procedure TGPUEventClass.TabChange(e:TEventStatus;node'
  +'ID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  if GPUEditorTab'
  +'Control.TabIndex=1 then'#13#10'    GPUMemo.ItemValue:=TXGPUCanvas(EditingGP'
  +'UNode.ScreenObject).GeneratedHTML'#13#10'  else if GPUEditorTabControl.TabI'
  +'ndex=3 then'#13#10'    GPUPasMemo.ItemValue:=TXGPUCanvas(EditingGPUNode.Scr'
  +'eenObject).GeneratedPascalUnit;'#13#10'  {$ifndef JScript}'#13#10'  //GPUEv'
  +'ents.EditorResize(GPUEditorForm);'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'procedure TGPUEventClass.GPUComboBoxChange(e:TEventStatus;nodeID: AnsiStrin'
  +'g; myValue: AnsiString);'#13#10'var'#13#10'  AllKernels:TAnimCodeArray;'#13
  +#10'begin'#13#10'  // Select the given Kernel code for display in the editor'
  +'.'#13#10'  if (EditingGPUNode<>nil) then'#13#10'  begin'#13#10'    // Save '
  +'the current code block.'#13#10'    //showmessage(''saving prior index ''+in'
  +'ttostr(GPUComboBox.PriorIndex));'#13#10'    if (GPUComboBox.PriorIndex>-1) '
  +'then'#13#10'      SaveThisCodeBlock(GPUComboBox.PriorIndex);'#13#10'    // '
  +'Fetch the required code block'#13#10'    AllKernels:=TXGPUCanvas(EditingGPU'
  +'Node.ScreenObject).FetchAllAnimCode;'#13#10'    GPUCodeEditor.ItemValue:=Al'
  +'lKernels[GPUComboBox.ItemIndex].CodeBlock.Text;'#13#10'    if  GPUComboBox.'
  +'ItemIndex>0 then'#13#10'      if GPUComboBox.ItemIndex<>1 then'#13#10'     '
  +'   GPUEditBox.ItemValue:=TXGPUCanvas(EditingGPUNode.ScreenObject).KernelDim'
  +'sString(GPUComboBox.ItemIndex-2)'#13#10'      else'#13#10'        GPUEditBo'
  +'x.ItemValue:=''n/a'''#13#10'    else'#13#10'      GPUEditBox.ItemValue:=''*'
  +' pixelmap size *'';'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure ShowGP'
  +'UEditor(GPUNode:TDataNode;TabPage:integer);'#13#10'var'#13#10'  AllKernels:'
  +'TAnimCodeArray;'#13#10'begin'#13#10'  // Edit the AnimationCode in a TXGPUC'
  +'anvas component using the dedicated popup editor...'#13#10'  // the animati'
  +'on code may consist of several kernel procedures.'#13#10'  // These are del'
  +'imited by the EventListDelimiter string.'#13#10'  // The GPU Code Editor ne'
  +'eds to show the first kernel proc.'#13#10'  AllKernels:=TXGPUCanvas(GPUNode'
  +'.ScreenObject).FetchAllAnimCode;'#13#10'  GPUCodeEditor.ItemValue:=AllKerne'
  +'ls[0].CodeBlock.Text;'#13#10'  GPUCodeEditor.MessageLines:='''';'#13#10'  G'
  +'PUCodeEditor.MessagesHeight:=''1'';'#13#10'  GPUEditBox.ItemValue:=''* pixe'
  +'lmap size *'';'#13#10#13#10'  //   GPUMemo.ItemValue:=TXGPUCanvas(ObjectIns'
  +'pectorSelectedCodeTreeNode.ScreenObject).GeneratedHTML;'#13#10'  //!! Lazar'
  +'us bug?     Have to populate GPUMemo later (eg. on tab change), otherwise t'
  +'he popup form crashes.'#13#10'  //!! In fact, popup is not happy unless we '
  +'first delete the memo components, and reinstate them again...'#13#10'  Dele'
  +'teNode(VBNode2,MemoNode);'#13#10'  DeleteNode(TabPageNode4,PasMemoNode);'#13
  ,#10'  CreateGPUMemo(VBNode2);'#13#10'  CreatePasMemo(TabPageNode4);'#13#10' '
  +' //!!'#13#10#13#10'  EditingGPUNode:=GPUNode;'#13#10'  GPUEditorMode:=''Ani'
  +'mation'';'#13#10'  GPUComboBox.OptionList:=TXGPUCanvas(EditingGPUNode.Scree'
  +'nObject).BuildKernelList;'#13#10'  GPUComboBox.ItemIndex:=0;'#13#10'  GPUCo'
  +'mboBox.PriorIndex:=0;'#13#10'  XGPUEditor.GPUCodeEditor.ReadOnly:=false;'#13
  +#10#13#10'  GPUEditorTabControl.TabIndex:=TabPage;'#13#10#13#10'  //tmp:=Edi'
  +'tingGPUNode.GetAttribute(''InitStageData'',true).AttribValue;'#13#10'  GPUT'
  +'ableEditor.Table3DData:=''[[[1]]]'';'#13#10'  GPUTableEditor.Table3DData:=E'
  +'ditingGPUNode.GetAttribute(''InitStageData'',true).AttribValue;'#13#10'  {$'
  +'ifndef JScript}'#13#10'  GPUTableEditor.ResequenceComponents;'#13#10'  {$en'
  +'dif}'#13#10#13#10'  GPUEditorForm.Showing:=''Modal'';'#13#10#13#10'end;'#13
  +#10'{$ifndef JScript}'#13#10'procedure TAsyncProcs.ShowGPUKernelAsync(thedat'
  +'a:PtrInt);'#13#10'var'#13#10'  ReceivedQueueRec: TQueueKRec;'#13#10'begin'
  +#13#10'  ReceivedQueueRec := PQueueKRec(theData)^;'#13#10'  XGPUEditor.ShowG'
  +'PUKernel(ReceivedQueueRec.GPUNode,ReceivedQueueRec.filename,ReceivedQueueRe'
  +'c.targetLine,ReceivedQueueRec.CharPos);'#13#10'end;'#13#10#13#10'procedure '
  +'ShowGPUKernelLater(GPUNode:TDataNode;filename:string;targetLine:integer;Cha'
  +'rPos:String);'#13#10'var'#13#10'  QueueRecToSend: PQueueKRec;'#13#10'begin'
  +#13#10'  New(QueueRecToSend);'#13#10'  QueueRecToSend^.GPUNode:=GPUNode;'#13
  +#10'  QueueRecToSend^.filename:=filename;'#13#10'  QueueRecToSend^.targetLin'
  +'e:=targetLine;'#13#10'  QueueRecToSend^.CharPos:=CharPos;'#13#10#13#10'  Ap'
  +'plication.QueueAsyncCall(@AsyncProcs.ShowGPUKernelAsync,PtrInt(QueueRecToSe'
  +'nd)); // put msg into queue that will be processed from the main thread aft'
  +'er all other messages'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure Sh'
  +'owGPUKernel(GPUNode:TDataNode;filename:string;targetLine:integer;CharPos:St'
  +'ring);'#13#10'var'#13#10'  bits:TStringList;'#13#10'  targetKernel:integer;'
  +#13#10'  AllKernels:TAnimCodeArray;'#13#10'  i:integer;'#13#10'  tmp:string;'
  +#13#10'begin'#13#10'  if (GPUNode<>nil) then'#13#10'  begin'#13#10'    Editi'
  +'ngGPUNode:=GPUNode;'#13#10'  end;'#13#10'  //// FileName is NodeName.num.An'
  +'imationCode  If num is zero, this is the final kernel, otherwise one of the'
  +' stage kernels.'#13#10'  // FileName is NodeName__num.inc  If num is zero, '
  +'this is the final (graphical) kernel, otherwise one of the stage kernels.'
  +#13#10'  // Set the comboBox to the relevant item.'#13#10'  //bits:=stringsp'
  +'lit(FileName,EditingGPUNode.NodeName+''.'');'#13#10'  bits:=stringsplit(Fil'
  +'eName,EditingGPUNode.NodeName+''__'');'#13#10'  for i:=0 to bits.count-1 do'
  +#13#10'  begin'#13#10'    tmp:=bits[i];'#13#10'  end;'#13#10'  if (bits.Coun'
  +'t=2)'#13#10'  and (bits[1]<>'''') then'#13#10'  begin'#13#10'    bits:=stri'
  +'ngsplit(bits[1],''.'');'#13#10'    targetKernel:=strtoint(bits[0]);'#13#10
  +'    AllKernels:=TXGPUCanvas(EditingGPUNode.ScreenObject).FetchAllAnimCode;'
  +#13#10'    GPUComboBox.OptionList:=TXGPUCanvas(EditingGPUNode.ScreenObject).'
  +'BuildKernelList;'#13#10'    GPUComboBox.ItemIndex:=targetKernel;'#13#10'   '
  +' GPUComboBox.PriorIndex:=targetKernel;'#13#10'    GPUCodeEditor.ItemValue:='
  +'AllKernels[targetKernel].CodeBlock.Text;'#13#10#13#10'    GPUCodeEditor.Rea'
  +'dOnly:=false;'#13#10'    GPUEditorMode:=''Animation'';'#13#10#13#10'    {$i'
  +'fndef JScript}'#13#10'    // set cursor position'#13#10'    if (CharPos<>'''
  +''') then'#13#10'    begin'#13#10'      GPUCodeEditor.GoToLineCharPos(target'
  +'Line,StrToInt(CharPos));'#13#10'    end;'#13#10'    {$endif}'#13#10'    if '
  +'(GPUEditorForm.Showing=''No'') then'#13#10'    begin'#13#10'      GPUCodeEd'
  +'itor.MessageLines:='''';'#13#10'      GPUCodeEditor.MessagesHeight:=''1'';'
  +#13#10'      GPUEditorForm.Showing:=''Modal'';'#13#10'    end;'#13#10'    {$'
  +'ifdef JScript}'#13#10'    // set cursor position'#13#10'    if (CharPos<>'''
  +''') then'#13#10'    begin'#13#10'      GPUCodeEditor.GoToLineCharPos(target'
  +'Line,StrToInt(CharPos));'#13#10'    end;'#13#10'    {$endif}'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'    showmessage(''This code is not avail'
  +'able for edit'');'#13#10'  end;'#13#10'  bits.Free;'#13#10'end;'#13#10#13#10
  +'begin'#13#10'  GPUEvents:=TGPUEventClass.Create;'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('xcomposite','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XComposite;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13
  +#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, SysUtils, TypInfo,'
  +' StringUtils, NodeUtils, XIFrame,'#13#10'    UtilsJSCompile, XForm, XCode, '
  +'XButton, XVBox, XTabControl, XMemo, EventsInterface,'#13#10'    XCompositeI'
  +'ntf,'#13#10'  {$ifndef JScript}'#13#10'    LResources, Forms, Controls, Std'
  +'Ctrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls,'#13#10'    LazsUt'
  +'ils, LCLIntf,'#13#10'    LCLType, gettext,'#13#10'  {$else}'#13#10'    HTML'
  +'Utils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events;'#13#10#13#10#13#10
  +'type'#13#10'  TXComposite = class(TWrapperPanel)'#13#10'  private'#13#10'  '
  +'  { Private declarations }'#13#10'    function GetInheritColor:Boolean;'#13
  +#10'    function GetCompositeType:String;'#13#10'    function GetSourceStrin'
  +'g:String;'#13#10#13#10'    procedure SetInheritColor(AValue:Boolean);'#13#10
  +'    procedure SetCompositeType(AValue:String);'#13#10'    procedure SetSour'
  +'ceString(AValue:String);'#13#10#13#10'    procedure SetMyEventTypes;'#13#10
  +#13#10'  protected'#13#10'    { Protected declarations }'#13#10'  public'#13
  +#10'    { Public declarations }'#13#10'    {$ifndef JScript}'#13#10'    proc'
  +'edure DoCompositeConstructor(TheOwner:TComponent);'#13#10'    constructor C'
  +'reate(TheOwner: TComponent); override;'#13#10'    constructor Create(TheOwn'
  +'er: TComponent;IsDynamic:Boolean); override;'#13#10'    destructor Destroy;'
  +' override;'#13#10'    {$else}'#13#10'    constructor Create(MyForm:TForm;No'
  +'deName,NameSpace:String);'#13#10'    {$endif}'#13#10#13#10'  published'#13
  +#10'    { Published declarations }'#13#10#13#10'    // Properties defined fo'
  +'r this class...'#13#10'    property InheritColor:Boolean read GetInheritCol'
  +'or write SetInheritColor;'#13#10'    property CompositeType:String read Get'
  +'CompositeType write SetCompositeType;'#13#10'    property SourceString:Stri'
  +'ng read GetSourceString write SetSourceString;'#13#10'  end;'#13#10#13#10' '
  +' procedure CompositePropertyChanged(myNode:TDataNode; propName:String);'#13
  +#10'  function FindCompositeContainer(StartNode:TDataNode):TdataNode;'#13#10
  +#13#10'implementation'#13#10#13#10'const MyNodeType=''TXComposite'';'#13#10
  +'var'#13#10'  myDefaultAttribs:TDefaultAttributesArray;'#13#10#13#10'procedu'
  +'re TXComposite.SetMyEventTypes;'#13#10'begin'#13#10'  MyEventTypes.Add(''Cl'
  +'ick'');'#13#10#13#10'end;'#13#10#13#10#13#10#13#10'{$ifndef JScript}'#13#10
  +#13#10'function CreateCompositeWidget(ParentNode:TDataNode;ScreenObjectName,'
  +'NameSpace:string;position:integer;Alignment:String):TDataNode;'#13#10'var'
  +#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10'  NewNode:=CreateDynamicLazW'
  +'idget(''TXComposite'',ParentNode.MyForm,ParentNode,ScreenObjectName,NameSpa'
  +'ce,Alignment,position);'#13#10'  result:=NewNode;'#13#10'end;'#13#10#13#10
  +'procedure TXComposite.DoCompositeConstructor(TheOwner:TComponent);'#13#10'b'
  +'egin'#13#10'  Caption:='''';'#13#10'  Constraints.MinHeight:=20;'#13#10'  C'
  +'onstraints.MinWidth:=20;'#13#10#13#10'  self.BorderSpacing.Around:=0;'#13#10
  +'  self.ParentColor:=false;'#13#10'  self.IsContainer:=false;'#13#10#13#10' '
  +' self.SetMyEventTypes;'#13#10'  CreateComponentDataNode2(self,MyNodeType,my'
  +'DefaultAttribs, self.myEventTypes, TheOwner,true);'#13#10#13#10'  AlignChil'
  +'drenVertical:=true;'#13#10'end;'#13#10#13#10'constructor TXComposite.Create'
  +'(TheOwner:TComponent);'#13#10'begin'#13#10'  inherited Create(TheOwner,fals'
  +'e);'#13#10'  DoCompositeConstructor(TheOwner);'#13#10'end;'#13#10#13#10'con'
  +'structor TXComposite.Create(TheOwner:TComponent;IsDynamic:Boolean);'#13#10
  +'begin'#13#10'  inherited Create(TheOwner,IsDynamic);'#13#10'  DoCompositeCo'
  +'nstructor(TheOwner);'#13#10'end;'#13#10#13#10'destructor TXComposite.Destro'
  +'y;'#13#10'begin'#13#10'  if (not (csDesigning in componentState)) then'#13
  +#10'  begin'#13#10'    myControl.Free;'#13#10'  end;'#13#10'  inherited Dest'
  +'roy;'#13#10'end;'#13#10#13#10'{$else} //JScript'#13#10#13#10'constructor TX'
  +'Composite.Create(MyForm:TForm;NodeName,NameSpace:String);'#13#10'begin'#13
  +#10'  inherited Create(NodeName,NameSpace);'#13#10'  self.NodeType:=''TXComp'
  +'osite'';'#13#10'  self.MyForm:=MyForm;'#13#10'  self.IsContainer:=false;'#13
  +#10#13#10'  self.SetMyEventTypes;'#13#10#13#10'  SetNodePropDefaults(self,my'
  +'DefaultAttribs);'#13#10#13#10'end;'#13#10#13#10'function CreateCompositeWid'
  +'get(MyNode, ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position'
  ,':integer;Alignment:String):TDataNode;'#13#10'var'#13#10'  OnClickString:Str'
  +'ing;'#13#10'begin'#13#10#13#10'  OnClickString:=''onclick="event.stopPropag'
  +'ation();pas.Events.handleEvent(null,''''Click'''',''''''+ScreenObjectName+'
  +''''''',''''''+NameSpace+'''''', '''''''');" '';'#13#10#13#10'  asm'#13#10' '
  +' try{'#13#10'      var wrapper = pas.HTMLUtils.CreateWrapperDiv(MyNode,Pare'
  +'ntNode,''UI'',ScreenObjectName,NameSpace,$impl.MyNodeType,position);'#13#10
  +#13#10'      var HTMLString='''';'#13#10'      var wrapperid = NameSpace+Scr'
  +'eenObjectName;'#13#10'      var MyObjectName=wrapperid+''Contents'';'#13#10
  +#13#10'      HTMLString = ''<div  id="''+MyObjectName+''" class="vboxNoStret'
  +'ch ''+NameSpace+ScreenObjectName+''" ''  +'#13#10'                     '' s'
  +'tyle="height:100%;width:100%; "'' +'#13#10'                     OnClickStri'
  +'ng +'#13#10'                     ''></div>  '';'#13#10#13#10'      var wrap'
  +'per=document.getElementById(wrapperid);'#13#10'      wrapper.insertAdjacent'
  +'HTML(''beforeend'', HTMLString);'#13#10#13#10'  }catch(err) { alert(err.mes'
  +'sage+''  in XVBox.CreateVHBox'');}'#13#10'  end;'#13#10'  MyNode.ScreenObje'
  +'ct:=MyNode;'#13#10#13#10'  RefreshComponentProps(myNode);'#13#10#13#10'  re'
  +'sult:=myNode;'#13#10'end;'#13#10#13#10#13#10'function CreateinterfaceObj(My'
  +'Form:TForm;NodeName,NameSpace:String):TObject;'#13#10'begin'#13#10'  result'
  +':=TObject(TXComposite.Create(MyForm,NodeName,NameSpace));'#13#10'end;'#13#10
  +#13#10'{$endif}'#13#10'function TXComposite.GetInheritColor:Boolean;'#13#10
  +'begin'#13#10'  result:=myStrToBool(myNode.GetAttribute(''InheritColor'',tru'
  +'e).AttribValue);'#13#10'end;'#13#10#13#10'procedure TXComposite.SetInheritC'
  +'olor(AValue:Boolean);'#13#10'var'#13#10'  clr:String;'#13#10'  parentNode:T'
  +'DataNode;'#13#10'begin'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10' '
  +'   myNode.SetAttributeValue(''InheritColor'',myBoolToStr(AValue),''Boolean'
  +''');'#13#10'    parentNode:=myNode.NodeParent;'#13#10'    if parentNode<>ni'
  +'l then'#13#10'    begin'#13#10'      if AValue=true then'#13#10'      begin'
  +#13#10'        clr:= parentNode.GetAttribute(''BgColor'',true).AttribValue;'
  +#13#10'        myNode.SetAttributeValue(''BgColor'',clr,''Color'');'#13#10' '
  +'       {$ifndef JScript}'#13#10'        self.ParentColor:=true;'#13#10'    '
  +'    {$else}'#13#10'        asm'#13#10'          var ob = document.getElemen'
  +'tById(this.NameSpace+this.NodeName);'#13#10'          if (ob!=null) {'#13#10
  +'            if (AValue==true ) {'#13#10'               ob.style.backgroundC'
  +'olor=''inherit'';'#13#10'          } }'#13#10'        end;'#13#10'        {'
  +'$endif}'#13#10'      end'#13#10'      else'#13#10'      begin'#13#10'      '
  +'  clr:= myNode.GetAttribute(''BgColor'',true).AttribValue;'#13#10'        {'
  +'$ifndef JScript}'#13#10'        self.ParentColor:=false;'#13#10'        sel'
  +'f.Color:=HexRGBToColor(clr);'#13#10'        {$else}'#13#10'        asm'#13
  +#10'          var ob = document.getElementById(this.NameSpace+this.NodeName)'
  +';'#13#10'          if (ob!=null) {'#13#10'            if (AValue==true ) {'
  +#13#10'               ob.style.backgroundColor=clr;'#13#10'          } }'#13
  +#10'        end;'#13#10'        {$endif}'#13#10'      end;'#13#10'    end;'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'function TXComposite.GetCompositeType'
  +':String;'#13#10'begin'#13#10'  result:=MyNode.getAttribute(''CompositeType'
  +''',true).AttribValue;'#13#10'end;'#13#10#13#10'function TXComposite.GetSour'
  +'ceString:String;'#13#10'begin'#13#10'  result:=MyNode.getAttribute(''Source'
  +'String'',true).AttribValue;'#13#10'end;'#13#10#13#10'procedure TXComposite.'
  +'SetCompositeType(AValue:String);'#13#10'begin'#13#10'  myNode.SetAttributeV'
  +'alue(''CompositeType'',AValue);'#13#10'end;'#13#10#13#10'procedure TXCompos'
  +'ite.SetSourceString(AValue:String);'#13#10'begin'#13#10'  myNode.SetAttribu'
  +'teValue(''SourceString'',AValue);'#13#10'end;'#13#10#13#10#13#10'procedure '
  +'CompositePropertyChanged(myNode:TDataNode; propName:String);'#13#10'var'#13
  +#10'  TargetNode:TDataNode;'#13#10'  newValue:String;'#13#10'begin'#13#10'  '
  +'if (myNode.NodeType=''TXCompositeIntf'')'#13#10'  or (myNode.NodeType=''TXC'
  +'omposite'') then'#13#10'  begin'#13#10'    newValue:=myNode.GetAttribute(pr'
  +'opName,false).AttribValue;'#13#10'    if (myNode.NameSpace<>'''') then'#13
  +#10'    begin'#13#10'       // Expose new property value to the outside, for'
  +' an interface definition'#13#10'       if myNode.NodeType=''TXCompositeIntf'
  +''' then'#13#10'       begin'#13#10'          // find the composite containe'
  +'r of this namespace'#13#10'          TargetNode:=FindCompositeContainer(myN'
  +'ode);'#13#10'          // set the equivalent property'#13#10'          if T'
  +'argetNode<>nil then'#13#10'            TargetNode.SetAttributeValue(propNam'
  +'e,newValue,'''');'#13#10'       end;'#13#10'    end'#13#10'    else if myNo'
  +'de.NodeType=''TXComposite'' then'#13#10'    begin'#13#10'      // update th'
  ,'e interface property within the namespace'#13#10'      TargetNode := FindIn'
  +'terfaceNode(myNode,myNode.NodeName,PropName);'#13#10'      if TargetNode<>n'
  +'il then'#13#10'         EditAttributeValue(TargetNode,propName,newValue);'
  +#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'function FindComposit'
  +'eContainer(StartNode:TDataNode):TdataNode;'#13#10'var'#13#10'  SearchNode, '
  +'PNode, CompositeNode:TDataNode;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  '
  +'// find the container of this composite namespace'#13#10'  // work up the p'
  +'arent nodes until the namespace changes'#13#10'   ok:=false;'#13#10'   Sear'
  +'chNode:=StartNode;'#13#10'   while (ok=false) do'#13#10'   begin'#13#10'   '
  +'  PNode:=SearchNode.NodeParent;'#13#10'     if PNode<>nil then'#13#10'     '
  +'begin'#13#10'       if (PNode.NameSpace=StartNode.NameSpace) then'#13#10'  '
  +'     begin'#13#10'         ok:=false;'#13#10'         SearchNode:=PNode;'#13
  +#10'       end'#13#10'       else'#13#10'       begin'#13#10'         ok:=tr'
  +'ue;'#13#10'         CompositeNode:=PNode;'#13#10'       end;'#13#10'     en'
  +'d'#13#10'     else'#13#10'       ok:=true;  // will return nil'#13#10'   en'
  +'d;'#13#10'   result:=CompositeNode;'#13#10'end;'#13#10#13#10'begin'#13#10' '
  +' AddWrapperDefaultAttribs(myDefaultAttribs);'#13#10'  AddDefaultAttribute(m'
  +'yDefaultAttribs,''ContainerWidth'',''String'','''','''',false);'#13#10'  Ad'
  +'dDefaultAttribute(myDefaultAttribs,''ContainerHeight'',''String'','''','''''
  +',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Border'',''Boolean'
  +''',''True'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Sp'
  +'acingAround'',''Integer'',''0'','''',false);'#13#10'  AddDefaultAttribute(m'
  +'yDefaultAttribs,''CompositeType'',''String'','''','''',true);'#13#10'  AddD'
  +'efaultAttribute(myDefaultAttribs,''BgColor'',''Color'',''#FFFFFF'','''',fal'
  +'se);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''InheritColor'',''Boole'
  +'an'',''False'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,'
  +'''SourceString'',''String'','''','''',true);'#13#10'  AddDefaultAttribute(m'
  +'yDefaultAttribs,''LabelPos'',''String'','''','''',true);'#13#10'  AddDefaul'
  +'tAttribute(myDefaultAttribs,''LabelText'',''String'','''','''',true);'#13#10
  +'  AddDefaultsToTable(MyNodeType,myDefaultAttribs);'#13#10#13#10'  AddAttrib'
  +'Options(MyNodeType,''Alignment'',AlignmentOptions);'#13#10'  AddAttribOptio'
  +'ns(MyNodeType,''LabelPos'',LabelPosOptions);'#13#10'  {$IFndef JScript}'#13
  +#10'  RegisterClass(TXComposite);'#13#10'  AddNodeFuncLookup(MyNodeType,@Cre'
  +'ateCompositeWidget);'#13#10'  {$else}'#13#10'  AddNodeFuncLookup(MyNodeType'
  +',@CreateInterfaceObj,@CreateCompositeWidget);'#13#10'  {$endif}'#13#10#13#10
  +#13#10'end.'#13#10
]);
LazarusResources.Add('xcompositeintf','PAS',[
  'unit XCompositeIntf;'#13#10#13#10'//Non-visual component to provide dynamic '
  +'interface properties and events when encapsulating a system.'#13#10'// Also'
  +' see XComposite.pas.'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$'
  +'H+}'#13#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'    Cla'
  +'sses, SysUtils, NodeUtils,StringUtils,'#13#10'    {$ifndef JScript}'#13#10
  +'    Forms, Controls, StdCtrls, LResources, Graphics, Dialogs, ExtCtrls, Pro'
  +'pEdits, RTTICtrls,'#13#10'    LazsUtils,'#13#10'    {$Else}'#13#10'    HTML'
  +'Utils,'#13#10'    {$endif}'#13#10'    WrapperPanel;'#13#10#13#10#13#10'type'
  +#13#10'    {$ifndef JScript}'#13#10'    TXCompositeIntf = class(TComponent)'
  +#13#10'    {$Else}'#13#10'    TXCompositeIntf = class(TWrapperPanel)'#13#10
  +'    {$endif}'#13#10'  private'#13#10'  {$ifndef JScript}'#13#10'  FmyNode:T'
  +'DataNode;'#13#10'  FmyControl:TControl;'#13#10'  {$endif}'#13#10'    { Priv'
  +'ate declarations }'#13#10#13#10'    procedure SetMyEventTypes;'#13#10#13#10
  +'  protected'#13#10'    { Protected declarations }'#13#10'  {$ifndef JScript'
  +'}'#13#10'  function GetName:string;'#13#10'  procedure SetMyName(AValue:str'
  +'ing);'#13#10'  {$endif}'#13#10'  public'#13#10'    { Public declarations }'
  +#13#10'    {$ifndef JScript}'#13#10'    procedure DoConstructor(TheOwner:TCo'
  +'mponent;IsDynamic:Boolean);'#13#10'    constructor Create(TheOwner: TCompon'
  +'ent); override;'#13#10'    constructor Create(TheOwner: TComponent;IsDynami'
  +'c:Boolean);'#13#10'    destructor Destroy; override;'#13#10'    {$else}'#13
  +#10'    constructor Create(MyForm:TForm;NodeName,NameSpace:String);'#13#10' '
  +'   {$endif}'#13#10#13#10'    function PropertyNameIsUnique(NewName:String):'
  +'Boolean;'#13#10'    function EventNameIsUnique(NewName:String):Boolean;'#13
  +#10#13#10'  published'#13#10'    { Published declarations }'#13#10'    {$ifn'
  +'def JScript}'#13#10'    property myControl:TControl read FmyControl write F'
  +'myControl;'#13#10'    property Name: String read GetName write SetMyName;'
  +#13#10'    property myNode:TDataNode read FmyNode write FmyNode;'#13#10'    '
  +'{$endif}'#13#10#13#10'    // Properties defined for this class...'#13#10'  '
  +'end;'#13#10#13#10#13#10'implementation'#13#10#13#10'var'#13#10'  myDefaultA'
  +'ttribs:TDefaultAttributesArray;'#13#10#13#10'procedure TXCompositeIntf.SetM'
  +'yEventTypes;'#13#10'begin'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10
  +#13#10'procedure TXCompositeIntf.DoConstructor(TheOwner:TComponent;IsDynamic'
  +':Boolean);'#13#10'var'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10#13#10
  +'    NewNode:=TDataNode.Create(''NV'',self.Name,'''',''TXCompositeIntf'',fal'
  +'se);'#13#10'    NewNode.ScreenObject:=self;'#13#10'    NewNode.MyEventTypes'
  +':=TStringList.Create;'#13#10'    SetLength(NewNode.myEventHandlers,0);'#13
  +#10'    NewNode.MyForm:=TForm(TheOwner);'#13#10'    NewNode.IsDynamic:=IsDyn'
  +'amic;'#13#10'    self.myNode:=NewNode;'#13#10'    // temporarily set as chi'
  +'ld of root node, so that name uniqueness checks can be done during design'
  +#13#10'    AddChildToParentNode(SystemNodetree,NewNode,-1);'#13#10#13#10'   '
  +' AddDefaultAttribs(self,NewNode,mydefaultAttribs);'#13#10#13#10'end;'#13#10
  +#13#10'constructor TXCompositeIntf.Create(TheOwner:TComponent);'#13#10'begin'
  +#13#10'  inherited Create(TheOwner);'#13#10'  DoConstructor(TheOwner,false);'
  +#13#10'end;'#13#10#13#10'constructor TXCompositeIntf.Create(TheOwner:TCompon'
  +'ent;IsDynamic:Boolean);'#13#10'begin'#13#10'  inherited Create(TheOwner);'
  +#13#10'  DoConstructor(TheOwner,IsDynamic);'#13#10'end;'#13#10#13#10'destruc'
  +'tor TXCompositeIntf.Destroy;'#13#10'begin'#13#10'  //ClearLocalStore(KeyNam'
  +'e);'#13#10'  inherited Destroy;'#13#10'end;'#13#10#13#10'function TXComposi'
  +'teIntf.GetName:string;'#13#10'begin'#13#10'  result:=inherited Name;'#13#10
  +'end;'#13#10#13#10'procedure TXCompositeIntf.SetMyName(AValue:string);'#13#10
  +'begin'#13#10'  inherited Name:=AValue;'#13#10#13#10'  if  (csLoading in com'
  +'ponentState) then'#13#10'    if myNode<>nil then'#13#10'      myNode.NodeNa'
  +'me:=AValue;'#13#10'end;'#13#10#13#10'function CreateIntf(ParentNode:TDataNo'
  +'de;ScreenObjectName,NameSpace:string;position:integer;Alignment:String):TDa'
  +'taNode;'#13#10'var'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10'  NewNod'
  +'e:=CreateDynamicLazWidget(''TXCompositeIntf'',ParentNode.MyForm,ParentNode,'
  +'ScreenObjectName,NameSpace,Alignment,position);'#13#10'  result:=NewNode;'
  +#13#10'end;'#13#10#13#10'{$else}'#13#10#13#10'constructor TXCompositeIntf.Cr'
  +'eate(MyForm:TForm;NodeName,NameSpace:String);'#13#10'begin'#13#10'  inherit'
  +'ed Create(NodeName,NameSpace);'#13#10'  self.NodeClass:=''NV'';'#13#10'  se'
  +'lf.NodeType:=''TXCompositeIntf'';'#13#10'  self.MyForm:=MyForm;'#13#10#13#10
  +'  self.myNode.MyEventTypes:=TStringList.Create;'#13#10'  self.IsContainer:='
  +'false;'#13#10'  SetNodePropDefaults(self,myDefaultAttribs);'#13#10#13#10'en'
  +'d;'#13#10#13#10'function CreateIntf(MyNode, ParentNode:TDataNode;ScreenObje'
  ,'ctName,NameSpace:string;position:integer;Alignment:String):TDataNode;'#13#10
  +'begin'#13#10#13#10'MyNode.ScreenObject:=MyNode;'#13#10#13#10'result:=myNode'
  +';'#13#10'end;'#13#10#13#10'function CreateinterfaceObj(MyForm:TForm;NodeNam'
  +'e,NameSpace:String):TObject;'#13#10'begin'#13#10'  result:=TObject(TXCompos'
  +'iteIntf.Create(MyForm,NodeName,NameSpace));'#13#10'end;'#13#10#13#10'{$endi'
  +'f}'#13#10#13#10'function TXCompositeIntf.PropertyNameIsUnique(NewName:Strin'
  +'g):Boolean;'#13#10'var'#13#10'  i:integer;'#13#10'begin'#13#10'  result:=tr'
  +'ue;'#13#10'  for i:=0 to length(myNode.NodeAttributes)-1 do'#13#10'    if m'
  +'yNode.NodeAttributes[i].AttribName=NewName then'#13#10'      result:=false;'
  +#13#10'end;'#13#10#13#10'function TXCompositeIntf.EventNameIsUnique(NewName:'
  +'String):Boolean;'#13#10'var'#13#10'  i:integer;'#13#10'begin'#13#10'  resul'
  +'t:=true;'#13#10'  for i:=0 to myNode.myEventTypes.Count-1 do'#13#10'    if '
  +'myNode.myEventTypes[i]=NewName then'#13#10'      result:=false;'#13#10'end;'
  +#13#10#13#10'begin'#13#10#13#10'{$ifndef JScript}'#13#10'RegisterClass(TXCom'
  +'positeIntf);'#13#10'AddNodeFuncLookup(''TXCompositeIntf'',@CreateIntf);'#13
  +#10'{$else}'#13#10'AddNodeFuncLookup(''TXCompositeIntf'',@CreateinterfaceObj'
  +',@CreateIntf);'#13#10'{$endif}'#13#10'SuppressDesignerProperty(''TXComposit'
  +'eIntf'',''Alignment'');'#13#10'SuppressDesignerProperty(''TXCompositeIntf'''
  +',''IsVisible'');'#13#10'SuppressDesignerProperty(''TXCompositeIntf'',''Labe'
  +'lPos'');'#13#10'SuppressDesignerProperty(''TXCompositeIntf'',''LabelText'')'
  +';'#13#10'SuppressDesignerProperty(''TXCompositeIntf'',''Hint'');'#13#10'Sup'
  +'pressDesignerProperty(''TXCompositeIntf'',''Border'');'#13#10'end.'#13#10#13
  +#10
]);
LazarusResources.Add('x3dtable','PAS',[
  'unit X3DTable;'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13
  +#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, Sy'
  +'sUtils, TypInfo, StringUtils, NodeUtils, XIFrame,'#13#10'    UtilsJSCompile'
  +', XForm, XButton, XVBox, XTabControl, XEditBox, XNumberSpinner,XComboBox, E'
  +'ventsInterface,'#13#10'    PasteDialogUnit,'#13#10'  {$ifndef JScript}'#13
  +#10'    fpjson  , jsonparser,'#13#10'    LResources, Forms, Controls, StdCtr'
  +'ls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls,'#13#10'    LazsUtils'
  +', LCLIntf,'#13#10'    LCLType, gettext,'#13#10'  {$else}'#13#10'    HTMLUti'
  +'ls,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events, XTable;'#13#10#13#10
  +#13#10'type'#13#10'  //TX3DTable = class(TXVBox)'#13#10'  TX3DTable = class('
  +'TWrapperPanel)'#13#10'  private'#13#10'    { Private declarations }'#13#10
  +'    IsBuilt:Boolean;'#13#10#13#10'    function GetZIndex:integer;'#13#10'  '
  +'  function GetXDimension:integer;'#13#10'    function GetYDimension:integer'
  +';'#13#10'    function GetZDimension:integer;'#13#10'    function GetTable3D'
  +'Data:string;'#13#10'    function GetIncludeDataInSave:Boolean;'#13#10#13#10
  +'    procedure SetZIndex(AValue:integer);'#13#10'    procedure SetXDimension'
  +'(AValue:integer);'#13#10'    procedure SetYDimension(AValue:integer);'#13#10
  +'    procedure SetZDimension(AValue:integer);'#13#10'    procedure SetTable3'
  +'DData(const AValue:string);'#13#10'    procedure SetIncludeDataInSave(AValu'
  +'e:Boolean);'#13#10'    procedure SetContainerHeight(AValue:string);  overri'
  +'de;'#13#10#13#10'    procedure SetMyEventTypes;'#13#10'    procedure SetPro'
  +'pertyDefaults;'#13#10'    procedure BuildWidget;'#13#10'    procedure ReBui'
  +'ld3DTableData;'#13#10'    procedure SetNew3DTableData;'#13#10'    function '
  +'Construct3DTableStringFromArray(arr:T3DStringArray):String;'#13#10'    proc'
  +'edure Resize3DData;'#13#10#13#10'    {$ifndef JScript}'#13#10'    procedure'
  +' DoConstructor(TheOwner:TComponent;IsDynamic:Boolean);'#13#10'    {$endif}'
  +#13#10#13#10'    procedure ZSelectorChange(e:TEventStatus;nodeID: AnsiString'
  +'; myValue: AnsiString);'#13#10'    procedure TableChange(e:TEventStatus;nod'
  +'eID: AnsiString; myValue: AnsiString);'#13#10'    procedure XEditBoxChange('
  +'e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedu'
  +'re YEditBoxChange(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'    procedure ZEditBoxChange(e:TEventStatus;nodeID: AnsiString; myVal'
  +'ue: AnsiString);'#13#10'    procedure PasteData(e:TEventStatus;nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'    function BuildZeds:String;'#13#10
  +#13#10'  protected'#13#10'    { Protected declarations }'#13#10'  public'#13
  +#10'    { Public declarations }'#13#10'    myTableView:TXTable;'#13#10'    P'
  +'asteBtn:TXButton;'#13#10'    ZSelector:TXComboBox;'#13#10'    XDimEdit:TXEd'
  +'itBox;'#13#10'    YDimEdit:TXEditBox;'#13#10'    ZDimEdit:TXEditBox;'#13#10
  +'    {$ifndef JScript}'#13#10'    constructor Create(TheOwner: TComponent); '
  +'override;'#13#10'    constructor Create(TheOwner: TComponent;IsDynamic:Bool'
  +'ean); override;'#13#10'    destructor Destroy; override;'#13#10'    procedu'
  +'re ResequenceComponents;'#13#10'    {$else}'#13#10'    constructor Create(M'
  +'yForm:TForm;NodeName,NameSpace:String);  virtual;'#13#10'    {$endif}'#13#10
  +#13#10'published'#13#10'    { Published declarations }'#13#10#13#10'    // P'
  +'roperties defined for this class...'#13#10'    property ZIndex: integer rea'
  +'d GetZIndex write SetZIndex;'#13#10'    property XDimension: integer read G'
  +'etXDimension write SetXDimension;'#13#10'    property YDimension: integer r'
  +'ead GetYDimension write SetYDimension;'#13#10'    property ZDimension: inte'
  +'ger read GetZDimension write SetZDimension;'#13#10'    property Table3DData'
  +':string read GetTable3DData write SetTable3DData;'#13#10'    property Inclu'
  +'deDataInSave:Boolean read GetIncludeDataInSave write SetIncludeDataInSave;'
  +#13#10#13#10'  end;'#13#10#13#10'implementation'#13#10#13#10'const MyNodeTyp'
  +'e=''TX3DTable'';'#13#10'var'#13#10'  myDefaultAttribs:TDefaultAttributesArr'
  +'ay;'#13#10#13#10'procedure TX3DTable.SetMyEventTypes;'#13#10'begin'#13#10' '
  +' MyEventTypes.Add(''Click'');'#13#10'end;'#13#10#13#10'procedure TX3DTable.'
  +'SetPropertyDefaults;'#13#10'begin'#13#10'end;'#13#10#13#10'function TX3DTab'
  +'le.BuildZeds:String;'#13#10'var'#13#10'  zeds:string;'#13#10'  i,numz:integ'
  +'er;'#13#10'begin'#13#10'  zeds:=''['';'#13#10'  if self.ZDimEdit<>nil then'
  +#13#10'    numz:=StrToint(self.ZDimEdit.ItemValue)'#13#10'  else'#13#10'    '
  +'numz:=self.ZDimension;'#13#10'  self.ZDimension:=numz;'#13#10'  for i:=0 to'
  +' numz-1 do'#13#10'  begin'#13#10'    if i>0 then zeds:=zeds+'','';'#13#10' '
  +'   zeds:=zeds + inttostr(i);'#13#10'  end;'#13#10'  zeds:=zeds+'']'';'#13#10
  +'  result:=zeds;'#13#10'end;'#13#10#13#10'procedure TX3DTable.BuildWidget;'
  +#13#10'var'#13#10'  VBNode,TblNode,ZNumNode,XEditNode,YEditNode,ZEditNode,Bt'
  ,'nNode:TDataNode;'#13#10'begin'#13#10#13#10'  VBNode:=AddDynamicWidget(''TXV'
  +'Box'',self.myNode.MyForm,self.myNode,''VBox'',self.myNode.NodeName,''Left'''
  +',-1);'#13#10'  VBNode.IsDynamic:=false;'#13#10'  {$ifndef JScript}'#13#10' '
  +' myControl:=TControl(TXVBox(VBNode.ScreenObject));'#13#10'  {$endif}'#13#10
  +'  TXVBox(VBNode.ScreenObject).ContainerHeight:=''100%'';'#13#10#13#10'  ZNu'
  +'mNode:=AddDynamicWidget(''TXComboBox'',self.myNode.MyForm,VBNode,''ZSelecto'
  +'r'',self.myNode.NodeName,''Left'',-1);'#13#10'  ZSelector:=TXComboBox(ZNumN'
  +'ode.ScreenObject);'#13#10'  ZSelector.OptionList:=BuildZeds;'#13#10'  ZSele'
  +'ctor.ItemValue:=''0'';'#13#10'  ZSelector.LabelPos:=''Left'';'#13#10'  ZSel'
  +'ector.LabelText:=''Select Z Index:'';'#13#10'  ZNumNode.IsDynamic:=false;'
  +#13#10'  ZSelector.myNode.registerEvent(''Change'',@self.ZSelectorChange);'
  +#13#10#13#10'  TblNode:=AddDynamicWidget(''TXTable'',self.myNode.MyForm,VBNo'
  +'de,''Table'',self.myNode.NodeName,''Left'',-1);'#13#10'  TblNode.IsDynamic:'
  +'=false;'#13#10'  myTableView:=TXTable(TblNode.ScreenObject);'#13#10'  myTab'
  +'leView.TableHeight:=''70%'';'#13#10'  myTableView.TableWidth:=''98%'';'#13
  +#10'  myTableView.LabelText:='''';'#13#10'  myTableView.HasHeaderRow:=false;'
  +#13#10'  myTableView.IsNumeric:=true;'#13#10'  TblNode.registerEvent(''Chang'
  +'e'',@self.TableChange);'#13#10#13#10'  BtnNode:=AddDynamicWidget(''TXButton'
  +''',self.myNode.MyForm,VBNode,''PasteBtn'',self.myNode.NodeName,''Left'',-1)'
  +';'#13#10'  PasteBtn:=TXButton(BtnNode.ScreenObject);'#13#10'  PasteBtn.Capt'
  +'ion:=''Paste Grid'';'#13#10'  PasteBtn.Hint:=''Paste grid data from clipboa'
  +'rd (eg. as copied from Excel)'';'#13#10'  PasteBtn.myNode.registerEvent(''B'
  +'uttonClick'',@self.PasteData);'#13#10'  BtnNode.IsDynamic:=false;'#13#10#13
  +#10'  XEditNode:=AddDynamicWidget(''TXEditBox'',self.myNode.MyForm,VBNode,'''
  +'XNum'',self.myNode.NodeName,''Left'',-1);'#13#10'  XDimEdit:=TXEditBox(XEdi'
  +'tNode.ScreenObject);'#13#10'  XDimEdit.LabelPos:=''Left'';'#13#10'  XDimEdi'
  +'t.LabelText:=''Set X Dimension (number of Columns):'';'#13#10'  XEditNode.I'
  +'sDynamic:=false;'#13#10'  XDimEdit.ItemValue:=''1'';'#13#10'  XDimEdit.myNo'
  +'de.registerEvent(''Change'',@self.XEditBoxChange);'#13#10#13#10'  YEditNode'
  +':=AddDynamicWidget(''TXEditBox'',self.myNode.MyForm,VBNode,''YNum'',self.my'
  +'Node.NodeName,''Left'',-1);'#13#10'  YDimEdit:=TXEditBox(YEditNode.ScreenOb'
  +'ject);'#13#10'  YDimEdit.LabelPos:=''Left'';'#13#10'  YDimEdit.LabelText:='
  +'''Set Y Dimension (number of Rows):'';'#13#10'  YEditNode.IsDynamic:=false;'
  +#13#10'  YDimEdit.ItemValue:=''1'';'#13#10'  YDimEdit.myNode.registerEvent('
  +'''Change'',@self.YEditBoxChange);'#13#10#13#10'  ZEditNode:=AddDynamicWidge'
  +'t(''TXEditBox'',self.myNode.MyForm,VBNode,''ZNum'',self.myNode.NodeName,''L'
  +'eft'',-1);'#13#10'  ZDimEdit:=TXEditBox(ZEditNode.ScreenObject);'#13#10'  Z'
  +'DimEdit.LabelPos:=''Left'';'#13#10'  ZDimEdit.LabelText:=''Set Z Dimension '
  +'(Z Depth):'';'#13#10'  ZEditNode.IsDynamic:=false;'#13#10'  ZDimEdit.ItemVa'
  +'lue:=''1'';'#13#10'  ZDimEdit.myNode.registerEvent(''Change'',@self.ZEditBo'
  +'xChange);'#13#10#13#10'  {$ifndef JScript}'#13#10'  //AddLabel(myControl);'
  +#13#10'  TXVBox(VBNode.ScreenObject).IsVisible:=false;  // !!fudge (problem '
  +'with auto-resizing on display)'#13#10'  {$endif}'#13#10#13#10'  IsBuilt:=tr'
  +'ue;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TX3DTable.R'
  +'esequenceComponents;'#13#10'begin      // fix for Lazarus ''feature''....'
  +#13#10'  TXVBox(myControl).RemoveControl(ZSelector);'#13#10'  TXVBox(myContr'
  +'ol).RemoveControl(myTableView);'#13#10'  TXVBox(myControl).RemoveControl(Pa'
  +'steBtn);'#13#10'  TXVBox(myControl).RemoveControl(XDimEdit);'#13#10'  TXVBo'
  +'x(myControl).RemoveControl(YDimEdit);'#13#10'  TXVBox(myControl).InsertCont'
  +'rol(YDimEdit,0);'#13#10'  TXVBox(myControl).InsertControl(XDimEdit,0);'#13
  +#10'  TXVBox(myControl).InsertControl(PasteBtn,0);'#13#10'  TXVBox(myControl'
  +').InsertControl(myTableView,0);'#13#10'  TXVBox(myControl).InsertControl(ZS'
  +'elector,0);'#13#10'  TXVBox(myControl).IsVisible:=true;'#13#10'  CascadeRes'
  +'ize(myControl);'#13#10'end;'#13#10#13#10'function Create3DTableWidget(Paren'
  +'tNode:TDataNode;ScreenObjectName,NameSpace:string;position:integer;Alignmen'
  +'t:String):TDataNode;'#13#10'var'#13#10'  NewNode:TDataNode;'#13#10'begin'#13
  +#10'  NewNode:=CreateDynamicLazWidget(''TX3DTable'',ParentNode.MyForm,Parent'
  +'Node,ScreenObjectName,NameSpace,Alignment,position);'#13#10'  TX3DTable(New'
  +'Node.ScreenObject).BuildWidget;'#13#10#13#10'  result:=NewNode;'#13#10'end;'
  +#13#10#13#10'procedure TX3DTable.DoConstructor(TheOwner:TComponent;IsDynamic'
  +':Boolean);'#13#10'begin'#13#10'  IsBuilt:=false;'#13#10'  self.BorderSpacin'
  +'g.Around:=glbBorderSpacing;'#13#10#13#10'  self.SetMyEventTypes;'#13#10'  C'
  +'reateComponentDataNode2(self,MyNodeType,myDefaultAttribs, self.myEventTypes'
  +', TheOwner,IsDynamic);'#13#10'  self.IsContainer:=false;'#13#10#13#10'  sel'
  ,'f.ParentColor:=true;'#13#10#13#10'end;'#13#10#13#10'constructor TX3DTable.C'
  +'reate(TheOwner:TComponent);'#13#10'begin'#13#10'  inherited Create(TheOwner'
  +',false);'#13#10'  DoConstructor(TheOwner,false);'#13#10'end;'#13#10#13#10'c'
  +'onstructor TX3DTable.Create(TheOwner:TComponent;IsDynamic:Boolean);'#13#10
  +'begin'#13#10'  inherited Create(TheOwner,IsDynamic);'#13#10'  DoConstructor'
  +'(TheOwner,IsDynamic);'#13#10'end;'#13#10#13#10'destructor TX3DTable.Destroy'
  +';'#13#10'begin'#13#10'  if (not (csDesigning in componentState)) then'#13#10
  +'  begin'#13#10'  end;'#13#10'  inherited Destroy;'#13#10'end;'#13#10#13#10
  +'{$else}'#13#10'constructor TX3DTable.Create(MyForm:TForm;NodeName,NameSpace'
  +':String);'#13#10'begin'#13#10'  inherited Create(NodeName,NameSpace);'#13#10
  +'  self.NodeType:=MyNodeType;'#13#10'  self.MyForm:=MyForm;'#13#10'  self.Is'
  +'Container:=false;'#13#10'  IsBuilt:=false;'#13#10#13#10'  SetNodePropDefaul'
  +'ts(self,myDefaultAttribs);'#13#10'  //SetPropertyDefaults;'#13#10'end;'#13
  +#10#13#10'function Create3DTableWidget(MyNode, ParentNode:TDataNode;ScreenOb'
  +'jectName,NameSpace:string;position:integer;Alignment:String):TDataNode;'#13
  +#10'var'#13#10'  ShowBorder:boolean;'#13#10'  myObj:TX3DTable;'#13#10'  OnCl'
  +'ickString,LabelText:String;'#13#10'begin'#13#10#13#10'  OnClickString:=''on'
  +'click="event.stopPropagation();pas.Events.handleEvent(null,''''Click'''','''
  +'''''+ScreenObjectName+'''''',''''''+NameSpace+'''''', '''''''');" '';'#13#10
  +'  LabelText:= MyNode.getAttribute(''LabelText'',true).AttribValue;'#13#10#13
  +#10'  asm'#13#10'  try{'#13#10'      var wrapper = pas.HTMLUtils.CreateWrapp'
  +'erDiv(MyNode,ParentNode,''UI'',ScreenObjectName,NameSpace,$impl.MyNodeType,'
  +'position);'#13#10#13#10'      var HTMLString='''';'#13#10'      var wrapper'
  +'id = NameSpace+ScreenObjectName;'#13#10'      var MyObjectName=wrapperid+'''
  +'Contents'';'#13#10#13#10#13#10'      var labelstring=''<label for="''+MyObj'
  +'ectName+''" id="''+MyObjectName+''Lbl''+''">''+LabelText+''</label>'';'#13
  +#10#13#10'      HTMLString = ''<div  id="''+MyObjectName+''" class="vboxNoSt'
  +'retch ''+NameSpace+ScreenObjectName+''" ''  +'#13#10'                     '
  +''' style="height:100%;width:100%; "'' +'#13#10'                     OnClick'
  +'String +'#13#10'                     ''></div>  '';'#13#10'      HTMLString'
  +' = labelstring+HTMLString;'#13#10#13#10'      var wrapper=document.getEleme'
  +'ntById(wrapperid);'#13#10'      wrapper.insertAdjacentHTML(''beforeend'', H'
  +'TMLString);'#13#10#13#10'  }catch(err) { alert(err.message+''  in XVBox.Cre'
  +'ateVHBox'');}'#13#10'  end;'#13#10'  MyNode.ScreenObject:=MyNode;'#13#10#13
  +#10#13#10'  TX3DTable(MyNode.ScreenObject).BuildWidget;'#13#10'  RefreshComp'
  +'onentProps(myNode);'#13#10#13#10'  result:=myNode;'#13#10'end;'#13#10#13#10
  +#13#10#13#10'function CreateinterfaceObj3DTable(MyForm:TForm;NodeName,NameSp'
  +'ace:String):TObject;'#13#10'begin'#13#10'  result:=TObject(TX3DTable.Create'
  +'(MyForm,NodeName,NameSpace));'#13#10'end;'#13#10'{$endif}'#13#10#13#10'func'
  +'tion JsonStringTo3DStringArray(const str:String):T3DStringArray;'#13#10'{$i'
  +'fndef JScript}'#13#10'var'#13#10'   zData : TJSONData;'#13#10'   zCount:int'
  +'eger;'#13#10'   arr:T3DStringArray;'#13#10'    zItem,yItem,xItem : TJSONDat'
  +'a;'#13#10'    z,y,x:integer;'#13#10'    object_type:string;'#13#10#13#10'be'
  +'gin'#13#10'  // "[[[...],[...]],[[...]]]"'#13#10'  setlength(arr,0);'#13#10
  +'  try'#13#10'  zData := GetJSON(str);'#13#10'  except'#13#10'    on E: Exce'
  +'ption do'#13#10'    begin'#13#10'      showmessage(''JSON error: ''+e.Messa'
  +'ge);'#13#10'      FreeAndNil(zData);'#13#10'      EXIT;'#13#10'    end;'#13
  +#10'  end;'#13#10'  zcount:=zData.Count;'#13#10'  setlength(arr,zCount);'#13
  +#10'  for z :=0 to zcount-1 do'#13#10'  begin'#13#10'    zItem := zData.Item'
  +'s[z];'#13#10'    setlength(arr[z],zItem.Count);'#13#10'    for y:=0 to zIte'
  +'m.Count-1 do'#13#10'    begin'#13#10'      yItem := zItem.Items[y];'#13#10
  +'      setlength(arr[z,y],yItem.Count);'#13#10'      object_type := GetEnumN'
  +'ame(TypeInfo(TJSONtype), Ord(yItem.JSONType));'#13#10'      if object_type='
  +'''jtArray'' then'#13#10'      begin'#13#10'        for x:=0 to yItem.Count-'
  +'1 do'#13#10'        begin'#13#10'          xItem:= yItem.Items[x];'#13#10' '
  +'         object_type := GetEnumName(TypeInfo(TJSONtype), Ord(xItem.JSONType'
  +'));'#13#10'          if object_type=''jtString'' then'#13#10'          begi'
  +'n'#13#10'            arr[z,y,x]:=QuoteIt(xItem.AsString);'#13#10'          '
  +'end'#13#10'          else if object_type=''jtNumber'' then'#13#10'         '
  +' begin'#13#10'            arr[z,y,x]:=xItem.AsString;'#13#10'          end'
  +#13#10'          else'#13#10'            arr[z,y,x]:=''""'';'#13#10'        '
  +'end;'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'  zData.Free;'
  +#13#10#13#10'  result:=arr;'#13#10'end;'#13#10'{$else}'#13#10'var'#13#10'   '
  +'arr:T3DStringArray;'#13#10'begin'#13#10'  // "[[[...],[...]],[[...]]]"'#13
  ,#10'  setlength(arr,0);'#13#10'  asm'#13#10'    arr = JSON.parse(str);'#13#10
  +'  end;'#13#10'  result:=arr;'#13#10'end;'#13#10'{$endif}'#13#10#13#10#13#10
  +'function TX3DTable.Construct3DTableStringFromArray(arr:T3DStringArray):Stri'
  +'ng;'#13#10'var'#13#10'    z:integer;'#13#10'    str:String;'#13#10'begin'#13
  +#10'  //strl:=TStringList.Create;'#13#10'  str:='''';'#13#10'  for z:=0 to l'
  +'ength(arr)-1 do'#13#10'  begin'#13#10'    if z>0 then'#13#10'      str:=str'
  +'+'','';'#13#10'    str:=str+myTableView.ConstructTableStringFromArray(arr[z'
  +']);'#13#10'  end;'#13#10'  result:=''[''+str+'']'';'#13#10'end;'#13#10#13#10
  +'procedure TX3DTable.SetNew3DTableData;'#13#10'var'#13#10'    arr:T3DStringA'
  +'rray;'#13#10'    z:integer;'#13#10'begin'#13#10'//  Redisplay the data for '
  +'the current Z index, from new 3d data string'#13#10'  arr:=JsonStringTo3DSt'
  +'ringArray(self.Table3DData);'#13#10'  z:=self.ZSelector.ItemIndex;'#13#10' '
  +' if z>length(arr)-1 then'#13#10'  begin'#13#10'    z:=length(arr)-1;'#13#10
  +'    self.ZSelector.ItemIndex:=z;        // !!!!fires ZSelectorChange...come'
  +'s back here'#13#10'  end;'#13#10'  if z<0 then z:=0;'#13#10'  self.ZDimEdit'
  +'.ItemValue:=inttostr(length(arr));'#13#10'  if length(arr)>0 then'#13#10'  '
  +'begin'#13#10'    self.YDimEdit.ItemValue:=inttostr(length(arr[0]));'#13#10
  +'    if length(arr[0])>0 then'#13#10'      self.XDimEdit.ItemValue:=inttostr'
  +'(length(arr[0,0]))'#13#10'    else'#13#10'      self.XDimEdit.ItemValue:='''
  +''';'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    self.YDimEdit.Item'
  +'Value:='''';'#13#10'    self.XDimEdit.ItemValue:='''';'#13#10'  end;'#13#10
  +#13#10'  if length(arr)>0 then'#13#10'  begin'#13#10'    self.myTableView.Ta'
  +'bleData:=myTableView.ConstructTableStringFromArray(arr[z]);'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'procedure TX3DTable.ReBuild3DTableData;'#13#10'var'
  +#13#10'    arr:T3DStringArray;'#13#10'    z:integer;'#13#10'    zData:T2DStr'
  +'ingArray;'#13#10'    NewData:String;'#13#10'begin'#13#10'//  Rebuild the fu'
  +'ll TableData string, substituting the current Z Table''s data at the releva'
  +'nt Z-index'#13#10'  arr:=JsonStringTo3DStringArray(self.Table3DData);'#13#10
  +'  z:=self.ZSelector.ItemIndex;'#13#10'  zData:=self.myTableView.GetCellsAsA'
  +'rray(false);'#13#10'  arr[z]:=zData;'#13#10'  self.myNode.SetAttributeValue'
  +'(''Table3DData'',''[[[0]]]''); // free some memory??'#13#10'  NewData:=self'
  +'.Construct3DTableStringFromArray(arr);'#13#10'  self.myNode.SetAttributeVal'
  +'ue(''Table3DData'',NewData);'#13#10'end;'#13#10#13#10'procedure TX3DTable.R'
  +'esize3DData;'#13#10'var'#13#10'    arr,newArr:T3DStringArray;'#13#10'    x,'
  +'y,z:integer;'#13#10'    xdim,ydim,zdim:integer;'#13#10'    NewData:String;'
  +#13#10'begin'#13#10'  //myTableView.TableData:=''[1,2,3]'';   // to free som'
  +'e memory?'#13#10'  // X or Y or Z dimension has been changed'#13#10'  ydim:'
  +'=strtoint(self.YDimEdit.ItemValue);'#13#10'  xdim:=strtoint(self.XDimEdit.I'
  +'temValue);'#13#10'  zdim:=strtoint(self.ZDimEdit.ItemValue);'#13#10'//  set'
  +'length(newArr,self.ZSelector.MaxVal+1);'#13#10'  setlength(newArr,zdim);'#13
  +#10'  arr:=JsonStringTo3DStringArray(self.Table3DData);'#13#10'  for z:=0 to'
  +' length(newArr)-1 do'#13#10'  begin'#13#10'    setlength(NewArr[z],ydim);'
  +#13#10'    if z<length(arr) then'#13#10'    begin'#13#10'      for y:=0 to y'
  +'dim-1 do'#13#10'      begin'#13#10'        setlength(NewArr[z,y],xdim);'#13
  +#10'        if y<length(arr[z]) then'#13#10'        begin'#13#10'          f'
  +'or x:=0 to xdim-1 do'#13#10'          begin'#13#10'            if x<length('
  +'arr[z,y]) then'#13#10'              NewArr[z,y,x]:=arr[z,y,x]'#13#10'      '
  +'      else'#13#10'              NewArr[z,y,x]:='''';'#13#10'          end;'
  +#13#10'        end'#13#10'        else'#13#10'          for x:=0 to xdim-1 d'
  +'o'#13#10'            NewArr[z,y,x]:='''';'#13#10'      end;'#13#10'    end'
  +#13#10'    else'#13#10'    begin'#13#10'      for y:=0 to ydim-1 do'#13#10' '
  +'     begin'#13#10'        setlength(NewArr[z,y],xdim);'#13#10'        for x'
  +':=0 to xdim-1 do'#13#10'          NewArr[z,y,x]:='''';'#13#10'      end;'#13
  +#10'    end;'#13#10'  end;'#13#10'  NewData:=self.Construct3DTableStringFrom'
  +'Array(NewArr);'#13#10'  self.Table3DData:=NewData;'#13#10'end;'#13#10#13#10
  +'procedure TX3DTable.ZSelectorChange(e:TEventStatus;nodeID: AnsiString; myVa'
  +'lue: AnsiString);'#13#10'begin'#13#10'  //{$ifdef JScript}showmessage(''3d '
  +'ZSelectorChange'');{$endif}'#13#10'  // Get the table data layer for this Z'
  +' index, and display.'#13#10'  self.SetNew3DTableData;'#13#10'end;'#13#10'pr'
  +'ocedure TX3DTable.TableChange(e:TEventStatus;nodeID: AnsiString; myValue: A'
  +'nsiString);'#13#10'begin'#13#10'  //{$ifdef JScript}showmessage(''3d TableC'
  +'hange'');{$endif}'#13#10'  self.ReBuild3DTableData;'#13#10'end;'#13#10'proc'
  +'edure TX3DTable.XEditBoxChange(e:TEventStatus;nodeID: AnsiString; myValue: '
  +'AnsiString);'#13#10'begin'#13#10'  //{$ifdef JScript}showmessage(''3d XDim '
  ,'Change'');{$endif}'#13#10'  self.XDimension:=strtoint(myValue);'#13#10'  se'
  +'lf.ReSize3DData;'#13#10'end;'#13#10'procedure TX3DTable.YEditBoxChange(e:TE'
  +'ventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10' /'
  +'/ {$ifdef JScript}showmessage(''3d YDim Change'');{$endif}'#13#10'  self.YD'
  +'imension:=strtoint(myValue);'#13#10'  self.ReSize3DData;'#13#10'end;'#13#10
  +'procedure TX3DTable.ZEditBoxChange(e:TEventStatus;nodeID: AnsiString; myVal'
  +'ue: AnsiString);'#13#10'var'#13#10'    zeds:string;'#13#10'begin'#13#10' //'
  +' {$ifdef JScript}showmessage(''3d ZDim Change'');{$endif}'#13#10'  self.ZDi'
  +'mension:=strtoint(myValue);'#13#10'//  self.ZSelector.MaxVal:=strtoint(myVa'
  +'lue)-1;'#13#10'  zeds:=BuildZeds;'#13#10'  self.ZSelector.OptionList:=zeds;'
  +#13#10'  self.ReSize3DData;'#13#10'end;'#13#10'procedure TX3DTable.PasteData'
  +'(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10
  +'    str:String;'#13#10'begin'#13#10'  //paste Excel-format data to this gri'
  +'d'#13#10'   if (e=nil)  or (e.InitRunning=false) then'#13#10'   begin'#13#10
  +'     //showmessage(''new e'');'#13#10'     if (e=nil) then'#13#10'     begi'
  +'n'#13#10'       e:=TEventStatus.Create(''Click'',nodeId);'#13#10'     end;'
  +#13#10'     e.initRunning:=true;'#13#10'     PasteDialogUnit.CompletionEvent'
  +':=e;'#13#10'     {$ifdef JScript}'#13#10'     e.AsyncProcsRunning.Add(''Cop'
  +'yFromClip'');'#13#10'     {$endif}'#13#10#13#10'   end'#13#10'   else'#13#10
  +'   begin'#13#10'     e.InitRunning:=false;'#13#10'   end;'#13#10#13#10'   i'
  +'f e.InitRunning then'#13#10'   begin'#13#10'     PasteDoneBtn.IsVisible:=fa'
  +'lse;'#13#10'     str:=mygetClipboardData(''Grid'');'#13#10'   end;'#13#10#13
  +#10'   if e.EventHasWaitingAsyncProcs = false then'#13#10'   // this is laza'
  +'rus and a confirm dialog is not needed'#13#10'   // otherwise this is HTML '
  +'and we have waited for a ctrl-V event from the PasteDialog form'#13#10'   b'
  +'egin'#13#10'     {$ifdef JScript}'#13#10'     asm'#13#10'       pas.NodeUti'
  +'ls.StartingUp=false;'#13#10'       var pasteTarget = document.getElementByI'
  +'d(''PasteTargetContents'');'#13#10'       str = pasteTarget.value;'#13#10' '
  +'      //alert(''Paste string = >''+str+''<'' );'#13#10'     end;'#13#10'   '
  +'  {$endif}'#13#10'//     ShowAllChars(str);'#13#10'     if trim(str)<>'''' '
  +'then'#13#10'     begin'#13#10'       self.myTableView.LoadTableFromExcelCop'
  +'y(str);'#13#10'       if (self.ZDimension>1)'#13#10'       and ((self.XDime'
  +'nsion<>self.myTableView.NumCols)'#13#10'       or (self.YDimension<>self.my'
  +'TableView.NumRows)) then'#13#10'         showmessage(''X,Y dimensions have '
  +'changed - this will affect data at all Z levels'');'#13#10'       self.XDim'
  +'ension:=self.myTableView.NumCols;'#13#10'       self.YDimension:=self.myTab'
  +'leView.NumRows;'#13#10'       self.XDimEdit.ItemValue:=inttostr(self.XDimen'
  +'sion);'#13#10'       self.YDimEdit.ItemValue:=inttostr(self.YDimension);'#13
  +#10'       self.ReBuild3DTableData;'#13#10'       self.ReSize3DData;'#13#10
  +'     end'#13#10'     else'#13#10'       showmessage(''Nothing on clipboard '
  +'to paste'');'#13#10'   end;'#13#10' end;'#13#10#13#10#13#10'function TX3DTa'
  +'ble.GetZIndex:integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAtt'
  +'ribute(''ZIndex'',true).AttribValue);'#13#10'end;'#13#10'function TX3DTable'
  +'.GetXDimension:integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAt'
  +'tribute(''XDimension'',true).AttribValue);'#13#10'end;'#13#10'function TX3D'
  +'Table.GetYDimension:integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode.'
  +'getAttribute(''YDimension'',true).AttribValue);'#13#10'end;'#13#10'function'
  +' TX3DTable.GetZDimension:integer;'#13#10'var'#13#10'    v:String;'#13#10'be'
  +'gin'#13#10'  v:=myNode.getAttribute(''ZDimension'',true).AttribValue;'#13#10
  +'  if v<>'''' then'#13#10'    result:=StrToInt(v)'#13#10'  else'#13#10'    r'
  +'esult:=0;'#13#10'end;'#13#10'function TX3DTable.GetTable3DData:string;'#13
  +#10'begin'#13#10'  result:=myNode.getAttribute(''Table3DData'',true).AttribV'
  +'alue;'#13#10'end;'#13#10'function TX3DTable.GetIncludeDataInSave:Boolean;'
  +#13#10'begin'#13#10'  result:=MyStrToBool(MyNode.getAttribute(''IncludeDataI'
  +'nSave'',true).AttribValue);'#13#10'end;'#13#10#13#10'procedure TX3DTable.Se'
  +'tZIndex(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''Z'
  +'Index'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10'procedure TX3DTab'
  +'le.SetXDimension(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttribute'
  +'Value(''XDimension'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10'proc'
  +'edure TX3DTable.SetYDimension(AValue:integer);'#13#10'begin'#13#10'  myNode'
  +'.SetAttributeValue(''YDimension'',IntToStr(AValue),''Integer'');'#13#10'end'
  +';'#13#10'procedure TX3DTable.SetZDimension(AValue:integer);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''ZDimension'',IntToStr(AValue),''Integer'');'
  +#13#10'end;'#13#10'procedure TX3DTable.SetTable3DData(const AValue:string);'
  ,#13#10'begin'#13#10'  myNode.SetAttributeValue(''Table3DData'',AValue,''Stri'
  +'ng'');'#13#10'  if self.ZSelector<>nil then'#13#10'  begin'#13#10'    SetNe'
  +'w3DTableData;'#13#10'    ZSelector.OptionList:=BuildZeds;'#13#10'  end;'#13
  +#10#13#10'end;'#13#10'procedure TX3DTable.SetIncludeDataInSave(AValue:Boolea'
  +'n);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''IncludeDataInSave'',My'
  +'BoolToStr(AValue),''Boolean'');'#13#10'end;'#13#10'procedure TX3DTable.SetC'
  +'ontainerHeight(AValue:string);'#13#10'begin'#13#10'  inherited;'#13#10'  {$'
  +'ifndef JScript}'#13#10'  CascadeResize(TWinControl(self));   //.....making '
  +'no difference!!!!'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'begin'#13#10'A'
  +'ddWrapperDefaultAttribs(myDefaultAttribs);'#13#10'AddDefaultAttribute(myDef'
  +'aultAttribs,''ContainerWidth'',''String'','''','''',false);'#13#10'AddDefau'
  +'ltAttribute(myDefaultAttribs,''ContainerHeight'',''String'','''','''',false'
  +');'#13#10'AddDefaultAttribute(myDefaultAttribs,''Border'',''Boolean'',''Tru'
  +'e'','''',false);'#13#10'AddDefaultAttribute(myDefaultAttribs,''SpacingAroun'
  +'d'',''Integer'',''0'','''',false);'#13#10'AddDefaultAttribute(myDefaultAttr'
  +'ibs,''BgColor'',''Color'',''#FFFFFF'','''',false);'#13#10'AddDefaultAttribu'
  +'te(myDefaultAttribs,''InheritColor'',''Boolean'',''False'','''',false);'#13
  +#10'AddDefaultAttribute(myDefaultAttribs,''LabelPos'',''String'',''Top'','''
  +''',false);'#13#10'AddDefaultAttribute(myDefaultAttribs,''LabelText'',''Stri'
  +'ng'',''3D Table'','''',false);'#13#10'AddDefaultAttribute(myDefaultAttribs,'
  +'''Table3DData'',''String'',''[[["z"]]]'','''',false);'#13#10'AddDefaultAttr'
  +'ibute(myDefaultAttribs,''XDimension'',''Integer'',''1'','''',false,false);'
  +#13#10'AddDefaultAttribute(myDefaultAttribs,''YDimension'',''Integer'',''1'''
  +','''',false,false);'#13#10'AddDefaultAttribute(myDefaultAttribs,''ZDimensio'
  +'n'',''Integer'',''1'','''',false,false);'#13#10'AddDefaultAttribute(myDefau'
  +'ltAttribs,''ZIndex'',''Integer'',''0'','''',false);'#13#10'AddDefaultAttrib'
  +'ute(myDefaultAttribs,''IncludeDataInSave'',''Boolean'',''True'',''If false,'
  +' the table contents will be excluded from saved system data'',false);'#13#10
  +'AddDefaultsToTable(MyNodeType,myDefaultAttribs);'#13#10#13#10'AddExclusionA'
  +'ttribToTable(MyNodeType,''IncludeDataInSave'',''Table3DData'');'#13#10#13#10
  +'AddAttribOptions(MyNodeType,''Alignment'',AlignmentOptions);'#13#10'AddAttr'
  +'ibOptions(MyNodeType,''LabelPos'',LabelPosOptions);'#13#10'{$ifndef JScript'
  +'}'#13#10'RegisterClass(TX3DTable);'#13#10'AddNodeFuncLookup(MyNodeType,@Cre'
  +'ate3DTableWidget);'#13#10'{$else}'#13#10'AddNodeFuncLookup(MyNodeType,@Crea'
  +'teinterfaceObj3DTable,@Create3DTableWidget);'#13#10'{$endif}'#13#10#13#10'e'
  +'nd.'#13#10#13#10
]);
LazarusResources.Add('xdbtable','PAS',[
  'unit XDBTable;'#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$'
  +'endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, SysUtil'
  +'s, TypInfo, StringUtils, NodeUtils, EventsInterface,'#13#10'  {$ifndef JScr'
  +'ipt}'#13#10'    LResources, Forms, Controls, StdCtrls, Graphics, Dialogs, E'
  +'xtCtrls, Propedits, RTTICtrls,'#13#10'    LazsUtils, LCLIntf,'#13#10'    LC'
  +'LType, bufdataset, db, DBGrids,'#13#10'  {$else}'#13#10'    HTMLUtils,'#13
  +#10'  {$endif}'#13#10'    WrapperPanel, Events;'#13#10#13#10'type'#13#10'  T'
  +'XDBTable = class(TWrapperPanel)'#13#10'private'#13#10'  { Private declarati'
  +'ons }'#13#10'  {$ifndef JScript}'#13#10'  fHandleClick:TEventHandler;'#13#10
  +'  fDataSource:TDataSource;'#13#10'  procedure Tableclick(Sender:TObject);'
  +#13#10'  {$endif}'#13#10#13#10'  procedure SetMyEventTypes;'#13#10#13#10'  f'
  +'unction GetTableWidth:string;'#13#10'  function GetTableHeight:string;'#13
  +#10'  function GetColWidth:integer;'#13#10'  function GetDSName:string;'#13
  +#10#13#10'  procedure SetTableWidth(AValue:string);'#13#10'  procedure SetTa'
  +'bleHeight(AValue:string);'#13#10'  procedure SetColWidth(AValue:integer);'
  +#13#10'  procedure SetDSName(AValue:string);'#13#10#13#10'protected'#13#10' '
  +' { Protected declarations }'#13#10'  {$ifndef JScript}'#13#10'  procedure D'
  +'oConstructor(TheOwner:TComponent;IsDynamic:Boolean);'#13#10'  property Pare'
  +'ntColor;'#13#10'  {$endif}'#13#10'public'#13#10'  { Public declarations }'
  +#13#10'  {$ifndef JScript}'#13#10'  constructor Create(TheOwner: TComponent)'
  +'; override;'#13#10'  constructor Create(TheOwner: TComponent;IsDynamic:Bool'
  +'ean); override;'#13#10'  {$else}'#13#10'  constructor Create(MyForm:TForm;N'
  +'odeName,NameSpace:String);'#13#10'  {$endif}'#13#10#13#10'published'#13#10
  +'  { Published declarations }'#13#10#13#10'  // Properties defined for this '
  +'class...'#13#10'  property TableHeight: String read GetTableHeight write Se'
  +'tTableHeight;'#13#10'  property TableWidth: String read GetTableWidth write'
  +' SetTableWidth;'#13#10'  property ColWidth:Integer read GetColWidth write S'
  +'etColWidth;'#13#10'  property DSName:string read GetDSName  write SetDSName'
  +';'#13#10#13#10'  {$ifndef JScript}'#13#10'  property DataSource:TDataSource'
  +' read fDataSource write fDataSource;'#13#10'  property HandleClick: TEventH'
  +'andler read FHandleClick write FHandleClick;'#13#10'  {$endif}'#13#10'end;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'var'#13#10'  ProjectBufDatasets:Array '
  +'of TBufDataset;'#13#10'{$endif}'#13#10#13#10'procedure SetDSNameOptions(Fro'
  +'mRoot:TDataNode);'#13#10#13#10'implementation'#13#10#13#10'const MyNodeType'
  +'=''TXDBTable'';'#13#10'var'#13#10'  myDefaultAttribs:TDefaultAttributesArra'
  +'y;'#13#10#13#10'procedure TXDBTable.SetMyEventTypes;'#13#10'begin'#13#10'  '
  +'MyEventTypes.Add(''Click'');'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13
  +#10'constructor TXDBTable.Create(TheOwner:TComponent);'#13#10'begin'#13#10' '
  +' inherited Create(TheOwner,false);'#13#10'  DoConstructor(TheOwner,false);'
  +#13#10'end;'#13#10#13#10'constructor TXDBTable.Create(TheOwner:TComponent;Is'
  +'Dynamic:Boolean);'#13#10'begin'#13#10'  inherited Create(TheOwner,IsDynamic'
  +');'#13#10'  DoConstructor(TheOwner,IsDynamic);'#13#10'end;'#13#10#13#10'pro'
  +'cedure TXDBTable.DoConstructor(TheOwner:TComponent;IsDynamic:Boolean);'#13
  +#10'begin'#13#10'  self.BorderSpacing.Around:=glbBorderSpacing;'#13#10#13#10
  +'  myControl:=TDBGrid.Create(self);'#13#10'  myControl.Parent:=self;'#13#10
  +#13#10'  self.DataSource:=TDataSource.Create(self);'#13#10'  TDBGrid(myContr'
  +'ol).DataSource := self.DataSource;'#13#10#13#10'  myControl.OnClick:=@self.'
  +'TableClick;'#13#10#13#10'  self.SetMyEventTypes;'#13#10#13#10'  CreateCompo'
  +'nentDataNode2(self,MyNodeType,myDefaultAttribs, self.myEventTypes, TheOwner'
  +',IsDynamic);'#13#10#13#10'  self.ParentColor:=true;'#13#10'  // Setting IsC'
  +'ontainer false will prevent designer dropping new child controls into this '
  +'one.'#13#10'  self.IsContainer:=false;'#13#10#13#10'  AddLabel(myControl);'
  +#13#10'end;'#13#10#13#10'function CreateWidget(ParentNode:TDataNode;ScreenOb'
  +'jectName,NameSpace:string;position:integer;Alignment:String):TDataNode;'#13
  +#10'var'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10'  NewNode:=CreateDyn'
  +'amicLazWidget(''TXDBTable'',ParentNode.MyForm,ParentNode,ScreenObjectName,N'
  +'ameSpace,Alignment,position);'#13#10'  result:=NewNode;'#13#10'end;'#13#10
  +#13#10'procedure TXDBTable.TableClick(Sender: TObject) ;'#13#10'begin'#13#10
  +'  if not (csDesigning in componentState) then'#13#10'    CallHandleEvent('''
  +'Click'','''',self);'#13#10'end;'#13#10#13#10'procedure TXDBTable.SetTableWi'
  +'dth(AValue:string);'#13#10'var'#13#10'  tc:TControl;'#13#10'begin'#13#10'  '
  +'tc:=self.myControl;'#13#10'  myNode.SetAttributeValue(''TableWidth'',AValue'
  +');'#13#10'  SetHeightWidth(self.myNode,tc,''TableWidth'',''TableHeight'');'
  +#13#10#13#10'end;'#13#10#13#10'procedure TXDBTable.SetTableHeight(AValue:str'
  ,'ing);'#13#10'var'#13#10'  tc:TControl;'#13#10'begin'#13#10'  tc:=self.myCon'
  +'trol;'#13#10'  myNode.SetAttributeValue(''TableHeight'',AValue);'#13#10'  S'
  +'etHeightWidth(self.myNode,tc,''TableWidth'',''TableHeight'');'#13#10'end;'
  +#13#10#13#10'procedure TXDBTable.SetColWidth(AValue:integer);'#13#10'var'#13
  +#10'  i:integer;'#13#10'begin'#13#10'  myNode.SetAttributeValue(''ColWidth'''
  +',IntToStr(AValue));'#13#10'  //showmessage(''colcount=''+inttostr(TStringGr'
  +'id(myControl).ColCount));'#13#10'  //for i:=0 to TStringGrid(myControl).Col'
  +'Count-1 do'#13#10'  //    TStringGrid(myControl).ColWidths[i]:=AValue;'#13
  +#10'end;'#13#10#13#10'function GetDataset(DSName:String;var idx:integer;show'
  +'Error:Boolean=true):TBufDataset;'#13#10'var'#13#10'  i:integer;'#13#10'begi'
  +'n'#13#10'  result:=nil;'#13#10'  idx:=-1;'#13#10'  for i:=0 to length(Proje'
  +'ctBufDatasets)-1 do'#13#10'  begin'#13#10'    if ProjectBufDatasets[i].Name'
  +' = DSName then'#13#10'    begin'#13#10'      result:=ProjectBufDatasets[i];'
  +#13#10'      idx:=i;'#13#10'    end;'#13#10'  end;'#13#10'  if (showError) a'
  +'nd (result=nil) then'#13#10'    showmessage(''Cannot find Dataset ''+DSName'
  +');'#13#10'end;'#13#10#13#10'procedure TXDBTable.SetDSName(AValue:string);'
  +#13#10'var'#13#10'  tc:TControl;'#13#10'  ds:TBufDataset;'#13#10'  i:integer'
  +';'#13#10'begin'#13#10'  tc:=self.myControl;'#13#10'  myNode.SetAttributeVal'
  +'ue(''DSName'',AValue);'#13#10'  ds:=GetDataset(AValue,i,false);'#13#10'  if'
  +' ds<>nil then'#13#10'  begin'#13#10'    self.DataSource.DataSet := ds;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'{$else}'#13#10'constructor TXDBTable.Cre'
  +'ate(MyForm:TForm;NodeName,NameSpace:String);'#13#10'begin'#13#10'  inherite'
  +'d Create(NodeName,NameSpace);'#13#10'  self.NodeType:=MyNodeType;'#13#10'  '
  +'self.MyForm:=MyForm;'#13#10#13#10'  self.SetMyEventTypes;'#13#10'  self.IsC'
  +'ontainer:=false;'#13#10#13#10'  SetNodePropDefaults(self,myDefaultAttribs);'
  +#13#10'end;'#13#10#13#10'function CreateWidget(MyNode, ParentNode:TDataNode;'
  +'ScreenObjectName,NameSpace:string;position:integer;Alignment:String):TDataN'
  +'ode;'#13#10'var'#13#10'  Checked,ReadOnly,LabelText,LabelPos:string;'#13#10
  +'  OnChangeString, OnFocusOutString, OnClickString, OnKeyString:String;'#13
  +#10'begin'#13#10'  LabelText:= MyNode.getAttribute(''LabelText'',true).Attri'
  +'bValue;'#13#10#13#10'  OnClickString:=''onclick="event.stopPropagation();va'
  +'r rc=pas.XDBTable.CellClick(event.target,''''''+ScreenObjectName+'''''','''
  +'''''+NameSpace+'''''');''+'#13#10'                          ''if (rc!='''''
  +''''') { ''+'#13#10'                          ''pas.Events.handleEvent(null,'
  +'''''Click'''',''''''+ScreenObjectName+'''''',''''''+NameSpace+'''''', rc); '
  +'}'' +'#13#10'                          ''" '';'#13#10'  asm'#13#10'    try{'
  +#13#10'    //pas.XDBTable.AddTableStyles('''');'#13#10#13#10'    var wrapper'
  +' = pas.HTMLUtils.CreateWrapperDiv(MyNode,ParentNode,''UI'',ScreenObjectName'
  +',NameSpace,$impl.MyNodeType,position);'#13#10'    wrapper.style.display = '
  +'''flex'';'#13#10'    var goright =  ''flex-e''+''nd'';'#13#10#13#10'    var'
  +' HTMLString='''';'#13#10'    var NodeIDString = "''"+ScreenObjectName+"''";'
  +#13#10'    var wrapperid = NameSpace+ScreenObjectName;'#13#10'    var MyObje'
  +'ctName=wrapperid+''Contents'';'#13#10#13#10#13#10'    HTMLString = ''<div i'
  +'d=''+MyObjectName+ '' ''+'#13#10'                 ''>Please see your browse'
  +'r Dev Tools for inspect/amend local data objectstores</div>'';'#13#10#13#10
  +'    var wrapper=document.getElementById(wrapperid);'#13#10'    wrapper.inse'
  +'rtAdjacentHTML(''beforeend'', HTMLString);'#13#10'  }'#13#10'  catch(err) {'
  +' alert(err.message+''  in XCheckBox.CreateXCheckBox'');}'#13#10#13#10'end;'
  +#13#10#13#10'  MyNode.ScreenObject:=MyNode;'#13#10'  RefreshComponentProps(m'
  +'yNode);'#13#10#13#10'  result:=myNode;'#13#10'end;'#13#10#13#10'function Cr'
  +'eateinterfaceObj(MyForm:TForm;NodeName,NameSpace:String):TObject;'#13#10'be'
  +'gin'#13#10'  result:=TObject(TXDBTable.Create(MyForm,NodeName,NameSpace));'
  +#13#10'end;'#13#10#13#10'procedure TXDBTable.SetTableWidth(AValue:string);'
  +#13#10'begin'#13#10'  myNode.SetAttributeValue(''TableWidth'',AValue);'#13#10
  +'  asm'#13#10'  var ob = document.getElementById(this.NameSpace+this.NodeNam'
  +'e);'#13#10'  pas.HTMLUtils.SetHeightWidthHTML(this,ob,''W'',AValue);'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'procedure TXDBTable.SetTableHeight(AValue:s'
  +'tring);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''TableHeight'',AVal'
  +'ue);'#13#10'  asm'#13#10'  var ob = document.getElementById(this.NameSpace+'
  +'this.NodeName);'#13#10'  pas.HTMLUtils.SetHeightWidthHTML(this,ob,''H'',AVa'
  +'lue);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TXDBTable.SetColWidt'
  +'h(AValue:integer);'#13#10'var'#13#10'  oldcw:integer;'#13#10'begin'#13#10' '
  +' //showmessage(''SetColWidth ''+inttostr(AValue));'#13#10'  oldcw:=self.Col'
  +'Width;'#13#10'  myNode.SetAttributeValue(''ColWidth'',IntToStr(AValue));'#13
  ,#10'end;'#13#10#13#10'procedure TXDBTable.SetDSName(AValue:string);'#13#10'b'
  +'egin'#13#10'  myNode.SetAttributeValue(''DSName'',AValue);'#13#10'  asm'#13
  +#10'  var ob = document.getElementById(this.NameSpace+this.NodeName);'#13#10
  +'  end;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'function TXDBTable.GetTable'
  +'Height:string;'#13#10'begin'#13#10'  result:=MyNode.getAttribute(''TableHei'
  +'ght'',true).AttribValue;'#13#10'end;'#13#10'function TXDBTable.GetTableWidt'
  +'h:string;'#13#10'begin'#13#10'  result:=MyNode.getAttribute(''TableWidth'','
  +'true).AttribValue;'#13#10'end;'#13#10'function TXDBTable.GetColWidth:intege'
  +'r;'#13#10'begin'#13#10'  result:=StrToInt(MyNode.getAttribute(''ColWidth'','
  +'true).AttribValue);'#13#10'end;'#13#10'function TXDBTable.GetDSName:string;'
  +#13#10'begin'#13#10'  result:=MyNode.getAttribute(''DSName'',true).AttribVal'
  +'ue;'#13#10'end;'#13#10#13#10'procedure SetDSNameOptions(FromRoot:TDataNode)'
  +';'#13#10'var'#13#10'  ClassDSNodes:TStringArray;'#13#10'  ClassNodes:TNodes'
  +'Array;'#13#10'  i:integer;'#13#10'begin'#13#10'  ClassNodes := FindNodesOfT'
  +'ype(FromRoot,''DMClass'',false,'''');'#13#10'  SetLength(ClassDSNodes,0);'
  +#13#10'  for i:=0 to length(ClassNodes)-1 do'#13#10'  begin'#13#10'    if My'
  +'StrtoBool(ClassNodes[i].GetAttribute(''MakeDataset'',false).AttribValue)=tr'
  +'ue then'#13#10'    begin'#13#10'      SetLength(ClassDSNodes,length(ClassDS'
  +'Nodes)+1);'#13#10'      ClassDSNodes[length(ClassDSNodes)-1]:=ClassNodes[i]'
  +'.NodeName;'#13#10'    end;'#13#10'  end;'#13#10'  AddAttribOptions(''TXDBTa'
  +'ble'',''DSName'',ClassDSNodes);'#13#10'end;'#13#10#13#10'begin'#13#10'  // '
  +'this is the set of node attributes that each TXTable instance will have.'#13
  +#10'  AddWrapperDefaultAttribs(myDefaultAttribs);'#13#10'  AddDefaultAttribu'
  +'te(myDefaultAttribs,''TableWidth'',''String'',''300'','''',false);'#13#10' '
  +' AddDefaultAttribute(myDefaultAttribs,''TableHeight'',''String'',''200'','''
  +''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''ColWidth'',''Int'
  +'eger'',''40'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,'''
  +'DSName'',''String'','''','''',false);'#13#10'  AddDefaultsToTable(MyNodeTyp'
  +'e,myDefaultAttribs);'#13#10#13#10'  AddAttribOptions(MyNodeType,''Alignment'
  +''',AlignmentOptions);'#13#10'  AddAttribOptions(MyNodeType,''LabelPos'',Lab'
  +'elPosOptions);'#13#10'  AddAttribOptions(MyNodeType,''DSName'',[]);'#13#10
  +#13#10'  {$ifndef JScript}'#13#10'  RegisterClass(TXDBTable);'#13#10'  AddNo'
  +'deFuncLookup(MyNodeType,@CreateWidget);'#13#10'  {$else}'#13#10'  AddNodeFu'
  +'ncLookup(MyNodeType,@CreateinterfaceObj,@CreateWidget);'#13#10'  {$endif}'
  +#13#10#13#10'  SuppressDesignerProperty(MyNodeType,''BgColor'');'#13#10'  Su'
  +'ppressDesignerProperty(MyNodeType,''Border'');'#13#10'  SuppressDesignerPro'
  +'perty(MyNodeType,''ContainerHeight'');'#13#10'  SuppressDesignerProperty(My'
  +'NodeType,''ContainerWidth'');'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('gpu-browser','JS',[
  '/**'#10' * gpu.js'#10' * http://gpu.rocks/'#10' *'#10' * GPU Accelerated Jav'
  +'aScript'#10' *'#10' * @version 2.9.3'#10' * @date Wed Apr 01 2020 07:53:27 '
  +'GMT-0400 (Eastern Daylight Time)'#10' *'#10' * @license MIT'#10' * The MIT '
  +'License'#10' *'#10' * Copyright (c) 2020 gpu.js Team'#10' */(function(f){if'
  +'(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()'
  +'}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if'
  +'(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined")'
  +'{g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.GPU = f()'
  +'}})(function(){var define,module,exports;return (function(){function r(e,n,'
  +'t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&re'
  +'quire;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot f'
  +'ind module ''"+i+"''");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={export'
  +'s:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p'
  +',p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof requir'
  +'e&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(re'
  +'quire,module,exports){'#10'(function (global, factory) {'#10'  typeof expor'
  +'ts === ''object'' && typeof module !== ''undefined'' ? factory(exports) :'
  +#10'  typeof define === ''function'' && define.amd ? define([''exports''], f'
  +'actory) :'#10'  (global = global || self, factory(global.acorn = {}));'#10
  +'}(this, function (exports) { ''use strict'';'#10#10#10'  var reservedWords '
  +'= {'#10'    3: "abstract boolean byte char class double enum export extends'
  +' final float goto implements import int interface long native package priva'
  +'te protected public short static super synchronized throws transient volati'
  +'le",'#10'    5: "class enum extends super const export import",'#10'    6: '
  +'"enum",'#10'    strict: "implements interface let package private protected'
  +' public static yield",'#10'    strictBind: "eval arguments"'#10'  };'#10#10
  +#10'  var ecma5AndLessKeywords = "break case catch continue debugger default'
  +' do else finally for function if return switch throw try var while with nul'
  +'l true false instanceof typeof void delete new in this";'#10#10'  var keywo'
  +'rds = {'#10'    5: ecma5AndLessKeywords,'#10'    "5module": ecma5AndLessKey'
  +'words + " export import",'#10'    6: ecma5AndLessKeywords + " const class e'
  +'xtends export import super"'#10'  };'#10#10'  var keywordRelationalOperator'
  +' = /^in(stanceof)?$/;'#10#10#10'  var nonASCIIidentifierStartChars = "\xaa\'
  +'xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\'
  +'u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-'
  +'\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u05'
  +'88\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u0'
  +'6e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u0'
  +'7b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0'
  +'858\u0860-\u086a\u08a0-\u08b4\u08b6-\u08bd\u0904-\u0939\u093d\u0950\u0958-\'
  +'u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2'
  +'\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-'
  +'\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\'
  +'u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa'
  +'8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05'
  +'-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3'
  +'d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b'
  +'95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd'
  +'0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0'
  +'c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\'
  +'u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\'
  +'u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a'
  +'-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e'
  +'46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0e'
  +'b3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0'
  +'f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u'
  +'106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-'
  +'\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u12'
  +'8d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u'
  +'12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13f'
  +'d\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u'
  +'170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780'
  +'-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u19'
  +'1e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\'
  ,'u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5'
  +'\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1'
  +'cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u'
  +'1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-'
  +'\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1f'
  +'d3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u'
  +'209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u'
  +'2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e'
  +'\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d6'
  +'7\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2'
  +'dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029'
  +'\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u3'
  +'0ff\u3105-\u312f\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-'
  +'\u9fef\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua64'
  +'0-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7bf\u'
  +'a7c2-\ua7c6\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua87'
  +'3\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua9'
  +'60-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\'
  +'uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5'
  +'\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab0'
  +'1-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\u'
  +'ab5c-\uab67\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6'
  +'d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\uf'
  +'b38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\u'
  +'fd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41'
  +'-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";'
  +#10'  var nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u04'
  +'83-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u06'
  +'4b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u'
  +'06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-'
  +'\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08d3-\u08e1\u08'
  +'e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u'
  +'0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u'
  +'09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\'
  +'u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb'
  +'-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b'
  +'44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bb'
  +'e-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3e-\u'
  +'0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\'
  +'u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\'
  +'u0ce6-\u0cef\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4'
  +'d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8'
  +'-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e'
  +'59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0'
  +'f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0'
  +'fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\'
  +'u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u13'
  +'71\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17'
  +'e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\'
  +'u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a9'
  +'0-\u1a99\u1ab0-\u1abd\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u'
  +'1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c4'
  +'9\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1'
  +'df9\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u'
  +'2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\'
  +'ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua'
  +'8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953'
  +'\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa'
  +'43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaa'
  +'be\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uab'
  +'f9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uf'
  +'f3f";'#10#10'  var nonASCIIidentifierStart = new RegExp("[" + nonASCIIident'
  +'ifierStartChars + "]");'#10'  var nonASCIIidentifier = new RegExp("[" + non'
  +'ASCIIidentifierStartChars + nonASCIIidentifierChars + "]");'#10#10'  nonASC'
  ,'IIidentifierStartChars = nonASCIIidentifierChars = null;'#10#10#10'  var as'
  +'tralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,2'
  +'8,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,'
  +'310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,2'
  +'5,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17'
  +',111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,3'
  +'0,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,'
  +'7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46'
  +',42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29'
  +',0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,'
  +'0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,'
  +'568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6'
  +'135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3'
  +',0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,'
  +'24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,130'
  +'1,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2'
  +',2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2'
  +',16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];'#10#10'  var astral'
  +'IdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,57'
  +'4,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2'
  +',49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,'
  +'193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,24'
  +'3,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21'
  +',2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,2'
  +'6,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,'
  +'49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,'
  +'6,6,9,792487,239];'#10#10'  function isInAstralSet(code, set) {'#10'    var'
  +' pos = 0x10000;'#10'    for (var i = 0; i < set.length; i += 2) {'#10'     '
  +' pos += set[i];'#10'      if (pos > code) { return false }'#10'      pos +='
  +' set[i + 1];'#10'      if (pos >= code) { return true }'#10'    }'#10'  }'
  +#10#10#10'  function isIdentifierStart(code, astral) {'#10'    if (code < 65'
  +') { return code === 36 }'#10'    if (code < 91) { return true }'#10'    if '
  +'(code < 97) { return code === 95 }'#10'    if (code < 123) { return true }'
  +#10'    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart'
  +'.test(String.fromCharCode(code)) }'#10'    if (astral === false) { return f'
  +'alse }'#10'    return isInAstralSet(code, astralIdentifierStartCodes)'#10' '
  +' }'#10#10#10'  function isIdentifierChar(code, astral) {'#10'    if (code <'
  +' 48) { return code === 36 }'#10'    if (code < 58) { return true }'#10'    '
  +'if (code < 65) { return false }'#10'    if (code < 91) { return true }'#10
  +'    if (code < 97) { return code === 95 }'#10'    if (code < 123) { return '
  +'true }'#10'    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentif'
  +'ier.test(String.fromCharCode(code)) }'#10'    if (astral === false) { retur'
  +'n false }'#10'    return isInAstralSet(code, astralIdentifierStartCodes) ||'
  +' isInAstralSet(code, astralIdentifierCodes)'#10'  }'#10#10#10#10#10#10'  va'
  +'r TokenType = function TokenType(label, conf) {'#10'    if ( conf === void '
  +'0 ) conf = {};'#10#10'    this.label = label;'#10'    this.keyword = conf.k'
  +'eyword;'#10'    this.beforeExpr = !!conf.beforeExpr;'#10'    this.startsExp'
  +'r = !!conf.startsExpr;'#10'    this.isLoop = !!conf.isLoop;'#10'    this.is'
  +'Assign = !!conf.isAssign;'#10'    this.prefix = !!conf.prefix;'#10'    this'
  +'.postfix = !!conf.postfix;'#10'    this.binop = conf.binop || null;'#10'   '
  +' this.updateContext = null;'#10'  };'#10#10'  function binop(name, prec) {'
  +#10'    return new TokenType(name, {beforeExpr: true, binop: prec})'#10'  }'
  +#10'  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};'
  +#10#10#10'  var keywords$1 = {};'#10#10'  function kw(name, options) {'#10' '
  +'   if ( options === void 0 ) options = {};'#10#10'    options.keyword = nam'
  +'e;'#10'    return keywords$1[name] = new TokenType(name, options)'#10'  }'
  +#10#10'  var types = {'#10'    num: new TokenType("num", startsExpr),'#10'  '
  +'  regexp: new TokenType("regexp", startsExpr),'#10'    string: new TokenTyp'
  +'e("string", startsExpr),'#10'    name: new TokenType("name", startsExpr),'
  +#10'    eof: new TokenType("eof"),'#10#10'    bracketL: new TokenType("[", {'
  +'beforeExpr: true, startsExpr: true}),'#10'    bracketR: new TokenType("]"),'
  +#10'    braceL: new TokenType("{", {beforeExpr: true, startsExpr: true}),'#10
  +'    braceR: new TokenType("}"),'#10'    parenL: new TokenType("(", {beforeE'
  +'xpr: true, startsExpr: true}),'#10'    parenR: new TokenType(")"),'#10'    '
  ,'comma: new TokenType(",", beforeExpr),'#10'    semi: new TokenType(";", bef'
  +'oreExpr),'#10'    colon: new TokenType(":", beforeExpr),'#10'    dot: new T'
  +'okenType("."),'#10'    question: new TokenType("?", beforeExpr),'#10'    ar'
  +'row: new TokenType("=>", beforeExpr),'#10'    template: new TokenType("temp'
  +'late"),'#10'    invalidTemplate: new TokenType("invalidTemplate"),'#10'    '
  +'ellipsis: new TokenType("...", beforeExpr),'#10'    backQuote: new TokenTyp'
  +'e("`", startsExpr),'#10'    dollarBraceL: new TokenType("${", {beforeExpr: '
  +'true, startsExpr: true}),'#10#10#10'    eq: new TokenType("=", {beforeExpr:'
  +' true, isAssign: true}),'#10'    assign: new TokenType("_=", {beforeExpr: t'
  +'rue, isAssign: true}),'#10'    incDec: new TokenType("++/--", {prefix: true'
  +', postfix: true, startsExpr: true}),'#10'    prefix: new TokenType("!/~", {'
  +'beforeExpr: true, prefix: true, startsExpr: true}),'#10'    logicalOR: bino'
  +'p("||", 1),'#10'    logicalAND: binop("&&", 2),'#10'    bitwiseOR: binop("|'
  +'", 3),'#10'    bitwiseXOR: binop("^", 4),'#10'    bitwiseAND: binop("&", 5)'
  +','#10'    equality: binop("==/!=/===/!==", 6),'#10'    relational: binop("<'
  +'/>/<=/>=", 7),'#10'    bitShift: binop("<</>>/>>>", 8),'#10'    plusMin: ne'
  +'w TokenType("+/-", {beforeExpr: true, binop: 9, prefix: true, startsExpr: t'
  +'rue}),'#10'    modulo: binop("%", 10),'#10'    star: binop("*", 10),'#10'  '
  +'  slash: binop("/", 10),'#10'    starstar: new TokenType("**", {beforeExpr:'
  +' true}),'#10#10'    _break: kw("break"),'#10'    _case: kw("case", beforeEx'
  +'pr),'#10'    _catch: kw("catch"),'#10'    _continue: kw("continue"),'#10'  '
  +'  _debugger: kw("debugger"),'#10'    _default: kw("default", beforeExpr),'
  +#10'    _do: kw("do", {isLoop: true, beforeExpr: true}),'#10'    _else: kw("'
  +'else", beforeExpr),'#10'    _finally: kw("finally"),'#10'    _for: kw("for"'
  +', {isLoop: true}),'#10'    _function: kw("function", startsExpr),'#10'    _'
  +'if: kw("if"),'#10'    _return: kw("return", beforeExpr),'#10'    _switch: k'
  +'w("switch"),'#10'    _throw: kw("throw", beforeExpr),'#10'    _try: kw("try'
  +'"),'#10'    _var: kw("var"),'#10'    _const: kw("const"),'#10'    _while: k'
  +'w("while", {isLoop: true}),'#10'    _with: kw("with"),'#10'    _new: kw("ne'
  +'w", {beforeExpr: true, startsExpr: true}),'#10'    _this: kw("this", starts'
  +'Expr),'#10'    _super: kw("super", startsExpr),'#10'    _class: kw("class",'
  +' startsExpr),'#10'    _extends: kw("extends", beforeExpr),'#10'    _export:'
  +' kw("export"),'#10'    _import: kw("import", startsExpr),'#10'    _null: kw'
  +'("null", startsExpr),'#10'    _true: kw("true", startsExpr),'#10'    _false'
  +': kw("false", startsExpr),'#10'    _in: kw("in", {beforeExpr: true, binop: '
  +'7}),'#10'    _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}),'
  +#10'    _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsExpr: t'
  +'rue}),'#10'    _void: kw("void", {beforeExpr: true, prefix: true, startsExp'
  +'r: true}),'#10'    _delete: kw("delete", {beforeExpr: true, prefix: true, s'
  +'tartsExpr: true})'#10'  };'#10#10#10'  var lineBreak = /\r\n?|\n|\u2028|\u2'
  +'029/;'#10'  var lineBreakG = new RegExp(lineBreak.source, "g");'#10#10'  fu'
  +'nction isNewLine(code, ecma2019String) {'#10'    return code === 10 || code'
  +' === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))'#10'  '
  +'}'#10#10'  var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000'
  +'\ufeff]/;'#10#10'  var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;'#10
  +#10'  var ref = Object.prototype;'#10'  var hasOwnProperty = ref.hasOwnPrope'
  +'rty;'#10'  var toString = ref.toString;'#10#10#10'  function has(obj, propN'
  +'ame) {'#10'    return hasOwnProperty.call(obj, propName)'#10'  }'#10#10'  v'
  +'ar isArray = Array.isArray || (function (obj) { return ('#10'    toString.c'
  +'all(obj) === "[object Array]"'#10'  ); });'#10#10'  function wordsRegexp(wo'
  +'rds) {'#10'    return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$")'
  +#10'  }'#10#10#10'  var Position = function Position(line, col) {'#10'    th'
  +'is.line = line;'#10'    this.column = col;'#10'  };'#10#10'  Position.proto'
  +'type.offset = function offset (n) {'#10'    return new Position(this.line, '
  +'this.column + n)'#10'  };'#10#10'  var SourceLocation = function SourceLoca'
  +'tion(p, start, end) {'#10'    this.start = start;'#10'    this.end = end;'
  +#10'    if (p.sourceFile !== null) { this.source = p.sourceFile; }'#10'  };'
  +#10#10#10'  function getLineInfo(input, offset) {'#10'    for (var line = 1,'
  +' cur = 0;;) {'#10'      lineBreakG.lastIndex = cur;'#10'      var match = l'
  +'ineBreakG.exec(input);'#10'      if (match && match.index < offset) {'#10' '
  +'       ++line;'#10'        cur = match.index + match[0].length;'#10'      }'
  +' else {'#10'        return new Position(line, offset - cur)'#10'      }'#10
  +'    }'#10'  }'#10#10#10'  var defaultOptions = {'#10'    ecmaVersion: 10,'
  +#10'    sourceType: "script",'#10'    onInsertedSemicolon: null,'#10'    onT'
  ,'railingComma: null,'#10'    allowReserved: null,'#10'    allowReturnOutside'
  +'Function: false,'#10'    allowImportExportEverywhere: false,'#10'    allowA'
  +'waitOutsideFunction: false,'#10'    allowHashBang: false,'#10'    locations'
  +': false,'#10'    onToken: null,'#10'    onComment: null,'#10'    ranges: fa'
  +'lse,'#10'    program: null,'#10'    sourceFile: null,'#10'    directSourceF'
  +'ile: null,'#10'    preserveParens: false'#10'  };'#10#10#10'  function getO'
  +'ptions(opts) {'#10'    var options = {};'#10#10'    for (var opt in default'
  +'Options)'#10'      { options[opt] = opts && has(opts, opt) ? opts[opt] : de'
  +'faultOptions[opt]; }'#10#10'    if (options.ecmaVersion >= 2015)'#10'      '
  +'{ options.ecmaVersion -= 2009; }'#10#10'    if (options.allowReserved == nu'
  +'ll)'#10'      { options.allowReserved = options.ecmaVersion < 5; }'#10#10' '
  +'   if (isArray(options.onToken)) {'#10'      var tokens = options.onToken;'
  +#10'      options.onToken = function (token) { return tokens.push(token); };'
  +#10'    }'#10'    if (isArray(options.onComment))'#10'      { options.onComm'
  +'ent = pushComment(options, options.onComment); }'#10#10'    return options'
  +#10'  }'#10#10'  function pushComment(options, array) {'#10'    return funct'
  +'ion(block, text, start, end, startLoc, endLoc) {'#10'      var comment = {'
  +#10'        type: block ? "Block" : "Line",'#10'        value: text,'#10'   '
  +'     start: start,'#10'        end: end'#10'      };'#10'      if (options.'
  +'locations)'#10'        { comment.loc = new SourceLocation(this, startLoc, e'
  +'ndLoc); }'#10'      if (options.ranges)'#10'        { comment.range = [star'
  +'t, end]; }'#10'      array.push(comment);'#10'    }'#10'  }'#10#10'  var'#10
  +'      SCOPE_TOP = 1,'#10'      SCOPE_FUNCTION = 2,'#10'      SCOPE_VAR = SC'
  +'OPE_TOP | SCOPE_FUNCTION,'#10'      SCOPE_ASYNC = 4,'#10'      SCOPE_GENERA'
  +'TOR = 8,'#10'      SCOPE_ARROW = 16,'#10'      SCOPE_SIMPLE_CATCH = 32,'#10
  +'      SCOPE_SUPER = 64,'#10'      SCOPE_DIRECT_SUPER = 128;'#10#10'  functi'
  +'on functionFlags(async, generator) {'#10'    return SCOPE_FUNCTION | (async'
  +' ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)'#10'  }'#10#10'  va'
  +'r'#10'      BIND_NONE = 0, '#10'      BIND_VAR = 1, '#10'      BIND_LEXICAL'
  +' = 2, '#10'      BIND_FUNCTION = 3, '#10'      BIND_SIMPLE_CATCH = 4, '#10
  +'      BIND_OUTSIDE = 5; '#10#10'  var Parser = function Parser(options, inp'
  +'ut, startPos) {'#10'    this.options = options = getOptions(options);'#10' '
  +'   this.sourceFile = options.sourceFile;'#10'    this.keywords = wordsRegex'
  +'p(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ?'
  +' "5module" : 5]);'#10'    var reserved = "";'#10'    if (options.allowReser'
  +'ved !== true) {'#10'      for (var v = options.ecmaVersion;; v--)'#10'     '
  +'   { if (reserved = reservedWords[v]) { break } }'#10'      if (options.sou'
  +'rceType === "module") { reserved += " await"; }'#10'    }'#10'    this.rese'
  +'rvedWords = wordsRegexp(reserved);'#10'    var reservedStrict = (reserved ?'
  +' reserved + " " : "") + reservedWords.strict;'#10'    this.reservedWordsStr'
  +'ict = wordsRegexp(reservedStrict);'#10'    this.reservedWordsStrictBind = w'
  +'ordsRegexp(reservedStrict + " " + reservedWords.strictBind);'#10'    this.i'
  +'nput = String(input);'#10#10'    this.containsEsc = false;'#10#10#10'    if'
  +' (startPos) {'#10'      this.pos = startPos;'#10'      this.lineStart = thi'
  +'s.input.lastIndexOf("\n", startPos - 1) + 1;'#10'      this.curLine = this.'
  +'input.slice(0, this.lineStart).split(lineBreak).length;'#10'    } else {'#10
  +'      this.pos = this.lineStart = 0;'#10'      this.curLine = 1;'#10'    }'
  +#10#10'    this.type = types.eof;'#10'    this.value = null;'#10'    this.st'
  +'art = this.end = this.pos;'#10'    this.startLoc = this.endLoc = this.curPo'
  +'sition();'#10#10'    this.lastTokEndLoc = this.lastTokStartLoc = null;'#10
  +'    this.lastTokStart = this.lastTokEnd = this.pos;'#10#10'    this.context'
  +' = this.initialContext();'#10'    this.exprAllowed = true;'#10#10'    this.'
  +'inModule = options.sourceType === "module";'#10'    this.strict = this.inMo'
  +'dule || this.strictDirective(this.pos);'#10#10'    this.potentialArrowAt = '
  +'-1;'#10#10'    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;'#10
  +'    this.labels = [];'#10'    this.undefinedExports = {};'#10#10'    if (th'
  +'is.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!")'
  +#10'      { this.skipLineComment(2); }'#10#10'    this.scopeStack = [];'#10
  +'    this.enterScope(SCOPE_TOP);'#10#10'    this.regexpState = null;'#10'  }'
  +';'#10#10'  var prototypeAccessors = { inFunction: { configurable: true },in'
  +'Generator: { configurable: true },inAsync: { configurable: true },allowSupe'
  +'r: { configurable: true },allowDirectSuper: { configurable: true },treatFun'
  +'ctionsAsVar: { configurable: true } };'#10#10'  Parser.prototype.parse = fu'
  +'nction parse () {'#10'    var node = this.options.program || this.startNode'
  ,'();'#10'    this.nextToken();'#10'    return this.parseTopLevel(node)'#10' '
  +' };'#10#10'  prototypeAccessors.inFunction.get = function () { return (this'
  +'.currentVarScope().flags & SCOPE_FUNCTION) > 0 };'#10'  prototypeAccessors.'
  +'inGenerator.get = function () { return (this.currentVarScope().flags & SCOP'
  +'E_GENERATOR) > 0 };'#10'  prototypeAccessors.inAsync.get = function () { re'
  +'turn (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };'#10'  prototypeAcc'
  +'essors.allowSuper.get = function () { return (this.currentThisScope().flags'
  +' & SCOPE_SUPER) > 0 };'#10'  prototypeAccessors.allowDirectSuper.get = func'
  +'tion () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 }'
  +';'#10'  prototypeAccessors.treatFunctionsAsVar.get = function () { return t'
  +'his.treatFunctionsAsVarInScope(this.currentScope()) };'#10#10'  Parser.prot'
  +'otype.inNonArrowFunction = function inNonArrowFunction () { return (this.cu'
  +'rrentThisScope().flags & SCOPE_FUNCTION) > 0 };'#10#10'  Parser.extend = fu'
  +'nction extend () {'#10'      var plugins = [], len = arguments.length;'#10
  +'      while ( len-- ) plugins[ len ] = arguments[ len ];'#10#10'    var cls'
  +' = this;'#10'    for (var i = 0; i < plugins.length; i++) { cls = plugins[i'
  +'](cls); }'#10'    return cls'#10'  };'#10#10'  Parser.parse = function pars'
  +'e (input, options) {'#10'    return new this(options, input).parse()'#10'  '
  +'};'#10#10'  Parser.parseExpressionAt = function parseExpressionAt (input, p'
  +'os, options) {'#10'    var parser = new this(options, input, pos);'#10'    '
  +'parser.nextToken();'#10'    return parser.parseExpression()'#10'  };'#10#10
  +'  Parser.tokenizer = function tokenizer (input, options) {'#10'    return n'
  +'ew this(options, input)'#10'  };'#10#10'  Object.defineProperties( Parser.p'
  +'rototype, prototypeAccessors );'#10#10'  var pp = Parser.prototype;'#10#10
  +#10'  var literal = /^(?:''((?:\\.|[^''])*?)''|"((?:\\.|[^"])*?)")/;'#10'  p'
  +'p.strictDirective = function(start) {'#10'    for (;;) {'#10'      skipWhit'
  +'eSpace.lastIndex = start;'#10'      start += skipWhiteSpace.exec(this.input'
  +')[0].length;'#10'      var match = literal.exec(this.input.slice(start));'
  +#10'      if (!match) { return false }'#10'      if ((match[1] || match[2]) '
  +'=== "use strict") { return true }'#10'      start += match[0].length;'#10#10
  +'      skipWhiteSpace.lastIndex = start;'#10'      start += skipWhiteSpace.e'
  +'xec(this.input)[0].length;'#10'      if (this.input[start] === ";")'#10'   '
  +'     { start++; }'#10'    }'#10'  };'#10#10#10'  pp.eat = function(type) {'
  +#10'    if (this.type === type) {'#10'      this.next();'#10'      return tr'
  +'ue'#10'    } else {'#10'      return false'#10'    }'#10'  };'#10#10#10'  p'
  +'p.isContextual = function(name) {'#10'    return this.type === types.name &'
  +'& this.value === name && !this.containsEsc'#10'  };'#10#10#10'  pp.eatConte'
  +'xtual = function(name) {'#10'    if (!this.isContextual(name)) { return fal'
  +'se }'#10'    this.next();'#10'    return true'#10'  };'#10#10#10'  pp.expec'
  +'tContextual = function(name) {'#10'    if (!this.eatContextual(name)) { thi'
  +'s.unexpected(); }'#10'  };'#10#10#10'  pp.canInsertSemicolon = function() {'
  +#10'    return this.type === types.eof ||'#10'      this.type === types.brac'
  +'eR ||'#10'      lineBreak.test(this.input.slice(this.lastTokEnd, this.start'
  +'))'#10'  };'#10#10'  pp.insertSemicolon = function() {'#10'    if (this.can'
  +'InsertSemicolon()) {'#10'      if (this.options.onInsertedSemicolon)'#10'  '
  +'      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLo'
  +'c); }'#10'      return true'#10'    }'#10'  };'#10#10#10'  pp.semicolon = f'
  +'unction() {'#10'    if (!this.eat(types.semi) && !this.insertSemicolon()) {'
  +' this.unexpected(); }'#10'  };'#10#10'  pp.afterTrailingComma = function(to'
  +'kType, notNext) {'#10'    if (this.type === tokType) {'#10'      if (this.o'
  +'ptions.onTrailingComma)'#10'        { this.options.onTrailingComma(this.las'
  +'tTokStart, this.lastTokStartLoc); }'#10'      if (!notNext)'#10'        { t'
  +'his.next(); }'#10'      return true'#10'    }'#10'  };'#10#10#10'  pp.expec'
  +'t = function(type) {'#10'    this.eat(type) || this.unexpected();'#10'  };'
  +#10#10#10'  pp.unexpected = function(pos) {'#10'    this.raise(pos != null ?'
  +' pos : this.start, "Unexpected token");'#10'  };'#10#10'  function Destruct'
  +'uringErrors() {'#10'    this.shorthandAssign ='#10'    this.trailingComma ='
  +#10'    this.parenthesizedAssign ='#10'    this.parenthesizedBind ='#10'    '
  +'this.doubleProto ='#10'      -1;'#10'  }'#10#10'  pp.checkPatternErrors = f'
  +'unction(refDestructuringErrors, isAssign) {'#10'    if (!refDestructuringEr'
  +'rors) { return }'#10'    if (refDestructuringErrors.trailingComma > -1)'#10
  +'      { this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma '
  +'is not permitted after the rest element"); }'#10'    var parens = isAssign '
  +'? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.paren'
  ,'thesizedBind;'#10'    if (parens > -1) { this.raiseRecoverable(parens, "Par'
  +'enthesized pattern"); }'#10'  };'#10#10'  pp.checkExpressionErrors = functi'
  +'on(refDestructuringErrors, andThrow) {'#10'    if (!refDestructuringErrors)'
  +' { return false }'#10'    var shorthandAssign = refDestructuringErrors.shor'
  +'thandAssign;'#10'    var doubleProto = refDestructuringErrors.doubleProto;'
  +#10'    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }'
  +#10'    if (shorthandAssign >= 0)'#10'      { this.raise(shorthandAssign, "S'
  +'horthand property assignments are valid only in destructuring patterns"); }'
  +#10'    if (doubleProto >= 0)'#10'      { this.raiseRecoverable(doubleProto,'
  +' "Redefinition of __proto__ property"); }'#10'  };'#10#10'  pp.checkYieldAw'
  +'aitInDefaultParams = function() {'#10'    if (this.yieldPos && (!this.await'
  +'Pos || this.yieldPos < this.awaitPos))'#10'      { this.raise(this.yieldPos'
  +', "Yield expression cannot be a default value"); }'#10'    if (this.awaitPo'
  +'s)'#10'      { this.raise(this.awaitPos, "Await expression cannot be a defa'
  +'ult value"); }'#10'  };'#10#10'  pp.isSimpleAssignTarget = function(expr) {'
  +#10'    if (expr.type === "ParenthesizedExpression")'#10'      { return this'
  +'.isSimpleAssignTarget(expr.expression) }'#10'    return expr.type === "Iden'
  +'tifier" || expr.type === "MemberExpression"'#10'  };'#10#10'  var pp$1 = Pa'
  +'rser.prototype;'#10#10#10#10'  pp$1.parseTopLevel = function(node) {'#10'  '
  +'  var exports = {};'#10'    if (!node.body) { node.body = []; }'#10'    whi'
  +'le (this.type !== types.eof) {'#10'      var stmt = this.parseStatement(nul'
  +'l, true, exports);'#10'      node.body.push(stmt);'#10'    }'#10'    if (th'
  +'is.inModule)'#10'      { for (var i = 0, list = Object.keys(this.undefinedE'
  +'xports); i < list.length; i += 1)'#10'        {'#10'          var name = li'
  +'st[i];'#10#10'          this.raiseRecoverable(this.undefinedExports[name].s'
  +'tart, ("Export ''" + name + "'' is not defined"));'#10'        } }'#10'    '
  +'this.adaptDirectivePrologue(node.body);'#10'    this.next();'#10'    node.s'
  +'ourceType = this.options.sourceType;'#10'    return this.finishNode(node, "'
  +'Program")'#10'  };'#10#10'  var loopLabel = {kind: "loop"}, switchLabel = {'
  +'kind: "switch"};'#10#10'  pp$1.isLet = function(context) {'#10'    if (this'
  +'.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }'#10
  +'    skipWhiteSpace.lastIndex = this.pos;'#10'    var skip = skipWhiteSpace.'
  +'exec(this.input);'#10'    var next = this.pos + skip[0].length, nextCh = th'
  +'is.input.charCodeAt(next);'#10'    if (nextCh === 91) { return true } '#10
  +'    if (context) { return false }'#10#10'    if (nextCh === 123) { return t'
  +'rue } '#10'    if (isIdentifierStart(nextCh, true)) {'#10'      var pos = n'
  +'ext + 1;'#10'      while (isIdentifierChar(this.input.charCodeAt(pos), true'
  +')) { ++pos; }'#10'      var ident = this.input.slice(next, pos);'#10'      '
  +'if (!keywordRelationalOperator.test(ident)) { return true }'#10'    }'#10' '
  +'   return false'#10'  };'#10#10'  pp$1.isAsyncFunction = function() {'#10' '
  +'   if (this.options.ecmaVersion < 8 || !this.isContextual("async"))'#10'   '
  +'   { return false }'#10#10'    skipWhiteSpace.lastIndex = this.pos;'#10'   '
  +' var skip = skipWhiteSpace.exec(this.input);'#10'    var next = this.pos + '
  +'skip[0].length;'#10'    return !lineBreak.test(this.input.slice(this.pos, n'
  +'ext)) &&'#10'      this.input.slice(next, next + 8) === "function" &&'#10' '
  +'     (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt'
  +'(next + 8)))'#10'  };'#10#10#10'  pp$1.parseStatement = function(context, t'
  +'opLevel, exports) {'#10'    var starttype = this.type, node = this.startNod'
  +'e(), kind;'#10#10'    if (this.isLet(context)) {'#10'      starttype = type'
  +'s._var;'#10'      kind = "let";'#10'    }'#10#10#10'    switch (starttype) '
  +'{'#10'    case types._break: case types._continue: return this.parseBreakCo'
  +'ntinueStatement(node, starttype.keyword)'#10'    case types._debugger: retu'
  +'rn this.parseDebuggerStatement(node)'#10'    case types._do: return this.pa'
  +'rseDoStatement(node)'#10'    case types._for: return this.parseForStatement'
  +'(node)'#10'    case types._function:'#10'      if ((context && (this.strict'
  +' || context !== "if" && context !== "label")) && this.options.ecmaVersion >'
  +'= 6) { this.unexpected(); }'#10'      return this.parseFunctionStatement(no'
  +'de, false, !context)'#10'    case types._class:'#10'      if (context) { th'
  +'is.unexpected(); }'#10'      return this.parseClass(node, true)'#10'    cas'
  +'e types._if: return this.parseIfStatement(node)'#10'    case types._return:'
  +' return this.parseReturnStatement(node)'#10'    case types._switch: return '
  +'this.parseSwitchStatement(node)'#10'    case types._throw: return this.pars'
  +'eThrowStatement(node)'#10'    case types._try: return this.parseTryStatemen'
  +'t(node)'#10'    case types._const: case types._var:'#10'      kind = kind |'
  ,'| this.value;'#10'      if (context && kind !== "var") { this.unexpected();'
  +' }'#10'      return this.parseVarStatement(node, kind)'#10'    case types._'
  +'while: return this.parseWhileStatement(node)'#10'    case types._with: retu'
  +'rn this.parseWithStatement(node)'#10'    case types.braceL: return this.par'
  +'seBlock(true, node)'#10'    case types.semi: return this.parseEmptyStatemen'
  +'t(node)'#10'    case types._export:'#10'    case types._import:'#10'      i'
  +'f (this.options.ecmaVersion > 10 && starttype === types._import) {'#10'    '
  +'    skipWhiteSpace.lastIndex = this.pos;'#10'        var skip = skipWhiteSp'
  +'ace.exec(this.input);'#10'        var next = this.pos + skip[0].length, nex'
  +'tCh = this.input.charCodeAt(next);'#10'        if (nextCh === 40) '#10'    '
  +'      { return this.parseExpressionStatement(node, this.parseExpression()) '
  +'}'#10'      }'#10#10'      if (!this.options.allowImportExportEverywhere) {'
  +#10'        if (!topLevel)'#10'          { this.raise(this.start, "''import'
  +''' and ''export'' may only appear at the top level"); }'#10'        if (!th'
  +'is.inModule)'#10'          { this.raise(this.start, "''import'' and ''expor'
  +'t'' may appear only with ''sourceType: module''"); }'#10'      }'#10'      '
  +'return starttype === types._import ? this.parseImport(node) : this.parseExp'
  +'ort(node, exports)'#10#10'    default:'#10'      if (this.isAsyncFunction()'
  +') {'#10'        if (context) { this.unexpected(); }'#10'        this.next()'
  +';'#10'        return this.parseFunctionStatement(node, true, !context)'#10
  +'      }'#10#10'      var maybeName = this.value, expr = this.parseExpressio'
  +'n();'#10'      if (starttype === types.name && expr.type === "Identifier" &'
  +'& this.eat(types.colon))'#10'        { return this.parseLabeledStatement(no'
  +'de, maybeName, expr, context) }'#10'      else { return this.parseExpressio'
  +'nStatement(node, expr) }'#10'    }'#10'  };'#10#10'  pp$1.parseBreakContinu'
  +'eStatement = function(node, keyword) {'#10'    var isBreak = keyword === "b'
  +'reak";'#10'    this.next();'#10'    if (this.eat(types.semi) || this.insert'
  +'Semicolon()) { node.label = null; }'#10'    else if (this.type !== types.na'
  +'me) { this.unexpected(); }'#10'    else {'#10'      node.label = this.parse'
  +'Ident();'#10'      this.semicolon();'#10'    }'#10#10'    var i = 0;'#10'  '
  +'  for (; i < this.labels.length; ++i) {'#10'      var lab = this.labels[i];'
  +#10'      if (node.label == null || lab.name === node.label.name) {'#10'    '
  +'    if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }'#10
  +'        if (node.label && isBreak) { break }'#10'      }'#10'    }'#10'    '
  +'if (i === this.labels.length) { this.raise(node.start, "Unsyntactic " + key'
  +'word); }'#10'    return this.finishNode(node, isBreak ? "BreakStatement" : '
  +'"ContinueStatement")'#10'  };'#10#10'  pp$1.parseDebuggerStatement = functi'
  +'on(node) {'#10'    this.next();'#10'    this.semicolon();'#10'    return th'
  +'is.finishNode(node, "DebuggerStatement")'#10'  };'#10#10'  pp$1.parseDoStat'
  +'ement = function(node) {'#10'    this.next();'#10'    this.labels.push(loop'
  +'Label);'#10'    node.body = this.parseStatement("do");'#10'    this.labels.'
  +'pop();'#10'    this.expect(types._while);'#10'    node.test = this.parsePar'
  +'enExpression();'#10'    if (this.options.ecmaVersion >= 6)'#10'      { this'
  +'.eat(types.semi); }'#10'    else'#10'      { this.semicolon(); }'#10'    re'
  +'turn this.finishNode(node, "DoWhileStatement")'#10'  };'#10#10#10'  pp$1.pa'
  +'rseForStatement = function(node) {'#10'    this.next();'#10'    var awaitAt'
  +' = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && '
  +'this.options.allowAwaitOutsideFunction)) && this.eatContextual("await")) ? '
  +'this.lastTokStart : -1;'#10'    this.labels.push(loopLabel);'#10'    this.e'
  +'nterScope(0);'#10'    this.expect(types.parenL);'#10'    if (this.type === '
  +'types.semi) {'#10'      if (awaitAt > -1) { this.unexpected(awaitAt); }'#10
  +'      return this.parseFor(node, null)'#10'    }'#10'    var isLet = this.i'
  +'sLet();'#10'    if (this.type === types._var || this.type === types._const '
  +'|| isLet) {'#10'      var init$1 = this.startNode(), kind = isLet ? "let" :'
  +' this.value;'#10'      this.next();'#10'      this.parseVar(init$1, true, k'
  +'ind);'#10'      this.finishNode(init$1, "VariableDeclaration");'#10'      i'
  +'f ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isCon'
  +'textual("of"))) && init$1.declarations.length === 1) {'#10'        if (this'
  +'.options.ecmaVersion >= 9) {'#10'          if (this.type === types._in) {'
  +#10'            if (awaitAt > -1) { this.unexpected(awaitAt); }'#10'        '
  +'  } else { node.await = awaitAt > -1; }'#10'        }'#10'        return th'
  +'is.parseForIn(node, init$1)'#10'      }'#10'      if (awaitAt > -1) { this.'
  +'unexpected(awaitAt); }'#10'      return this.parseFor(node, init$1)'#10'   '
  +' }'#10'    var refDestructuringErrors = new DestructuringErrors;'#10'    va'
  ,'r init = this.parseExpression(true, refDestructuringErrors);'#10'    if (th'
  +'is.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextua'
  +'l("of"))) {'#10'      if (this.options.ecmaVersion >= 9) {'#10'        if ('
  +'this.type === types._in) {'#10'          if (awaitAt > -1) { this.unexpecte'
  +'d(awaitAt); }'#10'        } else { node.await = awaitAt > -1; }'#10'      }'
  +#10'      this.toAssignable(init, false, refDestructuringErrors);'#10'      '
  +'this.checkLVal(init);'#10'      return this.parseForIn(node, init)'#10'    '
  +'} else {'#10'      this.checkExpressionErrors(refDestructuringErrors, true)'
  +';'#10'    }'#10'    if (awaitAt > -1) { this.unexpected(awaitAt); }'#10'   '
  +' return this.parseFor(node, init)'#10'  };'#10#10'  pp$1.parseFunctionState'
  +'ment = function(node, isAsync, declarationPosition) {'#10'    this.next();'
  +#10'    return this.parseFunction(node, FUNC_STATEMENT | (declarationPositio'
  +'n ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)'#10'  };'#10#10'  pp$1.par'
  +'seIfStatement = function(node) {'#10'    this.next();'#10'    node.test = t'
  +'his.parseParenExpression();'#10'    node.consequent = this.parseStatement("'
  +'if");'#10'    node.alternate = this.eat(types._else) ? this.parseStatement('
  +'"if") : null;'#10'    return this.finishNode(node, "IfStatement")'#10'  };'
  +#10#10'  pp$1.parseReturnStatement = function(node) {'#10'    if (!this.inFu'
  +'nction && !this.options.allowReturnOutsideFunction)'#10'      { this.raise('
  +'this.start, "''return'' outside of function"); }'#10'    this.next();'#10#10
  +#10'    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument '
  +'= null; }'#10'    else { node.argument = this.parseExpression(); this.semic'
  +'olon(); }'#10'    return this.finishNode(node, "ReturnStatement")'#10'  };'
  +#10#10'  pp$1.parseSwitchStatement = function(node) {'#10'    this.next();'
  +#10'    node.discriminant = this.parseParenExpression();'#10'    node.cases '
  +'= [];'#10'    this.expect(types.braceL);'#10'    this.labels.push(switchLab'
  +'el);'#10'    this.enterScope(0);'#10#10#10'    var cur;'#10'    for (var sa'
  +'wDefault = false; this.type !== types.braceR;) {'#10'      if (this.type =='
  +'= types._case || this.type === types._default) {'#10'        var isCase = t'
  +'his.type === types._case;'#10'        if (cur) { this.finishNode(cur, "Swit'
  +'chCase"); }'#10'        node.cases.push(cur = this.startNode());'#10'      '
  +'  cur.consequent = [];'#10'        this.next();'#10'        if (isCase) {'
  +#10'          cur.test = this.parseExpression();'#10'        } else {'#10'  '
  +'        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, "Multipl'
  +'e default clauses"); }'#10'          sawDefault = true;'#10'          cur.t'
  +'est = null;'#10'        }'#10'        this.expect(types.colon);'#10'      }'
  +' else {'#10'        if (!cur) { this.unexpected(); }'#10'        cur.conseq'
  +'uent.push(this.parseStatement(null));'#10'      }'#10'    }'#10'    this.ex'
  +'itScope();'#10'    if (cur) { this.finishNode(cur, "SwitchCase"); }'#10'   '
  +' this.next(); '#10'    this.labels.pop();'#10'    return this.finishNode(no'
  +'de, "SwitchStatement")'#10'  };'#10#10'  pp$1.parseThrowStatement = functio'
  +'n(node) {'#10'    this.next();'#10'    if (lineBreak.test(this.input.slice('
  +'this.lastTokEnd, this.start)))'#10'      { this.raise(this.lastTokEnd, "Ill'
  +'egal newline after throw"); }'#10'    node.argument = this.parseExpression('
  +');'#10'    this.semicolon();'#10'    return this.finishNode(node, "ThrowSta'
  +'tement")'#10'  };'#10#10#10'  var empty = [];'#10#10'  pp$1.parseTryStateme'
  +'nt = function(node) {'#10'    this.next();'#10'    node.block = this.parseB'
  +'lock();'#10'    node.handler = null;'#10'    if (this.type === types._catch'
  +') {'#10'      var clause = this.startNode();'#10'      this.next();'#10'   '
  +'   if (this.eat(types.parenL)) {'#10'        clause.param = this.parseBindi'
  +'ngAtom();'#10'        var simple = clause.param.type === "Identifier";'#10
  +'        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);'#10'        this.'
  +'checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);'#10'   '
  +'     this.expect(types.parenR);'#10'      } else {'#10'        if (this.opt'
  +'ions.ecmaVersion < 10) { this.unexpected(); }'#10'        clause.param = nu'
  +'ll;'#10'        this.enterScope(0);'#10'      }'#10'      clause.body = thi'
  +'s.parseBlock(false);'#10'      this.exitScope();'#10'      node.handler = t'
  +'his.finishNode(clause, "CatchClause");'#10'    }'#10'    node.finalizer = t'
  +'his.eat(types._finally) ? this.parseBlock() : null;'#10'    if (!node.handl'
  +'er && !node.finalizer)'#10'      { this.raise(node.start, "Missing catch or'
  +' finally clause"); }'#10'    return this.finishNode(node, "TryStatement")'
  +#10'  };'#10#10'  pp$1.parseVarStatement = function(node, kind) {'#10'    th'
  +'is.next();'#10'    this.parseVar(node, false, kind);'#10'    this.semicolon'
  +'();'#10'    return this.finishNode(node, "VariableDeclaration")'#10'  };'#10
  ,#10'  pp$1.parseWhileStatement = function(node) {'#10'    this.next();'#10' '
  +'   node.test = this.parseParenExpression();'#10'    this.labels.push(loopLa'
  +'bel);'#10'    node.body = this.parseStatement("while");'#10'    this.labels'
  +'.pop();'#10'    return this.finishNode(node, "WhileStatement")'#10'  };'#10
  +#10'  pp$1.parseWithStatement = function(node) {'#10'    if (this.strict) { '
  +'this.raise(this.start, "''with'' in strict mode"); }'#10'    this.next();'
  +#10'    node.object = this.parseParenExpression();'#10'    node.body = this.'
  +'parseStatement("with");'#10'    return this.finishNode(node, "WithStatement'
  +'")'#10'  };'#10#10'  pp$1.parseEmptyStatement = function(node) {'#10'    th'
  +'is.next();'#10'    return this.finishNode(node, "EmptyStatement")'#10'  };'
  +#10#10'  pp$1.parseLabeledStatement = function(node, maybeName, expr, contex'
  +'t) {'#10'    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 +'
  +'= 1)'#10'      {'#10'      var label = list[i$1];'#10#10'      if (label.na'
  +'me === maybeName)'#10'        { this.raise(expr.start, "Label ''" + maybeNa'
  +'me + "'' is already declared");'#10'    } }'#10'    var kind = this.type.is'
  +'Loop ? "loop" : this.type === types._switch ? "switch" : null;'#10'    for '
  +'(var i = this.labels.length - 1; i >= 0; i--) {'#10'      var label$1 = thi'
  +'s.labels[i];'#10'      if (label$1.statementStart === node.start) {'#10'   '
  +'     label$1.statementStart = this.start;'#10'        label$1.kind = kind;'
  +#10'      } else { break }'#10'    }'#10'    this.labels.push({name: maybeNa'
  +'me, kind: kind, statementStart: this.start});'#10'    node.body = this.pars'
  +'eStatement(context ? context.indexOf("label") === -1 ? context + "label" : '
  +'context : "label");'#10'    this.labels.pop();'#10'    node.label = expr;'
  +#10'    return this.finishNode(node, "LabeledStatement")'#10'  };'#10#10'  p'
  +'p$1.parseExpressionStatement = function(node, expr) {'#10'    node.expressi'
  +'on = expr;'#10'    this.semicolon();'#10'    return this.finishNode(node, "'
  +'ExpressionStatement")'#10'  };'#10#10#10'  pp$1.parseBlock = function(creat'
  +'eNewLexicalScope, node) {'#10'    if ( createNewLexicalScope === void 0 ) c'
  +'reateNewLexicalScope = true;'#10'    if ( node === void 0 ) node = this.sta'
  +'rtNode();'#10#10'    node.body = [];'#10'    this.expect(types.braceL);'#10
  +'    if (createNewLexicalScope) { this.enterScope(0); }'#10'    while (!this'
  +'.eat(types.braceR)) {'#10'      var stmt = this.parseStatement(null);'#10' '
  +'     node.body.push(stmt);'#10'    }'#10'    if (createNewLexicalScope) { t'
  +'his.exitScope(); }'#10'    return this.finishNode(node, "BlockStatement")'
  +#10'  };'#10#10#10'  pp$1.parseFor = function(node, init) {'#10'    node.ini'
  +'t = init;'#10'    this.expect(types.semi);'#10'    node.test = this.type =='
  +'= types.semi ? null : this.parseExpression();'#10'    this.expect(types.sem'
  +'i);'#10'    node.update = this.type === types.parenR ? null : this.parseExp'
  +'ression();'#10'    this.expect(types.parenR);'#10'    node.body = this.pars'
  +'eStatement("for");'#10'    this.exitScope();'#10'    this.labels.pop();'#10
  +'    return this.finishNode(node, "ForStatement")'#10'  };'#10#10#10'  pp$1.'
  +'parseForIn = function(node, init) {'#10'    var isForIn = this.type === typ'
  +'es._in;'#10'    this.next();'#10#10'    if ('#10'      init.type === "Varia'
  +'bleDeclaration" &&'#10'      init.declarations[0].init != null &&'#10'     '
  +' ('#10'        !isForIn ||'#10'        this.options.ecmaVersion < 8 ||'#10
  +'        this.strict ||'#10'        init.kind !== "var" ||'#10'        init.'
  +'declarations[0].id.type !== "Identifier"'#10'      )'#10'    ) {'#10'      '
  +'this.raise('#10'        init.start,'#10'        ((isForIn ? "for-in" : "for'
  +'-of") + " loop variable declaration may not have an initializer")'#10'     '
  +' );'#10'    } else if (init.type === "AssignmentPattern") {'#10'      this.'
  +'raise(init.start, "Invalid left-hand side in for-loop");'#10'    }'#10'    '
  +'node.left = init;'#10'    node.right = isForIn ? this.parseExpression() : t'
  +'his.parseMaybeAssign();'#10'    this.expect(types.parenR);'#10'    node.bod'
  +'y = this.parseStatement("for");'#10'    this.exitScope();'#10'    this.labe'
  +'ls.pop();'#10'    return this.finishNode(node, isForIn ? "ForInStatement" :'
  +' "ForOfStatement")'#10'  };'#10#10#10'  pp$1.parseVar = function(node, isFo'
  +'r, kind) {'#10'    node.declarations = [];'#10'    node.kind = kind;'#10'  '
  +'  for (;;) {'#10'      var decl = this.startNode();'#10'      this.parseVar'
  +'Id(decl, kind);'#10'      if (this.eat(types.eq)) {'#10'        decl.init ='
  +' this.parseMaybeAssign(isFor);'#10'      } else if (kind === "const" && !(t'
  +'his.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextu'
  +'al("of")))) {'#10'        this.unexpected();'#10'      } else if (decl.id.t'
  +'ype !== "Identifier" && !(isFor && (this.type === types._in || this.isConte'
  +'xtual("of")))) {'#10'        this.raise(this.lastTokEnd, "Complex binding p'
  ,'atterns require an initialization value");'#10'      } else {'#10'        d'
  +'ecl.init = null;'#10'      }'#10'      node.declarations.push(this.finishNo'
  +'de(decl, "VariableDeclarator"));'#10'      if (!this.eat(types.comma)) { br'
  +'eak }'#10'    }'#10'    return node'#10'  };'#10#10'  pp$1.parseVarId = fun'
  +'ction(decl, kind) {'#10'    decl.id = this.parseBindingAtom();'#10'    this'
  +'.checkLVal(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);'#10' '
  +' };'#10#10'  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLA'
  +'BLE_ID = 4;'#10#10#10'  pp$1.parseFunction = function(node, statement, allo'
  +'wExpressionBody, isAsync) {'#10'    this.initFunction(node);'#10'    if (th'
  +'is.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {'
  +#10'      if (this.type === types.star && (statement & FUNC_HANGING_STATEMEN'
  +'T))'#10'        { this.unexpected(); }'#10'      node.generator = this.eat('
  +'types.star);'#10'    }'#10'    if (this.options.ecmaVersion >= 8)'#10'     '
  +' { node.async = !!isAsync; }'#10#10'    if (statement & FUNC_STATEMENT) {'
  +#10'      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.na'
  +'me ? null : this.parseIdent();'#10'      if (node.id && !(statement & FUNC_'
  +'HANGING_STATEMENT))'#10'        { this.checkLVal(node.id, (this.strict || n'
  +'ode.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_L'
  +'EXICAL : BIND_FUNCTION); }'#10'    }'#10#10'    var oldYieldPos = this.yiel'
  +'dPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;'
  +#10'    this.yieldPos = 0;'#10'    this.awaitPos = 0;'#10'    this.awaitIden'
  +'tPos = 0;'#10'    this.enterScope(functionFlags(node.async, node.generator)'
  +');'#10#10'    if (!(statement & FUNC_STATEMENT))'#10'      { node.id = this'
  +'.type === types.name ? this.parseIdent() : null; }'#10#10'    this.parseFun'
  +'ctionParams(node);'#10'    this.parseFunctionBody(node, allowExpressionBody'
  +', false);'#10#10'    this.yieldPos = oldYieldPos;'#10'    this.awaitPos = o'
  +'ldAwaitPos;'#10'    this.awaitIdentPos = oldAwaitIdentPos;'#10'    return t'
  +'his.finishNode(node, (statement & FUNC_STATEMENT) ? "FunctionDeclaration" :'
  +' "FunctionExpression")'#10'  };'#10#10'  pp$1.parseFunctionParams = functio'
  +'n(node) {'#10'    this.expect(types.parenL);'#10'    node.params = this.par'
  +'seBindingList(types.parenR, false, this.options.ecmaVersion >= 8);'#10'    '
  +'this.checkYieldAwaitInDefaultParams();'#10'  };'#10#10#10'  pp$1.parseClass'
  +' = function(node, isStatement) {'#10'    this.next();'#10#10'    var oldStr'
  +'ict = this.strict;'#10'    this.strict = true;'#10#10'    this.parseClassId'
  +'(node, isStatement);'#10'    this.parseClassSuper(node);'#10'    var classB'
  +'ody = this.startNode();'#10'    var hadConstructor = false;'#10'    classBo'
  +'dy.body = [];'#10'    this.expect(types.braceL);'#10'    while (!this.eat(t'
  +'ypes.braceR)) {'#10'      var element = this.parseClassElement(node.superCl'
  +'ass !== null);'#10'      if (element) {'#10'        classBody.body.push(ele'
  +'ment);'#10'        if (element.type === "MethodDefinition" && element.kind '
  +'=== "constructor") {'#10'          if (hadConstructor) { this.raise(element'
  +'.start, "Duplicate constructor in the same class"); }'#10'          hadCons'
  +'tructor = true;'#10'        }'#10'      }'#10'    }'#10'    node.body = thi'
  +'s.finishNode(classBody, "ClassBody");'#10'    this.strict = oldStrict;'#10
  +'    return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassE'
  +'xpression")'#10'  };'#10#10'  pp$1.parseClassElement = function(constructor'
  +'AllowsSuper) {'#10'    var this$1 = this;'#10#10'    if (this.eat(types.sem'
  +'i)) { return null }'#10#10'    var method = this.startNode();'#10'    var t'
  +'ryContextual = function (k, noLineBreak) {'#10'      if ( noLineBreak === v'
  +'oid 0 ) noLineBreak = false;'#10#10'      var start = this$1.start, startLo'
  +'c = this$1.startLoc;'#10'      if (!this$1.eatContextual(k)) { return false'
  +' }'#10'      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.c'
  +'anInsertSemicolon())) { return true }'#10'      if (method.key) { this$1.un'
  +'expected(); }'#10'      method.computed = false;'#10'      method.key = thi'
  +'s$1.startNodeAt(start, startLoc);'#10'      method.key.name = k;'#10'      '
  +'this$1.finishNode(method.key, "Identifier");'#10'      return false'#10'   '
  +' };'#10#10'    method.kind = "method";'#10'    method.static = tryContextua'
  +'l("static");'#10'    var isGenerator = this.eat(types.star);'#10'    var is'
  +'Async = false;'#10'    if (!isGenerator) {'#10'      if (this.options.ecmaV'
  +'ersion >= 8 && tryContextual("async", true)) {'#10'        isAsync = true;'
  +#10'        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.st'
  +'ar);'#10'      } else if (tryContextual("get")) {'#10'        method.kind ='
  +' "get";'#10'      } else if (tryContextual("set")) {'#10'        method.kin'
  +'d = "set";'#10'      }'#10'    }'#10'    if (!method.key) { this.parsePrope'
  ,'rtyName(method); }'#10'    var key = method.key;'#10'    var allowsDirectSu'
  +'per = false;'#10'    if (!method.computed && !method.static && (key.type =='
  +'= "Identifier" && key.name === "constructor" ||'#10'        key.type === "L'
  +'iteral" && key.value === "constructor")) {'#10'      if (method.kind !== "m'
  +'ethod") { this.raise(key.start, "Constructor can''t have get/set modifier")'
  +'; }'#10'      if (isGenerator) { this.raise(key.start, "Constructor can''t '
  +'be a generator"); }'#10'      if (isAsync) { this.raise(key.start, "Constru'
  +'ctor can''t be an async method"); }'#10'      method.kind = "constructor";'
  +#10'      allowsDirectSuper = constructorAllowsSuper;'#10'    } else if (met'
  +'hod.static && key.type === "Identifier" && key.name === "prototype") {'#10
  +'      this.raise(key.start, "Classes may not have a static property named p'
  +'rototype");'#10'    }'#10'    this.parseClassMethod(method, isGenerator, is'
  +'Async, allowsDirectSuper);'#10'    if (method.kind === "get" && method.valu'
  +'e.params.length !== 0)'#10'      { this.raiseRecoverable(method.value.start'
  +', "getter should have no params"); }'#10'    if (method.kind === "set" && m'
  +'ethod.value.params.length !== 1)'#10'      { this.raiseRecoverable(method.v'
  +'alue.start, "setter should have exactly one param"); }'#10'    if (method.k'
  +'ind === "set" && method.value.params[0].type === "RestElement")'#10'      {'
  +' this.raiseRecoverable(method.value.params[0].start, "Setter cannot use res'
  +'t params"); }'#10'    return method'#10'  };'#10#10'  pp$1.parseClassMethod'
  +' = function(method, isGenerator, isAsync, allowsDirectSuper) {'#10'    meth'
  +'od.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);'#10' '
  +'   return this.finishNode(method, "MethodDefinition")'#10'  };'#10#10'  pp$'
  +'1.parseClassId = function(node, isStatement) {'#10'    if (this.type === ty'
  +'pes.name) {'#10'      node.id = this.parseIdent();'#10'      if (isStatemen'
  +'t)'#10'        { this.checkLVal(node.id, BIND_LEXICAL, false); }'#10'    } '
  +'else {'#10'      if (isStatement === true)'#10'        { this.unexpected();'
  +' }'#10'      node.id = null;'#10'    }'#10'  };'#10#10'  pp$1.parseClassSup'
  +'er = function(node) {'#10'    node.superClass = this.eat(types._extends) ? '
  +'this.parseExprSubscripts() : null;'#10'  };'#10#10#10'  pp$1.parseExport = '
  +'function(node, exports) {'#10'    this.next();'#10'    if (this.eat(types.s'
  +'tar)) {'#10'      this.expectContextual("from");'#10'      if (this.type !='
  +'= types.string) { this.unexpected(); }'#10'      node.source = this.parseEx'
  +'prAtom();'#10'      this.semicolon();'#10'      return this.finishNode(node'
  +', "ExportAllDeclaration")'#10'    }'#10'    if (this.eat(types._default)) {'
  +' '#10'      this.checkExport(exports, "default", this.lastTokStart);'#10'  '
  +'    var isAsync;'#10'      if (this.type === types._function || (isAsync = '
  +'this.isAsyncFunction())) {'#10'        var fNode = this.startNode();'#10'  '
  +'      this.next();'#10'        if (isAsync) { this.next(); }'#10'        no'
  +'de.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_I'
  +'D, false, isAsync);'#10'      } else if (this.type === types._class) {'#10
  +'        var cNode = this.startNode();'#10'        node.declaration = this.p'
  +'arseClass(cNode, "nullableID");'#10'      } else {'#10'        node.declara'
  +'tion = this.parseMaybeAssign();'#10'        this.semicolon();'#10'      }'
  +#10'      return this.finishNode(node, "ExportDefaultDeclaration")'#10'    }'
  +#10'    if (this.shouldParseExportStatement()) {'#10'      node.declaration '
  +'= this.parseStatement(null);'#10'      if (node.declaration.type === "Varia'
  +'bleDeclaration")'#10'        { this.checkVariableExport(exports, node.decla'
  +'ration.declarations); }'#10'      else'#10'        { this.checkExport(expor'
  +'ts, node.declaration.id.name, node.declaration.id.start); }'#10'      node.'
  +'specifiers = [];'#10'      node.source = null;'#10'    } else { '#10'      '
  +'node.declaration = null;'#10'      node.specifiers = this.parseExportSpecif'
  +'iers(exports);'#10'      if (this.eatContextual("from")) {'#10'        if ('
  +'this.type !== types.string) { this.unexpected(); }'#10'        node.source '
  +'= this.parseExprAtom();'#10'      } else {'#10'        for (var i = 0, list'
  +' = node.specifiers; i < list.length; i += 1) {'#10'          var spec = lis'
  +'t[i];'#10#10'          this.checkUnreserved(spec.local);'#10'          this'
  +'.checkLocalExport(spec.local);'#10'        }'#10#10'        node.source = n'
  +'ull;'#10'      }'#10'      this.semicolon();'#10'    }'#10'    return this.'
  +'finishNode(node, "ExportNamedDeclaration")'#10'  };'#10#10'  pp$1.checkExpo'
  +'rt = function(exports, name, pos) {'#10'    if (!exports) { return }'#10'  '
  +'  if (has(exports, name))'#10'      { this.raiseRecoverable(pos, "Duplicate'
  +' export ''" + name + "''"); }'#10'    exports[name] = true;'#10'  };'#10#10
  +'  pp$1.checkPatternExport = function(exports, pat) {'#10'    var type = pat'
  ,'.type;'#10'    if (type === "Identifier")'#10'      { this.checkExport(expo'
  +'rts, pat.name, pat.start); }'#10'    else if (type === "ObjectPattern")'#10
  +'      { for (var i = 0, list = pat.properties; i < list.length; i += 1)'#10
  +'        {'#10'          var prop = list[i];'#10#10'          this.checkPatt'
  +'ernExport(exports, prop);'#10'        } }'#10'    else if (type === "ArrayP'
  +'attern")'#10'      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.'
  +'length; i$1 += 1) {'#10'        var elt = list$1[i$1];'#10#10'          if '
  +'(elt) { this.checkPatternExport(exports, elt); }'#10'      } }'#10'    else'
  +' if (type === "Property")'#10'      { this.checkPatternExport(exports, pat.'
  +'value); }'#10'    else if (type === "AssignmentPattern")'#10'      { this.c'
  +'heckPatternExport(exports, pat.left); }'#10'    else if (type === "RestElem'
  +'ent")'#10'      { this.checkPatternExport(exports, pat.argument); }'#10'   '
  +' else if (type === "ParenthesizedExpression")'#10'      { this.checkPattern'
  +'Export(exports, pat.expression); }'#10'  };'#10#10'  pp$1.checkVariableExpo'
  +'rt = function(exports, decls) {'#10'    if (!exports) { return }'#10'    fo'
  +'r (var i = 0, list = decls; i < list.length; i += 1)'#10'      {'#10'      '
  +'var decl = list[i];'#10#10'      this.checkPatternExport(exports, decl.id);'
  +#10'    }'#10'  };'#10#10'  pp$1.shouldParseExportStatement = function() {'
  +#10'    return this.type.keyword === "var" ||'#10'      this.type.keyword =='
  +'= "const" ||'#10'      this.type.keyword === "class" ||'#10'      this.type'
  +'.keyword === "function" ||'#10'      this.isLet() ||'#10'      this.isAsync'
  +'Function()'#10'  };'#10#10#10'  pp$1.parseExportSpecifiers = function(expor'
  +'ts) {'#10'    var nodes = [], first = true;'#10'    this.expect(types.brace'
  +'L);'#10'    while (!this.eat(types.braceR)) {'#10'      if (!first) {'#10' '
  +'       this.expect(types.comma);'#10'        if (this.afterTrailingComma(ty'
  +'pes.braceR)) { break }'#10'      } else { first = false; }'#10#10'      var'
  +' node = this.startNode();'#10'      node.local = this.parseIdent(true);'#10
  +'      node.exported = this.eatContextual("as") ? this.parseIdent(true) : no'
  +'de.local;'#10'      this.checkExport(exports, node.exported.name, node.expo'
  +'rted.start);'#10'      nodes.push(this.finishNode(node, "ExportSpecifier"))'
  +';'#10'    }'#10'    return nodes'#10'  };'#10#10#10'  pp$1.parseImport = fu'
  +'nction(node) {'#10'    this.next();'#10'    if (this.type === types.string)'
  +' {'#10'      node.specifiers = empty;'#10'      node.source = this.parseExp'
  +'rAtom();'#10'    } else {'#10'      node.specifiers = this.parseImportSpeci'
  +'fiers();'#10'      this.expectContextual("from");'#10'      node.source = t'
  +'his.type === types.string ? this.parseExprAtom() : this.unexpected();'#10' '
  +'   }'#10'    this.semicolon();'#10'    return this.finishNode(node, "Import'
  +'Declaration")'#10'  };'#10#10#10'  pp$1.parseImportSpecifiers = function() '
  +'{'#10'    var nodes = [], first = true;'#10'    if (this.type === types.nam'
  +'e) {'#10'      var node = this.startNode();'#10'      node.local = this.par'
  +'seIdent();'#10'      this.checkLVal(node.local, BIND_LEXICAL);'#10'      no'
  +'des.push(this.finishNode(node, "ImportDefaultSpecifier"));'#10'      if (!t'
  +'his.eat(types.comma)) { return nodes }'#10'    }'#10'    if (this.type === '
  +'types.star) {'#10'      var node$1 = this.startNode();'#10'      this.next('
  +');'#10'      this.expectContextual("as");'#10'      node$1.local = this.par'
  +'seIdent();'#10'      this.checkLVal(node$1.local, BIND_LEXICAL);'#10'      '
  +'nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));'#10'      '
  +'return nodes'#10'    }'#10'    this.expect(types.braceL);'#10'    while (!t'
  +'his.eat(types.braceR)) {'#10'      if (!first) {'#10'        this.expect(ty'
  +'pes.comma);'#10'        if (this.afterTrailingComma(types.braceR)) { break '
  +'}'#10'      } else { first = false; }'#10#10'      var node$2 = this.startN'
  +'ode();'#10'      node$2.imported = this.parseIdent(true);'#10'      if (thi'
  +'s.eatContextual("as")) {'#10'        node$2.local = this.parseIdent();'#10
  +'      } else {'#10'        this.checkUnreserved(node$2.imported);'#10'     '
  +'   node$2.local = node$2.imported;'#10'      }'#10'      this.checkLVal(nod'
  +'e$2.local, BIND_LEXICAL);'#10'      nodes.push(this.finishNode(node$2, "Imp'
  +'ortSpecifier"));'#10'    }'#10'    return nodes'#10'  };'#10#10'  pp$1.adap'
  +'tDirectivePrologue = function(statements) {'#10'    for (var i = 0; i < sta'
  +'tements.length && this.isDirectiveCandidate(statements[i]); ++i) {'#10'    '
  +'  statements[i].directive = statements[i].expression.raw.slice(1, -1);'#10
  +'    }'#10'  };'#10'  pp$1.isDirectiveCandidate = function(statement) {'#10
  +'    return ('#10'      statement.type === "ExpressionStatement" &&'#10'    '
  +'  statement.expression.type === "Literal" &&'#10'      typeof statement.exp'
  +'ression.value === "string" &&'#10'      (this.input[statement.start] === "\'
  ,'"" || this.input[statement.start] === "''")'#10'    )'#10'  };'#10#10'  var'
  +' pp$2 = Parser.prototype;'#10#10#10'  pp$2.toAssignable = function(node, is'
  +'Binding, refDestructuringErrors) {'#10'    if (this.options.ecmaVersion >= '
  +'6 && node) {'#10'      switch (node.type) {'#10'      case "Identifier":'#10
  +'        if (this.inAsync && node.name === "await")'#10'          { this.rai'
  +'se(node.start, "Cannot use ''await'' as identifier inside an async function'
  +'"); }'#10'        break'#10#10'      case "ObjectPattern":'#10'      case "'
  +'ArrayPattern":'#10'      case "RestElement":'#10'        break'#10#10'     '
  +' case "ObjectExpression":'#10'        node.type = "ObjectPattern";'#10'    '
  +'    if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringE'
  +'rrors, true); }'#10'        for (var i = 0, list = node.properties; i < lis'
  +'t.length; i += 1) {'#10'          var prop = list[i];'#10#10'        this.t'
  +'oAssignable(prop, isBinding);'#10'          if ('#10'            prop.type '
  +'=== "RestElement" &&'#10'            (prop.argument.type === "ArrayPattern"'
  +' || prop.argument.type === "ObjectPattern")'#10'          ) {'#10'         '
  +'   this.raise(prop.argument.start, "Unexpected token");'#10'          }'#10
  +'        }'#10'        break'#10#10'      case "Property":'#10'        if (n'
  +'ode.kind !== "init") { this.raise(node.key.start, "Object pattern can''t co'
  +'ntain getter or setter"); }'#10'        this.toAssignable(node.value, isBin'
  +'ding);'#10'        break'#10#10'      case "ArrayExpression":'#10'        n'
  +'ode.type = "ArrayPattern";'#10'        if (refDestructuringErrors) { this.c'
  +'heckPatternErrors(refDestructuringErrors, true); }'#10'        this.toAssig'
  +'nableList(node.elements, isBinding);'#10'        break'#10#10'      case "S'
  +'preadElement":'#10'        node.type = "RestElement";'#10'        this.toAs'
  +'signable(node.argument, isBinding);'#10'        if (node.argument.type === '
  +'"AssignmentPattern")'#10'          { this.raise(node.argument.start, "Rest '
  +'elements cannot have a default value"); }'#10'        break'#10#10'      ca'
  +'se "AssignmentExpression":'#10'        if (node.operator !== "=") { this.ra'
  +'ise(node.left.end, "Only ''='' operator can be used for specifying default '
  +'value."); }'#10'        node.type = "AssignmentPattern";'#10'        delete'
  +' node.operator;'#10'        this.toAssignable(node.left, isBinding);'#10#10
  +'      case "AssignmentPattern":'#10'        break'#10#10'      case "Parent'
  +'hesizedExpression":'#10'        this.toAssignable(node.expression, isBindin'
  +'g, refDestructuringErrors);'#10'        break'#10#10'      case "MemberExpr'
  +'ession":'#10'        if (!isBinding) { break }'#10#10'      default:'#10'  '
  +'      this.raise(node.start, "Assigning to rvalue");'#10'      }'#10'    } '
  +'else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuring'
  +'Errors, true); }'#10'    return node'#10'  };'#10#10#10'  pp$2.toAssignable'
  +'List = function(exprList, isBinding) {'#10'    var end = exprList.length;'
  +#10'    for (var i = 0; i < end; i++) {'#10'      var elt = exprList[i];'#10
  +'      if (elt) { this.toAssignable(elt, isBinding); }'#10'    }'#10'    if '
  +'(end) {'#10'      var last = exprList[end - 1];'#10'      if (this.options.'
  +'ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && la'
  +'st.argument.type !== "Identifier")'#10'        { this.unexpected(last.argum'
  +'ent.start); }'#10'    }'#10'    return exprList'#10'  };'#10#10#10'  pp$2.p'
  +'arseSpread = function(refDestructuringErrors) {'#10'    var node = this.sta'
  +'rtNode();'#10'    this.next();'#10'    node.argument = this.parseMaybeAssig'
  +'n(false, refDestructuringErrors);'#10'    return this.finishNode(node, "Spr'
  +'eadElement")'#10'  };'#10#10'  pp$2.parseRestBinding = function() {'#10'   '
  +' var node = this.startNode();'#10'    this.next();'#10#10'    if (this.opti'
  +'ons.ecmaVersion === 6 && this.type !== types.name)'#10'      { this.unexpec'
  +'ted(); }'#10#10'    node.argument = this.parseBindingAtom();'#10#10'    ret'
  +'urn this.finishNode(node, "RestElement")'#10'  };'#10#10#10'  pp$2.parseBin'
  +'dingAtom = function() {'#10'    if (this.options.ecmaVersion >= 6) {'#10'  '
  +'    switch (this.type) {'#10'      case types.bracketL:'#10'        var nod'
  +'e = this.startNode();'#10'        this.next();'#10'        node.elements = '
  +'this.parseBindingList(types.bracketR, true, true);'#10'        return this.'
  +'finishNode(node, "ArrayPattern")'#10#10'      case types.braceL:'#10'      '
  +'  return this.parseObj(true)'#10'      }'#10'    }'#10'    return this.pars'
  +'eIdent()'#10'  };'#10#10'  pp$2.parseBindingList = function(close, allowEmp'
  +'ty, allowTrailingComma) {'#10'    var elts = [], first = true;'#10'    whil'
  +'e (!this.eat(close)) {'#10'      if (first) { first = false; }'#10'      el'
  +'se { this.expect(types.comma); }'#10'      if (allowEmpty && this.type === '
  +'types.comma) {'#10'        elts.push(null);'#10'      } else if (allowTrail'
  ,'ingComma && this.afterTrailingComma(close)) {'#10'        break'#10'      }'
  +' else if (this.type === types.ellipsis) {'#10'        var rest = this.parse'
  +'RestBinding();'#10'        this.parseBindingListItem(rest);'#10'        elt'
  +'s.push(rest);'#10'        if (this.type === types.comma) { this.raise(this.'
  +'start, "Comma is not permitted after the rest element"); }'#10'        this'
  +'.expect(close);'#10'        break'#10'      } else {'#10'        var elem ='
  +' this.parseMaybeDefault(this.start, this.startLoc);'#10'        this.parseB'
  +'indingListItem(elem);'#10'        elts.push(elem);'#10'      }'#10'    }'#10
  +'    return elts'#10'  };'#10#10'  pp$2.parseBindingListItem = function(para'
  +'m) {'#10'    return param'#10'  };'#10#10#10'  pp$2.parseMaybeDefault = fun'
  +'ction(startPos, startLoc, left) {'#10'    left = left || this.parseBindingA'
  +'tom();'#10'    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { r'
  +'eturn left }'#10'    var node = this.startNodeAt(startPos, startLoc);'#10' '
  +'   node.left = left;'#10'    node.right = this.parseMaybeAssign();'#10'    '
  +'return this.finishNode(node, "AssignmentPattern")'#10'  };'#10#10#10'  pp$2'
  +'.checkLVal = function(expr, bindingType, checkClashes) {'#10'    if ( bindi'
  +'ngType === void 0 ) bindingType = BIND_NONE;'#10#10'    switch (expr.type) '
  +'{'#10'    case "Identifier":'#10'      if (bindingType === BIND_LEXICAL && '
  +'expr.name === "let")'#10'        { this.raiseRecoverable(expr.start, "let i'
  +'s disallowed as a lexically bound name"); }'#10'      if (this.strict && th'
  +'is.reservedWordsStrictBind.test(expr.name))'#10'        { this.raiseRecover'
  +'able(expr.start, (bindingType ? "Binding " : "Assigning to ") + expr.name +'
  +' " in strict mode"); }'#10'      if (checkClashes) {'#10'        if (has(ch'
  +'eckClashes, expr.name))'#10'          { this.raiseRecoverable(expr.start, "'
  +'Argument name clash"); }'#10'        checkClashes[expr.name] = true;'#10'  '
  +'    }'#10'      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSI'
  +'DE) { this.declareName(expr.name, bindingType, expr.start); }'#10'      bre'
  +'ak'#10#10'    case "MemberExpression":'#10'      if (bindingType) { this.ra'
  +'iseRecoverable(expr.start, "Binding member expression"); }'#10'      break'
  +#10#10'    case "ObjectPattern":'#10'      for (var i = 0, list = expr.prope'
  +'rties; i < list.length; i += 1)'#10'        {'#10'      var prop = list[i];'
  +#10#10'      this.checkLVal(prop, bindingType, checkClashes);'#10'    }'#10
  +'      break'#10#10'    case "Property":'#10'      this.checkLVal(expr.value'
  +', bindingType, checkClashes);'#10'      break'#10#10'    case "ArrayPattern'
  +'":'#10'      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length;'
  +' i$1 += 1) {'#10'        var elem = list$1[i$1];'#10#10'      if (elem) { t'
  +'his.checkLVal(elem, bindingType, checkClashes); }'#10'      }'#10'      bre'
  +'ak'#10#10'    case "AssignmentPattern":'#10'      this.checkLVal(expr.left,'
  +' bindingType, checkClashes);'#10'      break'#10#10'    case "RestElement":'
  +#10'      this.checkLVal(expr.argument, bindingType, checkClashes);'#10'    '
  +'  break'#10#10'    case "ParenthesizedExpression":'#10'      this.checkLVal'
  +'(expr.expression, bindingType, checkClashes);'#10'      break'#10#10'    de'
  +'fault:'#10'      this.raise(expr.start, (bindingType ? "Binding" : "Assigni'
  +'ng to") + " rvalue");'#10'    }'#10'  };'#10#10#10'  var pp$3 = Parser.prot'
  +'otype;'#10#10#10'  pp$3.checkPropClash = function(prop, propHash, refDestru'
  +'cturingErrors) {'#10'    if (this.options.ecmaVersion >= 9 && prop.type ==='
  +' "SpreadElement")'#10'      { return }'#10'    if (this.options.ecmaVersion'
  +' >= 6 && (prop.computed || prop.method || prop.shorthand))'#10'      { retu'
  +'rn }'#10'    var key = prop.key;'#10'    var name;'#10'    switch (key.type'
  +') {'#10'    case "Identifier": name = key.name; break'#10'    case "Literal'
  +'": name = String(key.value); break'#10'    default: return'#10'    }'#10'  '
  +'  var kind = prop.kind;'#10'    if (this.options.ecmaVersion >= 6) {'#10'  '
  +'    if (name === "__proto__" && kind === "init") {'#10'        if (propHash'
  +'.proto) {'#10'          if (refDestructuringErrors) {'#10'            if (r'
  +'efDestructuringErrors.doubleProto < 0)'#10'              { refDestructuring'
  +'Errors.doubleProto = key.start; }'#10'          } else { this.raiseRecovera'
  +'ble(key.start, "Redefinition of __proto__ property"); }'#10'        }'#10' '
  +'       propHash.proto = true;'#10'      }'#10'      return'#10'    }'#10'  '
  +'  name = "$" + name;'#10'    var other = propHash[name];'#10'    if (other)'
  +' {'#10'      var redefinition;'#10'      if (kind === "init") {'#10'       '
  +' redefinition = this.strict && other.init || other.get || other.set;'#10'  '
  +'    } else {'#10'        redefinition = other.init || other[kind];'#10'    '
  +'  }'#10'      if (redefinition)'#10'        { this.raiseRecoverable(key.sta'
  +'rt, "Redefinition of property"); }'#10'    } else {'#10'      other = propH'
  ,'ash[name] = {'#10'        init: false,'#10'        get: false,'#10'        '
  +'set: false'#10'      };'#10'    }'#10'    other[kind] = true;'#10'  };'#10
  +#10#10#10#10'  pp$3.parseExpression = function(noIn, refDestructuringErrors)'
  +' {'#10'    var startPos = this.start, startLoc = this.startLoc;'#10'    var'
  +' expr = this.parseMaybeAssign(noIn, refDestructuringErrors);'#10'    if (th'
  +'is.type === types.comma) {'#10'      var node = this.startNodeAt(startPos, '
  +'startLoc);'#10'      node.expressions = [expr];'#10'      while (this.eat(t'
  +'ypes.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestruc'
  +'turingErrors)); }'#10'      return this.finishNode(node, "SequenceExpressio'
  +'n")'#10'    }'#10'    return expr'#10'  };'#10#10#10'  pp$3.parseMaybeAssig'
  +'n = function(noIn, refDestructuringErrors, afterLeftParse) {'#10'    if (th'
  +'is.isContextual("yield")) {'#10'      if (this.inGenerator) { return this.p'
  +'arseYield(noIn) }'#10'      else { this.exprAllowed = false; }'#10'    }'#10
  +#10'    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailing'
  +'Comma = -1;'#10'    if (refDestructuringErrors) {'#10'      oldParenAssign '
  +'= refDestructuringErrors.parenthesizedAssign;'#10'      oldTrailingComma = '
  +'refDestructuringErrors.trailingComma;'#10'      refDestructuringErrors.pare'
  +'nthesizedAssign = refDestructuringErrors.trailingComma = -1;'#10'    } else'
  +' {'#10'      refDestructuringErrors = new DestructuringErrors;'#10'      ow'
  +'nDestructuringErrors = true;'#10'    }'#10#10'    var startPos = this.start'
  +', startLoc = this.startLoc;'#10'    if (this.type === types.parenL || this.'
  +'type === types.name)'#10'      { this.potentialArrowAt = this.start; }'#10
  +'    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);'#10
  +'    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, '
  +'startLoc); }'#10'    if (this.type.isAssign) {'#10'      var node = this.st'
  +'artNodeAt(startPos, startLoc);'#10'      node.operator = this.value;'#10'  '
  +'    node.left = this.type === types.eq ? this.toAssignable(left, false, ref'
  +'DestructuringErrors) : left;'#10'      if (!ownDestructuringErrors) {'#10' '
  +'       refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.'
  +'trailingComma = refDestructuringErrors.doubleProto = -1;'#10'      }'#10'  '
  +'    if (refDestructuringErrors.shorthandAssign >= node.left.start)'#10'    '
  +'    { refDestructuringErrors.shorthandAssign = -1; } '#10'      this.checkL'
  +'Val(left);'#10'      this.next();'#10'      node.right = this.parseMaybeAss'
  +'ign(noIn);'#10'      return this.finishNode(node, "AssignmentExpression")'
  +#10'    } else {'#10'      if (ownDestructuringErrors) { this.checkExpressio'
  +'nErrors(refDestructuringErrors, true); }'#10'    }'#10'    if (oldParenAssi'
  +'gn > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }'
  +#10'    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = '
  +'oldTrailingComma; }'#10'    return left'#10'  };'#10#10#10'  pp$3.parseMayb'
  +'eConditional = function(noIn, refDestructuringErrors) {'#10'    var startPo'
  +'s = this.start, startLoc = this.startLoc;'#10'    var expr = this.parseExpr'
  +'Ops(noIn, refDestructuringErrors);'#10'    if (this.checkExpressionErrors(r'
  +'efDestructuringErrors)) { return expr }'#10'    if (this.eat(types.question'
  +')) {'#10'      var node = this.startNodeAt(startPos, startLoc);'#10'      n'
  +'ode.test = expr;'#10'      node.consequent = this.parseMaybeAssign();'#10' '
  +'     this.expect(types.colon);'#10'      node.alternate = this.parseMaybeAs'
  +'sign(noIn);'#10'      return this.finishNode(node, "ConditionalExpression")'
  +#10'    }'#10'    return expr'#10'  };'#10#10#10'  pp$3.parseExprOps = funct'
  +'ion(noIn, refDestructuringErrors) {'#10'    var startPos = this.start, star'
  +'tLoc = this.startLoc;'#10'    var expr = this.parseMaybeUnary(refDestructur'
  +'ingErrors, false);'#10'    if (this.checkExpressionErrors(refDestructuringE'
  +'rrors)) { return expr }'#10'    return expr.start === startPos && expr.type'
  +' === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, st'
  +'artLoc, -1, noIn)'#10'  };'#10#10#10'  pp$3.parseExprOp = function(left, le'
  +'ftStartPos, leftStartLoc, minPrec, noIn) {'#10'    var prec = this.type.bin'
  +'op;'#10'    if (prec != null && (!noIn || this.type !== types._in)) {'#10' '
  +'     if (prec > minPrec) {'#10'        var logical = this.type === types.lo'
  +'gicalOR || this.type === types.logicalAND;'#10'        var op = this.value;'
  +#10'        this.next();'#10'        var startPos = this.start, startLoc = t'
  +'his.startLoc;'#10'        var right = this.parseExprOp(this.parseMaybeUnary'
  +'(null, false), startPos, startLoc, prec, noIn);'#10'        var node = this'
  +'.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);'#10'   '
  +'     return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noI'
  +'n)'#10'      }'#10'    }'#10'    return left'#10'  };'#10#10'  pp$3.buildBi'
  ,'nary = function(startPos, startLoc, left, right, op, logical) {'#10'    var'
  +' node = this.startNodeAt(startPos, startLoc);'#10'    node.left = left;'#10
  +'    node.operator = op;'#10'    node.right = right;'#10'    return this.fin'
  +'ishNode(node, logical ? "LogicalExpression" : "BinaryExpression")'#10'  };'
  +#10#10#10'  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary'
  +') {'#10'    var startPos = this.start, startLoc = this.startLoc, expr;'#10
  +'    if (this.isContextual("await") && (this.inAsync || (!this.inFunction &&'
  +' this.options.allowAwaitOutsideFunction))) {'#10'      expr = this.parseAwa'
  +'it();'#10'      sawUnary = true;'#10'    } else if (this.type.prefix) {'#10
  +'      var node = this.startNode(), update = this.type === types.incDec;'#10
  +'      node.operator = this.value;'#10'      node.prefix = true;'#10'      t'
  +'his.next();'#10'      node.argument = this.parseMaybeUnary(null, true);'#10
  +'      this.checkExpressionErrors(refDestructuringErrors, true);'#10'      i'
  +'f (update) { this.checkLVal(node.argument); }'#10'      else if (this.stric'
  +'t && node.operator === "delete" &&'#10'               node.argument.type =='
  +'= "Identifier")'#10'        { this.raiseRecoverable(node.start, "Deleting l'
  +'ocal variable in strict mode"); }'#10'      else { sawUnary = true; }'#10' '
  +'     expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpre'
  +'ssion");'#10'    } else {'#10'      expr = this.parseExprSubscripts(refDest'
  +'ructuringErrors);'#10'      if (this.checkExpressionErrors(refDestructuring'
  +'Errors)) { return expr }'#10'      while (this.type.postfix && !this.canIns'
  +'ertSemicolon()) {'#10'        var node$1 = this.startNodeAt(startPos, start'
  +'Loc);'#10'        node$1.operator = this.value;'#10'        node$1.prefix ='
  +' false;'#10'        node$1.argument = expr;'#10'        this.checkLVal(expr'
  +');'#10'        this.next();'#10'        expr = this.finishNode(node$1, "Upd'
  +'ateExpression");'#10'      }'#10'    }'#10#10'    if (!sawUnary && this.eat'
  +'(types.starstar))'#10'      { return this.buildBinary(startPos, startLoc, e'
  +'xpr, this.parseMaybeUnary(null, false), "**", false) }'#10'    else'#10'   '
  +'   { return expr }'#10'  };'#10#10#10'  pp$3.parseExprSubscripts = function'
  +'(refDestructuringErrors) {'#10'    var startPos = this.start, startLoc = th'
  +'is.startLoc;'#10'    var expr = this.parseExprAtom(refDestructuringErrors);'
  +#10'    if (expr.type === "ArrowFunctionExpression" && this.input.slice(this'
  +'.lastTokStart, this.lastTokEnd) !== ")")'#10'      { return expr }'#10'    '
  +'var result = this.parseSubscripts(expr, startPos, startLoc);'#10'    if (re'
  +'fDestructuringErrors && result.type === "MemberExpression") {'#10'      if '
  +'(refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructu'
  +'ringErrors.parenthesizedAssign = -1; }'#10'      if (refDestructuringErrors'
  +'.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedB'
  +'ind = -1; }'#10'    }'#10'    return result'#10'  };'#10#10'  pp$3.parseSub'
  +'scripts = function(base, startPos, startLoc, noCalls) {'#10'    var maybeAs'
  +'yncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && b'
  +'ase.name === "async" &&'#10'        this.lastTokEnd === base.end && !this.c'
  +'anInsertSemicolon() && this.input.slice(base.start, base.end) === "async";'
  +#10'    while (true) {'#10'      var element = this.parseSubscript(base, sta'
  +'rtPos, startLoc, noCalls, maybeAsyncArrow);'#10'      if (element === base '
  +'|| element.type === "ArrowFunctionExpression") { return element }'#10'     '
  +' base = element;'#10'    }'#10'  };'#10#10'  pp$3.parseSubscript = function'
  +'(base, startPos, startLoc, noCalls, maybeAsyncArrow) {'#10'    var computed'
  +' = this.eat(types.bracketL);'#10'    if (computed || this.eat(types.dot)) {'
  +#10'      var node = this.startNodeAt(startPos, startLoc);'#10'      node.ob'
  +'ject = base;'#10'      node.property = computed ? this.parseExpression() : '
  +'this.parseIdent(this.options.allowReserved !== "never");'#10'      node.com'
  +'puted = !!computed;'#10'      if (computed) { this.expect(types.bracketR); '
  +'}'#10'      base = this.finishNode(node, "MemberExpression");'#10'    } els'
  +'e if (!noCalls && this.eat(types.parenL)) {'#10'      var refDestructuringE'
  +'rrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos ='
  +' this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;'#10'      this.yield'
  +'Pos = 0;'#10'      this.awaitPos = 0;'#10'      this.awaitIdentPos = 0;'#10
  +'      var exprList = this.parseExprList(types.parenR, this.options.ecmaVers'
  +'ion >= 8, false, refDestructuringErrors);'#10'      if (maybeAsyncArrow && '
  +'!this.canInsertSemicolon() && this.eat(types.arrow)) {'#10'        this.che'
  +'ckPatternErrors(refDestructuringErrors, false);'#10'        this.checkYield'
  +'AwaitInDefaultParams();'#10'        if (this.awaitIdentPos > 0)'#10'       '
  +'   { this.raise(this.awaitIdentPos, "Cannot use ''await'' as identifier ins'
  ,'ide an async function"); }'#10'        this.yieldPos = oldYieldPos;'#10'   '
  +'     this.awaitPos = oldAwaitPos;'#10'        this.awaitIdentPos = oldAwait'
  +'IdentPos;'#10'        return this.parseArrowExpression(this.startNodeAt(sta'
  +'rtPos, startLoc), exprList, true)'#10'      }'#10'      this.checkExpressio'
  +'nErrors(refDestructuringErrors, true);'#10'      this.yieldPos = oldYieldPo'
  +'s || this.yieldPos;'#10'      this.awaitPos = oldAwaitPos || this.awaitPos;'
  +#10'      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;'#10' '
  +'     var node$1 = this.startNodeAt(startPos, startLoc);'#10'      node$1.ca'
  +'llee = base;'#10'      node$1.arguments = exprList;'#10'      base = this.f'
  +'inishNode(node$1, "CallExpression");'#10'    } else if (this.type === types'
  +'.backQuote) {'#10'      var node$2 = this.startNodeAt(startPos, startLoc);'
  +#10'      node$2.tag = base;'#10'      node$2.quasi = this.parseTemplate({is'
  +'Tagged: true});'#10'      base = this.finishNode(node$2, "TaggedTemplateExp'
  +'ression");'#10'    }'#10'    return base'#10'  };'#10#10#10'  pp$3.parseExp'
  +'rAtom = function(refDestructuringErrors) {'#10'    if (this.type === types.'
  +'slash) { this.readRegexp(); }'#10#10'    var node, canBeArrow = this.potent'
  +'ialArrowAt === this.start;'#10'    switch (this.type) {'#10'    case types.'
  +'_super:'#10'      if (!this.allowSuper)'#10'        { this.raise(this.start'
  +', "''super'' keyword outside a method"); }'#10'      node = this.startNode('
  +');'#10'      this.next();'#10'      if (this.type === types.parenL && !this'
  +'.allowDirectSuper)'#10'        { this.raise(node.start, "super() call outsi'
  +'de constructor of a subclass"); }'#10'      if (this.type !== types.dot && '
  +'this.type !== types.bracketL && this.type !== types.parenL)'#10'        { t'
  +'his.unexpected(); }'#10'      return this.finishNode(node, "Super")'#10#10
  +'    case types._this:'#10'      node = this.startNode();'#10'      this.nex'
  +'t();'#10'      return this.finishNode(node, "ThisExpression")'#10#10'    ca'
  +'se types.name:'#10'      var startPos = this.start, startLoc = this.startLo'
  +'c, containsEsc = this.containsEsc;'#10'      var id = this.parseIdent(false'
  +');'#10'      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name ='
  +'== "async" && !this.canInsertSemicolon() && this.eat(types._function))'#10
  +'        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0'
  +', false, true) }'#10'      if (canBeArrow && !this.canInsertSemicolon()) {'
  +#10'        if (this.eat(types.arrow))'#10'          { return this.parseArro'
  +'wExpression(this.startNodeAt(startPos, startLoc), [id], false) }'#10'      '
  +'  if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type ==='
  +' types.name && !containsEsc) {'#10'          id = this.parseIdent(false);'
  +#10'          if (this.canInsertSemicolon() || !this.eat(types.arrow))'#10' '
  +'           { this.unexpected(); }'#10'          return this.parseArrowExpre'
  +'ssion(this.startNodeAt(startPos, startLoc), [id], true)'#10'        }'#10' '
  +'     }'#10'      return id'#10#10'    case types.regexp:'#10'      var valu'
  +'e = this.value;'#10'      node = this.parseLiteral(value.value);'#10'      '
  +'node.regex = {pattern: value.pattern, flags: value.flags};'#10'      return'
  +' node'#10#10'    case types.num: case types.string:'#10'      return this.p'
  +'arseLiteral(this.value)'#10#10'    case types._null: case types._true: case'
  +' types._false:'#10'      node = this.startNode();'#10'      node.value = th'
  +'is.type === types._null ? null : this.type === types._true;'#10'      node.'
  +'raw = this.type.keyword;'#10'      this.next();'#10'      return this.finis'
  +'hNode(node, "Literal")'#10#10'    case types.parenL:'#10'      var start = '
  +'this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);'#10
  +'      if (refDestructuringErrors) {'#10'        if (refDestructuringErrors.'
  +'parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))'#10'          '
  +'{ refDestructuringErrors.parenthesizedAssign = start; }'#10'        if (ref'
  +'DestructuringErrors.parenthesizedBind < 0)'#10'          { refDestructuring'
  +'Errors.parenthesizedBind = start; }'#10'      }'#10'      return expr'#10#10
  +'    case types.bracketL:'#10'      node = this.startNode();'#10'      this.'
  +'next();'#10'      node.elements = this.parseExprList(types.bracketR, true, '
  +'true, refDestructuringErrors);'#10'      return this.finishNode(node, "Arra'
  +'yExpression")'#10#10'    case types.braceL:'#10'      return this.parseObj('
  +'false, refDestructuringErrors)'#10#10'    case types._function:'#10'      n'
  +'ode = this.startNode();'#10'      this.next();'#10'      return this.parseF'
  +'unction(node, 0)'#10#10'    case types._class:'#10'      return this.parseC'
  +'lass(this.startNode(), false)'#10#10'    case types._new:'#10'      return '
  +'this.parseNew()'#10#10'    case types.backQuote:'#10'      return this.pars'
  +'eTemplate()'#10#10'    case types._import:'#10'      if (this.options.ecmaV'
  ,'ersion >= 11) {'#10'        return this.parseExprImport()'#10'      } else '
  +'{'#10'        return this.unexpected()'#10'      }'#10#10'    default:'#10
  +'      this.unexpected();'#10'    }'#10'  };'#10#10'  pp$3.parseExprImport ='
  +' function() {'#10'    var node = this.startNode();'#10'    this.next(); '#10
  +'    switch (this.type) {'#10'    case types.parenL:'#10'      return this.p'
  +'arseDynamicImport(node)'#10'    default:'#10'      this.unexpected();'#10' '
  +'   }'#10'  };'#10#10'  pp$3.parseDynamicImport = function(node) {'#10'    t'
  +'his.next(); '#10#10'    node.source = this.parseMaybeAssign();'#10#10'    i'
  +'f (!this.eat(types.parenR)) {'#10'      var errorPos = this.start;'#10'    '
  +'  if (this.eat(types.comma) && this.eat(types.parenR)) {'#10'        this.r'
  +'aiseRecoverable(errorPos, "Trailing comma is not allowed in import()");'#10
  +'      } else {'#10'        this.unexpected(errorPos);'#10'      }'#10'    }'
  +#10#10'    return this.finishNode(node, "ImportExpression")'#10'  };'#10#10
  +'  pp$3.parseLiteral = function(value) {'#10'    var node = this.startNode()'
  +';'#10'    node.value = value;'#10'    node.raw = this.input.slice(this.star'
  +'t, this.end);'#10'    if (node.raw.charCodeAt(node.raw.length - 1) === 110)'
  +' { node.bigint = node.raw.slice(0, -1); }'#10'    this.next();'#10'    retu'
  +'rn this.finishNode(node, "Literal")'#10'  };'#10#10'  pp$3.parseParenExpres'
  +'sion = function() {'#10'    this.expect(types.parenL);'#10'    var val = th'
  +'is.parseExpression();'#10'    this.expect(types.parenR);'#10'    return val'
  +#10'  };'#10#10'  pp$3.parseParenAndDistinguishExpression = function(canBeAr'
  +'row) {'#10'    var startPos = this.start, startLoc = this.startLoc, val, al'
  +'lowTrailingComma = this.options.ecmaVersion >= 8;'#10'    if (this.options.'
  +'ecmaVersion >= 6) {'#10'      this.next();'#10#10'      var innerStartPos ='
  +' this.start, innerStartLoc = this.startLoc;'#10'      var exprList = [], fi'
  +'rst = true, lastIsComma = false;'#10'      var refDestructuringErrors = new'
  +' DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.await'
  +'Pos, spreadStart;'#10'      this.yieldPos = 0;'#10'      this.awaitPos = 0;'
  +#10'      while (this.type !== types.parenR) {'#10'        first ? first = f'
  +'alse : this.expect(types.comma);'#10'        if (allowTrailingComma && this'
  +'.afterTrailingComma(types.parenR, true)) {'#10'          lastIsComma = true'
  +';'#10'          break'#10'        } else if (this.type === types.ellipsis) '
  +'{'#10'          spreadStart = this.start;'#10'          exprList.push(this.'
  +'parseParenItem(this.parseRestBinding()));'#10'          if (this.type === t'
  +'ypes.comma) { this.raise(this.start, "Comma is not permitted after the rest'
  +' element"); }'#10'          break'#10'        } else {'#10'          exprLi'
  +'st.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parsePare'
  +'nItem));'#10'        }'#10'      }'#10'      var innerEndPos = this.start, '
  +'innerEndLoc = this.startLoc;'#10'      this.expect(types.parenR);'#10#10'  '
  +'    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) '
  +'{'#10'        this.checkPatternErrors(refDestructuringErrors, false);'#10' '
  +'       this.checkYieldAwaitInDefaultParams();'#10'        this.yieldPos = o'
  +'ldYieldPos;'#10'        this.awaitPos = oldAwaitPos;'#10'        return thi'
  +'s.parseParenArrowList(startPos, startLoc, exprList)'#10'      }'#10#10'    '
  +'  if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart)'
  +'; }'#10'      if (spreadStart) { this.unexpected(spreadStart); }'#10'      '
  +'this.checkExpressionErrors(refDestructuringErrors, true);'#10'      this.yi'
  +'eldPos = oldYieldPos || this.yieldPos;'#10'      this.awaitPos = oldAwaitPo'
  +'s || this.awaitPos;'#10#10'      if (exprList.length > 1) {'#10'        val'
  +' = this.startNodeAt(innerStartPos, innerStartLoc);'#10'        val.expressi'
  +'ons = exprList;'#10'        this.finishNodeAt(val, "SequenceExpression", in'
  +'nerEndPos, innerEndLoc);'#10'      } else {'#10'        val = exprList[0];'
  +#10'      }'#10'    } else {'#10'      val = this.parseParenExpression();'#10
  +'    }'#10#10'    if (this.options.preserveParens) {'#10'      var par = thi'
  +'s.startNodeAt(startPos, startLoc);'#10'      par.expression = val;'#10'    '
  +'  return this.finishNode(par, "ParenthesizedExpression")'#10'    } else {'
  +#10'      return val'#10'    }'#10'  };'#10#10'  pp$3.parseParenItem = funct'
  +'ion(item) {'#10'    return item'#10'  };'#10#10'  pp$3.parseParenArrowList '
  +'= function(startPos, startLoc, exprList) {'#10'    return this.parseArrowEx'
  +'pression(this.startNodeAt(startPos, startLoc), exprList)'#10'  };'#10#10#10
  +'  var empty$1 = [];'#10#10'  pp$3.parseNew = function() {'#10'    if (this.'
  +'containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keywor'
  +'d new"); }'#10'    var node = this.startNode();'#10'    var meta = this.par'
  +'seIdent(true);'#10'    if (this.options.ecmaVersion >= 6 && this.eat(types.'
  ,'dot)) {'#10'      node.meta = meta;'#10'      var containsEsc = this.contai'
  +'nsEsc;'#10'      node.property = this.parseIdent(true);'#10'      if (node.'
  +'property.name !== "target" || containsEsc)'#10'        { this.raiseRecovera'
  +'ble(node.property.start, "The only valid meta property for new is new.targe'
  +'t"); }'#10'      if (!this.inNonArrowFunction())'#10'        { this.raiseRe'
  +'coverable(node.start, "new.target can only be used in functions"); }'#10'  '
  +'    return this.finishNode(node, "MetaProperty")'#10'    }'#10'    var star'
  +'tPos = this.start, startLoc = this.startLoc, isImport = this.type === types'
  +'._import;'#10'    node.callee = this.parseSubscripts(this.parseExprAtom(), '
  +'startPos, startLoc, true);'#10'    if (isImport && node.callee.type === "Im'
  +'portExpression") {'#10'      this.raise(startPos, "Cannot use new with impo'
  +'rt()");'#10'    }'#10'    if (this.eat(types.parenL)) { node.arguments = th'
  +'is.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }'#10
  +'    else { node.arguments = empty$1; }'#10'    return this.finishNode(node,'
  +' "NewExpression")'#10'  };'#10#10#10'  pp$3.parseTemplateElement = function'
  +'(ref) {'#10'    var isTagged = ref.isTagged;'#10#10'    var elem = this.sta'
  +'rtNode();'#10'    if (this.type === types.invalidTemplate) {'#10'      if ('
  +'!isTagged) {'#10'        this.raiseRecoverable(this.start, "Bad escape sequ'
  +'ence in untagged template literal");'#10'      }'#10'      elem.value = {'
  +#10'        raw: this.value,'#10'        cooked: null'#10'      };'#10'    }'
  +' else {'#10'      elem.value = {'#10'        raw: this.input.slice(this.sta'
  +'rt, this.end).replace(/\r\n?/g, "\n"),'#10'        cooked: this.value'#10' '
  +'     };'#10'    }'#10'    this.next();'#10'    elem.tail = this.type === ty'
  +'pes.backQuote;'#10'    return this.finishNode(elem, "TemplateElement")'#10
  +'  };'#10#10'  pp$3.parseTemplate = function(ref) {'#10'    if ( ref === voi'
  +'d 0 ) ref = {};'#10'    var isTagged = ref.isTagged; if ( isTagged === void'
  +' 0 ) isTagged = false;'#10#10'    var node = this.startNode();'#10'    this'
  +'.next();'#10'    node.expressions = [];'#10'    var curElt = this.parseTemp'
  +'lateElement({isTagged: isTagged});'#10'    node.quasis = [curElt];'#10'    '
  +'while (!curElt.tail) {'#10'      if (this.type === types.eof) { this.raise('
  +'this.pos, "Unterminated template literal"); }'#10'      this.expect(types.d'
  +'ollarBraceL);'#10'      node.expressions.push(this.parseExpression());'#10
  +'      this.expect(types.braceR);'#10'      node.quasis.push(curElt = this.p'
  +'arseTemplateElement({isTagged: isTagged}));'#10'    }'#10'    this.next();'
  +#10'    return this.finishNode(node, "TemplateLiteral")'#10'  };'#10#10'  pp'
  +'$3.isAsyncProp = function(prop) {'#10'    return !prop.computed && prop.key'
  +'.type === "Identifier" && prop.key.name === "async" &&'#10'      (this.type'
  +' === types.name || this.type === types.num || this.type === types.string ||'
  +' this.type === types.bracketL || this.type.keyword || (this.options.ecmaVer'
  +'sion >= 9 && this.type === types.star)) &&'#10'      !lineBreak.test(this.i'
  +'nput.slice(this.lastTokEnd, this.start))'#10'  };'#10#10#10'  pp$3.parseObj'
  +' = function(isPattern, refDestructuringErrors) {'#10'    var node = this.st'
  +'artNode(), first = true, propHash = {};'#10'    node.properties = [];'#10' '
  +'   this.next();'#10'    while (!this.eat(types.braceR)) {'#10'      if (!fi'
  +'rst) {'#10'        this.expect(types.comma);'#10'        if (this.options.e'
  +'cmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }'#10'   '
  +'   } else { first = false; }'#10#10'      var prop = this.parseProperty(isP'
  +'attern, refDestructuringErrors);'#10'      if (!isPattern) { this.checkProp'
  +'Clash(prop, propHash, refDestructuringErrors); }'#10'      node.properties.'
  +'push(prop);'#10'    }'#10'    return this.finishNode(node, isPattern ? "Obj'
  +'ectPattern" : "ObjectExpression")'#10'  };'#10#10'  pp$3.parseProperty = fu'
  +'nction(isPattern, refDestructuringErrors) {'#10'    var prop = this.startNo'
  +'de(), isGenerator, isAsync, startPos, startLoc;'#10'    if (this.options.ec'
  +'maVersion >= 9 && this.eat(types.ellipsis)) {'#10'      if (isPattern) {'#10
  +'        prop.argument = this.parseIdent(false);'#10'        if (this.type ='
  +'== types.comma) {'#10'          this.raise(this.start, "Comma is not permit'
  +'ted after the rest element");'#10'        }'#10'        return this.finishN'
  +'ode(prop, "RestElement")'#10'      }'#10'      if (this.type === types.pare'
  +'nL && refDestructuringErrors) {'#10'        if (refDestructuringErrors.pare'
  +'nthesizedAssign < 0) {'#10'          refDestructuringErrors.parenthesizedAs'
  +'sign = this.start;'#10'        }'#10'        if (refDestructuringErrors.par'
  +'enthesizedBind < 0) {'#10'          refDestructuringErrors.parenthesizedBin'
  +'d = this.start;'#10'        }'#10'      }'#10'      prop.argument = this.pa'
  +'rseMaybeAssign(false, refDestructuringErrors);'#10'      if (this.type === '
  ,'types.comma && refDestructuringErrors && refDestructuringErrors.trailingCom'
  +'ma < 0) {'#10'        refDestructuringErrors.trailingComma = this.start;'#10
  +'      }'#10'      return this.finishNode(prop, "SpreadElement")'#10'    }'
  +#10'    if (this.options.ecmaVersion >= 6) {'#10'      prop.method = false;'
  +#10'      prop.shorthand = false;'#10'      if (isPattern || refDestructurin'
  +'gErrors) {'#10'        startPos = this.start;'#10'        startLoc = this.s'
  +'tartLoc;'#10'      }'#10'      if (!isPattern)'#10'        { isGenerator = '
  +'this.eat(types.star); }'#10'    }'#10'    var containsEsc = this.containsEs'
  +'c;'#10'    this.parsePropertyName(prop);'#10'    if (!isPattern && !contain'
  +'sEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(p'
  +'rop)) {'#10'      isAsync = true;'#10'      isGenerator = this.options.ecma'
  +'Version >= 9 && this.eat(types.star);'#10'      this.parsePropertyName(prop'
  +', refDestructuringErrors);'#10'    } else {'#10'      isAsync = false;'#10
  +'    }'#10'    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync'
  +', startPos, startLoc, refDestructuringErrors, containsEsc);'#10'    return '
  +'this.finishNode(prop, "Property")'#10'  };'#10#10'  pp$3.parsePropertyValue'
  +' = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refD'
  +'estructuringErrors, containsEsc) {'#10'    if ((isGenerator || isAsync) && '
  +'this.type === types.colon)'#10'      { this.unexpected(); }'#10#10'    if ('
  +'this.eat(types.colon)) {'#10'      prop.value = isPattern ? this.parseMaybe'
  +'Default(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestru'
  +'cturingErrors);'#10'      prop.kind = "init";'#10'    } else if (this.optio'
  +'ns.ecmaVersion >= 6 && this.type === types.parenL) {'#10'      if (isPatter'
  +'n) { this.unexpected(); }'#10'      prop.kind = "init";'#10'      prop.meth'
  +'od = true;'#10'      prop.value = this.parseMethod(isGenerator, isAsync);'
  +#10'    } else if (!isPattern && !containsEsc &&'#10'               this.opt'
  +'ions.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &'
  +'&'#10'               (prop.key.name === "get" || prop.key.name === "set") &'
  +'&'#10'               (this.type !== types.comma && this.type !== types.brac'
  +'eR)) {'#10'      if (isGenerator || isAsync) { this.unexpected(); }'#10'   '
  +'   prop.kind = prop.key.name;'#10'      this.parsePropertyName(prop);'#10' '
  +'     prop.value = this.parseMethod(false);'#10'      var paramCount = prop.'
  +'kind === "get" ? 0 : 1;'#10'      if (prop.value.params.length !== paramCou'
  +'nt) {'#10'        var start = prop.value.start;'#10'        if (prop.kind ='
  +'== "get")'#10'          { this.raiseRecoverable(start, "getter should have '
  +'no params"); }'#10'        else'#10'          { this.raiseRecoverable(start'
  +', "setter should have exactly one param"); }'#10'      } else {'#10'       '
  +' if (prop.kind === "set" && prop.value.params[0].type === "RestElement")'#10
  +'          { this.raiseRecoverable(prop.value.params[0].start, "Setter canno'
  +'t use rest params"); }'#10'      }'#10'    } else if (this.options.ecmaVers'
  +'ion >= 6 && !prop.computed && prop.key.type === "Identifier") {'#10'      i'
  +'f (isGenerator || isAsync) { this.unexpected(); }'#10'      this.checkUnres'
  +'erved(prop.key);'#10'      if (prop.key.name === "await" && !this.awaitIden'
  +'tPos)'#10'        { this.awaitIdentPos = startPos; }'#10'      prop.kind = '
  +'"init";'#10'      if (isPattern) {'#10'        prop.value = this.parseMaybe'
  +'Default(startPos, startLoc, prop.key);'#10'      } else if (this.type === t'
  +'ypes.eq && refDestructuringErrors) {'#10'        if (refDestructuringErrors'
  +'.shorthandAssign < 0)'#10'          { refDestructuringErrors.shorthandAssig'
  +'n = this.start; }'#10'        prop.value = this.parseMaybeDefault(startPos,'
  +' startLoc, prop.key);'#10'      } else {'#10'        prop.value = prop.key;'
  +#10'      }'#10'      prop.shorthand = true;'#10'    } else { this.unexpecte'
  +'d(); }'#10'  };'#10#10'  pp$3.parsePropertyName = function(prop) {'#10'    '
  +'if (this.options.ecmaVersion >= 6) {'#10'      if (this.eat(types.bracketL)'
  +') {'#10'        prop.computed = true;'#10'        prop.key = this.parseMayb'
  +'eAssign();'#10'        this.expect(types.bracketR);'#10'        return prop'
  +'.key'#10'      } else {'#10'        prop.computed = false;'#10'      }'#10
  +'    }'#10'    return prop.key = this.type === types.num || this.type === ty'
  +'pes.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReser'
  +'ved !== "never")'#10'  };'#10#10#10'  pp$3.initFunction = function(node) {'
  +#10'    node.id = null;'#10'    if (this.options.ecmaVersion >= 6) { node.ge'
  +'nerator = node.expression = false; }'#10'    if (this.options.ecmaVersion >'
  +'= 8) { node.async = false; }'#10'  };'#10#10#10'  pp$3.parseMethod = functi'
  +'on(isGenerator, isAsync, allowDirectSuper) {'#10'    var node = this.startN'
  +'ode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitId'
  ,'entPos = this.awaitIdentPos;'#10#10'    this.initFunction(node);'#10'    if'
  +' (this.options.ecmaVersion >= 6)'#10'      { node.generator = isGenerator; '
  +'}'#10'    if (this.options.ecmaVersion >= 8)'#10'      { node.async = !!isA'
  +'sync; }'#10#10'    this.yieldPos = 0;'#10'    this.awaitPos = 0;'#10'    th'
  +'is.awaitIdentPos = 0;'#10'    this.enterScope(functionFlags(isAsync, node.g'
  +'enerator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));'#10
  +#10'    this.expect(types.parenL);'#10'    node.params = this.parseBindingLi'
  +'st(types.parenR, false, this.options.ecmaVersion >= 8);'#10'    this.checkY'
  +'ieldAwaitInDefaultParams();'#10'    this.parseFunctionBody(node, false, tru'
  +'e);'#10#10'    this.yieldPos = oldYieldPos;'#10'    this.awaitPos = oldAwai'
  +'tPos;'#10'    this.awaitIdentPos = oldAwaitIdentPos;'#10'    return this.fi'
  +'nishNode(node, "FunctionExpression")'#10'  };'#10#10#10'  pp$3.parseArrowEx'
  +'pression = function(node, params, isAsync) {'#10'    var oldYieldPos = this'
  +'.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentP'
  +'os;'#10#10'    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW)'
  +';'#10'    this.initFunction(node);'#10'    if (this.options.ecmaVersion >= '
  +'8) { node.async = !!isAsync; }'#10#10'    this.yieldPos = 0;'#10'    this.a'
  +'waitPos = 0;'#10'    this.awaitIdentPos = 0;'#10#10'    node.params = this.'
  +'toAssignableList(params, true);'#10'    this.parseFunctionBody(node, true, '
  +'false);'#10#10'    this.yieldPos = oldYieldPos;'#10'    this.awaitPos = old'
  +'AwaitPos;'#10'    this.awaitIdentPos = oldAwaitIdentPos;'#10'    return thi'
  +'s.finishNode(node, "ArrowFunctionExpression")'#10'  };'#10#10#10'  pp$3.par'
  +'seFunctionBody = function(node, isArrowFunction, isMethod) {'#10'    var is'
  +'Expression = isArrowFunction && this.type !== types.braceL;'#10'    var old'
  +'Strict = this.strict, useStrict = false;'#10#10'    if (isExpression) {'#10
  +'      node.body = this.parseMaybeAssign();'#10'      node.expression = true'
  +';'#10'      this.checkParams(node, false);'#10'    } else {'#10'      var n'
  +'onSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.pa'
  +'rams);'#10'      if (!oldStrict || nonSimple) {'#10'        useStrict = thi'
  +'s.strictDirective(this.end);'#10'        if (useStrict && nonSimple)'#10'  '
  +'        { this.raiseRecoverable(node.start, "Illegal ''use strict'' directi'
  +'ve in function with non-simple parameter list"); }'#10'      }'#10'      va'
  +'r oldLabels = this.labels;'#10'      this.labels = [];'#10'      if (useStr'
  +'ict) { this.strict = true; }'#10#10'      this.checkParams(node, !oldStrict'
  +' && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(n'
  +'ode.params));'#10'      node.body = this.parseBlock(false);'#10'      node.'
  +'expression = false;'#10'      this.adaptDirectivePrologue(node.body.body);'
  +#10'      this.labels = oldLabels;'#10'    }'#10'    this.exitScope();'#10#10
  +'    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }'
  +#10'    this.strict = oldStrict;'#10'  };'#10#10'  pp$3.isSimpleParamList = '
  +'function(params) {'#10'    for (var i = 0, list = params; i < list.length; '
  +'i += 1)'#10'      {'#10'      var param = list[i];'#10#10'      if (param.t'
  +'ype !== "Identifier") { return false'#10'    } }'#10'    return true'#10'  '
  +'};'#10#10#10'  pp$3.checkParams = function(node, allowDuplicates) {'#10'   '
  +' var nameHash = {};'#10'    for (var i = 0, list = node.params; i < list.le'
  +'ngth; i += 1)'#10'      {'#10'      var param = list[i];'#10#10'      this.'
  +'checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);'#10'    }'#10
  +'  };'#10#10#10'  pp$3.parseExprList = function(close, allowTrailingComma, a'
  +'llowEmpty, refDestructuringErrors) {'#10'    var elts = [], first = true;'
  +#10'    while (!this.eat(close)) {'#10'      if (!first) {'#10'        this.'
  +'expect(types.comma);'#10'        if (allowTrailingComma && this.afterTraili'
  +'ngComma(close)) { break }'#10'      } else { first = false; }'#10#10'      '
  +'var elt = (void 0);'#10'      if (allowEmpty && this.type === types.comma)'
  +#10'        { elt = null; }'#10'      else if (this.type === types.ellipsis)'
  +' {'#10'        elt = this.parseSpread(refDestructuringErrors);'#10'        '
  +'if (refDestructuringErrors && this.type === types.comma && refDestructuring'
  +'Errors.trailingComma < 0)'#10'          { refDestructuringErrors.trailingCo'
  +'mma = this.start; }'#10'      } else {'#10'        elt = this.parseMaybeAss'
  +'ign(false, refDestructuringErrors);'#10'      }'#10'      elts.push(elt);'
  +#10'    }'#10'    return elts'#10'  };'#10#10'  pp$3.checkUnreserved = funct'
  +'ion(ref) {'#10'    var start = ref.start;'#10'    var end = ref.end;'#10'  '
  +'  var name = ref.name;'#10#10'    if (this.inGenerator && name === "yield")'
  +#10'      { this.raiseRecoverable(start, "Cannot use ''yield'' as identifier'
  +' inside a generator"); }'#10'    if (this.inAsync && name === "await")'#10
  ,'      { this.raiseRecoverable(start, "Cannot use ''await'' as identifier in'
  +'side an async function"); }'#10'    if (this.keywords.test(name))'#10'     '
  +' { this.raise(start, ("Unexpected keyword ''" + name + "''")); }'#10'    if'
  +' (this.options.ecmaVersion < 6 &&'#10'      this.input.slice(start, end).in'
  +'dexOf("\\") !== -1) { return }'#10'    var re = this.strict ? this.reserved'
  +'WordsStrict : this.reservedWords;'#10'    if (re.test(name)) {'#10'      if'
  +' (!this.inAsync && name === "await")'#10'        { this.raiseRecoverable(st'
  +'art, "Cannot use keyword ''await'' outside an async function"); }'#10'     '
  +' this.raiseRecoverable(start, ("The keyword ''" + name + "'' is reserved"))'
  +';'#10'    }'#10'  };'#10#10#10'  pp$3.parseIdent = function(liberal, isBind'
  +'ing) {'#10'    var node = this.startNode();'#10'    if (this.type === types'
  +'.name) {'#10'      node.name = this.value;'#10'    } else if (this.type.key'
  +'word) {'#10'      node.name = this.type.keyword;'#10#10'      if ((node.nam'
  +'e === "class" || node.name === "function") &&'#10'          (this.lastTokEn'
  +'d !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !=='
  +' 46)) {'#10'        this.context.pop();'#10'      }'#10'    } else {'#10'  '
  +'    this.unexpected();'#10'    }'#10'    this.next(!!liberal);'#10'    this'
  +'.finishNode(node, "Identifier");'#10'    if (!liberal) {'#10'      this.che'
  +'ckUnreserved(node);'#10'      if (node.name === "await" && !this.awaitIdent'
  +'Pos)'#10'        { this.awaitIdentPos = node.start; }'#10'    }'#10'    ret'
  +'urn node'#10'  };'#10#10#10'  pp$3.parseYield = function(noIn) {'#10'    if'
  +' (!this.yieldPos) { this.yieldPos = this.start; }'#10#10'    var node = thi'
  +'s.startNode();'#10'    this.next();'#10'    if (this.type === types.semi ||'
  +' this.canInsertSemicolon() || (this.type !== types.star && !this.type.start'
  +'sExpr)) {'#10'      node.delegate = false;'#10'      node.argument = null;'
  +#10'    } else {'#10'      node.delegate = this.eat(types.star);'#10'      n'
  +'ode.argument = this.parseMaybeAssign(noIn);'#10'    }'#10'    return this.f'
  +'inishNode(node, "YieldExpression")'#10'  };'#10#10'  pp$3.parseAwait = func'
  +'tion() {'#10'    if (!this.awaitPos) { this.awaitPos = this.start; }'#10#10
  +'    var node = this.startNode();'#10'    this.next();'#10'    node.argument'
  +' = this.parseMaybeUnary(null, false);'#10'    return this.finishNode(node, '
  +'"AwaitExpression")'#10'  };'#10#10'  var pp$4 = Parser.prototype;'#10#10#10
  +'  pp$4.raise = function(pos, message) {'#10'    var loc = getLineInfo(this.'
  +'input, pos);'#10'    message += " (" + loc.line + ":" + loc.column + ")";'
  +#10'    var err = new SyntaxError(message);'#10'    err.pos = pos; err.loc ='
  +' loc; err.raisedAt = this.pos;'#10'    throw err'#10'  };'#10#10'  pp$4.rai'
  +'seRecoverable = pp$4.raise;'#10#10'  pp$4.curPosition = function() {'#10'  '
  +'  if (this.options.locations) {'#10'      return new Position(this.curLine,'
  +' this.pos - this.lineStart)'#10'    }'#10'  };'#10#10'  var pp$5 = Parser.p'
  +'rototype;'#10#10'  var Scope = function Scope(flags) {'#10'    this.flags ='
  +' flags;'#10'    this.var = [];'#10'    this.lexical = [];'#10'    this.func'
  +'tions = [];'#10'  };'#10#10#10'  pp$5.enterScope = function(flags) {'#10'  '
  +'  this.scopeStack.push(new Scope(flags));'#10'  };'#10#10'  pp$5.exitScope '
  +'= function() {'#10'    this.scopeStack.pop();'#10'  };'#10#10'  pp$5.treatF'
  +'unctionsAsVarInScope = function(scope) {'#10'    return (scope.flags & SCOP'
  +'E_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)'#10'  };'#10#10
  +'  pp$5.declareName = function(name, bindingType, pos) {'#10'    var redecla'
  +'red = false;'#10'    if (bindingType === BIND_LEXICAL) {'#10'      var scop'
  +'e = this.currentScope();'#10'      redeclared = scope.lexical.indexOf(name)'
  +' > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1'
  +';'#10'      scope.lexical.push(name);'#10'      if (this.inModule && (scope'
  +'.flags & SCOPE_TOP))'#10'        { delete this.undefinedExports[name]; }'#10
  +'    } else if (bindingType === BIND_SIMPLE_CATCH) {'#10'      var scope$1 ='
  +' this.currentScope();'#10'      scope$1.lexical.push(name);'#10'    } else '
  +'if (bindingType === BIND_FUNCTION) {'#10'      var scope$2 = this.currentSc'
  +'ope();'#10'      if (this.treatFunctionsAsVar)'#10'        { redeclared = s'
  +'cope$2.lexical.indexOf(name) > -1; }'#10'      else'#10'        { redeclare'
  +'d = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }'
  +#10'      scope$2.functions.push(name);'#10'    } else {'#10'      for (var '
  +'i = this.scopeStack.length - 1; i >= 0; --i) {'#10'        var scope$3 = th'
  +'is.scopeStack[i];'#10'        if (scope$3.lexical.indexOf(name) > -1 && !(('
  +'scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||'#10
  +'            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.'
  +'indexOf(name) > -1) {'#10'          redeclared = true;'#10'          break'
  ,#10'        }'#10'        scope$3.var.push(name);'#10'        if (this.inMod'
  +'ule && (scope$3.flags & SCOPE_TOP))'#10'          { delete this.undefinedEx'
  +'ports[name]; }'#10'        if (scope$3.flags & SCOPE_VAR) { break }'#10'   '
  +'   }'#10'    }'#10'    if (redeclared) { this.raiseRecoverable(pos, ("Ident'
  +'ifier ''" + name + "'' has already been declared")); }'#10'  };'#10#10'  pp'
  +'$5.checkLocalExport = function(id) {'#10'    if (this.scopeStack[0].lexical'
  +'.indexOf(id.name) === -1 &&'#10'        this.scopeStack[0].var.indexOf(id.n'
  +'ame) === -1) {'#10'      this.undefinedExports[id.name] = id;'#10'    }'#10
  +'  };'#10#10'  pp$5.currentScope = function() {'#10'    return this.scopeSta'
  +'ck[this.scopeStack.length - 1]'#10'  };'#10#10'  pp$5.currentVarScope = fun'
  +'ction() {'#10'    for (var i = this.scopeStack.length - 1;; i--) {'#10'    '
  +'  var scope = this.scopeStack[i];'#10'      if (scope.flags & SCOPE_VAR) { '
  +'return scope }'#10'    }'#10'  };'#10#10'  pp$5.currentThisScope = function'
  +'() {'#10'    for (var i = this.scopeStack.length - 1;; i--) {'#10'      var'
  +' scope = this.scopeStack[i];'#10'      if (scope.flags & SCOPE_VAR && !(sco'
  +'pe.flags & SCOPE_ARROW)) { return scope }'#10'    }'#10'  };'#10#10'  var N'
  +'ode = function Node(parser, pos, loc) {'#10'    this.type = "";'#10'    thi'
  +'s.start = pos;'#10'    this.end = 0;'#10'    if (parser.options.locations)'
  +#10'      { this.loc = new SourceLocation(parser, loc); }'#10'    if (parser'
  +'.options.directSourceFile)'#10'      { this.sourceFile = parser.options.dir'
  +'ectSourceFile; }'#10'    if (parser.options.ranges)'#10'      { this.range '
  +'= [pos, 0]; }'#10'  };'#10#10#10'  var pp$6 = Parser.prototype;'#10#10'  pp'
  +'$6.startNode = function() {'#10'    return new Node(this, this.start, this.'
  +'startLoc)'#10'  };'#10#10'  pp$6.startNodeAt = function(pos, loc) {'#10'   '
  +' return new Node(this, pos, loc)'#10'  };'#10#10#10'  function finishNodeAt'
  +'(node, type, pos, loc) {'#10'    node.type = type;'#10'    node.end = pos;'
  +#10'    if (this.options.locations)'#10'      { node.loc.end = loc; }'#10'  '
  +'  if (this.options.ranges)'#10'      { node.range[1] = pos; }'#10'    retur'
  +'n node'#10'  }'#10#10'  pp$6.finishNode = function(node, type) {'#10'    re'
  +'turn finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLo'
  +'c)'#10'  };'#10#10#10'  pp$6.finishNodeAt = function(node, type, pos, loc) '
  +'{'#10'    return finishNodeAt.call(this, node, type, pos, loc)'#10'  };'#10
  +#10#10'  var TokContext = function TokContext(token, isExpr, preserveSpace, '
  +'override, generator) {'#10'    this.token = token;'#10'    this.isExpr = !!'
  +'isExpr;'#10'    this.preserveSpace = !!preserveSpace;'#10'    this.override'
  +' = override;'#10'    this.generator = !!generator;'#10'  };'#10#10'  var ty'
  +'pes$1 = {'#10'    b_stat: new TokContext("{", false),'#10'    b_expr: new T'
  +'okContext("{", true),'#10'    b_tmpl: new TokContext("${", false),'#10'    '
  +'p_stat: new TokContext("(", false),'#10'    p_expr: new TokContext("(", tru'
  +'e),'#10'    q_tmpl: new TokContext("`", true, true, function (p) { return p'
  +'.tryReadTemplateToken(); }),'#10'    f_stat: new TokContext("function", fal'
  +'se),'#10'    f_expr: new TokContext("function", true),'#10'    f_expr_gen: '
  +'new TokContext("function", true, false, null, true),'#10'    f_gen: new Tok'
  +'Context("function", false, false, null, true)'#10'  };'#10#10'  var pp$7 = '
  +'Parser.prototype;'#10#10'  pp$7.initialContext = function() {'#10'    retur'
  +'n [types$1.b_stat]'#10'  };'#10#10'  pp$7.braceIsBlock = function(prevType)'
  +' {'#10'    var parent = this.curContext();'#10'    if (parent === types$1.f'
  +'_expr || parent === types$1.f_stat)'#10'      { return true }'#10'    if (p'
  +'revType === types.colon && (parent === types$1.b_stat || parent === types$1'
  +'.b_expr))'#10'      { return !parent.isExpr }'#10#10'    if (prevType === t'
  +'ypes._return || prevType === types.name && this.exprAllowed)'#10'      { re'
  +'turn lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }'#10'  '
  +'  if (prevType === types._else || prevType === types.semi || prevType === t'
  +'ypes.eof || prevType === types.parenR || prevType === types.arrow)'#10'    '
  +'  { return true }'#10'    if (prevType === types.braceL)'#10'      { return'
  +' parent === types$1.b_stat }'#10'    if (prevType === types._var || prevTyp'
  +'e === types._const || prevType === types.name)'#10'      { return false }'
  +#10'    return !this.exprAllowed'#10'  };'#10#10'  pp$7.inGeneratorContext ='
  +' function() {'#10'    for (var i = this.context.length - 1; i >= 1; i--) {'
  +#10'      var context = this.context[i];'#10'      if (context.token === "fu'
  +'nction")'#10'        { return context.generator }'#10'    }'#10'    return '
  +'false'#10'  };'#10#10'  pp$7.updateContext = function(prevType) {'#10'    v'
  +'ar update, type = this.type;'#10'    if (type.keyword && prevType === types'
  +'.dot)'#10'      { this.exprAllowed = false; }'#10'    else if (update = typ'
  ,'e.updateContext)'#10'      { update.call(this, prevType); }'#10'    else'#10
  +'      { this.exprAllowed = type.beforeExpr; }'#10'  };'#10#10#10'  types.pa'
  +'renR.updateContext = types.braceR.updateContext = function() {'#10'    if ('
  +'this.context.length === 1) {'#10'      this.exprAllowed = true;'#10'      r'
  +'eturn'#10'    }'#10'    var out = this.context.pop();'#10'    if (out === t'
  +'ypes$1.b_stat && this.curContext().token === "function") {'#10'      out = '
  +'this.context.pop();'#10'    }'#10'    this.exprAllowed = !out.isExpr;'#10' '
  +' };'#10#10'  types.braceL.updateContext = function(prevType) {'#10'    this'
  +'.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr'
  +');'#10'    this.exprAllowed = true;'#10'  };'#10#10'  types.dollarBraceL.up'
  +'dateContext = function() {'#10'    this.context.push(types$1.b_tmpl);'#10' '
  +'   this.exprAllowed = true;'#10'  };'#10#10'  types.parenL.updateContext = '
  +'function(prevType) {'#10'    var statementParens = prevType === types._if |'
  +'| prevType === types._for || prevType === types._with || prevType === types'
  +'._while;'#10'    this.context.push(statementParens ? types$1.p_stat : types'
  +'$1.p_expr);'#10'    this.exprAllowed = true;'#10'  };'#10#10'  types.incDec'
  +'.updateContext = function() {'#10'  };'#10#10'  types._function.updateConte'
  +'xt = types._class.updateContext = function(prevType) {'#10'    if (prevType'
  +'.beforeExpr && prevType !== types.semi && prevType !== types._else &&'#10' '
  +'       !(prevType === types._return && lineBreak.test(this.input.slice(this'
  +'.lastTokEnd, this.start))) &&'#10'        !((prevType === types.colon || pr'
  +'evType === types.braceL) && this.curContext() === types$1.b_stat))'#10'    '
  +'  { this.context.push(types$1.f_expr); }'#10'    else'#10'      { this.cont'
  +'ext.push(types$1.f_stat); }'#10'    this.exprAllowed = false;'#10'  };'#10
  +#10'  types.backQuote.updateContext = function() {'#10'    if (this.curConte'
  +'xt() === types$1.q_tmpl)'#10'      { this.context.pop(); }'#10'    else'#10
  +'      { this.context.push(types$1.q_tmpl); }'#10'    this.exprAllowed = fal'
  +'se;'#10'  };'#10#10'  types.star.updateContext = function(prevType) {'#10' '
  +'   if (prevType === types._function) {'#10'      var index = this.context.l'
  +'ength - 1;'#10'      if (this.context[index] === types$1.f_expr)'#10'      '
  +'  { this.context[index] = types$1.f_expr_gen; }'#10'      else'#10'        '
  +'{ this.context[index] = types$1.f_gen; }'#10'    }'#10'    this.exprAllowed'
  +' = true;'#10'  };'#10#10'  types.name.updateContext = function(prevType) {'
  +#10'    var allowed = false;'#10'    if (this.options.ecmaVersion >= 6 && pr'
  +'evType !== types.dot) {'#10'      if (this.value === "of" && !this.exprAllo'
  +'wed ||'#10'          this.value === "yield" && this.inGeneratorContext())'
  +#10'        { allowed = true; }'#10'    }'#10'    this.exprAllowed = allowed'
  +';'#10'  };'#10#10#10'  var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit A'
  +'Hex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M '
  +'Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemappe'
  +'d CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Chang'
  +'es_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_C'
  +'ode_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modif'
  +'ier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Ba'
  +'se Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinar'
  +'y_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control '
  +'Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_P'
  +'oint NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark'
  +' QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD'
  +' Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variatio'
  +'n_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";'#10'  va'
  +'r ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic"'
  +';'#10'  var ecma11BinaryProperties = ecma10BinaryProperties;'#10'  var unic'
  +'odeBinaryProperties = {'#10'    9: ecma9BinaryProperties,'#10'    10: ecma1'
  +'0BinaryProperties,'#10'    11: ecma11BinaryProperties'#10'  };'#10#10'  var'
  +' unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Conne'
  +'ctor_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd'
  +' Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf I'
  +'nitial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase'
  +'_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier'
  +'_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Le'
  +'tter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Sepa'
  +'rator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs '
  +'Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Upp'
  ,'ercase_Letter Lu";'#10#10'  var ecma9ScriptValues = "Adlam Adlm Ahom Ahom A'
  +'natolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese B'
  +'ali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomo'
  +'fo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aborigin'
  +'al Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee '
  +'Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl'
  +' Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbas'
  +'an Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gra'
  +'n Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano '
  +'Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh '
  +'Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java K'
  +'aithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer K'
  +'hmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb L'
  +'inear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj '
  +'Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm'
  +' Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hierog'
  +'lyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar'
  +' Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham O'
  +'gam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb'
  +' Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Or'
  +'iya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_H'
  +'au Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runi'
  +'c Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sid'
  +'d SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Su'
  +'nd Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai'
  +'_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaa'
  +'na Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai'
  +' Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";'#10'  var ecma10Scri'
  +'ptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohin'
  +'gya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";'#10
  +'  var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari '
  +'Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";'#10'  var unicodeScriptValue'
  +'s = {'#10'    9: ecma9ScriptValues,'#10'    10: ecma10ScriptValues,'#10'   '
  +' 11: ecma11ScriptValues'#10'  };'#10#10'  var data = {};'#10'  function bui'
  +'ldUnicodeData(ecmaVersion) {'#10'    var d = data[ecmaVersion] = {'#10'    '
  +'  binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeG'
  +'eneralCategoryValues),'#10'      nonBinary: {'#10'        General_Category:'
  +' wordsRegexp(unicodeGeneralCategoryValues),'#10'        Script: wordsRegexp'
  +'(unicodeScriptValues[ecmaVersion])'#10'      }'#10'    };'#10'    d.nonBina'
  +'ry.Script_Extensions = d.nonBinary.Script;'#10#10'    d.nonBinary.gc = d.no'
  +'nBinary.General_Category;'#10'    d.nonBinary.sc = d.nonBinary.Script;'#10
  +'    d.nonBinary.scx = d.nonBinary.Script_Extensions;'#10'  }'#10'  buildUni'
  +'codeData(9);'#10'  buildUnicodeData(10);'#10'  buildUnicodeData(11);'#10#10
  +'  var pp$8 = Parser.prototype;'#10#10'  var RegExpValidationState = functio'
  +'n RegExpValidationState(parser) {'#10'    this.parser = parser;'#10'    thi'
  +'s.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (par'
  +'ser.options.ecmaVersion >= 9 ? "s" : "");'#10'    this.unicodeProperties = '
  +'data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];'
  +#10'    this.source = "";'#10'    this.flags = "";'#10'    this.start = 0;'
  +#10'    this.switchU = false;'#10'    this.switchN = false;'#10'    this.pos'
  +' = 0;'#10'    this.lastIntValue = 0;'#10'    this.lastStringValue = "";'#10
  +'    this.lastAssertionIsQuantifiable = false;'#10'    this.numCapturingPare'
  +'ns = 0;'#10'    this.maxBackReference = 0;'#10'    this.groupNames = [];'#10
  +'    this.backReferenceNames = [];'#10'  };'#10#10'  RegExpValidationState.p'
  +'rototype.reset = function reset (start, pattern, flags) {'#10'    var unico'
  +'de = flags.indexOf("u") !== -1;'#10'    this.start = start | 0;'#10'    thi'
  +'s.source = pattern + "";'#10'    this.flags = flags;'#10'    this.switchU ='
  +' unicode && this.parser.options.ecmaVersion >= 6;'#10'    this.switchN = un'
  +'icode && this.parser.options.ecmaVersion >= 9;'#10'  };'#10#10'  RegExpVali'
  +'dationState.prototype.raise = function raise (message) {'#10'    this.parse'
  +'r.raiseRecoverable(this.start, ("Invalid regular expression: /" + (this.sou'
  +'rce) + "/: " + message));'#10'  };'#10#10'  RegExpValidationState.prototype'
  +'.at = function at (i) {'#10'    var s = this.source;'#10'    var l = s.leng'
  +'th;'#10'    if (i >= l) {'#10'      return -1'#10'    }'#10'    var c = s.c'
  ,'harCodeAt(i);'#10'    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i '
  +'+ 1 >= l) {'#10'      return c'#10'    }'#10'    var next = s.charCodeAt(i '
  +'+ 1);'#10'    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - '
  +'0x35FDC00 : c'#10'  };'#10#10'  RegExpValidationState.prototype.nextIndex ='
  +' function nextIndex (i) {'#10'    var s = this.source;'#10'    var l = s.le'
  +'ngth;'#10'    if (i >= l) {'#10'      return l'#10'    }'#10'    var c = s.'
  +'charCodeAt(i), next;'#10'    if (!this.switchU || c <= 0xD7FF || c >= 0xE00'
  +'0 || i + 1 >= l ||'#10'        (next = s.charCodeAt(i + 1)) < 0xDC00 || nex'
  +'t > 0xDFFF) {'#10'      return i + 1'#10'    }'#10'    return i + 2'#10'  }'
  +';'#10#10'  RegExpValidationState.prototype.current = function current () {'
  +#10'    return this.at(this.pos)'#10'  };'#10#10'  RegExpValidationState.pro'
  +'totype.lookahead = function lookahead () {'#10'    return this.at(this.next'
  +'Index(this.pos))'#10'  };'#10#10'  RegExpValidationState.prototype.advance '
  +'= function advance () {'#10'    this.pos = this.nextIndex(this.pos);'#10'  '
  +'};'#10#10'  RegExpValidationState.prototype.eat = function eat (ch) {'#10' '
  +'   if (this.current() === ch) {'#10'      this.advance();'#10'      return '
  +'true'#10'    }'#10'    return false'#10'  };'#10#10'  function codePointToS'
  +'tring(ch) {'#10'    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }'#10
  +'    ch -= 0x10000;'#10'    return String.fromCharCode((ch >> 10) + 0xD800, '
  +'(ch & 0x03FF) + 0xDC00)'#10'  }'#10#10'  pp$8.validateRegExpFlags = functio'
  +'n(state) {'#10'    var validFlags = state.validFlags;'#10'    var flags = s'
  +'tate.flags;'#10#10'    for (var i = 0; i < flags.length; i++) {'#10'      v'
  +'ar flag = flags.charAt(i);'#10'      if (validFlags.indexOf(flag) === -1) {'
  +#10'        this.raise(state.start, "Invalid regular expression flag");'#10
  +'      }'#10'      if (flags.indexOf(flag, i + 1) > -1) {'#10'        this.r'
  +'aise(state.start, "Duplicate regular expression flag");'#10'      }'#10'   '
  +' }'#10'  };'#10#10'  pp$8.validateRegExpPattern = function(state) {'#10'   '
  +' this.regexp_pattern(state);'#10#10'    if (!state.switchN && this.options.'
  +'ecmaVersion >= 9 && state.groupNames.length > 0) {'#10'      state.switchN '
  +'= true;'#10'      this.regexp_pattern(state);'#10'    }'#10'  };'#10#10'  p'
  +'p$8.regexp_pattern = function(state) {'#10'    state.pos = 0;'#10'    state'
  +'.lastIntValue = 0;'#10'    state.lastStringValue = "";'#10'    state.lastAs'
  +'sertionIsQuantifiable = false;'#10'    state.numCapturingParens = 0;'#10'  '
  +'  state.maxBackReference = 0;'#10'    state.groupNames.length = 0;'#10'    '
  +'state.backReferenceNames.length = 0;'#10#10'    this.regexp_disjunction(sta'
  +'te);'#10#10'    if (state.pos !== state.source.length) {'#10'      if (stat'
  +'e.eat(0x29 )) {'#10'        state.raise("Unmatched '')''");'#10'      }'#10
  +'      if (state.eat(0x5D ) || state.eat(0x7D )) {'#10'        state.raise("'
  +'Lone quantifier brackets");'#10'      }'#10'    }'#10'    if (state.maxBack'
  +'Reference > state.numCapturingParens) {'#10'      state.raise("Invalid esca'
  +'pe");'#10'    }'#10'    for (var i = 0, list = state.backReferenceNames; i '
  +'< list.length; i += 1) {'#10'      var name = list[i];'#10#10'      if (sta'
  +'te.groupNames.indexOf(name) === -1) {'#10'        state.raise("Invalid name'
  +'d capture referenced");'#10'      }'#10'    }'#10'  };'#10#10'  pp$8.regexp'
  +'_disjunction = function(state) {'#10'    this.regexp_alternative(state);'#10
  +'    while (state.eat(0x7C )) {'#10'      this.regexp_alternative(state);'#10
  +'    }'#10#10'    if (this.regexp_eatQuantifier(state, true)) {'#10'      st'
  +'ate.raise("Nothing to repeat");'#10'    }'#10'    if (state.eat(0x7B )) {'
  +#10'      state.raise("Lone quantifier brackets");'#10'    }'#10'  };'#10#10
  +'  pp$8.regexp_alternative = function(state) {'#10'    while (state.pos < st'
  +'ate.source.length && this.regexp_eatTerm(state))'#10'      { }'#10'  };'#10
  +#10'  pp$8.regexp_eatTerm = function(state) {'#10'    if (this.regexp_eatAss'
  +'ertion(state)) {'#10'      if (state.lastAssertionIsQuantifiable && this.re'
  +'gexp_eatQuantifier(state)) {'#10'        if (state.switchU) {'#10'         '
  +' state.raise("Invalid quantifier");'#10'        }'#10'      }'#10'      ret'
  +'urn true'#10'    }'#10#10'    if (state.switchU ? this.regexp_eatAtom(state'
  +') : this.regexp_eatExtendedAtom(state)) {'#10'      this.regexp_eatQuantifi'
  +'er(state);'#10'      return true'#10'    }'#10#10'    return false'#10'  };'
  +#10#10'  pp$8.regexp_eatAssertion = function(state) {'#10'    var start = st'
  +'ate.pos;'#10'    state.lastAssertionIsQuantifiable = false;'#10#10'    if ('
  +'state.eat(0x5E ) || state.eat(0x24 )) {'#10'      return true'#10'    }'#10
  +#10'    if (state.eat(0x5C )) {'#10'      if (state.eat(0x42 ) || state.eat('
  +'0x62 )) {'#10'        return true'#10'      }'#10'      state.pos = start;'
  +#10'    }'#10#10'    if (state.eat(0x28 ) && state.eat(0x3F )) {'#10'      v'
  ,'ar lookbehind = false;'#10'      if (this.options.ecmaVersion >= 9) {'#10' '
  +'       lookbehind = state.eat(0x3C );'#10'      }'#10'      if (state.eat(0'
  +'x3D ) || state.eat(0x21 )) {'#10'        this.regexp_disjunction(state);'#10
  +'        if (!state.eat(0x29 )) {'#10'          state.raise("Unterminated gr'
  +'oup");'#10'        }'#10'        state.lastAssertionIsQuantifiable = !lookb'
  +'ehind;'#10'        return true'#10'      }'#10'    }'#10#10'    state.pos ='
  +' start;'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatQuantifier = '
  +'function(state, noError) {'#10'    if ( noError === void 0 ) noError = fals'
  +'e;'#10#10'    if (this.regexp_eatQuantifierPrefix(state, noError)) {'#10'  '
  +'    state.eat(0x3F );'#10'      return true'#10'    }'#10'    return false'
  +#10'  };'#10#10'  pp$8.regexp_eatQuantifierPrefix = function(state, noError)'
  +' {'#10'    return ('#10'      state.eat(0x2A ) ||'#10'      state.eat(0x2B '
  +') ||'#10'      state.eat(0x3F ) ||'#10'      this.regexp_eatBracedQuantifie'
  +'r(state, noError)'#10'    )'#10'  };'#10'  pp$8.regexp_eatBracedQuantifier '
  +'= function(state, noError) {'#10'    var start = state.pos;'#10'    if (sta'
  +'te.eat(0x7B )) {'#10'      var min = 0, max = -1;'#10'      if (this.regexp'
  +'_eatDecimalDigits(state)) {'#10'        min = state.lastIntValue;'#10'     '
  +'   if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {'#10'     '
  +'     max = state.lastIntValue;'#10'        }'#10'        if (state.eat(0x7D'
  +' )) {'#10'          if (max !== -1 && max < min && !noError) {'#10'        '
  +'    state.raise("numbers out of order in {} quantifier");'#10'          }'
  +#10'          return true'#10'        }'#10'      }'#10'      if (state.swit'
  +'chU && !noError) {'#10'        state.raise("Incomplete quantifier");'#10'  '
  +'    }'#10'      state.pos = start;'#10'    }'#10'    return false'#10'  };'
  +#10#10'  pp$8.regexp_eatAtom = function(state) {'#10'    return ('#10'      '
  +'this.regexp_eatPatternCharacters(state) ||'#10'      state.eat(0x2E ) ||'#10
  +'      this.regexp_eatReverseSolidusAtomEscape(state) ||'#10'      this.rege'
  +'xp_eatCharacterClass(state) ||'#10'      this.regexp_eatUncapturingGroup(st'
  +'ate) ||'#10'      this.regexp_eatCapturingGroup(state)'#10'    )'#10'  };'
  +#10'  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {'#10'    va'
  +'r start = state.pos;'#10'    if (state.eat(0x5C )) {'#10'      if (this.reg'
  +'exp_eatAtomEscape(state)) {'#10'        return true'#10'      }'#10'      s'
  +'tate.pos = start;'#10'    }'#10'    return false'#10'  };'#10'  pp$8.regexp'
  +'_eatUncapturingGroup = function(state) {'#10'    var start = state.pos;'#10
  +'    if (state.eat(0x28 )) {'#10'      if (state.eat(0x3F ) && state.eat(0x3'
  +'A )) {'#10'        this.regexp_disjunction(state);'#10'        if (state.ea'
  +'t(0x29 )) {'#10'          return true'#10'        }'#10'        state.raise'
  +'("Unterminated group");'#10'      }'#10'      state.pos = start;'#10'    }'
  +#10'    return false'#10'  };'#10'  pp$8.regexp_eatCapturingGroup = function'
  +'(state) {'#10'    if (state.eat(0x28 )) {'#10'      if (this.options.ecmaVe'
  +'rsion >= 9) {'#10'        this.regexp_groupSpecifier(state);'#10'      } el'
  +'se if (state.current() === 0x3F ) {'#10'        state.raise("Invalid group"'
  +');'#10'      }'#10'      this.regexp_disjunction(state);'#10'      if (stat'
  +'e.eat(0x29 )) {'#10'        state.numCapturingParens += 1;'#10'        retu'
  +'rn true'#10'      }'#10'      state.raise("Unterminated group");'#10'    }'
  +#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatExtendedAtom = functio'
  +'n(state) {'#10'    return ('#10'      state.eat(0x2E ) ||'#10'      this.re'
  +'gexp_eatReverseSolidusAtomEscape(state) ||'#10'      this.regexp_eatCharact'
  +'erClass(state) ||'#10'      this.regexp_eatUncapturingGroup(state) ||'#10' '
  +'     this.regexp_eatCapturingGroup(state) ||'#10'      this.regexp_eatInval'
  +'idBracedQuantifier(state) ||'#10'      this.regexp_eatExtendedPatternCharac'
  +'ter(state)'#10'    )'#10'  };'#10#10'  pp$8.regexp_eatInvalidBracedQuantifi'
  +'er = function(state) {'#10'    if (this.regexp_eatBracedQuantifier(state, t'
  +'rue)) {'#10'      state.raise("Nothing to repeat");'#10'    }'#10'    retur'
  +'n false'#10'  };'#10#10'  pp$8.regexp_eatSyntaxCharacter = function(state) '
  +'{'#10'    var ch = state.current();'#10'    if (isSyntaxCharacter(ch)) {'#10
  +'      state.lastIntValue = ch;'#10'      state.advance();'#10'      return '
  +'true'#10'    }'#10'    return false'#10'  };'#10'  function isSyntaxCharact'
  +'er(ch) {'#10'    return ('#10'      ch === 0x24  ||'#10'      ch >= 0x28  &'
  +'& ch <= 0x2B  ||'#10'      ch === 0x2E  ||'#10'      ch === 0x3F  ||'#10'  '
  +'    ch >= 0x5B  && ch <= 0x5E  ||'#10'      ch >= 0x7B  && ch <= 0x7D '#10
  +'    )'#10'  }'#10#10'  pp$8.regexp_eatPatternCharacters = function(state) {'
  +#10'    var start = state.pos;'#10'    var ch = 0;'#10'    while ((ch = stat'
  +'e.current()) !== -1 && !isSyntaxCharacter(ch)) {'#10'      state.advance();'
  ,#10'    }'#10'    return state.pos !== start'#10'  };'#10#10'  pp$8.regexp_e'
  +'atExtendedPatternCharacter = function(state) {'#10'    var ch = state.curre'
  +'nt();'#10'    if ('#10'      ch !== -1 &&'#10'      ch !== 0x24  &&'#10'   '
  +'   !(ch >= 0x28  && ch <= 0x2B ) &&'#10'      ch !== 0x2E  &&'#10'      ch '
  +'!== 0x3F  &&'#10'      ch !== 0x5B  &&'#10'      ch !== 0x5E  &&'#10'      '
  +'ch !== 0x7C '#10'    ) {'#10'      state.advance();'#10'      return true'
  +#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_groupSpecifier '
  +'= function(state) {'#10'    if (state.eat(0x3F )) {'#10'      if (this.rege'
  +'xp_eatGroupName(state)) {'#10'        if (state.groupNames.indexOf(state.la'
  +'stStringValue) !== -1) {'#10'          state.raise("Duplicate capture group'
  +' name");'#10'        }'#10'        state.groupNames.push(state.lastStringVa'
  +'lue);'#10'        return'#10'      }'#10'      state.raise("Invalid group")'
  +';'#10'    }'#10'  };'#10#10'  pp$8.regexp_eatGroupName = function(state) {'
  +#10'    state.lastStringValue = "";'#10'    if (state.eat(0x3C )) {'#10'    '
  +'  if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {'#10
  +'        return true'#10'      }'#10'      state.raise("Invalid capture grou'
  +'p name");'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatR'
  +'egExpIdentifierName = function(state) {'#10'    state.lastStringValue = "";'
  +#10'    if (this.regexp_eatRegExpIdentifierStart(state)) {'#10'      state.l'
  +'astStringValue += codePointToString(state.lastIntValue);'#10'      while (t'
  +'his.regexp_eatRegExpIdentifierPart(state)) {'#10'        state.lastStringVa'
  +'lue += codePointToString(state.lastIntValue);'#10'      }'#10'      return '
  +'true'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatRegExp'
  +'IdentifierStart = function(state) {'#10'    var start = state.pos;'#10'    '
  +'var ch = state.current();'#10'    state.advance();'#10#10'    if (ch === 0x'
  +'5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {'#10'      ch = '
  +'state.lastIntValue;'#10'    }'#10'    if (isRegExpIdentifierStart(ch)) {'#10
  +'      state.lastIntValue = ch;'#10'      return true'#10'    }'#10#10'    s'
  +'tate.pos = start;'#10'    return false'#10'  };'#10'  function isRegExpIden'
  +'tifierStart(ch) {'#10'    return isIdentifierStart(ch, true) || ch === 0x24'
  +'  || ch === 0x5F '#10'  }'#10#10'  pp$8.regexp_eatRegExpIdentifierPart = fu'
  +'nction(state) {'#10'    var start = state.pos;'#10'    var ch = state.curre'
  +'nt();'#10'    state.advance();'#10#10'    if (ch === 0x5C  && this.regexp_e'
  +'atRegExpUnicodeEscapeSequence(state)) {'#10'      ch = state.lastIntValue;'
  +#10'    }'#10'    if (isRegExpIdentifierPart(ch)) {'#10'      state.lastIntV'
  +'alue = ch;'#10'      return true'#10'    }'#10#10'    state.pos = start;'#10
  +'    return false'#10'  };'#10'  function isRegExpIdentifierPart(ch) {'#10' '
  +'   return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch '
  +'=== 0x200C  || ch === 0x200D '#10'  }'#10#10'  pp$8.regexp_eatAtomEscape = '
  +'function(state) {'#10'    if ('#10'      this.regexp_eatBackReference(state'
  +') ||'#10'      this.regexp_eatCharacterClassEscape(state) ||'#10'      this'
  +'.regexp_eatCharacterEscape(state) ||'#10'      (state.switchN && this.regex'
  +'p_eatKGroupName(state))'#10'    ) {'#10'      return true'#10'    }'#10'   '
  +' if (state.switchU) {'#10'      if (state.current() === 0x63 ) {'#10'      '
  +'  state.raise("Invalid unicode escape");'#10'      }'#10'      state.raise('
  +'"Invalid escape");'#10'    }'#10'    return false'#10'  };'#10'  pp$8.regex'
  +'p_eatBackReference = function(state) {'#10'    var start = state.pos;'#10' '
  +'   if (this.regexp_eatDecimalEscape(state)) {'#10'      var n = state.lastI'
  +'ntValue;'#10'      if (state.switchU) {'#10'        if (n > state.maxBackRe'
  +'ference) {'#10'          state.maxBackReference = n;'#10'        }'#10'    '
  +'    return true'#10'      }'#10'      if (n <= state.numCapturingParens) {'
  +#10'        return true'#10'      }'#10'      state.pos = start;'#10'    }'
  +#10'    return false'#10'  };'#10'  pp$8.regexp_eatKGroupName = function(sta'
  +'te) {'#10'    if (state.eat(0x6B )) {'#10'      if (this.regexp_eatGroupNam'
  +'e(state)) {'#10'        state.backReferenceNames.push(state.lastStringValue'
  +');'#10'        return true'#10'      }'#10'      state.raise("Invalid named'
  +' reference");'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_'
  +'eatCharacterEscape = function(state) {'#10'    return ('#10'      this.rege'
  +'xp_eatControlEscape(state) ||'#10'      this.regexp_eatCControlLetter(state'
  +') ||'#10'      this.regexp_eatZero(state) ||'#10'      this.regexp_eatHexEs'
  +'capeSequence(state) ||'#10'      this.regexp_eatRegExpUnicodeEscapeSequence'
  +'(state) ||'#10'      (!state.switchU && this.regexp_eatLegacyOctalEscapeSeq'
  +'uence(state)) ||'#10'      this.regexp_eatIdentityEscape(state)'#10'    )'
  +#10'  };'#10'  pp$8.regexp_eatCControlLetter = function(state) {'#10'    var'
  ,' start = state.pos;'#10'    if (state.eat(0x63 )) {'#10'      if (this.rege'
  +'xp_eatControlLetter(state)) {'#10'        return true'#10'      }'#10'     '
  +' state.pos = start;'#10'    }'#10'    return false'#10'  };'#10'  pp$8.rege'
  +'xp_eatZero = function(state) {'#10'    if (state.current() === 0x30  && !is'
  +'DecimalDigit(state.lookahead())) {'#10'      state.lastIntValue = 0;'#10'  '
  +'    state.advance();'#10'      return true'#10'    }'#10'    return false'
  +#10'  };'#10#10'  pp$8.regexp_eatControlEscape = function(state) {'#10'    v'
  +'ar ch = state.current();'#10'    if (ch === 0x74 ) {'#10'      state.lastIn'
  +'tValue = 0x09; '#10'      state.advance();'#10'      return true'#10'    }'
  +#10'    if (ch === 0x6E ) {'#10'      state.lastIntValue = 0x0A; '#10'      '
  +'state.advance();'#10'      return true'#10'    }'#10'    if (ch === 0x76 ) '
  +'{'#10'      state.lastIntValue = 0x0B; '#10'      state.advance();'#10'    '
  +'  return true'#10'    }'#10'    if (ch === 0x66 ) {'#10'      state.lastInt'
  +'Value = 0x0C; '#10'      state.advance();'#10'      return true'#10'    }'
  +#10'    if (ch === 0x72 ) {'#10'      state.lastIntValue = 0x0D; '#10'      '
  +'state.advance();'#10'      return true'#10'    }'#10'    return false'#10' '
  +' };'#10#10'  pp$8.regexp_eatControlLetter = function(state) {'#10'    var c'
  +'h = state.current();'#10'    if (isControlLetter(ch)) {'#10'      state.las'
  +'tIntValue = ch % 0x20;'#10'      state.advance();'#10'      return true'#10
  +'    }'#10'    return false'#10'  };'#10'  function isControlLetter(ch) {'#10
  +'    return ('#10'      (ch >= 0x41  && ch <= 0x5A ) ||'#10'      (ch >= 0x6'
  +'1  && ch <= 0x7A )'#10'    )'#10'  }'#10#10'  pp$8.regexp_eatRegExpUnicodeE'
  +'scapeSequence = function(state) {'#10'    var start = state.pos;'#10#10'   '
  +' if (state.eat(0x75 )) {'#10'      if (this.regexp_eatFixedHexDigits(state,'
  +' 4)) {'#10'        var lead = state.lastIntValue;'#10'        if (state.swi'
  +'tchU && lead >= 0xD800 && lead <= 0xDBFF) {'#10'          var leadSurrogate'
  +'End = state.pos;'#10'          if (state.eat(0x5C ) && state.eat(0x75 ) && '
  +'this.regexp_eatFixedHexDigits(state, 4)) {'#10'            var trail = stat'
  +'e.lastIntValue;'#10'            if (trail >= 0xDC00 && trail <= 0xDFFF) {'
  +#10'              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0x'
  +'DC00) + 0x10000;'#10'              return true'#10'            }'#10'      '
  +'    }'#10'          state.pos = leadSurrogateEnd;'#10'          state.lastI'
  +'ntValue = lead;'#10'        }'#10'        return true'#10'      }'#10'     '
  +' if ('#10'        state.switchU &&'#10'        state.eat(0x7B ) &&'#10'    '
  +'    this.regexp_eatHexDigits(state) &&'#10'        state.eat(0x7D ) &&'#10
  +'        isValidUnicode(state.lastIntValue)'#10'      ) {'#10'        return'
  +' true'#10'      }'#10'      if (state.switchU) {'#10'        state.raise("I'
  +'nvalid unicode escape");'#10'      }'#10'      state.pos = start;'#10'    }'
  +#10#10'    return false'#10'  };'#10'  function isValidUnicode(ch) {'#10'   '
  +' return ch >= 0 && ch <= 0x10FFFF'#10'  }'#10#10'  pp$8.regexp_eatIdentityE'
  +'scape = function(state) {'#10'    if (state.switchU) {'#10'      if (this.r'
  +'egexp_eatSyntaxCharacter(state)) {'#10'        return true'#10'      }'#10
  +'      if (state.eat(0x2F )) {'#10'        state.lastIntValue = 0x2F; '#10' '
  +'       return true'#10'      }'#10'      return false'#10'    }'#10#10'    '
  +'var ch = state.current();'#10'    if (ch !== 0x63  && (!state.switchN || ch'
  +' !== 0x6B )) {'#10'      state.lastIntValue = ch;'#10'      state.advance()'
  +';'#10'      return true'#10'    }'#10#10'    return false'#10'  };'#10#10' '
  +' pp$8.regexp_eatDecimalEscape = function(state) {'#10'    state.lastIntValu'
  +'e = 0;'#10'    var ch = state.current();'#10'    if (ch >= 0x31  && ch <= 0'
  +'x39 ) {'#10'      do {'#10'        state.lastIntValue = 10 * state.lastIntV'
  +'alue + (ch - 0x30 );'#10'        state.advance();'#10'      } while ((ch = '
  +'state.current()) >= 0x30  && ch <= 0x39 )'#10'      return true'#10'    }'
  +#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatCharacterClassEscape ='
  +' function(state) {'#10'    var ch = state.current();'#10#10'    if (isChara'
  +'cterClassEscape(ch)) {'#10'      state.lastIntValue = -1;'#10'      state.a'
  +'dvance();'#10'      return true'#10'    }'#10#10'    if ('#10'      state.s'
  +'witchU &&'#10'      this.options.ecmaVersion >= 9 &&'#10'      (ch === 0x50'
  +'  || ch === 0x70 )'#10'    ) {'#10'      state.lastIntValue = -1;'#10'     '
  +' state.advance();'#10'      if ('#10'        state.eat(0x7B ) &&'#10'      '
  +'  this.regexp_eatUnicodePropertyValueExpression(state) &&'#10'        state'
  +'.eat(0x7D )'#10'      ) {'#10'        return true'#10'      }'#10'      sta'
  +'te.raise("Invalid property name");'#10'    }'#10#10'    return false'#10'  '
  +'};'#10'  function isCharacterClassEscape(ch) {'#10'    return ('#10'      c'
  +'h === 0x64  ||'#10'      ch === 0x44  ||'#10'      ch === 0x73  ||'#10'    '
  ,'  ch === 0x53  ||'#10'      ch === 0x77  ||'#10'      ch === 0x57 '#10'    '
  +')'#10'  }'#10#10'  pp$8.regexp_eatUnicodePropertyValueExpression = function'
  +'(state) {'#10'    var start = state.pos;'#10#10'    if (this.regexp_eatUnic'
  +'odePropertyName(state) && state.eat(0x3D )) {'#10'      var name = state.la'
  +'stStringValue;'#10'      if (this.regexp_eatUnicodePropertyValue(state)) {'
  +#10'        var value = state.lastStringValue;'#10'        this.regexp_valid'
  +'ateUnicodePropertyNameAndValue(state, name, value);'#10'        return true'
  +#10'      }'#10'    }'#10'    state.pos = start;'#10#10'    if (this.regexp_'
  +'eatLoneUnicodePropertyNameOrValue(state)) {'#10'      var nameOrValue = sta'
  +'te.lastStringValue;'#10'      this.regexp_validateUnicodePropertyNameOrValu'
  +'e(state, nameOrValue);'#10'      return true'#10'    }'#10'    return false'
  +#10'  };'#10'  pp$8.regexp_validateUnicodePropertyNameAndValue = function(st'
  +'ate, name, value) {'#10'    if (!has(state.unicodeProperties.nonBinary, nam'
  +'e))'#10'      { state.raise("Invalid property name"); }'#10'    if (!state.'
  +'unicodeProperties.nonBinary[name].test(value))'#10'      { state.raise("Inv'
  +'alid property value"); }'#10'  };'#10'  pp$8.regexp_validateUnicodeProperty'
  +'NameOrValue = function(state, nameOrValue) {'#10'    if (!state.unicodeProp'
  +'erties.binary.test(nameOrValue))'#10'      { state.raise("Invalid property '
  +'name"); }'#10'  };'#10#10'  pp$8.regexp_eatUnicodePropertyName = function(s'
  +'tate) {'#10'    var ch = 0;'#10'    state.lastStringValue = "";'#10'    whi'
  +'le (isUnicodePropertyNameCharacter(ch = state.current())) {'#10'      state'
  +'.lastStringValue += codePointToString(ch);'#10'      state.advance();'#10' '
  +'   }'#10'    return state.lastStringValue !== ""'#10'  };'#10'  function is'
  +'UnicodePropertyNameCharacter(ch) {'#10'    return isControlLetter(ch) || ch'
  +' === 0x5F '#10'  }'#10#10'  pp$8.regexp_eatUnicodePropertyValue = function('
  +'state) {'#10'    var ch = 0;'#10'    state.lastStringValue = "";'#10'    wh'
  +'ile (isUnicodePropertyValueCharacter(ch = state.current())) {'#10'      sta'
  +'te.lastStringValue += codePointToString(ch);'#10'      state.advance();'#10
  +'    }'#10'    return state.lastStringValue !== ""'#10'  };'#10'  function i'
  +'sUnicodePropertyValueCharacter(ch) {'#10'    return isUnicodePropertyNameCh'
  +'aracter(ch) || isDecimalDigit(ch)'#10'  }'#10#10'  pp$8.regexp_eatLoneUnico'
  +'dePropertyNameOrValue = function(state) {'#10'    return this.regexp_eatUni'
  +'codePropertyValue(state)'#10'  };'#10#10'  pp$8.regexp_eatCharacterClass = '
  +'function(state) {'#10'    if (state.eat(0x5B )) {'#10'      state.eat(0x5E '
  +');'#10'      this.regexp_classRanges(state);'#10'      if (state.eat(0x5D )'
  +') {'#10'        return true'#10'      }'#10'      state.raise("Unterminated'
  +' character class");'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.r'
  +'egexp_classRanges = function(state) {'#10'    while (this.regexp_eatClassAt'
  +'om(state)) {'#10'      var left = state.lastIntValue;'#10'      if (state.e'
  +'at(0x2D ) && this.regexp_eatClassAtom(state)) {'#10'        var right = sta'
  +'te.lastIntValue;'#10'        if (state.switchU && (left === -1 || right ==='
  +' -1)) {'#10'          state.raise("Invalid character class");'#10'        }'
  +#10'        if (left !== -1 && right !== -1 && left > right) {'#10'         '
  +' state.raise("Range out of order in character class");'#10'        }'#10'  '
  +'    }'#10'    }'#10'  };'#10#10'  pp$8.regexp_eatClassAtom = function(state'
  +') {'#10'    var start = state.pos;'#10#10'    if (state.eat(0x5C )) {'#10' '
  +'     if (this.regexp_eatClassEscape(state)) {'#10'        return true'#10' '
  +'     }'#10'      if (state.switchU) {'#10'        var ch$1 = state.current('
  +');'#10'        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {'#10'          st'
  +'ate.raise("Invalid class escape");'#10'        }'#10'        state.raise("I'
  +'nvalid escape");'#10'      }'#10'      state.pos = start;'#10'    }'#10#10
  +'    var ch = state.current();'#10'    if (ch !== 0x5D ) {'#10'      state.l'
  +'astIntValue = ch;'#10'      state.advance();'#10'      return true'#10'    '
  +'}'#10#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatClassEscape = fu'
  +'nction(state) {'#10'    var start = state.pos;'#10#10'    if (state.eat(0x6'
  +'2 )) {'#10'      state.lastIntValue = 0x08; '#10'      return true'#10'    '
  +'}'#10#10'    if (state.switchU && state.eat(0x2D )) {'#10'      state.lastI'
  +'ntValue = 0x2D; '#10'      return true'#10'    }'#10#10'    if (!state.swit'
  +'chU && state.eat(0x63 )) {'#10'      if (this.regexp_eatClassControlLetter('
  +'state)) {'#10'        return true'#10'      }'#10'      state.pos = start;'
  +#10'    }'#10#10'    return ('#10'      this.regexp_eatCharacterClassEscape('
  +'state) ||'#10'      this.regexp_eatCharacterEscape(state)'#10'    )'#10'  }'
  +';'#10#10'  pp$8.regexp_eatClassControlLetter = function(state) {'#10'    va'
  +'r ch = state.current();'#10'    if (isDecimalDigit(ch) || ch === 0x5F ) {'
  ,#10'      state.lastIntValue = ch % 0x20;'#10'      state.advance();'#10'   '
  +'   return true'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp'
  +'_eatHexEscapeSequence = function(state) {'#10'    var start = state.pos;'#10
  +'    if (state.eat(0x78 )) {'#10'      if (this.regexp_eatFixedHexDigits(sta'
  +'te, 2)) {'#10'        return true'#10'      }'#10'      if (state.switchU) '
  +'{'#10'        state.raise("Invalid escape");'#10'      }'#10'      state.po'
  +'s = start;'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eat'
  +'DecimalDigits = function(state) {'#10'    var start = state.pos;'#10'    va'
  +'r ch = 0;'#10'    state.lastIntValue = 0;'#10'    while (isDecimalDigit(ch '
  +'= state.current())) {'#10'      state.lastIntValue = 10 * state.lastIntValu'
  +'e + (ch - 0x30 );'#10'      state.advance();'#10'    }'#10'    return state'
  +'.pos !== start'#10'  };'#10'  function isDecimalDigit(ch) {'#10'    return '
  +'ch >= 0x30  && ch <= 0x39 '#10'  }'#10#10'  pp$8.regexp_eatHexDigits = func'
  +'tion(state) {'#10'    var start = state.pos;'#10'    var ch = 0;'#10'    st'
  +'ate.lastIntValue = 0;'#10'    while (isHexDigit(ch = state.current())) {'#10
  +'      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);'#10'    '
  +'  state.advance();'#10'    }'#10'    return state.pos !== start'#10'  };'#10
  +'  function isHexDigit(ch) {'#10'    return ('#10'      (ch >= 0x30  && ch <'
  +'= 0x39 ) ||'#10'      (ch >= 0x41  && ch <= 0x46 ) ||'#10'      (ch >= 0x61'
  +'  && ch <= 0x66 )'#10'    )'#10'  }'#10'  function hexToInt(ch) {'#10'    i'
  +'f (ch >= 0x41  && ch <= 0x46 ) {'#10'      return 10 + (ch - 0x41 )'#10'   '
  +' }'#10'    if (ch >= 0x61  && ch <= 0x66 ) {'#10'      return 10 + (ch - 0x'
  +'61 )'#10'    }'#10'    return ch - 0x30 '#10'  }'#10#10'  pp$8.regexp_eatLe'
  +'gacyOctalEscapeSequence = function(state) {'#10'    if (this.regexp_eatOcta'
  +'lDigit(state)) {'#10'      var n1 = state.lastIntValue;'#10'      if (this.'
  +'regexp_eatOctalDigit(state)) {'#10'        var n2 = state.lastIntValue;'#10
  +'        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {'#10'          st'
  +'ate.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;'#10'        } els'
  +'e {'#10'          state.lastIntValue = n1 * 8 + n2;'#10'        }'#10'     '
  +' } else {'#10'        state.lastIntValue = n1;'#10'      }'#10'      return'
  +' true'#10'    }'#10'    return false'#10'  };'#10#10'  pp$8.regexp_eatOctal'
  +'Digit = function(state) {'#10'    var ch = state.current();'#10'    if (isO'
  +'ctalDigit(ch)) {'#10'      state.lastIntValue = ch - 0x30; '#10'      state'
  +'.advance();'#10'      return true'#10'    }'#10'    state.lastIntValue = 0;'
  +#10'    return false'#10'  };'#10'  function isOctalDigit(ch) {'#10'    retu'
  +'rn ch >= 0x30  && ch <= 0x37 '#10'  }'#10#10'  pp$8.regexp_eatFixedHexDigit'
  +'s = function(state, length) {'#10'    var start = state.pos;'#10'    state.'
  +'lastIntValue = 0;'#10'    for (var i = 0; i < length; ++i) {'#10'      var '
  +'ch = state.current();'#10'      if (!isHexDigit(ch)) {'#10'        state.po'
  +'s = start;'#10'        return false'#10'      }'#10'      state.lastIntValu'
  +'e = 16 * state.lastIntValue + hexToInt(ch);'#10'      state.advance();'#10
  +'    }'#10'    return true'#10'  };'#10#10#10'  var Token = function Token(p'
  +') {'#10'    this.type = p.type;'#10'    this.value = p.value;'#10'    this.'
  +'start = p.start;'#10'    this.end = p.end;'#10'    if (p.options.locations)'
  +#10'      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }'#10'  '
  +'  if (p.options.ranges)'#10'      { this.range = [p.start, p.end]; }'#10'  '
  +'};'#10#10#10'  var pp$9 = Parser.prototype;'#10#10#10'  pp$9.next = functio'
  +'n(ignoreEscapeSequenceInKeyword) {'#10'    if (!ignoreEscapeSequenceInKeywo'
  +'rd && this.type.keyword && this.containsEsc)'#10'      { this.raiseRecovera'
  +'ble(this.start, "Escape sequence in keyword " + this.type.keyword); }'#10' '
  +'   if (this.options.onToken)'#10'      { this.options.onToken(new Token(thi'
  +'s)); }'#10#10'    this.lastTokEnd = this.end;'#10'    this.lastTokStart = t'
  +'his.start;'#10'    this.lastTokEndLoc = this.endLoc;'#10'    this.lastTokSt'
  +'artLoc = this.startLoc;'#10'    this.nextToken();'#10'  };'#10#10'  pp$9.ge'
  +'tToken = function() {'#10'    this.next();'#10'    return new Token(this)'
  +#10'  };'#10#10'  if (typeof Symbol !== "undefined")'#10'    { pp$9[Symbol.i'
  +'terator] = function() {'#10'      var this$1 = this;'#10#10'      return {'
  +#10'        next: function () {'#10'          var token = this$1.getToken();'
  +#10'          return {'#10'            done: token.type === types.eof,'#10' '
  +'           value: token'#10'          }'#10'        }'#10'      }'#10'    }'
  +'; }'#10#10#10'  pp$9.curContext = function() {'#10'    return this.context['
  +'this.context.length - 1]'#10'  };'#10#10#10'  pp$9.nextToken = function() {'
  +#10'    var curContext = this.curContext();'#10'    if (!curContext || !curC'
  +'ontext.preserveSpace) { this.skipSpace(); }'#10#10'    this.start = this.po'
  ,'s;'#10'    if (this.options.locations) { this.startLoc = this.curPosition()'
  +'; }'#10'    if (this.pos >= this.input.length) { return this.finishToken(ty'
  +'pes.eof) }'#10#10'    if (curContext.override) { return curContext.override'
  +'(this) }'#10'    else { this.readToken(this.fullCharCodeAtPos()); }'#10'  }'
  +';'#10#10'  pp$9.readToken = function(code) {'#10'    if (isIdentifierStart('
  +'code, this.options.ecmaVersion >= 6) || code === 92 )'#10'      { return th'
  +'is.readWord() }'#10#10'    return this.getTokenFromCode(code)'#10'  };'#10
  +#10'  pp$9.fullCharCodeAtPos = function() {'#10'    var code = this.input.ch'
  +'arCodeAt(this.pos);'#10'    if (code <= 0xd7ff || code >= 0xe000) { return '
  +'code }'#10'    var next = this.input.charCodeAt(this.pos + 1);'#10'    retu'
  +'rn (code << 10) + next - 0x35fdc00'#10'  };'#10#10'  pp$9.skipBlockComment '
  +'= function() {'#10'    var startLoc = this.options.onComment && this.curPos'
  +'ition();'#10'    var start = this.pos, end = this.input.indexOf("*/", this.'
  +'pos += 2);'#10'    if (end === -1) { this.raise(this.pos - 2, "Unterminated'
  +' comment"); }'#10'    this.pos = end + 2;'#10'    if (this.options.location'
  +'s) {'#10'      lineBreakG.lastIndex = start;'#10'      var match;'#10'     '
  +' while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {'
  +#10'        ++this.curLine;'#10'        this.lineStart = match.index + match'
  +'[0].length;'#10'      }'#10'    }'#10'    if (this.options.onComment)'#10' '
  +'     { this.options.onComment(true, this.input.slice(start + 2, end), start'
  +', this.pos,'#10'                             startLoc, this.curPosition());'
  +' }'#10'  };'#10#10'  pp$9.skipLineComment = function(startSkip) {'#10'    v'
  +'ar start = this.pos;'#10'    var startLoc = this.options.onComment && this.'
  +'curPosition();'#10'    var ch = this.input.charCodeAt(this.pos += startSkip'
  +');'#10'    while (this.pos < this.input.length && !isNewLine(ch)) {'#10'   '
  +'   ch = this.input.charCodeAt(++this.pos);'#10'    }'#10'    if (this.optio'
  +'ns.onComment)'#10'      { this.options.onComment(false, this.input.slice(st'
  +'art + startSkip, this.pos), start, this.pos,'#10'                          '
  +'   startLoc, this.curPosition()); }'#10'  };'#10#10#10'  pp$9.skipSpace = f'
  +'unction() {'#10'    loop: while (this.pos < this.input.length) {'#10'      '
  +'var ch = this.input.charCodeAt(this.pos);'#10'      switch (ch) {'#10'     '
  +' case 32: case 160: '#10'        ++this.pos;'#10'        break'#10'      ca'
  +'se 13:'#10'        if (this.input.charCodeAt(this.pos + 1) === 10) {'#10'  '
  +'        ++this.pos;'#10'        }'#10'      case 10: case 8232: case 8233:'
  +#10'        ++this.pos;'#10'        if (this.options.locations) {'#10'      '
  +'    ++this.curLine;'#10'          this.lineStart = this.pos;'#10'        }'
  +#10'        break'#10'      case 47: '#10'        switch (this.input.charCod'
  +'eAt(this.pos + 1)) {'#10'        case 42: '#10'          this.skipBlockComm'
  +'ent();'#10'          break'#10'        case 47:'#10'          this.skipLine'
  +'Comment(2);'#10'          break'#10'        default:'#10'          break lo'
  +'op'#10'        }'#10'        break'#10'      default:'#10'        if (ch > '
  +'8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(c'
  +'h))) {'#10'          ++this.pos;'#10'        } else {'#10'          break l'
  +'oop'#10'        }'#10'      }'#10'    }'#10'  };'#10#10#10'  pp$9.finishTok'
  +'en = function(type, val) {'#10'    this.end = this.pos;'#10'    if (this.op'
  +'tions.locations) { this.endLoc = this.curPosition(); }'#10'    var prevType'
  +' = this.type;'#10'    this.type = type;'#10'    this.value = val;'#10#10'  '
  +'  this.updateContext(prevType);'#10'  };'#10#10#10'  pp$9.readToken_dot = f'
  +'unction() {'#10'    var next = this.input.charCodeAt(this.pos + 1);'#10'   '
  +' if (next >= 48 && next <= 57) { return this.readNumber(true) }'#10'    var'
  +' next2 = this.input.charCodeAt(this.pos + 2);'#10'    if (this.options.ecma'
  +'Version >= 6 && next === 46 && next2 === 46) { '#10'      this.pos += 3;'#10
  +'      return this.finishToken(types.ellipsis)'#10'    } else {'#10'      ++'
  +'this.pos;'#10'      return this.finishToken(types.dot)'#10'    }'#10'  };'
  +#10#10'  pp$9.readToken_slash = function() { '#10'    var next = this.input.'
  +'charCodeAt(this.pos + 1);'#10'    if (this.exprAllowed) { ++this.pos; retur'
  +'n this.readRegexp() }'#10'    if (next === 61) { return this.finishOp(types'
  +'.assign, 2) }'#10'    return this.finishOp(types.slash, 1)'#10'  };'#10#10
  +'  pp$9.readToken_mult_modulo_exp = function(code) { '#10'    var next = thi'
  +'s.input.charCodeAt(this.pos + 1);'#10'    var size = 1;'#10'    var tokenty'
  +'pe = code === 42 ? types.star : types.modulo;'#10#10'    if (this.options.e'
  +'cmaVersion >= 7 && code === 42 && next === 42) {'#10'      ++size;'#10'    '
  +'  tokentype = types.starstar;'#10'      next = this.input.charCodeAt(this.p'
  +'os + 2);'#10'    }'#10#10'    if (next === 61) { return this.finishOp(types'
  ,'.assign, size + 1) }'#10'    return this.finishOp(tokentype, size)'#10'  };'
  +#10#10'  pp$9.readToken_pipe_amp = function(code) { '#10'    var next = this'
  +'.input.charCodeAt(this.pos + 1);'#10'    if (next === code) { return this.f'
  +'inishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }'#10'    if '
  +'(next === 61) { return this.finishOp(types.assign, 2) }'#10'    return this'
  +'.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)'#10'  };'#10
  +#10'  pp$9.readToken_caret = function() { '#10'    var next = this.input.cha'
  +'rCodeAt(this.pos + 1);'#10'    if (next === 61) { return this.finishOp(type'
  +'s.assign, 2) }'#10'    return this.finishOp(types.bitwiseXOR, 1)'#10'  };'
  +#10#10'  pp$9.readToken_plus_min = function(code) { '#10'    var next = this'
  +'.input.charCodeAt(this.pos + 1);'#10'    if (next === code) {'#10'      if '
  +'(next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 6'
  +'2 &&'#10'          (this.lastTokEnd === 0 || lineBreak.test(this.input.slic'
  +'e(this.lastTokEnd, this.pos)))) {'#10'        this.skipLineComment(3);'#10
  +'        this.skipSpace();'#10'        return this.nextToken()'#10'      }'
  +#10'      return this.finishOp(types.incDec, 2)'#10'    }'#10'    if (next ='
  +'== 61) { return this.finishOp(types.assign, 2) }'#10'    return this.finish'
  +'Op(types.plusMin, 1)'#10'  };'#10#10'  pp$9.readToken_lt_gt = function(code'
  +') { '#10'    var next = this.input.charCodeAt(this.pos + 1);'#10'    var si'
  +'ze = 1;'#10'    if (next === code) {'#10'      size = code === 62 && this.i'
  +'nput.charCodeAt(this.pos + 2) === 62 ? 3 : 2;'#10'      if (this.input.char'
  +'CodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size +'
  +' 1) }'#10'      return this.finishOp(types.bitShift, size)'#10'    }'#10'  '
  +'  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt'
  +'(this.pos + 2) === 45 &&'#10'        this.input.charCodeAt(this.pos + 3) =='
  +'= 45) {'#10'      this.skipLineComment(4);'#10'      this.skipSpace();'#10
  +'      return this.nextToken()'#10'    }'#10'    if (next === 61) { size = 2'
  +'; }'#10'    return this.finishOp(types.relational, size)'#10'  };'#10#10'  '
  +'pp$9.readToken_eq_excl = function(code) { '#10'    var next = this.input.ch'
  +'arCodeAt(this.pos + 1);'#10'    if (next === 61) { return this.finishOp(typ'
  +'es.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }'#10'    '
  +'if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { '#10'   '
  +'   this.pos += 2;'#10'      return this.finishToken(types.arrow)'#10'    }'
  +#10'    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)'#10' '
  +' };'#10#10'  pp$9.getTokenFromCode = function(code) {'#10'    switch (code)'
  +' {'#10'    case 46: '#10'      return this.readToken_dot()'#10#10'    case '
  +'40: ++this.pos; return this.finishToken(types.parenL)'#10'    case 41: ++th'
  +'is.pos; return this.finishToken(types.parenR)'#10'    case 59: ++this.pos; '
  +'return this.finishToken(types.semi)'#10'    case 44: ++this.pos; return thi'
  +'s.finishToken(types.comma)'#10'    case 91: ++this.pos; return this.finishT'
  +'oken(types.bracketL)'#10'    case 93: ++this.pos; return this.finishToken(t'
  +'ypes.bracketR)'#10'    case 123: ++this.pos; return this.finishToken(types.'
  +'braceL)'#10'    case 125: ++this.pos; return this.finishToken(types.braceR)'
  +#10'    case 58: ++this.pos; return this.finishToken(types.colon)'#10'    ca'
  +'se 63: ++this.pos; return this.finishToken(types.question)'#10#10'    case '
  +'96: '#10'      if (this.options.ecmaVersion < 6) { break }'#10'      ++this'
  +'.pos;'#10'      return this.finishToken(types.backQuote)'#10#10'    case 48'
  +': '#10'      var next = this.input.charCodeAt(this.pos + 1);'#10'      if ('
  +'next === 120 || next === 88) { return this.readRadixNumber(16) } '#10'     '
  +' if (this.options.ecmaVersion >= 6) {'#10'        if (next === 111 || next '
  +'=== 79) { return this.readRadixNumber(8) } '#10'        if (next === 98 || '
  +'next === 66) { return this.readRadixNumber(2) } '#10'      }'#10#10'    cas'
  +'e 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 5'
  +'7: '#10'      return this.readNumber(false)'#10#10'    case 34: case 39: '
  +#10'      return this.readString(code)'#10#10#10'    case 47: '#10'      ret'
  +'urn this.readToken_slash()'#10#10'    case 37: case 42: '#10'      return t'
  +'his.readToken_mult_modulo_exp(code)'#10#10'    case 124: case 38: '#10'    '
  +'  return this.readToken_pipe_amp(code)'#10#10'    case 94: '#10'      retur'
  +'n this.readToken_caret()'#10#10'    case 43: case 45: '#10'      return thi'
  +'s.readToken_plus_min(code)'#10#10'    case 60: case 62: '#10'      return t'
  +'his.readToken_lt_gt(code)'#10#10'    case 61: case 33: '#10'      return th'
  +'is.readToken_eq_excl(code)'#10#10'    case 126: '#10'      return this.fini'
  +'shOp(types.prefix, 1)'#10'    }'#10#10'    this.raise(this.pos, "Unexpected'
  +' character ''" + codePointToString$1(code) + "''");'#10'  };'#10#10'  pp$9.'
  ,'finishOp = function(type, size) {'#10'    var str = this.input.slice(this.p'
  +'os, this.pos + size);'#10'    this.pos += size;'#10'    return this.finishT'
  +'oken(type, str)'#10'  };'#10#10'  pp$9.readRegexp = function() {'#10'    va'
  +'r escaped, inClass, start = this.pos;'#10'    for (;;) {'#10'      if (this'
  +'.pos >= this.input.length) { this.raise(start, "Unterminated regular expres'
  +'sion"); }'#10'      var ch = this.input.charAt(this.pos);'#10'      if (lin'
  +'eBreak.test(ch)) { this.raise(start, "Unterminated regular expression"); }'
  +#10'      if (!escaped) {'#10'        if (ch === "[") { inClass = true; }'#10
  +'        else if (ch === "]" && inClass) { inClass = false; }'#10'        el'
  +'se if (ch === "/" && !inClass) { break }'#10'        escaped = ch === "\\";'
  +#10'      } else { escaped = false; }'#10'      ++this.pos;'#10'    }'#10'  '
  +'  var pattern = this.input.slice(start, this.pos);'#10'    ++this.pos;'#10
  +'    var flagsStart = this.pos;'#10'    var flags = this.readWord1();'#10'  '
  +'  if (this.containsEsc) { this.unexpected(flagsStart); }'#10#10'    var sta'
  +'te = this.regexpState || (this.regexpState = new RegExpValidationState(this'
  +'));'#10'    state.reset(start, pattern, flags);'#10'    this.validateRegExp'
  +'Flags(state);'#10'    this.validateRegExpPattern(state);'#10#10'    var val'
  +'ue = null;'#10'    try {'#10'      value = new RegExp(pattern, flags);'#10
  +'    } catch (e) {'#10'    }'#10#10'    return this.finishToken(types.regexp'
  +', {pattern: pattern, flags: flags, value: value})'#10'  };'#10#10#10'  pp$9'
  +'.readInt = function(radix, len) {'#10'    var start = this.pos, total = 0;'
  +#10'    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {'#10
  +'      var code = this.input.charCodeAt(this.pos), val = (void 0);'#10'     '
  +' if (code >= 97) { val = code - 97 + 10; } '#10'      else if (code >= 65) '
  +'{ val = code - 65 + 10; } '#10'      else if (code >= 48 && code <= 57) { v'
  +'al = code - 48; } '#10'      else { val = Infinity; }'#10'      if (val >= '
  +'radix) { break }'#10'      ++this.pos;'#10'      total = total * radix + va'
  +'l;'#10'    }'#10'    if (this.pos === start || len != null && this.pos - st'
  +'art !== len) { return null }'#10#10'    return total'#10'  };'#10#10'  pp$9'
  +'.readRadixNumber = function(radix) {'#10'    var start = this.pos;'#10'    '
  +'this.pos += 2; '#10'    var val = this.readInt(radix);'#10'    if (val == n'
  +'ull) { this.raise(this.start + 2, "Expected number in radix " + radix); }'
  +#10'    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos'
  +') === 110) {'#10'      val = typeof BigInt !== "undefined" ? BigInt(this.in'
  +'put.slice(start, this.pos)) : null;'#10'      ++this.pos;'#10'    } else if'
  +' (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Iden'
  +'tifier directly after number"); }'#10'    return this.finishToken(types.num'
  +', val)'#10'  };'#10#10#10'  pp$9.readNumber = function(startsWithDot) {'#10
  +'    var start = this.pos;'#10'    if (!startsWithDot && this.readInt(10) =='
  +'= null) { this.raise(start, "Invalid number"); }'#10'    var octal = this.p'
  +'os - start >= 2 && this.input.charCodeAt(start) === 48;'#10'    if (octal &'
  +'& this.strict) { this.raise(start, "Invalid number"); }'#10'    var next = '
  +'this.input.charCodeAt(this.pos);'#10'    if (!octal && !startsWithDot && th'
  +'is.options.ecmaVersion >= 11 && next === 110) {'#10'      var str$1 = this.'
  +'input.slice(start, this.pos);'#10'      var val$1 = typeof BigInt !== "unde'
  +'fined" ? BigInt(str$1) : null;'#10'      ++this.pos;'#10'      if (isIdenti'
  +'fierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier dir'
  +'ectly after number"); }'#10'      return this.finishToken(types.num, val$1)'
  +#10'    }'#10'    if (octal && /[89]/.test(this.input.slice(start, this.pos)'
  +')) { octal = false; }'#10'    if (next === 46 && !octal) { '#10'      ++thi'
  +'s.pos;'#10'      this.readInt(10);'#10'      next = this.input.charCodeAt(t'
  +'his.pos);'#10'    }'#10'    if ((next === 69 || next === 101) && !octal) { '
  +#10'      next = this.input.charCodeAt(++this.pos);'#10'      if (next === 4'
  +'3 || next === 45) { ++this.pos; } '#10'      if (this.readInt(10) === null)'
  +' { this.raise(start, "Invalid number"); }'#10'    }'#10'    if (isIdentifie'
  +'rStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier direct'
  +'ly after number"); }'#10#10'    var str = this.input.slice(start, this.pos)'
  +';'#10'    var val = octal ? parseInt(str, 8) : parseFloat(str);'#10'    ret'
  +'urn this.finishToken(types.num, val)'#10'  };'#10#10#10'  pp$9.readCodePoin'
  +'t = function() {'#10'    var ch = this.input.charCodeAt(this.pos), code;'#10
  +#10'    if (ch === 123) { '#10'      if (this.options.ecmaVersion < 6) { thi'
  +'s.unexpected(); }'#10'      var codePos = ++this.pos;'#10'      code = this'
  +'.readHexChar(this.input.indexOf("}", this.pos) - this.pos);'#10'      ++thi'
  +'s.pos;'#10'      if (code > 0x10FFFF) { this.invalidStringToken(codePos, "C'
  ,'ode point out of bounds"); }'#10'    } else {'#10'      code = this.readHex'
  +'Char(4);'#10'    }'#10'    return code'#10'  };'#10#10'  function codePoint'
  +'ToString$1(code) {'#10'    if (code <= 0xFFFF) { return String.fromCharCode'
  +'(code) }'#10'    code -= 0x10000;'#10'    return String.fromCharCode((code '
  +'>> 10) + 0xD800, (code & 1023) + 0xDC00)'#10'  }'#10#10'  pp$9.readString ='
  +' function(quote) {'#10'    var out = "", chunkStart = ++this.pos;'#10'    f'
  +'or (;;) {'#10'      if (this.pos >= this.input.length) { this.raise(this.st'
  +'art, "Unterminated string constant"); }'#10'      var ch = this.input.charC'
  +'odeAt(this.pos);'#10'      if (ch === quote) { break }'#10'      if (ch ==='
  +' 92) { '#10'        out += this.input.slice(chunkStart, this.pos);'#10'    '
  +'    out += this.readEscapedChar(false);'#10'        chunkStart = this.pos;'
  +#10'      } else {'#10'        if (isNewLine(ch, this.options.ecmaVersion >='
  +' 10)) { this.raise(this.start, "Unterminated string constant"); }'#10'     '
  +'   ++this.pos;'#10'      }'#10'    }'#10'    out += this.input.slice(chunkS'
  +'tart, this.pos++);'#10'    return this.finishToken(types.string, out)'#10' '
  +' };'#10#10#10'  var INVALID_TEMPLATE_ESCAPE_ERROR = {};'#10#10'  pp$9.tryRe'
  +'adTemplateToken = function() {'#10'    this.inTemplateElement = true;'#10' '
  +'   try {'#10'      this.readTmplToken();'#10'    } catch (err) {'#10'      '
  +'if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {'#10'        this.readInvalidTe'
  +'mplateToken();'#10'      } else {'#10'        throw err'#10'      }'#10'   '
  +' }'#10#10'    this.inTemplateElement = false;'#10'  };'#10#10'  pp$9.invali'
  +'dStringToken = function(position, message) {'#10'    if (this.inTemplateEle'
  +'ment && this.options.ecmaVersion >= 9) {'#10'      throw INVALID_TEMPLATE_E'
  +'SCAPE_ERROR'#10'    } else {'#10'      this.raise(position, message);'#10' '
  +'   }'#10'  };'#10#10'  pp$9.readTmplToken = function() {'#10'    var out = '
  +'"", chunkStart = this.pos;'#10'    for (;;) {'#10'      if (this.pos >= thi'
  +'s.input.length) { this.raise(this.start, "Unterminated template"); }'#10'  '
  +'    var ch = this.input.charCodeAt(this.pos);'#10'      if (ch === 96 || ch'
  +' === 36 && this.input.charCodeAt(this.pos + 1) === 123) { '#10'        if ('
  +'this.pos === this.start && (this.type === types.template || this.type === t'
  +'ypes.invalidTemplate)) {'#10'          if (ch === 36) {'#10'            thi'
  +'s.pos += 2;'#10'            return this.finishToken(types.dollarBraceL)'#10
  +'          } else {'#10'            ++this.pos;'#10'            return this.'
  +'finishToken(types.backQuote)'#10'          }'#10'        }'#10'        out '
  +'+= this.input.slice(chunkStart, this.pos);'#10'        return this.finishTo'
  +'ken(types.template, out)'#10'      }'#10'      if (ch === 92) { '#10'      '
  +'  out += this.input.slice(chunkStart, this.pos);'#10'        out += this.re'
  +'adEscapedChar(true);'#10'        chunkStart = this.pos;'#10'      } else if'
  +' (isNewLine(ch)) {'#10'        out += this.input.slice(chunkStart, this.pos'
  +');'#10'        ++this.pos;'#10'        switch (ch) {'#10'        case 13:'
  +#10'          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }'#10
  +'        case 10:'#10'          out += "\n";'#10'          break'#10'       '
  +' default:'#10'          out += String.fromCharCode(ch);'#10'          break'
  +#10'        }'#10'        if (this.options.locations) {'#10'          ++this'
  +'.curLine;'#10'          this.lineStart = this.pos;'#10'        }'#10'      '
  +'  chunkStart = this.pos;'#10'      } else {'#10'        ++this.pos;'#10'   '
  +'   }'#10'    }'#10'  };'#10#10'  pp$9.readInvalidTemplateToken = function()'
  +' {'#10'    for (; this.pos < this.input.length; this.pos++) {'#10'      swi'
  +'tch (this.input[this.pos]) {'#10'      case "\\":'#10'        ++this.pos;'
  +#10'        break'#10#10'      case "$":'#10'        if (this.input[this.pos'
  +' + 1] !== "{") {'#10'          break'#10'        }'#10#10'      case "`":'
  +#10'        return this.finishToken(types.invalidTemplate, this.input.slice('
  +'this.start, this.pos))'#10#10'      }'#10'    }'#10'    this.raise(this.sta'
  +'rt, "Unterminated template");'#10'  };'#10#10#10'  pp$9.readEscapedChar = f'
  +'unction(inTemplate) {'#10'    var ch = this.input.charCodeAt(++this.pos);'
  +#10'    ++this.pos;'#10'    switch (ch) {'#10'    case 110: return "\n" '#10
  +'    case 114: return "\r" '#10'    case 120: return String.fromCharCode(thi'
  +'s.readHexChar(2)) '#10'    case 117: return codePointToString$1(this.readCo'
  +'dePoint()) '#10'    case 116: return "\t" '#10'    case 98: return "\b" '#10
  +'    case 118: return "\u000b" '#10'    case 102: return "\f" '#10'    case '
  +'13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } '#10'    ca'
  +'se 10: '#10'      if (this.options.locations) { this.lineStart = this.pos; '
  +'++this.curLine; }'#10'      return ""'#10'    case 56:'#10'    case 57:'#10
  +'      if (inTemplate) {'#10'        var codePos = this.pos - 1;'#10#10'    '
  ,'    this.invalidStringToken('#10'          codePos,'#10'          "Invalid '
  +'escape sequence in template string"'#10'        );'#10#10'        return nu'
  +'ll'#10'      }'#10'    default:'#10'      if (ch >= 48 && ch <= 55) {'#10' '
  +'       var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0'
  +'];'#10'        var octal = parseInt(octalStr, 8);'#10'        if (octal > 2'
  +'55) {'#10'          octalStr = octalStr.slice(0, -1);'#10'          octal ='
  +' parseInt(octalStr, 8);'#10'        }'#10'        this.pos += octalStr.leng'
  +'th - 1;'#10'        ch = this.input.charCodeAt(this.pos);'#10'        if (('
  +'octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate))'
  +' {'#10'          this.invalidStringToken('#10'            this.pos - 1 - oc'
  +'talStr.length,'#10'            inTemplate'#10'              ? "Octal litera'
  +'l in template string"'#10'              : "Octal literal in strict mode"'#10
  +'          );'#10'        }'#10'        return String.fromCharCode(octal)'#10
  +'      }'#10'      if (isNewLine(ch)) {'#10'        return ""'#10'      }'#10
  +'      return String.fromCharCode(ch)'#10'    }'#10'  };'#10#10#10'  pp$9.re'
  +'adHexChar = function(len) {'#10'    var codePos = this.pos;'#10'    var n ='
  +' this.readInt(16, len);'#10'    if (n === null) { this.invalidStringToken(c'
  +'odePos, "Bad character escape sequence"); }'#10'    return n'#10'  };'#10#10
  +#10'  pp$9.readWord1 = function() {'#10'    this.containsEsc = false;'#10'  '
  +'  var word = "", first = true, chunkStart = this.pos;'#10'    var astral = '
  +'this.options.ecmaVersion >= 6;'#10'    while (this.pos < this.input.length)'
  +' {'#10'      var ch = this.fullCharCodeAtPos();'#10'      if (isIdentifierC'
  +'har(ch, astral)) {'#10'        this.pos += ch <= 0xffff ? 1 : 2;'#10'      '
  +'} else if (ch === 92) { '#10'        this.containsEsc = true;'#10'        w'
  +'ord += this.input.slice(chunkStart, this.pos);'#10'        var escStart = t'
  +'his.pos;'#10'        if (this.input.charCodeAt(++this.pos) !== 117) '#10'  '
  +'        { this.invalidStringToken(this.pos, "Expecting Unicode escape seque'
  +'nce \\uXXXX"); }'#10'        ++this.pos;'#10'        var esc = this.readCod'
  +'ePoint();'#10'        if (!(first ? isIdentifierStart : isIdentifierChar)(e'
  +'sc, astral))'#10'          { this.invalidStringToken(escStart, "Invalid Uni'
  +'code escape"); }'#10'        word += codePointToString$1(esc);'#10'        '
  +'chunkStart = this.pos;'#10'      } else {'#10'        break'#10'      }'#10
  +'      first = false;'#10'    }'#10'    return word + this.input.slice(chunk'
  +'Start, this.pos)'#10'  };'#10#10#10'  pp$9.readWord = function() {'#10'    '
  +'var word = this.readWord1();'#10'    var type = types.name;'#10'    if (thi'
  +'s.keywords.test(word)) {'#10'      type = keywords$1[word];'#10'    }'#10' '
  +'   return this.finishToken(type, word)'#10'  };'#10#10#10'  var version = "'
  +'7.1.0";'#10#10'  Parser.acorn = {'#10'    Parser: Parser,'#10'    version: '
  +'version,'#10'    defaultOptions: defaultOptions,'#10'    Position: Position'
  +','#10'    SourceLocation: SourceLocation,'#10'    getLineInfo: getLineInfo,'
  +#10'    Node: Node,'#10'    TokenType: TokenType,'#10'    tokTypes: types,'
  +#10'    keywordTypes: keywords$1,'#10'    TokContext: TokContext,'#10'    to'
  +'kContexts: types$1,'#10'    isIdentifierChar: isIdentifierChar,'#10'    isI'
  +'dentifierStart: isIdentifierStart,'#10'    Token: Token,'#10'    isNewLine:'
  +' isNewLine,'#10'    lineBreak: lineBreak,'#10'    lineBreakG: lineBreakG,'
  +#10'    nonASCIIwhitespace: nonASCIIwhitespace'#10'  };'#10#10#10'  function'
  +' parse(input, options) {'#10'    return Parser.parse(input, options)'#10'  '
  +'}'#10#10#10'  function parseExpressionAt(input, pos, options) {'#10'    ret'
  +'urn Parser.parseExpressionAt(input, pos, options)'#10'  }'#10#10#10'  funct'
  +'ion tokenizer(input, options) {'#10'    return Parser.tokenizer(input, opti'
  +'ons)'#10'  }'#10#10'  exports.Node = Node;'#10'  exports.Parser = Parser;'
  +#10'  exports.Position = Position;'#10'  exports.SourceLocation = SourceLoca'
  +'tion;'#10'  exports.TokContext = TokContext;'#10'  exports.Token = Token;'
  +#10'  exports.TokenType = TokenType;'#10'  exports.defaultOptions = defaultO'
  +'ptions;'#10'  exports.getLineInfo = getLineInfo;'#10'  exports.isIdentifier'
  +'Char = isIdentifierChar;'#10'  exports.isIdentifierStart = isIdentifierStar'
  +'t;'#10'  exports.isNewLine = isNewLine;'#10'  exports.keywordTypes = keywor'
  +'ds$1;'#10'  exports.lineBreak = lineBreak;'#10'  exports.lineBreakG = lineB'
  +'reakG;'#10'  exports.nonASCIIwhitespace = nonASCIIwhitespace;'#10'  exports'
  +'.parse = parse;'#10'  exports.parseExpressionAt = parseExpressionAt;'#10'  '
  +'exports.tokContexts = types$1;'#10'  exports.tokTypes = types;'#10'  export'
  +'s.tokenizer = tokenizer;'#10'  exports.version = version;'#10#10'  Object.d'
  +'efineProperty(exports, ''__esModule'', { value: true });'#10#10'}));'#10#10
  +'},{}],2:[function(require,module,exports){'#10#10'},{}],3:[function(require'
  ,',module,exports){'#10'function glWiretap(gl, options = {}) {'#10'  const {'
  +#10'    contextName = ''gl'','#10'    throwGetError,'#10'    useTrackablePri'
  +'mitives,'#10'    readPixelsFile,'#10'    recording = [],'#10'    variables '
  +'= {},'#10'    onReadPixels,'#10'    onUnrecognizedArgumentLookup,'#10'  } ='
  +' options;'#10'  const proxy = new Proxy(gl, { get: listen });'#10'  const c'
  +'ontextVariables = [];'#10'  const entityNames = {};'#10'  let imageCount = '
  +'0;'#10'  let indent = '''';'#10'  let readPixelsVariableName;'#10'  return '
  +'proxy;'#10'  function listen(obj, property) {'#10'    switch (property) {'
  +#10'      case ''addComment'': return addComment;'#10'      case ''checkThro'
  +'wError'': return checkThrowError;'#10'      case ''getReadPixelsVariableNam'
  +'e'': return readPixelsVariableName;'#10'      case ''insertVariable'': retu'
  +'rn insertVariable;'#10'      case ''reset'': return reset;'#10'      case '
  +'''setIndent'': return setIndent;'#10'      case ''toString'': return toStri'
  +'ng;'#10'      case ''getContextVariableName'': return getContextVariableNam'
  +'e;'#10'    }'#10'    if (typeof gl[property] === ''function'') {'#10'      '
  +'return function() { '#10'        switch (property) {'#10'          case ''g'
  +'etError'':'#10'            if (throwGetError) {'#10'              recording'
  +'.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) thro'
  +'w new Error(''error'');`);'#10'            } else {'#10'              recor'
  +'ding.push(`${indent}${contextName}.getError();`); '#10'            }'#10'  '
  +'          return gl.getError();'#10'          case ''getExtension'': {'#10
  +'            const variableName = `${contextName}Variables${contextVariables'
  +'.length}`;'#10'            recording.push(`${indent}const ${variableName} ='
  +' ${contextName}.getExtension(''${arguments[0]}'');`);'#10'            const'
  +' extension = gl.getExtension(arguments[0]);'#10'            if (extension &'
  +'& typeof extension === ''object'') {'#10'              const tappedExtensio'
  +'n = glExtensionWiretap(extension, {'#10'                getEntity,'#10'    '
  +'            useTrackablePrimitives,'#10'                recording,'#10'    '
  +'            contextName: variableName,'#10'                contextVariables'
  +','#10'                variables,'#10'                indent,'#10'          '
  +'      onUnrecognizedArgumentLookup,'#10'              });'#10'             '
  +' contextVariables.push(tappedExtension);'#10'              return tappedExt'
  +'ension;'#10'            } else {'#10'              contextVariables.push(nu'
  +'ll);'#10'            }'#10'            return extension;'#10'          }'#10
  +'          case ''readPixels'':'#10'            const i = contextVariables.i'
  +'ndexOf(arguments[6]);'#10'            let targetVariableName;'#10'         '
  +'   if (i === -1) {'#10'              const variableName = getVariableName(a'
  +'rguments[6]);'#10'              if (variableName) {'#10'                tar'
  +'getVariableName = variableName;'#10'                recording.push(`${inden'
  +'t}${variableName}`);'#10'              } else {'#10'                targetV'
  +'ariableName = `${contextName}Variable${contextVariables.length}`;'#10'     '
  +'           contextVariables.push(arguments[6]);'#10'                recordi'
  +'ng.push(`${indent}const ${targetVariableName} = new ${arguments[6].construc'
  +'tor.name}(${arguments[6].length});`);'#10'              }'#10'            }'
  +' else {'#10'              targetVariableName = `${contextName}Variable${i}`'
  +';'#10'            }'#10'            readPixelsVariableName = targetVariable'
  +'Name;'#10'            const argumentAsStrings = ['#10'              argumen'
  +'ts[0],'#10'              arguments[1],'#10'              arguments[2],'#10
  +'              arguments[3],'#10'              getEntity(arguments[4]),'#10
  +'              getEntity(arguments[5]),'#10'              targetVariableName'
  +#10'            ];'#10'            recording.push(`${indent}${contextName}.r'
  +'eadPixels(${argumentAsStrings.join('', '')});`);'#10'            if (readPi'
  +'xelsFile) {'#10'              writePPM(arguments[2], arguments[3]);'#10'   '
  +'         }'#10'            if (onReadPixels) {'#10'              onReadPixe'
  +'ls(targetVariableName, argumentAsStrings);'#10'            }'#10'          '
  +'  return gl.readPixels.apply(gl, arguments);'#10'          case ''drawBuffe'
  +'rs'':'#10'            recording.push(`${indent}${contextName}.drawBuffers(['
  +'${argumentsToString(arguments[0], { contextName, contextVariables, getEntit'
  +'y, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);'#10'    '
  +'        return gl.drawBuffers(arguments[0]);'#10'        }'#10'        let '
  +'result = gl[property].apply(gl, arguments);'#10'        switch (typeof resu'
  +'lt) {'#10'          case ''undefined'':'#10'            recording.push(`${i'
  +'ndent}${methodCallToString(property, arguments)};`);'#10'            return'
  +';'#10'          case ''number'':'#10'          case ''boolean'':'#10'      '
  ,'      if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimi'
  +'tive(result)) === -1) {'#10'              recording.push(`${indent}const ${'
  +'contextName}Variable${contextVariables.length} = ${methodCallToString(prope'
  +'rty, arguments)};`);'#10'              contextVariables.push(result = track'
  +'ablePrimitive(result));'#10'              break;'#10'            }'#10'    '
  +'      default:'#10'            if (result === null) {'#10'              rec'
  +'ording.push(`${methodCallToString(property, arguments)};`);'#10'           '
  +' } else {'#10'              recording.push(`${indent}const ${contextName}Va'
  +'riable${contextVariables.length} = ${methodCallToString(property, arguments'
  +')};`);'#10'            }'#10#10'            contextVariables.push(result);'
  +#10'        }'#10'        return result;'#10'      }'#10'    }'#10'    entit'
  +'yNames[gl[property]] = property;'#10'    return gl[property];'#10'  }'#10' '
  +' function toString() {'#10'    return recording.join(''\n'');'#10'  }'#10' '
  +' function reset() {'#10'    while (recording.length > 0) {'#10'      record'
  +'ing.pop();'#10'    }'#10'  }'#10'  function insertVariable(name, value) {'
  +#10'    variables[name] = value;'#10'  }'#10'  function getEntity(value) {'
  +#10'    const name = entityNames[value];'#10'    if (name) {'#10'      retur'
  +'n contextName + ''.'' + name;'#10'    }'#10'    return value;'#10'  }'#10' '
  +' function setIndent(spaces) {'#10'    indent = '' ''.repeat(spaces);'#10'  '
  +'}'#10'  function addVariable(value, source) {'#10'    const variableName = '
  +'`${contextName}Variable${contextVariables.length}`;'#10'    recording.push('
  +'`${indent}const ${variableName} = ${source};`);'#10'    contextVariables.pu'
  +'sh(value);'#10'    return variableName;'#10'  }'#10'  function writePPM(wid'
  +'th, height) {'#10'    const sourceVariable = `${contextName}Variable${conte'
  +'xtVariables.length}`;'#10'    const imageVariable = `imageDatum${imageCount'
  +'}`;'#10'    recording.push(`${indent}let ${imageVariable} = ["P3\\n# ${read'
  +'PixelsFile}.ppm\\n", ${width}, '' '', ${height}, "\\n255\\n"].join("");`);'
  +#10'    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length'
  +'; i += 4) {`);'#10'    recording.push(`${indent}  ${imageVariable} += ${sou'
  +'rceVariable}[i] + '' '' + ${sourceVariable}[i + 1] + '' '' + ${sourceVariab'
  +'le}[i + 2] + '' '';`);'#10'    recording.push(`${indent}}`);'#10'    record'
  +'ing.push(`${indent}if (typeof require !== "undefined") {`);'#10'    recordi'
  +'ng.push(`${indent}  require(''fs'').writeFileSync(''./${readPixelsFile}.ppm'
  +''', ${imageVariable});`);'#10'    recording.push(`${indent}}`);'#10'    ima'
  +'geCount++;'#10'  }'#10'  function addComment(value) {'#10'    recording.pus'
  +'h(`${indent}// ${value}`);'#10'  }'#10'  function checkThrowError() {'#10' '
  +'   recording.push(`${indent}(() => {'#10'${indent}const error = ${contextNa'
  +'me}.getError();'#10'${indent}if (error !== ${contextName}.NONE) {'#10'${ind'
  +'ent}  const names = Object.getOwnPropertyNames(gl);'#10'${indent}  for (let'
  +' i = 0; i < names.length; i++) {'#10'${indent}    const name = names[i];'#10
  +'${indent}    if (${contextName}[name] === error) {'#10'${indent}      throw'
  +' new Error(''${contextName} threw '' + name);'#10'${indent}    }'#10'${inde'
  +'nt}  }'#10'${indent}}'#10'${indent}})();`);'#10'  }'#10'  function methodCa'
  +'llToString(method, args) {'#10'    return `${contextName}.${method}(${argum'
  +'entsToString(args, { contextName, contextVariables, getEntity, addVariable,'
  +' variables, onUnrecognizedArgumentLookup })})`;'#10'  }'#10#10'  function g'
  +'etVariableName(value) {'#10'    if (variables) {'#10'      for (const name '
  +'in variables) {'#10'        if (variables[name] === value) {'#10'          '
  +'return name;'#10'        }'#10'      }'#10'    }'#10'    return null;'#10' '
  +' }'#10#10'  function getContextVariableName(value) {'#10'    const i = cont'
  +'extVariables.indexOf(value);'#10'    if (i !== -1) {'#10'      return `${co'
  +'ntextName}Variable${i}`;'#10'    }'#10'    return null;'#10'  }'#10'}'#10#10
  +'function glExtensionWiretap(extension, options) {'#10'  const proxy = new P'
  +'roxy(extension, { get: listen });'#10'  const extensionEntityNames = {};'#10
  +'  const {'#10'    contextName,'#10'    contextVariables,'#10'    getEntity,'
  +#10'    useTrackablePrimitives,'#10'    recording,'#10'    variables,'#10'  '
  +'  indent,'#10'    onUnrecognizedArgumentLookup,'#10'  } = options;'#10'  re'
  +'turn proxy;'#10'  function listen(obj, property) {'#10'    if (typeof obj[p'
  +'roperty] === ''function'') {'#10'      return function() {'#10'        swit'
  +'ch (property) {'#10'          case ''drawBuffersWEBGL'':'#10'            re'
  +'cording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString'
  +'(arguments[0], { contextName, contextVariables, getEntity: getExtensionEnti'
  +'ty, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);'#10'    '
  +'        return extension.drawBuffersWEBGL(arguments[0]);'#10'        }'#10
  ,'        let result = extension[property].apply(extension, arguments);'#10' '
  +'       switch (typeof result) {'#10'          case ''undefined'':'#10'     '
  +'       recording.push(`${indent}${methodCallToString(property, arguments)};'
  +'`);'#10'            return;'#10'          case ''number'':'#10'          ca'
  +'se ''boolean'':'#10'            if (useTrackablePrimitives && contextVariab'
  +'les.indexOf(trackablePrimitive(result)) === -1) {'#10'              recordi'
  +'ng.push(`${indent}const ${contextName}Variable${contextVariables.length} = '
  +'${methodCallToString(property, arguments)};`);'#10'              contextVar'
  +'iables.push(result = trackablePrimitive(result));'#10'            } else {'
  +#10'              recording.push(`${indent}const ${contextName}Variable${con'
  +'textVariables.length} = ${methodCallToString(property, arguments)};`);'#10
  +'              contextVariables.push(result);'#10'            }'#10'        '
  +'    break;'#10'          default:'#10'            if (result === null) {'#10
  +'              recording.push(`${methodCallToString(property, arguments)};`)'
  +';'#10'            } else {'#10'              recording.push(`${indent}const'
  +' ${contextName}Variable${contextVariables.length} = ${methodCallToString(pr'
  +'operty, arguments)};`);'#10'            }'#10'            contextVariables.'
  +'push(result);'#10'        }'#10'        return result;'#10'      };'#10'   '
  +' }'#10'    extensionEntityNames[extension[property]] = property;'#10'    re'
  +'turn extension[property];'#10'  }'#10#10'  function getExtensionEntity(valu'
  +'e) {'#10'    if (extensionEntityNames.hasOwnProperty(value)) {'#10'      re'
  +'turn `${contextName}.${extensionEntityNames[value]}`;'#10'    }'#10'    ret'
  +'urn getEntity(value);'#10'  }'#10#10'  function methodCallToString(method, '
  +'args) {'#10'    return `${contextName}.${method}(${argumentsToString(args, '
  +'{ contextName, contextVariables, getEntity: getExtensionEntity, addVariable'
  +', variables, onUnrecognizedArgumentLookup })})`;'#10'  }'#10#10'  function '
  +'addVariable(value, source) {'#10'    const variableName = `${contextName}Va'
  +'riable${contextVariables.length}`;'#10'    contextVariables.push(value);'#10
  +'    recording.push(`${indent}const ${variableName} = ${source};`);'#10'    '
  +'return variableName;'#10'  }'#10'}'#10#10'function argumentsToString(args, '
  +'options) {'#10'  const { variables, onUnrecognizedArgumentLookup } = option'
  +'s;'#10'  return (Array.from(args).map((arg) => {'#10'    const variableName'
  +' = getVariableName(arg);'#10'    if (variableName) {'#10'      return varia'
  +'bleName;'#10'    }'#10'    return argumentToString(arg, options);'#10'  }).'
  +'join('', ''));'#10#10'  function getVariableName(value) {'#10'    if (varia'
  +'bles) {'#10'      for (const name in variables) {'#10'        if (!variable'
  +'s.hasOwnProperty(name)) continue;'#10'        if (variables[name] === value'
  +') {'#10'          return name;'#10'        }'#10'      }'#10'    }'#10'    '
  +'if (onUnrecognizedArgumentLookup) {'#10'      return onUnrecognizedArgument'
  +'Lookup(value);'#10'    }'#10'    return null;'#10'  }'#10'}'#10#10'function'
  +' argumentToString(arg, options) {'#10'  const { contextName, contextVariabl'
  +'es, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;'#10' '
  +' if (typeof arg === ''undefined'') {'#10'    return ''undefined'';'#10'  }'
  +#10'  if (arg === null) {'#10'    return ''null'';'#10'  }'#10'  const i = c'
  +'ontextVariables.indexOf(arg);'#10'  if (i > -1) {'#10'    return `${context'
  +'Name}Variable${i}`;'#10'  }'#10'  switch (arg.constructor.name) {'#10'    c'
  +'ase ''String'':'#10'      const hasLines = /\n/.test(arg);'#10'      const '
  +'hasSingleQuotes = /''/.test(arg);'#10'      const hasDoubleQuotes = /"/.tes'
  +'t(arg);'#10'      if (hasLines) {'#10'        return ''`'' + arg + ''`'';'
  +#10'      } else if (hasSingleQuotes && !hasDoubleQuotes) {'#10'        retu'
  +'rn ''"'' + arg + ''"'';'#10'      } else if (!hasSingleQuotes && hasDoubleQ'
  +'uotes) {'#10'        return "''" + arg + "''";'#10'      } else {'#10'     '
  +'   return ''\'''' + arg + ''\'''';'#10'      }'#10'    case ''Number'': ret'
  +'urn getEntity(arg);'#10'    case ''Boolean'': return getEntity(arg);'#10'  '
  +'  case ''Array'':'#10'      return addVariable(arg, `new ${arg.constructor.'
  +'name}([${Array.from(arg).join('','')}])`);'#10'    case ''Float32Array'':'
  +#10'    case ''Uint8Array'':'#10'    case ''Uint16Array'':'#10'    case ''In'
  +'t32Array'':'#10'      return addVariable(arg, `new ${arg.constructor.name}('
  +'${JSON.stringify(Array.from(arg))})`);'#10'    default:'#10'      if (onUnr'
  +'ecognizedArgumentLookup) {'#10'        const instantiationString = onUnreco'
  +'gnizedArgumentLookup(arg);'#10'        if (instantiationString) {'#10'     '
  +'     return instantiationString;'#10'        }'#10'      }'#10'      throw '
  +'new Error(`unrecognized argument type ${arg.constructor.name}`);'#10'  }'#10
  +'}'#10#10'function trackablePrimitive(value) {'#10'  return new value.constr'
  ,'uctor(value);'#10'}'#10#10'if (typeof module !== ''undefined'') {'#10'  mod'
  +'ule.exports = { glWiretap, glExtensionWiretap };'#10'}'#10#10'if (typeof wi'
  +'ndow !== ''undefined'') {'#10'  glWiretap.glExtensionWiretap = glExtensionW'
  +'iretap;'#10'  window.glWiretap = glWiretap;'#10'}'#10#10'},{}],4:[function('
  +'require,module,exports){'#10'function setupArguments(args) {'#10'  const ne'
  +'wArguments = new Array(args.length);'#10'  for (let i = 0; i < args.length;'
  +' i++) {'#10'    const arg = args[i];'#10'    if (arg.toArray) {'#10'      n'
  +'ewArguments[i] = arg.toArray();'#10'    } else {'#10'      newArguments[i] '
  +'= arg;'#10'    }'#10'  }'#10'  return newArguments;'#10'}'#10#10'function m'
  +'ock1D() {'#10'  const args = setupArguments(arguments);'#10'  const row = n'
  +'ew Float32Array(this.output.x);'#10'  for (let x = 0; x < this.output.x; x+'
  +'+) {'#10'    this.thread.x = x;'#10'    this.thread.y = 0;'#10'    this.thr'
  +'ead.z = 0;'#10'    row[x] = this._fn.apply(this, args);'#10'  }'#10'  retur'
  +'n row;'#10'}'#10#10'function mock2D() {'#10'  const args = setupArguments(a'
  +'rguments);'#10'  const matrix = new Array(this.output.y);'#10'  for (let y '
  +'= 0; y < this.output.y; y++) {'#10'    const row = new Float32Array(this.ou'
  +'tput.x);'#10'    for (let x = 0; x < this.output.x; x++) {'#10'      this.t'
  +'hread.x = x;'#10'      this.thread.y = y;'#10'      this.thread.z = 0;'#10
  +'      row[x] = this._fn.apply(this, args);'#10'    }'#10'    matrix[y] = ro'
  +'w;'#10'  }'#10'  return matrix;'#10'}'#10#10'function mock2DGraphical() {'
  +#10'  const args = setupArguments(arguments);'#10'  for (let y = 0; y < this'
  +'.output.y; y++) {'#10'    for (let x = 0; x < this.output.x; x++) {'#10'   '
  +'   this.thread.x = x;'#10'      this.thread.y = y;'#10'      this.thread.z '
  +'= 0;'#10'      this._fn.apply(this, args);'#10'    }'#10'  }'#10'}'#10#10'f'
  +'unction mock3D() {'#10'  const args = setupArguments(arguments);'#10'  cons'
  +'t cube = new Array(this.output.z);'#10'  for (let z = 0; z < this.output.z;'
  +' z++) {'#10'    const matrix = new Array(this.output.y);'#10'    for (let y'
  +' = 0; y < this.output.y; y++) {'#10'      const row = new Float32Array(this'
  +'.output.x);'#10'      for (let x = 0; x < this.output.x; x++) {'#10'       '
  +' this.thread.x = x;'#10'        this.thread.y = y;'#10'        this.thread.'
  +'z = z;'#10'        row[x] = this._fn.apply(this, args);'#10'      }'#10'   '
  +'   matrix[y] = row;'#10'    }'#10'    cube[z] = matrix;'#10'  }'#10'  retur'
  +'n cube;'#10'}'#10#10'function apiDecorate(kernel) {'#10'  kernel.setOutput '
  +'= (output) => {'#10'    kernel.output = setupOutput(output);'#10'    if (ke'
  +'rnel.graphical) {'#10'      setupGraphical(kernel);'#10'    }'#10'  };'#10
  +'  kernel.toJSON = () => {'#10'    throw new Error(''Not usable with gpuMock'
  +''');'#10'  };'#10'  kernel.setConstants = (flag) => {'#10'    kernel.consta'
  +'nts = flag;'#10'    return kernel;'#10'  };'#10'  kernel.setGraphical = (fl'
  +'ag) => {'#10'    kernel.graphical = flag;'#10'    return kernel;'#10'  };'
  +#10'  kernel.setCanvas = (flag) => {'#10'    kernel.canvas = flag;'#10'    r'
  +'eturn kernel;'#10'  };'#10'  kernel.setContext = (flag) => {'#10'    kernel'
  +'.context = flag;'#10'    return kernel;'#10'  };'#10'  kernel.destroy = () '
  +'=> {};'#10'  kernel.validateSettings = () => {};'#10'  if (kernel.graphical'
  +' && kernel.output) {'#10'    setupGraphical(kernel);'#10'  }'#10'  kernel.e'
  +'xec = function() {'#10'    return new Promise((resolve, reject) => {'#10'  '
  +'    try {'#10'        resolve(kernel.apply(kernel, arguments));'#10'      }'
  +' catch(e) {'#10'        reject(e);'#10'      }'#10'    });'#10'  };'#10'  k'
  +'ernel.getPixels = (flip) => {'#10'    const {x, y} = kernel.output;'#10'   '
  +' return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData'
  +'.data.slice(0);'#10'  };'#10'  kernel.color = function(r, g, b, a) {'#10'  '
  +'  if (typeof a === ''undefined'') {'#10'      a = 1;'#10'    }'#10#10'    r'
  +' = Math.floor(r * 255);'#10'    g = Math.floor(g * 255);'#10'    b = Math.f'
  +'loor(b * 255);'#10'    a = Math.floor(a * 255);'#10#10'    const width = ke'
  +'rnel.output.x;'#10'    const height = kernel.output.y;'#10#10'    const x ='
  +' kernel.thread.x;'#10'    const y = height - kernel.thread.y - 1;'#10#10'  '
  +'  const index = x + y * width;'#10#10'    kernel._colorData[index * 4 + 0] '
  +'= r;'#10'    kernel._colorData[index * 4 + 1] = g;'#10'    kernel._colorDat'
  +'a[index * 4 + 2] = b;'#10'    kernel._colorData[index * 4 + 3] = a;'#10'  }'
  +';'#10#10'  const mockMethod = () => kernel;'#10'  const methods = ['#10'   '
  +' ''setWarnVarUsage'','#10'    ''setArgumentTypes'','#10'    ''setTactic'','
  +#10'    ''setOptimizeFloatMemory'','#10'    ''setDebug'','#10'    ''setLoopM'
  +'axIterations'','#10'    ''setConstantTypes'','#10'    ''setFunctions'','#10
  +'    ''setNativeFunctions'','#10'    ''setInjectedNative'','#10'    ''setPip'
  +'eline'','#10'    ''setPrecision'','#10'    ''setOutputToTexture'','#10'    '
  ,'''setImmutable'','#10'    ''setStrictIntegers'','#10'    ''setDynamicOutput'
  +''','#10'    ''setHardcodeConstants'','#10'    ''setDynamicArguments'','#10
  +'    ''setUseLegacyEncoder'','#10'    ''setWarnVarUsage'','#10'    ''addSubK'
  +'ernel'','#10'  ];'#10'  for (let i = 0; i < methods.length; i++) {'#10'    '
  +'kernel[methods[i]] = mockMethod;'#10'  }'#10'  return kernel;'#10'}'#10#10
  +'function setupGraphical(kernel) {'#10'  const {x, y} = kernel.output;'#10' '
  +' if (kernel.context && kernel.context.createImageData) {'#10'    const data'
  +' = new Uint8ClampedArray(x * y * 4);'#10'    kernel._imageData = kernel.con'
  +'text.createImageData(x, y);'#10'    kernel._colorData = data;'#10'  } else '
  +'{'#10'    const data = new Uint8ClampedArray(x * y * 4);'#10'    kernel._im'
  +'ageData = { data };'#10'    kernel._colorData = data;'#10'  }'#10'}'#10#10
  +'function setupOutput(output) {'#10'  let result = null;'#10'  if (output.le'
  +'ngth) {'#10'    if (output.length === 3) {'#10'      const [x,y,z] = output'
  +';'#10'      result = { x, y, z };'#10'    } else if (output.length === 2) {'
  +#10'      const [x,y] = output;'#10'      result = { x, y };'#10'    } else '
  +'{'#10'      const [x] = output;'#10'      result = { x };'#10'    }'#10'  }'
  +' else {'#10'    result = output;'#10'  }'#10'  return result;'#10'}'#10#10
  +'function gpuMock(fn, settings = {}) {'#10'  const output = settings.output '
  +'? setupOutput(settings.output) : null;'#10'  function kernel() {'#10'    if'
  +' (kernel.output.z) {'#10'      return mock3D.apply(kernel, arguments);'#10
  +'    } else if (kernel.output.y) {'#10'      if (kernel.graphical) {'#10'   '
  +'     return mock2DGraphical.apply(kernel, arguments);'#10'      }'#10'     '
  +' return mock2D.apply(kernel, arguments);'#10'    } else {'#10'      return '
  +'mock1D.apply(kernel, arguments);'#10'    }'#10'  }'#10'  kernel._fn = fn;'
  +#10'  kernel.constants = settings.constants || null;'#10'  kernel.context = '
  +'settings.context || null;'#10'  kernel.canvas = settings.canvas || null;'#10
  +'  kernel.graphical = settings.graphical || false;'#10'  kernel._imageData ='
  +' null;'#10'  kernel._colorData = null;'#10'  kernel.output = output;'#10'  '
  +'kernel.thread = {'#10'    x: 0,'#10'    y: 0,'#10'    z: 0'#10'  };'#10'  r'
  +'eturn apiDecorate(kernel);'#10'}'#10#10'function flipPixels(pixels, width, '
  +'height) {'#10'  const halfHeight = height / 2 | 0; '#10'  const bytesPerRow'
  +' = width * 4;'#10'  const temp = new Uint8ClampedArray(width * 4);'#10'  co'
  +'nst result = pixels.slice(0);'#10'  for (let y = 0; y < halfHeight; ++y) {'
  +#10'    const topOffset = y * bytesPerRow;'#10'    const bottomOffset = (hei'
  +'ght - y - 1) * bytesPerRow;'#10#10'    temp.set(result.subarray(topOffset, '
  +'topOffset + bytesPerRow));'#10#10'    result.copyWithin(topOffset, bottomOf'
  +'fset, bottomOffset + bytesPerRow);'#10#10'    result.set(temp, bottomOffset'
  +');'#10'  }'#10'  return result;'#10'}'#10#10'module.exports = {'#10'  gpuMo'
  +'ck'#10'};'#10#10'},{}],5:[function(require,module,exports){'#10'const { uti'
  +'ls } = require(''./utils'');'#10#10'function alias(name, source) {'#10'  co'
  +'nst fnString = source.toString();'#10'  return new Function(`return functio'
  +'n ${ name } (${ utils.getArgumentNamesFromString(fnString).join('', '') }) '
  +'{'#10'  ${ utils.getFunctionBodyFromString(fnString) }'#10'}`)();'#10'}'#10
  +#10'module.exports = {'#10'  alias'#10'};'#10'},{"./utils":114}],6:[function'
  +'(require,module,exports){'#10'const { FunctionNode } = require(''../functio'
  +'n-node'');'#10#10'class CPUFunctionNode extends FunctionNode {'#10'  astFun'
  +'ction(ast, retArr) {'#10#10'    if (!this.isRootKernel) {'#10'      retArr.'
  +'push(''function'');'#10'      retArr.push('' '');'#10'      retArr.push(thi'
  +'s.name);'#10'      retArr.push(''('');'#10#10'      for (let i = 0; i < thi'
  +'s.argumentNames.length; ++i) {'#10'        const argumentName = this.argume'
  +'ntNames[i];'#10#10'        if (i > 0) {'#10'          retArr.push('', '');'
  +#10'        }'#10'        retArr.push(''user_'');'#10'        retArr.push(ar'
  +'gumentName);'#10'      }'#10#10'      retArr.push('') {\n'');'#10'    }'#10
  +#10'    for (let i = 0; i < ast.body.body.length; ++i) {'#10'      this.astG'
  +'eneric(ast.body.body[i], retArr);'#10'      retArr.push(''\n'');'#10'    }'
  +#10#10'    if (!this.isRootKernel) {'#10'      retArr.push(''}\n'');'#10'   '
  +' }'#10'    return retArr;'#10'  }'#10#10'  astReturnStatement(ast, retArr) '
  +'{'#10'    const type = this.returnType || this.getType(ast.argument);'#10#10
  +'    if (!this.returnType) {'#10'      this.returnType = type;'#10'    }'#10
  +#10'    if (this.isRootKernel) {'#10'      retArr.push(this.leadingReturnSta'
  +'tement);'#10'      this.astGeneric(ast.argument, retArr);'#10'      retArr.'
  +'push('';\n'');'#10'      retArr.push(this.followingReturnStatement);'#10'  '
  +'    retArr.push(''continue;\n'');'#10'    } else if (this.isSubKernel) {'#10
  +'      retArr.push(`subKernelResult_${ this.name } = `);'#10'      this.astG'
  ,'eneric(ast.argument, retArr);'#10'      retArr.push('';'');'#10'      retAr'
  +'r.push(`return subKernelResult_${ this.name };`);'#10'    } else {'#10'    '
  +'  retArr.push(''return '');'#10'      this.astGeneric(ast.argument, retArr)'
  +';'#10'      retArr.push('';'');'#10'    }'#10'    return retArr;'#10'  }'#10
  +#10'  astLiteral(ast, retArr) {'#10#10'    if (isNaN(ast.value)) {'#10'     '
  +' throw this.astErrorOutput('#10'        ''Non-numeric literal not supported'
  +' : '' + ast.value,'#10'        ast'#10'      );'#10'    }'#10#10'    retArr'
  +'.push(ast.value);'#10#10'    return retArr;'#10'  }'#10#10'  astBinaryExpre'
  +'ssion(ast, retArr) {'#10'    retArr.push(''('');'#10'    this.astGeneric(as'
  +'t.left, retArr);'#10'    retArr.push(ast.operator);'#10'    this.astGeneric'
  +'(ast.right, retArr);'#10'    retArr.push('')'');'#10'    return retArr;'#10
  +'  }'#10#10'  astIdentifierExpression(idtNode, retArr) {'#10'    if (idtNode'
  +'.type !== ''Identifier'') {'#10'      throw this.astErrorOutput('#10'      '
  +'  ''IdentifierExpression - not an Identifier'','#10'        idtNode'#10'   '
  +'   );'#10'    }'#10#10'    switch (idtNode.name) {'#10'      case ''Infinit'
  +'y'':'#10'        retArr.push(''Infinity'');'#10'        break;'#10'      de'
  +'fault:'#10'        if (this.constants && this.constants.hasOwnProperty(idtN'
  +'ode.name)) {'#10'          retArr.push(''constants_'' + idtNode.name);'#10
  +'        } else {'#10'          retArr.push(''user_'' + idtNode.name);'#10' '
  +'       }'#10'    }'#10#10'    return retArr;'#10'  }'#10#10'  astForStateme'
  +'nt(forNode, retArr) {'#10'    if (forNode.type !== ''ForStatement'') {'#10
  +'      throw this.astErrorOutput(''Invalid for statement'', forNode);'#10'  '
  +'  }'#10#10'    const initArr = [];'#10'    const testArr = [];'#10'    cons'
  +'t updateArr = [];'#10'    const bodyArr = [];'#10'    let isSafe = null;'#10
  +#10'    if (forNode.init) {'#10'      this.pushState(''in-for-loop-init'');'
  +#10'      this.astGeneric(forNode.init, initArr);'#10'      for (let i = 0; '
  +'i < initArr.length; i++) {'#10'        if (initArr[i].includes && initArr[i'
  +'].includes('','')) {'#10'          isSafe = false;'#10'        }'#10'      '
  +'}'#10'      this.popState(''in-for-loop-init'');'#10'    } else {'#10'     '
  +' isSafe = false;'#10'    }'#10#10'    if (forNode.test) {'#10'      this.as'
  +'tGeneric(forNode.test, testArr);'#10'    } else {'#10'      isSafe = false;'
  +#10'    }'#10#10'    if (forNode.update) {'#10'      this.astGeneric(forNode'
  +'.update, updateArr);'#10'    } else {'#10'      isSafe = false;'#10'    }'
  +#10#10'    if (forNode.body) {'#10'      this.pushState(''loop-body'');'#10
  +'      this.astGeneric(forNode.body, bodyArr);'#10'      this.popState(''loo'
  +'p-body'');'#10'    }'#10#10'    if (isSafe === null) {'#10'      isSafe = t'
  +'his.isSafe(forNode.init) && this.isSafe(forNode.test);'#10'    }'#10#10'   '
  +' if (isSafe) {'#10'      retArr.push(`for (${initArr.join('''')};${testArr.'
  +'join('''')};${updateArr.join('''')}){\n`);'#10'      retArr.push(bodyArr.jo'
  +'in(''''));'#10'      retArr.push(''}\n'');'#10'    } else {'#10'      const'
  +' iVariableName = this.getInternalVariableName(''safeI'');'#10'      if (ini'
  +'tArr.length > 0) {'#10'        retArr.push(initArr.join(''''), '';\n'');'#10
  +'      }'#10'      retArr.push(`for (let ${iVariableName}=0;${iVariableName}'
  +'<LOOP_MAX;${iVariableName}++){\n`);'#10'      if (testArr.length > 0) {'#10
  +'        retArr.push(`if (!${testArr.join('''')}) break;\n`);'#10'      }'#10
  +'      retArr.push(bodyArr.join(''''));'#10'      retArr.push(`\n${updateArr'
  +'.join('''')};`);'#10'      retArr.push(''}\n'');'#10'    }'#10'    return r'
  +'etArr;'#10'  }'#10#10'  astWhileStatement(whileNode, retArr) {'#10'    if ('
  +'whileNode.type !== ''WhileStatement'') {'#10'      throw this.astErrorOutpu'
  +'t('#10'        ''Invalid while statement'','#10'        whileNode'#10'     '
  +' );'#10'    }'#10#10'    retArr.push(''for (let i = 0; i < LOOP_MAX; i++) {'
  +''');'#10'    retArr.push(''if ('');'#10'    this.astGeneric(whileNode.test,'
  +' retArr);'#10'    retArr.push('') {\n'');'#10'    this.astGeneric(whileNode'
  +'.body, retArr);'#10'    retArr.push(''} else {\n'');'#10'    retArr.push('''
  +'break;\n'');'#10'    retArr.push(''}\n'');'#10'    retArr.push(''}\n'');'#10
  +#10'    return retArr;'#10'  }'#10#10'  astDoWhileStatement(doWhileNode, ret'
  +'Arr) {'#10'    if (doWhileNode.type !== ''DoWhileStatement'') {'#10'      t'
  +'hrow this.astErrorOutput('#10'        ''Invalid while statement'','#10'    '
  +'    doWhileNode'#10'      );'#10'    }'#10#10'    retArr.push(''for (let i '
  +'= 0; i < LOOP_MAX; i++) {'');'#10'    this.astGeneric(doWhileNode.body, ret'
  +'Arr);'#10'    retArr.push(''if (!'');'#10'    this.astGeneric(doWhileNode.t'
  +'est, retArr);'#10'    retArr.push('') {\n'');'#10'    retArr.push(''break;\'
  +'n'');'#10'    retArr.push(''}\n'');'#10'    retArr.push(''}\n'');'#10#10'  '
  +'  return retArr;'#10#10'  }'#10#10'  astAssignmentExpression(assNode, retAr'
  ,'r) {'#10'    const declaration = this.getDeclaration(assNode.left);'#10'   '
  +' if (declaration && !declaration.assignable) {'#10'      throw this.astErro'
  +'rOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);'
  +#10'    }'#10'    this.astGeneric(assNode.left, retArr);'#10'    retArr.push'
  +'(assNode.operator);'#10'    this.astGeneric(assNode.right, retArr);'#10'   '
  +' return retArr;'#10'  }'#10#10'  astBlockStatement(bNode, retArr) {'#10'   '
  +' if (this.isState(''loop-body'')) {'#10'      this.pushState(''block-body'''
  +'); '#10'      for (let i = 0; i < bNode.body.length; i++) {'#10'        thi'
  +'s.astGeneric(bNode.body[i], retArr);'#10'      }'#10'      this.popState('''
  +'block-body'');'#10'    } else {'#10'      retArr.push(''{\n'');'#10'      f'
  +'or (let i = 0; i < bNode.body.length; i++) {'#10'        this.astGeneric(bN'
  +'ode.body[i], retArr);'#10'      }'#10'      retArr.push(''}\n'');'#10'    }'
  +#10'    return retArr;'#10'  }'#10#10'  astVariableDeclaration(varDecNode, r'
  +'etArr) {'#10'    retArr.push(`${varDecNode.kind} `);'#10'    const { declar'
  +'ations } = varDecNode;'#10'    for (let i = 0; i < declarations.length; i++'
  +') {'#10'      if (i > 0) {'#10'        retArr.push('','');'#10'      }'#10
  +'      const declaration = declarations[i];'#10'      const info = this.getD'
  +'eclaration(declaration.id);'#10'      if (!info.valueType) {'#10'        in'
  +'fo.valueType = this.getType(declaration.init);'#10'      }'#10'      this.a'
  +'stGeneric(declaration, retArr);'#10'    }'#10'    if (!this.isState(''in-fo'
  +'r-loop-init'')) {'#10'      retArr.push('';'');'#10'    }'#10'    return re'
  +'tArr;'#10'  }'#10#10'  astIfStatement(ifNode, retArr) {'#10'    retArr.push'
  +'(''if ('');'#10'    this.astGeneric(ifNode.test, retArr);'#10'    retArr.pu'
  +'sh('')'');'#10'    if (ifNode.consequent.type === ''BlockStatement'') {'#10
  +'      this.astGeneric(ifNode.consequent, retArr);'#10'    } else {'#10'    '
  +'  retArr.push('' {\n'');'#10'      this.astGeneric(ifNode.consequent, retAr'
  +'r);'#10'      retArr.push(''\n}\n'');'#10'    }'#10#10'    if (ifNode.alter'
  +'nate) {'#10'      retArr.push(''else '');'#10'      if (ifNode.alternate.ty'
  +'pe === ''BlockStatement'' || ifNode.alternate.type === ''IfStatement'') {'
  +#10'        this.astGeneric(ifNode.alternate, retArr);'#10'      } else {'#10
  +'        retArr.push('' {\n'');'#10'        this.astGeneric(ifNode.alternate'
  +', retArr);'#10'        retArr.push(''\n}\n'');'#10'      }'#10'    }'#10'  '
  +'  return retArr;'#10#10'  }'#10#10'  astSwitchStatement(ast, retArr) {'#10
  +'    const { discriminant, cases } = ast;'#10'    retArr.push(''switch ('');'
  +#10'    this.astGeneric(discriminant, retArr);'#10'    retArr.push('') {\n'''
  +');'#10'    for (let i = 0; i < cases.length; i++) {'#10'      if (cases[i].'
  +'test === null) {'#10'        retArr.push(''default:\n'');'#10'        this.'
  +'astGeneric(cases[i].consequent, retArr);'#10'        if (cases[i].consequen'
  +'t && cases[i].consequent.length > 0) {'#10'          retArr.push(''break;\n'
  +''');'#10'        }'#10'        continue;'#10'      }'#10'      retArr.push('
  +'''case '');'#10'      this.astGeneric(cases[i].test, retArr);'#10'      ret'
  +'Arr.push('':\n'');'#10'      if (cases[i].consequent && cases[i].consequent'
  +'.length > 0) {'#10'        this.astGeneric(cases[i].consequent, retArr);'#10
  +'        retArr.push(''break;\n'');'#10'      }'#10'    }'#10'    retArr.pus'
  +'h(''\n}'');'#10'  }'#10#10'  astThisExpression(tNode, retArr) {'#10'    ret'
  +'Arr.push(''_this'');'#10'    return retArr;'#10'  }'#10#10'  astMemberExpre'
  +'ssion(mNode, retArr) {'#10'    const {'#10'      signature,'#10'      type,'
  +#10'      property,'#10'      xProperty,'#10'      yProperty,'#10'      zPro'
  +'perty,'#10'      name,'#10'      origin'#10'    } = this.getMemberExpressio'
  +'nDetails(mNode);'#10'    switch (signature) {'#10'      case ''this.thread.'
  +'value'':'#10'        retArr.push(`_this.thread.${ name }`);'#10'        ret'
  +'urn retArr;'#10'      case ''this.output.value'':'#10'        switch (name)'
  +' {'#10'          case ''x'':'#10'            retArr.push(''outputX'');'#10
  +'            break;'#10'          case ''y'':'#10'            retArr.push('''
  +'outputY'');'#10'            break;'#10'          case ''z'':'#10'          '
  +'  retArr.push(''outputZ'');'#10'            break;'#10'          default:'
  +#10'            throw this.astErrorOutput(''Unexpected expression'', mNode);'
  +#10'        }'#10'        return retArr;'#10'      case ''value'':'#10'     '
  +'   throw this.astErrorOutput(''Unexpected expression'', mNode);'#10'      c'
  +'ase ''value[]'':'#10'      case ''value[][]'':'#10'      case ''value[][][]'
  +''':'#10'      case ''value.value'':'#10'        if (origin === ''Math'') {'
  +#10'          retArr.push(Math[name]);'#10'          return retArr;'#10'    '
  +'    }'#10'        switch (property) {'#10'          case ''r'':'#10'       '
  +'     retArr.push(`user_${ name }[0]`);'#10'            return retArr;'#10' '
  ,'         case ''g'':'#10'            retArr.push(`user_${ name }[1]`);'#10
  +'            return retArr;'#10'          case ''b'':'#10'            retArr'
  +'.push(`user_${ name }[2]`);'#10'            return retArr;'#10'          ca'
  +'se ''a'':'#10'            retArr.push(`user_${ name }[3]`);'#10'           '
  +' return retArr;'#10'        }'#10'        break;'#10'      case ''value.val'
  +'ue[]'': '#10'        if (this.removeIstanbulCoverage) {'#10'          retur'
  +'n retArr;'#10'        }'#10'        retArr.push(`${mNode.object.object.name'
  +'}.${mNode.object.property.name}[${mNode.property.value}]`);'#10'        ret'
  +'urn retArr;'#10'      case ''value.value[][]'': '#10'        if (this.remov'
  +'eIstanbulCoverage) {'#10'          return retArr;'#10'        }'#10'       '
  +' retArr.push(`${mNode.object.object.object.name}.${mNode.object.object.prop'
  +'erty.name}[${mNode.object.property.value}][${mNode.property.value}]`);'#10
  +'        return retArr;'#10'      case ''this.constants.value'':'#10'      c'
  +'ase ''this.constants.value[]'':'#10'      case ''this.constants.value[][]'''
  +':'#10'      case ''this.constants.value[][][]'':'#10'        break;'#10'   '
  +'   case ''fn()[]'':'#10'        this.astGeneric(mNode.object, retArr);'#10
  +'        retArr.push(''['');'#10'        this.astGeneric(mNode.property, ret'
  +'Arr);'#10'        retArr.push('']'');'#10'        return retArr;'#10'      '
  +'default:'#10'        throw this.astErrorOutput(''Unexpected expression'', m'
  +'Node);'#10'    }'#10#10'    if (!mNode.computed) {'#10'      switch (type) '
  +'{'#10'        case ''Number'':'#10'        case ''Integer'':'#10'        ca'
  +'se ''Float'':'#10'        case ''Boolean'':'#10'          retArr.push(`${or'
  +'igin}_${name}`);'#10'          return retArr;'#10'      }'#10'    }'#10#10
  +'    const markupName = `${origin}_${name}`;'#10#10'    switch (type) {'#10
  +'      case ''Array(2)'':'#10'      case ''Array(3)'':'#10'      case ''Arra'
  +'y(4)'':'#10'      case ''HTMLImageArray'':'#10'      case ''ArrayTexture(1)'
  +''':'#10'      case ''ArrayTexture(2)'':'#10'      case ''ArrayTexture(3)'':'
  +#10'      case ''ArrayTexture(4)'':'#10'      case ''HTMLImage'':'#10'      '
  +'default:'#10'        let size;'#10'        let isInput;'#10'        if (ori'
  +'gin === ''constants'') {'#10'          const constant = this.constants[name'
  +'];'#10'          isInput = this.constantTypes[name] === ''Input'';'#10'    '
  +'      size = isInput ? constant.size : null;'#10'        } else {'#10'     '
  +'     isInput = this.isInput(name);'#10'          size = isInput ? this.argu'
  +'mentSizes[this.argumentNames.indexOf(name)] : null;'#10'        }'#10'     '
  +'   retArr.push(`${ markupName }`);'#10'        if (zProperty && yProperty) '
  +'{'#10'          if (isInput) {'#10'            retArr.push(''[('');'#10'   '
  +'         this.astGeneric(zProperty, retArr);'#10'            retArr.push(`*'
  +'${ this.dynamicArguments ? ''(outputY * outputX)'' : size[1] * size[0] })+('
  +'`);'#10'            this.astGeneric(yProperty, retArr);'#10'            ret'
  +'Arr.push(`*${ this.dynamicArguments ? ''outputX'' : size[0] })+`);'#10'    '
  +'        this.astGeneric(xProperty, retArr);'#10'            retArr.push('']'
  +''');'#10'          } else {'#10'            retArr.push(''['');'#10'       '
  +'     this.astGeneric(zProperty, retArr);'#10'            retArr.push('']'')'
  +';'#10'            retArr.push(''['');'#10'            this.astGeneric(yProp'
  +'erty, retArr);'#10'            retArr.push('']'');'#10'            retArr.p'
  +'ush(''['');'#10'            this.astGeneric(xProperty, retArr);'#10'       '
  +'     retArr.push('']'');'#10'          }'#10'        } else if (yProperty) '
  +'{'#10'          if (isInput) {'#10'            retArr.push(''[('');'#10'   '
  +'         this.astGeneric(yProperty, retArr);'#10'            retArr.push(`*'
  +'${ this.dynamicArguments ? ''outputX'' : size[0] })+`);'#10'            thi'
  +'s.astGeneric(xProperty, retArr);'#10'            retArr.push('']'');'#10'  '
  +'        } else {'#10'            retArr.push(''['');'#10'            this.a'
  +'stGeneric(yProperty, retArr);'#10'            retArr.push('']'');'#10'     '
  +'       retArr.push(''['');'#10'            this.astGeneric(xProperty, retAr'
  +'r);'#10'            retArr.push('']'');'#10'          }'#10'        } else '
  +'if (typeof xProperty !== ''undefined'') {'#10'          retArr.push(''['');'
  +#10'          this.astGeneric(xProperty, retArr);'#10'          retArr.push('
  +''']'');'#10'        }'#10'    }'#10'    return retArr;'#10'  }'#10#10'  ast'
  +'CallExpression(ast, retArr) {'#10'    if (ast.type !== ''CallExpression'') '
  +'{'#10'      throw this.astErrorOutput(''Unknown CallExpression'', ast);'#10
  +'    }'#10'    let functionName = this.astMemberExpressionUnroll(ast.callee)'
  +';'#10#10'    if (this.calledFunctions.indexOf(functionName) < 0) {'#10'    '
  +'  this.calledFunctions.push(functionName);'#10'    }'#10#10'    const isMat'
  +'hFunction = this.isAstMathFunction(ast);'#10#10'    if (this.onFunctionCall'
  ,') {'#10'      this.onFunctionCall(this.name, functionName, ast.arguments);'
  +#10'    }'#10#10'    retArr.push(functionName);'#10#10'    retArr.push(''('''
  +');'#10'    const targetTypes = this.lookupFunctionArgumentTypes(functionNam'
  +'e) || [];'#10'    for (let i = 0; i < ast.arguments.length; ++i) {'#10'    '
  +'  const argument = ast.arguments[i];'#10#10'      let argumentType = this.g'
  +'etType(argument);'#10'      if (!targetTypes[i]) {'#10'        this.trigger'
  +'ImplyArgumentType(functionName, i, argumentType, this);'#10'      }'#10#10
  +'      if (i > 0) {'#10'        retArr.push('', '');'#10'      }'#10'      t'
  +'his.astGeneric(argument, retArr);'#10'    }'#10'    retArr.push('')'');'#10
  +#10'    return retArr;'#10'  }'#10#10'  astArrayExpression(arrNode, retArr) '
  +'{'#10'    const arrLen = arrNode.elements.length;'#10#10'    retArr.push('''
  +'new Float32Array(['');'#10'    for (let i = 0; i < arrLen; ++i) {'#10'     '
  +' if (i > 0) {'#10'        retArr.push('', '');'#10'      }'#10'      const '
  +'subNode = arrNode.elements[i];'#10'      this.astGeneric(subNode, retArr)'
  +#10'    }'#10'    retArr.push(''])'');'#10#10'    return retArr;'#10'  }'#10
  +#10'  astDebuggerStatement(arrNode, retArr) {'#10'    retArr.push(''debugger'
  +';'');'#10'    return retArr;'#10'  }'#10'}'#10#10'module.exports = {'#10'  '
  +'CPUFunctionNode'#10'};'#10'},{"../function-node":10}],7:[function(require,m'
  +'odule,exports){'#10'const { utils } = require(''../../utils'');'#10#10'func'
  +'tion constantsToString(constants, types) {'#10'  const results = [];'#10'  '
  +'for (const name in types) {'#10'    if (!types.hasOwnProperty(name)) contin'
  +'ue;'#10'    const type = types[name];'#10'    const constant = constants[na'
  +'me];'#10'    switch (type) {'#10'      case ''Number'':'#10'      case ''In'
  +'teger'':'#10'      case ''Float'':'#10'      case ''Boolean'':'#10'        '
  +'results.push(`${name}:${constant}`);'#10'        break;'#10'      case ''Ar'
  +'ray(2)'':'#10'      case ''Array(3)'':'#10'      case ''Array(4)'':'#10'   '
  +'     results.push(`${name}:new ${constant.constructor.name}(${JSON.stringif'
  +'y(Array.from(constant))})`);'#10'        break;'#10'    }'#10'  }'#10'  ret'
  +'urn `{ ${ results.join() } }`;'#10'}'#10#10'function cpuKernelString(cpuKer'
  +'nel, name) {'#10'  const header = [];'#10'  const thisProperties = [];'#10
  +'  const beforeReturn = [];'#10#10'  const useFunctionKeyword = !/^function/'
  +'.test(cpuKernel.color.toString());'#10#10'  header.push('#10'    ''  const '
  +'{ context, canvas, constants: incomingConstants } = settings;'','#10'    ` '
  +' const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output'
  +'))});`,'#10'    `  const _constantTypes = ${JSON.stringify(cpuKernel.consta'
  +'ntTypes)};`,'#10'    `  const _constants = ${constantsToString(cpuKernel.co'
  +'nstants, cpuKernel.constantTypes)};`,'#10'  );'#10#10'  thisProperties.push'
  +'('#10'    ''    constants: _constants,'','#10'    ''    context,'','#10'   '
  +' ''    output,'','#10'    ''    thread: {x: 0, y: 0, z: 0},'','#10'  );'#10
  +#10'  if (cpuKernel.graphical) {'#10'    header.push(`  const _imageData = c'
  +'ontext.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);'
  +#10'    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.'
  +'output[0]} * ${cpuKernel.output[1]} * 4);`);'#10#10'    const colorFn = uti'
  +'ls.flattenFunctionToString((useFunctionKeyword ? ''function '' : '''') + cp'
  +'uKernel.color.toString(), {'#10'      thisLookup: (propertyName) => {'#10' '
  +'       switch (propertyName) {'#10'          case ''_colorData'':'#10'     '
  +'       return ''_colorData'';'#10'          case ''_imageData'':'#10'      '
  +'      return ''_imageData'';'#10'          case ''output'':'#10'           '
  +' return ''output'';'#10'          case ''thread'':'#10'            return '
  +'''this.thread'';'#10'        }'#10'        return JSON.stringify(cpuKernel['
  +'propertyName]);'#10'      },'#10'      findDependency: (object, name) => {'
  +#10'        return null;'#10'      }'#10'    });'#10#10'    const getPixelsF'
  +'n = utils.flattenFunctionToString((useFunctionKeyword ? ''function '' : '''
  +''') + cpuKernel.getPixels.toString(), {'#10'      thisLookup: (propertyName'
  +') => {'#10'        switch (propertyName) {'#10'          case ''_colorData'
  +''':'#10'            return ''_colorData'';'#10'          case ''_imageData'
  +''':'#10'            return ''_imageData'';'#10'          case ''output'':'
  +#10'            return ''output'';'#10'          case ''thread'':'#10'      '
  +'      return ''this.thread'';'#10'        }'#10'        return JSON.stringi'
  +'fy(cpuKernel[propertyName]);'#10'      },'#10'      findDependency: () => {'
  +#10'        return null;'#10'      }'#10'    });'#10#10'    thisProperties.p'
  +'ush('#10'      ''    _imageData,'','#10'      ''    _colorData,'','#10'    '
  +'  `    color: ${colorFn},`,'#10'    );'#10#10'    beforeReturn.push('#10'  '
  +'    `  kernel.getPixels = ${getPixelsFn};`'#10'    );'#10'  }'#10#10'  cons'
  ,'t constantTypes = [];'#10'  const constantKeys = Object.keys(cpuKernel.cons'
  +'tantTypes);'#10'  for (let i = 0; i < constantKeys.length; i++) {'#10'    c'
  +'onstantTypes.push(cpuKernel.constantTypes[constantKeys]);'#10'  }'#10'  if '
  +'(cpuKernel.argumentTypes.indexOf(''HTMLImageArray'') !== -1 || constantType'
  +'s.indexOf(''HTMLImageArray'') !== -1) {'#10'    const flattenedImageTo3DArr'
  +'ay = utils.flattenFunctionToString((useFunctionKeyword ? ''function '' : '''
  +''') + cpuKernel._imageTo3DArray.toString(), {'#10'      doNotDefine: [''can'
  +'vas''],'#10'      findDependency: (object, name) => {'#10'        if (objec'
  +'t === ''this'') {'#10'          return (useFunctionKeyword ? ''function '' '
  +': '''') + cpuKernel[name].toString();'#10'        }'#10'        return null'
  +';'#10'      },'#10'      thisLookup: (propertyName) => {'#10'        switch'
  +' (propertyName) {'#10'          case ''canvas'':'#10'            return;'#10
  +'          case ''context'':'#10'            return ''context'';'#10'       '
  +' }'#10'      }'#10'    });'#10'    beforeReturn.push(flattenedImageTo3DArra'
  +'y);'#10'    thisProperties.push(`    _mediaTo2DArray,`);'#10'    thisProper'
  +'ties.push(`    _imageTo3DArray,`);'#10'  } else if (cpuKernel.argumentTypes'
  +'.indexOf(''HTMLImage'') !== -1 || constantTypes.indexOf(''HTMLImage'') !== '
  +'-1) {'#10'    const flattenedImageTo2DArray = utils.flattenFunctionToString'
  +'((useFunctionKeyword ? ''function '' : '''') + cpuKernel._mediaTo2DArray.to'
  +'String(), {'#10'      findDependency: (object, name) => {'#10'        retur'
  +'n null;'#10'      },'#10'      thisLookup: (propertyName) => {'#10'        '
  +'switch (propertyName) {'#10'          case ''canvas'':'#10'            retu'
  +'rn ''settings.canvas'';'#10'          case ''context'':'#10'            ret'
  +'urn ''settings.context'';'#10'        }'#10'        throw new Error(''unhan'
  +'dled thisLookup'');'#10'      }'#10'    });'#10'    beforeReturn.push(flatt'
  +'enedImageTo2DArray);'#10'    thisProperties.push(`    _mediaTo2DArray,`);'
  +#10'  }'#10#10'  return `function(settings) {'#10'${ header.join(''\n'') }'
  +#10'  for (const p in _constantTypes) {'#10'    if (!_constantTypes.hasOwnPr'
  +'operty(p)) continue;'#10'    const type = _constantTypes[p];'#10'    switch'
  +' (type) {'#10'      case ''Number'':'#10'      case ''Integer'':'#10'      '
  +'case ''Float'':'#10'      case ''Boolean'':'#10'      case ''Array(2)'':'#10
  +'      case ''Array(3)'':'#10'      case ''Array(4)'':'#10'        if (incom'
  +'ingConstants.hasOwnProperty(p)) {'#10'          console.warn(''constant '' '
  +'+ p + '' of type '' + type + '' cannot be resigned'');'#10'        }'#10'  '
  +'      continue;'#10'    }'#10'    if (!incomingConstants.hasOwnProperty(p))'
  +' {'#10'      throw new Error(''constant '' + p + '' not found'');'#10'    }'
  +#10'    _constants[p] = incomingConstants[p];'#10'  }'#10'  const kernel = ('
  +'function() {'#10'${cpuKernel._kernelString}'#10'  })'#10'    .apply({ ${thi'
  +'sProperties.join(''\n'')} });'#10'  ${ beforeReturn.join(''\n'') }'#10'  re'
  +'turn kernel;'#10'}`;'#10'}'#10#10'module.exports = {'#10'  cpuKernelString'
  +#10'};'#10'},{"../../utils":114}],8:[function(require,module,exports){'#10'c'
  +'onst { Kernel } = require(''../kernel'');'#10'const { FunctionBuilder } = r'
  +'equire(''../function-builder'');'#10'const { CPUFunctionNode } = require('''
  +'./function-node'');'#10'const { utils } = require(''../../utils'');'#10'con'
  +'st { cpuKernelString } = require(''./kernel-string'');'#10#10'class CPUKern'
  +'el extends Kernel {'#10'  static getFeatures() {'#10'    return this.featur'
  +'es;'#10'  }'#10'  static get features() {'#10'    return Object.freeze({'#10
  +'      kernelMap: true,'#10'      isIntegerDivisionAccurate: true'#10'    })'
  +';'#10'  }'#10'  static get isSupported() {'#10'    return true;'#10'  }'#10
  +'  static isContextMatch(context) {'#10'    return false;'#10'  }'#10'  stat'
  +'ic get mode() {'#10'    return ''cpu'';'#10'  }'#10#10'  static nativeFunct'
  +'ionArguments() {'#10'    return null;'#10'  }'#10#10'  static nativeFunctio'
  +'nReturnType() {'#10'    throw new Error(`Looking up native function return '
  +'type not supported on ${this.name}`);'#10'  }'#10#10'  static combineKernel'
  +'s(combinedKernel) {'#10'    return combinedKernel;'#10'  }'#10#10'  static '
  +'getSignature(kernel, argumentTypes) {'#10'    return ''cpu'' + (argumentTyp'
  +'es.length > 0 ? '':'' + argumentTypes.join('','') : '''');'#10'  }'#10#10' '
  +' constructor(source, settings) {'#10'    super(source, settings);'#10'    t'
  +'his.mergeSettings(source.settings || settings);'#10#10'    this._imageData '
  +'= null;'#10'    this._colorData = null;'#10'    this._kernelString = null;'
  +#10'    this._prependedString = [];'#10'    this.thread = {'#10'      x: 0,'
  +#10'      y: 0,'#10'      z: 0'#10'    };'#10'    this.translatedSources = n'
  +'ull;'#10'  }'#10#10'  initCanvas() {'#10'    if (typeof document !== ''unde'
  +'fined'') {'#10'      return document.createElement(''canvas'');'#10'    } e'
  ,'lse if (typeof OffscreenCanvas !== ''undefined'') {'#10'      return new Of'
  +'fscreenCanvas(0, 0);'#10'    }'#10'  }'#10#10'  initContext() {'#10'    if '
  +'(!this.canvas) return null;'#10'    return this.canvas.getContext(''2d'');'
  +#10'  }'#10#10'  initPlugins(settings) {'#10'    return [];'#10'  }'#10#10' '
  +' validateSettings(args) {'#10'    if (!this.output || this.output.length =='
  +'= 0) {'#10'      if (args.length !== 1) {'#10'        throw new Error(''Aut'
  +'o output only supported for kernels with only one input'');'#10'      }'#10
  +#10'      const argType = utils.getVariableType(args[0], this.strictIntegers'
  +');'#10'      if (argType === ''Array'') {'#10'        this.output = utils.g'
  +'etDimensions(argType);'#10'      } else if (argType === ''NumberTexture'' |'
  +'| argType === ''ArrayTexture(4)'') {'#10'        this.output = args[0].outp'
  +'ut;'#10'      } else {'#10'        throw new Error(''Auto output not suppor'
  +'ted for input type: '' + argType);'#10'      }'#10'    }'#10#10'    if (thi'
  +'s.graphical) {'#10'      if (this.output.length !== 2) {'#10'        throw '
  +'new Error(''Output must have 2 dimensions on graphical mode'');'#10'      }'
  +#10'    }'#10#10'    this.checkOutput();'#10'  }'#10#10'  translateSource() '
  +'{'#10'    this.leadingReturnStatement = this.output.length > 1 ? ''resultX['
  +'x] = '' : ''result[x] = '';'#10'    if (this.subKernels) {'#10'      const '
  +'followingReturnStatement = [];'#10'      for (let i = 0; i < this.subKernel'
  +'s.length; i++) {'#10'        const {'#10'          name'#10'        } = thi'
  +'s.subKernels[i];'#10'        followingReturnStatement.push(this.output.leng'
  +'th > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\n` : `result_${'
  +' name }[x] = subKernelResult_${ name };\n`);'#10'      }'#10'      this.fol'
  +'lowingReturnStatement = followingReturnStatement.join('''');'#10'    }'#10
  +'    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNod'
  +'e);'#10'    this.translatedSources = functionBuilder.getPrototypes(''kernel'
  +''');'#10'    if (!this.graphical && !this.returnType) {'#10'      this.retu'
  +'rnType = functionBuilder.getKernelResultType();'#10'    }'#10'  }'#10#10'  '
  +'build() {'#10'    if (this.built) return;'#10'    this.setupConstants();'#10
  +'    this.setupArguments(arguments);'#10'    this.validateSettings(arguments'
  +');'#10'    this.translateSource();'#10#10'    if (this.graphical) {'#10'   '
  +'   const {'#10'        canvas,'#10'        output'#10'      } = this;'#10' '
  +'     if (!canvas) {'#10'        throw new Error(''no canvas available for u'
  +'sing graphical output'');'#10'      }'#10'      const width = output[0];'#10
  +'      const height = output[1] || 1;'#10'      canvas.width = width;'#10'  '
  +'    canvas.height = height;'#10'      this._imageData = this.context.create'
  +'ImageData(width, height);'#10'      this._colorData = new Uint8ClampedArray'
  +'(width * height * 4);'#10'    }'#10#10'    const kernelString = this.getKer'
  +'nelString();'#10'    this.kernelString = kernelString;'#10#10'    if (this.'
  +'debug) {'#10'      console.log(''Function output:'');'#10'      console.log'
  +'(kernelString);'#10'    }'#10#10'    try {'#10'      this.run = new Functio'
  +'n([], kernelString).bind(this)();'#10'    } catch (e) {'#10'      console.e'
  +'rror(''An error occurred compiling the javascript: '', e);'#10'    }'#10'  '
  +'  this.buildSignature(arguments);'#10'    this.built = true;'#10'  }'#10#10
  +'  color(r, g, b, a) {'#10'    if (typeof a === ''undefined'') {'#10'      a'
  +' = 1;'#10'    }'#10#10'    r = Math.floor(r * 255);'#10'    g = Math.floor('
  +'g * 255);'#10'    b = Math.floor(b * 255);'#10'    a = Math.floor(a * 255);'
  +#10#10'    const width = this.output[0];'#10'    const height = this.output['
  +'1];'#10#10'    const x = this.thread.x;'#10'    const y = height - this.thr'
  +'ead.y - 1;'#10#10'    const index = x + y * width;'#10#10'    this._colorDa'
  +'ta[index * 4 + 0] = r;'#10'    this._colorData[index * 4 + 1] = g;'#10'    '
  +'this._colorData[index * 4 + 2] = b;'#10'    this._colorData[index * 4 + 3] '
  +'= a;'#10'  }'#10#10'  getKernelString() {'#10'    if (this._kernelString !='
  +'= null) return this._kernelString;'#10#10'    let kernelThreadString = null'
  +';'#10'    let {'#10'      translatedSources'#10'    } = this;'#10'    if (t'
  +'ranslatedSources.length > 1) {'#10'      translatedSources = translatedSour'
  +'ces.filter(fn => {'#10'        if (/^function/.test(fn)) return fn;'#10'   '
  +'     kernelThreadString = fn;'#10'        return false;'#10'      });'#10' '
  +'   } else {'#10'      kernelThreadString = translatedSources.shift();'#10' '
  +'   }'#10'    return this._kernelString = `  const LOOP_MAX = ${ this._getLo'
  +'opMaxString() };'#10'  ${ this.injectedNative || '''' }'#10'  const _this ='
  +' this;'#10'  ${ this._resultKernelHeader() }'#10'  ${ this._processConstant'
  +'s() }'#10'  return (${ this.argumentNames.map(argumentName => ''user_'' + a'
  +'rgumentName).join('', '') }) => {'#10'    ${ this._prependedString.join('''
  ,''') }'#10'    ${ this._earlyThrows() }'#10'    ${ this._processArguments() '
  +'}'#10'    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString)'
  +' : this._resultKernelBody(kernelThreadString) }'#10'    ${ translatedSource'
  +'s.length > 0 ? translatedSources.join(''\n'') : '''' }'#10'  };`;'#10'  }'
  +#10#10'  toString() {'#10'    return cpuKernelString(this);'#10'  }'#10#10' '
  +' _getLoopMaxString() {'#10'    return ('#10'      this.loopMaxIterations ?'
  +#10'      ` ${ parseInt(this.loopMaxIterations) };` :'#10'      '' 1000;'''
  +#10'    );'#10'  }'#10#10'  _processConstants() {'#10'    if (!this.constant'
  +'s) return '''';'#10#10'    const result = [];'#10'    for (let p in this.co'
  +'nstants) {'#10'      const type = this.constantTypes[p];'#10'      switch ('
  +'type) {'#10'        case ''HTMLCanvas'':'#10'        case ''HTMLImage'':'#10
  +'        case ''HTMLVideo'':'#10'          result.push(`    const constants_'
  +'${p} = this._mediaTo2DArray(this.constants.${p});\n`);'#10'          break;'
  +#10'        case ''HTMLImageArray'':'#10'          result.push(`    const co'
  +'nstants_${p} = this._imageTo3DArray(this.constants.${p});\n`);'#10'        '
  +'  break;'#10'        case ''Input'':'#10'          result.push(`    const c'
  +'onstants_${p} = this.constants.${p}.value;\n`);'#10'          break;'#10'  '
  +'      default:'#10'          result.push(`    const constants_${p} = this.c'
  +'onstants.${p};\n`);'#10'      }'#10'    }'#10'    return result.join('''');'
  +#10'  }'#10#10'  _earlyThrows() {'#10'    if (this.graphical) return '''';'
  +#10'    if (this.immutable) return '''';'#10'    if (!this.pipeline) return '
  +''''';'#10'    const arrayArguments = [];'#10'    for (let i = 0; i < this.a'
  +'rgumentTypes.length; i++) {'#10'      if (this.argumentTypes[i] === ''Array'
  +''') {'#10'        arrayArguments.push(this.argumentNames[i]);'#10'      }'
  +#10'    }'#10'    if (arrayArguments.length === 0) return '''';'#10'    cons'
  +'t checks = [];'#10'    for (let i = 0; i < arrayArguments.length; i++) {'#10
  +'      const argumentName = arrayArguments[i];'#10'      const checkSubKerne'
  +'ls = this._mapSubKernels(subKernel => `user_${argumentName} === result_${su'
  +'bKernel.name}`).join('' || '');'#10'      checks.push(`user_${argumentName}'
  +' === result${checkSubKernels ? ` || ${checkSubKernels}` : ''''}`);'#10'    '
  +'}'#10'    return `if (${checks.join('' || '')}) throw new Error(''Source an'
  +'d destination arrays are the same.  Use immutable = true'');`;'#10'  }'#10
  +#10'  _processArguments() {'#10'    const result = [];'#10'    for (let i = '
  +'0; i < this.argumentTypes.length; i++) {'#10'      const variableName = `us'
  +'er_${this.argumentNames[i]}`;'#10'      switch (this.argumentTypes[i]) {'#10
  +'        case ''HTMLCanvas'':'#10'        case ''HTMLImage'':'#10'        ca'
  +'se ''HTMLVideo'':'#10'          result.push(`    ${variableName} = this._me'
  +'diaTo2DArray(${variableName});\n`);'#10'          break;'#10'        case '
  +'''HTMLImageArray'':'#10'          result.push(`    ${variableName} = this._'
  +'imageTo3DArray(${variableName});\n`);'#10'          break;'#10'        case'
  +' ''Input'':'#10'          result.push(`    ${variableName} = ${variableName'
  +'}.value;\n`);'#10'          break;'#10'        case ''ArrayTexture(1)'':'#10
  +'        case ''ArrayTexture(2)'':'#10'        case ''ArrayTexture(3)'':'#10
  +'        case ''ArrayTexture(4)'':'#10'        case ''NumberTexture'':'#10' '
  +'       case ''MemoryOptimizedNumberTexture'':'#10'          result.push(`'
  +#10'    if (${variableName}.toArray) {'#10'      if (!_this.textureCache) {'
  +#10'        _this.textureCache = [];'#10'        _this.arrayCache = [];'#10
  +'      }'#10'      const textureIndex = _this.textureCache.indexOf(${variabl'
  +'eName});'#10'      if (textureIndex !== -1) {'#10'        ${variableName} ='
  +' _this.arrayCache[textureIndex];'#10'      } else {'#10'        _this.textu'
  +'reCache.push(${variableName});'#10'        ${variableName} = ${variableName'
  +'}.toArray();'#10'        _this.arrayCache.push(${variableName});'#10'      '
  +'}'#10'    }`);'#10'          break;'#10'      }'#10'    }'#10'    return re'
  +'sult.join('''');'#10'  }'#10#10'  _mediaTo2DArray(media) {'#10'    const ca'
  +'nvas = this.canvas;'#10'    const width = media.width > 0 ? media.width : m'
  +'edia.videoWidth;'#10'    const height = media.height > 0 ? media.height : m'
  +'edia.videoHeight;'#10'    if (canvas.width < width) {'#10'      canvas.widt'
  +'h = width;'#10'    }'#10'    if (canvas.height < height) {'#10'      canvas'
  +'.height = height;'#10'    }'#10'    const ctx = this.context;'#10'    ctx.d'
  +'rawImage(media, 0, 0, width, height);'#10'    const pixelsData = ctx.getIma'
  +'geData(0, 0, width, height).data;'#10'    const imageArray = new Array(heig'
  +'ht);'#10'    let index = 0;'#10'    for (let y = height - 1; y >= 0; y--) {'
  +#10'      const row = imageArray[y] = new Array(width);'#10'      for (let x'
  +' = 0; x < width; x++) {'#10'        const pixel = new Float32Array(4);'#10
  ,'        pixel[0] = pixelsData[index++] / 255; '#10'        pixel[1] = pixel'
  +'sData[index++] / 255; '#10'        pixel[2] = pixelsData[index++] / 255; '
  +#10'        pixel[3] = pixelsData[index++] / 255; '#10'        row[x] = pixe'
  +'l;'#10'      }'#10'    }'#10'    return imageArray;'#10'  }'#10#10'  getPix'
  +'els(flip) {'#10'    const [width, height] = this.output;'#10'    return fli'
  +'p ? utils.flipPixels(this._imageData.data, width, height) : this._imageData'
  +'.data.slice(0);'#10'  }'#10#10'  _imageTo3DArray(images) {'#10'    const im'
  +'agesArray = new Array(images.length);'#10'    for (let i = 0; i < images.le'
  +'ngth; i++) {'#10'      imagesArray[i] = this._mediaTo2DArray(images[i]);'#10
  +'    }'#10'    return imagesArray;'#10'  }'#10#10'  _resultKernelHeader() {'
  +#10'    if (this.graphical) return '''';'#10'    if (this.immutable) return '
  +''''';'#10'    if (!this.pipeline) return '''';'#10'    switch (this.output.'
  +'length) {'#10'      case 1:'#10'        return this._mutableKernel1DResults'
  +'();'#10'      case 2:'#10'        return this._mutableKernel2DResults();'#10
  +'      case 3:'#10'        return this._mutableKernel3DResults();'#10'    }'
  +#10'  }'#10#10'  _resultKernelBody(kernelString) {'#10'    switch (this.outp'
  +'ut.length) {'#10'      case 1:'#10'        return (!this.immutable && this.'
  +'pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmu'
  +'tableKernel1DLoop(kernelString)) + this._kernelOutput();'#10'      case 2:'
  +#10'        return (!this.immutable && this.pipeline ? this._resultMutableKe'
  +'rnel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString))'
  +' + this._kernelOutput();'#10'      case 3:'#10'        return (!this.immuta'
  +'ble && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this'
  +'._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();'#10'  '
  +'    default:'#10'        throw new Error(''unsupported size kernel'');'#10
  +'    }'#10'  }'#10#10'  _graphicalKernelBody(kernelThreadString) {'#10'    s'
  +'witch (this.output.length) {'#10'      case 2:'#10'        return this._gra'
  +'phicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();'#10'     '
  +' default:'#10'        throw new Error(''unsupported size kernel'');'#10'   '
  +' }'#10'  }'#10#10'  _graphicalOutput() {'#10'    return `'#10'    this._ima'
  +'geData.data.set(this._colorData);'#10'    this.context.putImageData(this._i'
  +'mageData, 0, 0);'#10'    return;`'#10'  }'#10#10'  _getKernelResultTypeCons'
  +'tructorString() {'#10'    switch (this.returnType) {'#10'      case ''Liter'
  +'alInteger'':'#10'      case ''Number'':'#10'      case ''Integer'':'#10'   '
  +'   case ''Float'':'#10'        return ''Float32Array'';'#10'      case ''Ar'
  +'ray(2)'':'#10'      case ''Array(3)'':'#10'      case ''Array(4)'':'#10'   '
  +'     return ''Array'';'#10'      default:'#10'        if (this.graphical) {'
  +#10'          return ''Float32Array'';'#10'        }'#10'        throw new E'
  +'rror(`unhandled returnType ${ this.returnType }`);'#10'    }'#10'  }'#10#10
  +'  _resultImmutableKernel1DLoop(kernelString) {'#10'    const constructorStr'
  +'ing = this._getKernelResultTypeConstructorString();'#10'    return `  const'
  +' outputX = _this.output[0];'#10'    const result = new ${constructorString}'
  +'(outputX);'#10'    ${ this._mapSubKernels(subKernel => `const result_${ sub'
  +'Kernel.name } = new ${constructorString}(outputX);\n`).join(''    '') }'#10
  +'    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.n'
  +'ame };\n`).join(''    '') }'#10'    for (let x = 0; x < outputX; x++) {'#10
  +'      this.thread.x = x;'#10'      this.thread.y = 0;'#10'      this.thread'
  +'.z = 0;'#10'      ${ kernelString }'#10'    }`;'#10'  }'#10#10'  _mutableKe'
  +'rnel1DResults() {'#10'    const constructorString = this._getKernelResultTy'
  +'peConstructorString();'#10'    return `  const outputX = _this.output[0];'
  +#10'    const result = new ${constructorString}(outputX);'#10'    ${ this._m'
  +'apSubKernels(subKernel => `const result_${ subKernel.name } = new ${constru'
  +'ctorString}(outputX);\n`).join(''    '') }'#10'    ${ this._mapSubKernels(s'
  +'ubKernel => `let subKernelResult_${ subKernel.name };\n`).join(''    '') }`'
  +';'#10'  }'#10#10'  _resultMutableKernel1DLoop(kernelString) {'#10'    retur'
  +'n `  const outputX = _this.output[0];'#10'    for (let x = 0; x < outputX; '
  +'x++) {'#10'      this.thread.x = x;'#10'      this.thread.y = 0;'#10'      '
  +'this.thread.z = 0;'#10'      ${ kernelString }'#10'    }`;'#10'  }'#10#10' '
  +' _resultImmutableKernel2DLoop(kernelString) {'#10'    const constructorStri'
  +'ng = this._getKernelResultTypeConstructorString();'#10'    return `  const '
  +'outputX = _this.output[0];'#10'    const outputY = _this.output[1];'#10'   '
  +' const result = new Array(outputY);'#10'    ${ this._mapSubKernels(subKerne'
  +'l => `const result_${ subKernel.name } = new Array(outputY);\n`).join(''   '
  +' '') }'#10'    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ '
  ,'subKernel.name };\n`).join(''    '') }'#10'    for (let y = 0; y < outputY;'
  +' y++) {'#10'      this.thread.z = 0;'#10'      this.thread.y = y;'#10'     '
  +' const resultX = result[y] = new ${constructorString}(outputX);'#10'      $'
  +'{ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = res'
  +'ult_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join('''''
  +') }'#10'      for (let x = 0; x < outputX; x++) {'#10'        this.thread.x'
  +' = x;'#10'        ${ kernelString }'#10'      }'#10'    }`;'#10'  }'#10#10
  +'  _mutableKernel2DResults() {'#10'    const constructorString = this._getKe'
  +'rnelResultTypeConstructorString();'#10'    return `  const outputX = _this.'
  +'output[0];'#10'    const outputY = _this.output[1];'#10'    const result = '
  +'new Array(outputY);'#10'    ${ this._mapSubKernels(subKernel => `const resu'
  +'lt_${ subKernel.name } = new Array(outputY);\n`).join(''    '') }'#10'    $'
  +'{ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name }'
  +';\n`).join(''    '') }'#10'    for (let y = 0; y < outputY; y++) {'#10'    '
  +'  const resultX = result[y] = new ${constructorString}(outputX);'#10'      '
  +'${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = re'
  +'sult_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join('''
  +''') }'#10'    }`;'#10'  }'#10#10'  _resultMutableKernel2DLoop(kernelString)'
  +' {'#10'    const constructorString = this._getKernelResultTypeConstructorSt'
  +'ring();'#10'    return `  const outputX = _this.output[0];'#10'    const ou'
  +'tputY = _this.output[1];'#10'    for (let y = 0; y < outputY; y++) {'#10'  '
  +'    this.thread.z = 0;'#10'      this.thread.y = y;'#10'      const resultX'
  +' = result[y];'#10'      ${ this._mapSubKernels(subKernel => `const resultX_'
  +'${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString'
  +'}(outputX);\n`).join('''') }'#10'      for (let x = 0; x < outputX; x++) {'
  +#10'        this.thread.x = x;'#10'        ${ kernelString }'#10'      }'#10
  +'    }`;'#10'  }'#10#10'  _graphicalKernel2DLoop(kernelString) {'#10'    ret'
  +'urn `  const outputX = _this.output[0];'#10'    const outputY = _this.outpu'
  +'t[1];'#10'    for (let y = 0; y < outputY; y++) {'#10'      this.thread.z ='
  +' 0;'#10'      this.thread.y = y;'#10'      for (let x = 0; x < outputX; x++'
  +') {'#10'        this.thread.x = x;'#10'        ${ kernelString }'#10'      '
  +'}'#10'    }`;'#10'  }'#10#10'  _resultImmutableKernel3DLoop(kernelString) {'
  +#10'    const constructorString = this._getKernelResultTypeConstructorString'
  +'();'#10'    return `  const outputX = _this.output[0];'#10'    const output'
  +'Y = _this.output[1];'#10'    const outputZ = _this.output[2];'#10'    const'
  +' result = new Array(outputZ);'#10'    ${ this._mapSubKernels(subKernel => `'
  +'const result_${ subKernel.name } = new Array(outputZ);\n`).join(''    '') }'
  +#10'    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKerne'
  +'l.name };\n`).join(''    '') }'#10'    for (let z = 0; z < outputZ; z++) {'
  +#10'      this.thread.z = z;'#10'      const resultY = result[z] = new Array'
  +'(outputY);'#10'      ${ this._mapSubKernels(subKernel => `const resultY_${ '
  +'subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\n`).jo'
  +'in(''      '') }'#10'      for (let y = 0; y < outputY; y++) {'#10'        '
  +'this.thread.y = y;'#10'        const resultX = resultY[y] = new ${construct'
  +'orString}(outputX);'#10'        ${ this._mapSubKernels(subKernel => `const '
  +'resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${construc'
  +'torString}(outputX);\n`).join(''        '') }'#10'        for (let x = 0; x'
  +' < outputX; x++) {'#10'          this.thread.x = x;'#10'          ${ kernel'
  +'String }'#10'        }'#10'      }'#10'    }`;'#10'  }'#10#10'  _mutableKer'
  +'nel3DResults() {'#10'    const constructorString = this._getKernelResultTyp'
  +'eConstructorString();'#10'    return `  const outputX = _this.output[0];'#10
  +'    const outputY = _this.output[1];'#10'    const outputZ = _this.output[2'
  +'];'#10'    const result = new Array(outputZ);'#10'    ${ this._mapSubKernel'
  +'s(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\n`).'
  +'join(''    '') }'#10'    ${ this._mapSubKernels(subKernel => `let subKernel'
  +'Result_${ subKernel.name };\n`).join(''    '') }'#10'    for (let z = 0; z '
  +'< outputZ; z++) {'#10'      const resultY = result[z] = new Array(outputY);'
  +#10'      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.na'
  +'me } = result_${subKernel.name}[z] = new Array(outputY);\n`).join(''      '
  +''') }'#10'      for (let y = 0; y < outputY; y++) {'#10'        const resul'
  +'tX = resultY[y] = new ${constructorString}(outputX);'#10'        ${ this._m'
  +'apSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${su'
  +'bKernel.name}[y] = new ${constructorString}(outputX);\n`).join(''        '''
  +') }'#10'      }'#10'    }`;'#10'  }'#10#10'  _resultMutableKernel3DLoop(ker'
  ,'nelString) {'#10'    return `  const outputX = _this.output[0];'#10'    con'
  +'st outputY = _this.output[1];'#10'    const outputZ = _this.output[2];'#10
  +'    for (let z = 0; z < outputZ; z++) {'#10'      this.thread.z = z;'#10'  '
  +'    const resultY = result[z];'#10'      for (let y = 0; y < outputY; y++) '
  +'{'#10'        this.thread.y = y;'#10'        const resultX = resultY[y];'#10
  +'        for (let x = 0; x < outputX; x++) {'#10'          this.thread.x = x'
  +';'#10'          ${ kernelString }'#10'        }'#10'      }'#10'    }`;'#10
  +'  }'#10#10'  _kernelOutput() {'#10'    if (!this.subKernels) {'#10'      re'
  +'turn ''\n    return result;'';'#10'    }'#10'    return `\n    return {'#10
  +'      result: result,'#10'      ${ this.subKernels.map(subKernel => `${ sub'
  +'Kernel.property }: result_${ subKernel.name }`).join('',\n      '') }'#10' '
  +'   };`;'#10'  }'#10#10'  _mapSubKernels(fn) {'#10'    return this.subKernel'
  +'s === null ? [''''] :'#10'      this.subKernels.map(fn);'#10'  }'#10#10'  d'
  +'estroy(removeCanvasReference) {'#10'    if (removeCanvasReference) {'#10'  '
  +'    delete this.canvas;'#10'    }'#10'  }'#10#10'  static destroyContext(co'
  +'ntext) {}'#10#10'  toJSON() {'#10'    const json = super.toJSON();'#10'    '
  +'json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJS'
  +'ON();'#10'    return json;'#10'  }'#10#10'  setOutput(output) {'#10'    sup'
  +'er.setOutput(output);'#10'    const [width, height] = this.output;'#10'    '
  +'if (this.graphical) {'#10'      this._imageData = this.context.createImageD'
  +'ata(width, height);'#10'      this._colorData = new Uint8ClampedArray(width'
  +' * height * 4);'#10'    }'#10'  }'#10#10'  prependString(value) {'#10'    i'
  +'f (this._kernelString) throw new Error(''Kernel already built'');'#10'    t'
  +'his._prependedString.push(value);'#10'  }'#10#10'  hasPrependString(value) '
  +'{'#10'    return this._prependedString.indexOf(value) > -1;'#10'  }'#10'}'
  +#10#10'module.exports = {'#10'  CPUKernel'#10'};'#10'},{"../../utils":114,".'
  +'./function-builder":9,"../kernel":36,"./function-node":6,"./kernel-string":'
  +'7}],9:[function(require,module,exports){'#10'class FunctionBuilder {'#10'  '
  +'static fromKernel(kernel, FunctionNode, extraNodeOptions) {'#10'    const {'
  +#10'      kernelArguments,'#10'      kernelConstants,'#10'      argumentName'
  +'s,'#10'      argumentSizes,'#10'      argumentBitRatios,'#10'      constant'
  +'s,'#10'      constantBitRatios,'#10'      debug,'#10'      loopMaxIteration'
  +'s,'#10'      nativeFunctions,'#10'      output,'#10'      optimizeFloatMemo'
  +'ry,'#10'      precision,'#10'      plugins,'#10'      source,'#10'      sub'
  +'Kernels,'#10'      functions,'#10'      leadingReturnStatement,'#10'      f'
  +'ollowingReturnStatement,'#10'      dynamicArguments,'#10'      dynamicOutpu'
  +'t,'#10'      onIstanbulCoverageVariable,'#10'      removeIstanbulCoverage,'
  +#10'    } = kernel;'#10#10'    const argumentTypes = new Array(kernelArgumen'
  +'ts.length);'#10'    const constantTypes = {};'#10#10'    for (let i = 0; i '
  +'< kernelArguments.length; i++) {'#10'      argumentTypes[i] = kernelArgumen'
  +'ts[i].type;'#10'    }'#10#10'    for (let i = 0; i < kernelConstants.length'
  +'; i++) {'#10'      const kernelConstant = kernelConstants[i];'#10'      con'
  +'stantTypes[kernelConstant.name] = kernelConstant.type;'#10'    }'#10#10'   '
  +' const needsArgumentType = (functionName, index) => {'#10'      return func'
  +'tionBuilder.needsArgumentType(functionName, index);'#10'    };'#10#10'    c'
  +'onst assignArgumentType = (functionName, index, type) => {'#10'      functi'
  +'onBuilder.assignArgumentType(functionName, index, type);'#10'    };'#10#10
  +'    const lookupReturnType = (functionName, ast, requestingNode) => {'#10' '
  +'     return functionBuilder.lookupReturnType(functionName, ast, requestingN'
  +'ode);'#10'    };'#10#10'    const lookupFunctionArgumentTypes = (functionNa'
  +'me) => {'#10'      return functionBuilder.lookupFunctionArgumentTypes(funct'
  +'ionName);'#10'    };'#10#10'    const lookupFunctionArgumentName = (functio'
  +'nName, argumentIndex) => {'#10'      return functionBuilder.lookupFunctionA'
  +'rgumentName(functionName, argumentIndex);'#10'    };'#10#10'    const looku'
  +'pFunctionArgumentBitRatio = (functionName, argumentName) => {'#10'      ret'
  +'urn functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentNa'
  +'me);'#10'    };'#10#10'    const triggerImplyArgumentType = (functionName, '
  +'i, argumentType, requestingNode) => {'#10'      functionBuilder.assignArgum'
  +'entType(functionName, i, argumentType, requestingNode);'#10'    };'#10#10' '
  +'   const triggerImplyArgumentBitRatio = (functionName, argumentName, callee'
  +'FunctionName, argumentIndex) => {'#10'      functionBuilder.assignArgumentB'
  +'itRatio(functionName, argumentName, calleeFunctionName, argumentIndex);'#10
  +'    };'#10#10'    const onFunctionCall = (functionName, calleeFunctionName,'
  +' args) => {'#10'      functionBuilder.trackFunctionCall(functionName, calle'
  ,'eFunctionName, args);'#10'    };'#10#10'    const onNestedFunction = (ast, '
  +'returnType) => {'#10'      const argumentNames = [];'#10'      for (let i ='
  +' 0; i < ast.params.length; i++) {'#10'        argumentNames.push(ast.params'
  +'[i].name);'#10'      }'#10'      const nestedFunction = new FunctionNode(nu'
  +'ll, Object.assign({}, nodeOptions, {'#10'        returnType: null,'#10'    '
  +'    ast,'#10'        name: ast.id.name,'#10'        argumentNames,'#10'    '
  +'    lookupReturnType,'#10'        lookupFunctionArgumentTypes,'#10'        '
  +'lookupFunctionArgumentName,'#10'        lookupFunctionArgumentBitRatio,'#10
  +'        needsArgumentType,'#10'        assignArgumentType,'#10'        trig'
  +'gerImplyArgumentType,'#10'        triggerImplyArgumentBitRatio,'#10'       '
  +' onFunctionCall,'#10'      }));'#10'      nestedFunction.traceFunctionAST(a'
  +'st);'#10'      functionBuilder.addFunctionNode(nestedFunction);'#10'    };'
  +#10#10'    const nodeOptions = Object.assign({'#10'      isRootKernel: false'
  +','#10'      onNestedFunction,'#10'      lookupReturnType,'#10'      lookupF'
  +'unctionArgumentTypes,'#10'      lookupFunctionArgumentName,'#10'      looku'
  +'pFunctionArgumentBitRatio,'#10'      needsArgumentType,'#10'      assignArg'
  +'umentType,'#10'      triggerImplyArgumentType,'#10'      triggerImplyArgume'
  +'ntBitRatio,'#10'      onFunctionCall,'#10'      onIstanbulCoverageVariable:'
  +' onIstanbulCoverageVariable ? (name) => onIstanbulCoverageVariable(name, ke'
  +'rnel) : null,'#10'      removeIstanbulCoverage,'#10'      optimizeFloatMemo'
  +'ry,'#10'      precision,'#10'      constants,'#10'      constantTypes,'#10
  +'      constantBitRatios,'#10'      debug,'#10'      loopMaxIterations,'#10
  +'      output,'#10'      plugins,'#10'      dynamicArguments,'#10'      dyna'
  +'micOutput,'#10'    }, extraNodeOptions || {});'#10#10'    const rootNodeOpt'
  +'ions = Object.assign({}, nodeOptions, {'#10'      isRootKernel: true,'#10' '
  +'     name: ''kernel'','#10'      argumentNames,'#10'      argumentTypes,'#10
  +'      argumentSizes,'#10'      argumentBitRatios,'#10'      leadingReturnSt'
  +'atement,'#10'      followingReturnStatement,'#10'    });'#10#10'    if (typ'
  +'eof source === ''object'' && source.functionNodes) {'#10'      return new F'
  +'unctionBuilder().fromJSON(source.functionNodes, FunctionNode);'#10'    }'#10
  +#10'    const rootNode = new FunctionNode(source, rootNodeOptions);'#10#10' '
  +'   let functionNodes = null;'#10'    if (functions) {'#10'      functionNod'
  +'es = functions.map((fn) => new FunctionNode(fn.source, {'#10'        return'
  +'Type: fn.returnType,'#10'        argumentTypes: fn.argumentTypes,'#10'     '
  +'   output,'#10'        plugins,'#10'        constants,'#10'        constant'
  +'Types,'#10'        constantBitRatios,'#10'        optimizeFloatMemory,'#10
  +'        precision,'#10'        lookupReturnType,'#10'        lookupFunction'
  +'ArgumentTypes,'#10'        lookupFunctionArgumentName,'#10'        lookupFu'
  +'nctionArgumentBitRatio,'#10'        needsArgumentType,'#10'        assignAr'
  +'gumentType,'#10'        triggerImplyArgumentType,'#10'        triggerImplyA'
  +'rgumentBitRatio,'#10'        onFunctionCall,'#10'        onNestedFunction,'
  +#10'        onIstanbulCoverageVariable: onIstanbulCoverageVariable ? (name) '
  +'=> onIstanbulCoverageVariable(name, kernel) : null,'#10'        removeIstan'
  +'bulCoverage,'#10'      }));'#10'    }'#10#10'    let subKernelNodes = null;'
  +#10'    if (subKernels) {'#10'      subKernelNodes = subKernels.map((subKern'
  +'el) => {'#10'        const { name, source } = subKernel;'#10'        return'
  +' new FunctionNode(source, Object.assign({}, nodeOptions, {'#10'          na'
  +'me,'#10'          isSubKernel: true,'#10'          isRootKernel: false,'#10
  +'        }));'#10'      });'#10'    }'#10#10'    const functionBuilder = new'
  +' FunctionBuilder({'#10'      kernel,'#10'      rootNode,'#10'      function'
  +'Nodes,'#10'      nativeFunctions,'#10'      subKernelNodes'#10'    });'#10
  +#10'    return functionBuilder;'#10'  }'#10#10'  constructor(settings) {'#10
  +'    settings = settings || {};'#10'    this.kernel = settings.kernel;'#10' '
  +'   this.rootNode = settings.rootNode;'#10'    this.functionNodes = settings'
  +'.functionNodes || [];'#10'    this.subKernelNodes = settings.subKernelNodes'
  +' || [];'#10'    this.nativeFunctions = settings.nativeFunctions || [];'#10
  +'    this.functionMap = {};'#10'    this.nativeFunctionNames = [];'#10'    t'
  +'his.lookupChain = [];'#10'    this.functionNodeDependencies = {};'#10'    t'
  +'his.functionCalls = {};'#10#10'    if (this.rootNode) {'#10'      this.func'
  +'tionMap[''kernel''] = this.rootNode;'#10'    }'#10#10'    if (this.function'
  +'Nodes) {'#10'      for (let i = 0; i < this.functionNodes.length; i++) {'#10
  +'        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i'
  +'];'#10'      }'#10'    }'#10#10'    if (this.subKernelNodes) {'#10'      fo'
  +'r (let i = 0; i < this.subKernelNodes.length; i++) {'#10'        this.funct'
  ,'ionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];'#10'      }'
  +#10'    }'#10#10'    if (this.nativeFunctions) {'#10'      for (let i = 0; i'
  +' < this.nativeFunctions.length; i++) {'#10'        const nativeFunction = t'
  +'his.nativeFunctions[i];'#10'        this.nativeFunctionNames.push(nativeFun'
  +'ction.name);'#10'      }'#10'    }'#10'  }'#10#10'  addFunctionNode(functio'
  +'nNode) {'#10'    if (!functionNode.name) throw new Error(''functionNode.nam'
  +'e needs set'');'#10'    this.functionMap[functionNode.name] = functionNode;'
  +#10'    if (functionNode.isRootKernel) {'#10'      this.rootNode = functionN'
  +'ode;'#10'    }'#10'  }'#10#10'  traceFunctionCalls(functionName, retList) {'
  +#10'    functionName = functionName || ''kernel'';'#10'    retList = retList'
  +' || [];'#10#10'    if (this.nativeFunctionNames.indexOf(functionName) > -1)'
  +' {'#10'      if (retList.indexOf(functionName) === -1) {'#10'        retLis'
  +'t.push(functionName);'#10'      }'#10'      return retList;'#10'    }'#10#10
  +'    const functionNode = this.functionMap[functionName];'#10'    if (functi'
  +'onNode) {'#10'      const functionIndex = retList.indexOf(functionName);'#10
  +'      if (functionIndex === -1) {'#10'        retList.push(functionName);'
  +#10'        functionNode.toString(); '#10'        for (let i = 0; i < functi'
  +'onNode.calledFunctions.length; ++i) {'#10'          this.traceFunctionCalls'
  +'(functionNode.calledFunctions[i], retList);'#10'        }'#10'      } else '
  +'{'#10'        const dependantFunctionName = retList.splice(functionIndex, 1'
  +')[0];'#10'        retList.push(dependantFunctionName);'#10'      }'#10'    '
  +'}'#10#10'    return retList;'#10'  }'#10#10'  getPrototypeString(functionNa'
  +'me) {'#10'    return this.getPrototypes(functionName).join(''\n'');'#10'  }'
  +#10#10'  getPrototypes(functionName) {'#10'    if (this.rootNode) {'#10'    '
  +'  this.rootNode.toString();'#10'    }'#10'    if (functionName) {'#10'     '
  +' return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functio'
  +'nName, []).reverse());'#10'    }'#10'    return this.getPrototypesFromFunct'
  +'ionNames(Object.keys(this.functionMap));'#10'  }'#10#10'  getStringFromFunc'
  +'tionNames(functionList) {'#10'    const ret = [];'#10'    for (let i = 0; i'
  +' < functionList.length; ++i) {'#10'      const node = this.functionMap[func'
  +'tionList[i]];'#10'      if (node) {'#10'        ret.push(this.functionMap[f'
  +'unctionList[i]].toString());'#10'      }'#10'    }'#10'    return ret.join('
  +'''\n'');'#10'  }'#10#10'  getPrototypesFromFunctionNames(functionList) {'#10
  +'    const ret = [];'#10'    for (let i = 0; i < functionList.length; ++i) {'
  +#10'      const functionName = functionList[i];'#10'      const functionInde'
  +'x = this.nativeFunctionNames.indexOf(functionName);'#10'      if (functionI'
  +'ndex > -1) {'#10'        ret.push(this.nativeFunctions[functionIndex].sourc'
  +'e);'#10'        continue;'#10'      }'#10'      const node = this.functionM'
  +'ap[functionName];'#10'      if (node) {'#10'        ret.push(node.toString('
  +'));'#10'      }'#10'    }'#10'    return ret;'#10'  }'#10#10'  toJSON() {'
  +#10'    return this.traceFunctionCalls(this.rootNode.name).reverse().map(nam'
  +'e => {'#10'      const nativeIndex = this.nativeFunctions.indexOf(name);'#10
  +'      if (nativeIndex > -1) {'#10'        return {'#10'          name,'#10
  +'          source: this.nativeFunctions[nativeIndex].source'#10'        };'
  +#10'      } else if (this.functionMap[name]) {'#10'        return this.funct'
  +'ionMap[name].toJSON();'#10'      } else {'#10'        throw new Error(`func'
  +'tion ${ name } not found`);'#10'      }'#10'    });'#10'  }'#10#10'  fromJS'
  +'ON(jsonFunctionNodes, FunctionNode) {'#10'    this.functionMap = {};'#10'  '
  +'  for (let i = 0; i < jsonFunctionNodes.length; i++) {'#10'      const json'
  +'FunctionNode = jsonFunctionNodes[i];'#10'      this.functionMap[jsonFunctio'
  +'nNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionN'
  +'ode.settings);'#10'    }'#10'    return this;'#10'  }'#10#10'  getString(fu'
  +'nctionName) {'#10'    if (functionName) {'#10'      return this.getStringFr'
  +'omFunctionNames(this.traceFunctionCalls(functionName).reverse());'#10'    }'
  +#10'    return this.getStringFromFunctionNames(Object.keys(this.functionMap)'
  +');'#10'  }'#10#10'  lookupReturnType(functionName, ast, requestingNode) {'
  +#10'    if (ast.type !== ''CallExpression'') {'#10'      throw new Error(`ex'
  +'pected ast type of "CallExpression", but is ${ ast.type }`);'#10'    }'#10
  +'    if (this._isNativeFunction(functionName)) {'#10'      return this._look'
  +'upNativeFunctionReturnType(functionName);'#10'    } else if (this._isFuncti'
  +'on(functionName)) {'#10'      const node = this._getFunction(functionName);'
  +#10'      if (node.returnType) {'#10'        return node.returnType;'#10'   '
  +'   } else {'#10'        for (let i = 0; i < this.lookupChain.length; i++) {'
  +#10'          if (this.lookupChain[i].ast === ast) {'#10'            if (nod'
  ,'e.argumentTypes.length === 0 && ast.arguments.length > 0) {'#10'           '
  +'   const args = ast.arguments;'#10'              for (let j = 0; j < args.l'
  +'ength; j++) {'#10'                this.lookupChain.push({'#10'             '
  +'     name: requestingNode.name,'#10'                  ast: args[i],'#10'   '
  +'               requestingNode'#10'                });'#10'                n'
  +'ode.argumentTypes[j] = requestingNode.getType(args[j]);'#10'               '
  +' this.lookupChain.pop();'#10'              }'#10'              return node.'
  +'returnType = node.getType(node.getJsAST());'#10'            }'#10#10'      '
  +'      throw new Error(''circlical logic detected!'');'#10'          }'#10' '
  +'       }'#10'        this.lookupChain.push({'#10'          name: requesting'
  +'Node.name,'#10'          ast,'#10'          requestingNode'#10'        });'
  +#10'        const type = node.getType(node.getJsAST());'#10'        this.loo'
  +'kupChain.pop();'#10'        return node.returnType = type;'#10'      }'#10
  +'    }'#10#10'    return null;'#10'  }'#10#10'  _getFunction(functionName) {'
  +#10'    if (!this._isFunction(functionName)) {'#10'      new Error(`Function'
  +' ${functionName} not found`);'#10'    }'#10'    return this.functionMap[fun'
  +'ctionName];'#10'  }'#10#10'  _isFunction(functionName) {'#10'    return Boo'
  +'lean(this.functionMap[functionName]);'#10'  }'#10#10'  _getNativeFunction(f'
  +'unctionName) {'#10'    for (let i = 0; i < this.nativeFunctions.length; i++'
  +') {'#10'      if (this.nativeFunctions[i].name === functionName) return thi'
  +'s.nativeFunctions[i];'#10'    }'#10'    return null;'#10'  }'#10#10'  _isNa'
  +'tiveFunction(functionName) {'#10'    return Boolean(this._getNativeFunction'
  +'(functionName));'#10'  }'#10#10'  _lookupNativeFunctionReturnType(functionN'
  +'ame) {'#10'    let nativeFunction = this._getNativeFunction(functionName);'
  +#10'    if (nativeFunction) {'#10'      return nativeFunction.returnType;'#10
  +'    }'#10'    throw new Error(`Native function ${ functionName } not found`'
  +');'#10'  }'#10#10'  lookupFunctionArgumentTypes(functionName) {'#10'    if '
  +'(this._isNativeFunction(functionName)) {'#10'      return this._getNativeFu'
  +'nction(functionName).argumentTypes;'#10'    } else if (this._isFunction(fun'
  +'ctionName)) {'#10'      return this._getFunction(functionName).argumentType'
  +'s;'#10'    }'#10'    return null;'#10'  }'#10#10'  lookupFunctionArgumentNa'
  +'me(functionName, argumentIndex) {'#10'    return this._getFunction(function'
  +'Name).argumentNames[argumentIndex];'#10'  }'#10#10'  lookupFunctionArgument'
  +'BitRatio(functionName, argumentName) {'#10'    if (!this._isFunction(functi'
  +'onName)) {'#10'      throw new Error(''function not found'');'#10'    }'#10
  +'    if (this.rootNode.name === functionName) {'#10'      const i = this.roo'
  +'tNode.argumentNames.indexOf(argumentName);'#10'      if (i !== -1) {'#10'  '
  +'      return this.rootNode.argumentBitRatios[i];'#10'      }'#10'    }'#10
  +'    const node = this._getFunction(functionName);'#10'    const i = node.ar'
  +'gumentNames.indexOf(argumentName);'#10'    if (i === -1) {'#10'      throw '
  +'new Error(''argument not found'');'#10'    }'#10'    const bitRatio = node.'
  +'argumentBitRatios[i];'#10'    if (typeof bitRatio !== ''number'') {'#10'   '
  +'   throw new Error(''argument bit ratio not found'');'#10'    }'#10'    ret'
  +'urn bitRatio;'#10'  }'#10#10'  needsArgumentType(functionName, i) {'#10'   '
  +' if (!this._isFunction(functionName)) return false;'#10'    const fnNode = '
  +'this._getFunction(functionName);'#10'    return !fnNode.argumentTypes[i];'
  +#10'  }'#10#10'  assignArgumentType(functionName, i, argumentType, requestin'
  +'gNode) {'#10'    if (!this._isFunction(functionName)) return;'#10'    const'
  +' fnNode = this._getFunction(functionName);'#10'    if (!fnNode.argumentType'
  +'s[i]) {'#10'      fnNode.argumentTypes[i] = argumentType;'#10'    }'#10'  }'
  +#10#10'  assignArgumentBitRatio(functionName, argumentName, calleeFunctionNa'
  +'me, argumentIndex) {'#10'    const node = this._getFunction(functionName);'
  +#10'    if (this._isNativeFunction(calleeFunctionName)) return null;'#10'   '
  +' const calleeNode = this._getFunction(calleeFunctionName);'#10'    const i '
  +'= node.argumentNames.indexOf(argumentName);'#10'    if (i === -1) {'#10'   '
  +'   throw new Error(`Argument ${argumentName} not found in arguments from fu'
  +'nction ${functionName}`);'#10'    }'#10'    const bitRatio = node.argumentB'
  +'itRatios[i];'#10'    if (typeof bitRatio !== ''number'') {'#10'      throw '
  +'new Error(`Bit ratio for argument ${argumentName} not found in function ${f'
  +'unctionName}`);'#10'    }'#10'    if (!calleeNode.argumentBitRatios) {'#10
  +'      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.len'
  +'gth);'#10'    }'#10'    const calleeBitRatio = calleeNode.argumentBitRatios'
  +'[i];'#10'    if (typeof calleeBitRatio === ''number'') {'#10'      if (call'
  +'eeBitRatio !== bitRatio) {'#10'        throw new Error(`Incompatible bit ra'
  ,'tio found at function ${functionName} at argument ${argumentName}`);'#10'  '
  +'    }'#10'      return calleeBitRatio;'#10'    }'#10'    calleeNode.argumen'
  +'tBitRatios[i] = bitRatio;'#10'    return bitRatio;'#10'  }'#10#10'  trackFu'
  +'nctionCall(functionName, calleeFunctionName, args) {'#10'    if (!this.func'
  +'tionNodeDependencies[functionName]) {'#10'      this.functionNodeDependenci'
  +'es[functionName] = new Set();'#10'      this.functionCalls[functionName] = '
  +'[];'#10'    }'#10'    this.functionNodeDependencies[functionName].add(calle'
  +'eFunctionName);'#10'    this.functionCalls[functionName].push(args);'#10'  '
  +'}'#10#10'  getKernelResultType() {'#10'    return this.rootNode.returnType '
  +'|| this.rootNode.getType(this.rootNode.ast);'#10'  }'#10#10'  getSubKernelR'
  +'esultType(index) {'#10'    const subKernelNode = this.subKernelNodes[index]'
  +';'#10'    let called = false;'#10'    for (let functionCallIndex = 0; funct'
  +'ionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {'
  +#10'      const functionCall = this.rootNode.functionCalls[functionCallIndex'
  +'];'#10'      if (functionCall.ast.callee.name === subKernelNode.name) {'#10
  +'        called = true;'#10'      }'#10'    }'#10'    if (!called) {'#10'   '
  +'   throw new Error(`SubKernel ${ subKernelNode.name } never called by kerne'
  +'l`);'#10'    }'#10'    return subKernelNode.returnType || subKernelNode.get'
  +'Type(subKernelNode.getJsAST());'#10'  }'#10#10'  getReturnTypes() {'#10'   '
  +' const result = {'#10'      [this.rootNode.name]: this.rootNode.getType(thi'
  +'s.rootNode.ast),'#10'    };'#10'    const list = this.traceFunctionCalls(th'
  +'is.rootNode.name);'#10'    for (let i = 0; i < list.length; i++) {'#10'    '
  +'  const functionName = list[i];'#10'      const functionNode = this.functio'
  +'nMap[functionName];'#10'      result[functionName] = functionNode.getType(f'
  +'unctionNode.ast);'#10'    }'#10'    return result;'#10'  }'#10'}'#10#10'mod'
  +'ule.exports = {'#10'  FunctionBuilder'#10'};'#10'},{}],10:[function(require'
  +',module,exports){'#10'const acorn = require(''acorn'');'#10'const { utils }'
  +' = require(''../utils'');'#10'const { FunctionTracer } = require(''./functi'
  +'on-tracer'');'#10#10'class FunctionNode {'#10'  constructor(source, setting'
  +'s) {'#10'    if (!source && !settings.ast) {'#10'      throw new Error(''so'
  +'urce parameter is missing'');'#10'    }'#10'    settings = settings || {};'
  +#10'    this.source = source;'#10'    this.ast = null;'#10'    this.name = t'
  +'ypeof source === ''string'' ? settings.isRootKernel ?'#10'      ''kernel'' '
  +':'#10'      (settings.name || utils.getFunctionNameFromString(source)) : nu'
  +'ll;'#10'    this.calledFunctions = [];'#10'    this.constants = {};'#10'   '
  +' this.constantTypes = {};'#10'    this.constantBitRatios = {};'#10'    this'
  +'.isRootKernel = false;'#10'    this.isSubKernel = false;'#10'    this.debug'
  +' = null;'#10'    this.functions = null;'#10'    this.identifiers = null;'#10
  +'    this.contexts = null;'#10'    this.functionCalls = null;'#10'    this.s'
  +'tates = [];'#10'    this.needsArgumentType = null;'#10'    this.assignArgum'
  +'entType = null;'#10'    this.lookupReturnType = null;'#10'    this.lookupFu'
  +'nctionArgumentTypes = null;'#10'    this.lookupFunctionArgumentBitRatio = n'
  +'ull;'#10'    this.triggerImplyArgumentType = null;'#10'    this.triggerImpl'
  +'yArgumentBitRatio = null;'#10'    this.onNestedFunction = null;'#10'    thi'
  +'s.onFunctionCall = null;'#10'    this.optimizeFloatMemory = null;'#10'    t'
  +'his.precision = null;'#10'    this.loopMaxIterations = null;'#10'    this.a'
  +'rgumentNames = (typeof this.source === ''string'' ? utils.getArgumentNamesF'
  +'romString(this.source) : null);'#10'    this.argumentTypes = [];'#10'    th'
  +'is.argumentSizes = [];'#10'    this.argumentBitRatios = null;'#10'    this.'
  +'returnType = null;'#10'    this.output = [];'#10'    this.plugins = null;'
  +#10'    this.leadingReturnStatement = null;'#10'    this.followingReturnStat'
  +'ement = null;'#10'    this.dynamicOutput = null;'#10'    this.dynamicArgume'
  +'nts = null;'#10'    this.strictTypingChecking = false;'#10'    this.fixInte'
  +'gerDivisionAccuracy = null;'#10'    this.onIstanbulCoverageVariable = null;'
  +#10'    this.removeIstanbulCoverage = false;'#10#10'    if (settings) {'#10
  +'      for (const p in settings) {'#10'        if (!settings.hasOwnProperty('
  +'p)) continue;'#10'        if (!this.hasOwnProperty(p)) continue;'#10'      '
  +'  this[p] = settings[p];'#10'      }'#10'    }'#10#10'    this.literalTypes'
  +' = {};'#10#10'    this.validate();'#10'    this._string = null;'#10'    thi'
  +'s._internalVariableNames = {};'#10'  }'#10#10'  validate() {'#10'    if (ty'
  +'peof this.source !== ''string'' && !this.ast) {'#10'      throw new Error('
  +'''this.source not a string'');'#10'    }'#10#10'    if (!this.ast && !utils'
  +'.isFunctionString(this.source)) {'#10'      throw new Error(''this.source n'
  +'ot a function string'');'#10'    }'#10#10'    if (!this.name) {'#10'      t'
  ,'hrow new Error(''this.name could not be set'');'#10'    }'#10#10'    if (th'
  +'is.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentN'
  +'ames.length) {'#10'      throw new Error(`argumentTypes count of ${ this.ar'
  +'gumentTypes.length } exceeds ${ this.argumentNames.length }`);'#10'    }'#10
  +#10'    if (this.output.length < 1) {'#10'      throw new Error(''this.outpu'
  +'t is not big enough'');'#10'    }'#10'  }'#10#10'  isIdentifierConstant(nam'
  +'e) {'#10'    if (!this.constants) return false;'#10'    return this.constan'
  +'ts.hasOwnProperty(name);'#10'  }'#10#10'  isInput(argumentName) {'#10'    r'
  +'eturn this.argumentTypes[this.argumentNames.indexOf(argumentName)] === ''In'
  +'put'';'#10'  }'#10#10'  pushState(state) {'#10'    this.states.push(state);'
  +#10'  }'#10#10'  popState(state) {'#10'    if (this.state !== state) {'#10' '
  +'     throw new Error(`Cannot popState ${ state } when in ${ this.state }`);'
  +#10'    }'#10'    this.states.pop();'#10'  }'#10#10'  isState(state) {'#10' '
  +'   return this.state === state;'#10'  }'#10#10'  get state() {'#10'    retu'
  +'rn this.states[this.states.length - 1];'#10'  }'#10#10'  astMemberExpressio'
  +'nUnroll(ast) {'#10'    if (ast.type === ''Identifier'') {'#10'      return '
  +'ast.name;'#10'    } else if (ast.type === ''ThisExpression'') {'#10'      r'
  +'eturn ''this'';'#10'    }'#10#10'    if (ast.type === ''MemberExpression'')'
  +' {'#10'      if (ast.object && ast.property) {'#10'        if (ast.object.h'
  +'asOwnProperty(''name'') && ast.object.name[0] === ''_'') {'#10'          re'
  +'turn this.astMemberExpressionUnroll(ast.property);'#10'        }'#10#10'   '
  +'     return ('#10'          this.astMemberExpressionUnroll(ast.object) +'#10
  +'          ''.'' +'#10'          this.astMemberExpressionUnroll(ast.property'
  +')'#10'        );'#10'      }'#10'    }'#10#10'    if (ast.hasOwnProperty('''
  +'expressions'')) {'#10'      const firstExpression = ast.expressions[0];'#10
  +'      if (firstExpression.type === ''Literal'' && firstExpression.value ==='
  +' 0 && ast.expressions.length === 2) {'#10'        return this.astMemberExpr'
  +'essionUnroll(ast.expressions[1]);'#10'      }'#10'    }'#10#10'    throw th'
  +'is.astErrorOutput(''Unknown astMemberExpressionUnroll'', ast);'#10'  }'#10
  +#10'  getJsAST(inParser) {'#10'    if (this.ast) {'#10'      return this.ast'
  +';'#10'    }'#10'    if (typeof this.source === ''object'') {'#10'      this'
  +'.traceFunctionAST(this.source);'#10'      return this.ast = this.source;'#10
  +'    }'#10#10'    inParser = inParser || acorn;'#10'    if (inParser === nul'
  +'l) {'#10'      throw new Error(''Missing JS to AST parser'');'#10'    }'#10
  +#10'    const ast = Object.freeze(inParser.parse(`const parser_${ this.name '
  +'} = ${ this.source };`, {'#10'      locations: true'#10'    }));'#10'    co'
  +'nst functionAST = ast.body[0].declarations[0].init;'#10'    this.traceFunct'
  +'ionAST(functionAST);'#10#10'    if (!ast) {'#10'      throw new Error(''Fai'
  +'led to parse JS code'');'#10'    }'#10#10'    return this.ast = functionAST'
  +';'#10'  }'#10#10'  traceFunctionAST(ast) {'#10'    const { contexts, declar'
  +'ations, functions, identifiers, functionCalls } = new FunctionTracer(ast);'
  +#10'    this.contexts = contexts;'#10'    this.identifiers = identifiers;'#10
  +'    this.functionCalls = functionCalls;'#10'    this.functions = functions;'
  +#10'    for (let i = 0; i < declarations.length; i++) {'#10'      const decl'
  +'aration = declarations[i];'#10'      const { ast, inForLoopInit, inForLoopT'
  +'est } = declaration;'#10'      const { init } = ast;'#10'      const depend'
  +'encies = this.getDependencies(init);'#10'      let valueType = null;'#10#10
  +'      if (inForLoopInit && inForLoopTest) {'#10'        valueType = ''Integ'
  +'er'';'#10'      } else {'#10'        if (init) {'#10'          const realTy'
  +'pe = this.getType(init);'#10'          switch (realType) {'#10'            '
  +'case ''Integer'':'#10'            case ''Float'':'#10'            case ''Nu'
  +'mber'':'#10'              if (init.type === ''MemberExpression'') {'#10'   '
  +'             valueType = realType;'#10'              } else {'#10'         '
  +'       valueType = ''Number'';'#10'              }'#10'              break;'
  +#10'            case ''LiteralInteger'':'#10'              valueType = ''Num'
  +'ber'';'#10'              break;'#10'            default:'#10'              '
  +'valueType = realType;'#10'          }'#10'        }'#10'      }'#10'      d'
  +'eclaration.valueType = valueType;'#10'      declaration.dependencies = depe'
  +'ndencies;'#10'      declaration.isSafe = this.isSafeDependencies(dependenci'
  +'es);'#10'    }'#10#10'    for (let i = 0; i < functions.length; i++) {'#10
  +'      this.onNestedFunction(functions[i]);'#10'    }'#10'  }'#10#10'  getDe'
  +'claration(ast) {'#10'    for (let i = 0; i < this.identifiers.length; i++) '
  +'{'#10'      const identifier = this.identifiers[i];'#10'      if (ast === i'
  +'dentifier.ast) {'#10'        return identifier.declaration;'#10'      }'#10
  ,'    }'#10'    return null;'#10'  }'#10#10'  getVariableType(ast) {'#10'    '
  +'if (ast.type !== ''Identifier'') {'#10'      throw new Error(`ast of ${ast.'
  +'type} not "Identifier"`);'#10'    }'#10'    let type = null;'#10'    const '
  +'argumentIndex = this.argumentNames.indexOf(ast.name);'#10'    if (argumentI'
  +'ndex === -1) {'#10'      const declaration = this.getDeclaration(ast);'#10
  +'      if (declaration) {'#10'        return declaration.valueType;'#10'    '
  +'  }'#10'    } else {'#10'      const argumentType = this.argumentTypes[argu'
  +'mentIndex];'#10'      if (argumentType) {'#10'        type = argumentType;'
  +#10'      }'#10'    }'#10'    if (!type && this.strictTypingChecking) {'#10
  +'      throw new Error(`Declaration of ${name} not found`);'#10'    }'#10'  '
  +'  return type;'#10'  }'#10#10'  getLookupType(type) {'#10'    if (!typeLook'
  +'upMap.hasOwnProperty(type)) {'#10'      throw new Error(`unknown typeLookup'
  +'Map ${ type }`);'#10'    }'#10'    return typeLookupMap[type];'#10'  }'#10
  +#10'  getConstantType(constantName) {'#10'    if (this.constantTypes[constan'
  +'tName]) {'#10'      const type = this.constantTypes[constantName];'#10'    '
  +'  if (type === ''Float'') {'#10'        return ''Number'';'#10'      } else'
  +' {'#10'        return type;'#10'      }'#10'    }'#10'    throw new Error(`'
  +'Type for constant "${ constantName }" not declared`);'#10'  }'#10#10'  toSt'
  +'ring() {'#10'    if (this._string) return this._string;'#10'    return this'
  +'._string = this.astGeneric(this.getJsAST(), []).join('''').trim();'#10'  }'
  +#10#10'  toJSON() {'#10'    const settings = {'#10'      source: this.source'
  +','#10'      name: this.name,'#10'      constants: this.constants,'#10'     '
  +' constantTypes: this.constantTypes,'#10'      isRootKernel: this.isRootKern'
  +'el,'#10'      isSubKernel: this.isSubKernel,'#10'      debug: this.debug,'
  +#10'      output: this.output,'#10'      loopMaxIterations: this.loopMaxIter'
  +'ations,'#10'      argumentNames: this.argumentNames,'#10'      argumentType'
  +'s: this.argumentTypes,'#10'      argumentSizes: this.argumentSizes,'#10'   '
  +'   returnType: this.returnType,'#10'      leadingReturnStatement: this.lead'
  +'ingReturnStatement,'#10'      followingReturnStatement: this.followingRetur'
  +'nStatement,'#10'    };'#10#10'    return {'#10'      ast: this.ast,'#10'   '
  +'   settings'#10'    };'#10'  }'#10#10'  getType(ast) {'#10'    if (Array.is'
  +'Array(ast)) {'#10'      return this.getType(ast[ast.length - 1]);'#10'    }'
  +#10'    switch (ast.type) {'#10'      case ''BlockStatement'':'#10'        r'
  +'eturn this.getType(ast.body);'#10'      case ''ArrayExpression'':'#10'     '
  +'   return `Array(${ ast.elements.length })`;'#10'      case ''Literal'':'#10
  +'        const literalKey = this.astKey(ast);'#10'        if (this.literalTy'
  +'pes[literalKey]) {'#10'          return this.literalTypes[literalKey];'#10
  +'        }'#10'        if (Number.isInteger(ast.value)) {'#10'          retu'
  +'rn ''LiteralInteger'';'#10'        } else if (ast.value === true || ast.val'
  +'ue === false) {'#10'          return ''Boolean'';'#10'        } else {'#10
  +'          return ''Number'';'#10'        }'#10'        case ''AssignmentExp'
  +'ression'':'#10'          return this.getType(ast.left);'#10'        case '''
  +'CallExpression'':'#10'          if (this.isAstMathFunction(ast)) {'#10'    '
  +'        return ''Number'';'#10'          }'#10'          if (!ast.callee ||'
  +' !ast.callee.name) {'#10'            if (ast.callee.type === ''SequenceExpr'
  +'ession'' && ast.callee.expressions[ast.callee.expressions.length - 1].prope'
  +'rty.name) {'#10'              const functionName = ast.callee.expressions[a'
  +'st.callee.expressions.length - 1].property.name;'#10'              this.inf'
  +'erArgumentTypesIfNeeded(functionName, ast.arguments);'#10'              ret'
  +'urn this.lookupReturnType(functionName, ast, this);'#10'            }'#10' '
  +'           if (this.getVariableSignature(ast.callee, true) === ''this.color'
  +''') {'#10'              return null;'#10'            }'#10'            thro'
  +'w this.astErrorOutput(''Unknown call expression'', ast);'#10'          }'#10
  +'          if (ast.callee && ast.callee.name) {'#10'            const functi'
  +'onName = ast.callee.name;'#10'            this.inferArgumentTypesIfNeeded(f'
  +'unctionName, ast.arguments);'#10'            return this.lookupReturnType(f'
  +'unctionName, ast, this);'#10'          }'#10'          throw this.astErrorO'
  +'utput(`Unhandled getType Type "${ ast.type }"`, ast);'#10'        case ''Lo'
  +'gicalExpression'':'#10'          return ''Boolean'';'#10'        case ''Bin'
  +'aryExpression'':'#10'          switch (ast.operator) {'#10'            case'
  +' ''%'':'#10'            case ''/'':'#10'              if (this.fixIntegerDi'
  +'visionAccuracy) {'#10'                return ''Number'';'#10'              '
  +'} else {'#10'                break;'#10'              }'#10'              c'
  +'ase ''>'':'#10'              case ''<'':'#10'                return ''Boole'
  ,'an'';'#10'              case ''&'':'#10'              case ''|'':'#10'     '
  +'         case ''^'':'#10'              case ''<<'':'#10'              case '
  +'''>>'':'#10'              case ''>>>'':'#10'                return ''Intege'
  +'r'';'#10'          }'#10'          const type = this.getType(ast.left);'#10
  +'          if (this.isState(''skip-literal-correction'')) return type;'#10' '
  +'         if (type === ''LiteralInteger'') {'#10'            const rightType'
  +' = this.getType(ast.right);'#10'            if (rightType === ''LiteralInte'
  +'ger'') {'#10'              if (ast.left.value % 1 === 0) {'#10'            '
  +'    return ''Integer'';'#10'              } else {'#10'                retu'
  +'rn ''Float'';'#10'              }'#10'            }'#10'            return '
  +'rightType;'#10'          }'#10'          return typeLookupMap[type] || type'
  +';'#10'        case ''UpdateExpression'':'#10'          return this.getType('
  +'ast.argument);'#10'        case ''UnaryExpression'':'#10'          if (ast.'
  +'operator === ''~'') {'#10'            return ''Integer'';'#10'          }'
  +#10'          return this.getType(ast.argument);'#10'        case ''Variable'
  +'Declaration'': {'#10'          const declarations = ast.declarations;'#10' '
  +'         let lastType;'#10'          for (let i = 0; i < declarations.lengt'
  +'h; i++) {'#10'            const declaration = declarations[i];'#10'        '
  +'    lastType = this.getType(declaration);'#10'          }'#10'          if '
  +'(!lastType) {'#10'            throw this.astErrorOutput(`Unable to find typ'
  +'e for declaration`, ast);'#10'          }'#10'          return lastType;'#10
  +'        }'#10'        case ''VariableDeclarator'':'#10'          const decl'
  +'aration = this.getDeclaration(ast.id);'#10'          if (!declaration) {'#10
  +'            throw this.astErrorOutput(`Unable to find declarator`, ast);'#10
  +'          }'#10#10'          if (!declaration.valueType) {'#10'            '
  +'throw this.astErrorOutput(`Unable to find declarator valueType`, ast);'#10
  +'          }'#10#10'          return declaration.valueType;'#10'        case'
  +' ''Identifier'':'#10'          if (ast.name === ''Infinity'') {'#10'       '
  +'     return ''Number'';'#10'          }'#10'          if (this.isAstVariabl'
  +'e(ast)) {'#10'            const signature = this.getVariableSignature(ast);'
  +#10'            if (signature === ''value'') {'#10'              return this'
  +'.getCheckVariableType(ast);'#10'            }'#10'          }'#10'         '
  +' const origin = this.findIdentifierOrigin(ast);'#10'          if (origin &&'
  +' origin.init) {'#10'            return this.getType(origin.init);'#10'     '
  +'     }'#10'          return null;'#10'        case ''ReturnStatement'':'#10
  +'          return this.getType(ast.argument);'#10'        case ''MemberExpre'
  +'ssion'':'#10'          if (this.isAstMathFunction(ast)) {'#10'            s'
  +'witch (ast.property.name) {'#10'              case ''ceil'':'#10'          '
  +'      return ''Integer'';'#10'              case ''floor'':'#10'           '
  +'     return ''Integer'';'#10'              case ''round'':'#10'            '
  +'    return ''Integer'';'#10'            }'#10'            return ''Number'''
  +';'#10'          }'#10'          if (this.isAstVariable(ast)) {'#10'        '
  +'    const variableSignature = this.getVariableSignature(ast);'#10'         '
  +'   switch (variableSignature) {'#10'              case ''value[]'':'#10'   '
  +'             return this.getLookupType(this.getCheckVariableType(ast.object'
  +'));'#10'              case ''value[][]'':'#10'                return this.g'
  +'etLookupType(this.getCheckVariableType(ast.object.object));'#10'           '
  +'   case ''value[][][]'':'#10'                return this.getLookupType(this'
  +'.getCheckVariableType(ast.object.object.object));'#10'              case '''
  +'value[][][][]'':'#10'                return this.getLookupType(this.getChec'
  +'kVariableType(ast.object.object.object.object));'#10'              case ''v'
  +'alue.thread.value'':'#10'              case ''this.thread.value'':'#10'    '
  +'            return ''Integer'';'#10'              case ''this.output.value'
  +''':'#10'                return this.dynamicOutput ? ''Integer'' : ''Literal'
  +'Integer'';'#10'              case ''this.constants.value'':'#10'           '
  +'     return this.getConstantType(ast.property.name);'#10'              case'
  +' ''this.constants.value[]'':'#10'                return this.getLookupType('
  +'this.getConstantType(ast.object.property.name));'#10'              case ''t'
  +'his.constants.value[][]'':'#10'                return this.getLookupType(th'
  +'is.getConstantType(ast.object.object.property.name));'#10'              cas'
  +'e ''this.constants.value[][][]'':'#10'                return this.getLookup'
  +'Type(this.getConstantType(ast.object.object.object.property.name));'#10'   '
  +'           case ''this.constants.value[][][][]'':'#10'                retur'
  +'n this.getLookupType(this.getConstantType(ast.object.object.object.object.p'
  ,'roperty.name));'#10'              case ''fn()[]'':'#10'              case '
  +'''fn()[][]'':'#10'              case ''fn()[][][]'':'#10'                re'
  +'turn this.getLookupType(this.getType(ast.object));'#10'              case '
  +'''value.value'':'#10'                if (this.isAstMathVariable(ast)) {'#10
  +'                  return ''Number'';'#10'                }'#10'            '
  +'    switch (ast.property.name) {'#10'                  case ''r'':'#10'    '
  +'              case ''g'':'#10'                  case ''b'':'#10'           '
  +'       case ''a'':'#10'                    return this.getLookupType(this.g'
  +'etCheckVariableType(ast.object));'#10'                }'#10'               '
  +' case ''[][]'':'#10'                  return ''Number'';'#10'            }'
  +#10'            throw this.astErrorOutput(''Unhandled getType MemberExpressi'
  +'on'', ast);'#10'          }'#10'          throw this.astErrorOutput(''Unhan'
  +'dled getType MemberExpression'', ast);'#10'        case ''ConditionalExpres'
  +'sion'':'#10'          return this.getType(ast.consequent);'#10'        case'
  +' ''FunctionDeclaration'':'#10'        case ''FunctionExpression'':'#10'    '
  +'      const lastReturn = this.findLastReturn(ast.body);'#10'          if (l'
  +'astReturn) {'#10'            return this.getType(lastReturn);'#10'         '
  +' }'#10'          return null;'#10'        case ''IfStatement'':'#10'       '
  +'   return this.getType(ast.consequent);'#10'        case ''SequenceExpressi'
  +'on'':'#10'          return this.getType(ast.expressions[ast.expressions.len'
  +'gth - 1]);'#10'        default:'#10'          throw this.astErrorOutput(`Un'
  +'handled getType Type "${ ast.type }"`, ast);'#10'    }'#10'  }'#10#10'  get'
  +'CheckVariableType(ast) {'#10'    const type = this.getVariableType(ast);'#10
  +'    if (!type) {'#10'      throw this.astErrorOutput(`${ast.type} is not de'
  +'fined`, ast);'#10'    }'#10'    return type;'#10'  }'#10#10'  inferArgument'
  +'TypesIfNeeded(functionName, args) {'#10'    for (let i = 0; i < args.length'
  +'; i++) {'#10'      if (!this.needsArgumentType(functionName, i)) continue;'
  +#10'      const type = this.getType(args[i]);'#10'      if (!type) {'#10'   '
  +'     throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);'
  +#10'      }'#10'      this.assignArgumentType(functionName, i, type);'#10'  '
  +'  }'#10'  }'#10#10'  isAstMathVariable(ast) {'#10'    const mathProperties '
  +'= ['#10'      ''E'','#10'      ''PI'','#10'      ''SQRT2'','#10'      ''SQR'
  +'T1_2'','#10'      ''LN2'','#10'      ''LN10'','#10'      ''LOG2E'','#10'   '
  +'   ''LOG10E'','#10'    ];'#10'    return ast.type === ''MemberExpression'' '
  +'&&'#10'      ast.object && ast.object.type === ''Identifier'' &&'#10'      '
  +'ast.object.name === ''Math'' &&'#10'      ast.property &&'#10'      ast.pro'
  +'perty.type === ''Identifier'' &&'#10'      mathProperties.indexOf(ast.prope'
  +'rty.name) > -1;'#10'  }'#10#10'  isAstMathFunction(ast) {'#10'    const mat'
  +'hFunctions = ['#10'      ''abs'','#10'      ''acos'','#10'      ''acosh'','
  +#10'      ''asin'','#10'      ''asinh'','#10'      ''atan'','#10'      ''ata'
  +'n2'','#10'      ''atanh'','#10'      ''cbrt'','#10'      ''ceil'','#10'    '
  +'  ''clz32'','#10'      ''cos'','#10'      ''cosh'','#10'      ''expm1'','#10
  +'      ''exp'','#10'      ''floor'','#10'      ''fround'','#10'      ''imul'
  +''','#10'      ''log'','#10'      ''log2'','#10'      ''log10'','#10'      '
  +'''log1p'','#10'      ''max'','#10'      ''min'','#10'      ''pow'','#10'   '
  +'   ''random'','#10'      ''round'','#10'      ''sign'','#10'      ''sin'','
  +#10'      ''sinh'','#10'      ''sqrt'','#10'      ''tan'','#10'      ''tanh'
  +''','#10'      ''trunc'','#10'    ];'#10'    return ast.type === ''CallExpre'
  +'ssion'' &&'#10'      ast.callee &&'#10'      ast.callee.type === ''MemberEx'
  +'pression'' &&'#10'      ast.callee.object &&'#10'      ast.callee.object.ty'
  +'pe === ''Identifier'' &&'#10'      ast.callee.object.name === ''Math'' &&'
  +#10'      ast.callee.property &&'#10'      ast.callee.property.type === ''Id'
  +'entifier'' &&'#10'      mathFunctions.indexOf(ast.callee.property.name) > -'
  +'1;'#10'  }'#10#10'  isAstVariable(ast) {'#10'    return ast.type === ''Iden'
  +'tifier'' || ast.type === ''MemberExpression'';'#10'  }'#10#10'  isSafe(ast)'
  +' {'#10'    return this.isSafeDependencies(this.getDependencies(ast));'#10' '
  +' }'#10#10'  isSafeDependencies(dependencies) {'#10'    return dependencies '
  +'&& dependencies.every ? dependencies.every(dependency => dependency.isSafe)'
  +' : true;'#10'  }'#10#10'  getDependencies(ast, dependencies, isNotSafe) {'
  +#10'    if (!dependencies) {'#10'      dependencies = [];'#10'    }'#10'    '
  +'if (!ast) return null;'#10'    if (Array.isArray(ast)) {'#10'      for (let'
  +' i = 0; i < ast.length; i++) {'#10'        this.getDependencies(ast[i], dep'
  +'endencies, isNotSafe);'#10'      }'#10'      return dependencies;'#10'    }'
  +#10'    switch (ast.type) {'#10'      case ''AssignmentExpression'':'#10'   '
  ,'     this.getDependencies(ast.left, dependencies, isNotSafe);'#10'        t'
  +'his.getDependencies(ast.right, dependencies, isNotSafe);'#10'        return'
  +' dependencies;'#10'      case ''ConditionalExpression'':'#10'        this.g'
  +'etDependencies(ast.test, dependencies, isNotSafe);'#10'        this.getDepe'
  +'ndencies(ast.alternate, dependencies, isNotSafe);'#10'        this.getDepen'
  +'dencies(ast.consequent, dependencies, isNotSafe);'#10'        return depend'
  +'encies;'#10'      case ''Literal'':'#10'        dependencies.push({'#10'   '
  +'       origin: ''literal'','#10'          value: ast.value,'#10'          i'
  +'sSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < In'
  +'finity && !isNaN(ast.value)'#10'        });'#10'        break;'#10'      ca'
  +'se ''VariableDeclarator'':'#10'        return this.getDependencies(ast.init'
  +', dependencies, isNotSafe);'#10'      case ''Identifier'':'#10'        cons'
  +'t declaration = this.getDeclaration(ast);'#10'        if (declaration) {'#10
  +'          dependencies.push({'#10'            name: ast.name,'#10'         '
  +'   origin: ''declaration'','#10'            isSafe: isNotSafe ? false : thi'
  +'s.isSafeDependencies(declaration.dependencies),'#10'          });'#10'     '
  +'   } else if (this.argumentNames.indexOf(ast.name) > -1) {'#10'          de'
  +'pendencies.push({'#10'            name: ast.name,'#10'            origin: '
  +'''argument'','#10'            isSafe: false,'#10'          });'#10'        '
  +'} else if (this.strictTypingChecking) {'#10'          throw new Error(`Cann'
  +'ot find identifier origin "${ast.name}"`);'#10'        }'#10'        break;'
  +#10'      case ''FunctionDeclaration'':'#10'        return this.getDependenc'
  +'ies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);'#10
  +'      case ''ReturnStatement'':'#10'        return this.getDependencies(ast'
  +'.argument, dependencies);'#10'      case ''BinaryExpression'':'#10'      ca'
  +'se ''LogicalExpression'':'#10'        isNotSafe = (ast.operator === ''/'' |'
  +'| ast.operator === ''*'');'#10'        this.getDependencies(ast.left, depen'
  +'dencies, isNotSafe);'#10'        this.getDependencies(ast.right, dependenci'
  +'es, isNotSafe);'#10'        return dependencies;'#10'      case ''UnaryExpr'
  +'ession'':'#10'      case ''UpdateExpression'':'#10'        return this.getD'
  +'ependencies(ast.argument, dependencies, isNotSafe);'#10'      case ''Variab'
  +'leDeclaration'':'#10'        return this.getDependencies(ast.declarations, '
  +'dependencies, isNotSafe);'#10'      case ''ArrayExpression'':'#10'        d'
  +'ependencies.push({'#10'          origin: ''declaration'','#10'          isS'
  +'afe: true,'#10'        });'#10'        return dependencies;'#10'      case '
  +'''CallExpression'':'#10'        dependencies.push({'#10'          origin: '
  +'''function'','#10'          isSafe: true,'#10'        });'#10'        retur'
  +'n dependencies;'#10'      case ''MemberExpression'':'#10'        const deta'
  +'ils = this.getMemberExpressionDetails(ast);'#10'        switch (details.sig'
  +'nature) {'#10'          case ''value[]'':'#10'            this.getDependenc'
  +'ies(ast.object, dependencies, isNotSafe);'#10'            break;'#10'      '
  +'    case ''value[][]'':'#10'            this.getDependencies(ast.object.obj'
  +'ect, dependencies, isNotSafe);'#10'            break;'#10'          case '''
  +'value[][][]'':'#10'            this.getDependencies(ast.object.object.objec'
  +'t, dependencies, isNotSafe);'#10'            break;'#10'          case ''th'
  +'is.output.value'':'#10'            if (this.dynamicOutput) {'#10'          '
  +'    dependencies.push({'#10'                name: details.name,'#10'       '
  +'         origin: ''output'','#10'                isSafe: false,'#10'       '
  +'       });'#10'            }'#10'            break;'#10'        }'#10'     '
  +'   if (details) {'#10'          if (details.property) {'#10'            thi'
  +'s.getDependencies(details.property, dependencies, isNotSafe);'#10'         '
  +' }'#10'          if (details.xProperty) {'#10'            this.getDependenc'
  +'ies(details.xProperty, dependencies, isNotSafe);'#10'          }'#10'      '
  +'    if (details.yProperty) {'#10'            this.getDependencies(details.y'
  +'Property, dependencies, isNotSafe);'#10'          }'#10'          if (detai'
  +'ls.zProperty) {'#10'            this.getDependencies(details.zProperty, dep'
  +'endencies, isNotSafe);'#10'          }'#10'          return dependencies;'
  +#10'        }'#10'        case ''SequenceExpression'':'#10'          return '
  +'this.getDependencies(ast.expressions, dependencies, isNotSafe);'#10'       '
  +' default:'#10'          throw this.astErrorOutput(`Unhandled type ${ ast.ty'
  +'pe } in getDependencies`, ast);'#10'    }'#10'    return dependencies;'#10
  +'  }'#10#10'  getVariableSignature(ast, returnRawValue) {'#10'    if (!this.'
  +'isAstVariable(ast)) {'#10'      throw new Error(`ast of type "${ ast.type }'
  +'" is not a variable signature`);'#10'    }'#10'    if (ast.type === ''Ident'
  ,'ifier'') {'#10'      return ''value'';'#10'    }'#10'    const signature = '
  +'[];'#10'    while (true) {'#10'      if (!ast) break;'#10'      if (ast.com'
  +'puted) {'#10'        signature.push(''[]'');'#10'      } else if (ast.type '
  +'=== ''ThisExpression'') {'#10'        signature.unshift(''this'');'#10'    '
  +'  } else if (ast.property && ast.property.name) {'#10'        if ('#10'    '
  +'      ast.property.name === ''x'' ||'#10'          ast.property.name === '''
  +'y'' ||'#10'          ast.property.name === ''z'''#10'        ) {'#10'      '
  +'    signature.unshift(returnRawValue ? ''.'' + ast.property.name : ''.value'
  +''');'#10'        } else if ('#10'          ast.property.name === ''constant'
  +'s'' ||'#10'          ast.property.name === ''thread'' ||'#10'          ast.'
  +'property.name === ''output'''#10'        ) {'#10'          signature.unshif'
  +'t(''.'' + ast.property.name);'#10'        } else {'#10'          signature.'
  +'unshift(returnRawValue ? ''.'' + ast.property.name : ''.value'');'#10'     '
  +'   }'#10'      } else if (ast.name) {'#10'        signature.unshift(returnR'
  +'awValue ? ast.name : ''value'');'#10'      } else if (ast.callee && ast.cal'
  +'lee.name) {'#10'        signature.unshift(returnRawValue ? ast.callee.name '
  +'+ ''()'' : ''fn()'');'#10'      } else if (ast.elements) {'#10'        sign'
  +'ature.unshift(''[]'');'#10'      } else {'#10'        signature.unshift(''u'
  +'nknown'');'#10'      }'#10'      ast = ast.object;'#10'    }'#10#10'    con'
  +'st signatureString = signature.join('''');'#10'    if (returnRawValue) {'#10
  +'      return signatureString;'#10'    }'#10#10'    const allowedExpressions'
  +' = ['#10'      ''value'','#10'      ''value[]'','#10'      ''value[][]'','
  +#10'      ''value[][][]'','#10'      ''value[][][][]'','#10'      ''value.va'
  +'lue'','#10'      ''value.value[]'', '#10'      ''value.value[][]'', '#10'  '
  +'    ''value.thread.value'','#10'      ''this.thread.value'','#10'      ''th'
  +'is.output.value'','#10'      ''this.constants.value'','#10'      ''this.con'
  +'stants.value[]'','#10'      ''this.constants.value[][]'','#10'      ''this.'
  +'constants.value[][][]'','#10'      ''this.constants.value[][][][]'','#10'  '
  +'    ''fn()[]'','#10'      ''fn()[][]'','#10'      ''fn()[][][]'','#10'     '
  +' ''[][]'','#10'    ];'#10'    if (allowedExpressions.indexOf(signatureStrin'
  +'g) > -1) {'#10'      return signatureString;'#10'    }'#10'    return null;'
  +#10'  }'#10#10'  build() {'#10'    return this.toString().length > 0;'#10'  '
  +'}'#10#10'  astGeneric(ast, retArr) {'#10'    if (ast === null) {'#10'      '
  +'throw this.astErrorOutput(''NULL ast'', ast);'#10'    } else {'#10'      if'
  +' (Array.isArray(ast)) {'#10'        for (let i = 0; i < ast.length; i++) {'
  +#10'          this.astGeneric(ast[i], retArr);'#10'        }'#10'        ret'
  +'urn retArr;'#10'      }'#10#10'      switch (ast.type) {'#10'        case '
  +'''FunctionDeclaration'':'#10'          return this.astFunctionDeclaration(a'
  +'st, retArr);'#10'        case ''FunctionExpression'':'#10'          return '
  +'this.astFunctionExpression(ast, retArr);'#10'        case ''ReturnStatement'
  +''':'#10'          return this.astReturnStatement(ast, retArr);'#10'        '
  +'case ''Literal'':'#10'          return this.astLiteral(ast, retArr);'#10'  '
  +'      case ''BinaryExpression'':'#10'          return this.astBinaryExpress'
  +'ion(ast, retArr);'#10'        case ''Identifier'':'#10'          return thi'
  +'s.astIdentifierExpression(ast, retArr);'#10'        case ''AssignmentExpres'
  +'sion'':'#10'          return this.astAssignmentExpression(ast, retArr);'#10
  +'        case ''ExpressionStatement'':'#10'          return this.astExpressi'
  +'onStatement(ast, retArr);'#10'        case ''EmptyStatement'':'#10'        '
  +'  return this.astEmptyStatement(ast, retArr);'#10'        case ''BlockState'
  +'ment'':'#10'          return this.astBlockStatement(ast, retArr);'#10'     '
  +'   case ''IfStatement'':'#10'          return this.astIfStatement(ast, retA'
  +'rr);'#10'        case ''SwitchStatement'':'#10'          return this.astSwi'
  +'tchStatement(ast, retArr);'#10'        case ''BreakStatement'':'#10'       '
  +'   return this.astBreakStatement(ast, retArr);'#10'        case ''ContinueS'
  +'tatement'':'#10'          return this.astContinueStatement(ast, retArr);'#10
  +'        case ''ForStatement'':'#10'          return this.astForStatement(as'
  +'t, retArr);'#10'        case ''WhileStatement'':'#10'          return this.'
  +'astWhileStatement(ast, retArr);'#10'        case ''DoWhileStatement'':'#10
  +'          return this.astDoWhileStatement(ast, retArr);'#10'        case '''
  +'VariableDeclaration'':'#10'          return this.astVariableDeclaration(ast'
  +', retArr);'#10'        case ''VariableDeclarator'':'#10'          return th'
  +'is.astVariableDeclarator(ast, retArr);'#10'        case ''ThisExpression'':'
  +#10'          return this.astThisExpression(ast, retArr);'#10'        case '
  +'''SequenceExpression'':'#10'          return this.astSequenceExpression(ast'
  ,', retArr);'#10'        case ''UnaryExpression'':'#10'          return this.'
  +'astUnaryExpression(ast, retArr);'#10'        case ''UpdateExpression'':'#10
  +'          return this.astUpdateExpression(ast, retArr);'#10'        case '''
  +'LogicalExpression'':'#10'          return this.astLogicalExpression(ast, re'
  +'tArr);'#10'        case ''MemberExpression'':'#10'          return this.ast'
  +'MemberExpression(ast, retArr);'#10'        case ''CallExpression'':'#10'   '
  +'       return this.astCallExpression(ast, retArr);'#10'        case ''Array'
  +'Expression'':'#10'          return this.astArrayExpression(ast, retArr);'#10
  +'        case ''DebuggerStatement'':'#10'          return this.astDebuggerSt'
  +'atement(ast, retArr);'#10'        case ''ConditionalExpression'':'#10'     '
  +'     return this.astConditionalExpression(ast, retArr);'#10'      }'#10#10
  +'      throw this.astErrorOutput(''Unknown ast type : '' + ast.type, ast);'
  +#10'    }'#10'  }'#10'  astErrorOutput(error, ast) {'#10'    if (typeof this'
  +'.source !== ''string'') {'#10'      return new Error(error);'#10'    }'#10
  +#10'    const debugString = utils.getAstString(this.source, ast);'#10'    co'
  +'nst leadingSource = this.source.substr(ast.start);'#10'    const splitLines'
  +' = leadingSource.split(/\n/);'#10'    const lineBefore = splitLines.length '
  +'> 0 ? splitLines[splitLines.length - 1] : 0;'#10'    return new Error(`${er'
  +'ror} on line ${ splitLines.length }, position ${ lineBefore.length }:\n ${ '
  +'debugString }`);'#10'  }'#10#10'  astDebuggerStatement(arrNode, retArr) {'
  +#10'    return retArr;'#10'  }'#10#10'  astConditionalExpression(ast, retArr'
  +') {'#10'    if (ast.type !== ''ConditionalExpression'') {'#10'      throw t'
  +'his.astErrorOutput(''Not a conditional expression'', ast);'#10'    }'#10'  '
  +'  retArr.push(''('');'#10'    this.astGeneric(ast.test, retArr);'#10'    re'
  +'tArr.push(''?'');'#10'    this.astGeneric(ast.consequent, retArr);'#10'    '
  +'retArr.push('':'');'#10'    this.astGeneric(ast.alternate, retArr);'#10'   '
  +' retArr.push('')'');'#10'    return retArr;'#10'  }'#10#10'  astFunction(as'
  +'t, retArr) {'#10'    throw new Error(`"astFunction" not defined on ${ this.'
  +'constructor.name }`);'#10'  }'#10#10'  astFunctionDeclaration(ast, retArr) '
  +'{'#10'    if (this.isChildFunction(ast)) {'#10'      return retArr;'#10'   '
  +' }'#10'    return this.astFunction(ast, retArr);'#10'  }'#10'  astFunctionE'
  +'xpression(ast, retArr) {'#10'    if (this.isChildFunction(ast)) {'#10'     '
  +' return retArr;'#10'    }'#10'    return this.astFunction(ast, retArr);'#10
  +'  }'#10'  isChildFunction(ast) {'#10'    for (let i = 0; i < this.functions'
  +'.length; i++) {'#10'      if (this.functions[i] === ast) {'#10'        retu'
  +'rn true;'#10'      }'#10'    }'#10'    return false;'#10'  }'#10'  astRetur'
  +'nStatement(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  astLiteral(a'
  +'st, retArr) {'#10'    this.literalTypes[this.astKey(ast)] = ''Number'';'#10
  +'    return retArr;'#10'  }'#10'  astBinaryExpression(ast, retArr) {'#10'   '
  +' return retArr;'#10'  }'#10'  astIdentifierExpression(ast, retArr) {'#10'  '
  +'  return retArr;'#10'  }'#10'  astAssignmentExpression(ast, retArr) {'#10' '
  +'   return retArr;'#10'  }'#10'  astExpressionStatement(esNode, retArr) {'#10
  +'    this.astGeneric(esNode.expression, retArr);'#10'    retArr.push('';'');'
  +#10'    return retArr;'#10'  }'#10'  astEmptyStatement(eNode, retArr) {'#10
  +'    return retArr;'#10'  }'#10'  astBlockStatement(ast, retArr) {'#10'    r'
  +'eturn retArr;'#10'  }'#10'  astIfStatement(ast, retArr) {'#10'    return re'
  +'tArr;'#10'  }'#10'  astSwitchStatement(ast, retArr) {'#10'    return retArr'
  +';'#10'  }'#10'  astBreakStatement(brNode, retArr) {'#10'    retArr.push(''b'
  +'reak;'');'#10'    return retArr;'#10'  }'#10'  astContinueStatement(crNode,'
  +' retArr) {'#10'    retArr.push(''continue;\n'');'#10'    return retArr;'#10
  +'  }'#10'  astForStatement(ast, retArr) {'#10'    return retArr;'#10'  }'#10
  +'  astWhileStatement(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  ast'
  +'DoWhileStatement(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  astVar'
  +'iableDeclarator(iVarDecNode, retArr) {'#10'    this.astGeneric(iVarDecNode.'
  +'id, retArr);'#10'    if (iVarDecNode.init !== null) {'#10'      retArr.push'
  +'(''='');'#10'      this.astGeneric(iVarDecNode.init, retArr);'#10'    }'#10
  +'    return retArr;'#10'  }'#10'  astThisExpression(ast, retArr) {'#10'    r'
  +'eturn retArr;'#10'  }'#10'  isIstanbulAST(ast) {'#10'    const variableSign'
  +'ature = this.getVariableSignature(ast);'#10'    return variableSignature =='
  +'= ''value.value[]'' || variableSignature === ''value.value[][]'';'#10'  }'
  +#10'  astSequenceExpression(sNode, retArr) {'#10'    const { expressions } ='
  +' sNode;'#10'    const sequenceResult = [];'#10'    for (let i = 0; i < expr'
  +'essions.length; i++) {'#10'      const expression = expressions[i];'#10'   '
  +'   if (this.removeIstanbulCoverage) {'#10'        if (expression.type === '
  ,'''UpdateExpression'' && this.isIstanbulAST(expression.argument)) {'#10'    '
  +'      continue;'#10'        }'#10'      }'#10'      const expressionResult '
  +'= [];'#10'      this.astGeneric(expression, expressionResult);'#10'      se'
  +'quenceResult.push(expressionResult.join(''''));'#10'    }'#10'    if (seque'
  +'nceResult.length > 1) {'#10'      retArr.push(''('', sequenceResult.join('''
  +',''), '')'');'#10'    } else {'#10'      retArr.push(sequenceResult[0]);'#10
  +'    }'#10'    return retArr;'#10'  }'#10'  astUnaryExpression(uNode, retArr'
  +') {'#10'    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, r'
  +'etArr);'#10'    if (unaryResult) {'#10'      return retArr;'#10'    }'#10#10
  +'    if (uNode.prefix) {'#10'      retArr.push(uNode.operator);'#10'      th'
  +'is.astGeneric(uNode.argument, retArr);'#10'    } else {'#10'      this.astG'
  +'eneric(uNode.argument, retArr);'#10'      retArr.push(uNode.operator);'#10
  +'    }'#10#10'    return retArr;'#10'  }'#10#10'  checkAndUpconvertBitwiseUn'
  +'ary(uNode, retArr) {}'#10#10'  astUpdateExpression(uNode, retArr) {'#10'   '
  +' if (this.removeIstanbulCoverage) {'#10'      const signature = this.getVar'
  +'iableSignature(uNode.argument);'#10'      if (this.isIstanbulAST(uNode.argu'
  +'ment)) {'#10'        return retArr;'#10'      }'#10'    }'#10'    if (uNode'
  +'.prefix) {'#10'      retArr.push(uNode.operator);'#10'      this.astGeneric'
  +'(uNode.argument, retArr);'#10'    } else {'#10'      this.astGeneric(uNode.'
  +'argument, retArr);'#10'      retArr.push(uNode.operator);'#10'    }'#10#10
  +'    return retArr;'#10'  }'#10'  astLogicalExpression(logNode, retArr) {'#10
  +'    retArr.push(''('');'#10'    this.astGeneric(logNode.left, retArr);'#10
  +'    retArr.push(logNode.operator);'#10'    this.astGeneric(logNode.right, r'
  +'etArr);'#10'    retArr.push('')'');'#10'    return retArr;'#10'  }'#10'  as'
  +'tMemberExpression(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  astCa'
  +'llExpression(ast, retArr) {'#10'    return retArr;'#10'  }'#10'  astArrayEx'
  +'pression(ast, retArr) {'#10'    return retArr;'#10'  }'#10#10'  getMemberEx'
  +'pressionDetails(ast) {'#10'    if (ast.type !== ''MemberExpression'') {'#10
  +'      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpre'
  +'ssion`, ast);'#10'    }'#10'    let name = null;'#10'    let type = null;'
  +#10'    const variableSignature = this.getVariableSignature(ast);'#10'    sw'
  +'itch (variableSignature) {'#10'      case ''value'':'#10'        return nul'
  +'l;'#10'      case ''value.thread.value'':'#10'      case ''this.thread.valu'
  +'e'':'#10'      case ''this.output.value'':'#10'        return {'#10'       '
  +'   signature: variableSignature,'#10'            type: ''Integer'','#10'   '
  +'         name: ast.property.name'#10'        };'#10'      case ''value[]'':'
  +#10'        if (typeof ast.object.name !== ''string'') {'#10'          throw'
  +' this.astErrorOutput(''Unexpected expression'', ast);'#10'        }'#10'   '
  +'     name = ast.object.name;'#10'        return {'#10'          name,'#10' '
  +'         origin: ''user'','#10'            signature: variableSignature,'#10
  +'            type: this.getVariableType(ast.object),'#10'            xProper'
  +'ty: ast.property'#10'        };'#10'      case ''value[][]'':'#10'        i'
  +'f (typeof ast.object.object.name !== ''string'') {'#10'          throw this'
  +'.astErrorOutput(''Unexpected expression'', ast);'#10'        }'#10'        '
  +'name = ast.object.object.name;'#10'        return {'#10'          name,'#10
  +'          origin: ''user'','#10'            signature: variableSignature,'
  +#10'            type: this.getVariableType(ast.object.object),'#10'         '
  +'   yProperty: ast.object.property,'#10'            xProperty: ast.property,'
  +#10'        };'#10'      case ''value[][][]'':'#10'        if (typeof ast.ob'
  +'ject.object.object.name !== ''string'') {'#10'          throw this.astError'
  +'Output(''Unexpected expression'', ast);'#10'        }'#10'        name = as'
  +'t.object.object.object.name;'#10'        return {'#10'          name,'#10' '
  +'         origin: ''user'','#10'            signature: variableSignature,'#10
  +'            type: this.getVariableType(ast.object.object.object),'#10'     '
  +'       zProperty: ast.object.object.property,'#10'            yProperty: as'
  +'t.object.property,'#10'            xProperty: ast.property,'#10'        };'
  +#10'      case ''value[][][][]'':'#10'        if (typeof ast.object.object.o'
  +'bject.object.name !== ''string'') {'#10'          throw this.astErrorOutput'
  +'(''Unexpected expression'', ast);'#10'        }'#10'        name = ast.obje'
  +'ct.object.object.object.name;'#10'        return {'#10'          name,'#10
  +'          origin: ''user'','#10'            signature: variableSignature,'
  +#10'            type: this.getVariableType(ast.object.object.object.object),'
  +#10'            zProperty: ast.object.object.property,'#10'            yProp'
  +'erty: ast.object.property,'#10'            xProperty: ast.property,'#10'   '
  ,'     };'#10'      case ''value.value'':'#10'        if (typeof ast.property'
  +'.name !== ''string'') {'#10'          throw this.astErrorOutput(''Unexpecte'
  +'d expression'', ast);'#10'        }'#10'        if (this.isAstMathVariable('
  +'ast)) {'#10'          name = ast.property.name;'#10'          return {'#10
  +'            name,'#10'            origin: ''Math'','#10'            type: '
  +'''Number'','#10'            signature: variableSignature,'#10'          };'
  +#10'        }'#10'        switch (ast.property.name) {'#10'          case '''
  +'r'':'#10'          case ''g'':'#10'          case ''b'':'#10'          case'
  +' ''a'':'#10'            name = ast.object.name;'#10'            return {'#10
  +'              name,'#10'              property: ast.property.name,'#10'    '
  +'            origin: ''user'','#10'                signature: variableSignat'
  +'ure,'#10'                type: ''Number'''#10'            };'#10'          '
  +'default:'#10'            throw this.astErrorOutput(''Unexpected expression'
  +''', ast);'#10'        }'#10'        case ''this.constants.value'':'#10'    '
  +'      if (typeof ast.property.name !== ''string'') {'#10'            throw '
  +'this.astErrorOutput(''Unexpected expression'', ast);'#10'          }'#10'  '
  +'        name = ast.property.name;'#10'          type = this.getConstantType'
  +'(name);'#10'          if (!type) {'#10'            throw this.astErrorOutpu'
  +'t(''Constant has no type'', ast);'#10'          }'#10'          return {'#10
  +'            name,'#10'            type,'#10'            origin: ''constants'
  +''','#10'              signature: variableSignature,'#10'          };'#10'  '
  +'      case ''this.constants.value[]'':'#10'          if (typeof ast.object.'
  +'property.name !== ''string'') {'#10'            throw this.astErrorOutput('
  +'''Unexpected expression'', ast);'#10'          }'#10'          name = ast.o'
  +'bject.property.name;'#10'          type = this.getConstantType(name);'#10' '
  +'         if (!type) {'#10'            throw this.astErrorOutput(''Constant '
  +'has no type'', ast);'#10'          }'#10'          return {'#10'           '
  +' name,'#10'            type,'#10'            origin: ''constants'','#10'   '
  +'           signature: variableSignature,'#10'              xProperty: ast.p'
  +'roperty,'#10'          };'#10'        case ''this.constants.value[][]'': {'
  +#10'          if (typeof ast.object.object.property.name !== ''string'') {'
  +#10'            throw this.astErrorOutput(''Unexpected expression'', ast);'
  +#10'          }'#10'          name = ast.object.object.property.name;'#10'  '
  +'        type = this.getConstantType(name);'#10'          if (!type) {'#10' '
  +'           throw this.astErrorOutput(''Constant has no type'', ast);'#10'  '
  +'        }'#10'          return {'#10'            name,'#10'            type'
  +','#10'            origin: ''constants'','#10'            signature: variabl'
  +'eSignature,'#10'            yProperty: ast.object.property,'#10'           '
  +' xProperty: ast.property,'#10'          };'#10'        }'#10'        case '
  +'''this.constants.value[][][]'': {'#10'          if (typeof ast.object.objec'
  +'t.object.property.name !== ''string'') {'#10'            throw this.astErro'
  +'rOutput(''Unexpected expression'', ast);'#10'          }'#10'          name'
  +' = ast.object.object.object.property.name;'#10'          type = this.getCon'
  +'stantType(name);'#10'          if (!type) {'#10'            throw this.astE'
  +'rrorOutput(''Constant has no type'', ast);'#10'          }'#10'          re'
  +'turn {'#10'            name,'#10'            type,'#10'            origin: '
  +'''constants'','#10'            signature: variableSignature,'#10'          '
  +'  zProperty: ast.object.object.property,'#10'            yProperty: ast.obj'
  +'ect.property,'#10'            xProperty: ast.property,'#10'          };'#10
  +'        }'#10'        case ''fn()[]'':'#10'        case ''[][]'':'#10'     '
  +'     return {'#10'            signature: variableSignature,'#10'           '
  +'   property: ast.property,'#10'          };'#10'        case ''value.value['
  +']'': '#10'          if (this.removeIstanbulCoverage) {'#10'            retu'
  +'rn { signature: variableSignature };'#10'          }'#10'          if (this'
  +'.onIstanbulCoverageVariable) {'#10'            this.onIstanbulCoverageVaria'
  +'ble(ast.object.object.name);'#10'            return {'#10'              sig'
  +'nature: variableSignature'#10'            };'#10'          }'#10'          '
  +'case ''value.value[][]'': '#10'            if (this.removeIstanbulCoverage)'
  +' {'#10'              return { signature: variableSignature };'#10'         '
  +'   }'#10'            if (this.onIstanbulCoverageVariable) {'#10'           '
  +'   this.onIstanbulCoverageVariable(ast.object.object.object.name);'#10'    '
  +'          return {'#10'                signature: variableSignature'#10'   '
  +'           };'#10'            }'#10'            default:'#10'              '
  +'throw this.astErrorOutput(''Unexpected expression'', ast);'#10'    }'#10'  '
  ,'}'#10#10'  findIdentifierOrigin(astToFind) {'#10'    const stack = [this.as'
  +'t];'#10#10'    while (stack.length > 0) {'#10'      const atNode = stack[0]'
  +';'#10'      if (atNode.type === ''VariableDeclarator'' && atNode.id && atNo'
  +'de.id.name && atNode.id.name === astToFind.name) {'#10'        return atNod'
  +'e;'#10'      }'#10'      stack.shift();'#10'      if (atNode.argument) {'#10
  +'        stack.push(atNode.argument);'#10'      } else if (atNode.body) {'#10
  +'        stack.push(atNode.body);'#10'      } else if (atNode.declarations) '
  +'{'#10'        stack.push(atNode.declarations);'#10'      } else if (Array.i'
  +'sArray(atNode)) {'#10'        for (let i = 0; i < atNode.length; i++) {'#10
  +'          stack.push(atNode[i]);'#10'        }'#10'      }'#10'    }'#10'  '
  +'  return null;'#10'  }'#10#10'  findLastReturn(ast) {'#10'    const stack ='
  +' [ast || this.ast];'#10#10'    while (stack.length > 0) {'#10'      const a'
  +'tNode = stack.pop();'#10'      if (atNode.type === ''ReturnStatement'') {'
  +#10'        return atNode;'#10'      }'#10'      if (atNode.type === ''Funct'
  +'ionDeclaration'') {'#10'        continue;'#10'      }'#10'      if (atNode.'
  +'argument) {'#10'        stack.push(atNode.argument);'#10'      } else if (a'
  +'tNode.body) {'#10'        stack.push(atNode.body);'#10'      } else if (atN'
  +'ode.declarations) {'#10'        stack.push(atNode.declarations);'#10'      '
  +'} else if (Array.isArray(atNode)) {'#10'        for (let i = 0; i < atNode.'
  +'length; i++) {'#10'          stack.push(atNode[i]);'#10'        }'#10'     '
  +' } else if (atNode.consequent) {'#10'        stack.push(atNode.consequent);'
  +#10'      } else if (atNode.cases) {'#10'        stack.push(atNode.cases);'
  +#10'      }'#10'    }'#10'    return null;'#10'  }'#10#10'  getInternalVaria'
  +'bleName(name) {'#10'    if (!this._internalVariableNames.hasOwnProperty(nam'
  +'e)) {'#10'      this._internalVariableNames[name] = 0;'#10'    }'#10'    th'
  +'is._internalVariableNames[name]++;'#10'    if (this._internalVariableNames['
  +'name] === 1) {'#10'      return name;'#10'    }'#10'    return name + this.'
  +'_internalVariableNames[name];'#10'  }'#10#10'  astKey(ast, separator = '','
  +''') {'#10'    if (!ast.start || !ast.end) throw new Error(''AST start and e'
  +'nd needed'');'#10'    return `${ast.start}${separator}${ast.end}`;'#10'  }'
  +#10'}'#10#10'const typeLookupMap = {'#10'  ''Number'': ''Number'','#10'  ''F'
  +'loat'': ''Float'','#10'  ''Integer'': ''Integer'','#10'  ''Array'': ''Numbe'
  +'r'','#10'  ''Array(2)'': ''Number'','#10'  ''Array(3)'': ''Number'','#10'  '
  +'''Array(4)'': ''Number'','#10'  ''Array2D'': ''Number'','#10'  ''Array3D'':'
  +' ''Number'','#10'  ''Input'': ''Number'','#10'  ''HTMLCanvas'': ''Array(4)'
  +''','#10'  ''HTMLImage'': ''Array(4)'','#10'  ''HTMLVideo'': ''Array(4)'','
  +#10'  ''HTMLImageArray'': ''Array(4)'','#10'  ''NumberTexture'': ''Number'','
  +#10'  ''MemoryOptimizedNumberTexture'': ''Number'','#10'  ''Array1D(2)'': '''
  +'Array(2)'','#10'  ''Array1D(3)'': ''Array(3)'','#10'  ''Array1D(4)'': ''Arr'
  +'ay(4)'','#10'  ''Array2D(2)'': ''Array(2)'','#10'  ''Array2D(3)'': ''Array('
  +'3)'','#10'  ''Array2D(4)'': ''Array(4)'','#10'  ''Array3D(2)'': ''Array(2)'
  +''','#10'  ''Array3D(3)'': ''Array(3)'','#10'  ''Array3D(4)'': ''Array(4)'','
  +#10'  ''ArrayTexture(1)'': ''Number'','#10'  ''ArrayTexture(2)'': ''Array(2)'
  +''','#10'  ''ArrayTexture(3)'': ''Array(3)'','#10'  ''ArrayTexture(4)'': ''A'
  +'rray(4)'','#10'};'#10#10'module.exports = {'#10'  FunctionNode'#10'};'#10'}'
  +',{"../utils":114,"./function-tracer":11,"acorn":1}],11:[function(require,mo'
  +'dule,exports){'#10'const { utils } = require(''../utils'');'#10#10'function'
  +' last(array) {'#10'  return array.length > 0 ? array[array.length - 1] : nu'
  +'ll;'#10'}'#10#10'const states = {'#10'  trackIdentifiers: ''trackIdentifier'
  +'s'','#10'  memberExpression: ''memberExpression'','#10'  inForLoopInit: ''i'
  +'nForLoopInit'''#10'};'#10#10'class FunctionTracer {'#10'  constructor(ast) '
  +'{'#10'    this.runningContexts = [];'#10'    this.functionContexts = [];'#10
  +'    this.contexts = [];'#10'    this.functionCalls = [];'#10'    this.decla'
  +'rations = [];'#10'    this.identifiers = [];'#10'    this.functions = [];'
  +#10'    this.returnStatements = [];'#10'    this.trackedIdentifiers = null;'
  +#10'    this.states = [];'#10'    this.newFunctionContext();'#10'    this.sc'
  +'an(ast);'#10'  }'#10#10'  isState(state) {'#10'    return this.states[this.'
  +'states.length - 1] === state;'#10'  }'#10#10'  hasState(state) {'#10'    re'
  +'turn this.states.indexOf(state) > -1;'#10'  }'#10#10'  pushState(state) {'
  +#10'    this.states.push(state);'#10'  }'#10#10'  popState(state) {'#10'    '
  +'if (this.isState(state)) {'#10'      this.states.pop();'#10'    } else {'#10
  +'      throw new Error(`Cannot pop the non-active state "${state}"`);'#10'  '
  +'  }'#10'  }'#10#10'  get currentFunctionContext() {'#10'    return last(thi'
  +'s.functionContexts);'#10'  }'#10#10'  get currentContext() {'#10'    return'
  ,' last(this.runningContexts);'#10'  }'#10#10'  newFunctionContext() {'#10'  '
  +'  const newContext = { ''@contextType'': ''function'' };'#10'    this.conte'
  +'xts.push(newContext);'#10'    this.functionContexts.push(newContext);'#10' '
  +' }'#10#10'  newContext(run) {'#10'    const newContext = Object.assign({ '''
  +'@contextType'': ''const/let'' }, this.currentContext);'#10'    this.context'
  +'s.push(newContext);'#10'    this.runningContexts.push(newContext);'#10'    '
  +'run();'#10'    const { currentFunctionContext } = this;'#10'    for (const '
  +'p in currentFunctionContext) {'#10'      if (!currentFunctionContext.hasOwn'
  +'Property(p) || newContext.hasOwnProperty(p)) continue;'#10'      newContext'
  +'[p] = currentFunctionContext[p];'#10'    }'#10'    this.runningContexts.pop'
  +'();'#10'    return newContext;'#10'  }'#10#10'  useFunctionContext(run) {'
  +#10'    const functionContext = last(this.functionContexts);'#10'    this.ru'
  +'nningContexts.push(functionContext);'#10'    run();'#10'    this.runningCon'
  +'texts.pop();'#10'  }'#10#10'  getIdentifiers(run) {'#10'    const trackedId'
  +'entifiers = this.trackedIdentifiers = [];'#10'    this.pushState(states.tra'
  +'ckIdentifiers);'#10'    run();'#10'    this.trackedIdentifiers = null;'#10
  +'    this.popState(states.trackIdentifiers);'#10'    return trackedIdentifie'
  +'rs;'#10'  }'#10#10'  getDeclaration(name) {'#10'    const { currentContext,'
  +' currentFunctionContext } = this;'#10'    return currentContext[name] || cu'
  +'rrentFunctionContext[name] || null;'#10'  }'#10#10'  scan(ast) {'#10'    if'
  +' (!ast) return;'#10'    if (Array.isArray(ast)) {'#10'      for (let i = 0;'
  +' i < ast.length; i++) {'#10'        this.scan(ast[i]);'#10'      }'#10'    '
  +'  return;'#10'    }'#10'    switch (ast.type) {'#10'      case ''Program'':'
  +#10'        this.useFunctionContext(() => {'#10'          this.scan(ast.body'
  +');'#10'        });'#10'        break;'#10'      case ''BlockStatement'':'#10
  +'        this.newContext(() => {'#10'          this.scan(ast.body);'#10'    '
  +'    });'#10'        break;'#10'      case ''AssignmentExpression'':'#10'   '
  +'   case ''LogicalExpression'':'#10'        this.scan(ast.left);'#10'       '
  +' this.scan(ast.right);'#10'        break;'#10'      case ''BinaryExpression'
  +''':'#10'        this.scan(ast.left);'#10'        this.scan(ast.right);'#10
  +'        break;'#10'      case ''UpdateExpression'':'#10'        if (ast.ope'
  +'rator === ''++'') {'#10'          const declaration = this.getDeclaration(a'
  +'st.argument.name);'#10'          if (declaration) {'#10'            declara'
  +'tion.suggestedType = ''Integer'';'#10'          }'#10'        }'#10'       '
  +' this.scan(ast.argument);'#10'        break;'#10'      case ''UnaryExpressi'
  +'on'':'#10'        this.scan(ast.argument);'#10'        break;'#10'      cas'
  +'e ''VariableDeclaration'':'#10'        if (ast.kind === ''var'') {'#10'    '
  +'      this.useFunctionContext(() => {'#10'            ast.declarations = ut'
  +'ils.normalizeDeclarations(ast);'#10'            this.scan(ast.declarations)'
  +';'#10'          });'#10'        } else {'#10'          ast.declarations = u'
  +'tils.normalizeDeclarations(ast);'#10'          this.scan(ast.declarations);'
  +#10'        }'#10'        break;'#10'      case ''VariableDeclarator'': {'#10
  +'        const { currentContext } = this;'#10'        const inForLoopInit = '
  +'this.hasState(states.inForLoopInit);'#10'        const declaration = {'#10
  +'          ast: ast,'#10'          context: currentContext,'#10'          na'
  +'me: ast.id.name,'#10'          origin: ''declaration'','#10'          inFor'
  +'LoopInit,'#10'          inForLoopTest: null,'#10'          assignable: curr'
  +'entContext === this.currentFunctionContext || (!inForLoopInit && !currentCo'
  +'ntext.hasOwnProperty(ast.id.name)),'#10'          suggestedType: null,'#10
  +'          valueType: null,'#10'          dependencies: null,'#10'          '
  +'isSafe: null,'#10'        };'#10'        if (!currentContext[ast.id.name]) '
  +'{'#10'          currentContext[ast.id.name] = declaration;'#10'        }'#10
  +'        this.declarations.push(declaration);'#10'        this.scan(ast.id);'
  +#10'        this.scan(ast.init);'#10'        break;'#10'      }'#10'      ca'
  +'se ''FunctionExpression'':'#10'      case ''FunctionDeclaration'':'#10'    '
  +'    if (this.runningContexts.length === 0) {'#10'          this.scan(ast.bo'
  +'dy);'#10'        } else {'#10'          this.functions.push(ast);'#10'     '
  +'   }'#10'        break;'#10'      case ''IfStatement'':'#10'        this.sc'
  +'an(ast.test);'#10'        this.scan(ast.consequent);'#10'        if (ast.al'
  +'ternate) this.scan(ast.alternate);'#10'        break;'#10'      case ''ForS'
  +'tatement'': {'#10'        let testIdentifiers;'#10'        const context = '
  +'this.newContext(() => {'#10'          this.pushState(states.inForLoopInit);'
  +#10'          this.scan(ast.init);'#10'          this.popState(states.inForL'
  +'oopInit);'#10#10'          testIdentifiers = this.getIdentifiers(() => {'#10
  ,'            this.scan(ast.test);'#10'          });'#10#10'          this.sc'
  +'an(ast.update);'#10'          this.newContext(() => {'#10'            this.'
  +'scan(ast.body);'#10'          });'#10'        });'#10#10'        if (testId'
  +'entifiers) {'#10'          for (const p in context) {'#10'            if (p'
  +' === ''@contextType'') continue;'#10'            if (testIdentifiers.indexO'
  +'f(p) > -1) {'#10'              context[p].inForLoopTest = true;'#10'       '
  +'     }'#10'          }'#10'        }'#10'        break;'#10'      }'#10'   '
  +'   case ''DoWhileStatement'':'#10'      case ''WhileStatement'':'#10'      '
  +'  this.newContext(() => {'#10'          this.scan(ast.body);'#10'          '
  +'this.scan(ast.test);'#10'        });'#10'        break;'#10'      case ''Id'
  +'entifier'': {'#10'        if (this.isState(states.trackIdentifiers)) {'#10
  +'          this.trackedIdentifiers.push(ast.name);'#10'        }'#10'       '
  +' this.identifiers.push({'#10'          context: this.currentContext,'#10'  '
  +'        declaration: this.getDeclaration(ast.name),'#10'          ast,'#10
  +'        });'#10'        break;'#10'      }'#10'      case ''ReturnStatement'
  +''':'#10'        this.returnStatements.push(ast);'#10'        this.scan(ast.'
  +'argument);'#10'        break;'#10'      case ''MemberExpression'':'#10'    '
  +'    this.pushState(states.memberExpression);'#10'        this.scan(ast.obje'
  +'ct);'#10'        this.scan(ast.property);'#10'        this.popState(states.'
  +'memberExpression);'#10'        break;'#10'      case ''ExpressionStatement'
  +''':'#10'        this.scan(ast.expression);'#10'        break;'#10'      cas'
  +'e ''SequenceExpression'':'#10'        this.scan(ast.expressions);'#10'     '
  +'   break;'#10'      case ''CallExpression'':'#10'        this.functionCalls'
  +'.push({'#10'          context: this.currentContext,'#10'          ast,'#10
  +'        });'#10'        this.scan(ast.arguments);'#10'        break;'#10'  '
  +'    case ''ArrayExpression'':'#10'        this.scan(ast.elements);'#10'    '
  +'    break;'#10'      case ''ConditionalExpression'':'#10'        this.scan('
  +'ast.test);'#10'        this.scan(ast.alternate);'#10'        this.scan(ast.'
  +'consequent);'#10'        break;'#10'      case ''SwitchStatement'':'#10'   '
  +'     this.scan(ast.discriminant);'#10'        this.scan(ast.cases);'#10'   '
  +'     break;'#10'      case ''SwitchCase'':'#10'        this.scan(ast.test);'
  +#10'        this.scan(ast.consequent);'#10'        break;'#10#10'      case '
  +'''ThisExpression'':'#10'      case ''Literal'':'#10'      case ''DebuggerSt'
  +'atement'':'#10'      case ''EmptyStatement'':'#10'      case ''BreakStateme'
  +'nt'':'#10'      case ''ContinueStatement'':'#10'        break;'#10'      de'
  +'fault:'#10'        throw new Error(`unhandled type "${ast.type}"`);'#10'   '
  +' }'#10'  }'#10'}'#10#10'module.exports = {'#10'  FunctionTracer,'#10'};'#10
  +'},{"../utils":114}],12:[function(require,module,exports){'#10'const { glWir'
  +'etap } = require(''gl-wiretap'');'#10'const { utils } = require(''../../uti'
  +'ls'');'#10#10'function toStringWithoutUtils(fn) {'#10'  return fn.toString('
  +')'#10'    .replace(''=>'', '''')'#10'    .replace(/^function /, '''')'#10' '
  +'   .replace(/utils[.]/g, ''/*utils.*/'');'#10'}'#10#10'function glKernelStr'
  +'ing(Kernel, args, originKernel, setupContextString, destroyContextString) {'
  +#10'  if (!originKernel.built) {'#10'    originKernel.build.apply(originKern'
  +'el, args);'#10'  }'#10'  args = args ? Array.from(args).map(arg => {'#10'  '
  +'  switch (typeof arg) {'#10'      case ''boolean'':'#10'        return new '
  +'Boolean(arg);'#10'      case ''number'':'#10'        return new Number(arg)'
  +';'#10'      default:'#10'        return arg;'#10'    }'#10'  }) : null;'#10
  +'  const uploadedValues = [];'#10'  const postResult = [];'#10'  const conte'
  +'xt = glWiretap(originKernel.context, {'#10'    useTrackablePrimitives: true'
  +','#10'    onReadPixels: (targetName) => {'#10'      if (kernel.subKernels) '
  +'{'#10'        if (!subKernelsResultVariableSetup) {'#10'          postResul'
  +'t.push(`    const result = { result: ${getRenderString(targetName, kernel)}'
  +' };`);'#10'          subKernelsResultVariableSetup = true;'#10'        } el'
  +'se {'#10'          const property = kernel.subKernels[subKernelsResultIndex'
  +'++].property;'#10'          postResult.push(`    result${isNaN(property) ? '
  +'''.'' + property : `[${property}]`} = ${getRenderString(targetName, kernel)'
  +'};`);'#10'        }'#10'        if (subKernelsResultIndex === kernel.subKer'
  +'nels.length) {'#10'          postResult.push(''    return result;'');'#10' '
  +'       }'#10'        return;'#10'      }'#10'      if (targetName) {'#10'  '
  +'      postResult.push(`    return ${getRenderString(targetName, kernel)};`)'
  +';'#10'      } else {'#10'        postResult.push(`    return null;`);'#10' '
  +'     }'#10'    },'#10'    onUnrecognizedArgumentLookup: (argument) => {'#10
  +'      const argumentName = findKernelValue(argument, kernel.kernelArguments'
  ,', [], context, uploadedValues);'#10'      if (argumentName) {'#10'        r'
  +'eturn argumentName;'#10'      }'#10'      const constantName = findKernelVa'
  +'lue(argument, kernel.kernelConstants, constants ? Object.keys(constants).ma'
  +'p(key => constants[key]) : [], context, uploadedValues);'#10'      if (cons'
  +'tantName) {'#10'        return constantName;'#10'      }'#10'      return n'
  +'ull;'#10'    }'#10'  });'#10'  let subKernelsResultVariableSetup = false;'
  +#10'  let subKernelsResultIndex = 0;'#10'  const {'#10'    source,'#10'    c'
  +'anvas,'#10'    output,'#10'    pipeline,'#10'    graphical,'#10'    loopMax'
  +'Iterations,'#10'    constants,'#10'    optimizeFloatMemory,'#10'    precisi'
  +'on,'#10'    fixIntegerDivisionAccuracy,'#10'    functions,'#10'    nativeFu'
  +'nctions,'#10'    subKernels,'#10'    immutable,'#10'    argumentTypes,'#10
  +'    constantTypes,'#10'    kernelArguments,'#10'    kernelConstants,'#10'  '
  +'  tactic,'#10'  } = originKernel;'#10'  const kernel = new Kernel(source, {'
  +#10'    canvas,'#10'    context,'#10'    checkContext: false,'#10'    output'
  +','#10'    pipeline,'#10'    graphical,'#10'    loopMaxIterations,'#10'    c'
  +'onstants,'#10'    optimizeFloatMemory,'#10'    precision,'#10'    fixIntege'
  +'rDivisionAccuracy,'#10'    functions,'#10'    nativeFunctions,'#10'    subK'
  +'ernels,'#10'    immutable,'#10'    argumentTypes,'#10'    constantTypes,'#10
  +'    tactic,'#10'  });'#10'  let result = [];'#10'  context.setIndent(2);'#10
  +'  kernel.build.apply(kernel, args);'#10'  result.push(context.toString());'
  +#10'  context.reset();'#10#10'  kernel.kernelArguments.forEach((kernelArgume'
  +'nt, i) => {'#10'    switch (kernelArgument.type) {'#10'      case ''Integer'
  +''':'#10'      case ''Boolean'':'#10'      case ''Number'':'#10'      case '
  +'''Float'':'#10'      case ''Array'':'#10'      case ''Array(2)'':'#10'     '
  +' case ''Array(3)'':'#10'      case ''Array(4)'':'#10'      case ''HTMLCanva'
  +'s'':'#10'      case ''HTMLImage'':'#10'      case ''HTMLVideo'':'#10'      '
  +'  context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgume'
  +'nt.uploadValue);'#10'        break;'#10'      case ''HTMLImageArray'':'#10
  +'        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++)'
  +' {'#10'          const arg = args[i];'#10'          context.insertVariable('
  +'`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);'#10
  +'        }'#10'        break;'#10'      case ''Input'':'#10'        context.'
  +'insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadV'
  +'alue);'#10'        break;'#10'      case ''MemoryOptimizedNumberTexture'':'
  +#10'      case ''NumberTexture'':'#10'      case ''Array1D(2)'':'#10'      c'
  +'ase ''Array1D(3)'':'#10'      case ''Array1D(4)'':'#10'      case ''Array2D'
  +'(2)'':'#10'      case ''Array2D(3)'':'#10'      case ''Array2D(4)'':'#10'  '
  +'    case ''Array3D(2)'':'#10'      case ''Array3D(3)'':'#10'      case ''Ar'
  +'ray3D(4)'':'#10'      case ''ArrayTexture(1)'':'#10'      case ''ArrayTextu'
  +'re(2)'':'#10'      case ''ArrayTexture(3)'':'#10'      case ''ArrayTexture('
  +'4)'':'#10'        context.insertVariable(`uploadValue_${kernelArgument.name'
  +'}`, args[i].texture);'#10'        break;'#10'      default:'#10'        thr'
  +'ow new Error(`unhandled kernelArgumentType insertion for glWiretap of type '
  +'${kernelArgument.type}`);'#10'    }'#10'  });'#10'  result.push(''/** start'
  +' of injected functions **/'');'#10'  result.push(`function ${toStringWithou'
  +'tUtils(utils.flattenTo)}`);'#10'  result.push(`function ${toStringWithoutUt'
  +'ils(utils.flatten2dArrayTo)}`);'#10'  result.push(`function ${toStringWitho'
  +'utUtils(utils.flatten3dArrayTo)}`);'#10'  result.push(`function ${toStringW'
  +'ithoutUtils(utils.flatten4dArrayTo)}`);'#10'  result.push(`function ${toStr'
  +'ingWithoutUtils(utils.isArray)}`);'#10'  if (kernel.renderOutput !== kernel'
  +'.renderTexture && kernel.formatValues) {'#10'    result.push('#10'      `  '
  +'const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};'
  +'`'#10'    );'#10'  }'#10'  result.push(''/** end of injected functions **/'
  +''');'#10'  result.push(`  const innerKernel = function (${kernel.kernelArgu'
  +'ments.map(kernelArgument => kernelArgument.varName).join('', '')}) {`);'#10
  +'  context.setIndent(4);'#10'  kernel.run.apply(kernel, args);'#10'  if (ker'
  +'nel.renderKernels) {'#10'    kernel.renderKernels();'#10'  } else if (kerne'
  +'l.renderOutput) {'#10'    kernel.renderOutput();'#10'  }'#10'  result.push('
  +'''    /** start setup uploads for kernel values **/'');'#10'  kernel.kernel'
  +'Arguments.forEach(kernelArgument => {'#10'    result.push(''    '' + kernel'
  +'Argument.getStringValueHandler().split(''\n'').join(''\n    ''));'#10'  });'
  +#10'  result.push(''    /** end setup uploads for kernel values **/'');'#10
  +'  result.push(context.toString());'#10'  if (kernel.renderOutput === kernel'
  +'.renderTexture) {'#10'    context.reset();'#10'    if (kernel.renderKernels'
  ,') {'#10'      const results = kernel.renderKernels();'#10'      const textu'
  +'reName = context.getContextVariableName(kernel.texture.texture);'#10'      '
  +'result.push(`    return {'#10'      result: {'#10'        texture: ${ textu'
  +'reName },'#10'        type: ''${ results.result.type }'','#10'        toArr'
  +'ay: ${ getToArrayString(results.result, textureName) }'#10'      },`);'#10
  +'      const { subKernels, mappedTextures } = kernel;'#10'      for (let i ='
  +' 0; i < subKernels.length; i++) {'#10'        const texture = mappedTexture'
  +'s[i];'#10'        const subKernel = subKernels[i];'#10'        const subKer'
  +'nelResult = results[subKernel.property];'#10'        const subKernelTexture'
  +'Name = context.getContextVariableName(texture.texture);'#10'        result.'
  +'push(`'#10'      ${subKernel.property}: {'#10'        texture: ${ subKernel'
  +'TextureName },'#10'        type: ''${ subKernelResult.type }'','#10'       '
  +' toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }'#10
  +'      },`);'#10'      }'#10'      result.push(`    };`);'#10'    } else {'
  +#10'      const rendered = kernel.renderOutput();'#10'      const textureNam'
  +'e = context.getContextVariableName(kernel.texture.texture);'#10'      resul'
  +'t.push(`    return {'#10'        texture: ${ textureName },'#10'        typ'
  +'e: ''${ rendered.type }'','#10'        toArray: ${ getToArrayString(rendere'
  +'d, textureName) }'#10'      };`);'#10'    }'#10'  }'#10'  result.push(`    '
  +'${destroyContextString ? ''\n'' + destroyContextString + ''    '': ''''}`);'
  +#10'  result.push(postResult.join(''\n''));'#10'  result.push(''  };'');'#10
  +'  if (kernel.graphical) {'#10'    result.push(getGetPixelsString(kernel));'
  +#10'    result.push(`  innerKernel.getPixels = getPixels;`);'#10'  }'#10'  r'
  +'esult.push(''  return innerKernel;'');'#10#10'  let constantsUpload = [];'
  +#10'  kernelConstants.forEach((kernelConstant) => {'#10'    constantsUpload.'
  +'push(`${  kernelConstant.getStringValueHandler()}`);'#10'  });'#10'  return'
  +' `function kernel(settings) {'#10'  const { context, constants } = settings'
  +';'#10'  ${constantsUpload.join('''')}'#10'  ${setupContextString ? setupCon'
  +'textString : ''''}'#10'${result.join(''\n'')}'#10'}`;'#10'}'#10#10'function'
  +' getRenderString(targetName, kernel) {'#10'  const readBackValue = kernel.p'
  +'recision === ''single'' ? targetName : `new Float32Array(${targetName}.buff'
  +'er)`;'#10'  if (kernel.output[2]) {'#10'    return `renderOutput(${readBack'
  +'Value}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;'#10
  +'  }'#10'  if (kernel.output[1]) {'#10'    return `renderOutput(${readBackVa'
  +'lue}, ${kernel.output[0]}, ${kernel.output[1]})`;'#10'  }'#10#10'  return `'
  +'renderOutput(${readBackValue}, ${kernel.output[0]})`;'#10'}'#10#10'function'
  +' getGetPixelsString(kernel) {'#10'  const getPixels = kernel.getPixels.toSt'
  +'ring();'#10'  const useFunctionKeyword = !/^function/.test(getPixels);'#10
  +'  return utils.flattenFunctionToString(`${useFunctionKeyword ? ''function '
  +''' : ''''}${ getPixels }`, {'#10'    findDependency: (object, name) => {'#10
  +'      if (object === ''utils'') {'#10'        return `const ${name} = ${uti'
  +'ls[name].toString()};`;'#10'      }'#10'      return null;'#10'    },'#10' '
  +'   thisLookup: (property) => {'#10'      if (property === ''context'') {'#10
  +'        return null;'#10'      }'#10'      if (kernel.hasOwnProperty(proper'
  +'ty)) {'#10'        return JSON.stringify(kernel[property]);'#10'      }'#10
  +'      throw new Error(`unhandled thisLookup ${ property }`);'#10'    }'#10
  +'  });'#10'}'#10#10'function getToArrayString(kernelResult, textureName) {'
  +#10'  const toArray = kernelResult.toArray.toString();'#10'  const useFuncti'
  +'onKeyword = !/^function/.test(toArray);'#10'  const flattenedFunctions = ut'
  +'ils.flattenFunctionToString(`${useFunctionKeyword ? ''function '' : ''''}${'
  +' toArray }`, {'#10'    findDependency: (object, name) => {'#10'      if (ob'
  +'ject === ''utils'') {'#10'        return `const ${name} = ${utils[name].toS'
  +'tring()};`;'#10'      } else if (object === ''this'') {'#10'        return '
  +'`${useFunctionKeyword ? ''function '' : ''''}${kernelResult[name].toString('
  +')}`;'#10'      } else {'#10'        throw new Error(''unhandled fromObject'
  +''');'#10'      }'#10'    },'#10'    thisLookup: (property, isDeclaration) ='
  +'> {'#10'      if (property === ''texture'') {'#10'        return textureNam'
  +'e;'#10'      }'#10'      if (property === ''context'') {'#10'        if (is'
  +'Declaration) return null;'#10'        return ''gl'';'#10'      }'#10'      '
  +'if (property === ''_framebuffer'') {'#10'        return ''_framebuffer'';'
  +#10'      }'#10'      if (kernelResult.hasOwnProperty(property)) {'#10'     '
  +'   return JSON.stringify(kernelResult[property]);'#10'      }'#10'      thr'
  +'ow new Error(`unhandled thisLookup ${ property }`);'#10'    }'#10'  });'#10
  +'  return `() => {'#10'  let _framebuffer;'#10'  ${flattenedFunctions}'#10' '
  ,' return toArray();'#10'  }`;'#10'}'#10#10'function findKernelValue(argument'
  +', kernelValues, values, context, uploadedValues) {'#10'  if (argument === n'
  +'ull) return null;'#10'  if (kernelValues === null) return null;'#10'  switc'
  +'h (typeof argument) {'#10'    case ''boolean'':'#10'    case ''number'':'#10
  +'      return null;'#10'  }'#10'  if ('#10'    typeof HTMLImageElement !== '
  +'''undefined'' &&'#10'    argument instanceof HTMLImageElement'#10'  ) {'#10
  +'    for (let i = 0; i < kernelValues.length; i++) {'#10'      const kernelV'
  +'alue = kernelValues[i];'#10'      if (kernelValue.type !== ''HTMLImageArray'
  +''' && kernelValue) continue;'#10'      if (kernelValue.uploadValue !== argu'
  +'ment) continue;'#10'      const variableIndex = values[i].indexOf(argument)'
  +';'#10'      if (variableIndex === -1) continue;'#10'      const variableNam'
  +'e = `uploadValue_${kernelValue.name}[${variableIndex}]`;'#10'      context.'
  +'insertVariable(variableName, argument);'#10'      return variableName;'#10
  +'    }'#10'  }'#10#10'  for (let i = 0; i < kernelValues.length; i++) {'#10
  +'    const kernelValue = kernelValues[i];'#10'    if (argument !== kernelVal'
  +'ue.uploadValue) continue;'#10'    const variable = `uploadValue_${kernelVal'
  +'ue.name}`;'#10'    context.insertVariable(variable, kernelValue);'#10'    r'
  +'eturn variable;'#10'  }'#10'  return null;'#10'}'#10#10'module.exports = {'
  +#10'  glKernelString'#10'};'#10'},{"../../utils":114,"gl-wiretap":3}],13:[fu'
  +'nction(require,module,exports){'#10'const { Kernel } = require(''../kernel'
  +''');'#10'const { utils } = require(''../../utils'');'#10'const { GLTextureA'
  +'rray2Float } = require(''./texture/array-2-float'');'#10'const { GLTextureA'
  +'rray2Float2D } = require(''./texture/array-2-float-2d'');'#10'const { GLTex'
  +'tureArray2Float3D } = require(''./texture/array-2-float-3d'');'#10'const { '
  +'GLTextureArray3Float } = require(''./texture/array-3-float'');'#10'const { '
  +'GLTextureArray3Float2D } = require(''./texture/array-3-float-2d'');'#10'con'
  +'st { GLTextureArray3Float3D } = require(''./texture/array-3-float-3d'');'#10
  +'const { GLTextureArray4Float } = require(''./texture/array-4-float'');'#10
  +'const { GLTextureArray4Float2D } = require(''./texture/array-4-float-2d'');'
  +#10'const { GLTextureArray4Float3D } = require(''./texture/array-4-float-3d'
  +''');'#10'const { GLTextureFloat } = require(''./texture/float'');'#10'const'
  +' { GLTextureFloat2D } = require(''./texture/float-2d'');'#10'const { GLText'
  +'ureFloat3D } = require(''./texture/float-3d'');'#10'const { GLTextureMemory'
  +'Optimized } = require(''./texture/memory-optimized'');'#10'const { GLTextur'
  +'eMemoryOptimized2D } = require(''./texture/memory-optimized-2d'');'#10'cons'
  +'t { GLTextureMemoryOptimized3D } = require(''./texture/memory-optimized-3d'
  +''');'#10'const { GLTextureUnsigned } = require(''./texture/unsigned'');'#10
  +'const { GLTextureUnsigned2D } = require(''./texture/unsigned-2d'');'#10'con'
  +'st { GLTextureUnsigned3D } = require(''./texture/unsigned-3d'');'#10'const '
  +'{ GLTextureGraphical } = require(''./texture/graphical'');'#10#10'class GLK'
  +'ernel extends Kernel {'#10'  static get mode() {'#10'    return ''gpu'';'#10
  +'  }'#10#10'  static getIsFloatRead() {'#10'    const kernelString = `functi'
  +'on kernelFunction() {'#10'      return 1;'#10'    }`;'#10'    const kernel '
  +'= new this(kernelString, {'#10'      context: this.testContext,'#10'      c'
  +'anvas: this.testCanvas,'#10'      validate: false,'#10'      output: [1],'
  +#10'      precision: ''single'','#10'      returnType: ''Number'','#10'     '
  +' tactic: ''speed'','#10'    });'#10'    kernel.build();'#10'    kernel.run('
  +');'#10'    const result = kernel.renderOutput();'#10'    kernel.destroy(tru'
  +'e);'#10'    return result[0] === 1;'#10'  }'#10#10'  static getIsIntegerDiv'
  +'isionAccurate() {'#10'    function kernelFunction(v1, v2) {'#10'      retur'
  +'n v1[this.thread.x] / v2[this.thread.x];'#10'    }'#10'    const kernel = n'
  +'ew this(kernelFunction.toString(), {'#10'      context: this.testContext,'
  +#10'      canvas: this.testCanvas,'#10'      validate: false,'#10'      outp'
  +'ut: [2],'#10'      returnType: ''Number'','#10'      precision: ''unsigned'
  +''','#10'      tactic: ''speed'','#10'    });'#10'    const args = ['#10'   '
  +'   [6, 6030401],'#10'      [3, 3991]'#10'    ];'#10'    kernel.build.apply('
  +'kernel, args);'#10'    kernel.run.apply(kernel, args);'#10'    const result'
  +' = kernel.renderOutput();'#10'    kernel.destroy(true);'#10'    return resu'
  +'lt[0] === 2 && result[1] === 1511;'#10'  }'#10#10'  static getIsSpeedTactic'
  +'Supported() {'#10'    function kernelFunction(value) {'#10'      return val'
  +'ue[this.thread.x];'#10'    }'#10'    const kernel = new this(kernelFunction'
  +'.toString(), {'#10'      context: this.testContext,'#10'      canvas: this.'
  +'testCanvas,'#10'      validate: false,'#10'      output: [4],'#10'      ret'
  +'urnType: ''Number'','#10'      precision: ''unsigned'','#10'      tactic: '
  ,'''speed'','#10'    });'#10'    const args = ['#10'      [0, 1, 2, 3]'#10'  '
  +'  ];'#10'    kernel.build.apply(kernel, args);'#10'    kernel.run.apply(ker'
  +'nel, args);'#10'    const result = kernel.renderOutput();'#10'    kernel.de'
  +'stroy(true);'#10'    return Math.round(result[0]) === 0 && Math.round(resul'
  +'t[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;'
  +#10'  }'#10#10'  static get testCanvas() {'#10'    throw new Error(`"testCan'
  +'vas" not defined on ${ this.name }`);'#10'  }'#10#10'  static get testConte'
  +'xt() {'#10'    throw new Error(`"testContext" not defined on ${ this.name }'
  +'`);'#10'  }'#10#10'  static getFeatures() {'#10'    const gl = this.testCon'
  +'text;'#10'    const isDrawBuffers = this.getIsDrawBuffers();'#10'    return'
  +' Object.freeze({'#10'      isFloatRead: this.getIsFloatRead(),'#10'      is'
  +'IntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),'#10'      isS'
  +'peedTacticSupported: this.getIsSpeedTacticSupported(),'#10'      isTextureF'
  +'loat: this.getIsTextureFloat(),'#10'      isDrawBuffers,'#10'      kernelMa'
  +'p: isDrawBuffers,'#10'      channelCount: this.getChannelCount(),'#10'     '
  +' maxTextureSize: this.getMaxTextureSize(),'#10'      lowIntPrecision: gl.ge'
  +'tShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),'#10'      lowFloatP'
  +'recision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),'#10
  +'      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, g'
  +'l.MEDIUM_INT),'#10'      mediumFloatPrecision: gl.getShaderPrecisionFormat('
  +'gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),'#10'      highIntPrecision: gl.getSha'
  +'derPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),'#10'      highFloatPre'
  +'cision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),'#10
  +'    });'#10'  }'#10#10'  static setupFeatureChecks() {'#10'    throw new Er'
  +'ror(`"setupFeatureChecks" not defined on ${ this.name }`);'#10'  }'#10#10' '
  +' static getSignature(kernel, argumentTypes) {'#10'    return kernel.getVari'
  +'ablePrecisionString() + (argumentTypes.length > 0 ? '':'' + argumentTypes.j'
  +'oin('','') : '''');'#10'  }'#10#10'  setFixIntegerDivisionAccuracy(fix) {'
  +#10'    this.fixIntegerDivisionAccuracy = fix;'#10'    return this;'#10'  }'
  +#10#10'  setPrecision(flag) {'#10'    this.precision = flag;'#10'    return '
  +'this;'#10'  }'#10#10'  setFloatTextures(flag) {'#10'    utils.warnDeprecate'
  +'d(''method'', ''setFloatTextures'', ''setOptimizeFloatMemory'');'#10'    th'
  +'is.floatTextures = flag;'#10'    return this;'#10'  }'#10#10'  static nativ'
  +'eFunctionArguments(source) {'#10'    const argumentTypes = [];'#10'    cons'
  +'t argumentNames = [];'#10'    const states = [];'#10'    const isStartingVa'
  +'riableName = /^[a-zA-Z_]/;'#10'    const isVariableChar = /[a-zA-Z_0-9]/;'
  +#10'    let i = 0;'#10'    let argumentName = null;'#10'    let argumentType'
  +' = null;'#10'    while (i < source.length) {'#10'      const char = source['
  +'i];'#10'      const nextChar = source[i + 1];'#10'      const state = state'
  +'s.length > 0 ? states[states.length - 1] : null;'#10#10'      if (state ==='
  +' ''FUNCTION_ARGUMENTS'' && char === ''/'' && nextChar === ''*'') {'#10'    '
  +'    states.push(''MULTI_LINE_COMMENT'');'#10'        i += 2;'#10'        co'
  +'ntinue;'#10'      } else if (state === ''MULTI_LINE_COMMENT'' && char === '
  +'''*'' && nextChar === ''/'') {'#10'        states.pop();'#10'        i += 2'
  +';'#10'        continue;'#10'      }'#10#10'      else if (state === ''FUNCT'
  +'ION_ARGUMENTS'' && char === ''/'' && nextChar === ''/'') {'#10'        stat'
  +'es.push(''COMMENT'');'#10'        i += 2;'#10'        continue;'#10'      }'
  +' else if (state === ''COMMENT'' && char === ''\n'') {'#10'        states.po'
  +'p();'#10'        i++;'#10'        continue;'#10'      }'#10#10'      else i'
  +'f (state === null && char === ''('') {'#10'        states.push(''FUNCTION_A'
  +'RGUMENTS'');'#10'        i++;'#10'        continue;'#10'      } else if (st'
  +'ate === ''FUNCTION_ARGUMENTS'') {'#10'        if (char === '')'') {'#10'   '
  +'       states.pop();'#10'          break;'#10'        }'#10'        if (cha'
  +'r === ''f'' && nextChar === ''l'' && source[i + 2] === ''o'' && source[i + '
  +'3] === ''a'' && source[i + 4] === ''t'' && source[i + 5] === '' '') {'#10' '
  +'         states.push(''DECLARE_VARIABLE'');'#10'          argumentType = '''
  +'float'';'#10'          argumentName = '''';'#10'          i += 6;'#10'     '
  +'     continue;'#10'        } else if (char === ''i'' && nextChar === ''n'' '
  +'&& source[i + 2] === ''t'' && source[i + 3] === '' '') {'#10'          stat'
  +'es.push(''DECLARE_VARIABLE'');'#10'          argumentType = ''int'';'#10'  '
  +'        argumentName = '''';'#10'          i += 4;'#10'          continue;'
  +#10'        } else if (char === ''v'' && nextChar === ''e'' && source[i + 2]'
  +' === ''c'' && source[i + 3] === ''2'' && source[i + 4] === '' '') {'#10'   '
  +'       states.push(''DECLARE_VARIABLE'');'#10'          argumentType = ''ve'
  ,'c2'';'#10'          argumentName = '''';'#10'          i += 5;'#10'        '
  +'  continue;'#10'        } else if (char === ''v'' && nextChar === ''e'' && '
  +'source[i + 2] === ''c'' && source[i + 3] === ''3'' && source[i + 4] === '' '
  +''') {'#10'          states.push(''DECLARE_VARIABLE'');'#10'          argume'
  +'ntType = ''vec3'';'#10'          argumentName = '''';'#10'          i += 5;'
  +#10'          continue;'#10'        } else if (char === ''v'' && nextChar =='
  +'= ''e'' && source[i + 2] === ''c'' && source[i + 3] === ''4'' && source[i +'
  +' 4] === '' '') {'#10'          states.push(''DECLARE_VARIABLE'');'#10'     '
  +'     argumentType = ''vec4'';'#10'          argumentName = '''';'#10'      '
  +'    i += 5;'#10'          continue;'#10'        }'#10'      }'#10#10'      '
  +'else if (state === ''DECLARE_VARIABLE'') {'#10'        if (argumentName ==='
  +' '''') {'#10'          if (char === '' '') {'#10'            i++;'#10'     '
  +'       continue;'#10'          }'#10'          if (!isStartingVariableName.'
  +'test(char)) {'#10'            throw new Error(''variable name is not expect'
  +'ed string'');'#10'          }'#10'        }'#10'        argumentName += cha'
  +'r;'#10'        if (!isVariableChar.test(nextChar)) {'#10'          states.p'
  +'op();'#10'          argumentNames.push(argumentName);'#10'          argumen'
  +'tTypes.push(typeMap[argumentType]);'#10'        }'#10'      }'#10#10'      '
  +'i++;'#10'    }'#10'    if (states.length > 0) {'#10'      throw new Error('
  +'''GLSL function was not parsable'');'#10'    }'#10'    return {'#10'      a'
  +'rgumentNames,'#10'      argumentTypes,'#10'    };'#10'  }'#10#10'  static n'
  +'ativeFunctionReturnType(source) {'#10'    return typeMap[source.match(/int|'
  +'float|vec[2-4]/)[0]];'#10'  }'#10#10'  static combineKernels(combinedKernel'
  +', lastKernel) {'#10'    combinedKernel.apply(null, arguments);'#10'    cons'
  +'t {'#10'      texSize,'#10'      context,'#10'      threadDim'#10'    } = l'
  +'astKernel.texSize;'#10'    let result;'#10'    if (lastKernel.precision ==='
  +' ''single'') {'#10'      const w = texSize[0];'#10'      const h = Math.cei'
  +'l(texSize[1] / 4);'#10'      result = new Float32Array(w * h * 4 * 4);'#10
  +'      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, resul'
  +'t);'#10'    } else {'#10'      const bytes = new Uint8Array(texSize[0] * te'
  +'xSize[1] * 4);'#10'      context.readPixels(0, 0, texSize[0], texSize[1], c'
  +'ontext.RGBA, context.UNSIGNED_BYTE, bytes);'#10'      result = new Float32A'
  +'rray(bytes.buffer);'#10'    }'#10#10'    result = result.subarray(0, thread'
  +'Dim[0] * threadDim[1] * threadDim[2]);'#10#10'    if (lastKernel.output.len'
  +'gth === 1) {'#10'      return result;'#10'    } else if (lastKernel.output.'
  +'length === 2) {'#10'      return utils.splitArray(result, lastKernel.output'
  +'[0]);'#10'    } else if (lastKernel.output.length === 3) {'#10'      const '
  +'cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]'
  +');'#10'      return cube.map(function(x) {'#10'        return utils.splitAr'
  +'ray(x, lastKernel.output[0]);'#10'      });'#10'    }'#10'  }'#10#10'  cons'
  +'tructor(source, settings) {'#10'    super(source, settings);'#10'    this.t'
  +'ransferValues = null;'#10'    this.formatValues = null;'#10'    this.Textur'
  +'eConstructor = null;'#10'    this.renderOutput = null;'#10'    this.renderR'
  +'awOutput = null;'#10'    this.texSize = null;'#10'    this.translatedSource'
  +' = null;'#10'    this.compiledFragmentShader = null;'#10'    this.compiledV'
  +'ertexShader = null;'#10'    this.switchingKernels = null;'#10'    this._tex'
  +'tureSwitched = null;'#10'    this._mappedTextureSwitched = null;'#10'  }'#10
  +#10'  checkTextureSize() {'#10'    const { features } = this.constructor;'#10
  +'    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > feat'
  +'ures.maxTextureSize) {'#10'      throw new Error(`Texture size [${this.texS'
  +'ize[0]},${this.texSize[1]}] generated by kernel is larger than supported si'
  +'ze [${features.maxTextureSize},${features.maxTextureSize}]`);'#10'    }'#10
  +'  }'#10#10'  translateSource() {'#10'    throw new Error(`"translateSource"'
  +' not defined on ${this.constructor.name}`);'#10'  }'#10#10'  pickRenderStra'
  +'tegy(args) {'#10'    if (this.graphical) {'#10'      this.renderRawOutput ='
  +' this.readPackedPixelsToUint8Array;'#10'      this.transferValues = (pixels'
  +') => pixels;'#10'      this.TextureConstructor = GLTextureGraphical;'#10'  '
  +'    return null;'#10'    }'#10'    if (this.precision === ''unsigned'') {'
  +#10'      this.renderRawOutput = this.readPackedPixelsToUint8Array;'#10'    '
  +'  this.transferValues = this.readPackedPixelsToFloat32Array;'#10'      if ('
  +'this.pipeline) {'#10'        this.renderOutput = this.renderTexture;'#10'  '
  +'      if (this.subKernels !== null) {'#10'          this.renderKernels = th'
  +'is.renderKernelsToTextures;'#10'        }'#10'        switch (this.returnTy'
  +'pe) {'#10'          case ''LiteralInteger'':'#10'          case ''Float'':'
  ,#10'          case ''Number'':'#10'          case ''Integer'':'#10'         '
  +'   if (this.output[2] > 0) {'#10'              this.TextureConstructor = GL'
  +'TextureUnsigned3D;'#10'              return null;'#10'            } else if'
  +' (this.output[1] > 0) {'#10'              this.TextureConstructor = GLTextu'
  +'reUnsigned2D;'#10'              return null;'#10'            } else {'#10' '
  +'             this.TextureConstructor = GLTextureUnsigned;'#10'             '
  +' return null;'#10'            }'#10'            case ''Array(2)'':'#10'    '
  +'        case ''Array(3)'':'#10'            case ''Array(4)'':'#10'         '
  +'     return this.requestFallback(args);'#10'        }'#10'      } else {'#10
  +'        if (this.subKernels !== null) {'#10'          this.renderKernels = '
  +'this.renderKernelsToArrays;'#10'        }'#10'        switch (this.returnTy'
  +'pe) {'#10'          case ''LiteralInteger'':'#10'          case ''Float'':'
  +#10'          case ''Number'':'#10'          case ''Integer'':'#10'         '
  +'   this.renderOutput = this.renderValues;'#10'            if (this.output[2'
  +'] > 0) {'#10'              this.TextureConstructor = GLTextureUnsigned3D;'
  +#10'              this.formatValues = utils.erect3DPackedFloat;'#10'        '
  +'      return null;'#10'            } else if (this.output[1] > 0) {'#10'   '
  +'           this.TextureConstructor = GLTextureUnsigned2D;'#10'             '
  +' this.formatValues = utils.erect2DPackedFloat;'#10'              return nul'
  +'l;'#10'            } else {'#10'              this.TextureConstructor = GLT'
  +'extureUnsigned;'#10'              this.formatValues = utils.erectPackedFloa'
  +'t;'#10'              return null;'#10'            }'#10'            case '''
  +'Array(2)'':'#10'            case ''Array(3)'':'#10'            case ''Array'
  +'(4)'':'#10'              return this.requestFallback(args);'#10'        }'
  +#10'      }'#10'    } else if (this.precision === ''single'') {'#10'      th'
  +'is.renderRawOutput = this.readFloatPixelsToFloat32Array;'#10'      this.tra'
  +'nsferValues = this.readFloatPixelsToFloat32Array;'#10'      if (this.pipeli'
  +'ne) {'#10'        this.renderOutput = this.renderTexture;'#10'        if (t'
  +'his.subKernels !== null) {'#10'          this.renderKernels = this.renderKe'
  +'rnelsToTextures;'#10'        }'#10'        switch (this.returnType) {'#10' '
  +'         case ''LiteralInteger'':'#10'          case ''Float'':'#10'       '
  +'   case ''Number'':'#10'          case ''Integer'': {'#10'            if (t'
  +'his.optimizeFloatMemory) {'#10'              if (this.output[2] > 0) {'#10
  +'                this.TextureConstructor = GLTextureMemoryOptimized3D;'#10' '
  +'               return null;'#10'              } else if (this.output[1] > 0'
  +') {'#10'                this.TextureConstructor = GLTextureMemoryOptimized2'
  +'D;'#10'                return null;'#10'              } else {'#10'        '
  +'        this.TextureConstructor = GLTextureMemoryOptimized;'#10'           '
  +'     return null;'#10'              }'#10'            } else {'#10'        '
  +'      if (this.output[2] > 0) {'#10'                this.TextureConstructor'
  +' = GLTextureFloat3D;'#10'                return null;'#10'              } e'
  +'lse if (this.output[1] > 0) {'#10'                this.TextureConstructor ='
  +' GLTextureFloat2D;'#10'                return null;'#10'              } els'
  +'e {'#10'                this.TextureConstructor = GLTextureFloat;'#10'     '
  +'           return null;'#10'              }'#10'            }'#10'         '
  +' }'#10'          case ''Array(2)'': {'#10'            if (this.output[2] > '
  +'0) {'#10'              this.TextureConstructor = GLTextureArray2Float3D;'#10
  +'              return null;'#10'            } else if (this.output[1] > 0) {'
  +#10'              this.TextureConstructor = GLTextureArray2Float2D;'#10'    '
  +'          return null;'#10'            } else {'#10'              this.Text'
  +'ureConstructor = GLTextureArray2Float;'#10'              return null;'#10' '
  +'           }'#10'          }'#10'          case ''Array(3)'': {'#10'       '
  +'     if (this.output[2] > 0) {'#10'              this.TextureConstructor = '
  +'GLTextureArray3Float3D;'#10'              return null;'#10'            } el'
  +'se if (this.output[1] > 0) {'#10'              this.TextureConstructor = GL'
  +'TextureArray3Float2D;'#10'              return null;'#10'            } else'
  +' {'#10'              this.TextureConstructor = GLTextureArray3Float;'#10'  '
  +'            return null;'#10'            }'#10'          }'#10'          ca'
  +'se ''Array(4)'': {'#10'            if (this.output[2] > 0) {'#10'          '
  +'    this.TextureConstructor = GLTextureArray4Float3D;'#10'              ret'
  +'urn null;'#10'            } else if (this.output[1] > 0) {'#10'            '
  +'  this.TextureConstructor = GLTextureArray4Float2D;'#10'              retur'
  +'n null;'#10'            } else {'#10'              this.TextureConstructor '
  +'= GLTextureArray4Float;'#10'              return null;'#10'            }'#10
  ,'          }'#10'        }'#10'      }'#10'      this.renderOutput = this.re'
  +'nderValues;'#10'      if (this.subKernels !== null) {'#10'        this.rend'
  +'erKernels = this.renderKernelsToArrays;'#10'      }'#10'      if (this.opti'
  +'mizeFloatMemory) {'#10'        switch (this.returnType) {'#10'          cas'
  +'e ''LiteralInteger'':'#10'          case ''Float'':'#10'          case ''Nu'
  +'mber'':'#10'          case ''Integer'': {'#10'            if (this.output[2'
  +'] > 0) {'#10'              this.TextureConstructor = GLTextureMemoryOptimiz'
  +'ed3D;'#10'              this.formatValues = utils.erectMemoryOptimized3DFlo'
  +'at;'#10'              return null;'#10'            } else if (this.output[1'
  +'] > 0) {'#10'              this.TextureConstructor = GLTextureMemoryOptimiz'
  +'ed2D;'#10'              this.formatValues = utils.erectMemoryOptimized2DFlo'
  +'at;'#10'              return null;'#10'            } else {'#10'           '
  +'   this.TextureConstructor = GLTextureMemoryOptimized;'#10'              th'
  +'is.formatValues = utils.erectMemoryOptimizedFloat;'#10'              return'
  +' null;'#10'            }'#10'          }'#10'          case ''Array(2)'': {'
  +#10'            if (this.output[2] > 0) {'#10'              this.TextureCons'
  +'tructor = GLTextureArray2Float3D;'#10'              this.formatValues = uti'
  +'ls.erect3DArray2;'#10'              return null;'#10'            } else if '
  +'(this.output[1] > 0) {'#10'              this.TextureConstructor = GLTextur'
  +'eArray2Float2D;'#10'              this.formatValues = utils.erect2DArray2;'
  +#10'              return null;'#10'            } else {'#10'              th'
  +'is.TextureConstructor = GLTextureArray2Float;'#10'              this.format'
  +'Values = utils.erectArray2;'#10'              return null;'#10'            '
  +'}'#10'          }'#10'          case ''Array(3)'': {'#10'            if (th'
  +'is.output[2] > 0) {'#10'              this.TextureConstructor = GLTextureAr'
  +'ray3Float3D;'#10'              this.formatValues = utils.erect3DArray3;'#10
  +'              return null;'#10'            } else if (this.output[1] > 0) {'
  +#10'              this.TextureConstructor = GLTextureArray3Float2D;'#10'    '
  +'          this.formatValues = utils.erect2DArray3;'#10'              return'
  +' null;'#10'            } else {'#10'              this.TextureConstructor ='
  +' GLTextureArray3Float;'#10'              this.formatValues = utils.erectArr'
  +'ay3;'#10'              return null;'#10'            }'#10'          }'#10' '
  +'         case ''Array(4)'': {'#10'            if (this.output[2] > 0) {'#10
  +'              this.TextureConstructor = GLTextureArray4Float3D;'#10'       '
  +'       this.formatValues = utils.erect3DArray4;'#10'              return nu'
  +'ll;'#10'            } else if (this.output[1] > 0) {'#10'              this'
  +'.TextureConstructor = GLTextureArray4Float2D;'#10'              this.format'
  +'Values = utils.erect2DArray4;'#10'              return null;'#10'          '
  +'  } else {'#10'              this.TextureConstructor = GLTextureArray4Float'
  +';'#10'              this.formatValues = utils.erectArray4;'#10'            '
  +'  return null;'#10'            }'#10'          }'#10'        }'#10'      } '
  +'else {'#10'        switch (this.returnType) {'#10'          case ''LiteralI'
  +'nteger'':'#10'          case ''Float'':'#10'          case ''Number'':'#10
  +'          case ''Integer'': {'#10'            if (this.output[2] > 0) {'#10
  +'              this.TextureConstructor = GLTextureFloat3D;'#10'             '
  +' this.formatValues = utils.erect3DFloat;'#10'              return null;'#10
  +'            } else if (this.output[1] > 0) {'#10'              this.Texture'
  +'Constructor = GLTextureFloat2D;'#10'              this.formatValues = utils'
  +'.erect2DFloat;'#10'              return null;'#10'            } else {'#10
  +'              this.TextureConstructor = GLTextureFloat;'#10'              t'
  +'his.formatValues = utils.erectFloat;'#10'              return null;'#10'   '
  +'         }'#10'          }'#10'          case ''Array(2)'': {'#10'         '
  +'   if (this.output[2] > 0) {'#10'              this.TextureConstructor = GL'
  +'TextureArray2Float3D;'#10'              this.formatValues = utils.erect3DAr'
  +'ray2;'#10'              return null;'#10'            } else if (this.output'
  +'[1] > 0) {'#10'              this.TextureConstructor = GLTextureArray2Float'
  +'2D;'#10'              this.formatValues = utils.erect2DArray2;'#10'        '
  +'      return null;'#10'            } else {'#10'              this.TextureC'
  +'onstructor = GLTextureArray2Float;'#10'              this.formatValues = ut'
  +'ils.erectArray2;'#10'              return null;'#10'            }'#10'     '
  +'     }'#10'          case ''Array(3)'': {'#10'            if (this.output[2'
  +'] > 0) {'#10'              this.TextureConstructor = GLTextureArray3Float3D'
  +';'#10'              this.formatValues = utils.erect3DArray3;'#10'          '
  +'    return null;'#10'            } else if (this.output[1] > 0) {'#10'     '
  ,'         this.TextureConstructor = GLTextureArray3Float2D;'#10'            '
  +'  this.formatValues = utils.erect2DArray3;'#10'              return null;'
  +#10'            } else {'#10'              this.TextureConstructor = GLTextu'
  +'reArray3Float;'#10'              this.formatValues = utils.erectArray3;'#10
  +'              return null;'#10'            }'#10'          }'#10'          '
  +'case ''Array(4)'': {'#10'            if (this.output[2] > 0) {'#10'        '
  +'      this.TextureConstructor = GLTextureArray4Float3D;'#10'              t'
  +'his.formatValues = utils.erect3DArray4;'#10'              return null;'#10
  +'            } else if (this.output[1] > 0) {'#10'              this.Texture'
  +'Constructor = GLTextureArray4Float2D;'#10'              this.formatValues ='
  +' utils.erect2DArray4;'#10'              return null;'#10'            } else'
  +' {'#10'              this.TextureConstructor = GLTextureArray4Float;'#10'  '
  +'            this.formatValues = utils.erectArray4;'#10'              return'
  +' null;'#10'            }'#10'          }'#10'        }'#10'      }'#10'    '
  +'} else {'#10'      throw new Error(`unhandled precision of "${this.precisio'
  +'n}"`);'#10'    }'#10#10'    throw new Error(`unhandled return type "${this.'
  +'returnType}"`);'#10'  }'#10#10'  getKernelString() {'#10'    throw new Erro'
  +'r(`abstract method call`);'#10'  }'#10#10'  getMainResultTexture() {'#10'  '
  +'  switch (this.returnType) {'#10'      case ''LiteralInteger'':'#10'      c'
  +'ase ''Float'':'#10'      case ''Integer'':'#10'      case ''Number'':'#10' '
  +'       return this.getMainResultNumberTexture();'#10'      case ''Array(2)'
  +''':'#10'        return this.getMainResultArray2Texture();'#10'      case '''
  +'Array(3)'':'#10'        return this.getMainResultArray3Texture();'#10'     '
  +' case ''Array(4)'':'#10'        return this.getMainResultArray4Texture();'
  +#10'      default:'#10'        throw new Error(`unhandled returnType type ${'
  +' this.returnType }`);'#10'    }'#10'  }'#10#10'  getMainResultKernelNumberT'
  +'exture() {'#10'    throw new Error(`abstract method call`);'#10'  }'#10'  g'
  +'etMainResultSubKernelNumberTexture() {'#10'    throw new Error(`abstract me'
  +'thod call`);'#10'  }'#10'  getMainResultKernelArray2Texture() {'#10'    thr'
  +'ow new Error(`abstract method call`);'#10'  }'#10'  getMainResultSubKernelA'
  +'rray2Texture() {'#10'    throw new Error(`abstract method call`);'#10'  }'
  +#10'  getMainResultKernelArray3Texture() {'#10'    throw new Error(`abstract'
  +' method call`);'#10'  }'#10'  getMainResultSubKernelArray3Texture() {'#10' '
  +'   throw new Error(`abstract method call`);'#10'  }'#10'  getMainResultKern'
  +'elArray4Texture() {'#10'    throw new Error(`abstract method call`);'#10'  '
  +'}'#10'  getMainResultSubKernelArray4Texture() {'#10'    throw new Error(`ab'
  +'stract method call`);'#10'  }'#10'  getMainResultGraphical() {'#10'    thro'
  +'w new Error(`abstract method call`);'#10'  }'#10'  getMainResultMemoryOptim'
  +'izedFloats() {'#10'    throw new Error(`abstract method call`);'#10'  }'#10
  +'  getMainResultPackedPixels() {'#10'    throw new Error(`abstract method ca'
  +'ll`);'#10'  }'#10#10'  getMainResultString() {'#10'    if (this.graphical) '
  +'{'#10'      return this.getMainResultGraphical();'#10'    } else if (this.p'
  +'recision === ''single'') {'#10'      if (this.optimizeFloatMemory) {'#10'  '
  +'      return this.getMainResultMemoryOptimizedFloats();'#10'      }'#10'   '
  +'   return this.getMainResultTexture();'#10'    } else {'#10'      return th'
  +'is.getMainResultPackedPixels();'#10'    }'#10'  }'#10#10'  getMainResultNum'
  +'berTexture() {'#10'    return utils.linesToString(this.getMainResultKernelN'
  +'umberTexture()) +'#10'      utils.linesToString(this.getMainResultSubKernel'
  +'NumberTexture());'#10'  }'#10#10'  getMainResultArray2Texture() {'#10'    r'
  +'eturn utils.linesToString(this.getMainResultKernelArray2Texture()) +'#10'  '
  +'    utils.linesToString(this.getMainResultSubKernelArray2Texture());'#10'  '
  +'}'#10#10'  getMainResultArray3Texture() {'#10'    return utils.linesToStrin'
  +'g(this.getMainResultKernelArray3Texture()) +'#10'      utils.linesToString('
  +'this.getMainResultSubKernelArray3Texture());'#10'  }'#10#10'  getMainResult'
  +'Array4Texture() {'#10'    return utils.linesToString(this.getMainResultKern'
  +'elArray4Texture()) +'#10'      utils.linesToString(this.getMainResultSubKer'
  +'nelArray4Texture());'#10'  }'#10#10'  getFloatTacticDeclaration() {'#10'   '
  +' const variablePrecision = this.getVariablePrecisionString(this.texSize, th'
  +'is.tactic);'#10'    return `precision ${variablePrecision} float;\n`;'#10' '
  +' }'#10#10'  getIntTacticDeclaration() {'#10'    return `precision ${this.ge'
  +'tVariablePrecisionString(this.texSize, this.tactic, true)} int;\n`;'#10'  }'
  +#10#10'  getSampler2DTacticDeclaration() {'#10'    return `precision ${this.'
  +'getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\n`;'#10' '
  +' }'#10#10'  getSampler2DArrayTacticDeclaration() {'#10'    return `precisio'
  ,'n ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DAr'
  +'ray;\n`;'#10'  }'#10#10'  renderTexture() {'#10'    return this.immutable ?'
  +' this.texture.clone() : this.texture;'#10'  }'#10'  readPackedPixelsToUint8'
  +'Array() {'#10'    if (this.precision !== ''unsigned'') throw new Error(''Re'
  +'quires this.precision to be "unsigned"'');'#10'    const {'#10'      texSiz'
  +'e,'#10'      context: gl'#10'    } = this;'#10'    const result = new Uint8'
  +'Array(texSize[0] * texSize[1] * 4);'#10'    gl.readPixels(0, 0, texSize[0],'
  +' texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);'#10'    return result;'#10
  +'  }'#10#10'  readPackedPixelsToFloat32Array() {'#10'    return new Float32A'
  +'rray(this.readPackedPixelsToUint8Array().buffer);'#10'  }'#10#10'  readFloa'
  +'tPixelsToFloat32Array() {'#10'    if (this.precision !== ''single'') throw '
  +'new Error(''Requires this.precision to be "single"'');'#10'    const {'#10
  +'      texSize,'#10'      context: gl'#10'    } = this;'#10'    const w = te'
  +'xSize[0];'#10'    const h = texSize[1];'#10'    const result = new Float32A'
  +'rray(w * h * 4);'#10'    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, resul'
  +'t);'#10'    return result;'#10'  }'#10#10'  getPixels(flip) {'#10'    const'
  +' {'#10'      context: gl,'#10'      output'#10'    } = this;'#10'    const '
  +'[width, height] = output;'#10'    const pixels = new Uint8Array(width * hei'
  +'ght * 4);'#10'    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_B'
  +'YTE, pixels);'#10'    return new Uint8ClampedArray((flip ? pixels : utils.f'
  +'lipPixels(pixels, width, height)).buffer);'#10'  }'#10#10'  renderKernelsTo'
  +'Arrays() {'#10'    const result = {'#10'      result: this.renderOutput(),'
  +#10'    };'#10'    for (let i = 0; i < this.subKernels.length; i++) {'#10'  '
  +'    result[this.subKernels[i].property] = this.mappedTextures[i].toArray();'
  +#10'    }'#10'    return result;'#10'  }'#10#10'  renderKernelsToTextures() '
  +'{'#10'    const result = {'#10'      result: this.renderOutput(),'#10'    }'
  +';'#10'    if (this.immutable) {'#10'      for (let i = 0; i < this.subKerne'
  +'ls.length; i++) {'#10'        result[this.subKernels[i].property] = this.ma'
  +'ppedTextures[i].clone();'#10'      }'#10'    } else {'#10'      for (let i '
  +'= 0; i < this.subKernels.length; i++) {'#10'        result[this.subKernels['
  +'i].property] = this.mappedTextures[i];'#10'      }'#10'    }'#10'    return'
  +' result;'#10'  }'#10#10'  resetSwitchingKernels() {'#10'    const existingV'
  +'alue = this.switchingKernels;'#10'    this.switchingKernels = null;'#10'   '
  +' return existingValue;'#10'  }'#10#10'  setOutput(output) {'#10'    const n'
  +'ewOutput = this.toKernelOutput(output);'#10'    if (this.program) {'#10'   '
  +'   if (!this.dynamicOutput) {'#10'        throw new Error(''Resizing a kern'
  +'el with dynamicOutput: false is not possible'');'#10'      }'#10'      cons'
  +'t newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];'#10
  +'      const newTexSize = utils.getKernelTextureSize({'#10'        optimizeF'
  +'loatMemory: this.optimizeFloatMemory,'#10'        precision: this.precision'
  +','#10'      }, newThreadDim);'#10'      const oldTexSize = this.texSize;'#10
  +'      if (oldTexSize) {'#10'        const oldPrecision = this.getVariablePr'
  +'ecisionString(oldTexSize, this.tactic);'#10'        const newPrecision = th'
  +'is.getVariablePrecisionString(newTexSize, this.tactic);'#10'        if (old'
  +'Precision !== newPrecision) {'#10'          if (this.debug) {'#10'         '
  +'   console.warn(''Precision requirement changed, asking GPU instance to rec'
  +'ompile'');'#10'          }'#10'          this.switchKernels({'#10'         '
  +'   type: ''outputPrecisionMismatch'','#10'            precision: newPrecisi'
  +'on,'#10'            needed: output'#10'          });'#10'          return;'
  +#10'        }'#10'      }'#10'      this.output = newOutput;'#10'      this.'
  +'threadDim = newThreadDim;'#10'      this.texSize = newTexSize;'#10'      co'
  +'nst { context: gl } = this;'#10'      gl.bindFramebuffer(gl.FRAMEBUFFER, th'
  +'is.framebuffer);'#10'      this.updateMaxTexSize();'#10'      this.framebuf'
  +'fer.width = this.texSize[0];'#10'      this.framebuffer.height = this.texSi'
  +'ze[1];'#10'      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);'
  +#10'      this.canvas.width = this.maxTexSize[0];'#10'      this.canvas.heig'
  +'ht = this.maxTexSize[1];'#10'      if (this.texture) {'#10'        this.tex'
  +'ture.delete();'#10'      }'#10'      this.texture = null;'#10'      this._s'
  +'etupOutputTexture();'#10'      if (this.mappedTextures && this.mappedTextur'
  +'es.length > 0) {'#10'        for (let i = 0; i < this.mappedTextures.length'
  +'; i++) {'#10'          this.mappedTextures[i].delete();'#10'        }'#10' '
  +'       this.mappedTextures = null;'#10'        this._setupSubOutputTextures'
  +'();'#10'      }'#10'    } else {'#10'      this.output = newOutput;'#10'   '
  +' }'#10'    return this;'#10'  }'#10'  renderValues() {'#10'    return this.'
  ,'formatValues('#10'      this.transferValues(),'#10'      this.output[0],'#10
  +'      this.output[1],'#10'      this.output[2]'#10'    );'#10'  }'#10'  swi'
  +'tchKernels(reason) {'#10'    if (this.switchingKernels) {'#10'      this.sw'
  +'itchingKernels.push(reason);'#10'    } else {'#10'      this.switchingKerne'
  +'ls = [reason];'#10'    }'#10'  }'#10'  getVariablePrecisionString(textureSi'
  +'ze = this.texSize, tactic = this.tactic, isInt = false) {'#10'    if (!tact'
  +'ic) {'#10'      if (!this.constructor.features.isSpeedTacticSupported) retu'
  +'rn ''highp'';'#10'      const low = this.constructor.features[isInt ? ''low'
  +'IntPrecision'' : ''lowFloatPrecision''];'#10'      const medium = this.cons'
  +'tructor.features[isInt ? ''mediumIntPrecision'' : ''mediumFloatPrecision'']'
  +';'#10'      const high = this.constructor.features[isInt ? ''highIntPrecisi'
  +'on'' : ''highFloatPrecision''];'#10'      const requiredSize = Math.log2(te'
  +'xtureSize[0] * textureSize[1]);'#10'      if (requiredSize <= low.rangeMax)'
  +' {'#10'        return ''lowp'';'#10'      } else if (requiredSize <= medium'
  +'.rangeMax) {'#10'        return ''mediump'';'#10'      } else if (requiredS'
  +'ize <= high.rangeMax) {'#10'        return ''highp'';'#10'      } else {'#10
  +'        throw new Error(`The required size exceeds that of the ability of y'
  +'our system`);'#10'      }'#10'    }'#10'    switch (tactic) {'#10'      cas'
  +'e ''speed'':'#10'        return ''lowp'';'#10'      case ''balanced'':'#10
  +'        return ''mediump'';'#10'      case ''precision'':'#10'        retur'
  +'n ''highp'';'#10'      default:'#10'        throw new Error(`Unknown tactic'
  +' "${tactic}" use "speed", "balanced", "precision", or empty for auto`);'#10
  +'    }'#10'  }'#10#10'  updateTextureArgumentRefs(kernelValue, arg) {'#10'  '
  +'  if (!this.immutable) return;'#10'    if (this.texture.texture === arg.tex'
  +'ture) {'#10'      const { prevArg } = kernelValue;'#10'      if (prevArg) {'
  +#10'        if (prevArg.texture._refs === 1) {'#10'          this.texture.de'
  +'lete();'#10'          this.texture = prevArg.clone();'#10'          this._t'
  +'extureSwitched = true;'#10'        }'#10'        prevArg.delete();'#10'    '
  +'  }'#10'      kernelValue.prevArg = arg.clone();'#10'    } else if (this.ma'
  +'ppedTextures && this.mappedTextures.length > 0) {'#10'      const { mappedT'
  +'extures } = this;'#10'      for (let i = 0; i < mappedTextures.length; i++)'
  +' {'#10'        const mappedTexture = mappedTextures[i];'#10'        if (map'
  +'pedTexture.texture === arg.texture) {'#10'          const { prevArg } = ker'
  +'nelValue;'#10'          if (prevArg) {'#10'            if (prevArg.texture.'
  +'_refs === 1) {'#10'              mappedTexture.delete();'#10'              '
  +'mappedTextures[i] = prevArg.clone();'#10'              this._mappedTextureS'
  +'witched[i] = true;'#10'            }'#10'            prevArg.delete();'#10
  +'          }'#10'          kernelValue.prevArg = arg.clone();'#10'          '
  +'return;'#10'        }'#10'      }'#10'    }'#10'  }'#10#10'  onActivate(pre'
  +'viousKernel) {'#10'    this._textureSwitched = true;'#10'    this.texture ='
  +' previousKernel.texture;'#10'    if (this.mappedTextures) {'#10'      for ('
  +'let i = 0; i < this.mappedTextures.length; i++) {'#10'        this._mappedT'
  +'extureSwitched[i] = true;'#10'      }'#10'      this.mappedTextures = previ'
  +'ousKernel.mappedTextures;'#10'    }'#10'  }'#10#10'  initCanvas() {}'#10'}'
  +#10#10'const typeMap = {'#10'  int: ''Integer'','#10'  float: ''Number'','#10
  +'  vec2: ''Array(2)'','#10'  vec3: ''Array(3)'','#10'  vec4: ''Array(4)'','
  +#10'};'#10#10'module.exports = {'#10'  GLKernel'#10'};'#10'},{"../../utils":'
  +'114,"../kernel":36,"./texture/array-2-float":16,"./texture/array-2-float-2d'
  +'":14,"./texture/array-2-float-3d":15,"./texture/array-3-float":19,"./textur'
  +'e/array-3-float-2d":17,"./texture/array-3-float-3d":18,"./texture/array-4-f'
  +'loat":22,"./texture/array-4-float-2d":20,"./texture/array-4-float-3d":21,".'
  +'/texture/float":25,"./texture/float-2d":23,"./texture/float-3d":24,"./textu'
  +'re/graphical":26,"./texture/memory-optimized":30,"./texture/memory-optimize'
  +'d-2d":28,"./texture/memory-optimized-3d":29,"./texture/unsigned":33,"./text'
  +'ure/unsigned-2d":31,"./texture/unsigned-3d":32}],14:[function(require,modul'
  +'e,exports){'#10'const { utils } = require(''../../../utils'');'#10'const { '
  +'GLTextureFloat } = require(''./float'');'#10#10'class GLTextureArray2Float2'
  +'D extends GLTextureFloat {'#10'  constructor(settings) {'#10'    super(sett'
  +'ings);'#10'    this.type = ''ArrayTexture(2)'';'#10'  }'#10'  toArray() {'
  +#10'    return utils.erect2DArray2(this.renderValues(), this.output[0], this'
  +'.output[1]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureArray2F'
  +'loat2D'#10'};'#10'},{"../../../utils":114,"./float":25}],15:[function(requi'
  +'re,module,exports){'#10'const { utils } = require(''../../../utils'');'#10
  +'const { GLTextureFloat } = require(''./float'');'#10#10'class GLTextureArra'
  ,'y2Float3D extends GLTextureFloat {'#10'  constructor(settings) {'#10'    su'
  +'per(settings);'#10'    this.type = ''ArrayTexture(2)'';'#10'  }'#10'  toArr'
  +'ay() {'#10'    return utils.erect3DArray2(this.renderValues(), this.output['
  +'0], this.output[1], this.output[2]);'#10'  }'#10'}'#10#10'module.exports = '
  +'{'#10'  GLTextureArray2Float3D'#10'};'#10'},{"../../../utils":114,"./float"'
  +':25}],16:[function(require,module,exports){'#10'const { utils } = require('
  +'''../../../utils'');'#10'const { GLTextureFloat } = require(''./float'');'
  +#10#10'class GLTextureArray2Float extends GLTextureFloat {'#10'  constructor'
  +'(settings) {'#10'    super(settings);'#10'    this.type = ''ArrayTexture(2)'
  +''';'#10'  }'#10'  toArray() {'#10'    return utils.erectArray2(this.renderV'
  +'alues(), this.output[0], this.output[1]);'#10'  }'#10'}'#10#10'module.expor'
  +'ts = {'#10'  GLTextureArray2Float'#10'};'#10'},{"../../../utils":114,"./flo'
  +'at":25}],17:[function(require,module,exports){'#10'const { utils } = requir'
  +'e(''../../../utils'');'#10'const { GLTextureFloat } = require(''./float'');'
  +#10#10'class GLTextureArray3Float2D extends GLTextureFloat {'#10'  construct'
  +'or(settings) {'#10'    super(settings);'#10'    this.type = ''ArrayTexture('
  +'3)'';'#10'  }'#10'  toArray() {'#10'    return utils.erect2DArray3(this.ren'
  +'derValues(), this.output[0], this.output[1]);'#10'  }'#10'}'#10#10'module.e'
  +'xports = {'#10'  GLTextureArray3Float2D'#10'};'#10'},{"../../../utils":114,'
  +'"./float":25}],18:[function(require,module,exports){'#10'const { utils } = '
  +'require(''../../../utils'');'#10'const { GLTextureFloat } = require(''./flo'
  +'at'');'#10#10'class GLTextureArray3Float3D extends GLTextureFloat {'#10'  c'
  +'onstructor(settings) {'#10'    super(settings);'#10'    this.type = ''Array'
  +'Texture(3)'';'#10'  }'#10'  toArray() {'#10'    return utils.erect3DArray3('
  +'this.renderValues(), this.output[0], this.output[1], this.output[2]);'#10' '
  +' }'#10'}'#10#10'module.exports = {'#10'  GLTextureArray3Float3D'#10'};'#10
  +'},{"../../../utils":114,"./float":25}],19:[function(require,module,exports)'
  +'{'#10'const { utils } = require(''../../../utils'');'#10'const { GLTextureF'
  +'loat } = require(''./float'');'#10#10'class GLTextureArray3Float extends GL'
  +'TextureFloat {'#10'  constructor(settings) {'#10'    super(settings);'#10' '
  +'   this.type = ''ArrayTexture(3)'';'#10'  }'#10'  toArray() {'#10'    retur'
  +'n utils.erectArray3(this.renderValues(), this.output[0]);'#10'  }'#10'}'#10
  +#10'module.exports = {'#10'  GLTextureArray3Float'#10'};'#10'},{"../../../ut'
  +'ils":114,"./float":25}],20:[function(require,module,exports){'#10'const { u'
  +'tils } = require(''../../../utils'');'#10'const { GLTextureFloat } = requir'
  +'e(''./float'');'#10#10'class GLTextureArray4Float2D extends GLTextureFloat '
  +'{'#10'  constructor(settings) {'#10'    super(settings);'#10'    this.type '
  +'= ''ArrayTexture(4)'';'#10'  }'#10'  toArray() {'#10'    return utils.erect'
  +'2DArray4(this.renderValues(), this.output[0], this.output[1]);'#10'  }'#10
  +'}'#10#10'module.exports = {'#10'  GLTextureArray4Float2D'#10'};'#10'},{"../'
  +'../../utils":114,"./float":25}],21:[function(require,module,exports){'#10'c'
  +'onst { utils } = require(''../../../utils'');'#10'const { GLTextureFloat } '
  +'= require(''./float'');'#10#10'class GLTextureArray4Float3D extends GLTextu'
  +'reFloat {'#10'  constructor(settings) {'#10'    super(settings);'#10'    th'
  +'is.type = ''ArrayTexture(4)'';'#10'  }'#10'  toArray() {'#10'    return uti'
  +'ls.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.'
  +'output[2]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureArray4Fl'
  +'oat3D'#10'};'#10'},{"../../../utils":114,"./float":25}],22:[function(requir'
  +'e,module,exports){'#10'const { utils } = require(''../../../utils'');'#10'c'
  +'onst { GLTextureFloat } = require(''./float'');'#10#10'class GLTextureArray'
  +'4Float extends GLTextureFloat {'#10'  constructor(settings) {'#10'    super'
  +'(settings);'#10'    this.type = ''ArrayTexture(4)'';'#10'  }'#10'  toArray('
  +') {'#10'    return utils.erectArray4(this.renderValues(), this.output[0]);'
  +#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureArray4Float'#10'};'#10
  +'},{"../../../utils":114,"./float":25}],23:[function(require,module,exports)'
  +'{'#10'const { utils } = require(''../../../utils'');'#10'const { GLTextureF'
  +'loat } = require(''./float'');'#10#10'class GLTextureFloat2D extends GLText'
  +'ureFloat {'#10'  constructor(settings) {'#10'    super(settings);'#10'    t'
  +'his.type = ''ArrayTexture(1)'';'#10'  }'#10'  toArray() {'#10'    return ut'
  +'ils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);'#10
  +'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureFloat2D'#10'};'#10'},{".'
  +'./../../utils":114,"./float":25}],24:[function(require,module,exports){'#10
  +'const { utils } = require(''../../../utils'');'#10'const { GLTextureFloat }'
  +' = require(''./float'');'#10#10'class GLTextureFloat3D extends GLTextureFlo'
  ,'at {'#10'  constructor(settings) {'#10'    super(settings);'#10'    this.ty'
  +'pe = ''ArrayTexture(1)'';'#10'  }'#10'  toArray() {'#10'    return utils.er'
  +'ect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output'
  +'[2]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureFloat3D'#10'};'
  +#10'},{"../../../utils":114,"./float":25}],25:[function(require,module,expor'
  +'ts){'#10'const { utils } = require(''../../../utils'');'#10'const { GLTextu'
  +'re } = require(''./index'');'#10#10'class GLTextureFloat extends GLTexture '
  +'{'#10'  get textureType() {'#10'    return this.context.FLOAT;'#10'  }'#10
  +'  constructor(settings) {'#10'    super(settings);'#10'    this.type = ''Ar'
  +'rayTexture(1)'';'#10'  }'#10'  renderRawOutput() {'#10'    const gl = this.'
  +'context;'#10'    const size = this.size;'#10'    gl.bindFramebuffer(gl.FRAM'
  +'EBUFFER, this.framebuffer());'#10'    gl.framebufferTexture2D('#10'      gl'
  +'.FRAMEBUFFER,'#10'      gl.COLOR_ATTACHMENT0,'#10'      gl.TEXTURE_2D,'#10
  +'      this.texture,'#10'      0'#10'    );'#10'    const result = new Float'
  +'32Array(size[0] * size[1] * 4);'#10'    gl.readPixels(0, 0, size[0], size[1'
  +'], gl.RGBA, gl.FLOAT, result);'#10'    return result;'#10'  }'#10'  renderV'
  +'alues() {'#10'    if (this._deleted) return null;'#10'    return this.rende'
  +'rRawOutput();'#10'  }'#10'  toArray() {'#10'    return utils.erectFloat(thi'
  +'s.renderValues(), this.output[0]);'#10'  }'#10'}'#10#10'module.exports = {'
  +#10'  GLTextureFloat'#10'};'#10'},{"../../../utils":114,"./index":27}],26:[f'
  +'unction(require,module,exports){'#10'const { GLTextureUnsigned } = require('
  +'''./unsigned'');'#10#10'class GLTextureGraphical extends GLTextureUnsigned '
  +'{'#10'  constructor(settings) {'#10'    super(settings);'#10'    this.type '
  +'= ''ArrayTexture(4)'';'#10'  }'#10'  toArray() {'#10'    return this.render'
  +'Values();'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextureGraphical'
  +#10'};'#10'},{"./unsigned":33}],27:[function(require,module,exports){'#10'co'
  +'nst { Texture } = require(''../../../texture'');'#10#10'class GLTexture ext'
  +'ends Texture {'#10'  get textureType() {'#10'    throw new Error(`"textureT'
  +'ype" not implemented on ${ this.name }`);'#10'  }'#10#10'  clone() {'#10'  '
  +'  return new this.constructor(this);'#10'  }'#10#10'  beforeMutate() {'#10
  +'    if (this.texture._refs > 1) {'#10'      this.newTexture();'#10'      re'
  +'turn true;'#10'    }'#10'    return false;'#10'  }'#10#10'  cloneTexture() '
  +'{'#10'    this.texture._refs--;'#10'    const { context: gl, size, texture,'
  +' kernel } = this;'#10'    if (kernel.debug) {'#10'      console.warn(''clon'
  +'ing internal texture'');'#10'    }'#10'    gl.bindFramebuffer(gl.FRAMEBUFFE'
  +'R, this.framebuffer());'#10'    selectTexture(gl, texture);'#10'    gl.fram'
  +'ebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, textu'
  +'re, 0);'#10'    const target = gl.createTexture();'#10'    selectTexture(gl'
  +', target);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, siz'
  +'e[0], size[1], 0, this.textureFormat, this.textureType, null);'#10'    gl.c'
  +'opyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);'#10'    t'
  +'arget._refs = 1;'#10'    this.texture = target;'#10'  }'#10#10'  newTexture'
  +'() {'#10'    this.texture._refs--;'#10'    const gl = this.context;'#10'   '
  +' const size = this.size;'#10'    const kernel = this.kernel;'#10'    if (ke'
  +'rnel.debug) {'#10'      console.warn(''new internal texture'');'#10'    }'
  +#10'    const target = gl.createTexture();'#10'    selectTexture(gl, target)'
  +';'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], siz'
  +'e[1], 0, this.textureFormat, this.textureType, null);'#10'    target._refs '
  +'= 1;'#10'    this.texture = target;'#10'  }'#10#10'  clear() {'#10'    if ('
  +'this.texture._refs) {'#10'      this.texture._refs--;'#10'      const gl = '
  +'this.context;'#10'      const target = this.texture = gl.createTexture();'
  +#10'      selectTexture(gl, target);'#10'      const size = this.size;'#10' '
  +'     target._refs = 1;'#10'      gl.texImage2D(gl.TEXTURE_2D, 0, this.inter'
  +'nalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null)'
  +';'#10'    }'#10'    const { context: gl, texture } = this;'#10'    gl.bindF'
  +'ramebuffer(gl.FRAMEBUFFER, this.framebuffer());'#10'    gl.bindTexture(gl.T'
  +'EXTURE_2D, texture);'#10'    selectTexture(gl, texture);'#10'    gl.framebu'
  +'fferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,'
  +' 0);'#10'    gl.clearColor(0, 0, 0, 0);'#10'    gl.clear(gl.COLOR_BUFFER_BI'
  +'T | gl.DEPTH_BUFFER_BIT);'#10'  }'#10#10'  delete() {'#10'    if (this._del'
  +'eted) return;'#10'    this._deleted = true;'#10'    if (this.texture._refs)'
  +' {'#10'      this.texture._refs--;'#10'      if (this.texture._refs) return'
  +';'#10'    }'#10'    this.context.deleteTexture(this.texture);'#10'    if (t'
  +'his.texture._refs === 0 && this._framebuffer) {'#10'      this.context.dele'
  ,'teFramebuffer(this._framebuffer);'#10'      this._framebuffer = null;'#10' '
  +'   }'#10'  }'#10#10'  framebuffer() {'#10'    if (!this._framebuffer) {'#10
  +'      this._framebuffer = this.context.createFramebuffer();'#10'    }'#10' '
  +'   this._framebuffer.width = this.size[0];'#10'    this._framebuffer.height'
  +' = this.size[1];'#10'    return this._framebuffer;'#10'  }'#10'}'#10#10'fun'
  +'ction selectTexture(gl, texture) {'#10'  gl.activeTexture(gl.TEXTURE15);'#10
  +'  gl.bindTexture(gl.TEXTURE_2D, texture);'#10'  gl.texParameteri(gl.TEXTURE'
  +'_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#10'  gl.texParameteri(gl.TEXTUR'
  +'E_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#10'  gl.texParameteri(gl.TEXTU'
  +'RE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'  gl.texParameteri(gl.TEXTUR'
  +'E_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'#10'}'#10#10'module.exports = { G'
  +'LTexture };'#10'},{"../../../texture":113}],28:[function(require,module,exp'
  +'orts){'#10'const { utils } = require(''../../../utils'');'#10'const { GLTex'
  +'tureFloat } = require(''./float'');'#10#10'class GLTextureMemoryOptimized2D'
  +' extends GLTextureFloat {'#10'  constructor(settings) {'#10'    super(setti'
  +'ngs);'#10'    this.type = ''MemoryOptimizedNumberTexture'';'#10'  }'#10'  t'
  +'oArray() {'#10'    return utils.erectMemoryOptimized2DFloat(this.renderValu'
  +'es(), this.output[0], this.output[1]);'#10'  }'#10'}'#10#10'module.exports '
  +'= {'#10'  GLTextureMemoryOptimized2D'#10'};'#10'},{"../../../utils":114,"./'
  +'float":25}],29:[function(require,module,exports){'#10'const { utils } = req'
  +'uire(''../../../utils'');'#10'const { GLTextureFloat } = require(''./float'
  +''');'#10#10'class GLTextureMemoryOptimized3D extends GLTextureFloat {'#10' '
  +' constructor(settings) {'#10'    super(settings);'#10'    this.type = ''Mem'
  +'oryOptimizedNumberTexture'';'#10'  }'#10'  toArray() {'#10'    return utils'
  +'.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.outp'
  +'ut[1], this.output[2]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTex'
  +'tureMemoryOptimized3D'#10'};'#10'},{"../../../utils":114,"./float":25}],30:'
  +'[function(require,module,exports){'#10'const { utils } = require(''../../..'
  +'/utils'');'#10'const { GLTextureFloat } = require(''./float'');'#10#10'clas'
  +'s GLTextureMemoryOptimized extends GLTextureFloat {'#10'  constructor(setti'
  +'ngs) {'#10'    super(settings);'#10'    this.type = ''MemoryOptimizedNumber'
  +'Texture'';'#10'  }'#10'  toArray() {'#10'    return utils.erectMemoryOptimi'
  +'zedFloat(this.renderValues(), this.output[0]);'#10'  }'#10'}'#10#10'module.'
  +'exports = {'#10'  GLTextureMemoryOptimized'#10'};'#10'},{"../../../utils":1'
  +'14,"./float":25}],31:[function(require,module,exports){'#10'const { utils }'
  +' = require(''../../../utils'');'#10'const { GLTextureUnsigned } = require('
  +'''./unsigned'');'#10#10'class GLTextureUnsigned2D extends GLTextureUnsigned'
  +' {'#10'  constructor(settings) {'#10'    super(settings);'#10'    this.type'
  +' = ''NumberTexture'';'#10'  }'#10'  toArray() {'#10'    return utils.erect2'
  +'DPackedFloat(this.renderValues(), this.output[0], this.output[1]);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  GLTextureUnsigned2D'#10'};'#10'},{"../'
  +'../../utils":114,"./unsigned":33}],32:[function(require,module,exports){'#10
  +'const { utils } = require(''../../../utils'');'#10'const { GLTextureUnsigne'
  +'d } = require(''./unsigned'');'#10#10'class GLTextureUnsigned3D extends GLT'
  +'extureUnsigned {'#10'  constructor(settings) {'#10'    super(settings);'#10
  +'    this.type = ''NumberTexture'';'#10'  }'#10'  toArray() {'#10'    return'
  +' utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output['
  +'1], this.output[2]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  GLTextur'
  +'eUnsigned3D'#10'};'#10'},{"../../../utils":114,"./unsigned":33}],33:[functi'
  +'on(require,module,exports){'#10'const { utils } = require(''../../../utils'
  +''');'#10'const { GLTexture } = require(''./index'');'#10#10'class GLTexture'
  +'Unsigned extends GLTexture {'#10'  get textureType() {'#10'    return this.'
  +'context.UNSIGNED_BYTE;'#10'  }'#10'  constructor(settings) {'#10'    super('
  +'settings);'#10'    this.type = ''NumberTexture'';'#10'  }'#10'  renderRawOu'
  +'tput() {'#10'    const { context: gl } = this;'#10'    const framebuffer = '
  +'gl.createFramebuffer();'#10'    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuf'
  +'fer);'#10'    gl.framebufferTexture2D('#10'      gl.FRAMEBUFFER,'#10'      '
  +'gl.COLOR_ATTACHMENT0,'#10'      gl.TEXTURE_2D,'#10'      this.texture,'#10
  +'      0'#10'    );'#10'    const result = new Uint8Array(this.size[0] * thi'
  +'s.size[1] * 4);'#10'    gl.readPixels(0, 0, this.size[0], this.size[1], gl.'
  +'RGBA, gl.UNSIGNED_BYTE, result);'#10'    return result;'#10'  }'#10'  rende'
  +'rValues() {'#10'    if (this._deleted) return null;'#10'    return new Floa'
  +'t32Array(this.renderRawOutput().buffer);'#10'  }'#10'  toArray() {'#10'    '
  +'return utils.erectPackedFloat(this.renderValues(), this.output[0]);'#10'  }'
  ,#10'}'#10#10'module.exports = {'#10'  GLTextureUnsigned'#10'};'#10'},{"../..'
  +'/../utils":114,"./index":27}],34:[function(require,module,exports){'#10'con'
  +'st getContext = require(''gl'');'#10'const { WebGLKernel } = require(''../w'
  +'eb-gl/kernel'');'#10'const { glKernelString } = require(''../gl/kernel-stri'
  +'ng'');'#10#10'let isSupported = null;'#10'let testCanvas = null;'#10'let te'
  +'stContext = null;'#10'let testExtensions = null;'#10'let features = null;'
  +#10#10'class HeadlessGLKernel extends WebGLKernel {'#10'  static get isSuppo'
  +'rted() {'#10'    if (isSupported !== null) return isSupported;'#10'    this'
  +'.setupFeatureChecks();'#10'    isSupported = testContext !== null;'#10'    '
  +'return isSupported;'#10'  }'#10#10'  static setupFeatureChecks() {'#10'    '
  +'testCanvas = null;'#10'    testExtensions = null;'#10'    if (typeof getCon'
  +'text !== ''function'') return;'#10'    try { '#10'      testContext = getCo'
  +'ntext(2, 2, {'#10'        preserveDrawingBuffer: true'#10'      });'#10'   '
  +'   if (!testContext || !testContext.getExtension) return;'#10'      testExt'
  +'ensions = {'#10'        STACKGL_resize_drawingbuffer: testContext.getExtens'
  +'ion(''STACKGL_resize_drawingbuffer''),'#10'        STACKGL_destroy_context:'
  +' testContext.getExtension(''STACKGL_destroy_context''),'#10'        OES_tex'
  +'ture_float: testContext.getExtension(''OES_texture_float''),'#10'        OE'
  +'S_texture_float_linear: testContext.getExtension(''OES_texture_float_linear'
  +'''),'#10'        OES_element_index_uint: testContext.getExtension(''OES_ele'
  +'ment_index_uint''),'#10'        WEBGL_draw_buffers: testContext.getExtensio'
  +'n(''WEBGL_draw_buffers''),'#10'        WEBGL_color_buffer_float: testContex'
  +'t.getExtension(''WEBGL_color_buffer_float''),'#10'      };'#10'      featur'
  +'es = this.getFeatures();'#10'    } catch (e) {'#10'      console.warn(e);'
  +#10'    }'#10'  }'#10#10'  static isContextMatch(context) {'#10'    try {'#10
  +'      return context.getParameter(context.RENDERER) === ''ANGLE'';'#10'    '
  +'} catch (e) {'#10'      return false;'#10'    }'#10'  }'#10#10'  static get'
  +'IsTextureFloat() {'#10'    return Boolean(testExtensions.OES_texture_float)'
  +';'#10'  }'#10#10'  static getIsDrawBuffers() {'#10'    return Boolean(testE'
  +'xtensions.WEBGL_draw_buffers);'#10'  }'#10#10'  static getChannelCount() {'
  +#10'    return testExtensions.WEBGL_draw_buffers ?'#10'      testContext.get'
  +'Parameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :'#10' '
  +'     1;'#10'  }'#10#10'  static getMaxTextureSize() {'#10'    return testCo'
  +'ntext.getParameter(testContext.MAX_TEXTURE_SIZE);'#10'  }'#10#10'  static g'
  +'et testCanvas() {'#10'    return testCanvas;'#10'  }'#10#10'  static get te'
  +'stContext() {'#10'    return testContext;'#10'  }'#10#10'  static get featu'
  +'res() {'#10'    return features;'#10'  }'#10#10'  initCanvas() {'#10'    re'
  +'turn {};'#10'  }'#10#10'  initContext() {'#10'    return getContext(2, 2, {'
  +#10'      preserveDrawingBuffer: true'#10'    });'#10'  }'#10#10'  initExten'
  +'sions() {'#10'    this.extensions = {'#10'      STACKGL_resize_drawingbuffe'
  +'r: this.context.getExtension(''STACKGL_resize_drawingbuffer''),'#10'      S'
  +'TACKGL_destroy_context: this.context.getExtension(''STACKGL_destroy_context'
  +'''),'#10'      OES_texture_float: this.context.getExtension(''OES_texture_f'
  +'loat''),'#10'      OES_texture_float_linear: this.context.getExtension(''OE'
  +'S_texture_float_linear''),'#10'      OES_element_index_uint: this.context.g'
  +'etExtension(''OES_element_index_uint''),'#10'      WEBGL_draw_buffers: this'
  +'.context.getExtension(''WEBGL_draw_buffers''),'#10'    };'#10'  }'#10#10'  '
  +'build() {'#10'    super.build.apply(this, arguments);'#10'    if (!this.fal'
  +'lbackRequested) {'#10'      this.extensions.STACKGL_resize_drawingbuffer.re'
  +'size(this.maxTexSize[0], this.maxTexSize[1]);'#10'    }'#10'  }'#10#10'  de'
  +'stroyExtensions() {'#10'    this.extensions.STACKGL_resize_drawingbuffer = '
  +'null;'#10'    this.extensions.STACKGL_destroy_context = null;'#10'    this.'
  +'extensions.OES_texture_float = null;'#10'    this.extensions.OES_texture_fl'
  +'oat_linear = null;'#10'    this.extensions.OES_element_index_uint = null;'
  +#10'    this.extensions.WEBGL_draw_buffers = null;'#10'  }'#10#10'  static d'
  +'estroyContext(context) {'#10'    const extension = context.getExtension(''S'
  +'TACKGL_destroy_context'');'#10'    if (extension && extension.destroy) {'#10
  +'      extension.destroy();'#10'    }'#10'  }'#10#10'  toString() {'#10'    '
  +'const setupContextString = `const gl = context || require(''gl'')(1, 1);\n`'
  +';'#10'    const destroyContextString = `    if (!context) { gl.getExtension'
  +'(''STACKGL_destroy_context'').destroy(); }\n`;'#10'    return glKernelStrin'
  +'g(this.constructor, arguments, this, setupContextString, destroyContextStri'
  +'ng);'#10'  }'#10#10'  setOutput(output) {'#10'    super.setOutput(output);'
  +#10'    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) '
  ,'{'#10'      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTex'
  +'Size[0], this.maxTexSize[1]);'#10'    }'#10'    return this;'#10'  }'#10'}'
  +#10#10'module.exports = {'#10'  HeadlessGLKernel'#10'};'#10'},{"../gl/kernel'
  +'-string":12,"../web-gl/kernel":70,"gl":2}],35:[function(require,module,expo'
  +'rts){'#10'class KernelValue {'#10'  constructor(value, settings) {'#10'    '
  +'const {'#10'      name,'#10'      kernel,'#10'      context,'#10'      chec'
  +'kContext,'#10'      onRequestContextHandle,'#10'      onUpdateValueMismatch'
  +','#10'      origin,'#10'      strictIntegers,'#10'      type,'#10'      tac'
  +'tic,'#10'    } = settings;'#10'    if (!name) {'#10'      throw new Error('
  +'''name not set'');'#10'    }'#10'    if (!type) {'#10'      throw new Error'
  +'(''type not set'');'#10'    }'#10'    if (!origin) {'#10'      throw new Er'
  +'ror(''origin not set'');'#10'    }'#10'    if (origin !== ''user'' && origi'
  +'n !== ''constants'') {'#10'      throw new Error(`origin must be "user" or '
  +'"constants" value is "${ origin }"`);'#10'    }'#10'    if (!onRequestConte'
  +'xtHandle) {'#10'      throw new Error(''onRequestContextHandle is not set'''
  +');'#10'    }'#10'    this.name = name;'#10'    this.origin = origin;'#10'  '
  +'  this.tactic = tactic;'#10'    this.varName = origin === ''constants'' ? `'
  +'constants.${name}` : name;'#10'    this.kernel = kernel;'#10'    this.stric'
  +'tIntegers = strictIntegers;'#10'    this.type = value.type || type;'#10'   '
  +' this.size = value.size || null;'#10'    this.index = null;'#10'    this.co'
  +'ntext = context;'#10'    this.checkContext = checkContext !== null && check'
  +'Context !== undefined ? checkContext : true;'#10'    this.contextHandle = n'
  +'ull;'#10'    this.onRequestContextHandle = onRequestContextHandle;'#10'    '
  +'this.onUpdateValueMismatch = onUpdateValueMismatch;'#10'    this.forceUploa'
  +'dEachRun = null;'#10'  }'#10#10'  get id() {'#10'    return `${this.origin}'
  +'_${name}`;'#10'  }'#10#10'  getSource() {'#10'    throw new Error(`"getSour'
  +'ce" not defined on ${ this.constructor.name }`);'#10'  }'#10#10'  updateVal'
  +'ue(value) {'#10'    throw new Error(`"updateValue" not defined on ${ this.c'
  +'onstructor.name }`);'#10'  }'#10'}'#10#10'module.exports = {'#10'  KernelVa'
  +'lue'#10'};'#10'},{}],36:[function(require,module,exports){'#10'const { util'
  +'s } = require(''../utils'');'#10'const { Input } = require(''../input'');'
  +#10#10'class Kernel {'#10'  static get isSupported() {'#10'    throw new Err'
  +'or(`"isSupported" not implemented on ${ this.name }`);'#10'  }'#10#10'  sta'
  +'tic isContextMatch(context) {'#10'    throw new Error(`"isContextMatch" not'
  +' implemented on ${ this.name }`);'#10'  }'#10#10'  static getFeatures() {'
  +#10'    throw new Error(`"getFeatures" not implemented on ${ this.name }`);'
  +#10'  }'#10#10'  static destroyContext(context) {'#10'    throw new Error(`"'
  +'destroyContext" called on ${ this.name }`);'#10'  }'#10#10'  static nativeF'
  +'unctionArguments() {'#10'    throw new Error(`"nativeFunctionArguments" cal'
  +'led on ${ this.name }`);'#10'  }'#10#10'  static nativeFunctionReturnType()'
  +' {'#10'    throw new Error(`"nativeFunctionReturnType" called on ${ this.na'
  +'me }`);'#10'  }'#10#10'  static combineKernels() {'#10'    throw new Error('
  +'`"combineKernels" called on ${ this.name }`);'#10'  }'#10#10'  constructor('
  +'source, settings) {'#10'    if (typeof source !== ''object'') {'#10'      i'
  +'f (typeof source !== ''string'') {'#10'        throw new Error(''source not'
  +' a string'');'#10'      }'#10'      if (!utils.isFunctionString(source)) {'
  +#10'        throw new Error(''source not a function string'');'#10'      }'
  +#10'    }'#10'    this.useLegacyEncoder = false;'#10'    this.fallbackReques'
  +'ted = false;'#10'    this.onRequestFallback = null;'#10#10'    this.argumen'
  +'tNames = typeof source === ''string'' ? utils.getArgumentNamesFromString(so'
  +'urce) : null;'#10'    this.argumentTypes = null;'#10'    this.argumentSizes'
  +' = null;'#10'    this.argumentBitRatios = null;'#10'    this.kernelArgument'
  +'s = null;'#10'    this.kernelConstants = null;'#10'    this.forceUploadKern'
  +'elConstants = null;'#10#10#10'    this.source = source;'#10#10'    this.out'
  +'put = null;'#10#10'    this.debug = false;'#10#10'    this.graphical = fals'
  +'e;'#10#10'    this.loopMaxIterations = 0;'#10#10'    this.constants = null;'
  +#10#10'    this.constantTypes = null;'#10#10'    this.constantBitRatios = nu'
  +'ll;'#10#10'    this.dynamicArguments = false;'#10#10'    this.dynamicOutput'
  +' = false;'#10#10'    this.canvas = null;'#10#10'    this.context = null;'#10
  +#10'    this.checkContext = null;'#10#10'    this.gpu = null;'#10#10'    thi'
  +'s.functions = null;'#10#10'    this.nativeFunctions = null;'#10#10'    this'
  +'.injectedNative = null;'#10#10'    this.subKernels = null;'#10#10'    this.'
  +'validate = true;'#10#10'    this.immutable = false;'#10#10'    this.pipelin'
  +'e = false;'#10#10'    this.precision = null;'#10#10'    this.tactic = null;'
  ,#10#10'    this.plugins = null;'#10#10'    this.returnType = null;'#10'    t'
  +'his.leadingReturnStatement = null;'#10'    this.followingReturnStatement = '
  +'null;'#10'    this.optimizeFloatMemory = null;'#10'    this.strictIntegers '
  +'= false;'#10'    this.fixIntegerDivisionAccuracy = null;'#10'    this.onIst'
  +'anbulCoverageVariable = null;'#10'    this.removeIstanbulCoverage = false;'
  +#10'    this.built = false;'#10'    this.signature = null;'#10'  }'#10#10'  '
  +'mergeSettings(settings) {'#10'    for (let p in settings) {'#10'      if (!'
  +'settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;'#10'      '
  +'switch (p) {'#10'        case ''output'':'#10'          if (!Array.isArray('
  +'settings.output)) {'#10'            this.setOutput(settings.output); '#10' '
  +'           continue;'#10'          }'#10'          break;'#10'        case '
  +'''functions'':'#10'          this.functions = [];'#10'          for (let i '
  +'= 0; i < settings.functions.length; i++) {'#10'            this.addFunction'
  +'(settings.functions[i]);'#10'          }'#10'          continue;'#10'      '
  +'  case ''graphical'':'#10'          if (settings[p] && !settings.hasOwnProp'
  +'erty(''precision'')) {'#10'            this.precision = ''unsigned'';'#10' '
  +'         }'#10'          this[p] = settings[p];'#10'          continue;'#10
  +'        case ''removeIstanbulCoverage'':'#10'          if (settings[p] !== '
  +'null) {'#10'            this[p] = settings[p];'#10'          }'#10'        '
  +'  continue;'#10'        case ''nativeFunctions'':'#10'          if (!settin'
  +'gs.nativeFunctions) continue;'#10'          this.nativeFunctions = [];'#10
  +'          for (let i = 0; i < settings.nativeFunctions.length; i++) {'#10' '
  +'           const s = settings.nativeFunctions[i];'#10'            const { n'
  +'ame, source } = s;'#10'            this.addNativeFunction(name, source, s);'
  +#10'          }'#10'          continue;'#10'      }'#10'      this[p] = sett'
  +'ings[p];'#10'    }'#10#10'    if (!this.canvas) this.canvas = this.initCanv'
  +'as();'#10'    if (!this.context) this.context = this.initContext();'#10'   '
  +' if (!this.plugins) this.plugins = this.initPlugins(settings);'#10'  }'#10
  +'  build() {'#10'    throw new Error(`"build" not defined on ${ this.constru'
  +'ctor.name }`);'#10'  }'#10#10'  run() {'#10'    throw new Error(`"run" not '
  +'defined on ${ this.constructor.name }`)'#10'  }'#10#10'  initCanvas() {'#10
  +'    throw new Error(`"initCanvas" not defined on ${ this.constructor.name }'
  +'`);'#10'  }'#10#10'  initContext() {'#10'    throw new Error(`"initContext"'
  +' not defined on ${ this.constructor.name }`);'#10'  }'#10#10'  initPlugins('
  +'settings) {'#10'    throw new Error(`"initPlugins" not defined on ${ this.c'
  +'onstructor.name }`);'#10'  }'#10#10'  addFunction(source, settings = {}) {'
  +#10'    if (source.name && source.source && source.argumentTypes && ''return'
  +'Type'' in source) {'#10'      this.functions.push(source);'#10'    } else i'
  +'f (''settings'' in source && ''source'' in source) {'#10'      this.functio'
  +'ns.push(this.functionToIGPUFunction(source.source, source.settings));'#10' '
  +'   } else if (typeof source === ''string'' || typeof source === ''function'
  +''') {'#10'      this.functions.push(this.functionToIGPUFunction(source, set'
  +'tings));'#10'    } else {'#10'      throw new Error(`function not properly '
  +'defined`);'#10'    }'#10'    return this;'#10'  }'#10#10'  addNativeFunctio'
  +'n(name, source, settings = {}) {'#10'    const { argumentTypes, argumentNam'
  +'es } = settings.argumentTypes ?'#10'      splitArgumentTypes(settings.argum'
  +'entTypes) :'#10'      this.constructor.nativeFunctionArguments(source) || {'
  +'};'#10'    this.nativeFunctions.push({'#10'      name,'#10'      source,'#10
  +'      settings,'#10'      argumentTypes,'#10'      argumentNames,'#10'     '
  +' returnType: settings.returnType || this.constructor.nativeFunctionReturnTy'
  +'pe(source)'#10'    });'#10'    return this;'#10'  }'#10#10'  setupArguments'
  +'(args) {'#10'    this.kernelArguments = [];'#10'    if (!this.argumentTypes'
  +') {'#10'      if (!this.argumentTypes) {'#10'        this.argumentTypes = ['
  +'];'#10'        for (let i = 0; i < args.length; i++) {'#10'          const '
  +'argType = utils.getVariableType(args[i], this.strictIntegers);'#10'        '
  +'  const type = argType === ''Integer'' ? ''Number'' : argType;'#10'        '
  +'  this.argumentTypes.push(type);'#10'          this.kernelArguments.push({'
  +#10'            type'#10'          });'#10'        }'#10'      }'#10'    } e'
  +'lse {'#10'      for (let i = 0; i < this.argumentTypes.length; i++) {'#10' '
  +'       this.kernelArguments.push({'#10'          type: this.argumentTypes[i'
  +']'#10'        });'#10'      }'#10'    }'#10#10'    this.argumentSizes = new'
  +' Array(args.length);'#10'    this.argumentBitRatios = new Int32Array(args.l'
  +'ength);'#10#10'    for (let i = 0; i < args.length; i++) {'#10'      const '
  +'arg = args[i];'#10'      this.argumentSizes[i] = arg.constructor === Input '
  ,'? arg.size : null;'#10'      this.argumentBitRatios[i] = this.getBitRatio(a'
  +'rg);'#10'    }'#10#10'    if (this.argumentNames.length !== args.length) {'
  +#10'      throw new Error(`arguments are miss-aligned`);'#10'    }'#10'  }'
  +#10#10'  setupConstants() {'#10'    this.kernelConstants = [];'#10'    let n'
  +'eedsConstantTypes = this.constantTypes === null;'#10'    if (needsConstantT'
  +'ypes) {'#10'      this.constantTypes = {};'#10'    }'#10'    this.constantB'
  +'itRatios = {};'#10'    if (this.constants) {'#10'      for (let name in thi'
  +'s.constants) {'#10'        if (needsConstantTypes) {'#10'          const ty'
  +'pe = utils.getVariableType(this.constants[name], this.strictIntegers);'#10
  +'          this.constantTypes[name] = type;'#10'          this.kernelConstan'
  +'ts.push({'#10'            name,'#10'            type'#10'          });'#10
  +'        } else {'#10'          this.kernelConstants.push({'#10'            '
  +'name,'#10'            type: this.constantTypes[name]'#10'          });'#10
  +'        }'#10'        this.constantBitRatios[name] = this.getBitRatio(this.'
  +'constants[name]);'#10'      }'#10'    }'#10'  }'#10#10'  setOptimizeFloatMe'
  +'mory(flag) {'#10'    this.optimizeFloatMemory = flag;'#10'    return this;'
  +#10'  }'#10#10'  toKernelOutput(output) {'#10'    if (output.hasOwnProperty('
  +'''x'')) {'#10'      if (output.hasOwnProperty(''y'')) {'#10'        if (out'
  +'put.hasOwnProperty(''z'')) {'#10'          return [output.x, output.y, outp'
  +'ut.z];'#10'        } else {'#10'          return [output.x, output.y];'#10
  +'        }'#10'      } else {'#10'        return [output.x];'#10'      }'#10
  +'    } else {'#10'      return output;'#10'    }'#10'  }'#10#10'  setOutput('
  +'output) {'#10'    this.output = this.toKernelOutput(output);'#10'    return'
  +' this;'#10'  }'#10#10'  setDebug(flag) {'#10'    this.debug = flag;'#10'   '
  +' return this;'#10'  }'#10#10'  setGraphical(flag) {'#10'    this.graphical '
  +'= flag;'#10'    this.precision = ''unsigned'';'#10'    return this;'#10'  }'
  +#10#10'  setLoopMaxIterations(max) {'#10'    this.loopMaxIterations = max;'
  +#10'    return this;'#10'  }'#10#10'  setConstants(constants) {'#10'    this'
  +'.constants = constants;'#10'    return this;'#10'  }'#10#10'  setConstantTy'
  +'pes(constantTypes) {'#10'    this.constantTypes = constantTypes;'#10'    re'
  +'turn this;'#10'  }'#10#10'  setFunctions(functions) {'#10'    for (let i = '
  +'0; i < functions.length; i++) {'#10'      this.addFunction(functions[i]);'
  +#10'    }'#10'    return this;'#10'  }'#10#10'  setNativeFunctions(nativeFun'
  +'ctions) {'#10'    for (let i = 0; i < nativeFunctions.length; i++) {'#10'  '
  +'    const settings = nativeFunctions[i];'#10'      const { name, source } ='
  +' settings;'#10'      this.addNativeFunction(name, source, settings);'#10'  '
  +'  }'#10'    return this;'#10'  }'#10#10'  setInjectedNative(injectedNative)'
  +' {'#10'    this.injectedNative = injectedNative;'#10'    return this;'#10' '
  +' }'#10#10'  setPipeline(flag) {'#10'    this.pipeline = flag;'#10'    retur'
  +'n this;'#10'  }'#10#10'  setPrecision(flag) {'#10'    this.precision = flag'
  +';'#10'    return this;'#10'  }'#10#10'  setDimensions(flag) {'#10'    utils'
  +'.warnDeprecated(''method'', ''setDimensions'', ''setOutput'');'#10'    this'
  +'.output = flag;'#10'    return this;'#10'  }'#10#10'  setOutputToTexture(fl'
  +'ag) {'#10'    utils.warnDeprecated(''method'', ''setOutputToTexture'', ''se'
  +'tPipeline'');'#10'    this.pipeline = flag;'#10'    return this;'#10'  }'#10
  +#10'  setImmutable(flag) {'#10'    this.immutable = flag;'#10'    return thi'
  +'s;'#10'  }'#10#10'  setCanvas(canvas) {'#10'    this.canvas = canvas;'#10' '
  +'   return this;'#10'  }'#10#10'  setStrictIntegers(flag) {'#10'    this.str'
  +'ictIntegers = flag;'#10'    return this;'#10'  }'#10#10'  setDynamicOutput('
  +'flag) {'#10'    this.dynamicOutput = flag;'#10'    return this;'#10'  }'#10
  +#10'  setHardcodeConstants(flag) {'#10'    utils.warnDeprecated(''method'', '
  +'''setHardcodeConstants'');'#10'    this.setDynamicOutput(flag);'#10'    thi'
  +'s.setDynamicArguments(flag);'#10'    return this;'#10'  }'#10#10'  setDynam'
  +'icArguments(flag) {'#10'    this.dynamicArguments = flag;'#10'    return th'
  +'is;'#10'  }'#10#10'  setUseLegacyEncoder(flag) {'#10'    this.useLegacyEnco'
  +'der = flag;'#10'    return this;'#10'  }'#10#10'  setWarnVarUsage(flag) {'
  +#10'    utils.warnDeprecated(''method'', ''setWarnVarUsage'');'#10'    retur'
  +'n this;'#10'  }'#10#10'  getCanvas() {'#10'    utils.warnDeprecated(''metho'
  +'d'', ''getCanvas'');'#10'    return this.canvas;'#10'  }'#10#10'  getWebGl('
  +') {'#10'    utils.warnDeprecated(''method'', ''getWebGl'');'#10'    return '
  +'this.context;'#10'  }'#10#10'  setContext(context) {'#10'    this.context ='
  +' context;'#10'    return this;'#10'  }'#10#10'  setArgumentTypes(argumentTy'
  +'pes) {'#10'    if (Array.isArray(argumentTypes)) {'#10'      this.argumentT'
  +'ypes = argumentTypes;'#10'    } else {'#10'      this.argumentTypes = [];'
  ,#10'      for (const p in argumentTypes) {'#10'        if (!argumentTypes.ha'
  +'sOwnProperty(p)) continue;'#10'        const argumentIndex = this.argumentN'
  +'ames.indexOf(p);'#10'        if (argumentIndex === -1) throw new Error(`una'
  +'ble to find argument ${ p }`);'#10'        this.argumentTypes[argumentIndex'
  +'] = argumentTypes[p];'#10'      }'#10'    }'#10'    return this;'#10'  }'#10
  +#10'  setTactic(tactic) {'#10'    this.tactic = tactic;'#10'    return this;'
  +#10'  }'#10#10'  requestFallback(args) {'#10'    if (!this.onRequestFallback'
  +') {'#10'      throw new Error(`"onRequestFallback" not defined on ${ this.c'
  +'onstructor.name }`);'#10'    }'#10'    this.fallbackRequested = true;'#10' '
  +'   return this.onRequestFallback(args);'#10'  }'#10#10'  validateSettings()'
  +' {'#10'    throw new Error(`"validateSettings" not defined on ${ this.const'
  +'ructor.name }`);'#10'  }'#10#10'  addSubKernel(subKernel) {'#10'    if (thi'
  +'s.subKernels === null) {'#10'      this.subKernels = [];'#10'    }'#10'    '
  +'if (!subKernel.source) throw new Error(''subKernel missing "source" propert'
  +'y'');'#10'    if (!subKernel.property && isNaN(subKernel.property)) throw n'
  +'ew Error(''subKernel missing "property" property'');'#10'    if (!subKernel'
  +'.name) throw new Error(''subKernel missing "name" property'');'#10'    this'
  +'.subKernels.push(subKernel);'#10'    return this;'#10'  }'#10#10'  destroy('
  +'removeCanvasReferences) {'#10'    throw new Error(`"destroy" called on ${ t'
  +'his.constructor.name }`);'#10'  }'#10#10'  getBitRatio(value) {'#10'    if '
  +'(this.precision === ''single'') {'#10'      return 4;'#10'    } else if (Ar'
  +'ray.isArray(value[0])) {'#10'      return this.getBitRatio(value[0]);'#10' '
  +'   } else if (value.constructor === Input) {'#10'      return this.getBitRa'
  +'tio(value.value);'#10'    }'#10'    switch (value.constructor) {'#10'      '
  +'case Uint8ClampedArray:'#10'      case Uint8Array:'#10'      case Int8Array'
  +':'#10'        return 1;'#10'      case Uint16Array:'#10'      case Int16Arr'
  +'ay:'#10'        return 2;'#10'      case Float32Array:'#10'      case Int32'
  +'Array:'#10'      default:'#10'        return 4;'#10'    }'#10'  }'#10#10'  '
  +'getPixels(flip) {'#10'    throw new Error(`"getPixels" called on ${ this.co'
  +'nstructor.name }`);'#10'  }'#10#10'  checkOutput() {'#10'    if (!this.outp'
  +'ut || !utils.isArray(this.output)) throw new Error(''kernel.output not an a'
  +'rray'');'#10'    if (this.output.length < 1) throw new Error(''kernel.outpu'
  +'t is empty, needs at least 1 value'');'#10'    for (let i = 0; i < this.out'
  +'put.length; i++) {'#10'      if (isNaN(this.output[i]) || this.output[i] < '
  +'1) {'#10'        throw new Error(`${ this.constructor.name }.output[${ i }]'
  +' incorrectly defined as \`${ this.output[i] }\`, needs to be numeric, and g'
  +'reater than 0`);'#10'      }'#10'    }'#10'  }'#10#10'  prependString(value'
  +') {'#10'    throw new Error(`"prependString" called on ${ this.constructor.'
  +'name }`);'#10'  }'#10#10'  hasPrependString(value) {'#10'    throw new Erro'
  +'r(`"hasPrependString" called on ${ this.constructor.name }`);'#10'  }'#10#10
  +'  toJSON() {'#10'    return {'#10'      settings: {'#10'        output: thi'
  +'s.output,'#10'        pipeline: this.pipeline,'#10'        argumentNames: t'
  +'his.argumentNames,'#10'        argumentsTypes: this.argumentTypes,'#10'    '
  +'    constants: this.constants,'#10'        pluginNames: this.plugins ? this'
  +'.plugins.map(plugin => plugin.name) : null,'#10'        returnType: this.re'
  +'turnType,'#10'      }'#10'    };'#10'  }'#10#10'  buildSignature(args) {'#10
  +'    const Constructor = this.constructor;'#10'    this.signature = Construc'
  +'tor.getSignature(this, Constructor.getArgumentTypes(this, args));'#10'  }'
  +#10#10'  static getArgumentTypes(kernel, args) {'#10'    const argumentTypes'
  +' = new Array(args.length);'#10'    for (let i = 0; i < args.length; i++) {'
  +#10'      const arg = args[i];'#10'      const type = kernel.argumentTypes[i'
  +'];'#10'      if (arg.type) {'#10'        argumentTypes[i] = arg.type;'#10' '
  +'     } else {'#10'        switch (type) {'#10'          case ''Number'':'#10
  +'          case ''Integer'':'#10'          case ''Float'':'#10'          cas'
  +'e ''ArrayTexture(1)'':'#10'            argumentTypes[i] = utils.getVariable'
  +'Type(arg);'#10'            break;'#10'          default:'#10'            ar'
  +'gumentTypes[i] = type;'#10'        }'#10'      }'#10'    }'#10'    return a'
  +'rgumentTypes;'#10'  }'#10#10'  static getSignature(kernel, argumentTypes) {'
  +#10'    throw new Error(`"getSignature" not implemented on ${ this.name }`);'
  +#10'  }'#10#10'  functionToIGPUFunction(source, settings = {}) {'#10'    if '
  +'(typeof source !== ''string'' && typeof source !== ''function'') throw new '
  +'Error(''source not a string or function'');'#10'    const sourceString = ty'
  +'peof source === ''string'' ? source : source.toString();'#10'    let argume'
  +'ntTypes = [];'#10#10'    if (Array.isArray(settings.argumentTypes)) {'#10' '
  ,'     argumentTypes = settings.argumentTypes;'#10'    } else if (typeof sett'
  +'ings.argumentTypes === ''object'') {'#10'      argumentTypes = utils.getArg'
  +'umentNamesFromString(sourceString)'#10'        .map(name => settings.argume'
  +'ntTypes[name]) || [];'#10'    } else {'#10'      argumentTypes = settings.a'
  +'rgumentTypes || [];'#10'    }'#10#10'    return {'#10'      name: utils.get'
  +'FunctionNameFromString(sourceString) || null,'#10'      source: sourceStrin'
  +'g,'#10'      argumentTypes,'#10'      returnType: settings.returnType || nu'
  +'ll,'#10'    };'#10'  }'#10#10'  onActivate(previousKernel) {}'#10'}'#10#10
  +'function splitArgumentTypes(argumentTypesObject) {'#10'  const argumentName'
  +'s = Object.keys(argumentTypesObject);'#10'  const argumentTypes = [];'#10' '
  +' for (let i = 0; i < argumentNames.length; i++) {'#10'    const argumentNam'
  +'e = argumentNames[i];'#10'    argumentTypes.push(argumentTypesObject[argume'
  +'ntName]);'#10'  }'#10'  return { argumentTypes, argumentNames };'#10'}'#10
  +#10'module.exports = {'#10'  Kernel'#10'};'#10'},{"../input":110,"../utils":'
  +'114}],37:[function(require,module,exports){'#10'const fragmentShader = `__H'
  +'EADER__;'#10'__FLOAT_TACTIC_DECLARATION__;'#10'__INT_TACTIC_DECLARATION__;'
  +#10'__SAMPLER_2D_TACTIC_DECLARATION__;'#10#10'const int LOOP_MAX = __LOOP_MA'
  +'X__;'#10#10'__PLUGINS__;'#10'__CONSTANTS__;'#10#10'varying vec2 vTexCoord;'
  +#10#10'float acosh(float x) {'#10'  return log(x + sqrt(x * x - 1.0));'#10'}'
  +#10#10'float sinh(float x) {'#10'  return (pow(${Math.E}, x) - pow(${Math.E}'
  +', -x)) / 2.0;'#10'}'#10#10'float asinh(float x) {'#10'  return log(x + sqrt'
  +'(x * x + 1.0));'#10'}'#10#10'float atan2(float v1, float v2) {'#10'  if (v1'
  +' == 0.0 || v2 == 0.0) return 0.0;'#10'  return atan(v1 / v2);'#10'}'#10#10
  +'float atanh(float x) {'#10'  x = (x + 1.0) / (x - 1.0);'#10'  if (x < 0.0) '
  +'{'#10'    return 0.5 * log(-x);'#10'  }'#10'  return 0.5 * log(x);'#10'}'#10
  +#10'float cbrt(float x) {'#10'  if (x >= 0.0) {'#10'    return pow(x, 1.0 / '
  +'3.0);'#10'  } else {'#10'    return -pow(x, 1.0 / 3.0);'#10'  }'#10'}'#10#10
  +'float cosh(float x) {'#10'  return (pow(${Math.E}, x) + pow(${Math.E}, -x))'
  +' / 2.0; '#10'}'#10#10'float expm1(float x) {'#10'  return pow(${Math.E}, x)'
  +' - 1.0; '#10'}'#10#10'float fround(highp float x) {'#10'  return x;'#10'}'
  +#10#10'float imul(float v1, float v2) {'#10'  return float(int(v1) * int(v2)'
  +');'#10'}'#10#10'float log10(float x) {'#10'  return log2(x) * (1.0 / log2(1'
  +'0.0));'#10'}'#10#10'float log1p(float x) {'#10'  return log(1.0 + x);'#10'}'
  +#10#10'float _pow(float v1, float v2) {'#10'  if (v2 == 0.0) return 1.0;'#10
  +'  return pow(v1, v2);'#10'}'#10#10'float tanh(float x) {'#10'  float e = ex'
  +'p(2.0 * x);'#10'  return (e - 1.0) / (e + 1.0);'#10'}'#10#10'float trunc(fl'
  +'oat x) {'#10'  if (x >= 0.0) {'#10'    return floor(x); '#10'  } else {'#10
  +'    return ceil(x);'#10'  }'#10'}'#10#10'vec4 _round(vec4 x) {'#10'  return'
  +' floor(x + 0.5);'#10'}'#10#10'float _round(float x) {'#10'  return floor(x '
  +'+ 0.5);'#10'}'#10#10'const int BIT_COUNT = 32;'#10'int modi(int x, int y) {'
  +#10'  return x - y * (x / y);'#10'}'#10#10'int bitwiseOr(int a, int b) {'#10
  +'  int result = 0;'#10'  int n = 1;'#10'  '#10'  for (int i = 0; i < BIT_COU'
  +'NT; i++) {'#10'    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {'#10'      '
  +'result += n;'#10'    }'#10'    a = a / 2;'#10'    b = b / 2;'#10'    n = n '
  +'* 2;'#10'    if(!(a > 0 || b > 0)) {'#10'      break;'#10'    }'#10'  }'#10
  +'  return result;'#10'}'#10'int bitwiseXOR(int a, int b) {'#10'  int result '
  +'= 0;'#10'  int n = 1;'#10'  '#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10
  +'    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {'#10'      result += n;'#10
  +'    }'#10'    a = a / 2;'#10'    b = b / 2;'#10'    n = n * 2;'#10'    if(!'
  +'(a > 0 || b > 0)) {'#10'      break;'#10'    }'#10'  }'#10'  return result;'
  +#10'}'#10'int bitwiseAnd(int a, int b) {'#10'  int result = 0;'#10'  int n ='
  +' 1;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if ((modi(a, 2) == '
  +'1) && (modi(b, 2) == 1)) {'#10'      result += n;'#10'    }'#10'    a = a /'
  +' 2;'#10'    b = b / 2;'#10'    n = n * 2;'#10'    if(!(a > 0 && b > 0)) {'
  +#10'      break;'#10'    }'#10'  }'#10'  return result;'#10'}'#10'int bitwis'
  +'eNot(int a) {'#10'  int result = 0;'#10'  int n = 1;'#10'  '#10'  for (int '
  +'i = 0; i < BIT_COUNT; i++) {'#10'    if (modi(a, 2) == 0) {'#10'      resul'
  +'t += n;    '#10'    }'#10'    a = a / 2;'#10'    n = n * 2;'#10'  }'#10'  r'
  +'eturn result;'#10'}'#10'int bitwiseZeroFillLeftShift(int n, int shift) {'#10
  +'  int maxBytes = BIT_COUNT;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10
  +'    if (maxBytes >= n) {'#10'      break;'#10'    }'#10'    maxBytes *= 2;'
  +#10'  }'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (i >= shift) '
  +'{'#10'      break;'#10'    }'#10'    n *= 2;'#10'  }'#10#10'  int result = '
  +'0;'#10'  int byteVal = 1;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10' '
  ,'   if (i >= maxBytes) break;'#10'    if (modi(n, 2) > 0) { result += byteVa'
  +'l; }'#10'    n = int(n / 2);'#10'    byteVal *= 2;'#10'  }'#10'  return res'
  +'ult;'#10'}'#10#10'int bitwiseSignedRightShift(int num, int shifts) {'#10'  '
  +'return int(floor(float(num) / pow(2.0, float(shifts))));'#10'}'#10#10'int b'
  +'itwiseZeroFillRightShift(int n, int shift) {'#10'  int maxBytes = BIT_COUNT'
  +';'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (maxBytes >= n) {'
  +#10'      break;'#10'    }'#10'    maxBytes *= 2;'#10'  }'#10'  for (int i ='
  +' 0; i < BIT_COUNT; i++) {'#10'    if (i >= shift) {'#10'      break;'#10'  '
  +'  }'#10'    n /= 2;'#10'  }'#10'  int result = 0;'#10'  int byteVal = 1;'#10
  +'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (i >= maxBytes) break;'
  +#10'    if (modi(n, 2) > 0) { result += byteVal; }'#10'    n = int(n / 2);'
  +#10'    byteVal *= 2;'#10'  }'#10'  return result;'#10'}'#10#10'vec2 integer'
  +'Mod(vec2 x, float y) {'#10'  vec2 res = floor(mod(x, y));'#10'  return res '
  +'* step(1.0 - floor(y), -res);'#10'}'#10#10'vec3 integerMod(vec3 x, float y)'
  +' {'#10'  vec3 res = floor(mod(x, y));'#10'  return res * step(1.0 - floor(y'
  +'), -res);'#10'}'#10#10'vec4 integerMod(vec4 x, vec4 y) {'#10'  vec4 res = f'
  +'loor(mod(x, y));'#10'  return res * step(1.0 - floor(y), -res);'#10'}'#10#10
  +'float integerMod(float x, float y) {'#10'  float res = floor(mod(x, y));'#10
  +'  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);'#10'}'#10#10'int integer'
  +'Mod(int x, int y) {'#10'  return x - (y * int(x / y));'#10'}'#10#10'__DIVID'
  +'E_WITH_INTEGER_CHECK__;'#10#10'// Here be dragons!'#10'// DO NOT OPTIMIZE T'
  +'HIS CODE'#10'// YOU WILL BREAK SOMETHING ON SOMEBODY\''S MACHINE'#10'// LEA'
  +'VE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME'#10'const vec2 MAGIC_VEC = vec'
  +'2(1.0, -256.0);'#10'const vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0'
  +');'#10'const vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.00001525878906'
  +'25, 0.0); // 1, 1/256, 1/65536'#10'float decode32(vec4 texel) {'#10'  __DEC'
  +'ODE32_ENDIANNESS__;'#10'  texel *= 255.0;'#10'  vec2 gte128;'#10'  gte128.x'
  +' = texel.b >= 128.0 ? 1.0 : 0.0;'#10'  gte128.y = texel.a >= 128.0 ? 1.0 : '
  +'0.0;'#10'  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);'
  +#10'  float res = exp2(_round(exponent));'#10'  texel.b = texel.b - 128.0 * '
  +'gte128.x;'#10'  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)'
  +') + res;'#10'  res *= gte128.y * -2.0 + 1.0;'#10'  return res;'#10'}'#10#10
  +'float decode16(vec4 texel, int index) {'#10'  int channel = integerMod(inde'
  +'x, 2);'#10'  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;'
  +#10'  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;'#10'  re'
  +'turn 0.0;'#10'}'#10#10'float decode8(vec4 texel, int index) {'#10'  int cha'
  +'nnel = integerMod(index, 4);'#10'  if (channel == 0) return texel.r * 255.0'
  +';'#10'  if (channel == 1) return texel.g * 255.0;'#10'  if (channel == 2) r'
  +'eturn texel.b * 255.0;'#10'  if (channel == 3) return texel.a * 255.0;'#10
  +'  return 0.0;'#10'}'#10#10'vec4 legacyEncode32(float f) {'#10'  float F = a'
  +'bs(f);'#10'  float sign = f < 0.0 ? 1.0 : 0.0;'#10'  float exponent = floor'
  +'(log2(F));'#10'  float mantissa = (exp2(-exponent) * F);'#10'  // exponent '
  +'+= floor(log2(mantissa));'#10'  vec4 texel = vec4(F * exp2(23.0-exponent)) '
  +'* SCALE_FACTOR_INV;'#10'  texel.rg = integerMod(texel.rg, 256.0);'#10'  tex'
  +'el.b = integerMod(texel.b, 128.0);'#10'  texel.a = exponent*0.5 + 63.5;'#10
  +'  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;'#10'  te'
  +'xel = floor(texel);'#10'  texel *= 0.003921569; // 1/255'#10'  __ENCODE32_E'
  +'NDIANNESS__;'#10'  return texel;'#10'}'#10#10'// https://github.com/gpujs/g'
  +'pu.js/wiki/Encoder-details'#10'vec4 encode32(float value) {'#10'  if (value'
  +' == 0.0) return vec4(0, 0, 0, 0);'#10#10'  float exponent;'#10'  float mant'
  +'issa;'#10'  vec4  result;'#10'  float sgn;'#10#10'  sgn = step(0.0, -value)'
  +';'#10'  value = abs(value);'#10#10'  exponent = floor(log2(value));'#10#10
  +'  mantissa = value*pow(2.0, -exponent)-1.0;'#10'  exponent = exponent+127.0'
  +';'#10'  result   = vec4(0,0,0,0);'#10#10'  result.a = floor(exponent/2.0);'
  +#10'  exponent = exponent - result.a*2.0;'#10'  result.a = result.a + 128.0*'
  +'sgn;'#10#10'  result.b = floor(mantissa * 128.0);'#10'  mantissa = mantissa'
  +' - result.b / 128.0;'#10'  result.b = result.b + exponent*128.0;'#10#10'  r'
  +'esult.g = floor(mantissa*32768.0);'#10'  mantissa = mantissa - result.g/327'
  +'68.0;'#10#10'  result.r = floor(mantissa*8388608.0);'#10'  return result/25'
  +'5.0;'#10'}'#10'// Dragons end here'#10#10'int index;'#10'ivec3 threadId;'#10
  +#10'ivec3 indexTo3D(int idx, ivec3 texDim) {'#10'  int z = int(idx / (texDim'
  +'.x * texDim.y));'#10'  idx -= z * int(texDim.x * texDim.y);'#10'  int y = i'
  +'nt(idx / texDim.x);'#10'  int x = int(integerMod(idx, texDim.x));'#10'  ret'
  +'urn ivec3(x, y, z);'#10'}'#10#10'float get32(sampler2D tex, ivec2 texSize, '
  ,'ivec3 texDim, int z, int y, int x) {'#10'  int index = x + texDim.x * (y + '
  +'texDim.y * z);'#10'  int w = texSize.x;'#10'  vec2 st = vec2(float(integerM'
  +'od(index, w)), float(index / w)) + 0.5;'#10'  vec4 texel = texture2D(tex, s'
  +'t / vec2(texSize));'#10'  return decode32(texel);'#10'}'#10#10'float get16('
  +'sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  in'
  +'t index = x + texDim.x * (y + texDim.y * z);'#10'  int w = texSize.x * 2;'
  +#10'  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'
  +#10'  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));'#10
  +'  return decode16(texel, index);'#10'}'#10#10'float get8(sampler2D tex, ive'
  +'c2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + texD'
  +'im.x * (y + texDim.y * z);'#10'  int w = texSize.x * 4;'#10'  vec2 st = vec'
  +'2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10'  vec4 texel = '
  +'texture2D(tex, st / vec2(texSize.x * 4, texSize.y));'#10'  return decode8(t'
  +'exel, index);'#10'}'#10#10'float getMemoryOptimized32(sampler2D tex, ivec2 '
  +'texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + texDim.'
  +'x * (y + texDim.y * z);'#10'  int channel = integerMod(index, 4);'#10'  ind'
  +'ex = index / 4;'#10'  int w = texSize.x;'#10'  vec2 st = vec2(float(integer'
  +'Mod(index, w)), float(index / w)) + 0.5;'#10'  vec4 texel = texture2D(tex, '
  +'st / vec2(texSize));'#10'  if (channel == 0) return texel.r;'#10'  if (chan'
  +'nel == 1) return texel.g;'#10'  if (channel == 2) return texel.b;'#10'  if '
  +'(channel == 3) return texel.a;'#10'  return 0.0;'#10'}'#10#10'vec4 getImage'
  +'2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10' '
  +' int index = x + texDim.x * (y + texDim.y * z);'#10'  int w = texSize.x;'#10
  +'  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10
  +'  return texture2D(tex, st / vec2(texSize));'#10'}'#10#10'float getFloatFro'
  +'mSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x)'
  +' {'#10'  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);'#10'  ret'
  +'urn result[0];'#10'}'#10#10'vec2 getVec2FromSampler2D(sampler2D tex, ivec2 '
  +'texSize, ivec3 texDim, int z, int y, int x) {'#10'  vec4 result = getImage2'
  +'D(tex, texSize, texDim, z, y, x);'#10'  return vec2(result[0], result[1]);'
  +#10'}'#10#10'vec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3'
  +' texDim, int z, int y, int x) {'#10'  int index = x + (texDim.x * (y + (tex'
  +'Dim.y * z)));'#10'  int channel = integerMod(index, 2);'#10'  index = index'
  +' / 2;'#10'  int w = texSize.x;'#10'  vec2 st = vec2(float(integerMod(index,'
  +' w)), float(index / w)) + 0.5;'#10'  vec4 texel = texture2D(tex, st / vec2('
  +'texSize));'#10'  if (channel == 0) return vec2(texel.r, texel.g);'#10'  if '
  +'(channel == 1) return vec2(texel.b, texel.a);'#10'  return vec2(0.0, 0.0);'
  +#10'}'#10#10'vec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 t'
  +'exDim, int z, int y, int x) {'#10'  vec4 result = getImage2D(tex, texSize, '
  +'texDim, z, y, x);'#10'  return vec3(result[0], result[1], result[2]);'#10'}'
  +#10#10'vec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDi'
  +'m, int z, int y, int x) {'#10'  int fieldIndex = 3 * (x + texDim.x * (y + t'
  +'exDim.y * z));'#10'  int vectorIndex = fieldIndex / 4;'#10'  int vectorOffs'
  +'et = fieldIndex - vectorIndex * 4;'#10'  int readY = vectorIndex / texSize.'
  +'x;'#10'  int readX = vectorIndex - readY * texSize.x;'#10'  vec4 tex1 = tex'
  +'ture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));'#10'  '#10'  if (v'
  +'ectorOffset == 0) {'#10'    return tex1.xyz;'#10'  } else if (vectorOffset '
  +'== 1) {'#10'    return tex1.yzw;'#10'  } else {'#10'    readX++;'#10'    if'
  +' (readX >= texSize.x) {'#10'      readX = 0;'#10'      readY++;'#10'    }'
  +#10'    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));'#10
  +'    if (vectorOffset == 2) {'#10'      return vec3(tex1.z, tex1.w, tex2.x);'
  +#10'    } else {'#10'      return vec3(tex1.w, tex2.x, tex2.y);'#10'    }'#10
  +'  }'#10'}'#10#10'vec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, iv'
  +'ec3 texDim, int z, int y, int x) {'#10'  return getImage2D(tex, texSize, te'
  +'xDim, z, y, x);'#10'}'#10#10'vec4 getMemoryOptimizedVec4(sampler2D tex, ive'
  +'c2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + texD'
  +'im.x * (y + texDim.y * z);'#10'  int channel = integerMod(index, 2);'#10'  '
  +'int w = texSize.x;'#10'  vec2 st = vec2(float(integerMod(index, w)), float('
  +'index / w)) + 0.5;'#10'  vec4 texel = texture2D(tex, st / vec2(texSize));'
  +#10'  return vec4(texel.r, texel.g, texel.b, texel.a);'#10'}'#10#10'vec4 act'
  +'ualColor;'#10'void color(float r, float g, float b, float a) {'#10'  actual'
  +'Color = vec4(r,g,b,a);'#10'}'#10#10'void color(float r, float g, float b) {'
  +#10'  color(r,g,b,1.0);'#10'}'#10#10'void color(sampler2D image) {'#10'  act'
  +'ualColor = texture2D(image, vTexCoord);'#10'}'#10#10'float modulo(float num'
  ,'ber, float divisor) {'#10'  if (number < 0.0) {'#10'    number = abs(number'
  +');'#10'    if (divisor < 0.0) {'#10'      divisor = abs(divisor);'#10'    }'
  +#10'    return -mod(number, divisor);'#10'  }'#10'  if (divisor < 0.0) {'#10
  +'    divisor = abs(divisor);'#10'  }'#10'  return mod(number, divisor);'#10
  +'}'#10#10'__INJECTED_NATIVE__;'#10'__MAIN_CONSTANTS__;'#10'__MAIN_ARGUMENTS_'
  +'_;'#10'__KERNEL__;'#10#10'void main(void) {'#10'  index = int(vTexCoord.s *'
  +' float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;'#10
  +'  __MAIN_RESULT__;'#10'}`;'#10#10'module.exports = {'#10'  fragmentShader'
  +#10'};'#10'},{}],38:[function(require,module,exports){'#10'const { utils } ='
  +' require(''../../utils'');'#10'const { FunctionNode } = require(''../functi'
  +'on-node'');'#10#10'class WebGLFunctionNode extends FunctionNode {'#10'  con'
  +'structor(source, settings) {'#10'    super(source, settings);'#10'    if (s'
  +'ettings && settings.hasOwnProperty(''fixIntegerDivisionAccuracy'')) {'#10' '
  +'     this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;'
  +#10'    }'#10'  }'#10#10'  astConditionalExpression(ast, retArr) {'#10'    i'
  +'f (ast.type !== ''ConditionalExpression'') {'#10'      throw this.astErrorO'
  +'utput(''Not a conditional expression'', ast);'#10'    }'#10'    const conse'
  +'quentType = this.getType(ast.consequent);'#10'    const alternateType = thi'
  +'s.getType(ast.alternate);'#10'    if (consequentType === null && alternateT'
  +'ype === null) {'#10'      retArr.push(''if ('');'#10'      this.astGeneric('
  +'ast.test, retArr);'#10'      retArr.push('') {'');'#10'      this.astGeneri'
  +'c(ast.consequent, retArr);'#10'      retArr.push('';'');'#10'      retArr.p'
  +'ush(''} else {'');'#10'      this.astGeneric(ast.alternate, retArr);'#10'  '
  +'    retArr.push('';'');'#10'      retArr.push(''}'');'#10'      return retA'
  +'rr;'#10'    }'#10'    retArr.push(''('');'#10'    this.astGeneric(ast.test,'
  +' retArr);'#10'    retArr.push(''?'');'#10'    this.astGeneric(ast.consequen'
  +'t, retArr);'#10'    retArr.push('':'');'#10'    this.astGeneric(ast.alterna'
  +'te, retArr);'#10'    retArr.push('')'');'#10'    return retArr;'#10'  }'#10
  +#10'  astFunction(ast, retArr) {'#10'    if (this.isRootKernel) {'#10'      '
  +'retArr.push(''void'');'#10'    } else {'#10'      if (!this.returnType) {'
  +#10'        const lastReturn = this.findLastReturn();'#10'        if (lastRe'
  +'turn) {'#10'          this.returnType = this.getType(ast.body);'#10'       '
  +'   if (this.returnType === ''LiteralInteger'') {'#10'            this.retur'
  +'nType = ''Number'';'#10'          }'#10'        }'#10'      }'#10#10'      '
  +'const { returnType } = this;'#10'      if (!returnType) {'#10'        retAr'
  +'r.push(''void'');'#10'      } else {'#10'        const type = typeMap[retur'
  +'nType];'#10'        if (!type) {'#10'          throw new Error(`unknown typ'
  +'e ${returnType}`);'#10'        }'#10'        retArr.push(type);'#10'      }'
  +#10'    }'#10'    retArr.push('' '');'#10'    retArr.push(this.name);'#10'  '
  +'  retArr.push(''('');'#10#10'    if (!this.isRootKernel) {'#10'      for (l'
  +'et i = 0; i < this.argumentNames.length; ++i) {'#10'        const argumentN'
  +'ame = this.argumentNames[i];'#10#10'        if (i > 0) {'#10'          retA'
  +'rr.push('', '');'#10'        }'#10'        let argumentType = this.argument'
  +'Types[this.argumentNames.indexOf(argumentName)];'#10'        if (!argumentT'
  +'ype) {'#10'          throw this.astErrorOutput(`Unknown argument ${argument'
  +'Name} type`, ast);'#10'        }'#10'        if (argumentType === ''Literal'
  +'Integer'') {'#10'          this.argumentTypes[i] = argumentType = ''Number'
  +''';'#10'        }'#10'        const type = typeMap[argumentType];'#10'     '
  +'   if (!type) {'#10'          throw this.astErrorOutput(''Unexpected expres'
  +'sion'', ast);'#10'        }'#10'        const name = utils.sanitizeName(arg'
  +'umentName);'#10'        if (type === ''sampler2D'' || type === ''sampler2DA'
  +'rray'') {'#10'          retArr.push(`${type} user_${name},ivec2 user_${name'
  +'}Size,ivec3 user_${name}Dim`);'#10'        } else {'#10'          retArr.pu'
  +'sh(`${type} user_${name}`);'#10'        }'#10'      }'#10'    }'#10#10'    '
  +'retArr.push('') {\n'');'#10#10'    for (let i = 0; i < ast.body.body.length'
  +'; ++i) {'#10'      this.astGeneric(ast.body.body[i], retArr);'#10'      ret'
  +'Arr.push(''\n'');'#10'    }'#10#10'    retArr.push(''}\n'');'#10'    return'
  +' retArr;'#10'  }'#10#10'  astReturnStatement(ast, retArr) {'#10'    if (!as'
  +'t.argument) throw this.astErrorOutput(''Unexpected return statement'', ast)'
  +';'#10'    this.pushState(''skip-literal-correction'');'#10'    const type ='
  +' this.getType(ast.argument);'#10'    this.popState(''skip-literal-correctio'
  +'n'');'#10#10'    const result = [];'#10#10'    if (!this.returnType) {'#10
  +'      if (type === ''LiteralInteger'' || type === ''Integer'') {'#10'      '
  +'  this.returnType = ''Number'';'#10'      } else {'#10'        this.returnT'
  ,'ype = type;'#10'      }'#10'    }'#10#10'    switch (this.returnType) {'#10
  +'      case ''LiteralInteger'':'#10'      case ''Number'':'#10'      case '''
  +'Float'':'#10'        switch (type) {'#10'          case ''Integer'':'#10'  '
  +'          result.push(''float('');'#10'            this.astGeneric(ast.argu'
  +'ment, result);'#10'            result.push('')'');'#10'            break;'
  +#10'          case ''LiteralInteger'':'#10'            this.castLiteralToFlo'
  +'at(ast.argument, result);'#10#10'            if (this.getType(ast) === ''In'
  +'teger'') {'#10'              result.unshift(''float('');'#10'              '
  +'result.push('')'');'#10'            }'#10'            break;'#10'          '
  +'default:'#10'            this.astGeneric(ast.argument, result);'#10'       '
  +' }'#10'        break;'#10'      case ''Integer'':'#10'        switch (type)'
  +' {'#10'          case ''Float'':'#10'          case ''Number'':'#10'       '
  +'     this.castValueToInteger(ast.argument, result);'#10'            break;'
  +#10'          case ''LiteralInteger'':'#10'            this.castLiteralToInt'
  +'eger(ast.argument, result);'#10'            break;'#10'          default:'
  +#10'            this.astGeneric(ast.argument, result);'#10'        }'#10'   '
  +'     break;'#10'      case ''Array(4)'':'#10'      case ''Array(3)'':'#10' '
  +'     case ''Array(2)'':'#10'      case ''Input'':'#10'        this.astGener'
  +'ic(ast.argument, result);'#10'        break;'#10'      default:'#10'       '
  +' throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast)'
  +';'#10'    }'#10#10'    if (this.isRootKernel) {'#10'      retArr.push(`kern'
  +'elResult = ${ result.join('''') };`);'#10'      retArr.push(''return;'');'
  +#10'    } else if (this.isSubKernel) {'#10'      retArr.push(`subKernelResul'
  +'t_${ this.name } = ${ result.join('''') };`);'#10'      retArr.push(`return'
  +' subKernelResult_${ this.name };`);'#10'    } else {'#10'      retArr.push('
  +'`return ${ result.join('''') };`);'#10'    }'#10'    return retArr;'#10'  }'
  +#10#10'  astLiteral(ast, retArr) {'#10'    if (isNaN(ast.value)) {'#10'     '
  +' throw this.astErrorOutput('#10'        ''Non-numeric literal not supported'
  +' : '' + ast.value,'#10'        ast'#10'      );'#10'    }'#10#10'    const '
  +'key = this.astKey(ast);'#10'    if (Number.isInteger(ast.value)) {'#10'    '
  +'  if (this.isState(''casting-to-integer'') || this.isState(''building-integ'
  +'er'')) {'#10'        this.literalTypes[key] = ''Integer'';'#10'        retA'
  +'rr.push(`${ast.value}`);'#10'      } else if (this.isState(''casting-to-flo'
  +'at'') || this.isState(''building-float'')) {'#10'        this.literalTypes['
  +'key] = ''Number'';'#10'        retArr.push(`${ast.value}.0`);'#10'      } e'
  +'lse {'#10'        this.literalTypes[key] = ''Number'';'#10'        retArr.p'
  +'ush(`${ast.value}.0`);'#10'      }'#10'    } else if (this.isState(''castin'
  +'g-to-integer'') || this.isState(''building-integer'')) {'#10'      this.lit'
  +'eralTypes[key] = ''Integer'';'#10'      retArr.push(Math.round(ast.value));'
  +#10'    } else {'#10'      this.literalTypes[key] = ''Number'';'#10'      re'
  +'tArr.push(`${ast.value}`);'#10'    }'#10'    return retArr;'#10'  }'#10#10
  +'  astBinaryExpression(ast, retArr) {'#10'    if (this.checkAndUpconvertOper'
  +'ator(ast, retArr)) {'#10'      return retArr;'#10'    }'#10#10'    if (this'
  +'.fixIntegerDivisionAccuracy && ast.operator === ''/'') {'#10'      retArr.p'
  +'ush(''divWithIntCheck('');'#10'      this.pushState(''building-float'');'#10
  +'      switch (this.getType(ast.left)) {'#10'        case ''Integer'':'#10' '
  +'         this.castValueToFloat(ast.left, retArr);'#10'          break;'#10
  +'        case ''LiteralInteger'':'#10'          this.castLiteralToFloat(ast.'
  +'left, retArr);'#10'          break;'#10'        default:'#10'          this'
  +'.astGeneric(ast.left, retArr);'#10'      }'#10'      retArr.push('', '');'
  +#10'      switch (this.getType(ast.right)) {'#10'        case ''Integer'':'
  +#10'          this.castValueToFloat(ast.right, retArr);'#10'          break;'
  +#10'        case ''LiteralInteger'':'#10'          this.castLiteralToFloat(a'
  +'st.right, retArr);'#10'          break;'#10'        default:'#10'          '
  +'this.astGeneric(ast.right, retArr);'#10'      }'#10'      this.popState(''b'
  +'uilding-float'');'#10'      retArr.push('')'');'#10'      return retArr;'#10
  +'    }'#10#10'    retArr.push(''('');'#10'    const leftType = this.getType('
  +'ast.left) || ''Number'';'#10'    const rightType = this.getType(ast.right) '
  +'|| ''Number'';'#10'    if (!leftType || !rightType) {'#10'      throw this.'
  +'astErrorOutput(`Unhandled binary expression`, ast);'#10'    }'#10'    const'
  +' key = leftType + '' & '' + rightType;'#10'    switch (key) {'#10'      cas'
  +'e ''Integer & Integer'':'#10'        this.pushState(''building-integer'');'
  +#10'        this.astGeneric(ast.left, retArr);'#10'        retArr.push(opera'
  +'torMap[ast.operator] || ast.operator);'#10'        this.astGeneric(ast.righ'
  ,'t, retArr);'#10'        this.popState(''building-integer'');'#10'        br'
  +'eak;'#10'      case ''Number & Float'':'#10'      case ''Float & Number'':'
  +#10'      case ''Float & Float'':'#10'      case ''Number & Number'':'#10'  '
  +'      this.pushState(''building-float'');'#10'        this.astGeneric(ast.l'
  +'eft, retArr);'#10'        retArr.push(operatorMap[ast.operator] || ast.oper'
  +'ator);'#10'        this.astGeneric(ast.right, retArr);'#10'        this.pop'
  +'State(''building-float'');'#10'        break;'#10'      case ''LiteralInteg'
  +'er & LiteralInteger'':'#10'        if (this.isState(''casting-to-integer'')'
  +' || this.isState(''building-integer'')) {'#10'          this.pushState(''bu'
  +'ilding-integer'');'#10'          this.astGeneric(ast.left, retArr);'#10'   '
  +'       retArr.push(operatorMap[ast.operator] || ast.operator);'#10'        '
  +'  this.astGeneric(ast.right, retArr);'#10'          this.popState(''buildin'
  +'g-integer'');'#10'        } else {'#10'          this.pushState(''building-'
  +'float'');'#10'          this.castLiteralToFloat(ast.left, retArr);'#10'    '
  +'      retArr.push(operatorMap[ast.operator] || ast.operator);'#10'         '
  +' this.castLiteralToFloat(ast.right, retArr);'#10'          this.popState('''
  +'building-float'');'#10'        }'#10'        break;'#10#10'      case ''Int'
  +'eger & Float'':'#10'      case ''Integer & Number'':'#10'        if (ast.op'
  +'erator === ''>'' || ast.operator === ''<'' && ast.right.type === ''Literal'
  +''') {'#10'          if (!Number.isInteger(ast.right.value)) {'#10'         '
  +'   this.pushState(''building-float'');'#10'            this.castValueToFloa'
  +'t(ast.left, retArr);'#10'            retArr.push(operatorMap[ast.operator] '
  +'|| ast.operator);'#10'            this.astGeneric(ast.right, retArr);'#10' '
  +'           this.popState(''building-float'');'#10'            break;'#10'  '
  +'        }'#10'        }'#10'        this.pushState(''building-integer'');'
  +#10'        this.astGeneric(ast.left, retArr);'#10'        retArr.push(opera'
  +'torMap[ast.operator] || ast.operator);'#10'        this.pushState(''casting'
  +'-to-integer'');'#10'        if (ast.right.type === ''Literal'') {'#10'     '
  +'     const literalResult = [];'#10'          this.astGeneric(ast.right, lit'
  +'eralResult);'#10'          const literalType = this.getType(ast.right);'#10
  +'          if (literalType === ''Integer'') {'#10'            retArr.push(li'
  +'teralResult.join(''''));'#10'          } else {'#10'            throw this.'
  +'astErrorOutput(`Unhandled binary expression with literal`, ast);'#10'      '
  +'    }'#10'        } else {'#10'          retArr.push(''int('');'#10'       '
  +'   this.astGeneric(ast.right, retArr);'#10'          retArr.push('')'');'#10
  +'        }'#10'        this.popState(''casting-to-integer'');'#10'        th'
  +'is.popState(''building-integer'');'#10'        break;'#10'      case ''Inte'
  +'ger & LiteralInteger'':'#10'        this.pushState(''building-integer'');'
  +#10'        this.astGeneric(ast.left, retArr);'#10'        retArr.push(opera'
  +'torMap[ast.operator] || ast.operator);'#10'        this.castLiteralToIntege'
  +'r(ast.right, retArr);'#10'        this.popState(''building-integer'');'#10
  +'        break;'#10#10'      case ''Number & Integer'':'#10'        this.pus'
  +'hState(''building-float'');'#10'        this.astGeneric(ast.left, retArr);'
  +#10'        retArr.push(operatorMap[ast.operator] || ast.operator);'#10'    '
  +'    this.castValueToFloat(ast.right, retArr);'#10'        this.popState(''b'
  +'uilding-float'');'#10'        break;'#10'      case ''Float & LiteralIntege'
  +'r'':'#10'      case ''Number & LiteralInteger'':'#10'        this.pushState'
  +'(''building-float'');'#10'        this.astGeneric(ast.left, retArr);'#10'  '
  +'      retArr.push(operatorMap[ast.operator] || ast.operator);'#10'        t'
  +'his.castLiteralToFloat(ast.right, retArr);'#10'        this.popState(''buil'
  +'ding-float'');'#10'        break;'#10'      case ''LiteralInteger & Float'''
  +':'#10'      case ''LiteralInteger & Number'':'#10'        if (this.isState('
  +'''casting-to-integer'')) {'#10'          this.pushState(''building-integer'
  +''');'#10'          this.castLiteralToInteger(ast.left, retArr);'#10'       '
  +'   retArr.push(operatorMap[ast.operator] || ast.operator);'#10'          th'
  +'is.castValueToInteger(ast.right, retArr);'#10'          this.popState(''bui'
  +'lding-integer'');'#10'        } else {'#10'          this.pushState(''build'
  +'ing-float'');'#10'          this.astGeneric(ast.left, retArr);'#10'        '
  +'  retArr.push(operatorMap[ast.operator] || ast.operator);'#10'          thi'
  +'s.pushState(''casting-to-float'');'#10'          this.astGeneric(ast.right,'
  +' retArr);'#10'          this.popState(''casting-to-float'');'#10'          '
  +'this.popState(''building-float'');'#10'        }'#10'        break;'#10'   '
  +'   case ''LiteralInteger & Integer'':'#10'        this.pushState(''building'
  +'-integer'');'#10'        this.castLiteralToInteger(ast.left, retArr);'#10' '
  ,'       retArr.push(operatorMap[ast.operator] || ast.operator);'#10'        '
  +'this.astGeneric(ast.right, retArr);'#10'        this.popState(''building-in'
  +'teger'');'#10'        break;'#10#10'      case ''Boolean & Boolean'':'#10' '
  +'       this.pushState(''building-boolean'');'#10'        this.astGeneric(as'
  +'t.left, retArr);'#10'        retArr.push(operatorMap[ast.operator] || ast.o'
  +'perator);'#10'        this.astGeneric(ast.right, retArr);'#10'        this.'
  +'popState(''building-boolean'');'#10'        break;'#10#10'      case ''Floa'
  +'t & Integer'':'#10'        this.pushState(''building-float'');'#10'        '
  +'this.astGeneric(ast.left, retArr);'#10'        retArr.push(operatorMap[ast.'
  +'operator] || ast.operator);'#10'        this.castValueToFloat(ast.right, re'
  +'tArr);'#10'        this.popState(''building-float'');'#10'        break;'#10
  +#10'      default:'#10'        throw this.astErrorOutput(`Unhandled binary e'
  +'xpression between ${key}`, ast);'#10'    }'#10'    retArr.push('')'');'#10
  +#10'    return retArr;'#10'  }'#10#10'  checkAndUpconvertOperator(ast, retAr'
  +'r) {'#10'    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(a'
  +'st, retArr);'#10'    if (bitwiseResult) {'#10'      return bitwiseResult;'
  +#10'    }'#10'    const upconvertableOperators = {'#10'      ''%'': this.fix'
  +'IntegerDivisionAccuracy ? ''integerCorrectionModulo'' : ''modulo'','#10'   '
  +'   ''**'': ''pow'','#10'    };'#10'    const foundOperator = upconvertableO'
  +'perators[ast.operator];'#10'    if (!foundOperator) return null;'#10'    re'
  +'tArr.push(foundOperator);'#10'    retArr.push(''('');'#10'    switch (this.'
  +'getType(ast.left)) {'#10'      case ''Integer'':'#10'        this.castValue'
  +'ToFloat(ast.left, retArr);'#10'        break;'#10'      case ''LiteralInteg'
  +'er'':'#10'        this.castLiteralToFloat(ast.left, retArr);'#10'        br'
  +'eak;'#10'      default:'#10'        this.astGeneric(ast.left, retArr);'#10
  +'    }'#10'    retArr.push('','');'#10'    switch (this.getType(ast.right)) '
  +'{'#10'      case ''Integer'':'#10'        this.castValueToFloat(ast.right, '
  +'retArr);'#10'        break;'#10'      case ''LiteralInteger'':'#10'        '
  +'this.castLiteralToFloat(ast.right, retArr);'#10'        break;'#10'      de'
  +'fault:'#10'        this.astGeneric(ast.right, retArr);'#10'    }'#10'    re'
  +'tArr.push('')'');'#10'    return retArr;'#10'  }'#10#10'  checkAndUpconvert'
  +'BitwiseOperators(ast, retArr) {'#10'    const upconvertableOperators = {'#10
  +'      ''&'': ''bitwiseAnd'','#10'      ''|'': ''bitwiseOr'','#10'      ''^'
  +''': ''bitwiseXOR'','#10'      ''<<'': ''bitwiseZeroFillLeftShift'','#10'   '
  +'   ''>>'': ''bitwiseSignedRightShift'','#10'      ''>>>'': ''bitwiseZeroFil'
  +'lRightShift'','#10'    };'#10'    const foundOperator = upconvertableOperat'
  +'ors[ast.operator];'#10'    if (!foundOperator) return null;'#10'    retArr.'
  +'push(foundOperator);'#10'    retArr.push(''('');'#10'    const leftType = t'
  +'his.getType(ast.left);'#10'    switch (leftType) {'#10'      case ''Number'
  +''':'#10'      case ''Float'':'#10'        this.castValueToInteger(ast.left,'
  +' retArr);'#10'        break;'#10'      case ''LiteralInteger'':'#10'       '
  +' this.castLiteralToInteger(ast.left, retArr);'#10'        break;'#10'      '
  +'default:'#10'        this.astGeneric(ast.left, retArr);'#10'    }'#10'    r'
  +'etArr.push('','');'#10'    const rightType = this.getType(ast.right);'#10' '
  +'   switch (rightType) {'#10'      case ''Number'':'#10'      case ''Float'''
  +':'#10'        this.castValueToInteger(ast.right, retArr);'#10'        break'
  +';'#10'      case ''LiteralInteger'':'#10'        this.castLiteralToInteger('
  +'ast.right, retArr);'#10'        break;'#10'      default:'#10'        this.'
  +'astGeneric(ast.right, retArr);'#10'    }'#10'    retArr.push('')'');'#10'  '
  +'  return retArr;'#10'  }'#10#10'  checkAndUpconvertBitwiseUnary(ast, retArr'
  +') {'#10'    const upconvertableOperators = {'#10'      ''~'': ''bitwiseNot'
  +''','#10'    };'#10'    const foundOperator = upconvertableOperators[ast.ope'
  +'rator];'#10'    if (!foundOperator) return null;'#10'    retArr.push(foundO'
  +'perator);'#10'    retArr.push(''('');'#10'    switch (this.getType(ast.argu'
  +'ment)) {'#10'      case ''Number'':'#10'      case ''Float'':'#10'        t'
  +'his.castValueToInteger(ast.argument, retArr);'#10'        break;'#10'      '
  +'case ''LiteralInteger'':'#10'        this.castLiteralToInteger(ast.argument'
  +', retArr);'#10'        break;'#10'      default:'#10'        this.astGeneri'
  +'c(ast.argument, retArr);'#10'    }'#10'    retArr.push('')'');'#10'    retu'
  +'rn retArr;'#10'  }'#10#10'  castLiteralToInteger(ast, retArr) {'#10'    thi'
  +'s.pushState(''casting-to-integer'');'#10'    this.astGeneric(ast, retArr);'
  +#10'    this.popState(''casting-to-integer'');'#10'    return retArr;'#10'  '
  +'}'#10#10'  castLiteralToFloat(ast, retArr) {'#10'    this.pushState(''casti'
  +'ng-to-float'');'#10'    this.astGeneric(ast, retArr);'#10'    this.popState'
  ,'(''casting-to-float'');'#10'    return retArr;'#10'  }'#10#10'  castValueTo'
  +'Integer(ast, retArr) {'#10'    this.pushState(''casting-to-integer'');'#10
  +'    retArr.push(''int('');'#10'    this.astGeneric(ast, retArr);'#10'    re'
  +'tArr.push('')'');'#10'    this.popState(''casting-to-integer'');'#10'    re'
  +'turn retArr;'#10'  }'#10#10'  castValueToFloat(ast, retArr) {'#10'    this.'
  +'pushState(''casting-to-float'');'#10'    retArr.push(''float('');'#10'    t'
  +'his.astGeneric(ast, retArr);'#10'    retArr.push('')'');'#10'    this.popSt'
  +'ate(''casting-to-float'');'#10'    return retArr;'#10'  }'#10#10'  astIdent'
  +'ifierExpression(idtNode, retArr) {'#10'    if (idtNode.type !== ''Identifie'
  +'r'') {'#10'      throw this.astErrorOutput(''IdentifierExpression - not an '
  +'Identifier'', idtNode);'#10'    }'#10#10'    const type = this.getType(idtN'
  +'ode);'#10#10'    const name = utils.sanitizeName(idtNode.name);'#10'    if '
  +'(idtNode.name === ''Infinity'') {'#10'      retArr.push(''3.402823466e+38'''
  +');'#10'    } else if (type === ''Boolean'') {'#10'      if (this.argumentNa'
  +'mes.indexOf(name) > -1) {'#10'        retArr.push(`bool(user_${name})`);'#10
  +'      } else {'#10'        retArr.push(`user_${name}`);'#10'      }'#10'   '
  +' } else {'#10'      retArr.push(`user_${name}`);'#10'    }'#10#10'    retur'
  +'n retArr;'#10'  }'#10#10'  astForStatement(forNode, retArr) {'#10'    if (f'
  +'orNode.type !== ''ForStatement'') {'#10'      throw this.astErrorOutput(''I'
  +'nvalid for statement'', forNode);'#10'    }'#10#10'    const initArr = [];'
  +#10'    const testArr = [];'#10'    const updateArr = [];'#10'    const body'
  +'Arr = [];'#10'    let isSafe = null;'#10#10'    if (forNode.init) {'#10'   '
  +'   const { declarations } = forNode.init;'#10'      if (declarations.length'
  +' > 1) {'#10'        isSafe = false;'#10'      }'#10'      this.astGeneric(f'
  +'orNode.init, initArr);'#10'      for (let i = 0; i < declarations.length; i'
  +'++) {'#10'        if (declarations[i].init && declarations[i].init.type !=='
  +' ''Literal'') {'#10'          isSafe = false;'#10'        }'#10'      }'#10
  +'    } else {'#10'      isSafe = false;'#10'    }'#10#10'    if (forNode.tes'
  +'t) {'#10'      this.astGeneric(forNode.test, testArr);'#10'    } else {'#10
  +'      isSafe = false;'#10'    }'#10#10'    if (forNode.update) {'#10'      '
  +'this.astGeneric(forNode.update, updateArr);'#10'    } else {'#10'      isSa'
  +'fe = false;'#10'    }'#10#10'    if (forNode.body) {'#10'      this.pushSta'
  +'te(''loop-body'');'#10'      this.astGeneric(forNode.body, bodyArr);'#10'  '
  +'    this.popState(''loop-body'');'#10'    }'#10#10'    if (isSafe === null)'
  +' {'#10'      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test'
  +');'#10'    }'#10#10'    if (isSafe) {'#10'      const initString = initArr.'
  +'join('''');'#10'      const initNeedsSemiColon = initString[initString.leng'
  +'th - 1] !== '';'';'#10'      retArr.push(`for (${initString}${initNeedsSemi'
  +'Colon ? '';'' : ''''}${testArr.join('''')};${updateArr.join('''')}){\n`);'
  +#10'      retArr.push(bodyArr.join(''''));'#10'      retArr.push(''}\n'');'
  +#10'    } else {'#10'      const iVariableName = this.getInternalVariableNam'
  +'e(''safeI'');'#10'      if (initArr.length > 0) {'#10'        retArr.push(i'
  +'nitArr.join(''''), ''\n'');'#10'      }'#10'      retArr.push(`for (int ${i'
  +'VariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\n`);'#10'   '
  +'   if (testArr.length > 0) {'#10'        retArr.push(`if (!${testArr.join('
  +''''')}) break;\n`);'#10'      }'#10'      retArr.push(bodyArr.join(''''));'
  +#10'      retArr.push(`\n${updateArr.join('''')};`);'#10'      retArr.push('
  +'''}\n'');'#10'    }'#10'    return retArr;'#10'  }'#10#10'  astWhileStateme'
  +'nt(whileNode, retArr) {'#10'    if (whileNode.type !== ''WhileStatement'') '
  +'{'#10'      throw this.astErrorOutput(''Invalid while statement'', whileNod'
  +'e);'#10'    }'#10#10'    const iVariableName = this.getInternalVariableName'
  +'(''safeI'');'#10'    retArr.push(`for (int ${iVariableName}=0;${iVariableNa'
  +'me}<LOOP_MAX;${iVariableName}++){\n`);'#10'    retArr.push(''if (!'');'#10
  +'    this.astGeneric(whileNode.test, retArr);'#10'    retArr.push('') break;'
  +'\n'');'#10'    this.astGeneric(whileNode.body, retArr);'#10'    retArr.push'
  +'(''}\n'');'#10#10'    return retArr;'#10'  }'#10#10'  astDoWhileStatement(d'
  +'oWhileNode, retArr) {'#10'    if (doWhileNode.type !== ''DoWhileStatement'''
  +') {'#10'      throw this.astErrorOutput(''Invalid while statement'', doWhil'
  +'eNode);'#10'    }'#10#10'    const iVariableName = this.getInternalVariable'
  +'Name(''safeI'');'#10'    retArr.push(`for (int ${iVariableName}=0;${iVariab'
  +'leName}<LOOP_MAX;${iVariableName}++){\n`);'#10'    this.astGeneric(doWhileN'
  +'ode.body, retArr);'#10'    retArr.push(''if (!'');'#10'    this.astGeneric('
  +'doWhileNode.test, retArr);'#10'    retArr.push('') break;\n'');'#10'    ret'
  +'Arr.push(''}\n'');'#10#10'    return retArr;'#10'  }'#10#10#10'  astAssignm'
  ,'entExpression(assNode, retArr) {'#10'    if (assNode.operator === ''%='') {'
  +#10'      this.astGeneric(assNode.left, retArr);'#10'      retArr.push(''='''
  +');'#10'      retArr.push(''mod('');'#10'      this.astGeneric(assNode.left,'
  +' retArr);'#10'      retArr.push('','');'#10'      this.astGeneric(assNode.r'
  +'ight, retArr);'#10'      retArr.push('')'');'#10'    } else if (assNode.ope'
  +'rator === ''**='') {'#10'      this.astGeneric(assNode.left, retArr);'#10' '
  +'     retArr.push(''='');'#10'      retArr.push(''pow('');'#10'      this.as'
  +'tGeneric(assNode.left, retArr);'#10'      retArr.push('','');'#10'      thi'
  +'s.astGeneric(assNode.right, retArr);'#10'      retArr.push('')'');'#10'    '
  +'} else {'#10'      const leftType = this.getType(assNode.left);'#10'      c'
  +'onst rightType = this.getType(assNode.right);'#10'      this.astGeneric(ass'
  +'Node.left, retArr);'#10'      retArr.push(assNode.operator);'#10'      if ('
  +'leftType !== ''Integer'' && rightType === ''Integer'') {'#10'        retArr'
  +'.push(''float('');'#10'        this.astGeneric(assNode.right, retArr);'#10
  +'        retArr.push('')'');'#10'      } else {'#10'        this.astGeneric('
  +'assNode.right, retArr);'#10'      }'#10'      return retArr;'#10'    }'#10
  +'  }'#10#10'  astBlockStatement(bNode, retArr) {'#10'    if (this.isState('''
  +'loop-body'')) {'#10'      this.pushState(''block-body''); '#10'      for (l'
  +'et i = 0; i < bNode.body.length; i++) {'#10'        this.astGeneric(bNode.b'
  +'ody[i], retArr);'#10'      }'#10'      this.popState(''block-body'');'#10' '
  +'   } else {'#10'      retArr.push(''{\n'');'#10'      for (let i = 0; i < b'
  +'Node.body.length; i++) {'#10'        this.astGeneric(bNode.body[i], retArr)'
  +';'#10'      }'#10'      retArr.push(''}\n'');'#10'    }'#10'    return retA'
  +'rr;'#10'  }'#10#10'  astVariableDeclaration(varDecNode, retArr) {'#10'    c'
  +'onst declarations = varDecNode.declarations;'#10'    if (!declarations || !'
  +'declarations[0] || !declarations[0].init) {'#10'      throw this.astErrorOu'
  +'tput(''Unexpected expression'', varDecNode);'#10'    }'#10'    const result'
  +' = [];'#10'    let lastType = null;'#10'    const declarationSets = [];'#10
  +'    let declarationSet = [];'#10'    for (let i = 0; i < declarations.lengt'
  +'h; i++) {'#10'      const declaration = declarations[i];'#10'      const in'
  +'it = declaration.init;'#10'      const info = this.getDeclaration(declarati'
  +'on.id);'#10'      const actualType = this.getType(declaration.init);'#10'  '
  +'    let type = actualType;'#10'      if (type === ''LiteralInteger'') {'#10
  +'        if (info.suggestedType === ''Integer'') {'#10'          type = ''In'
  +'teger'';'#10'        } else {'#10'          type = ''Number'';'#10'        '
  +'}'#10'      }'#10'      const markupType = typeMap[type];'#10'      if (!ma'
  +'rkupType) {'#10'        throw this.astErrorOutput(`Markup type ${ markupTyp'
  +'e } not handled`, varDecNode);'#10'      }'#10'      const declarationResul'
  +'t = [];'#10'      if (actualType === ''Integer'' && type === ''Integer'') {'
  +#10'        info.valueType = ''Number'';'#10'        if (i === 0 || lastType'
  +' === null) {'#10'          declarationResult.push(''float '');'#10'        '
  +'} else if (type !== lastType) {'#10'          throw new Error(''Unhandled d'
  +'eclaration'');'#10'        }'#10'        lastType = type;'#10'        decla'
  +'rationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);'#10
  +'        declarationResult.push(''float('');'#10'        this.astGeneric(ini'
  +'t, declarationResult);'#10'        declarationResult.push('')'');'#10'     '
  +' } else {'#10'        info.valueType = type;'#10'        if (i === 0 || las'
  +'tType === null) {'#10'          declarationResult.push(`${markupType} `);'
  +#10'        } else if (type !== lastType) {'#10'          declarationSets.pu'
  +'sh(declarationSet.join('',''));'#10'          declarationSet = [];'#10'    '
  +'      declarationResult.push(`${markupType} `);'#10'        }'#10'        l'
  +'astType = type;'#10'        declarationResult.push(`user_${utils.sanitizeNa'
  +'me(declaration.id.name)}=`);'#10'        if (actualType === ''Number'' && t'
  +'ype === ''Integer'') {'#10'          if (init.left && init.left.type === '''
  +'Literal'') {'#10'            this.astGeneric(init, declarationResult);'#10
  +'          } else {'#10'            declarationResult.push(''int('');'#10'  '
  +'          this.astGeneric(init, declarationResult);'#10'            declara'
  +'tionResult.push('')'');'#10'          }'#10'        } else if (actualType ='
  +'== ''LiteralInteger'' && type === ''Integer'') {'#10'          this.castLit'
  +'eralToInteger(init, declarationResult);'#10'        } else {'#10'          '
  +'this.astGeneric(init, declarationResult);'#10'        }'#10'      }'#10'   '
  +'   declarationSet.push(declarationResult.join(''''));'#10'    }'#10#10'    '
  +'if (declarationSet.length > 0) {'#10'      declarationSets.push(declaration'
  +'Set.join('',''));'#10'    }'#10#10'    result.push(declarationSets.join('';'
  ,'''));'#10#10'    retArr.push(result.join(''''));'#10'    retArr.push('';'')'
  +';'#10'    return retArr;'#10'  }'#10#10'  astIfStatement(ifNode, retArr) {'
  +#10'    retArr.push(''if ('');'#10'    this.astGeneric(ifNode.test, retArr);'
  +#10'    retArr.push('')'');'#10'    if (ifNode.consequent.type === ''BlockSt'
  +'atement'') {'#10'      this.astGeneric(ifNode.consequent, retArr);'#10'    '
  +'} else {'#10'      retArr.push('' {\n'');'#10'      this.astGeneric(ifNode.'
  +'consequent, retArr);'#10'      retArr.push(''\n}\n'');'#10'    }'#10#10'   '
  +' if (ifNode.alternate) {'#10'      retArr.push(''else '');'#10'      if (if'
  +'Node.alternate.type === ''BlockStatement'' || ifNode.alternate.type === ''I'
  +'fStatement'') {'#10'        this.astGeneric(ifNode.alternate, retArr);'#10
  +'      } else {'#10'        retArr.push('' {\n'');'#10'        this.astGener'
  +'ic(ifNode.alternate, retArr);'#10'        retArr.push(''\n}\n'');'#10'     '
  +' }'#10'    }'#10'    return retArr;'#10'  }'#10#10'  astSwitchStatement(ast'
  +', retArr) {'#10'    if (ast.type !== ''SwitchStatement'') {'#10'      throw'
  +' this.astErrorOutput(''Invalid switch statement'', ast);'#10'    }'#10'    '
  +'const { discriminant, cases } = ast;'#10'    const type = this.getType(disc'
  +'riminant);'#10'    const varName = `switchDiscriminant${this.astKey(ast, '''
  +'_'')}`;'#10'    switch (type) {'#10'      case ''Float'':'#10'      case '''
  +'Number'':'#10'        retArr.push(`float ${varName} = `);'#10'        this.'
  +'astGeneric(discriminant, retArr);'#10'        retArr.push('';\n'');'#10'   '
  +'     break;'#10'      case ''Integer'':'#10'        retArr.push(`int ${varN'
  +'ame} = `);'#10'        this.astGeneric(discriminant, retArr);'#10'        r'
  +'etArr.push('';\n'');'#10'        break;'#10'    }'#10'    if (cases.length '
  +'=== 1 && !cases[0].test) {'#10'      this.astGeneric(cases[0].consequent, r'
  +'etArr);'#10'      return retArr;'#10'    }'#10#10'    let fallingThrough = '
  +'false;'#10'    let defaultResult = [];'#10'    let movingDefaultToEnd = fal'
  +'se;'#10'    let pastFirstIf = false;'#10'    for (let i = 0; i < cases.leng'
  +'th; i++) {'#10'      if (!cases[i].test) {'#10'        if (cases.length > i'
  +' + 1) {'#10'          movingDefaultToEnd = true;'#10'          this.astGene'
  +'ric(cases[i].consequent, defaultResult);'#10'          continue;'#10'      '
  +'  } else {'#10'          retArr.push('' else {\n'');'#10'        }'#10'    '
  +'  } else {'#10'        if (i === 0 || !pastFirstIf) {'#10'          pastFir'
  +'stIf = true;'#10'          retArr.push(`if (${varName} == `);'#10'        }'
  +' else {'#10'          if (fallingThrough) {'#10'            retArr.push(`${'
  +'varName} == `);'#10'            fallingThrough = false;'#10'          } els'
  +'e {'#10'            retArr.push(` else if (${varName} == `);'#10'          '
  +'}'#10'        }'#10'        if (type === ''Integer'') {'#10'          const'
  +' testType = this.getType(cases[i].test);'#10'          switch (testType) {'
  +#10'            case ''Number'':'#10'            case ''Float'':'#10'       '
  +'       this.castValueToInteger(cases[i].test, retArr);'#10'              br'
  +'eak;'#10'            case ''LiteralInteger'':'#10'              this.castLi'
  +'teralToInteger(cases[i].test, retArr);'#10'              break;'#10'       '
  +'   }'#10'        } else if (type === ''Float'') {'#10'          const testT'
  +'ype = this.getType(cases[i].test);'#10'          switch (testType) {'#10'  '
  +'          case ''LiteralInteger'':'#10'              this.castLiteralToFloa'
  +'t(cases[i].test, retArr);'#10'              break;'#10'            case ''I'
  +'nteger'':'#10'              this.castValueToFloat(cases[i].test, retArr);'
  +#10'              break;'#10'          }'#10'        } else {'#10'          '
  +'throw new Error(''unhanlded'');'#10'        }'#10'        if (!cases[i].con'
  +'sequent || cases[i].consequent.length === 0) {'#10'          fallingThrough'
  +' = true;'#10'          retArr.push('' || '');'#10'          continue;'#10' '
  +'       }'#10'        retArr.push(`) {\n`);'#10'      }'#10'      this.astGe'
  +'neric(cases[i].consequent, retArr);'#10'      retArr.push(''\n}'');'#10'   '
  +' }'#10'    if (movingDefaultToEnd) {'#10'      retArr.push('' else {'');'#10
  +'      retArr.push(defaultResult.join(''''));'#10'      retArr.push(''}'');'
  +#10'    }'#10'    return retArr;'#10'  }'#10#10'  astThisExpression(tNode, r'
  +'etArr) {'#10'    retArr.push(''this'');'#10'    return retArr;'#10'  }'#10
  +#10'  astMemberExpression(mNode, retArr) {'#10'    const {'#10'      propert'
  +'y,'#10'      name,'#10'      signature,'#10'      origin,'#10'      type,'
  +#10'      xProperty,'#10'      yProperty,'#10'      zProperty'#10'    } = th'
  +'is.getMemberExpressionDetails(mNode);'#10'    switch (signature) {'#10'    '
  +'  case ''value.thread.value'':'#10'      case ''this.thread.value'':'#10'  '
  +'      if (name !== ''x'' && name !== ''y'' && name !== ''z'') {'#10'       '
  +'   throw this.astErrorOutput(''Unexpected expression, expected `this.thread'
  ,'.x`, `this.thread.y`, or `this.thread.z`'', mNode);'#10'        }'#10'     '
  +'   retArr.push(`threadId.${name}`);'#10'        return retArr;'#10'      ca'
  +'se ''this.output.value'':'#10'        if (this.dynamicOutput) {'#10'       '
  +'   switch (name) {'#10'            case ''x'':'#10'              if (this.i'
  +'sState(''casting-to-float'')) {'#10'                retArr.push(''float(uOu'
  +'tputDim.x)'');'#10'              } else {'#10'                retArr.push('
  +'''uOutputDim.x'');'#10'              }'#10'              break;'#10'       '
  +'     case ''y'':'#10'              if (this.isState(''casting-to-float'')) '
  +'{'#10'                retArr.push(''float(uOutputDim.y)'');'#10'           '
  +'   } else {'#10'                retArr.push(''uOutputDim.y'');'#10'        '
  +'      }'#10'              break;'#10'            case ''z'':'#10'          '
  +'    if (this.isState(''casting-to-float'')) {'#10'                retArr.pu'
  +'sh(''float(uOutputDim.z)'');'#10'              } else {'#10'               '
  +' retArr.push(''uOutputDim.z'');'#10'              }'#10'              break'
  +';'#10'            default:'#10'              throw this.astErrorOutput(''Un'
  +'expected expression'', mNode);'#10'          }'#10'        } else {'#10'   '
  +'       switch (name) {'#10'            case ''x'':'#10'              if (th'
  +'is.isState(''casting-to-integer'')) {'#10'                retArr.push(this.'
  +'output[0]);'#10'              } else {'#10'                retArr.push(this'
  +'.output[0], ''.0'');'#10'              }'#10'              break;'#10'     '
  +'       case ''y'':'#10'              if (this.isState(''casting-to-integer'
  +''')) {'#10'                retArr.push(this.output[1]);'#10'              }'
  +' else {'#10'                retArr.push(this.output[1], ''.0'');'#10'      '
  +'        }'#10'              break;'#10'            case ''z'':'#10'        '
  +'      if (this.isState(''casting-to-integer'')) {'#10'                retAr'
  +'r.push(this.output[2]);'#10'              } else {'#10'                retA'
  +'rr.push(this.output[2], ''.0'');'#10'              }'#10'              brea'
  +'k;'#10'            default:'#10'              throw this.astErrorOutput(''U'
  +'nexpected expression'', mNode);'#10'          }'#10'        }'#10'        r'
  +'eturn retArr;'#10'      case ''value'':'#10'        throw this.astErrorOutp'
  +'ut(''Unexpected expression'', mNode);'#10'      case ''value[]'':'#10'     '
  +' case ''value[][]'':'#10'      case ''value[][][]'':'#10'      case ''value'
  +'[][][][]'':'#10'      case ''value.value'':'#10'        if (origin === ''Ma'
  +'th'') {'#10'          retArr.push(Math[name]);'#10'          return retArr;'
  +#10'        }'#10'        const cleanName = utils.sanitizeName(name);'#10'  '
  +'      switch (property) {'#10'          case ''r'':'#10'            retArr.'
  +'push(`user_${ cleanName }.r`);'#10'            return retArr;'#10'         '
  +' case ''g'':'#10'            retArr.push(`user_${ cleanName }.g`);'#10'    '
  +'        return retArr;'#10'          case ''b'':'#10'            retArr.pus'
  +'h(`user_${ cleanName }.b`);'#10'            return retArr;'#10'          ca'
  +'se ''a'':'#10'            retArr.push(`user_${ cleanName }.a`);'#10'       '
  +'     return retArr;'#10'        }'#10'        break;'#10'      case ''this.'
  +'constants.value'':'#10'        if (typeof xProperty === ''undefined'') {'#10
  +'          switch (type) {'#10'            case ''Array(2)'':'#10'          '
  +'  case ''Array(3)'':'#10'            case ''Array(4)'':'#10'              r'
  +'etArr.push(`constants_${ utils.sanitizeName(name) }`);'#10'              re'
  +'turn retArr;'#10'          }'#10'        }'#10'        case ''this.constant'
  +'s.value[]'':'#10'        case ''this.constants.value[][]'':'#10'        cas'
  +'e ''this.constants.value[][][]'':'#10'        case ''this.constants.value[]'
  +'[][][]'':'#10'          break;'#10'        case ''fn()[]'':'#10'          t'
  +'his.astCallExpression(mNode.object, retArr);'#10'          retArr.push(''['
  +''');'#10'          retArr.push(this.memberExpressionPropertyMarkup(property'
  +'));'#10'          retArr.push('']'');'#10'          return retArr;'#10'    '
  +'    case ''[][]'':'#10'          this.astArrayExpression(mNode.object, retA'
  +'rr);'#10'          retArr.push(''['');'#10'          retArr.push(this.membe'
  +'rExpressionPropertyMarkup(property));'#10'          retArr.push('']'');'#10
  +'          return retArr;'#10'        case ''value.value[]'':'#10'        ca'
  +'se ''value.value[][]'':'#10'          if (this.removeIstanbulCoverage) {'#10
  +'            return retArr;'#10'          }'#10'          default:'#10'     '
  +'       throw this.astErrorOutput(''Unexpected expression'', mNode);'#10'   '
  +' }'#10#10'    if (mNode.computed === false) {'#10'      switch (type) {'#10
  +'        case ''Number'':'#10'        case ''Integer'':'#10'        case ''F'
  +'loat'':'#10'        case ''Boolean'':'#10'          retArr.push(`${origin}_'
  +'${utils.sanitizeName(name)}`);'#10'          return retArr;'#10'      }'#10
  ,'    }'#10#10'    const markupName = `${origin}_${utils.sanitizeName(name)}`'
  +';'#10#10'    switch (type) {'#10'      case ''Array(2)'':'#10'      case '''
  +'Array(3)'':'#10'      case ''Array(4)'':'#10'        this.astGeneric(mNode.'
  +'object, retArr);'#10'        retArr.push(''['');'#10'        retArr.push(th'
  +'is.memberExpressionPropertyMarkup(xProperty));'#10'        retArr.push('']'
  +''');'#10'        break;'#10'      case ''HTMLImageArray'':'#10'        retA'
  +'rr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Di'
  +'m, `);'#10'        this.memberExpressionXYZ(xProperty, yProperty, zProperty'
  +', retArr);'#10'        retArr.push('')'');'#10'        break;'#10'      cas'
  +'e ''ArrayTexture(1)'':'#10'        retArr.push(`getFloatFromSampler2D(${ ma'
  +'rkupName }, ${ markupName }Size, ${ markupName }Dim, `);'#10'        this.m'
  +'emberExpressionXYZ(xProperty, yProperty, zProperty, retArr);'#10'        re'
  +'tArr.push('')'');'#10'        break;'#10'      case ''Array1D(2)'':'#10'   '
  +'   case ''Array2D(2)'':'#10'      case ''Array3D(2)'':'#10'        retArr.p'
  +'ush(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markup'
  +'Name }Dim, `);'#10'        this.memberExpressionXYZ(xProperty, yProperty, z'
  +'Property, retArr);'#10'        retArr.push('')'');'#10'        break;'#10' '
  +'     case ''ArrayTexture(2)'':'#10'        retArr.push(`getVec2FromSampler2'
  +'D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);'#10'       '
  +' this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);'#10'   '
  +'     retArr.push('')'');'#10'        break;'#10'      case ''Array1D(3)'':'
  +#10'      case ''Array2D(3)'':'#10'      case ''Array3D(3)'':'#10'        re'
  +'tArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ '
  +'markupName }Dim, `);'#10'        this.memberExpressionXYZ(xProperty, yPrope'
  +'rty, zProperty, retArr);'#10'        retArr.push('')'');'#10'        break;'
  +#10'      case ''ArrayTexture(3)'':'#10'        retArr.push(`getVec3FromSamp'
  +'ler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);'#10'   '
  +'     this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);'#10
  +'        retArr.push('')'');'#10'        break;'#10'      case ''Array1D(4)'
  +''':'#10'      case ''Array2D(4)'':'#10'      case ''Array3D(4)'':'#10'     '
  +'   retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size'
  +', ${ markupName }Dim, `);'#10'        this.memberExpressionXYZ(xProperty, y'
  +'Property, zProperty, retArr);'#10'        retArr.push('')'');'#10'        b'
  +'reak;'#10'      case ''ArrayTexture(4)'':'#10'      case ''HTMLCanvas'':'#10
  +'      case ''HTMLImage'':'#10'      case ''HTMLVideo'':'#10'        retArr.'
  +'push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupN'
  +'ame }Dim, `);'#10'        this.memberExpressionXYZ(xProperty, yProperty, zP'
  +'roperty, retArr);'#10'        retArr.push('')'');'#10'        break;'#10'  '
  +'    case ''NumberTexture'':'#10'      case ''Array'':'#10'      case ''Arra'
  +'y2D'':'#10'      case ''Array3D'':'#10'      case ''Array4D'':'#10'      ca'
  +'se ''Input'':'#10'      case ''Number'':'#10'      case ''Float'':'#10'    '
  +'  case ''Integer'':'#10'        if (this.precision === ''single'') {'#10'  '
  +'        retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size,'
  +' ${markupName}Dim, `);'#10'          this.memberExpressionXYZ(xProperty, yP'
  +'roperty, zProperty, retArr);'#10'          retArr.push('')'');'#10'        '
  +'} else {'#10'          const bitRatio = (origin === ''user'' ?'#10'        '
  +'    this.lookupFunctionArgumentBitRatio(this.name, name) :'#10'            '
  +'this.constantBitRatios[name]'#10'          );'#10'          switch (bitRati'
  +'o) {'#10'            case 1:'#10'              retArr.push(`get8(${markupNa'
  +'me}, ${markupName}Size, ${markupName}Dim, `);'#10'              break;'#10
  +'            case 2:'#10'              retArr.push(`get16(${markupName}, ${m'
  +'arkupName}Size, ${markupName}Dim, `);'#10'              break;'#10'        '
  +'    case 4:'#10'            case 0:'#10'              retArr.push(`get32(${'
  +'markupName}, ${markupName}Size, ${markupName}Dim, `);'#10'              bre'
  +'ak;'#10'            default:'#10'              throw new Error(`unhandled b'
  +'it ratio of ${bitRatio}`);'#10'          }'#10'          this.memberExpress'
  +'ionXYZ(xProperty, yProperty, zProperty, retArr);'#10'          retArr.push('
  +''')'');'#10'        }'#10'        break;'#10'      case ''MemoryOptimizedNu'
  +'mberTexture'':'#10'        retArr.push(`getMemoryOptimized32(${ markupName '
  +'}, ${ markupName }Size, ${ markupName }Dim, `);'#10'        this.memberExpr'
  +'essionXYZ(xProperty, yProperty, zProperty, retArr);'#10'        retArr.push'
  +'('')'');'#10'        break;'#10'      default:'#10'        throw new Error('
  +'`unhandled member expression "${ type }"`);'#10'    }'#10'    return retArr'
  +';'#10'  }'#10#10'  astCallExpression(ast, retArr) {'#10'    if (!ast.callee'
  ,') {'#10'      throw this.astErrorOutput(''Unknown CallExpression'', ast);'
  +#10'    }'#10#10'    let functionName = null;'#10'    const isMathFunction ='
  +' this.isAstMathFunction(ast);'#10#10'    if (isMathFunction || (ast.callee.'
  +'object && ast.callee.object.type === ''ThisExpression'')) {'#10'      funct'
  +'ionName = ast.callee.property.name;'#10'    }'#10'    else if (ast.callee.t'
  +'ype === ''SequenceExpression'' && ast.callee.expressions[0].type === ''Lite'
  +'ral'' && !isNaN(ast.callee.expressions[0].raw)) {'#10'      functionName = '
  +'ast.callee.expressions[1].property.name;'#10'    } else {'#10'      functio'
  +'nName = ast.callee.name;'#10'    }'#10#10'    if (!functionName) {'#10'    '
  +'  throw this.astErrorOutput(`Unhandled function, couldn''t find name`, ast)'
  +';'#10'    }'#10#10'    switch (functionName) {'#10'      case ''pow'':'#10
  +'        functionName = ''_pow'';'#10'        break;'#10'      case ''round'
  +''':'#10'        functionName = ''_round'';'#10'        break;'#10'    }'#10
  +#10'    if (this.calledFunctions.indexOf(functionName) < 0) {'#10'      this'
  +'.calledFunctions.push(functionName);'#10'    }'#10#10'    if (functionName '
  +'=== ''random'' && this.plugins && this.plugins.length > 0) {'#10'      for '
  +'(let i = 0; i < this.plugins.length; i++) {'#10'        const plugin = this'
  +'.plugins[i];'#10'        if (plugin.functionMatch === ''Math.random()'' && '
  +'plugin.functionReplace) {'#10'          retArr.push(plugin.functionReplace)'
  +';'#10'          return retArr;'#10'        }'#10'      }'#10'    }'#10#10' '
  +'   if (this.onFunctionCall) {'#10'      this.onFunctionCall(this.name, func'
  +'tionName, ast.arguments);'#10'    }'#10#10'    retArr.push(functionName);'
  +#10#10'    retArr.push(''('');'#10#10'    if (isMathFunction) {'#10'      fo'
  +'r (let i = 0; i < ast.arguments.length; ++i) {'#10'        const argument ='
  +' ast.arguments[i];'#10'        const argumentType = this.getType(argument);'
  +#10'        if (i > 0) {'#10'          retArr.push('', '');'#10'        }'#10
  +#10'        switch (argumentType) {'#10'          case ''Integer'':'#10'    '
  +'        this.castValueToFloat(argument, retArr);'#10'            break;'#10
  +'          default:'#10'            this.astGeneric(argument, retArr);'#10' '
  +'           break;'#10'        }'#10'      }'#10'    } else {'#10'      cons'
  +'t targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];'#10' '
  +'     for (let i = 0; i < ast.arguments.length; ++i) {'#10'        const arg'
  +'ument = ast.arguments[i];'#10'        let targetType = targetTypes[i];'#10
  +'        if (i > 0) {'#10'          retArr.push('', '');'#10'        }'#10' '
  +'       const argumentType = this.getType(argument);'#10'        if (!target'
  +'Type) {'#10'          this.triggerImplyArgumentType(functionName, i, argume'
  +'ntType, this);'#10'          targetType = argumentType;'#10'        }'#10' '
  +'       switch (argumentType) {'#10'          case ''Boolean'':'#10'        '
  +'    this.astGeneric(argument, retArr);'#10'            continue;'#10'      '
  +'    case ''Number'':'#10'          case ''Float'':'#10'            if (targ'
  +'etType === ''Integer'') {'#10'              retArr.push(''int('');'#10'    '
  +'          this.astGeneric(argument, retArr);'#10'              retArr.push('
  +''')'');'#10'              continue;'#10'            } else if (targetType ='
  +'== ''Number'' || targetType === ''Float'') {'#10'              this.astGene'
  +'ric(argument, retArr);'#10'              continue;'#10'            } else i'
  +'f (targetType === ''LiteralInteger'') {'#10'              this.castLiteralT'
  +'oFloat(argument, retArr);'#10'              continue;'#10'            }'#10
  +'            break;'#10'          case ''Integer'':'#10'            if (targ'
  +'etType === ''Number'' || targetType === ''Float'') {'#10'              retA'
  +'rr.push(''float('');'#10'              this.astGeneric(argument, retArr);'
  +#10'              retArr.push('')'');'#10'              continue;'#10'      '
  +'      } else if (targetType === ''Integer'') {'#10'              this.astGe'
  +'neric(argument, retArr);'#10'              continue;'#10'            }'#10
  +'            break;'#10'          case ''LiteralInteger'':'#10'            i'
  +'f (targetType === ''Integer'') {'#10'              this.castLiteralToIntege'
  +'r(argument, retArr);'#10'              continue;'#10'            } else if '
  +'(targetType === ''Number'' || targetType === ''Float'') {'#10'             '
  +' this.castLiteralToFloat(argument, retArr);'#10'              continue;'#10
  +'            } else if (targetType === ''LiteralInteger'') {'#10'           '
  +'   this.astGeneric(argument, retArr);'#10'              continue;'#10'     '
  +'       }'#10'            break;'#10'          case ''Array(2)'':'#10'      '
  +'    case ''Array(3)'':'#10'          case ''Array(4)'':'#10'            if '
  +'(targetType === argumentType) {'#10'              if (argument.type === ''I'
  +'dentifier'') {'#10'                retArr.push(`user_${utils.sanitizeName(a'
  ,'rgument.name)}`);'#10'              } else if (argument.type === ''ArrayExp'
  +'ression'' || argument.type === ''MemberExpression'' || argument.type === '''
  +'CallExpression'') {'#10'                this.astGeneric(argument, retArr);'
  +#10'              } else {'#10'                throw this.astErrorOutput(`Un'
  +'handled argument type ${ argument.type }`, ast);'#10'              }'#10'  '
  +'            continue;'#10'            }'#10'            break;'#10'        '
  +'  case ''HTMLCanvas'':'#10'          case ''HTMLImage'':'#10'          case'
  +' ''HTMLImageArray'':'#10'          case ''HTMLVideo'':'#10'          case '
  +'''ArrayTexture(1)'':'#10'          case ''ArrayTexture(2)'':'#10'          '
  +'case ''ArrayTexture(3)'':'#10'          case ''ArrayTexture(4)'':'#10'     '
  +'     case ''Array'':'#10'          case ''Input'':'#10'            if (targ'
  +'etType === argumentType) {'#10'              if (argument.type !== ''Identi'
  +'fier'') throw this.astErrorOutput(`Unhandled argument type ${ argument.type'
  +' }`, ast);'#10'              this.triggerImplyArgumentBitRatio(this.name, a'
  +'rgument.name, functionName, i);'#10'              const name = utils.saniti'
  +'zeName(argument.name);'#10'              retArr.push(`user_${name},user_${n'
  +'ame}Size,user_${name}Dim`);'#10'              continue;'#10'            }'
  +#10'            break;'#10'        }'#10'        throw this.astErrorOutput(`'
  +'Unhandled argument combination of ${ argumentType } and ${ targetType } for'
  +' argument named "${ argument.name }"`, ast);'#10'      }'#10'    }'#10'    '
  +'retArr.push('')'');'#10#10'    return retArr;'#10'  }'#10#10'  astArrayExpr'
  +'ession(arrNode, retArr) {'#10'    const arrLen = arrNode.elements.length;'
  +#10#10'    retArr.push(''vec'' + arrLen + ''('');'#10'    for (let i = 0; i '
  +'< arrLen; ++i) {'#10'      if (i > 0) {'#10'        retArr.push('', '');'#10
  +'      }'#10'      const subNode = arrNode.elements[i];'#10'      this.astGe'
  +'neric(subNode, retArr)'#10'    }'#10'    retArr.push('')'');'#10#10'    ret'
  +'urn retArr;'#10'  }'#10#10'  memberExpressionXYZ(x, y, z, retArr) {'#10'   '
  +' if (z) {'#10'      retArr.push(this.memberExpressionPropertyMarkup(z), '','
  +' '');'#10'    } else {'#10'      retArr.push(''0, '');'#10'    }'#10'    if'
  +' (y) {'#10'      retArr.push(this.memberExpressionPropertyMarkup(y), '', '''
  +');'#10'    } else {'#10'      retArr.push(''0, '');'#10'    }'#10'    retAr'
  +'r.push(this.memberExpressionPropertyMarkup(x));'#10'    return retArr;'#10
  +'  }'#10#10'  memberExpressionPropertyMarkup(property) {'#10'    if (!proper'
  +'ty) {'#10'      throw new Error(''Property not set'');'#10'    }'#10'    co'
  +'nst type = this.getType(property);'#10'    const result = [];'#10'    switc'
  +'h (type) {'#10'      case ''Number'':'#10'      case ''Float'':'#10'       '
  +' this.castValueToInteger(property, result);'#10'        break;'#10'      ca'
  +'se ''LiteralInteger'':'#10'        this.castLiteralToInteger(property, resu'
  +'lt);'#10'        break;'#10'      default:'#10'        this.astGeneric(prop'
  +'erty, result);'#10'    }'#10'    return result.join('''');'#10'  }'#10'}'#10
  +#10'const typeMap = {'#10'  ''Array'': ''sampler2D'','#10'  ''Array(2)'': '''
  +'vec2'','#10'  ''Array(3)'': ''vec3'','#10'  ''Array(4)'': ''vec4'','#10'  '
  +'''Array2D'': ''sampler2D'','#10'  ''Array3D'': ''sampler2D'','#10'  ''Boole'
  +'an'': ''bool'','#10'  ''Float'': ''float'','#10'  ''Input'': ''sampler2D'','
  +#10'  ''Integer'': ''int'','#10'  ''Number'': ''float'','#10'  ''LiteralInte'
  +'ger'': ''float'','#10'  ''NumberTexture'': ''sampler2D'','#10'  ''MemoryOpt'
  +'imizedNumberTexture'': ''sampler2D'','#10'  ''ArrayTexture(1)'': ''sampler2'
  +'D'','#10'  ''ArrayTexture(2)'': ''sampler2D'','#10'  ''ArrayTexture(3)'': '
  +'''sampler2D'','#10'  ''ArrayTexture(4)'': ''sampler2D'','#10'  ''HTMLVideo'
  +''': ''sampler2D'','#10'  ''HTMLCanvas'': ''sampler2D'','#10'  ''HTMLImage'''
  +': ''sampler2D'','#10'  ''HTMLImageArray'': ''sampler2DArray'','#10'};'#10#10
  +'const operatorMap = {'#10'  ''==='': ''=='','#10'  ''!=='': ''!='''#10'};'
  +#10#10'module.exports = {'#10'  WebGLFunctionNode'#10'};'#10'},{"../../utils'
  +'":114,"../function-node":10}],39:[function(require,module,exports){'#10'con'
  +'st { WebGLKernelValueBoolean } = require(''./kernel-value/boolean'');'#10'c'
  +'onst { WebGLKernelValueFloat } = require(''./kernel-value/float'');'#10'con'
  +'st { WebGLKernelValueInteger } = require(''./kernel-value/integer'');'#10#10
  +'const { WebGLKernelValueHTMLImage } = require(''./kernel-value/html-image'''
  +');'#10'const { WebGLKernelValueDynamicHTMLImage } = require(''./kernel-valu'
  +'e/dynamic-html-image'');'#10#10'const { WebGLKernelValueHTMLVideo } = requi'
  +'re(''./kernel-value/html-video'');'#10'const { WebGLKernelValueDynamicHTMLV'
  +'ideo } = require(''./kernel-value/dynamic-html-video'');'#10#10'const { Web'
  +'GLKernelValueSingleInput } = require(''./kernel-value/single-input'');'#10
  +'const { WebGLKernelValueDynamicSingleInput } = require(''./kernel-value/dyn'
  ,'amic-single-input'');'#10#10'const { WebGLKernelValueUnsignedInput } = requ'
  +'ire(''./kernel-value/unsigned-input'');'#10'const { WebGLKernelValueDynamic'
  +'UnsignedInput } = require(''./kernel-value/dynamic-unsigned-input'');'#10#10
  +'const { WebGLKernelValueMemoryOptimizedNumberTexture } = require(''./kernel'
  +'-value/memory-optimized-number-texture'');'#10'const { WebGLKernelValueDyna'
  +'micMemoryOptimizedNumberTexture } = require(''./kernel-value/dynamic-memory'
  +'-optimized-number-texture'');'#10#10'const { WebGLKernelValueNumberTexture '
  +'} = require(''./kernel-value/number-texture'');'#10'const { WebGLKernelValu'
  +'eDynamicNumberTexture } = require(''./kernel-value/dynamic-number-texture'''
  +');'#10#10'const { WebGLKernelValueSingleArray } = require(''./kernel-value/'
  +'single-array'');'#10'const { WebGLKernelValueDynamicSingleArray } = require'
  +'(''./kernel-value/dynamic-single-array'');'#10#10'const { WebGLKernelValueS'
  +'ingleArray1DI } = require(''./kernel-value/single-array1d-i'');'#10'const {'
  +' WebGLKernelValueDynamicSingleArray1DI } = require(''./kernel-value/dynamic'
  +'-single-array1d-i'');'#10#10'const { WebGLKernelValueSingleArray2DI } = req'
  +'uire(''./kernel-value/single-array2d-i'');'#10'const { WebGLKernelValueDyna'
  +'micSingleArray2DI } = require(''./kernel-value/dynamic-single-array2d-i'');'
  +#10#10'const { WebGLKernelValueSingleArray3DI } = require(''./kernel-value/s'
  +'ingle-array3d-i'');'#10'const { WebGLKernelValueDynamicSingleArray3DI } = r'
  +'equire(''./kernel-value/dynamic-single-array3d-i'');'#10#10'const { WebGLKe'
  +'rnelValueSingleArray2 } = require(''./kernel-value/single-array2'');'#10'co'
  +'nst { WebGLKernelValueSingleArray3 } = require(''./kernel-value/single-arra'
  +'y3'');'#10'const { WebGLKernelValueSingleArray4 } = require(''./kernel-valu'
  +'e/single-array4'');'#10#10'const { WebGLKernelValueUnsignedArray } = requir'
  +'e(''./kernel-value/unsigned-array'');'#10'const { WebGLKernelValueDynamicUn'
  +'signedArray } = require(''./kernel-value/dynamic-unsigned-array'');'#10#10
  +'const kernelValueMaps = {'#10'  unsigned: {'#10'    dynamic: {'#10'      '''
  +'Boolean'': WebGLKernelValueBoolean,'#10'      ''Integer'': WebGLKernelValue'
  +'Integer,'#10'      ''Float'': WebGLKernelValueFloat,'#10'      ''Array'': W'
  +'ebGLKernelValueDynamicUnsignedArray,'#10'      ''Array(2)'': false,'#10'   '
  +'   ''Array(3)'': false,'#10'      ''Array(4)'': false,'#10'      ''Array1D('
  +'2)'': false,'#10'      ''Array1D(3)'': false,'#10'      ''Array1D(4)'': fal'
  +'se,'#10'      ''Array2D(2)'': false,'#10'      ''Array2D(3)'': false,'#10' '
  +'     ''Array2D(4)'': false,'#10'      ''Array3D(2)'': false,'#10'      ''Ar'
  +'ray3D(3)'': false,'#10'      ''Array3D(4)'': false,'#10'      ''Input'': We'
  +'bGLKernelValueDynamicUnsignedInput,'#10'      ''NumberTexture'': WebGLKerne'
  +'lValueDynamicNumberTexture,'#10'      ''ArrayTexture(1)'': WebGLKernelValue'
  +'DynamicNumberTexture,'#10'      ''ArrayTexture(2)'': WebGLKernelValueDynami'
  +'cNumberTexture,'#10'      ''ArrayTexture(3)'': WebGLKernelValueDynamicNumbe'
  +'rTexture,'#10'      ''ArrayTexture(4)'': WebGLKernelValueDynamicNumberTextu'
  +'re,'#10'      ''MemoryOptimizedNumberTexture'': WebGLKernelValueDynamicMemo'
  +'ryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': WebGLKernelValueDynamic'
  +'HTMLImage,'#10'      ''HTMLImage'': WebGLKernelValueDynamicHTMLImage,'#10' '
  +'     ''HTMLImageArray'': false,'#10'      ''HTMLVideo'': WebGLKernelValueDy'
  +'namicHTMLVideo,'#10'    },'#10'    static: {'#10'      ''Boolean'': WebGLKe'
  +'rnelValueBoolean,'#10'      ''Float'': WebGLKernelValueFloat,'#10'      ''I'
  +'nteger'': WebGLKernelValueInteger,'#10'      ''Array'': WebGLKernelValueUns'
  +'ignedArray,'#10'      ''Array(2)'': false,'#10'      ''Array(3)'': false,'
  +#10'      ''Array(4)'': false,'#10'      ''Array1D(2)'': false,'#10'      '''
  +'Array1D(3)'': false,'#10'      ''Array1D(4)'': false,'#10'      ''Array2D(2'
  +')'': false,'#10'      ''Array2D(3)'': false,'#10'      ''Array2D(4)'': fals'
  +'e,'#10'      ''Array3D(2)'': false,'#10'      ''Array3D(3)'': false,'#10'  '
  +'    ''Array3D(4)'': false,'#10'      ''Input'': WebGLKernelValueUnsignedInp'
  +'ut,'#10'      ''NumberTexture'': WebGLKernelValueNumberTexture,'#10'      '
  +'''ArrayTexture(1)'': WebGLKernelValueNumberTexture,'#10'      ''ArrayTextur'
  +'e(2)'': WebGLKernelValueNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL'
  +'KernelValueNumberTexture,'#10'      ''ArrayTexture(4)'': WebGLKernelValueNu'
  +'mberTexture,'#10'      ''MemoryOptimizedNumberTexture'': WebGLKernelValueMe'
  +'moryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': WebGLKernelValueHTMLI'
  +'mage,'#10'      ''HTMLImage'': WebGLKernelValueHTMLImage,'#10'      ''HTMLI'
  +'mageArray'': false,'#10'      ''HTMLVideo'': WebGLKernelValueHTMLVideo,'#10
  +'    }'#10'  },'#10'  single: {'#10'    dynamic: {'#10'      ''Boolean'': We'
  +'bGLKernelValueBoolean,'#10'      ''Integer'': WebGLKernelValueInteger,'#10
  +'      ''Float'': WebGLKernelValueFloat,'#10'      ''Array'': WebGLKernelVal'
  ,'ueDynamicSingleArray,'#10'      ''Array(2)'': WebGLKernelValueSingleArray2,'
  +#10'      ''Array(3)'': WebGLKernelValueSingleArray3,'#10'      ''Array(4)'''
  +': WebGLKernelValueSingleArray4,'#10'      ''Array1D(2)'': WebGLKernelValueD'
  +'ynamicSingleArray1DI,'#10'      ''Array1D(3)'': WebGLKernelValueDynamicSing'
  +'leArray1DI,'#10'      ''Array1D(4)'': WebGLKernelValueDynamicSingleArray1DI'
  +','#10'      ''Array2D(2)'': WebGLKernelValueDynamicSingleArray2DI,'#10'    '
  +'  ''Array2D(3)'': WebGLKernelValueDynamicSingleArray2DI,'#10'      ''Array2'
  +'D(4)'': WebGLKernelValueDynamicSingleArray2DI,'#10'      ''Array3D(2)'': We'
  +'bGLKernelValueDynamicSingleArray3DI,'#10'      ''Array3D(3)'': WebGLKernelV'
  +'alueDynamicSingleArray3DI,'#10'      ''Array3D(4)'': WebGLKernelValueDynami'
  +'cSingleArray3DI,'#10'      ''Input'': WebGLKernelValueDynamicSingleInput,'
  +#10'      ''NumberTexture'': WebGLKernelValueDynamicNumberTexture,'#10'     '
  +' ''ArrayTexture(1)'': WebGLKernelValueDynamicNumberTexture,'#10'      ''Arr'
  +'ayTexture(2)'': WebGLKernelValueDynamicNumberTexture,'#10'      ''ArrayText'
  +'ure(3)'': WebGLKernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(4)'
  +''': WebGLKernelValueDynamicNumberTexture,'#10'      ''MemoryOptimizedNumber'
  +'Texture'': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,'#10'      '
  +'''HTMLCanvas'': WebGLKernelValueDynamicHTMLImage,'#10'      ''HTMLImage'': '
  +'WebGLKernelValueDynamicHTMLImage,'#10'      ''HTMLImageArray'': false,'#10
  +'      ''HTMLVideo'': WebGLKernelValueDynamicHTMLVideo,'#10'    },'#10'    s'
  +'tatic: {'#10'      ''Boolean'': WebGLKernelValueBoolean,'#10'      ''Float'
  +''': WebGLKernelValueFloat,'#10'      ''Integer'': WebGLKernelValueInteger,'
  +#10'      ''Array'': WebGLKernelValueSingleArray,'#10'      ''Array(2)'': We'
  +'bGLKernelValueSingleArray2,'#10'      ''Array(3)'': WebGLKernelValueSingleA'
  +'rray3,'#10'      ''Array(4)'': WebGLKernelValueSingleArray4,'#10'      ''Ar'
  +'ray1D(2)'': WebGLKernelValueSingleArray1DI,'#10'      ''Array1D(3)'': WebGL'
  +'KernelValueSingleArray1DI,'#10'      ''Array1D(4)'': WebGLKernelValueSingle'
  +'Array1DI,'#10'      ''Array2D(2)'': WebGLKernelValueSingleArray2DI,'#10'   '
  +'   ''Array2D(3)'': WebGLKernelValueSingleArray2DI,'#10'      ''Array2D(4)'''
  +': WebGLKernelValueSingleArray2DI,'#10'      ''Array3D(2)'': WebGLKernelValu'
  +'eSingleArray3DI,'#10'      ''Array3D(3)'': WebGLKernelValueSingleArray3DI,'
  +#10'      ''Array3D(4)'': WebGLKernelValueSingleArray3DI,'#10'      ''Input'
  +''': WebGLKernelValueSingleInput,'#10'      ''NumberTexture'': WebGLKernelVa'
  +'lueNumberTexture,'#10'      ''ArrayTexture(1)'': WebGLKernelValueNumberText'
  +'ure,'#10'      ''ArrayTexture(2)'': WebGLKernelValueNumberTexture,'#10'    '
  +'  ''ArrayTexture(3)'': WebGLKernelValueNumberTexture,'#10'      ''ArrayText'
  +'ure(4)'': WebGLKernelValueNumberTexture,'#10'      ''MemoryOptimizedNumberT'
  +'exture'': WebGLKernelValueMemoryOptimizedNumberTexture,'#10'      ''HTMLCan'
  +'vas'': WebGLKernelValueHTMLImage,'#10'      ''HTMLImage'': WebGLKernelValue'
  +'HTMLImage,'#10'      ''HTMLImageArray'': false,'#10'      ''HTMLVideo'': We'
  +'bGLKernelValueHTMLVideo,'#10'    }'#10'  },'#10'};'#10#10'function lookupKe'
  +'rnelValueType(type, dynamic, precision, value) {'#10'  if (!type) {'#10'   '
  +' throw new Error(''type missing'');'#10'  }'#10'  if (!dynamic) {'#10'    t'
  +'hrow new Error(''dynamic missing'');'#10'  }'#10'  if (!precision) {'#10'  '
  +'  throw new Error(''precision missing'');'#10'  }'#10'  if (value.type) {'
  +#10'    type = value.type;'#10'  }'#10'  const types = kernelValueMaps[preci'
  +'sion][dynamic];'#10'  if (types[type] === false) {'#10'    return null;'#10
  +'  } else if (types[type] === undefined) {'#10'    throw new Error(`Could no'
  +'t find a KernelValue for ${ type }`);'#10'  }'#10'  return types[type];'#10
  +'}'#10#10'module.exports = {'#10'  lookupKernelValueType,'#10'  kernelValueM'
  +'aps,'#10'};'#10'},{"./kernel-value/boolean":41,"./kernel-value/dynamic-html'
  +'-image":42,"./kernel-value/dynamic-html-video":43,"./kernel-value/dynamic-m'
  +'emory-optimized-number-texture":44,"./kernel-value/dynamic-number-texture":'
  +'45,"./kernel-value/dynamic-single-array":46,"./kernel-value/dynamic-single-'
  +'array1d-i":47,"./kernel-value/dynamic-single-array2d-i":48,"./kernel-value/'
  +'dynamic-single-array3d-i":49,"./kernel-value/dynamic-single-input":50,"./ke'
  +'rnel-value/dynamic-unsigned-array":51,"./kernel-value/dynamic-unsigned-inpu'
  +'t":52,"./kernel-value/float":53,"./kernel-value/html-image":54,"./kernel-va'
  +'lue/html-video":55,"./kernel-value/integer":57,"./kernel-value/memory-optim'
  +'ized-number-texture":58,"./kernel-value/number-texture":59,"./kernel-value/'
  +'single-array":60,"./kernel-value/single-array1d-i":61,"./kernel-value/singl'
  +'e-array2":62,"./kernel-value/single-array2d-i":63,"./kernel-value/single-ar'
  +'ray3":64,"./kernel-value/single-array3d-i":65,"./kernel-value/single-array4'
  +'":66,"./kernel-value/single-input":67,"./kernel-value/unsigned-array":68,".'
  ,'/kernel-value/unsigned-input":69}],40:[function(require,module,exports){'#10
  +'const { WebGLKernelValue } = require(''./index'');'#10'const { Input } = re'
  +'quire(''../../../input'');'#10#10'class WebGLKernelArray extends WebGLKerne'
  +'lValue {'#10'  checkSize(width, height) {'#10'    if (!this.kernel.validate'
  +') return;'#10'    const { maxTextureSize } = this.kernel.constructor.featur'
  +'es;'#10'    if (width > maxTextureSize || height > maxTextureSize) {'#10'  '
  +'    if (width > height) {'#10'        throw new Error(`Argument texture wid'
  +'th of ${width} larger than maximum size of ${maxTextureSize} for your GPU`)'
  +';'#10'      } else if (width < height) {'#10'        throw new Error(`Argum'
  +'ent texture height of ${height} larger than maximum size of ${maxTextureSiz'
  +'e} for your GPU`);'#10'      } else {'#10'        throw new Error(`Argument'
  +' texture height and width of ${height} larger than maximum size of ${maxTex'
  +'tureSize} for your GPU`);'#10'      }'#10'    }'#10'  }'#10#10'  setup() {'
  +#10'    this.requestTexture();'#10'    this.setupTexture();'#10'    this.def'
  +'ineTexture();'#10'  }'#10#10'  requestTexture() {'#10'    this.texture = th'
  +'is.onRequestTexture();'#10'  }'#10#10'  defineTexture() {'#10'    const { c'
  +'ontext: gl } = this;'#10'    gl.activeTexture(this.contextHandle);'#10'    '
  +'gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.texParameteri(gl.TE'
  +'XTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#10'    gl.texParameteri(gl'
  +'.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#10'    gl.texParameteri'
  +'(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'    gl.texParameter'
  +'i(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'#10'  }'#10#10'  setup'
  +'Texture() {'#10'    this.contextHandle = this.onRequestContextHandle();'#10
  +'    this.index = this.onRequestIndex();'#10'    this.dimensionsId = this.id'
  +' + ''Dim'';'#10'    this.sizeId = this.id + ''Size'';'#10'  }'#10#10'  getB'
  +'itRatio(value) {'#10'    if (Array.isArray(value[0])) {'#10'      return th'
  +'is.getBitRatio(value[0]);'#10'    } else if (value.constructor === Input) {'
  +#10'      return this.getBitRatio(value.value);'#10'    }'#10'    switch (va'
  +'lue.constructor) {'#10'      case Uint8ClampedArray:'#10'      case Uint8Ar'
  +'ray:'#10'      case Int8Array:'#10'        return 1;'#10'      case Uint16A'
  +'rray:'#10'      case Int16Array:'#10'        return 2;'#10'      case Float'
  +'32Array:'#10'      case Int32Array:'#10'      default:'#10'        return 4'
  +';'#10'    }'#10'  }'#10#10'  destroy() {'#10'    if (this.prevArg) {'#10'  '
  +'    this.prevArg.delete();'#10'    }'#10'    this.context.deleteTexture(thi'
  +'s.texture);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelArray'
  +#10'};'#10'},{"../../../input":110,"./index":56}],41:[function(require,modul'
  +'e,exports){'#10'const { utils } = require(''../../../utils'');'#10'const { '
  +'WebGLKernelValue } = require(''./index'');'#10#10'class WebGLKernelValueBoo'
  +'lean extends WebGLKernelValue {'#10'  constructor(value, settings) {'#10'  '
  +'  super(value, settings);'#10'    this.uploadValue = value;'#10'  }'#10'  g'
  +'etSource(value) {'#10'    if (this.origin === ''constants'') {'#10'      re'
  +'turn `const bool ${this.id} = ${value};\n`;'#10'    }'#10'    return `unifo'
  +'rm bool ${this.id};\n`;'#10'  }'#10#10'  getStringValueHandler() {'#10'    '
  +'return `const uploadValue_${this.name} = ${this.varName};\n`;'#10'  }'#10#10
  +'  updateValue(value) {'#10'    if (this.origin === ''constants'') return;'
  +#10'    this.kernel.setUniform1i(this.id, this.uploadValue = value);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueBoolean'#10'};'#10'},{'
  +'"../../../utils":114,"./index":56}],42:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelVa'
  +'lueHTMLImage } = require(''./html-image'');'#10#10'class WebGLKernelValueDy'
  +'namicHTMLImage extends WebGLKernelValueHTMLImage {'#10'  getSource() {'#10
  +'    return utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'
  +#10'      `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.di'
  +'mensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    con'
  +'st { width, height } = value;'#10'    this.checkSize(width, height);'#10'  '
  +'  this.dimensions = [width, height, 1];'#10'    this.textureSize = [width, '
  +'height];'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimensio'
  +'ns);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10
  +'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10' '
  +' WebGLKernelValueDynamicHTMLImage'#10'};'#10'},{"../../../utils":114,"./htm'
  +'l-image":54}],43:[function(require,module,exports){'#10'const { WebGLKernel'
  +'ValueDynamicHTMLImage } = require(''./dynamic-html-image'');'#10#10'class W'
  +'ebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}'
  +#10#10'module.exports = {'#10'  WebGLKernelValueDynamicHTMLVideo'#10'};'#10
  ,'},{"./dynamic-html-image":42}],44:[function(require,module,exports){'#10'co'
  +'nst { utils } = require(''../../../utils'');'#10'const { WebGLKernelValueMe'
  +'moryOptimizedNumberTexture } = require(''./memory-optimized-number-texture'
  +''');'#10#10'class WebGLKernelValueDynamicMemoryOptimizedNumberTexture exten'
  +'ds WebGLKernelValueMemoryOptimizedNumberTexture {'#10'  getSource() {'#10' '
  +'   return utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'
  +#10'      `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.di'
  +'mensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(inputTexture) {'#10
  +'    this.dimensions = inputTexture.dimensions;'#10'    this.checkSize(input'
  +'Texture.size[0], inputTexture.size[1]);'#10'    this.textureSize = inputTex'
  +'ture.size;'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimens'
  +'ions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10
  +'    super.updateValue(inputTexture);'#10'  }'#10'}'#10#10'module.exports = '
  +'{'#10'  WebGLKernelValueDynamicMemoryOptimizedNumberTexture'#10'};'#10'},{"'
  +'../../../utils":114,"./memory-optimized-number-texture":58}],45:[function(r'
  +'equire,module,exports){'#10'const { utils } = require(''../../../utils'');'
  +#10'const { WebGLKernelValueNumberTexture } = require(''./number-texture'');'
  +#10#10'class WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNu'
  +'mberTexture {'#10'  getSource() {'#10'    return utils.linesToString(['#10
  +'      `uniform sampler2D ${this.id}`,'#10'      `uniform ivec2 ${this.sizeI'
  +'d}`,'#10'      `uniform ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10
  +#10'  updateValue(value) {'#10'    this.dimensions = value.dimensions;'#10' '
  +'   this.checkSize(value.size[0], value.size[1]);'#10'    this.textureSize ='
  +' value.size;'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dime'
  +'nsions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'
  +#10'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGLKernelValueDynamicNumberTexture'#10'};'#10'},{"../../../utils":114,"'
  +'./number-texture":59}],46:[function(require,module,exports){'#10'const { ut'
  +'ils } = require(''../../../utils'');'#10'const { WebGLKernelValueSingleArra'
  +'y } = require(''./single-array'');'#10#10'class WebGLKernelValueDynamicSing'
  +'leArray extends WebGLKernelValueSingleArray {'#10'  getSource() {'#10'    r'
  +'eturn utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10' '
  +'     `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.dimens'
  +'ionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.di'
  +'mensions = utils.getDimensions(value, true);'#10'    this.textureSize = uti'
  +'ls.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);'#10
  +'    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * th'
  +'is.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.textureSize[1'
  +']);'#10'    this.uploadValue = new Float32Array(this.uploadArrayLength);'#10
  +'    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);'#10'    '
  +'this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10'    super.upd'
  +'ateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelV'
  +'alueDynamicSingleArray'#10'};'#10'},{"../../../utils":114,"./single-array":'
  +'60}],47:[function(require,module,exports){'#10'const { utils } = require('''
  +'../../../utils'');'#10'const { WebGLKernelValueSingleArray1DI } = require('
  +'''./single-array1d-i'');'#10#10'class WebGLKernelValueDynamicSingleArray1DI'
  +' extends WebGLKernelValueSingleArray1DI {'#10'  getSource() {'#10'    retur'
  +'n utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'     '
  +' `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.dimensions'
  +'Id}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.setSha'
  +'pe(value);'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimens'
  +'ions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10
  +'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10' '
  +' WebGLKernelValueDynamicSingleArray1DI'#10'};'#10'},{"../../../utils":114,"'
  +'./single-array1d-i":61}],48:[function(require,module,exports){'#10'const { '
  +'utils } = require(''../../../utils'');'#10'const { WebGLKernelValueSingleAr'
  +'ray2DI } = require(''./single-array2d-i'');'#10#10'class WebGLKernelValueDy'
  +'namicSingleArray2DI extends WebGLKernelValueSingleArray2DI {'#10'  getSourc'
  +'e() {'#10'    return utils.linesToString(['#10'      `uniform sampler2D ${t'
  +'his.id}`,'#10'      `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec'
  +'3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'
  +#10'    this.setShape(value);'#10'    this.kernel.setUniform3iv(this.dimensi'
  +'onsId, this.dimensions);'#10'    this.kernel.setUniform2iv(this.sizeId, thi'
  +'s.textureSize);'#10'    super.updateValue(value);'#10'  }'#10'}'#10#10'modu'
  ,'le.exports = {'#10'  WebGLKernelValueDynamicSingleArray2DI'#10'};'#10'},{".'
  +'./../../utils":114,"./single-array2d-i":63}],49:[function(require,module,ex'
  +'ports){'#10'const { utils } = require(''../../../utils'');'#10'const { WebG'
  +'LKernelValueSingleArray3DI } = require(''./single-array3d-i'');'#10#10'clas'
  +'s WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray'
  +'3DI {'#10'  getSource() {'#10'    return utils.linesToString(['#10'      `u'
  +'niform sampler2D ${this.id}`,'#10'      `uniform ivec2 ${this.sizeId}`,'#10
  +'      `uniform ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  up'
  +'dateValue(value) {'#10'    this.setShape(value);'#10'    this.kernel.setUni'
  +'form3iv(this.dimensionsId, this.dimensions);'#10'    this.kernel.setUniform'
  +'2iv(this.sizeId, this.textureSize);'#10'    super.updateValue(value);'#10' '
  +' }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueDynamicSingleArray'
  +'3DI'#10'};'#10'},{"../../../utils":114,"./single-array3d-i":65}],50:[functi'
  +'on(require,module,exports){'#10'const { utils } = require(''../../../utils'
  +''');'#10'const { WebGLKernelValueSingleInput } = require(''./single-input'''
  +');'#10#10'class WebGLKernelValueDynamicSingleInput extends WebGLKernelValue'
  +'SingleInput {'#10'  getSource() {'#10'    return utils.linesToString(['#10
  +'      `uniform sampler2D ${this.id}`,'#10'      `uniform ivec2 ${this.sizeI'
  +'d}`,'#10'      `uniform ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10
  +#10'  updateValue(value) {'#10'    let [w, h, d] = value.size;'#10'    this.'
  +'dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10'    this.texture'
  +'Size = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRa'
  +'tio);'#10'    this.uploadArrayLength = this.textureSize[0] * this.textureSi'
  +'ze[1] * this.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.tex'
  +'tureSize[1]);'#10'    this.uploadValue = new Float32Array(this.uploadArrayL'
  +'ength);'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimension'
  +'s);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10' '
  +'   super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10'  '
  +'WebGLKernelValueDynamicSingleInput'#10'};'#10'},{"../../../utils":114,"./si'
  +'ngle-input":67}],51:[function(require,module,exports){'#10'const { utils } '
  +'= require(''../../../utils'');'#10'const { WebGLKernelValueUnsignedArray } '
  +'= require(''./unsigned-array'');'#10#10'class WebGLKernelValueDynamicUnsign'
  +'edArray extends WebGLKernelValueUnsignedArray {'#10'  getSource() {'#10'   '
  +' return utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10
  +'      `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.dimen'
  +'sionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.d'
  +'imensions = utils.getDimensions(value, true);'#10'    this.textureSize = ut'
  +'ils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);'#10
  +'    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4'
  +' / this.bitRatio);'#10'    this.checkSize(this.textureSize[0], this.texture'
  +'Size[1]);'#10'    const Type = this.getTransferArrayType(value);'#10'    th'
  +'is.preUploadValue = new Type(this.uploadArrayLength);'#10'    this.uploadVa'
  +'lue = new Uint8Array(this.preUploadValue.buffer);'#10'    this.kernel.setUn'
  +'iform3iv(this.dimensionsId, this.dimensions);'#10'    this.kernel.setUnifor'
  +'m2iv(this.sizeId, this.textureSize);'#10'    super.updateValue(value);'#10
  +'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueDynamicUnsignedAr'
  +'ray'#10'};'#10'},{"../../../utils":114,"./unsigned-array":68}],52:[function'
  +'(require,module,exports){'#10'const { utils } = require(''../../../utils'')'
  +';'#10'const { WebGLKernelValueUnsignedInput } = require(''./unsigned-input'
  +''');'#10#10'class WebGLKernelValueDynamicUnsignedInput extends WebGLKernelV'
  +'alueUnsignedInput {'#10'  getSource() {'#10'    return utils.linesToString('
  +'['#10'      `uniform sampler2D ${this.id}`,'#10'      `uniform ivec2 ${this'
  +'.sizeId}`,'#10'      `uniform ivec3 ${this.dimensionsId}`,'#10'    ]);'#10
  +'  }'#10#10'  updateValue(value) {'#10'    let [w, h, d] = value.size;'#10' '
  +'   this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10'    this'
  +'.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, t'
  +'his.bitRatio);'#10'    this.uploadArrayLength = this.textureSize[0] * this.'
  +'textureSize[1] * (4 / this.bitRatio);'#10'    this.checkSize(this.textureSi'
  +'ze[0], this.textureSize[1]);'#10'    const Type = this.getTransferArrayType'
  +'(value.value);'#10'    this.preUploadValue = new Type(this.uploadArrayLengt'
  +'h);'#10'    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);'
  +#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);'#10' '
  +'   this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10'    super.'
  +'updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKern'
  ,'elValueDynamicUnsignedInput'#10'};'#10'},{"../../../utils":114,"./unsigned-'
  +'input":69}],53:[function(require,module,exports){'#10'const { utils } = req'
  +'uire(''../../../utils'');'#10'const { WebGLKernelValue } = require(''./inde'
  +'x'');'#10#10'class WebGLKernelValueFloat extends WebGLKernelValue {'#10'  c'
  +'onstructor(value, settings) {'#10'    super(value, settings);'#10'    this.'
  +'uploadValue = value;'#10'  }'#10'  getStringValueHandler() {'#10'    return'
  +' `const uploadValue_${this.name} = ${this.varName};\n`;'#10'  }'#10'  getSo'
  +'urce(value) {'#10'    if (this.origin === ''constants'') {'#10'      if (Nu'
  +'mber.isInteger(value)) {'#10'        return `const float ${this.id} = ${val'
  +'ue}.0;\n`;'#10'      }'#10'      return `const float ${this.id} = ${value};'
  +'\n`;'#10'    }'#10'    return `uniform float ${this.id};\n`;'#10'  }'#10#10
  +'  updateValue(value) {'#10'    if (this.origin === ''constants'') return;'
  +#10'    this.kernel.setUniform1f(this.id, this.uploadValue = value);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueFloat'#10'};'#10'},{".'
  +'./../../utils":114,"./index":56}],54:[function(require,module,exports){'#10
  +'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelArray'
  +' } = require(''./array'');'#10#10'class WebGLKernelValueHTMLImage extends W'
  +'ebGLKernelArray {'#10'  constructor(value, settings) {'#10'    super(value,'
  +' settings);'#10'    const { width, height } = value;'#10'    this.checkSize'
  +'(width, height);'#10'    this.dimensions = [width, height, 1];'#10'    this'
  +'.textureSize = [width, height];'#10'    this.uploadValue = value;'#10'  }'
  +#10#10'  getStringValueHandler() {'#10'    return `const uploadValue_${this.'
  +'name} = ${this.varName};\n`;'#10'  }'#10#10'  getSource() {'#10'    return '
  +'utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'      `'
  +'ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]}'
  +')`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${'
  +'this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10'  '
  +'updateValue(inputImage) {'#10'    if (inputImage.constructor !== this.initi'
  +'alValueConstructor) {'#10'      this.onUpdateValueMismatch(inputImage.const'
  +'ructor);'#10'      return;'#10'    }'#10'    const { context: gl } = this;'
  +#10'    gl.activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXT'
  +'URE_2D, this.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)'
  +';'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYT'
  +'E, this.uploadValue = inputImage);'#10'    this.kernel.setUniform1i(this.id'
  +', this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelVal'
  +'ueHTMLImage'#10'};'#10'},{"../../../utils":114,"./array":40}],55:[function('
  +'require,module,exports){'#10'const { WebGLKernelValueHTMLImage } = require('
  +'''./html-image'');'#10#10'class WebGLKernelValueHTMLVideo extends WebGLKern'
  +'elValueHTMLImage {}'#10#10'module.exports = {'#10'  WebGLKernelValueHTMLVid'
  +'eo'#10'};'#10'},{"./html-image":54}],56:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { KernelValue }'
  +' = require(''../../kernel-value'');'#10#10'class WebGLKernelValue extends K'
  +'ernelValue {'#10'  constructor(value, settings) {'#10'    super(value, sett'
  +'ings);'#10'    this.dimensionsId = null;'#10'    this.sizeId = null;'#10'  '
  +'  this.initialValueConstructor = value.constructor;'#10'    this.onRequestT'
  +'exture = settings.onRequestTexture;'#10'    this.onRequestIndex = settings.'
  +'onRequestIndex;'#10'    this.uploadValue = null;'#10'    this.textureSize ='
  +' null;'#10'    this.bitRatio = null;'#10'    this.prevArg = null;'#10'  }'
  +#10#10'  get id() {'#10'    return `${this.origin}_${utils.sanitizeName(this'
  +'.name)}`;'#10'  }'#10#10'  setup() {}'#10#10'  getTransferArrayType(value) '
  +'{'#10'    if (Array.isArray(value[0])) {'#10'      return this.getTransferA'
  +'rrayType(value[0]);'#10'    }'#10'    switch (value.constructor) {'#10'    '
  +'  case Array:'#10'      case Int32Array:'#10'      case Int16Array:'#10'   '
  +'   case Int8Array:'#10'        return Float32Array;'#10'      case Uint8Cla'
  +'mpedArray:'#10'      case Uint8Array:'#10'      case Uint16Array:'#10'     '
  +' case Uint32Array:'#10'      case Float32Array:'#10'      case Float64Array'
  +':'#10'        return value.constructor;'#10'    }'#10'    console.warn(''Un'
  +'familiar constructor type.  Will go ahead and use, but likley this may resu'
  +'lt in a transfer of zeros'');'#10'    return value.constructor;'#10'  }'#10
  +#10'  getStringValueHandler() {'#10'    throw new Error(`"getStringValueHand'
  +'ler" not implemented on ${this.constructor.name}`);'#10'  }'#10#10'  getVar'
  +'iablePrecisionString() {'#10'    return this.kernel.getVariablePrecisionStr'
  +'ing(this.textureSize || undefined, this.tactic || undefined);'#10'  }'#10#10
  +'  destroy() {}'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValue'#10'}'
  ,';'#10'},{"../../../utils":114,"../../kernel-value":35}],57:[function(requir'
  +'e,module,exports){'#10'const { utils } = require(''../../../utils'');'#10'c'
  +'onst { WebGLKernelValue } = require(''./index'');'#10#10'class WebGLKernelV'
  +'alueInteger extends WebGLKernelValue {'#10'  constructor(value, settings) {'
  +#10'    super(value, settings);'#10'    this.uploadValue = value;'#10'  }'#10
  +'  getStringValueHandler() {'#10'    return `const uploadValue_${this.name} '
  +'= ${this.varName};\n`;'#10'  }'#10'  getSource(value) {'#10'    if (this.or'
  +'igin === ''constants'') {'#10'      return `const int ${this.id} = ${ parse'
  +'Int(value) };\n`;'#10'    }'#10'    return `uniform int ${this.id};\n`;'#10
  +'  }'#10#10'  updateValue(value) {'#10'    if (this.origin === ''constants'''
  +') return;'#10'    this.kernel.setUniform1i(this.id, this.uploadValue = valu'
  +'e);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueInteger'
  +#10'};'#10'},{"../../../utils":114,"./index":56}],58:[function(require,modul'
  +'e,exports){'#10'const { utils } = require(''../../../utils'');'#10'const { '
  +'WebGLKernelArray } = require(''./array'');'#10#10'const sameError = `Source'
  +' and destination textures are the same.  Use immutable = true and manually '
  +'cleanup kernel output texture memory with texture.delete()`;'#10#10'class W'
  +'ebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {'#10
  +'  constructor(value, settings) {'#10'    super(value, settings);'#10'    co'
  +'nst [width, height] = value.size;'#10'    this.checkSize(width, height);'#10
  +'    this.dimensions = value.dimensions;'#10'    this.textureSize = value.si'
  +'ze;'#10'    this.uploadValue = value.texture;'#10'    this.forceUploadEachR'
  +'un = true;'#10'  }'#10#10'  setup() {'#10'    this.setupTexture();'#10'  }'
  +#10#10'  getStringValueHandler() {'#10'    return `const uploadValue_${this.'
  +'name} = ${this.varName}.texture;\n`;'#10'  }'#10#10'  getSource() {'#10'   '
  +' return utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10
  +'      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureS'
  +'ize[1]})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions['
  +'0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10
  +#10'  updateValue(inputTexture) {'#10'    if (inputTexture.constructor !== t'
  +'his.initialValueConstructor) {'#10'      this.onUpdateValueMismatch(inputTe'
  +'xture.constructor);'#10'      return;'#10'    }'#10'    if (this.checkConte'
  +'xt && inputTexture.context !== this.context) {'#10'      throw new Error(`V'
  +'alue ${this.name} (${this.type}) must be from same context`);'#10'    }'#10
  +#10'    const { kernel, context: gl } = this;'#10'    if (kernel.pipeline) {'
  +#10'      if (kernel.immutable) {'#10'        kernel.updateTextureArgumentRe'
  +'fs(this, inputTexture);'#10'      } else {'#10'        if (kernel.texture.t'
  +'exture === inputTexture.texture) {'#10'          throw new Error(sameError)'
  +';'#10'        } else if (kernel.mappedTextures) {'#10'          const { map'
  +'pedTextures } = kernel;'#10'          for (let i = 0; i < mappedTextures.le'
  +'ngth; i++) {'#10'            if (mappedTextures[i].texture === inputTexture'
  +'.texture) {'#10'              throw new Error(sameError);'#10'            }'
  +#10'          }'#10'        }'#10'      }'#10'    }'#10#10'    gl.activeText'
  +'ure(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.uploadV'
  +'alue = inputTexture.texture);'#10'    this.kernel.setUniform1i(this.id, thi'
  +'s.index);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueMem'
  +'oryOptimizedNumberTexture,'#10'  sameError'#10'};'#10'},{"../../../utils":1'
  +'14,"./array":40}],59:[function(require,module,exports){'#10'const { utils }'
  +' = require(''../../../utils'');'#10'const { WebGLKernelArray } = require('''
  +'./array'');'#10'const { sameError } = require(''./memory-optimized-number-t'
  +'exture'');'#10#10'class WebGLKernelValueNumberTexture extends WebGLKernelAr'
  +'ray {'#10'  constructor(value, settings) {'#10'    super(value, settings);'
  +#10'    const [width, height] = value.size;'#10'    this.checkSize(width, he'
  +'ight);'#10'    const { size: textureSize, dimensions } = value;'#10'    thi'
  +'s.bitRatio = this.getBitRatio(value);'#10'    this.dimensions = dimensions;'
  +#10'    this.textureSize = textureSize;'#10'    this.uploadValue = value.tex'
  +'ture;'#10'    this.forceUploadEachRun = true;'#10'  }'#10#10'  setup() {'#10
  +'    this.setupTexture();'#10'  }'#10#10'  getStringValueHandler() {'#10'   '
  +' return `const uploadValue_${this.name} = ${this.varName}.texture;\n`;'#10
  +'  }'#10#10'  getSource() {'#10'    return utils.linesToString(['#10'      `'
  +'uniform sampler2D ${this.id}`,'#10'      `ivec2 ${this.sizeId} = ivec2(${th'
  +'is.textureSize[0]}, ${this.textureSize[1]})`,'#10'      `ivec3 ${this.dimen'
  +'sionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimen'
  +'sions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateValue(inputTexture) {'#10' '
  ,'   if (inputTexture.constructor !== this.initialValueConstructor) {'#10'   '
  +'   this.onUpdateValueMismatch(inputTexture.constructor);'#10'      return;'
  +#10'    }'#10'    if (this.checkContext && inputTexture.context !== this.con'
  +'text) {'#10'      throw new Error(`Value ${this.name} (${this.type}) must b'
  +'e from same context`);'#10'    }'#10#10'    const { kernel, context: gl } ='
  +' this;'#10'    if (kernel.pipeline) {'#10'      if (kernel.immutable) {'#10
  +'        kernel.updateTextureArgumentRefs(this, inputTexture);'#10'      } e'
  +'lse {'#10'        if (kernel.texture.texture === inputTexture.texture) {'#10
  +'          throw new Error(sameError);'#10'        } else if (kernel.mappedT'
  +'extures) {'#10'          const { mappedTextures } = kernel;'#10'          f'
  +'or (let i = 0; i < mappedTextures.length; i++) {'#10'            if (mapped'
  +'Textures[i].texture === inputTexture.texture) {'#10'              throw new'
  +' Error(sameError);'#10'            }'#10'          }'#10'        }'#10'    '
  +'  }'#10'    }'#10#10'    gl.activeTexture(this.contextHandle);'#10'    gl.b'
  +'indTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);'#10'   '
  +' this.kernel.setUniform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module'
  +'.exports = {'#10'  WebGLKernelValueNumberTexture'#10'};'#10'},{"../../../ut'
  +'ils":114,"./array":40,"./memory-optimized-number-texture":58}],60:[function'
  +'(require,module,exports){'#10'const { utils } = require(''../../../utils'')'
  +';'#10'const { WebGLKernelArray } = require(''./array'');'#10#10'class WebGL'
  +'KernelValueSingleArray extends WebGLKernelArray {'#10'  constructor(value, '
  +'settings) {'#10'    super(value, settings);'#10'    this.bitRatio = 4;'#10
  +'    this.dimensions = utils.getDimensions(value, true);'#10'    this.textur'
  +'eSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitR'
  +'atio);'#10'    this.uploadArrayLength = this.textureSize[0] * this.textureS'
  +'ize[1] * this.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.te'
  +'xtureSize[1]);'#10'    this.uploadValue = new Float32Array(this.uploadArray'
  +'Length);'#10'  }'#10#10'  getStringValueHandler() {'#10'    return utils.li'
  +'nesToString(['#10'      `const uploadValue_${this.name} = new Float32Array('
  +'${this.uploadArrayLength})`,'#10'      `flattenTo(${this.varName}, uploadVa'
  +'lue_${this.name})`,'#10'    ]);'#10'  }'#10#10'  getSource() {'#10'    retu'
  +'rn utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'    '
  +'  `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize['
  +'1]})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]},'
  +' ${this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10
  +'  updateValue(value) {'#10'    if (value.constructor !== this.initialValueC'
  +'onstructor) {'#10'      this.onUpdateValueMismatch(value.constructor);'#10
  +'      return;'#10'    }'#10'    const { context: gl } = this;'#10'    utils'
  +'.flattenTo(value, this.uploadValue);'#10'    gl.activeTexture(this.contextH'
  +'andle);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pix'
  +'elStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2'
  +'D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLO'
  +'AT, this.uploadValue);'#10'    this.kernel.setUniform1i(this.id, this.index'
  +');'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArra'
  +'y'#10'};'#10'},{"../../../utils":114,"./array":40}],61:[function(require,mo'
  +'dule,exports){'#10'const { utils } = require(''../../../utils'');'#10'const'
  +' { WebGLKernelArray } = require(''./array'');'#10#10'class WebGLKernelValue'
  +'SingleArray1DI extends WebGLKernelArray {'#10'  constructor(value, settings'
  +') {'#10'    super(value, settings);'#10'    this.bitRatio = 4;'#10'    this'
  +'.setShape(value);'#10'  }'#10#10'  setShape(value) {'#10'    const valueDim'
  +'ensions = utils.getDimensions(value, true);'#10'    this.textureSize = util'
  +'s.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);'#10' '
  +'   this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);'#10'    th'
  +'is.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bit'
  +'Ratio;'#10'    this.checkSize(this.textureSize[0], this.textureSize[1]);'#10
  +'    this.uploadValue = new Float32Array(this.uploadArrayLength);'#10'  }'#10
  +#10'  getStringValueHandler() {'#10'    return utils.linesToString(['#10'   '
  +'   `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLen'
  +'gth})`,'#10'      `flattenTo(${this.varName}, uploadValue_${this.name})`,'
  +#10'    ]);'#10'  }'#10#10'  getSource() {'#10'    return utils.linesToStrin'
  +'g(['#10'      `uniform sampler2D ${this.id}`,'#10'      `ivec2 ${this.sizeI'
  +'d} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,'#10'      `ive'
  +'c3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]'
  +'}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateValue(value)'
  ,' {'#10'    if (value.constructor !== this.initialValueConstructor) {'#10'  '
  +'    this.onUpdateValueMismatch(value.constructor);'#10'      return;'#10'  '
  +'  }'#10'    const { context: gl } = this;'#10'    utils.flatten2dArrayTo(va'
  +'lue, this.uploadValue);'#10'    gl.activeTexture(this.contextHandle);'#10' '
  +'   gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei(gl.U'
  +'NPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA'
  +', this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uplo'
  +'adValue);'#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  }'#10
  +'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArray1DI'#10'};'#10
  +'},{"../../../utils":114,"./array":40}],62:[function(require,module,exports)'
  +'{'#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKerne'
  +'lValue } = require(''./index'');'#10#10'class WebGLKernelValueSingleArray2 '
  +'extends WebGLKernelValue {'#10'  constructor(value, settings) {'#10'    sup'
  +'er(value, settings);'#10'    this.uploadValue = value;'#10'  }'#10'  getSou'
  +'rce(value) {'#10'    if (this.origin === ''constants'') {'#10'      return '
  +'`const vec2 ${this.id} = vec2(${value[0]},${value[1]});\n`;'#10'    }'#10' '
  +'   return `uniform vec2 ${this.id};\n`;'#10'  }'#10#10'  getStringValueHand'
  +'ler() {'#10'    if (this.origin === ''constants'') return '''';'#10'    ret'
  +'urn `const uploadValue_${this.name} = ${this.varName};\n`;'#10'  }'#10#10' '
  +' updateValue(value) {'#10'    if (this.origin === ''constants'') return;'#10
  +'    this.kernel.setUniform2fv(this.id, this.uploadValue = value);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArray2'#10'};'#10
  +'},{"../../../utils":114,"./index":56}],63:[function(require,module,exports)'
  +'{'#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKerne'
  +'lArray } = require(''./array'');'#10#10'class WebGLKernelValueSingleArray2D'
  +'I extends WebGLKernelArray {'#10'  constructor(value, settings) {'#10'    s'
  +'uper(value, settings);'#10'    this.bitRatio = 4;'#10'    this.setShape(val'
  +'ue);'#10'  }'#10#10'  setShape(value) {'#10'    const valueDimensions = uti'
  +'ls.getDimensions(value, true);'#10'    this.textureSize = utils.getMemoryOp'
  +'timizedFloatTextureSize(valueDimensions, this.bitRatio);'#10'    this.dimen'
  +'sions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);'#10'  '
  +'  this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this'
  +'.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.textureSize[1])'
  +';'#10'    this.uploadValue = new Float32Array(this.uploadArrayLength);'#10
  +'  }'#10#10'  getStringValueHandler() {'#10'    return utils.linesToString(['
  +#10'      `const uploadValue_${this.name} = new Float32Array(${this.uploadAr'
  +'rayLength})`,'#10'      `flattenTo(${this.varName}, uploadValue_${this.name'
  +'})`,'#10'    ]);'#10'  }'#10#10'  getSource() {'#10'    return utils.linesT'
  +'oString(['#10'      `uniform sampler2D ${this.id}`,'#10'      `ivec2 ${this'
  +'.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,'#10'    '
  +'  `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensi'
  +'ons[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateValue('
  +'value) {'#10'    if (value.constructor !== this.initialValueConstructor) {'
  +#10'      this.onUpdateValueMismatch(value.constructor);'#10'      return;'
  +#10'    }'#10'    const { context: gl } = this;'#10'    utils.flatten3dArray'
  +'To(value, this.uploadValue);'#10'    gl.activeTexture(this.contextHandle);'
  +#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei('
  +'gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.'
  +'RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.'
  +'uploadValue);'#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  '
  +'}'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArray2DI'#10
  +'};'#10'},{"../../../utils":114,"./array":40}],64:[function(require,module,e'
  +'xports){'#10'const { utils } = require(''../../../utils'');'#10'const { Web'
  +'GLKernelValue } = require(''./index'');'#10#10'class WebGLKernelValueSingle'
  +'Array3 extends WebGLKernelValue {'#10'  constructor(value, settings) {'#10
  +'    super(value, settings);'#10'    this.uploadValue = value;'#10'  }'#10' '
  +' getSource(value) {'#10'    if (this.origin === ''constants'') {'#10'      '
  +'return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\'
  +'n`;'#10'    }'#10'    return `uniform vec3 ${this.id};\n`;'#10'  }'#10#10' '
  +' getStringValueHandler() {'#10'    if (this.origin === ''constants'') retur'
  +'n '''';'#10'    return `const uploadValue_${this.name} = ${this.varName};\n'
  +'`;'#10'  }'#10#10'  updateValue(value) {'#10'    if (this.origin === ''cons'
  +'tants'') return;'#10'    this.kernel.setUniform3fv(this.id, this.uploadValu'
  +'e = value);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernelValueS'
  ,'ingleArray3'#10'};'#10'},{"../../../utils":114,"./index":56}],65:[function('
  +'require,module,exports){'#10'const { utils } = require(''../../../utils'');'
  +#10'const { WebGLKernelArray } = require(''./array'');'#10#10'class WebGLKer'
  +'nelValueSingleArray3DI extends WebGLKernelArray {'#10'  constructor(value, '
  +'settings) {'#10'    super(value, settings);'#10'    this.bitRatio = 4;'#10
  +'    this.setShape(value);'#10'  }'#10#10'  setShape(value) {'#10'    const '
  +'valueDimensions = utils.getDimensions(value, true);'#10'    this.textureSiz'
  +'e = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio'
  +');'#10'    this.dimensions = new Int32Array([valueDimensions[1], valueDimen'
  +'sions[2], valueDimensions[3]]);'#10'    this.uploadArrayLength = this.textu'
  +'reSize[0] * this.textureSize[1] * this.bitRatio;'#10'    this.checkSize(thi'
  +'s.textureSize[0], this.textureSize[1]);'#10'    this.uploadValue = new Floa'
  +'t32Array(this.uploadArrayLength);'#10'  }'#10#10'  getStringValueHandler() '
  +'{'#10'    return utils.linesToString(['#10'      `const uploadValue_${this.'
  +'name} = new Float32Array(${this.uploadArrayLength})`,'#10'      `flattenTo('
  +'${this.varName}, uploadValue_${this.name})`,'#10'    ]);'#10'  }'#10#10'  g'
  +'etSource() {'#10'    return utils.linesToString(['#10'      `uniform sample'
  +'r2D ${this.id}`,'#10'      `ivec2 ${this.sizeId} = ivec2(${this.textureSize'
  +'[0]}, ${this.textureSize[1]})`,'#10'      `ivec3 ${this.dimensionsId} = ive'
  +'c3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,'
  +#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    if (value.construc'
  +'tor !== this.initialValueConstructor) {'#10'      this.onUpdateValueMismatc'
  +'h(value.constructor);'#10'      return;'#10'    }'#10'    const { context: '
  +'gl } = this;'#10'    utils.flatten4dArrayTo(value, this.uploadValue);'#10' '
  +'   gl.activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_'
  +'2D, this.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'
  +#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.t'
  +'extureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);'#10'    this.kernel'
  +'.setUniform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'
  +#10'  WebGLKernelValueSingleArray3DI'#10'};'#10'},{"../../../utils":114,"./a'
  +'rray":40}],66:[function(require,module,exports){'#10'const { utils } = requ'
  +'ire(''../../../utils'');'#10'const { WebGLKernelValue } = require(''./index'
  +''');'#10#10'class WebGLKernelValueSingleArray4 extends WebGLKernelValue {'
  +#10'  constructor(value, settings) {'#10'    super(value, settings);'#10'   '
  +' this.uploadValue = value;'#10'  }'#10'  getSource(value) {'#10'    if (thi'
  +'s.origin === ''constants'') {'#10'      return `const vec4 ${this.id} = vec'
  +'4(${value[0]},${value[1]},${value[2]},${value[3]});\n`;'#10'    }'#10'    r'
  +'eturn `uniform vec4 ${this.id};\n`;'#10'  }'#10#10'  getStringValueHandler('
  +') {'#10'    if (this.origin === ''constants'') return '''';'#10'    return '
  +'`const uploadValue_${this.name} = ${this.varName};\n`;'#10'  }'#10#10'  upd'
  +'ateValue(value) {'#10'    if (this.origin === ''constants'') return;'#10'  '
  +'  this.kernel.setUniform4fv(this.id, this.uploadValue = value);'#10'  }'#10
  +'}'#10#10'module.exports = {'#10'  WebGLKernelValueSingleArray4'#10'};'#10'}'
  +',{"../../../utils":114,"./index":56}],67:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelAr'
  +'ray } = require(''./array'');'#10#10'class WebGLKernelValueSingleInput exte'
  +'nds WebGLKernelArray {'#10'  constructor(value, settings) {'#10'    super(v'
  +'alue, settings);'#10'    this.bitRatio = 4;'#10'    let [w, h, d] = value.s'
  +'ize;'#10'    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10
  +'    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimens'
  +'ions, this.bitRatio);'#10'    this.uploadArrayLength = this.textureSize[0] '
  +'* this.textureSize[1] * this.bitRatio;'#10'    this.checkSize(this.textureS'
  +'ize[0], this.textureSize[1]);'#10'    this.uploadValue = new Float32Array(t'
  +'his.uploadArrayLength);'#10'  }'#10#10'  getStringValueHandler() {'#10'    '
  +'return utils.linesToString(['#10'      `const uploadValue_${this.name} = ne'
  +'w Float32Array(${this.uploadArrayLength})`,'#10'      `flattenTo(${this.var'
  +'Name}.value, uploadValue_${this.name})`,'#10'    ]);'#10'  }'#10#10'  getSo'
  +'urce() {'#10'    return utils.linesToString(['#10'      `uniform sampler2D '
  +'${this.id}`,'#10'      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}'
  +', ${this.textureSize[1]})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3($'
  +'{this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,'#10' '
  +'   ]);'#10'  }'#10#10'  updateValue(input) {'#10'    if (input.constructor '
  +'!== this.initialValueConstructor) {'#10'      this.onUpdateValueMismatch(in'
  +'put.constructor);'#10'      return;'#10'    }'#10'    const { context: gl }'
  ,' = this;'#10'    utils.flattenTo(input.value, this.uploadValue);'#10'    gl'
  +'.activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, t'
  +'his.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'  '
  +'  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textur'
  +'eSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);'#10'    this.kernel.setU'
  +'niform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGLKernelValueSingleInput'#10'};'#10'},{"../../../utils":114,"./array":'
  +'40}],68:[function(require,module,exports){'#10'const { utils } = require('''
  +'../../../utils'');'#10'const { WebGLKernelArray } = require(''./array'');'
  +#10#10'class WebGLKernelValueUnsignedArray extends WebGLKernelArray {'#10'  '
  +'constructor(value, settings) {'#10'    super(value, settings);'#10'    this'
  +'.bitRatio = this.getBitRatio(value);'#10'    this.dimensions = utils.getDim'
  +'ensions(value, true);'#10'    this.textureSize = utils.getMemoryOptimizedPa'
  +'ckedTextureSize(this.dimensions, this.bitRatio);'#10'    this.uploadArrayLe'
  +'ngth = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);'#10
  +'    this.checkSize(this.textureSize[0], this.textureSize[1]);'#10'    this.'
  +'TranserArrayType = this.getTransferArrayType(value);'#10'    this.preUpload'
  +'Value = new this.TranserArrayType(this.uploadArrayLength);'#10'    this.upl'
  +'oadValue = new Uint8Array(this.preUploadValue.buffer);'#10'  }'#10#10'  get'
  +'StringValueHandler() {'#10'    return utils.linesToString(['#10'      `cons'
  +'t preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.up'
  +'loadArrayLength})`,'#10'      `const uploadValue_${this.name} = new Uint8Ar'
  +'ray(preUploadValue_${this.name}.buffer)`,'#10'      `flattenTo(${this.varNa'
  +'me}, preUploadValue_${this.name})`,'#10'    ]);'#10'  }'#10#10'  getSource('
  +') {'#10'    return utils.linesToString(['#10'      `uniform sampler2D ${thi'
  +'s.id}`,'#10'      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${t'
  +'his.textureSize[1]})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this'
  +'.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ])'
  +';'#10'  }'#10#10'  updateValue(value) {'#10'    if (value.constructor !== t'
  +'his.initialValueConstructor) {'#10'      this.onUpdateValueMismatch(value.c'
  +'onstructor);'#10'      return;'#10'    }'#10'    const { context: gl } = th'
  +'is;'#10'    utils.flattenTo(value, this.preUploadValue);'#10'    gl.activeT'
  +'exture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.text'
  +'ure);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.tex'
  +'Image2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1]'
  +', 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);'#10'    this.kernel.setU'
  +'niform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGLKernelValueUnsignedArray'#10'};'#10'},{"../../../utils":114,"./array'
  +'":40}],69:[function(require,module,exports){'#10'const { utils } = require('
  +'''../../../utils'');'#10'const { WebGLKernelArray } = require(''./array'');'
  +#10#10'class WebGLKernelValueUnsignedInput extends WebGLKernelArray {'#10'  '
  +'constructor(value, settings) {'#10'    super(value, settings);'#10'    this'
  +'.bitRatio = this.getBitRatio(value);'#10'    const [w, h, d] = value.size;'
  +#10'    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10'    '
  +'this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimension'
  +'s, this.bitRatio);'#10'    this.uploadArrayLength = this.textureSize[0] * t'
  +'his.textureSize[1] * (4 / this.bitRatio);'#10'    this.checkSize(this.textu'
  +'reSize[0], this.textureSize[1]);'#10'    this.TranserArrayType = this.getTr'
  +'ansferArrayType(value.value);'#10'    this.preUploadValue = new this.Transe'
  +'rArrayType(this.uploadArrayLength);'#10'    this.uploadValue = new Uint8Arr'
  +'ay(this.preUploadValue.buffer);'#10'  }'#10#10'  getStringValueHandler() {'
  +#10'    return utils.linesToString(['#10'      `const preUploadValue_${this.'
  +'name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,'#10
  +'      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${thi'
  +'s.name}.buffer)`,'#10'      `flattenTo(${this.varName}.value, preUploadValu'
  +'e_${this.name})`,'#10'    ]);'#10'  }'#10#10'  getSource() {'#10'    return'
  +' utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'      '
  +'`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]'
  +'})`,'#10'      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, $'
  +'{this.dimensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10' '
  +' updateValue(input) {'#10'    if (input.constructor !== this.initialValueCo'
  +'nstructor) {'#10'      this.onUpdateValueMismatch(value.constructor);'#10' '
  +'     return;'#10'    }'#10'    const { context: gl } = this;'#10'    utils.'
  +'flattenTo(input.value, this.preUploadValue);'#10'    gl.activeTexture(this.'
  ,'contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'  '
  +'  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.T'
  +'EXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA'
  +', gl.UNSIGNED_BYTE, this.uploadValue);'#10'    this.kernel.setUniform1i(thi'
  +'s.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKerne'
  +'lValueUnsignedInput'#10'};'#10'},{"../../../utils":114,"./array":40}],70:[f'
  +'unction(require,module,exports){'#10'const { GLKernel } = require(''../gl/k'
  +'ernel'');'#10'const { FunctionBuilder } = require(''../function-builder'');'
  +#10'const { WebGLFunctionNode } = require(''./function-node'');'#10'const { '
  +'utils } = require(''../../utils'');'#10'const mrud = require(''../../plugin'
  +'s/math-random-uniformly-distributed'');'#10'const { fragmentShader } = requ'
  +'ire(''./fragment-shader'');'#10'const { vertexShader } = require(''./vertex'
  +'-shader'');'#10'const { glKernelString } = require(''../gl/kernel-string'')'
  +';'#10'const { lookupKernelValueType } = require(''./kernel-value-maps'');'
  +#10#10'let isSupported = null;'#10'let testCanvas = null;'#10'let testContex'
  +'t = null;'#10'let testExtensions = null;'#10'let features = null;'#10#10'co'
  +'nst plugins = [mrud];'#10'const canvases = [];'#10'const maxTexSizes = {};'
  +#10#10#10'class WebGLKernel extends GLKernel {'#10'  static get isSupported('
  +') {'#10'    if (isSupported !== null) {'#10'      return isSupported;'#10' '
  +'   }'#10'    this.setupFeatureChecks();'#10'    isSupported = this.isContex'
  +'tMatch(testContext);'#10'    return isSupported;'#10'  }'#10#10'  static se'
  +'tupFeatureChecks() {'#10'    if (typeof document !== ''undefined'') {'#10' '
  +'     testCanvas = document.createElement(''canvas'');'#10'    } else if (ty'
  +'peof OffscreenCanvas !== ''undefined'') {'#10'      testCanvas = new Offscr'
  +'eenCanvas(0, 0);'#10'    }'#10'    if (!testCanvas) return;'#10'    testCon'
  +'text = testCanvas.getContext(''webgl'') || testCanvas.getContext(''experime'
  +'ntal-webgl'');'#10'    if (!testContext || !testContext.getExtension) retur'
  +'n;'#10'    testExtensions = {'#10'      OES_texture_float: testContext.getE'
  +'xtension(''OES_texture_float''),'#10'      OES_texture_float_linear: testCo'
  +'ntext.getExtension(''OES_texture_float_linear''),'#10'      OES_element_ind'
  +'ex_uint: testContext.getExtension(''OES_element_index_uint''),'#10'      WE'
  +'BGL_draw_buffers: testContext.getExtension(''WEBGL_draw_buffers''),'#10'   '
  +' };'#10'    features = this.getFeatures();'#10'  }'#10#10'  static isContex'
  +'tMatch(context) {'#10'    if (typeof WebGLRenderingContext !== ''undefined'
  +''') {'#10'      return context instanceof WebGLRenderingContext;'#10'    }'
  +#10'    return false;'#10'  }'#10#10'  static getIsTextureFloat() {'#10'    '
  +'return Boolean(testExtensions.OES_texture_float);'#10'  }'#10#10'  static g'
  +'etIsDrawBuffers() {'#10'    return Boolean(testExtensions.WEBGL_draw_buffer'
  +'s);'#10'  }'#10#10'  static getChannelCount() {'#10'    return testExtensio'
  +'ns.WEBGL_draw_buffers ?'#10'      testContext.getParameter(testExtensions.W'
  +'EBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :'#10'      1;'#10'  }'#10#10'  s'
  +'tatic getMaxTextureSize() {'#10'    return testContext.getParameter(testCon'
  +'text.MAX_TEXTURE_SIZE);'#10'  }'#10#10'  static lookupKernelValueType(type,'
  +' dynamic, precision, value) {'#10'    return lookupKernelValueType(type, dy'
  +'namic, precision, value);'#10'  }'#10#10'  static get testCanvas() {'#10'  '
  +'  return testCanvas;'#10'  }'#10#10'  static get testContext() {'#10'    re'
  +'turn testContext;'#10'  }'#10#10'  static get features() {'#10'    return f'
  +'eatures;'#10'  }'#10#10'  static get fragmentShader() {'#10'    return frag'
  +'mentShader;'#10'  }'#10#10'  static get vertexShader() {'#10'    return ver'
  +'texShader;'#10'  }'#10#10'  constructor(source, settings) {'#10'    super(s'
  +'ource, settings);'#10'    this.program = null;'#10'    this.pipeline = sett'
  +'ings.pipeline;'#10'    this.endianness = utils.systemEndianness();'#10'    '
  +'this.extensions = {};'#10'    this.argumentTextureCount = 0;'#10'    this.c'
  +'onstantTextureCount = 0;'#10'    this.fragShader = null;'#10'    this.vertS'
  +'hader = null;'#10'    this.drawBuffersMap = null;'#10#10'    this.maxTexSiz'
  +'e = null;'#10'    this.onRequestSwitchKernel = null;'#10'    this.removeIst'
  +'anbulCoverage = true;'#10#10'    this.texture = null;'#10'    this.mappedTe'
  +'xtures = null;'#10'    this.mergeSettings(source.settings || settings);'#10
  +#10'    this.threadDim = null;'#10'    this.framebuffer = null;'#10'    this'
  +'.buffer = null;'#10#10'    this.textureCache = [];'#10'    this.programUnif'
  +'ormLocationCache = {};'#10'    this.uniform1fCache = {};'#10'    this.unifo'
  +'rm1iCache = {};'#10'    this.uniform2fCache = {};'#10'    this.uniform2fvCa'
  +'che = {};'#10'    this.uniform2ivCache = {};'#10'    this.uniform3fvCache ='
  +' {};'#10'    this.uniform3ivCache = {};'#10'    this.uniform4fvCache = {};'
  ,#10'    this.uniform4ivCache = {};'#10'  }'#10#10'  initCanvas() {'#10'    i'
  +'f (typeof document !== ''undefined'') {'#10'      const canvas = document.c'
  +'reateElement(''canvas'');'#10'      canvas.width = 2;'#10'      canvas.heig'
  +'ht = 2;'#10'      return canvas;'#10'    } else if (typeof OffscreenCanvas '
  +'!== ''undefined'') {'#10'      return new OffscreenCanvas(0, 0);'#10'    }'
  +#10'  }'#10#10'  initContext() {'#10'    const settings = {'#10'      alpha:'
  +' false,'#10'      depth: false,'#10'      antialias: false'#10'    };'#10' '
  +'   return this.canvas.getContext(''webgl'', settings) || this.canvas.getCon'
  +'text(''experimental-webgl'', settings);'#10'  }'#10#10'  initPlugins(settin'
  +'gs) {'#10'    const pluginsToUse = [];'#10'    const { source } = this;'#10
  +'    if (typeof source === ''string'') {'#10'      for (let i = 0; i < plugi'
  +'ns.length; i++) {'#10'        const plugin = plugins[i];'#10'        if (so'
  +'urce.match(plugin.functionMatch)) {'#10'          pluginsToUse.push(plugin)'
  +';'#10'        }'#10'      }'#10'    } else if (typeof source === ''object'''
  +') {'#10'      if (settings.pluginNames) { '#10'        for (let i = 0; i < '
  +'plugins.length; i++) {'#10'          const plugin = plugins[i];'#10'       '
  +'   const usePlugin = settings.pluginNames.some(pluginName => pluginName ==='
  +' plugin.name);'#10'          if (usePlugin) {'#10'            pluginsToUse.'
  +'push(plugin);'#10'          }'#10'        }'#10'      }'#10'    }'#10'    r'
  +'eturn pluginsToUse;'#10'  }'#10#10'  initExtensions() {'#10'    this.extens'
  +'ions = {'#10'      OES_texture_float: this.context.getExtension(''OES_textu'
  +'re_float''),'#10'      OES_texture_float_linear: this.context.getExtension('
  +'''OES_texture_float_linear''),'#10'      OES_element_index_uint: this.conte'
  +'xt.getExtension(''OES_element_index_uint''),'#10'      WEBGL_draw_buffers: '
  +'this.context.getExtension(''WEBGL_draw_buffers''),'#10'      WEBGL_color_bu'
  +'ffer_float: this.context.getExtension(''WEBGL_color_buffer_float''),'#10'  '
  +'  };'#10'  }'#10#10'  validateSettings(args) {'#10'    if (!this.validate) '
  +'{'#10'      this.texSize = utils.getKernelTextureSize({'#10'        optimiz'
  +'eFloatMemory: this.optimizeFloatMemory,'#10'        precision: this.precisi'
  +'on,'#10'      }, this.output);'#10'      return;'#10'    }'#10#10'    const'
  +' { features } = this.constructor;'#10#10'    if (this.optimizeFloatMemory ='
  +'== true && !features.isTextureFloat) {'#10'      throw new Error(''Float te'
  +'xtures are not supported'');'#10'    } else if (this.precision === ''single'
  +''' && !features.isFloatRead) {'#10'      throw new Error(''Single precision'
  +' not supported'');'#10'    } else if (!this.graphical && this.precision ==='
  +' null && features.isTextureFloat) {'#10'      this.precision = features.isF'
  +'loatRead ? ''single'' : ''unsigned'';'#10'    }'#10#10'    if (this.subKern'
  +'els && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {'
  +#10'      throw new Error(''could not instantiate draw buffers extension'');'
  +#10'    }'#10#10'    if (this.fixIntegerDivisionAccuracy === null) {'#10'   '
  +'   this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;'
  +#10'    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivi'
  +'sionAccurate) {'#10'      this.fixIntegerDivisionAccuracy = false;'#10'    '
  +'}'#10#10'    this.checkOutput();'#10#10'    if (!this.output || this.output'
  +'.length === 0) {'#10'      if (args.length !== 1) {'#10'        throw new E'
  +'rror(''Auto output only supported for kernels with only one input'');'#10' '
  +'     }'#10#10'      const argType = utils.getVariableType(args[0], this.str'
  +'ictIntegers);'#10'      switch (argType) {'#10'        case ''Array'':'#10
  +'          this.output = utils.getDimensions(argType);'#10'          break;'
  +#10'        case ''NumberTexture'':'#10'        case ''MemoryOptimizedNumber'
  +'Texture'':'#10'        case ''ArrayTexture(1)'':'#10'        case ''ArrayTe'
  +'xture(2)'':'#10'        case ''ArrayTexture(3)'':'#10'        case ''ArrayT'
  +'exture(4)'':'#10'          this.output = args[0].output;'#10'          brea'
  +'k;'#10'        default:'#10'          throw new Error(''Auto output not sup'
  +'ported for input type: '' + argType);'#10'      }'#10'    }'#10#10'    if ('
  +'this.graphical) {'#10'      if (this.output.length !== 2) {'#10'        thr'
  +'ow new Error(''Output must have 2 dimensions on graphical mode'');'#10'    '
  +'  }'#10#10'      if (this.precision === ''precision'') {'#10'        this.p'
  +'recision = ''unsigned'';'#10'        console.warn(''Cannot use graphical mo'
  +'de and single precision at the same time'');'#10'      }'#10#10'      this.'
  +'texSize = utils.clone(this.output);'#10'      return;'#10'    } else if (th'
  +'is.precision === null && features.isTextureFloat) {'#10'      this.precisio'
  +'n = ''single'';'#10'    }'#10#10'    this.texSize = utils.getKernelTextureS'
  +'ize({'#10'      optimizeFloatMemory: this.optimizeFloatMemory,'#10'      pr'
  ,'ecision: this.precision,'#10'    }, this.output);'#10#10'    this.checkText'
  +'ureSize();'#10'  }'#10#10'  updateMaxTexSize() {'#10'    const { texSize, c'
  +'anvas } = this;'#10'    if (this.maxTexSize === null) {'#10'      let canva'
  +'sIndex = canvases.indexOf(canvas);'#10'      if (canvasIndex === -1) {'#10
  +'        canvasIndex = canvases.length;'#10'        canvases.push(canvas);'
  +#10'        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];'#10'      }'
  +#10'      this.maxTexSize = maxTexSizes[canvasIndex];'#10'    }'#10'    if ('
  +'this.maxTexSize[0] < texSize[0]) {'#10'      this.maxTexSize[0] = texSize[0'
  +'];'#10'    }'#10'    if (this.maxTexSize[1] < texSize[1]) {'#10'      this.'
  +'maxTexSize[1] = texSize[1];'#10'    }'#10'  }'#10#10'  setupArguments(args)'
  +' {'#10'    this.kernelArguments = [];'#10'    this.argumentTextureCount = 0'
  +';'#10'    const needsArgumentTypes = this.argumentTypes === null;'#10'    i'
  +'f (needsArgumentTypes) {'#10'      this.argumentTypes = [];'#10'    }'#10' '
  +'   this.argumentSizes = [];'#10'    this.argumentBitRatios = [];'#10#10'   '
  +' if (args.length < this.argumentNames.length) {'#10'      throw new Error('
  +'''not enough arguments for kernel'');'#10'    } else if (args.length > this'
  +'.argumentNames.length) {'#10'      throw new Error(''too many arguments for'
  +' kernel'');'#10'    }'#10#10'    const { context: gl } = this;'#10'    let '
  +'textureIndexes = 0;'#10#10'    const onRequestTexture = () => {'#10'      r'
  +'eturn this.createTexture();'#10'    };'#10'    const onRequestIndex = () =>'
  +' {'#10'      return textureIndexes++;'#10'    };'#10'    const onUpdateValu'
  +'eMismatch = (constructor) => {'#10'      this.switchKernels({'#10'        t'
  +'ype: ''argumentMismatch'','#10'        needed: constructor'#10'      });'#10
  +'    };'#10'    const onRequestContextHandle = () => {'#10'      return gl.T'
  +'EXTURE0 + this.constantTextureCount + this.argumentTextureCount++;'#10'    '
  +'};'#10#10'    for (let index = 0; index < args.length; index++) {'#10'     '
  +' const value = args[index];'#10'      const name = this.argumentNames[index'
  +'];'#10'      let type;'#10'      if (needsArgumentTypes) {'#10'        type'
  +' = utils.getVariableType(value, this.strictIntegers);'#10'        this.argu'
  +'mentTypes.push(type);'#10'      } else {'#10'        type = this.argumentTy'
  +'pes[index];'#10'      }'#10'      const KernelValue = this.constructor.look'
  +'upKernelValueType(type, this.dynamicArguments ? ''dynamic'' : ''static'', t'
  +'his.precision, args[index]);'#10'      if (KernelValue === null) {'#10'    '
  +'    return this.requestFallback(args);'#10'      }'#10'      const kernelAr'
  +'gument = new KernelValue(value, {'#10'        name,'#10'        type,'#10' '
  +'       tactic: this.tactic,'#10'        origin: ''user'','#10'        conte'
  +'xt: gl,'#10'        checkContext: this.checkContext,'#10'        kernel: th'
  +'is,'#10'        strictIntegers: this.strictIntegers,'#10'        onRequestT'
  +'exture,'#10'        onRequestIndex,'#10'        onUpdateValueMismatch,'#10
  +'        onRequestContextHandle,'#10'      });'#10'      this.kernelArgument'
  +'s.push(kernelArgument);'#10'      kernelArgument.setup();'#10'      this.ar'
  +'gumentSizes.push(kernelArgument.textureSize);'#10'      this.argumentBitRat'
  +'ios[index] = kernelArgument.bitRatio;'#10'    }'#10'  }'#10#10'  createText'
  +'ure() {'#10'    const texture = this.context.createTexture();'#10'    this.'
  +'textureCache.push(texture);'#10'    return texture;'#10'  }'#10#10'  setupC'
  +'onstants(args) {'#10'    const { context: gl } = this;'#10'    this.kernelC'
  +'onstants = [];'#10'    this.forceUploadKernelConstants = [];'#10'    let ne'
  +'edsConstantTypes = this.constantTypes === null;'#10'    if (needsConstantTy'
  +'pes) {'#10'      this.constantTypes = {};'#10'    }'#10'    this.constantBi'
  +'tRatios = {};'#10'    let textureIndexes = 0;'#10'    for (const name in th'
  +'is.constants) {'#10'      const value = this.constants[name];'#10'      let'
  +' type;'#10'      if (needsConstantTypes) {'#10'        type = utils.getVari'
  +'ableType(value, this.strictIntegers);'#10'        this.constantTypes[name] '
  +'= type;'#10'      } else {'#10'        type = this.constantTypes[name];'#10
  +'      }'#10'      const KernelValue = this.constructor.lookupKernelValueTyp'
  +'e(type, ''static'', this.precision, value);'#10'      if (KernelValue === n'
  +'ull) {'#10'        return this.requestFallback(args);'#10'      }'#10'     '
  +' const kernelValue = new KernelValue(value, {'#10'        name,'#10'       '
  +' type,'#10'        tactic: this.tactic,'#10'        origin: ''constants'','
  +#10'        context: this.context,'#10'        checkContext: this.checkConte'
  +'xt,'#10'        kernel: this,'#10'        strictIntegers: this.strictIntege'
  +'rs,'#10'        onRequestTexture: () => {'#10'          return this.createT'
  +'exture();'#10'        },'#10'        onRequestIndex: () => {'#10'          '
  +'return textureIndexes++;'#10'        },'#10'        onRequestContextHandle:'
  ,' () => {'#10'          return gl.TEXTURE0 + this.constantTextureCount++;'#10
  +'        }'#10'      });'#10'      this.constantBitRatios[name] = kernelValu'
  +'e.bitRatio;'#10'      this.kernelConstants.push(kernelValue);'#10'      ker'
  +'nelValue.setup();'#10'      if (kernelValue.forceUploadEachRun) {'#10'     '
  +'   this.forceUploadKernelConstants.push(kernelValue);'#10'      }'#10'    }'
  +#10'  }'#10#10'  build() {'#10'    if (this.built) return;'#10'    this.init'
  +'Extensions();'#10'    this.validateSettings(arguments);'#10'    this.setupC'
  +'onstants(arguments);'#10'    if (this.fallbackRequested) return;'#10'    th'
  +'is.setupArguments(arguments);'#10'    if (this.fallbackRequested) return;'
  +#10'    this.updateMaxTexSize();'#10'    this.translateSource();'#10'    con'
  +'st failureResult = this.pickRenderStrategy(arguments);'#10'    if (failureR'
  +'esult) {'#10'      return failureResult;'#10'    }'#10'    const { texSize,'
  +' context: gl, canvas } = this;'#10'    gl.enable(gl.SCISSOR_TEST);'#10'    '
  +'if (this.pipeline && this.precision === ''single'') {'#10'      gl.viewport'
  +'(0, 0, this.maxTexSize[0], this.maxTexSize[1]);'#10'      canvas.width = th'
  +'is.maxTexSize[0];'#10'      canvas.height = this.maxTexSize[1];'#10'    } e'
  +'lse {'#10'      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);'
  +#10'      canvas.width = this.maxTexSize[0];'#10'      canvas.height = this.'
  +'maxTexSize[1];'#10'    }'#10'    const threadDim = this.threadDim = Array.f'
  +'rom(this.output);'#10'    while (threadDim.length < 3) {'#10'      threadDi'
  +'m.push(1);'#10'    }'#10#10'    const compiledVertexShader = this.getVertex'
  +'Shader(arguments);'#10'    const vertShader = gl.createShader(gl.VERTEX_SHA'
  +'DER);'#10'    gl.shaderSource(vertShader, compiledVertexShader);'#10'    gl'
  +'.compileShader(vertShader);'#10'    this.vertShader = vertShader;'#10#10'  '
  +'  const compiledFragmentShader = this.getFragmentShader(arguments);'#10'   '
  +' const fragShader = gl.createShader(gl.FRAGMENT_SHADER);'#10'    gl.shaderS'
  +'ource(fragShader, compiledFragmentShader);'#10'    gl.compileShader(fragSha'
  +'der);'#10'    this.fragShader = fragShader;'#10#10'    if (this.debug) {'#10
  +'      console.log(''GLSL Shader Output:'');'#10'      console.log(compiledF'
  +'ragmentShader);'#10'    }'#10#10'    if (!gl.getShaderParameter(vertShader,'
  +' gl.COMPILE_STATUS)) {'#10'      throw new Error(''Error compiling vertex s'
  +'hader: '' + gl.getShaderInfoLog(vertShader));'#10'    }'#10'    if (!gl.get'
  +'ShaderParameter(fragShader, gl.COMPILE_STATUS)) {'#10'      throw new Error'
  +'(''Error compiling fragment shader: '' + gl.getShaderInfoLog(fragShader));'
  +#10'    }'#10#10'    const program = this.program = gl.createProgram();'#10
  +'    gl.attachShader(program, vertShader);'#10'    gl.attachShader(program, '
  +'fragShader);'#10'    gl.linkProgram(program);'#10'    this.framebuffer = gl'
  +'.createFramebuffer();'#10'    this.framebuffer.width = texSize[0];'#10'    '
  +'this.framebuffer.height = texSize[1];'#10#10'    const vertices = new Float'
  +'32Array([-1, -1,'#10'      1, -1, -1, 1,'#10'      1, 1'#10'    ]);'#10'   '
  +' const texCoords = new Float32Array(['#10'      0, 0,'#10'      1, 0,'#10' '
  +'     0, 1,'#10'      1, 1'#10'    ]);'#10#10'    const texCoordOffset = ver'
  +'tices.byteLength;'#10#10'    let buffer = this.buffer;'#10'    if (!buffer)'
  +' {'#10'      buffer = this.buffer = gl.createBuffer();'#10'      gl.bindBuf'
  +'fer(gl.ARRAY_BUFFER, buffer);'#10'      gl.bufferData(gl.ARRAY_BUFFER, vert'
  +'ices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);'#10'    } else {'
  +#10'      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);'#10'    }'#10#10'    gl.bu'
  +'fferSubData(gl.ARRAY_BUFFER, 0, vertices);'#10'    gl.bufferSubData(gl.ARRA'
  +'Y_BUFFER, texCoordOffset, texCoords);'#10#10'    const aPosLoc = gl.getAttr'
  +'ibLocation(this.program, ''aPos'');'#10'    gl.enableVertexAttribArray(aPos'
  +'Loc);'#10'    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);'#10
  +'    const aTexCoordLoc = gl.getAttribLocation(this.program, ''aTexCoord'');'
  +#10'    gl.enableVertexAttribArray(aTexCoordLoc);'#10'    gl.vertexAttribPoi'
  +'nter(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);'#10'    gl.bindF'
  +'ramebuffer(gl.FRAMEBUFFER, this.framebuffer);'#10#10'    let i = 0;'#10'   '
  +' gl.useProgram(this.program);'#10'    for (let p in this.constants) {'#10' '
  +'     this.kernelConstants[i++].updateValue(this.constants[p]);'#10'    }'#10
  +#10'    this._setupOutputTexture();'#10'    if ('#10'      this.subKernels !'
  +'== null &&'#10'      this.subKernels.length > 0'#10'    ) {'#10'      this.'
  +'_mappedTextureSwitched = {};'#10'      this._setupSubOutputTextures();'#10
  +'    }'#10'    this.buildSignature(arguments);'#10'    this.built = true;'#10
  +'  }'#10#10'  translateSource() {'#10'    const functionBuilder = FunctionBu'
  +'ilder.fromKernel(this, WebGLFunctionNode, {'#10'      fixIntegerDivisionAcc'
  +'uracy: this.fixIntegerDivisionAccuracy'#10'    });'#10'    this.translatedS'
  ,'ource = functionBuilder.getPrototypeString(''kernel'');'#10'    this.setupR'
  +'eturnTypes(functionBuilder);'#10'  }'#10#10'  setupReturnTypes(functionBuil'
  +'der) {'#10'    if (!this.graphical && !this.returnType) {'#10'      this.re'
  +'turnType = functionBuilder.getKernelResultType();'#10'    }'#10#10'    if ('
  +'this.subKernels && this.subKernels.length > 0) {'#10'      for (let i = 0; '
  +'i < this.subKernels.length; i++) {'#10'        const subKernel = this.subKe'
  +'rnels[i];'#10'        if (!subKernel.returnType) {'#10'          subKernel.'
  +'returnType = functionBuilder.getSubKernelResultType(i);'#10'        }'#10' '
  +'     }'#10'    }'#10'  }'#10#10'  run() {'#10'    const { kernelArguments, '
  +'texSize, forceUploadKernelConstants, context: gl } = this;'#10#10'    gl.us'
  +'eProgram(this.program);'#10'    gl.scissor(0, 0, texSize[0], texSize[1]);'
  +#10'    if (this.dynamicOutput) {'#10'      this.setUniform3iv(''uOutputDim'
  +''', new Int32Array(this.threadDim));'#10'      this.setUniform2iv(''uTexSiz'
  +'e'', texSize);'#10'    }'#10#10'    this.setUniform2f(''ratio'', texSize[0]'
  +' / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);'#10#10'    for (le'
  +'t i = 0; i < forceUploadKernelConstants.length; i++) {'#10'      const cons'
  +'tant = forceUploadKernelConstants[i];'#10'      constant.updateValue(this.c'
  +'onstants[constant.name]);'#10'      if (this.switchingKernels) return;'#10
  +'    }'#10'    for (let i = 0; i < kernelArguments.length; i++) {'#10'      '
  +'kernelArguments[i].updateValue(arguments[i]);'#10'      if (this.switchingK'
  +'ernels) return;'#10'    }'#10#10'    if (this.plugins) {'#10'      for (let'
  +' i = 0; i < this.plugins.length; i++) {'#10'        const plugin = this.plu'
  +'gins[i];'#10'        if (plugin.onBeforeRun) {'#10'          plugin.onBefor'
  +'eRun(this);'#10'        }'#10'      }'#10'    }'#10#10'    if (this.graphic'
  +'al) {'#10'      if (this.pipeline) {'#10'        gl.bindRenderbuffer(gl.REN'
  +'DERBUFFER, null);'#10'        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frame'
  +'buffer);'#10'        if (this.immutable) {'#10'          this._replaceOutpu'
  +'tTexture();'#10'        }'#10'        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4'
  +');'#10'        return this.immutable ? this.texture.clone() : this.texture;'
  +#10'      }'#10'      gl.bindRenderbuffer(gl.RENDERBUFFER, null);'#10'      '
  +'gl.bindFramebuffer(gl.FRAMEBUFFER, null);'#10'      gl.drawArrays(gl.TRIANG'
  +'LE_STRIP, 0, 4);'#10'      return;'#10'    }'#10#10'    gl.bindFramebuffer('
  +'gl.FRAMEBUFFER, this.framebuffer);'#10'    if (this.immutable) {'#10'      '
  +'this._replaceOutputTexture();'#10'    }'#10#10'    if (this.subKernels !== '
  +'null) {'#10'      if (this.immutable) {'#10'        this._replaceSubOutputT'
  +'extures();'#10'      }'#10'      this.drawBuffers();'#10'    }'#10#10'    g'
  +'l.drawArrays(gl.TRIANGLE_STRIP, 0, 4);'#10'  }'#10#10'  drawBuffers() {'#10
  +'    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap'
  +');'#10'  }'#10#10'  getInternalFormat() {'#10'    return this.context.RGBA;'
  +#10'  }'#10'  getTextureFormat() {'#10'    const { context: gl } = this;'#10
  +'    switch (this.getInternalFormat()) {'#10'      case gl.RGBA:'#10'       '
  +' return gl.RGBA;'#10'      default:'#10'        throw new Error(''Unknown i'
  +'nternal format'');'#10'    }'#10'  }'#10#10'  _replaceOutputTexture() {'#10
  +'    if (this.texture.beforeMutate() || this._textureSwitched) {'#10'      c'
  +'onst gl = this.context;'#10'      gl.framebufferTexture2D(gl.FRAMEBUFFER, g'
  +'l.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);'#10'      thi'
  +'s._textureSwitched = false;'#10'    }'#10'  }'#10#10'  _setupOutputTexture('
  +') {'#10'    const gl = this.context;'#10'    const texSize = this.texSize;'
  +#10'    if (this.texture) {'#10'      gl.framebufferTexture2D(gl.FRAMEBUFFER'
  +', gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);'#10'      '
  +'return;'#10'    }'#10'    const texture = this.createTexture();'#10'    gl.'
  +'activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextur'
  +'eCount);'#10'    gl.bindTexture(gl.TEXTURE_2D, texture);'#10'    gl.texPara'
  +'meteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#10'    gl.texP'
  +'arameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#10'    gl.t'
  +'exParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'    gl.'
  +'texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'#10'    co'
  +'nst format = this.getInternalFormat();'#10'    if (this.precision === ''sin'
  +'gle'') {'#10'      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texS'
  +'ize[1], 0, gl.RGBA, gl.FLOAT, null);'#10'    } else {'#10'      gl.texImage'
  +'2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED'
  +'_BYTE, null);'#10'    }'#10'    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.'
  +'COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);'#10'    this.texture = new t'
  +'his.TextureConstructor({'#10'      texture,'#10'      size: texSize,'#10'  '
  ,'    dimensions: this.threadDim,'#10'      output: this.output,'#10'      co'
  +'ntext: this.context,'#10'      internalFormat: this.getInternalFormat(),'#10
  +'      textureFormat: this.getTextureFormat(),'#10'      kernel: this,'#10' '
  +'   });'#10'  }'#10#10'  _replaceSubOutputTextures() {'#10'    const gl = th'
  +'is.context;'#10'    for (let i = 0; i < this.mappedTextures.length; i++) {'
  +#10'      const mappedTexture = this.mappedTextures[i];'#10'      if (mapped'
  +'Texture.beforeMutate() || this._mappedTextureSwitched[i]) {'#10'        gl.'
  +'framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTU'
  +'RE_2D, mappedTexture.texture, 0);'#10'        this._mappedTextureSwitched[i'
  +'] = false;'#10'      }'#10'    }'#10'  }'#10#10'  _setupSubOutputTextures()'
  +' {'#10'    const gl = this.context;'#10'    if (this.mappedTextures) {'#10
  +'      for (let i = 0; i < this.subKernels.length; i++) {'#10'        gl.fra'
  +'mebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_'
  +'2D, this.mappedTextures[i].texture, 0);'#10'      }'#10'      return;'#10' '
  +'   }'#10'    const texSize = this.texSize;'#10'    this.drawBuffersMap = [g'
  +'l.COLOR_ATTACHMENT0];'#10'    this.mappedTextures = [];'#10'    for (let i '
  +'= 0; i < this.subKernels.length; i++) {'#10'      const texture = this.crea'
  +'teTexture();'#10'      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + '
  +'1);'#10'      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + th'
  +'is.argumentTextureCount + i);'#10'      gl.bindTexture(gl.TEXTURE_2D, textu'
  +'re);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_'
  +'TO_EDGE);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.C'
  +'LAMP_TO_EDGE);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FIL'
  +'TER, gl.NEAREST);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_'
  +'FILTER, gl.NEAREST);'#10'      if (this.precision === ''single'') {'#10'   '
  +'     gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl'
  +'.RGBA, gl.FLOAT, null);'#10'      } else {'#10'        gl.texImage2D(gl.TEX'
  +'TURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, '
  +'null);'#10'      }'#10'      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COL'
  +'OR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);'#10#10'      this.mappe'
  +'dTextures.push(new this.TextureConstructor({'#10'        texture,'#10'     '
  +'   size: texSize,'#10'        dimensions: this.threadDim,'#10'        outpu'
  +'t: this.output,'#10'        context: this.context,'#10'        internalForm'
  +'at: this.getInternalFormat(),'#10'        textureFormat: this.getTextureFor'
  +'mat(),'#10'        kernel: this,'#10'      }));'#10'    }'#10'  }'#10#10'  '
  +'setUniform1f(name, value) {'#10'    if (this.uniform1fCache.hasOwnProperty('
  +'name)) {'#10'      const cache = this.uniform1fCache[name];'#10'      if (v'
  +'alue === cache) {'#10'        return;'#10'      }'#10'    }'#10'    this.un'
  +'iform1fCache[name] = value;'#10'    const loc = this.getUniformLocation(nam'
  +'e);'#10'    this.context.uniform1f(loc, value);'#10'  }'#10#10'  setUniform'
  +'1i(name, value) {'#10'    if (this.uniform1iCache.hasOwnProperty(name)) {'
  +#10'      const cache = this.uniform1iCache[name];'#10'      if (value === c'
  +'ache) {'#10'        return;'#10'      }'#10'    }'#10'    this.uniform1iCac'
  +'he[name] = value;'#10'    const loc = this.getUniformLocation(name);'#10'  '
  +'  this.context.uniform1i(loc, value);'#10'  }'#10#10'  setUniform2f(name, v'
  +'alue1, value2) {'#10'    if (this.uniform2fCache.hasOwnProperty(name)) {'#10
  +'      const cache = this.uniform2fCache[name];'#10'      if ('#10'        v'
  +'alue1 === cache[0] &&'#10'        value2 === cache[1]'#10'      ) {'#10'   '
  +'     return;'#10'      }'#10'    }'#10'    this.uniform2fCache[name] = [val'
  +'ue1, value2];'#10'    const loc = this.getUniformLocation(name);'#10'    th'
  +'is.context.uniform2f(loc, value1, value2);'#10'  }'#10#10'  setUniform2fv(n'
  +'ame, value) {'#10'    if (this.uniform2fvCache.hasOwnProperty(name)) {'#10
  +'      const cache = this.uniform2fvCache[name];'#10'      if ('#10'        '
  +'value[0] === cache[0] &&'#10'        value[1] === cache[1]'#10'      ) {'#10
  +'        return;'#10'      }'#10'    }'#10'    this.uniform2fvCache[name] = '
  +'value;'#10'    const loc = this.getUniformLocation(name);'#10'    this.cont'
  +'ext.uniform2fv(loc, value);'#10'  }'#10#10'  setUniform2iv(name, value) {'
  +#10'    if (this.uniform2ivCache.hasOwnProperty(name)) {'#10'      const cac'
  +'he = this.uniform2ivCache[name];'#10'      if ('#10'        value[0] === ca'
  +'che[0] &&'#10'        value[1] === cache[1]'#10'      ) {'#10'        retur'
  +'n;'#10'      }'#10'    }'#10'    this.uniform2ivCache[name] = value;'#10'  '
  +'  const loc = this.getUniformLocation(name);'#10'    this.context.uniform2i'
  +'v(loc, value);'#10'  }'#10#10'  setUniform3fv(name, value) {'#10'    if (th'
  +'is.uniform3fvCache.hasOwnProperty(name)) {'#10'      const cache = this.uni'
  ,'form3fvCache[name];'#10'      if ('#10'        value[0] === cache[0] &&'#10
  +'        value[1] === cache[1] &&'#10'        value[2] === cache[2]'#10'    '
  +'  ) {'#10'        return;'#10'      }'#10'    }'#10'    this.uniform3fvCach'
  +'e[name] = value;'#10'    const loc = this.getUniformLocation(name);'#10'   '
  +' this.context.uniform3fv(loc, value);'#10'  }'#10#10'  setUniform3iv(name, '
  +'value) {'#10'    if (this.uniform3ivCache.hasOwnProperty(name)) {'#10'     '
  +' const cache = this.uniform3ivCache[name];'#10'      if ('#10'        value'
  +'[0] === cache[0] &&'#10'        value[1] === cache[1] &&'#10'        value['
  +'2] === cache[2]'#10'      ) {'#10'        return;'#10'      }'#10'    }'#10
  +'    this.uniform3ivCache[name] = value;'#10'    const loc = this.getUniform'
  +'Location(name);'#10'    this.context.uniform3iv(loc, value);'#10'  }'#10#10
  +'  setUniform4fv(name, value) {'#10'    if (this.uniform4fvCache.hasOwnPrope'
  +'rty(name)) {'#10'      const cache = this.uniform4fvCache[name];'#10'      '
  +'if ('#10'        value[0] === cache[0] &&'#10'        value[1] === cache[1]'
  +' &&'#10'        value[2] === cache[2] &&'#10'        value[3] === cache[3]'
  +#10'      ) {'#10'        return;'#10'      }'#10'    }'#10'    this.uniform'
  +'4fvCache[name] = value;'#10'    const loc = this.getUniformLocation(name);'
  +#10'    this.context.uniform4fv(loc, value);'#10'  }'#10#10'  setUniform4iv('
  +'name, value) {'#10'    if (this.uniform4ivCache.hasOwnProperty(name)) {'#10
  +'      const cache = this.uniform4ivCache[name];'#10'      if ('#10'        '
  +'value[0] === cache[0] &&'#10'        value[1] === cache[1] &&'#10'        v'
  +'alue[2] === cache[2] &&'#10'        value[3] === cache[3]'#10'      ) {'#10
  +'        return;'#10'      }'#10'    }'#10'    this.uniform4ivCache[name] = '
  +'value;'#10'    const loc = this.getUniformLocation(name);'#10'    this.cont'
  +'ext.uniform4iv(loc, value);'#10'  }'#10#10'  getUniformLocation(name) {'#10
  +'    if (this.programUniformLocationCache.hasOwnProperty(name)) {'#10'      '
  +'return this.programUniformLocationCache[name];'#10'    }'#10'    return thi'
  +'s.programUniformLocationCache[name] = this.context.getUniformLocation(this.'
  +'program, name);'#10'  }'#10#10'  _getFragShaderArtifactMap(args) {'#10'    '
  +'return {'#10'      HEADER: this._getHeaderString(),'#10'      LOOP_MAX: thi'
  +'s._getLoopMaxString(),'#10'      PLUGINS: this._getPluginsString(),'#10'   '
  +'   CONSTANTS: this._getConstantsString(),'#10'      DECODE32_ENDIANNESS: th'
  +'is._getDecode32EndiannessString(),'#10'      ENCODE32_ENDIANNESS: this._get'
  +'Encode32EndiannessString(),'#10'      DIVIDE_WITH_INTEGER_CHECK: this._getD'
  +'ivideWithIntegerCheckString(),'#10'      INJECTED_NATIVE: this._getInjected'
  +'Native(),'#10'      MAIN_CONSTANTS: this._getMainConstantsString(),'#10'   '
  +'   MAIN_ARGUMENTS: this._getMainArgumentsString(args),'#10'      KERNEL: th'
  +'is.getKernelString(),'#10'      MAIN_RESULT: this.getMainResultString(),'#10
  +'      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),'#10'     '
  +' INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),'#10'      SAMPLER_'
  +'2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),'#10'      SAMP'
  +'LER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),'
  +#10'    };'#10'  }'#10#10'  _getVertShaderArtifactMap(args) {'#10'    return'
  +' {'#10'      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),'#10
  +'      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),'#10'      SAM'
  +'PLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),'#10'     '
  +' SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclarati'
  +'on(),'#10'    };'#10'  }'#10#10'  _getHeaderString() {'#10'    return ('#10
  +'      this.subKernels !== null ?'#10'      ''#extension GL_EXT_draw_buffers'
  +' : require\n'' :'#10'      '''''#10'    );'#10'  }'#10#10'  _getLoopMaxStri'
  +'ng() {'#10'    return ('#10'      this.loopMaxIterations ?'#10'      ` ${pa'
  +'rseInt(this.loopMaxIterations)};\n` :'#10'      '' 1000;\n'''#10'    );'#10
  +'  }'#10#10'  _getPluginsString() {'#10'    if (!this.plugins) return ''\n'''
  +';'#10'    return this.plugins.map(plugin => plugin.source && this.source.ma'
  +'tch(plugin.functionMatch) ? plugin.source : '''').join(''\n'');'#10'  }'#10
  +#10'  _getConstantsString() {'#10'    const result = [];'#10'    const { thr'
  +'eadDim, texSize } = this;'#10'    if (this.dynamicOutput) {'#10'      resul'
  +'t.push('#10'        ''uniform ivec3 uOutputDim'','#10'        ''uniform ive'
  +'c2 uTexSize'''#10'      );'#10'    } else {'#10'      result.push('#10'    '
  +'    `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim'
  +'[2]})`,'#10'        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`'
  +#10'      );'#10'    }'#10'    return utils.linesToString(result);'#10'  }'
  +#10#10'  _getTextureCoordinate() {'#10'    const subKernels = this.subKernel'
  +'s;'#10'    if (subKernels === null || subKernels.length < 1) {'#10'      re'
  ,'turn ''varying vec2 vTexCoord;\n'';'#10'    } else {'#10'      return ''out'
  +' vec2 vTexCoord;\n'';'#10'    }'#10'  }'#10#10'  _getDecode32EndiannessStri'
  +'ng() {'#10'    return ('#10'      this.endianness === ''LE'' ?'#10'      '''
  +''' :'#10'      ''  texel.rgba = texel.abgr;\n'''#10'    );'#10'  }'#10#10' '
  +' _getEncode32EndiannessString() {'#10'    return ('#10'      this.endiannes'
  +'s === ''LE'' ?'#10'      '''' :'#10'      ''  texel.rgba = texel.abgr;\n'''
  +#10'    );'#10'  }'#10#10'  _getDivideWithIntegerCheckString() {'#10'    ret'
  +'urn this.fixIntegerDivisionAccuracy ?'#10'      `float divWithIntCheck(floa'
  +'t x, float y) {'#10'  if (floor(x) == x && floor(y) == y && integerMod(x, y'
  +') == 0.0) {'#10'    return float(int(x) / int(y));'#10'  }'#10'  return x /'
  +' y;'#10'}'#10#10'float integerCorrectionModulo(float number, float divisor)'
  +' {'#10'  if (number < 0.0) {'#10'    number = abs(number);'#10'    if (divi'
  +'sor < 0.0) {'#10'      divisor = abs(divisor);'#10'    }'#10'    return -(n'
  +'umber - (divisor * floor(divWithIntCheck(number, divisor))));'#10'  }'#10' '
  +' if (divisor < 0.0) {'#10'    divisor = abs(divisor);'#10'  }'#10'  return '
  +'number - (divisor * floor(divWithIntCheck(number, divisor)));'#10'}` :'#10
  +'      '''';'#10'  }'#10#10'  _getMainArgumentsString(args) {'#10'    const '
  +'results = [];'#10'    const { argumentNames } = this;'#10'    for (let i = '
  +'0; i < argumentNames.length; i++) {'#10'      results.push(this.kernelArgum'
  +'ents[i].getSource(args[i]));'#10'    }'#10'    return results.join('''');'
  +#10'  }'#10#10'  _getInjectedNative() {'#10'    return this.injectedNative |'
  +'| '''';'#10'  }'#10#10'  _getMainConstantsString() {'#10'    const result ='
  +' [];'#10'    const { constants } = this;'#10'    if (constants) {'#10'     '
  +' let i = 0;'#10'      for (const name in constants) {'#10'        if (!this'
  +'.constants.hasOwnProperty(name)) continue;'#10'        result.push(this.ker'
  +'nelConstants[i++].getSource(this.constants[name]));'#10'      }'#10'    }'
  +#10'    return result.join('''');'#10'  }'#10#10'  getKernelResultDeclaratio'
  +'n() {'#10'    switch (this.returnType) {'#10'      case ''Array(2)'':'#10' '
  +'       return ''vec2 kernelResult'';'#10'      case ''Array(3)'':'#10'     '
  +'   return ''vec3 kernelResult'';'#10'      case ''Array(4)'':'#10'        r'
  +'eturn ''vec4 kernelResult'';'#10'      case ''LiteralInteger'':'#10'      c'
  +'ase ''Float'':'#10'      case ''Number'':'#10'      case ''Integer'':'#10' '
  +'       return ''float kernelResult'';'#10'      default:'#10'        if (th'
  +'is.graphical) {'#10'          return ''float kernelResult'';'#10'        } '
  +'else {'#10'          throw new Error(`unrecognized output type "${ this.ret'
  +'urnType }"`);'#10'        }'#10'    }'#10'  }'#10'  getKernelString() {'#10
  +'    const result = [this.getKernelResultDeclaration()];'#10'    const { sub'
  +'Kernels } = this;'#10'    if (subKernels !== null) {'#10'      switch (this'
  +'.returnType) {'#10'        case ''Number'':'#10'        case ''Float'':'#10
  +'        case ''Integer'':'#10'          for (let i = 0; i < subKernels.leng'
  +'th; i++) {'#10'            const subKernel = subKernels[i];'#10'           '
  +' result.push('#10'              subKernel.returnType === ''Integer'' ?'#10
  +'              `int subKernelResult_${ subKernel.name } = 0` :'#10'         '
  +'     `float subKernelResult_${ subKernel.name } = 0.0`'#10'            );'
  +#10'          }'#10'          break;'#10'        case ''Array(2)'':'#10'    '
  +'      for (let i = 0; i < subKernels.length; i++) {'#10'            result.'
  +'push('#10'              `vec2 subKernelResult_${ subKernels[i].name }`'#10
  +'            );'#10'          }'#10'          break;'#10'        case ''Arra'
  +'y(3)'':'#10'          for (let i = 0; i < subKernels.length; i++) {'#10'   '
  +'         result.push('#10'              `vec3 subKernelResult_${ subKernels'
  +'[i].name }`'#10'            );'#10'          }'#10'          break;'#10'   '
  +'     case ''Array(4)'':'#10'          for (let i = 0; i < subKernels.length'
  +'; i++) {'#10'            result.push('#10'              `vec4 subKernelResu'
  +'lt_${ subKernels[i].name }`'#10'            );'#10'          }'#10'        '
  +'  break;'#10'      }'#10'    }'#10#10'    return utils.linesToString(result'
  +') + this.translatedSource;'#10'  }'#10#10'  getMainResultGraphical() {'#10
  +'    return utils.linesToString(['#10'      ''  threadId = indexTo3D(index, '
  +'uOutputDim)'','#10'      ''  kernel()'','#10'      ''  gl_FragColor = actua'
  +'lColor'','#10'    ]);'#10'  }'#10#10'  getMainResultPackedPixels() {'#10'  '
  +'  switch (this.returnType) {'#10'      case ''LiteralInteger'':'#10'      c'
  +'ase ''Number'':'#10'      case ''Integer'':'#10'      case ''Float'':'#10' '
  +'       return this.getMainResultKernelPackedPixels() +'#10'          this.g'
  +'etMainResultSubKernelPackedPixels();'#10'      default:'#10'        throw n'
  +'ew Error(`packed output only usable with Numbers, "${this.returnType}" spec'
  ,'ified`);'#10'    }'#10'  }'#10#10'  getMainResultKernelPackedPixels() {'#10
  +'    return utils.linesToString(['#10'      ''  threadId = indexTo3D(index, '
  +'uOutputDim)'','#10'      ''  kernel()'','#10'      `  gl_FragData[0] = ${th'
  +'is.useLegacyEncoder ? ''legacyEncode32'' : ''encode32''}(kernelResult)`'#10
  +'    ]);'#10'  }'#10#10'  getMainResultSubKernelPackedPixels() {'#10'    con'
  +'st result = [];'#10'    if (!this.subKernels) return '''';'#10'    for (let'
  +' i = 0; i < this.subKernels.length; i++) {'#10'      const subKernel = this'
  +'.subKernels[i];'#10'      if (subKernel.returnType === ''Integer'') {'#10' '
  +'       result.push('#10'          `  gl_FragData[${i + 1}] = ${this.useLega'
  +'cyEncoder ? ''legacyEncode32'' : ''encode32''}(float(subKernelResult_${this'
  +'.subKernels[i].name}))`'#10'        );'#10'      } else {'#10'        resul'
  +'t.push('#10'          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? '
  +'''legacyEncode32'' : ''encode32''}(subKernelResult_${this.subKernels[i].nam'
  +'e})`'#10'        );'#10'      }'#10'    }'#10'    return utils.linesToStrin'
  +'g(result);'#10'  }'#10#10'  getMainResultMemoryOptimizedFloats() {'#10'    '
  +'const result = ['#10'      ''  index *= 4'','#10'    ];'#10#10'    switch ('
  +'this.returnType) {'#10'      case ''Number'':'#10'      case ''Integer'':'
  +#10'      case ''Float'':'#10'        const channels = [''r'', ''g'', ''b'','
  +' ''a''];'#10'        for (let i = 0; i < channels.length; i++) {'#10'      '
  +'    const channel = channels[i];'#10'          this.getMainResultKernelMemo'
  +'ryOptimizedFloats(result, channel);'#10'          this.getMainResultSubKern'
  +'elMemoryOptimizedFloats(result, channel);'#10'          if (i + 1 < channel'
  +'s.length) {'#10'            result.push(''  index += 1'');'#10'          }'
  +#10'        }'#10'        break;'#10'      default:'#10'        throw new Er'
  +'ror(`optimized output only usable with Numbers, ${this.returnType} specifie'
  +'d`);'#10'    }'#10#10'    return utils.linesToString(result);'#10'  }'#10#10
  +'  getMainResultKernelMemoryOptimizedFloats(result, channel) {'#10'    resul'
  +'t.push('#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'      '
  +'''  kernel()'','#10'      `  gl_FragData[0].${channel} = kernelResult`,'#10
  +'    );'#10'  }'#10#10'  getMainResultSubKernelMemoryOptimizedFloats(result,'
  +' channel) {'#10'    if (!this.subKernels) return result;'#10'    for (let i'
  +' = 0; i < this.subKernels.length; i++) {'#10'      const subKernel = this.s'
  +'ubKernels[i];'#10'      if (subKernel.returnType === ''Integer'') {'#10'   '
  +'     result.push('#10'          `  gl_FragData[${i + 1}].${channel} = float'
  +'(subKernelResult_${this.subKernels[i].name})`,'#10'        );'#10'      } e'
  +'lse {'#10'        result.push('#10'          `  gl_FragData[${i + 1}].${cha'
  +'nnel} = subKernelResult_${this.subKernels[i].name}`,'#10'        );'#10'   '
  +'   }'#10'    }'#10'  }'#10#10'  getMainResultKernelNumberTexture() {'#10'  '
  +'  return ['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'   '
  +'   ''  kernel()'','#10'      ''  gl_FragData[0][0] = kernelResult'','#10'  '
  +'  ];'#10'  }'#10#10'  getMainResultSubKernelNumberTexture() {'#10'    const'
  +' result = [];'#10'    if (!this.subKernels) return result;'#10'    for (let'
  +' i = 0; i < this.subKernels.length; ++i) {'#10'      const subKernel = this'
  +'.subKernels[i];'#10'      if (subKernel.returnType === ''Integer'') {'#10' '
  +'       result.push('#10'          `  gl_FragData[${i + 1}][0] = float(subKe'
  +'rnelResult_${subKernel.name})`,'#10'        );'#10'      } else {'#10'     '
  +'   result.push('#10'          `  gl_FragData[${i + 1}][0] = subKernelResult'
  +'_${subKernel.name}`,'#10'        );'#10'      }'#10'    }'#10'    return re'
  +'sult;'#10'  }'#10#10'  getMainResultKernelArray2Texture() {'#10'    return '
  +'['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'      ''  ke'
  +'rnel()'','#10'      ''  gl_FragData[0][0] = kernelResult[0]'','#10'      '''
  +'  gl_FragData[0][1] = kernelResult[1]'','#10'    ];'#10'  }'#10#10'  getMai'
  +'nResultSubKernelArray2Texture() {'#10'    const result = [];'#10'    if (!t'
  +'his.subKernels) return result;'#10'    for (let i = 0; i < this.subKernels.'
  +'length; ++i) {'#10'      result.push('#10'        `  gl_FragData[${i + 1}]['
  +'0] = subKernelResult_${this.subKernels[i].name}[0]`,'#10'        `  gl_Frag'
  +'Data[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,'#10'   '
  +'   );'#10'    }'#10'    return result;'#10'  }'#10#10'  getMainResultKernel'
  +'Array3Texture() {'#10'    return ['#10'      ''  threadId = indexTo3D(index'
  +', uOutputDim)'','#10'      ''  kernel()'','#10'      ''  gl_FragData[0][0] '
  +'= kernelResult[0]'','#10'      ''  gl_FragData[0][1] = kernelResult[1]'','
  +#10'      ''  gl_FragData[0][2] = kernelResult[2]'','#10'    ];'#10'  }'#10
  +#10'  getMainResultSubKernelArray3Texture() {'#10'    const result = [];'#10
  +'    if (!this.subKernels) return result;'#10'    for (let i = 0; i < this.s'
  ,'ubKernels.length; ++i) {'#10'      result.push('#10'        `  gl_FragData['
  +'${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,'#10'        '
  +'`  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]'
  +'`,'#10'        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKern'
  +'els[i].name}[2]`,'#10'      );'#10'    }'#10'    return result;'#10'  }'#10
  +#10'  getMainResultKernelArray4Texture() {'#10'    return ['#10'      ''  th'
  +'readId = indexTo3D(index, uOutputDim)'','#10'      ''  kernel()'','#10'    '
  +'  ''  gl_FragData[0] = kernelResult'','#10'    ];'#10'  }'#10#10'  getMainR'
  +'esultSubKernelArray4Texture() {'#10'    const result = [];'#10'    if (!thi'
  +'s.subKernels) return result;'#10'    switch (this.returnType) {'#10'      c'
  +'ase ''Number'':'#10'      case ''Float'':'#10'      case ''Integer'':'#10' '
  +'       for (let i = 0; i < this.subKernels.length; ++i) {'#10'          con'
  +'st subKernel = this.subKernels[i];'#10'          if (subKernel.returnType ='
  +'== ''Integer'') {'#10'            result.push('#10'              `  gl_Frag'
  +'Data[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,'#10'  '
  +'          );'#10'          } else {'#10'            result.push('#10'      '
  +'        `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].nam'
  +'e}`,'#10'            );'#10'          }'#10'        }'#10'        break;'#10
  +'      case ''Array(2)'':'#10'        for (let i = 0; i < this.subKernels.le'
  +'ngth; ++i) {'#10'          result.push('#10'            `  gl_FragData[${i '
  +'+ 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,'#10'            '
  +'`  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]'
  +'`,'#10'          );'#10'        }'#10'        break;'#10'      case ''Array'
  +'(3)'':'#10'        for (let i = 0; i < this.subKernels.length; ++i) {'#10' '
  +'         result.push('#10'            `  gl_FragData[${i + 1}][0] = subKern'
  +'elResult_${this.subKernels[i].name}[0]`,'#10'            `  gl_FragData[${i'
  +' + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,'#10'           '
  +' `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2'
  +']`,'#10'          );'#10'        }'#10'        break;'#10'      case ''Arra'
  +'y(4)'':'#10'        for (let i = 0; i < this.subKernels.length; ++i) {'#10
  +'          result.push('#10'            `  gl_FragData[${i + 1}][0] = subKer'
  +'nelResult_${this.subKernels[i].name}[0]`,'#10'            `  gl_FragData[${'
  +'i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,'#10'          '
  +'  `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}['
  +'2]`,'#10'            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.s'
  +'ubKernels[i].name}[3]`,'#10'          );'#10'        }'#10'        break;'
  +#10'    }'#10#10'    return result;'#10'  }'#10#10'  replaceArtifacts(src, m'
  +'ap) {'#10'    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__'
  +';\n/g, (match, artifact) => {'#10'      if (map.hasOwnProperty(artifact)) {'
  +#10'        return map[artifact];'#10'      }'#10'      throw `unhandled art'
  +'ifact ${artifact}`;'#10'    });'#10'  }'#10#10'  getFragmentShader(args) {'
  +#10'    if (this.compiledFragmentShader !== null) {'#10'      return this.co'
  +'mpiledFragmentShader;'#10'    }'#10'    return this.compiledFragmentShader '
  +'= this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShade'
  +'rArtifactMap(args));'#10'  }'#10#10'  getVertexShader(args) {'#10'    if (t'
  +'his.compiledVertexShader !== null) {'#10'      return this.compiledVertexSh'
  +'ader;'#10'    }'#10'    return this.compiledVertexShader = this.replaceArti'
  +'facts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));'
  +#10'  }'#10#10'  toString() {'#10'    const setupContextString = utils.lines'
  +'ToString(['#10'      `const gl = context`,'#10'    ]);'#10'    return glKer'
  +'nelString(this.constructor, arguments, this, setupContextString);'#10'  }'
  +#10#10'  destroy(removeCanvasReferences) {'#10'    if (!this.context) return'
  +';'#10'    if (this.buffer) {'#10'      this.context.deleteBuffer(this.buffe'
  +'r);'#10'    }'#10'    if (this.framebuffer) {'#10'      this.context.delete'
  +'Framebuffer(this.framebuffer);'#10'    }'#10'    if (this.vertShader) {'#10
  +'      this.context.deleteShader(this.vertShader);'#10'    }'#10'    if (thi'
  +'s.fragShader) {'#10'      this.context.deleteShader(this.fragShader);'#10' '
  +'   }'#10'    if (this.program) {'#10'      this.context.deleteProgram(this.'
  +'program);'#10'    }'#10'    if (this.texture) {'#10'      this.texture.dele'
  +'te();'#10'      const textureCacheIndex = this.textureCache.indexOf(this.te'
  +'xture.texture);'#10'      if (textureCacheIndex > -1) {'#10'        this.te'
  +'xtureCache.splice(textureCacheIndex, 1);'#10'      }'#10'      this.texture'
  +' = null;'#10'    }'#10'    if (this.mappedTextures && this.mappedTextures.l'
  +'ength) {'#10'      for (let i = 0; i < this.mappedTextures.length; i++) {'
  ,#10'        const mappedTexture = this.mappedTextures[i];'#10'        mapped'
  +'Texture.delete();'#10'        const textureCacheIndex = this.textureCache.i'
  +'ndexOf(mappedTexture.texture);'#10'        if (textureCacheIndex > -1) {'#10
  +'          this.textureCache.splice(textureCacheIndex, 1);'#10'        }'#10
  +'      }'#10'      this.mappedTextures = null;'#10'    }'#10'    if (this.ke'
  +'rnelArguments) {'#10'      for (let i = 0; i < this.kernelArguments.length;'
  +' i++) {'#10'        this.kernelArguments[i].destroy();'#10'      }'#10'    '
  +'}'#10'    if (this.kernelConstants) {'#10'      for (let i = 0; i < this.ke'
  +'rnelConstants.length; i++) {'#10'        this.kernelConstants[i].destroy();'
  +#10'      }'#10'    }'#10'    while (this.textureCache.length > 0) {'#10'   '
  +'   const texture = this.textureCache.pop();'#10'      this.context.deleteTe'
  +'xture(texture);'#10'    }'#10'    if (removeCanvasReferences) {'#10'      c'
  +'onst idx = canvases.indexOf(this.canvas);'#10'      if (idx >= 0) {'#10'   '
  +'     canvases[idx] = null;'#10'        maxTexSizes[idx] = null;'#10'      }'
  +#10'    }'#10'    this.destroyExtensions();'#10'    delete this.context;'#10
  +'    delete this.canvas;'#10'    if (!this.gpu) return;'#10'    const i = th'
  +'is.gpu.kernels.indexOf(this);'#10'    if (i === -1) return;'#10'    this.gp'
  +'u.kernels.splice(i, 1);'#10'  }'#10#10'  destroyExtensions() {'#10'    this'
  +'.extensions.OES_texture_float = null;'#10'    this.extensions.OES_texture_f'
  +'loat_linear = null;'#10'    this.extensions.OES_element_index_uint = null;'
  +#10'    this.extensions.WEBGL_draw_buffers = null;'#10'  }'#10#10'  static d'
  +'estroyContext(context) {'#10'    const extension = context.getExtension(''W'
  +'EBGL_lose_context'');'#10'    if (extension) {'#10'      extension.loseCont'
  +'ext();'#10'    }'#10'  }'#10#10'  toJSON() {'#10'    const json = super.toJ'
  +'SON();'#10'    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLF'
  +'unctionNode).toJSON();'#10'    json.settings.threadDim = this.threadDim;'#10
  +'    return json;'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGLKernel'
  +#10'};'#10'},{"../../plugins/math-random-uniformly-distributed":112,"../../u'
  +'tils":114,"../function-builder":9,"../gl/kernel":13,"../gl/kernel-string":1'
  +'2,"./fragment-shader":37,"./function-node":38,"./kernel-value-maps":39,"./v'
  +'ertex-shader":71}],71:[function(require,module,exports){'#10'const vertexSh'
  +'ader = `__FLOAT_TACTIC_DECLARATION__;'#10'__INT_TACTIC_DECLARATION__;'#10'_'
  +'_SAMPLER_2D_TACTIC_DECLARATION__;'#10#10'attribute vec2 aPos;'#10'attribute'
  +' vec2 aTexCoord;'#10#10'varying vec2 vTexCoord;'#10'uniform vec2 ratio;'#10
  +#10'void main(void) {'#10'  gl_Position = vec4((aPos + vec2(1)) * ratio + ve'
  +'c2(-1), 0, 1);'#10'  vTexCoord = aTexCoord;'#10'}`;'#10#10'module.exports ='
  +' {'#10'  vertexShader'#10'};'#10'},{}],72:[function(require,module,exports)'
  +'{'#10'const fragmentShader = `#version 300 es'#10'__HEADER__;'#10'__FLOAT_T'
  +'ACTIC_DECLARATION__;'#10'__INT_TACTIC_DECLARATION__;'#10'__SAMPLER_2D_TACTI'
  +'C_DECLARATION__;'#10'__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;'#10#10'const '
  +'int LOOP_MAX = __LOOP_MAX__;'#10#10'__PLUGINS__;'#10'__CONSTANTS__;'#10#10
  +'in vec2 vTexCoord;'#10#10'float atan2(float v1, float v2) {'#10'  if (v1 =='
  +' 0.0 || v2 == 0.0) return 0.0;'#10'  return atan(v1 / v2);'#10'}'#10#10'flo'
  +'at cbrt(float x) {'#10'  if (x >= 0.0) {'#10'    return pow(x, 1.0 / 3.0);'
  +#10'  } else {'#10'    return -pow(x, 1.0 / 3.0);'#10'  }'#10'}'#10#10'float'
  +' expm1(float x) {'#10'  return pow(${Math.E}, x) - 1.0; '#10'}'#10#10'float'
  +' fround(highp float x) {'#10'  return x;'#10'}'#10#10'float imul(float v1, '
  +'float v2) {'#10'  return float(int(v1) * int(v2));'#10'}'#10#10'float log10'
  +'(float x) {'#10'  return log2(x) * (1.0 / log2(10.0));'#10'}'#10#10'float l'
  +'og1p(float x) {'#10'  return log(1.0 + x);'#10'}'#10#10'float _pow(float v1'
  +', float v2) {'#10'  if (v2 == 0.0) return 1.0;'#10'  return pow(v1, v2);'#10
  +'}'#10#10'float _round(float x) {'#10'  return floor(x + 0.5);'#10'}'#10#10
  +#10'const int BIT_COUNT = 32;'#10'int modi(int x, int y) {'#10'  return x - '
  +'y * (x / y);'#10'}'#10#10'int bitwiseOr(int a, int b) {'#10'  int result = '
  +'0;'#10'  int n = 1;'#10'  '#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10
  +'    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {'#10'      result += n;'#10
  +'    }'#10'    a = a / 2;'#10'    b = b / 2;'#10'    n = n * 2;'#10'    if(!'
  +'(a > 0 || b > 0)) {'#10'      break;'#10'    }'#10'  }'#10'  return result;'
  +#10'}'#10'int bitwiseXOR(int a, int b) {'#10'  int result = 0;'#10'  int n ='
  +' 1;'#10'  '#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if ((modi(a,'
  +' 2) == 1) != (modi(b, 2) == 1)) {'#10'      result += n;'#10'    }'#10'    '
  +'a = a / 2;'#10'    b = b / 2;'#10'    n = n * 2;'#10'    if(!(a > 0 || b > '
  +'0)) {'#10'      break;'#10'    }'#10'  }'#10'  return result;'#10'}'#10'int'
  +' bitwiseAnd(int a, int b) {'#10'  int result = 0;'#10'  int n = 1;'#10'  fo'
  ,'r (int i = 0; i < BIT_COUNT; i++) {'#10'    if ((modi(a, 2) == 1) && (modi('
  +'b, 2) == 1)) {'#10'      result += n;'#10'    }'#10'    a = a / 2;'#10'    '
  +'b = b / 2;'#10'    n = n * 2;'#10'    if(!(a > 0 && b > 0)) {'#10'      bre'
  +'ak;'#10'    }'#10'  }'#10'  return result;'#10'}'#10'int bitwiseNot(int a) '
  +'{'#10'  int result = 0;'#10'  int n = 1;'#10'  '#10'  for (int i = 0; i < B'
  +'IT_COUNT; i++) {'#10'    if (modi(a, 2) == 0) {'#10'      result += n;    '
  +#10'    }'#10'    a = a / 2;'#10'    n = n * 2;'#10'  }'#10'  return result;'
  +#10'}'#10'int bitwiseZeroFillLeftShift(int n, int shift) {'#10'  int maxByte'
  +'s = BIT_COUNT;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (maxB'
  +'ytes >= n) {'#10'      break;'#10'    }'#10'    maxBytes *= 2;'#10'  }'#10
  +'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (i >= shift) {'#10'     '
  +' break;'#10'    }'#10'    n *= 2;'#10'  }'#10#10'  int result = 0;'#10'  in'
  +'t byteVal = 1;'#10'  for (int i = 0; i < BIT_COUNT; i++) {'#10'    if (i >='
  +' maxBytes) break;'#10'    if (modi(n, 2) > 0) { result += byteVal; }'#10'  '
  +'  n = int(n / 2);'#10'    byteVal *= 2;'#10'  }'#10'  return result;'#10'}'
  +#10#10'int bitwiseSignedRightShift(int num, int shifts) {'#10'  return int(f'
  +'loor(float(num) / pow(2.0, float(shifts))));'#10'}'#10#10'int bitwiseZeroFi'
  +'llRightShift(int n, int shift) {'#10'  int maxBytes = BIT_COUNT;'#10'  for '
  +'(int i = 0; i < BIT_COUNT; i++) {'#10'    if (maxBytes >= n) {'#10'      br'
  +'eak;'#10'    }'#10'    maxBytes *= 2;'#10'  }'#10'  for (int i = 0; i < BIT'
  +'_COUNT; i++) {'#10'    if (i >= shift) {'#10'      break;'#10'    }'#10'   '
  +' n /= 2;'#10'  }'#10'  int result = 0;'#10'  int byteVal = 1;'#10'  for (in'
  +'t i = 0; i < BIT_COUNT; i++) {'#10'    if (i >= maxBytes) break;'#10'    if'
  +' (modi(n, 2) > 0) { result += byteVal; }'#10'    n = int(n / 2);'#10'    by'
  +'teVal *= 2;'#10'  }'#10'  return result;'#10'}'#10#10'vec2 integerMod(vec2 '
  +'x, float y) {'#10'  vec2 res = floor(mod(x, y));'#10'  return res * step(1.'
  +'0 - floor(y), -res);'#10'}'#10#10'vec3 integerMod(vec3 x, float y) {'#10'  '
  +'vec3 res = floor(mod(x, y));'#10'  return res * step(1.0 - floor(y), -res);'
  +#10'}'#10#10'vec4 integerMod(vec4 x, vec4 y) {'#10'  vec4 res = floor(mod(x,'
  +' y));'#10'  return res * step(1.0 - floor(y), -res);'#10'}'#10#10'float int'
  +'egerMod(float x, float y) {'#10'  float res = floor(mod(x, y));'#10'  retur'
  +'n res * (res > floor(y) - 1.0 ? 0.0 : 1.0);'#10'}'#10#10'int integerMod(int'
  +' x, int y) {'#10'  return x - (y * int(x/y));'#10'}'#10#10'__DIVIDE_WITH_IN'
  +'TEGER_CHECK__;'#10#10'// Here be dragons!'#10'// DO NOT OPTIMIZE THIS CODE'
  +#10'// YOU WILL BREAK SOMETHING ON SOMEBODY\''S MACHINE'#10'// LEAVE IT AS I'
  +'T IS, LEST YOU WASTE YOUR OWN TIME'#10'const vec2 MAGIC_VEC = vec2(1.0, -25'
  +'6.0);'#10'const vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);'#10'con'
  +'st vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); '
  +'// 1, 1/256, 1/65536'#10'float decode32(vec4 texel) {'#10'  __DECODE32_ENDI'
  +'ANNESS__;'#10'  texel *= 255.0;'#10'  vec2 gte128;'#10'  gte128.x = texel.b'
  +' >= 128.0 ? 1.0 : 0.0;'#10'  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;'#10' '
  +' float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);'#10'  flo'
  +'at res = exp2(round(exponent));'#10'  texel.b = texel.b - 128.0 * gte128.x;'
  +#10'  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;'#10
  +'  res *= gte128.y * -2.0 + 1.0;'#10'  return res;'#10'}'#10#10'float decode'
  +'16(vec4 texel, int index) {'#10'  int channel = integerMod(index, 2);'#10' '
  +' return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;'#10'}'#10
  +#10'float decode8(vec4 texel, int index) {'#10'  int channel = integerMod(in'
  +'dex, 4);'#10'  return texel[channel] * 255.0;'#10'}'#10#10'vec4 legacyEncod'
  +'e32(float f) {'#10'  float F = abs(f);'#10'  float sign = f < 0.0 ? 1.0 : 0'
  +'.0;'#10'  float exponent = floor(log2(F));'#10'  float mantissa = (exp2(-ex'
  +'ponent) * F);'#10'  // exponent += floor(log2(mantissa));'#10'  vec4 texel '
  +'= vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;'#10'  texel.rg = intege'
  +'rMod(texel.rg, 256.0);'#10'  texel.b = integerMod(texel.b, 128.0);'#10'  te'
  +'xel.a = exponent*0.5 + 63.5;'#10'  texel.ba += vec2(integerMod(exponent+127'
  +'.0, 2.0), sign) * 128.0;'#10'  texel = floor(texel);'#10'  texel *= 0.00392'
  +'1569; // 1/255'#10'  __ENCODE32_ENDIANNESS__;'#10'  return texel;'#10'}'#10
  +#10'// https://github.com/gpujs/gpu.js/wiki/Encoder-details'#10'vec4 encode3'
  +'2(float value) {'#10'  if (value == 0.0) return vec4(0, 0, 0, 0);'#10#10'  '
  +'float exponent;'#10'  float mantissa;'#10'  vec4  result;'#10'  float sgn;'
  +#10#10'  sgn = step(0.0, -value);'#10'  value = abs(value);'#10#10'  exponen'
  +'t = floor(log2(value));'#10#10'  mantissa = value*pow(2.0, -exponent)-1.0;'
  +#10'  exponent = exponent+127.0;'#10'  result   = vec4(0,0,0,0);'#10#10'  re'
  +'sult.a = floor(exponent/2.0);'#10'  exponent = exponent - result.a*2.0;'#10
  ,'  result.a = result.a + 128.0*sgn;'#10#10'  result.b = floor(mantissa * 128'
  +'.0);'#10'  mantissa = mantissa - result.b / 128.0;'#10'  result.b = result.'
  +'b + exponent*128.0;'#10#10'  result.g = floor(mantissa*32768.0);'#10'  mant'
  +'issa = mantissa - result.g/32768.0;'#10#10'  result.r = floor(mantissa*8388'
  +'608.0);'#10'  return result/255.0;'#10'}'#10'// Dragons end here'#10#10'int'
  +' index;'#10'ivec3 threadId;'#10#10'ivec3 indexTo3D(int idx, ivec3 texDim) {'
  +#10'  int z = int(idx / (texDim.x * texDim.y));'#10'  idx -= z * int(texDim.'
  +'x * texDim.y);'#10'  int y = int(idx / texDim.x);'#10'  int x = int(integer'
  +'Mod(idx, texDim.x));'#10'  return ivec3(x, y, z);'#10'}'#10#10'float get32('
  +'sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  in'
  +'t index = x + texDim.x * (y + texDim.y * z);'#10'  int w = texSize.x;'#10' '
  +' vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10' '
  +' vec4 texel = texture(tex, st / vec2(texSize));'#10'  return decode32(texel'
  +');'#10'}'#10#10'float get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int'
  +' z, int y, int x) {'#10'  int index = x + (texDim.x * (y + (texDim.y * z)))'
  +';'#10'  int w = texSize.x * 2;'#10'  vec2 st = vec2(float(integerMod(index,'
  +' w)), float(index / w)) + 0.5;'#10'  vec4 texel = texture(tex, st / vec2(te'
  +'xSize.x * 2, texSize.y));'#10'  return decode16(texel, index);'#10'}'#10#10
  +'float get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x)'
  +' {'#10'  int index = x + (texDim.x * (y + (texDim.y * z)));'#10'  int w = t'
  +'exSize.x * 4;'#10'  vec2 st = vec2(float(integerMod(index, w)), float(index'
  +' / w)) + 0.5;'#10'  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texS'
  +'ize.y));'#10'  return decode8(texel, index);'#10'}'#10#10'float getMemoryOp'
  +'timized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) '
  +'{'#10'  int index = x + (texDim.x * (y + (texDim.y * z)));'#10'  int channe'
  +'l = integerMod(index, 4);'#10'  index = index / 4;'#10'  int w = texSize.x;'
  +#10'  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'
  +#10'  index = index / 4;'#10'  vec4 texel = texture(tex, st / vec2(texSize))'
  +';'#10'  return texel[channel];'#10'}'#10#10'vec4 getImage2D(sampler2D tex, '
  +'ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + t'
  +'exDim.x * (y + texDim.y * z);'#10'  int w = texSize.x;'#10'  vec2 st = vec2'
  +'(float(integerMod(index, w)), float(index / w)) + 0.5;'#10'  return texture'
  +'(tex, st / vec2(texSize));'#10'}'#10#10'vec4 getImage3D(sampler2DArray tex,'
  +' ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10'  int index = x + '
  +'texDim.x * (y + texDim.y * z);'#10'  int w = texSize.x;'#10'  vec2 st = vec'
  +'2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10'  return textur'
  +'e(tex, vec3(st / vec2(texSize), z));'#10'}'#10#10'float getFloatFromSampler'
  +'2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {'#10' '
  +' vec4 result = getImage2D(tex, texSize, texDim, z, y, x);'#10'  return resu'
  +'lt[0];'#10'}'#10#10'vec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize,'
  +' ivec3 texDim, int z, int y, int x) {'#10'  vec4 result = getImage2D(tex, t'
  +'exSize, texDim, z, y, x);'#10'  return vec2(result[0], result[1]);'#10'}'#10
  +#10'vec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, '
  +'int z, int y, int x) {'#10'  int index = x + texDim.x * (y + texDim.y * z);'
  +#10'  int channel = integerMod(index, 2);'#10'  index = index / 2;'#10'  int'
  +' w = texSize.x;'#10'  vec2 st = vec2(float(integerMod(index, w)), float(ind'
  +'ex / w)) + 0.5;'#10'  vec4 texel = texture(tex, st / vec2(texSize));'#10'  '
  +'if (channel == 0) return vec2(texel.r, texel.g);'#10'  if (channel == 1) re'
  +'turn vec2(texel.b, texel.a);'#10'  return vec2(0.0, 0.0);'#10'}'#10#10'vec3'
  +' getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, in'
  +'t y, int x) {'#10'  vec4 result = getImage2D(tex, texSize, texDim, z, y, x)'
  +';'#10'  return vec3(result[0], result[1], result[2]);'#10'}'#10#10'vec3 get'
  +'MemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int '
  +'y, int x) {'#10'  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));'
  +#10'  int vectorIndex = fieldIndex / 4;'#10'  int vectorOffset = fieldIndex '
  +'- vectorIndex * 4;'#10'  int readY = vectorIndex / texSize.x;'#10'  int rea'
  +'dX = vectorIndex - readY * texSize.x;'#10'  vec4 tex1 = texture(tex, (vec2('
  +'readX, readY) + 0.5) / vec2(texSize));'#10#10'  if (vectorOffset == 0) {'#10
  +'    return tex1.xyz;'#10'  } else if (vectorOffset == 1) {'#10'    return t'
  +'ex1.yzw;'#10'  } else {'#10'    readX++;'#10'    if (readX >= texSize.x) {'
  +#10'      readX = 0;'#10'      readY++;'#10'    }'#10'    vec4 tex2 = textur'
  +'e(tex, vec2(readX, readY) / vec2(texSize));'#10'    if (vectorOffset == 2) '
  +'{'#10'      return vec3(tex1.z, tex1.w, tex2.x);'#10'    } else {'#10'     '
  +' return vec3(tex1.w, tex2.x, tex2.y);'#10'    }'#10'  }'#10'}'#10#10'vec4 g'
  ,'etVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int '
  +'y, int x) {'#10'  return getImage2D(tex, texSize, texDim, z, y, x);'#10'}'
  +#10#10'vec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDi'
  +'m, int z, int y, int x) {'#10'  int index = x + texDim.x * (y + texDim.y * '
  +'z);'#10'  int channel = integerMod(index, 2);'#10'  int w = texSize.x;'#10
  +'  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;'#10
  +'  vec4 texel = texture(tex, st / vec2(texSize));'#10'  return vec4(texel.r,'
  +' texel.g, texel.b, texel.a);'#10'}'#10#10'vec4 actualColor;'#10'void color('
  +'float r, float g, float b, float a) {'#10'  actualColor = vec4(r,g,b,a);'#10
  +'}'#10#10'void color(float r, float g, float b) {'#10'  color(r,g,b,1.0);'#10
  +'}'#10#10'float modulo(float number, float divisor) {'#10'  if (number < 0.0'
  +') {'#10'    number = abs(number);'#10'    if (divisor < 0.0) {'#10'      di'
  +'visor = abs(divisor);'#10'    }'#10'    return -mod(number, divisor);'#10' '
  +' }'#10'  if (divisor < 0.0) {'#10'    divisor = abs(divisor);'#10'  }'#10' '
  +' return mod(number, divisor);'#10'}'#10#10'__INJECTED_NATIVE__;'#10'__MAIN_'
  +'CONSTANTS__;'#10'__MAIN_ARGUMENTS__;'#10'__KERNEL__;'#10#10'void main(void)'
  +' {'#10'  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * f'
  +'loat(uTexSize.y)) * uTexSize.x;'#10'  __MAIN_RESULT__;'#10'}`;'#10#10'modul'
  +'e.exports = {'#10'  fragmentShader'#10'};'#10'},{}],73:[function(require,mo'
  +'dule,exports){'#10'const { utils } = require(''../../utils'');'#10'const { '
  +'WebGLFunctionNode } = require(''../web-gl/function-node'');'#10#10'class We'
  +'bGL2FunctionNode extends WebGLFunctionNode {'#10#10'  astIdentifierExpressi'
  +'on(idtNode, retArr) {'#10'    if (idtNode.type !== ''Identifier'') {'#10'  '
  +'    throw this.astErrorOutput('#10'        ''IdentifierExpression - not an '
  +'Identifier'','#10'        idtNode'#10'      );'#10'    }'#10#10'    const t'
  +'ype = this.getType(idtNode);'#10#10'    const name = utils.sanitizeName(idt'
  +'Node.name);'#10'    if (idtNode.name === ''Infinity'') {'#10'      retArr.p'
  +'ush(''intBitsToFloat(2139095039)'');'#10'    } else if (type === ''Boolean'
  +''') {'#10'      if (this.argumentNames.indexOf(name) > -1) {'#10'        re'
  +'tArr.push(`bool(user_${name})`);'#10'      } else {'#10'        retArr.push'
  +'(`user_${name}`);'#10'      }'#10'    } else {'#10'      retArr.push(`user_'
  +'${name}`);'#10'    }'#10#10'    return retArr;'#10'  }'#10'}'#10#10'module.'
  +'exports = {'#10'  WebGL2FunctionNode'#10'};'#10'},{"../../utils":114,"../we'
  +'b-gl/function-node":38}],74:[function(require,module,exports){'#10'const { '
  +'WebGL2KernelValueBoolean } = require(''./kernel-value/boolean'');'#10'const'
  +' { WebGL2KernelValueFloat } = require(''./kernel-value/float'');'#10'const '
  +'{ WebGL2KernelValueInteger } = require(''./kernel-value/integer'');'#10#10
  +'const { WebGL2KernelValueHTMLImage } = require(''./kernel-value/html-image'
  +''');'#10'const { WebGL2KernelValueDynamicHTMLImage } = require(''./kernel-v'
  +'alue/dynamic-html-image'');'#10#10'const { WebGL2KernelValueHTMLImageArray '
  +'} = require(''./kernel-value/html-image-array'');'#10'const { WebGL2KernelV'
  +'alueDynamicHTMLImageArray } = require(''./kernel-value/dynamic-html-image-a'
  +'rray'');'#10#10'const { WebGL2KernelValueHTMLVideo } = require(''./kernel-v'
  +'alue/html-video'');'#10'const { WebGL2KernelValueDynamicHTMLVideo } = requi'
  +'re(''./kernel-value/dynamic-html-video'');'#10#10'const { WebGL2KernelValue'
  +'SingleInput } = require(''./kernel-value/single-input'');'#10'const { WebGL'
  +'2KernelValueDynamicSingleInput } = require(''./kernel-value/dynamic-single-'
  +'input'');'#10#10'const { WebGL2KernelValueUnsignedInput } = require(''./ker'
  +'nel-value/unsigned-input'');'#10'const { WebGL2KernelValueDynamicUnsignedIn'
  +'put } = require(''./kernel-value/dynamic-unsigned-input'');'#10#10'const { '
  +'WebGL2KernelValueMemoryOptimizedNumberTexture } = require(''./kernel-value/'
  +'memory-optimized-number-texture'');'#10'const { WebGL2KernelValueDynamicMem'
  +'oryOptimizedNumberTexture } = require(''./kernel-value/dynamic-memory-optim'
  +'ized-number-texture'');'#10#10'const { WebGL2KernelValueNumberTexture } = r'
  +'equire(''./kernel-value/number-texture'');'#10'const { WebGL2KernelValueDyn'
  +'amicNumberTexture } = require(''./kernel-value/dynamic-number-texture'');'
  +#10#10'const { WebGL2KernelValueSingleArray } = require(''./kernel-value/sin'
  +'gle-array'');'#10'const { WebGL2KernelValueDynamicSingleArray } = require('
  +'''./kernel-value/dynamic-single-array'');'#10#10'const { WebGL2KernelValueS'
  +'ingleArray1DI } = require(''./kernel-value/single-array1d-i'');'#10'const {'
  +' WebGL2KernelValueDynamicSingleArray1DI } = require(''./kernel-value/dynami'
  +'c-single-array1d-i'');'#10#10'const { WebGL2KernelValueSingleArray2DI } = r'
  +'equire(''./kernel-value/single-array2d-i'');'#10'const { WebGL2KernelValueD'
  +'ynamicSingleArray2DI } = require(''./kernel-value/dynamic-single-array2d-i'
  ,''');'#10#10'const { WebGL2KernelValueSingleArray3DI } = require(''./kernel-'
  +'value/single-array3d-i'');'#10'const { WebGL2KernelValueDynamicSingleArray3'
  +'DI } = require(''./kernel-value/dynamic-single-array3d-i'');'#10#10'const {'
  +' WebGL2KernelValueSingleArray2 } = require(''./kernel-value/single-array2'''
  +');'#10'const { WebGL2KernelValueSingleArray3 } = require(''./kernel-value/s'
  +'ingle-array3'');'#10'const { WebGL2KernelValueSingleArray4 } = require(''./'
  +'kernel-value/single-array4'');'#10#10'const { WebGL2KernelValueUnsignedArra'
  +'y } = require(''./kernel-value/unsigned-array'');'#10'const { WebGL2KernelV'
  +'alueDynamicUnsignedArray } = require(''./kernel-value/dynamic-unsigned-arra'
  +'y'');'#10#10'const kernelValueMaps = {'#10'  unsigned: {'#10'    dynamic: {'
  +#10'      ''Boolean'': WebGL2KernelValueBoolean,'#10'      ''Integer'': WebG'
  +'L2KernelValueInteger,'#10'      ''Float'': WebGL2KernelValueFloat,'#10'    '
  +'  ''Array'': WebGL2KernelValueDynamicUnsignedArray,'#10'      ''Array(2)'':'
  +' false,'#10'      ''Array(3)'': false,'#10'      ''Array(4)'': false,'#10' '
  +'     ''Array1D(2)'': false,'#10'      ''Array1D(3)'': false,'#10'      ''Ar'
  +'ray1D(4)'': false,'#10'      ''Array2D(2)'': false,'#10'      ''Array2D(3)'
  +''': false,'#10'      ''Array2D(4)'': false,'#10'      ''Array3D(2)'': false'
  +','#10'      ''Array3D(3)'': false,'#10'      ''Array3D(4)'': false,'#10'   '
  +'   ''Input'': WebGL2KernelValueDynamicUnsignedInput,'#10'      ''NumberText'
  +'ure'': WebGL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(1)'''
  +': WebGL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(2)'': Web'
  +'GL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL2Ke'
  +'rnelValueDynamicNumberTexture,'#10'      ''ArrayTexture(4)'': WebGL2KernelV'
  +'alueDynamicNumberTexture,'#10'      ''MemoryOptimizedNumberTexture'': WebGL'
  +'2KernelValueDynamicMemoryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': '
  +'WebGL2KernelValueDynamicHTMLImage,'#10'      ''HTMLImage'': WebGL2KernelVal'
  +'ueDynamicHTMLImage,'#10'      ''HTMLImageArray'': WebGL2KernelValueDynamicH'
  +'TMLImageArray,'#10'      ''HTMLVideo'': WebGL2KernelValueDynamicHTMLVideo,'
  +#10'    },'#10'    static: {'#10'      ''Boolean'': WebGL2KernelValueBoolean'
  +','#10'      ''Float'': WebGL2KernelValueFloat,'#10'      ''Integer'': WebGL'
  +'2KernelValueInteger,'#10'      ''Array'': WebGL2KernelValueUnsignedArray,'
  +#10'      ''Array(2)'': false,'#10'      ''Array(3)'': false,'#10'      ''Ar'
  +'ray(4)'': false,'#10'      ''Array1D(2)'': false,'#10'      ''Array1D(3)'':'
  +' false,'#10'      ''Array1D(4)'': false,'#10'      ''Array2D(2)'': false,'
  +#10'      ''Array2D(3)'': false,'#10'      ''Array2D(4)'': false,'#10'      '
  +'''Array3D(2)'': false,'#10'      ''Array3D(3)'': false,'#10'      ''Array3D'
  +'(4)'': false,'#10'      ''Input'': WebGL2KernelValueUnsignedInput,'#10'    '
  +'  ''NumberTexture'': WebGL2KernelValueNumberTexture,'#10'      ''ArrayTextu'
  +'re(1)'': WebGL2KernelValueNumberTexture,'#10'      ''ArrayTexture(2)'': Web'
  +'GL2KernelValueNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL2KernelVal'
  +'ueNumberTexture,'#10'      ''ArrayTexture(4)'': WebGL2KernelValueNumberText'
  +'ure,'#10'      ''MemoryOptimizedNumberTexture'': WebGL2KernelValueDynamicMe'
  +'moryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': WebGL2KernelValueHTML'
  +'Image,'#10'      ''HTMLImage'': WebGL2KernelValueHTMLImage,'#10'      ''HTM'
  +'LImageArray'': WebGL2KernelValueHTMLImageArray,'#10'      ''HTMLVideo'': We'
  +'bGL2KernelValueHTMLVideo,'#10'    }'#10'  },'#10'  single: {'#10'    dynami'
  +'c: {'#10'      ''Boolean'': WebGL2KernelValueBoolean,'#10'      ''Integer'''
  +': WebGL2KernelValueInteger,'#10'      ''Float'': WebGL2KernelValueFloat,'#10
  +'      ''Array'': WebGL2KernelValueDynamicSingleArray,'#10'      ''Array(2)'
  +''': WebGL2KernelValueSingleArray2,'#10'      ''Array(3)'': WebGL2KernelValu'
  +'eSingleArray3,'#10'      ''Array(4)'': WebGL2KernelValueSingleArray4,'#10' '
  +'     ''Array1D(2)'': WebGL2KernelValueDynamicSingleArray1DI,'#10'      ''Ar'
  +'ray1D(3)'': WebGL2KernelValueDynamicSingleArray1DI,'#10'      ''Array1D(4)'
  +''': WebGL2KernelValueDynamicSingleArray1DI,'#10'      ''Array2D(2)'': WebGL'
  +'2KernelValueDynamicSingleArray2DI,'#10'      ''Array2D(3)'': WebGL2KernelVa'
  +'lueDynamicSingleArray2DI,'#10'      ''Array2D(4)'': WebGL2KernelValueDynami'
  +'cSingleArray2DI,'#10'      ''Array3D(2)'': WebGL2KernelValueDynamicSingleAr'
  +'ray3DI,'#10'      ''Array3D(3)'': WebGL2KernelValueDynamicSingleArray3DI,'
  +#10'      ''Array3D(4)'': WebGL2KernelValueDynamicSingleArray3DI,'#10'      '
  +'''Input'': WebGL2KernelValueDynamicSingleInput,'#10'      ''NumberTexture'''
  +': WebGL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(1)'': Web'
  +'GL2KernelValueDynamicNumberTexture,'#10'      ''ArrayTexture(2)'': WebGL2Ke'
  +'rnelValueDynamicNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL2KernelV'
  +'alueDynamicNumberTexture,'#10'      ''ArrayTexture(4)'': WebGL2KernelValueD'
  ,'ynamicNumberTexture,'#10'      ''MemoryOptimizedNumberTexture'': WebGL2Kern'
  +'elValueDynamicMemoryOptimizedNumberTexture,'#10'      ''HTMLCanvas'': WebGL'
  +'2KernelValueDynamicHTMLImage,'#10'      ''HTMLImage'': WebGL2KernelValueDyn'
  +'amicHTMLImage,'#10'      ''HTMLImageArray'': WebGL2KernelValueDynamicHTMLIm'
  +'ageArray,'#10'      ''HTMLVideo'': WebGL2KernelValueDynamicHTMLVideo,'#10' '
  +'   },'#10'    static: {'#10'      ''Boolean'': WebGL2KernelValueBoolean,'#10
  +'      ''Float'': WebGL2KernelValueFloat,'#10'      ''Integer'': WebGL2Kerne'
  +'lValueInteger,'#10'      ''Array'': WebGL2KernelValueSingleArray,'#10'     '
  +' ''Array(2)'': WebGL2KernelValueSingleArray2,'#10'      ''Array(3)'': WebGL'
  +'2KernelValueSingleArray3,'#10'      ''Array(4)'': WebGL2KernelValueSingleAr'
  +'ray4,'#10'      ''Array1D(2)'': WebGL2KernelValueSingleArray1DI,'#10'      '
  +'''Array1D(3)'': WebGL2KernelValueSingleArray1DI,'#10'      ''Array1D(4)'': '
  +'WebGL2KernelValueSingleArray1DI,'#10'      ''Array2D(2)'': WebGL2KernelValu'
  +'eSingleArray2DI,'#10'      ''Array2D(3)'': WebGL2KernelValueSingleArray2DI,'
  +#10'      ''Array2D(4)'': WebGL2KernelValueSingleArray2DI,'#10'      ''Array'
  +'3D(2)'': WebGL2KernelValueSingleArray3DI,'#10'      ''Array3D(3)'': WebGL2K'
  +'ernelValueSingleArray3DI,'#10'      ''Array3D(4)'': WebGL2KernelValueSingle'
  +'Array3DI,'#10'      ''Input'': WebGL2KernelValueSingleInput,'#10'      ''Nu'
  +'mberTexture'': WebGL2KernelValueNumberTexture,'#10'      ''ArrayTexture(1)'
  +''': WebGL2KernelValueNumberTexture,'#10'      ''ArrayTexture(2)'': WebGL2Ke'
  +'rnelValueNumberTexture,'#10'      ''ArrayTexture(3)'': WebGL2KernelValueNum'
  +'berTexture,'#10'      ''ArrayTexture(4)'': WebGL2KernelValueNumberTexture,'
  +#10'      ''MemoryOptimizedNumberTexture'': WebGL2KernelValueMemoryOptimized'
  +'NumberTexture,'#10'      ''HTMLCanvas'': WebGL2KernelValueHTMLImage,'#10'  '
  +'    ''HTMLImage'': WebGL2KernelValueHTMLImage,'#10'      ''HTMLImageArray'''
  +': WebGL2KernelValueHTMLImageArray,'#10'      ''HTMLVideo'': WebGL2KernelVal'
  +'ueHTMLVideo,'#10'    }'#10'  },'#10'};'#10#10'function lookupKernelValueTyp'
  +'e(type, dynamic, precision, value) {'#10'  if (!type) {'#10'    throw new E'
  +'rror(''type missing'');'#10'  }'#10'  if (!dynamic) {'#10'    throw new Err'
  +'or(''dynamic missing'');'#10'  }'#10'  if (!precision) {'#10'    throw new '
  +'Error(''precision missing'');'#10'  }'#10'  if (value.type) {'#10'    type '
  +'= value.type;'#10'  }'#10'  const types = kernelValueMaps[precision][dynami'
  +'c];'#10'  if (types[type] === false) {'#10'    return null;'#10'  } else if'
  +' (types[type] === undefined) {'#10'    throw new Error(`Could not find a Ke'
  +'rnelValue for ${ type }`);'#10'  }'#10'  return types[type];'#10'}'#10#10'm'
  +'odule.exports = {'#10'  kernelValueMaps,'#10'  lookupKernelValueType'#10'};'
  +#10'},{"./kernel-value/boolean":75,"./kernel-value/dynamic-html-image":77,".'
  +'/kernel-value/dynamic-html-image-array":76,"./kernel-value/dynamic-html-vid'
  +'eo":78,"./kernel-value/dynamic-memory-optimized-number-texture":79,"./kerne'
  +'l-value/dynamic-number-texture":80,"./kernel-value/dynamic-single-array":81'
  +',"./kernel-value/dynamic-single-array1d-i":82,"./kernel-value/dynamic-singl'
  +'e-array2d-i":83,"./kernel-value/dynamic-single-array3d-i":84,"./kernel-valu'
  +'e/dynamic-single-input":85,"./kernel-value/dynamic-unsigned-array":86,"./ke'
  +'rnel-value/dynamic-unsigned-input":87,"./kernel-value/float":88,"./kernel-v'
  +'alue/html-image":90,"./kernel-value/html-image-array":89,"./kernel-value/ht'
  +'ml-video":91,"./kernel-value/integer":92,"./kernel-value/memory-optimized-n'
  +'umber-texture":93,"./kernel-value/number-texture":94,"./kernel-value/single'
  +'-array":95,"./kernel-value/single-array1d-i":96,"./kernel-value/single-arra'
  +'y2":97,"./kernel-value/single-array2d-i":98,"./kernel-value/single-array3":'
  +'99,"./kernel-value/single-array3d-i":100,"./kernel-value/single-array4":101'
  +',"./kernel-value/single-input":102,"./kernel-value/unsigned-array":103,"./k'
  +'ernel-value/unsigned-input":104}],75:[function(require,module,exports){'#10
  +'const { WebGLKernelValueBoolean } = require(''../../web-gl/kernel-value/boo'
  +'lean'');'#10#10'class WebGL2KernelValueBoolean extends WebGLKernelValueBool'
  +'ean {}'#10#10'module.exports = {'#10'  WebGL2KernelValueBoolean'#10'};'#10
  +'},{"../../web-gl/kernel-value/boolean":41}],76:[function(require,module,exp'
  +'orts){'#10'const { utils } = require(''../../../utils'');'#10'const { WebGL'
  +'2KernelValueHTMLImageArray } = require(''./html-image-array'');'#10#10'clas'
  +'s WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImage'
  +'Array {'#10'  getSource() {'#10'    const variablePrecision = this.getVaria'
  +'blePrecisionString();'#10'    return utils.linesToString(['#10'      `unifo'
  +'rm ${ variablePrecision } sampler2DArray ${this.id}`,'#10'      `uniform ${'
  +' variablePrecision } ivec2 ${this.sizeId}`,'#10'      `uniform ${ variableP'
  +'recision } ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  update'
  ,'Value(images) {'#10'    const { width, height } = images[0];'#10'    this.c'
  +'heckSize(width, height);'#10'    this.dimensions = [width, height, images.l'
  +'ength];'#10'    this.textureSize = [width, height];'#10'    this.kernel.set'
  +'Uniform3iv(this.dimensionsId, this.dimensions);'#10'    this.kernel.setUnif'
  +'orm2iv(this.sizeId, this.textureSize);'#10'    super.updateValue(images);'
  +#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueDynamicHTMLIm'
  +'ageArray'#10'};'#10'},{"../../../utils":114,"./html-image-array":89}],77:[f'
  +'unction(require,module,exports){'#10'const { utils } = require(''../../../u'
  +'tils'');'#10'const { WebGLKernelValueDynamicHTMLImage } = require(''../../w'
  +'eb-gl/kernel-value/dynamic-html-image'');'#10#10'class WebGL2KernelValueDyn'
  +'amicHTMLImage extends WebGLKernelValueDynamicHTMLImage {'#10'  getSource() '
  +'{'#10'    const variablePrecision = this.getVariablePrecisionString();'#10
  +'    return utils.linesToString(['#10'      `uniform ${ variablePrecision } '
  +'sampler2D ${this.id}`,'#10'      `uniform ${ variablePrecision } ivec2 ${th'
  +'is.sizeId}`,'#10'      `uniform ${ variablePrecision } ivec3 ${this.dimensi'
  +'onsId}`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2Ke'
  +'rnelValueDynamicHTMLImage'#10'};'#10'},{"../../../utils":114,"../../web-gl/'
  +'kernel-value/dynamic-html-image":42}],78:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGL2KernelV'
  +'alueDynamicHTMLImage } = require(''./dynamic-html-image'');'#10#10'class We'
  +'bGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {'
  +'}'#10#10'module.exports = {'#10'  WebGL2KernelValueDynamicHTMLVideo'#10'};'
  +#10'},{"../../../utils":114,"./dynamic-html-image":77}],79:[function(require'
  +',module,exports){'#10'const { utils } = require(''../../../utils'');'#10'co'
  +'nst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require(''../'
  +'../web-gl/kernel-value/dynamic-memory-optimized-number-texture'');'#10#10'c'
  +'lass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKern'
  +'elValueDynamicMemoryOptimizedNumberTexture {'#10'  getSource() {'#10'    re'
  +'turn utils.linesToString(['#10'      `uniform sampler2D ${this.id}`,'#10'  '
  +'    `uniform ivec2 ${this.sizeId}`,'#10'      `uniform ivec3 ${this.dimensi'
  +'onsId}`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2Ke'
  +'rnelValueDynamicMemoryOptimizedNumberTexture'#10'};'#10'},{"../../../utils"'
  +':114,"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture":44'
  +'}],80:[function(require,module,exports){'#10'const { utils } = require(''..'
  +'/../../utils'');'#10'const { WebGLKernelValueDynamicNumberTexture } = requi'
  +'re(''../../web-gl/kernel-value/dynamic-number-texture'');'#10#10'class WebG'
  +'L2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberText'
  +'ure {'#10'  getSource() {'#10'    const variablePrecision = this.getVariabl'
  +'ePrecisionString();'#10'    return utils.linesToString(['#10'      `uniform'
  +' ${ variablePrecision } sampler2D ${this.id}`,'#10'      `uniform ${ variab'
  +'lePrecision } ivec2 ${this.sizeId}`,'#10'      `uniform ${ variablePrecisio'
  +'n } ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10'}'#10#10'module.ex'
  +'ports = {'#10'  WebGL2KernelValueDynamicNumberTexture'#10'};'#10'},{"../../'
  +'../utils":114,"../../web-gl/kernel-value/dynamic-number-texture":45}],81:[f'
  +'unction(require,module,exports){'#10'const { utils } = require(''../../../u'
  +'tils'');'#10'const { WebGL2KernelValueSingleArray } = require(''../../web-g'
  +'l2/kernel-value/single-array'');'#10#10'class WebGL2KernelValueDynamicSingl'
  +'eArray extends WebGL2KernelValueSingleArray {'#10'  getSource() {'#10'    c'
  +'onst variablePrecision = this.getVariablePrecisionString();'#10'    return '
  +'utils.linesToString(['#10'      `uniform ${ variablePrecision } sampler2D $'
  +'{this.id}`,'#10'      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`'
  +','#10'      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,'#10
  +'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.dimensions = uti'
  +'ls.getDimensions(value, true);'#10'    this.textureSize = utils.getMemoryOp'
  +'timizedFloatTextureSize(this.dimensions, this.bitRatio);'#10'    this.uploa'
  +'dArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;'
  +#10'    this.checkSize(this.textureSize[0], this.textureSize[1]);'#10'    th'
  +'is.uploadValue = new Float32Array(this.uploadArrayLength);'#10'    this.ker'
  +'nel.setUniform3iv(this.dimensionsId, this.dimensions);'#10'    this.kernel.'
  +'setUniform2iv(this.sizeId, this.textureSize);'#10'    super.updateValue(val'
  +'ue);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueDynamic'
  +'SingleArray'#10'};'#10'},{"../../../utils":114,"../../web-gl2/kernel-value/'
  +'single-array":95}],82:[function(require,module,exports){'#10'const { utils '
  +'} = require(''../../../utils'');'#10'const { WebGL2KernelValueSingleArray1D'
  ,'I } = require(''../../web-gl2/kernel-value/single-array1d-i'');'#10#10'clas'
  +'s WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArr'
  +'ay1DI {'#10'  getSource() {'#10'    const variablePrecision = this.getVaria'
  +'blePrecisionString();'#10'    return utils.linesToString(['#10'      `unifo'
  +'rm ${ variablePrecision } sampler2D ${this.id}`,'#10'      `uniform ${ vari'
  +'ablePrecision } ivec2 ${this.sizeId}`,'#10'      `uniform ${ variablePrecis'
  +'ion } ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue'
  +'(value) {'#10'    this.setShape(value);'#10'    this.kernel.setUniform3iv(t'
  +'his.dimensionsId, this.dimensions);'#10'    this.kernel.setUniform2iv(this.'
  +'sizeId, this.textureSize);'#10'    super.updateValue(value);'#10'  }'#10'}'
  +#10#10'module.exports = {'#10'  WebGL2KernelValueDynamicSingleArray1DI'#10'}'
  +';'#10'},{"../../../utils":114,"../../web-gl2/kernel-value/single-array1d-i"'
  +':96}],83:[function(require,module,exports){'#10'const { utils } = require('
  +'''../../../utils'');'#10'const { WebGL2KernelValueSingleArray2DI } = requir'
  +'e(''../../web-gl2/kernel-value/single-array2d-i'');'#10#10'class WebGL2Kern'
  +'elValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {'#10
  +'  getSource() {'#10'    const variablePrecision = this.getVariablePrecision'
  +'String();'#10'    return utils.linesToString(['#10'      `uniform ${ variab'
  +'lePrecision } sampler2D ${this.id}`,'#10'      `uniform ${ variablePrecisio'
  +'n } ivec2 ${this.sizeId}`,'#10'      `uniform ${ variablePrecision } ivec3 '
  +'${this.dimensionsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10
  +'    this.setShape(value);'#10'    this.kernel.setUniform3iv(this.dimensions'
  +'Id, this.dimensions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.t'
  +'extureSize);'#10'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.'
  +'exports = {'#10'  WebGL2KernelValueDynamicSingleArray2DI'#10'};'#10'},{"../'
  +'../../utils":114,"../../web-gl2/kernel-value/single-array2d-i":98}],84:[fun'
  +'ction(require,module,exports){'#10'const { utils } = require(''../../../uti'
  +'ls'');'#10'const { WebGL2KernelValueSingleArray3DI } = require(''../../web-'
  +'gl2/kernel-value/single-array3d-i'');'#10#10'class WebGL2KernelValueDynamic'
  +'SingleArray3DI extends WebGL2KernelValueSingleArray3DI {'#10'  getSource() '
  +'{'#10'    const variablePrecision = this.getVariablePrecisionString();'#10
  +'    return utils.linesToString(['#10'      `uniform ${ variablePrecision } '
  +'sampler2D ${this.id}`,'#10'      `uniform ${ variablePrecision } ivec2 ${th'
  +'is.sizeId}`,'#10'      `uniform ${ variablePrecision } ivec3 ${this.dimensi'
  +'onsId}`,'#10'    ]);'#10'  }'#10#10'  updateValue(value) {'#10'    this.set'
  +'Shape(value);'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dim'
  +'ensions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'
  +#10'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGL2KernelValueDynamicSingleArray3DI'#10'};'#10'},{"../../../utils":114'
  +',"../../web-gl2/kernel-value/single-array3d-i":100}],85:[function(require,m'
  +'odule,exports){'#10'const { utils } = require(''../../../utils'');'#10'cons'
  +'t { WebGL2KernelValueSingleInput } = require(''../../web-gl2/kernel-value/s'
  +'ingle-input'');'#10#10'class WebGL2KernelValueDynamicSingleInput extends We'
  +'bGL2KernelValueSingleInput {'#10'  getSource() {'#10'    const variablePrec'
  +'ision = this.getVariablePrecisionString();'#10'    return utils.linesToStri'
  +'ng(['#10'      `uniform ${ variablePrecision } sampler2D ${this.id}`,'#10' '
  +'     `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,'#10'      `unif'
  +'orm ${ variablePrecision } ivec3 ${this.dimensionsId}`,'#10'    ]);'#10'  }'
  +#10#10'  updateValue(value) {'#10'    let [w, h, d] = value.size;'#10'    th'
  +'is.dimensions = new Int32Array([w || 1, h || 1, d || 1]);'#10'    this.text'
  +'ureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bi'
  +'tRatio);'#10'    this.uploadArrayLength = this.textureSize[0] * this.textur'
  +'eSize[1] * this.bitRatio;'#10'    this.checkSize(this.textureSize[0], this.'
  +'textureSize[1]);'#10'    this.uploadValue = new Float32Array(this.uploadArr'
  +'ayLength);'#10'    this.kernel.setUniform3iv(this.dimensionsId, this.dimens'
  +'ions);'#10'    this.kernel.setUniform2iv(this.sizeId, this.textureSize);'#10
  +'    super.updateValue(value);'#10'  }'#10'}'#10#10'module.exports = {'#10' '
  +' WebGL2KernelValueDynamicSingleInput'#10'};'#10'},{"../../../utils":114,"..'
  +'/../web-gl2/kernel-value/single-input":102}],86:[function(require,module,ex'
  +'ports){'#10'const { utils } = require(''../../../utils'');'#10'const { WebG'
  +'LKernelValueDynamicUnsignedArray } = require(''../../web-gl/kernel-value/dy'
  +'namic-unsigned-array'');'#10#10'class WebGL2KernelValueDynamicUnsignedArray'
  +' extends WebGLKernelValueDynamicUnsignedArray {'#10'  getSource() {'#10'   '
  +' const variablePrecision = this.getVariablePrecisionString();'#10'    retur'
  ,'n utils.linesToString(['#10'      `uniform ${ variablePrecision } sampler2D'
  +' ${this.id}`,'#10'      `uniform ${ variablePrecision } ivec2 ${this.sizeId'
  +'}`,'#10'      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,'
  +#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueD'
  +'ynamicUnsignedArray'#10'};'#10'},{"../../../utils":114,"../../web-gl/kernel'
  +'-value/dynamic-unsigned-array":51}],87:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelVa'
  +'lueDynamicUnsignedInput } = require(''../../web-gl/kernel-value/dynamic-uns'
  +'igned-input'');'#10#10'class WebGL2KernelValueDynamicUnsignedInput extends '
  +'WebGLKernelValueDynamicUnsignedInput {'#10'  getSource() {'#10'    const va'
  +'riablePrecision = this.getVariablePrecisionString();'#10'    return utils.l'
  +'inesToString(['#10'      `uniform ${ variablePrecision } sampler2D ${this.i'
  +'d}`,'#10'      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,'#10' '
  +'     `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,'#10'    ]'
  +');'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueDynamicUn'
  +'signedInput'#10'};'#10'},{"../../../utils":114,"../../web-gl/kernel-value/d'
  +'ynamic-unsigned-input":52}],88:[function(require,module,exports){'#10'const'
  +' { utils } = require(''../../../utils'');'#10'const { WebGLKernelValueFloat'
  +' } = require(''../../web-gl/kernel-value/float'');'#10#10'class WebGL2Kerne'
  +'lValueFloat extends WebGLKernelValueFloat {}'#10#10'module.exports = {'#10
  +'  WebGL2KernelValueFloat'#10'};'#10'},{"../../../utils":114,"../../web-gl/k'
  +'ernel-value/float":53}],89:[function(require,module,exports){'#10'const { u'
  +'tils } = require(''../../../utils'');'#10'const { WebGLKernelArray } = requ'
  +'ire(''../../web-gl/kernel-value/array'');'#10#10'class WebGL2KernelValueHTM'
  +'LImageArray extends WebGLKernelArray {'#10'  constructor(value, settings) {'
  +#10'    super(value, settings);'#10'    this.checkSize(value[0].width, value'
  +'[0].height);'#10'    this.dimensions = [value[0].width, value[0].height, va'
  +'lue.length];'#10'    this.textureSize = [value[0].width, value[0].height];'
  +#10'  }'#10'  defineTexture() {'#10'    const { context: gl } = this;'#10'  '
  +'  gl.activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2'
  +'D_ARRAY, this.texture);'#10'    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TE'
  +'XTURE_MAG_FILTER, gl.NEAREST);'#10'    gl.texParameteri(gl.TEXTURE_2D_ARRAY'
  +', gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'  }'#10#10'  getStringValueHandle'
  +'r() {'#10'    return `const uploadValue_${this.name} = ${this.varName};\n`;'
  +#10'  }'#10'  getSource() {'#10'    const variablePrecision = this.getVariab'
  +'lePrecisionString();'#10'    return utils.linesToString(['#10'      `unifor'
  +'m ${ variablePrecision } sampler2DArray ${this.id}`,'#10'      `${ variable'
  +'Precision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.tex'
  +'tureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${this.dimensionsId'
  +'} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2'
  +']})`,'#10'    ]);'#10'  }'#10#10'  updateValue(images) {'#10'    const { co'
  +'ntext: gl } = this;'#10'    gl.activeTexture(this.contextHandle);'#10'    g'
  +'l.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);'#10'    gl.pixelStorei(gl'
  +'.UNPACK_FLIP_Y_WEBGL, true);'#10'    gl.texImage3D('#10'      gl.TEXTURE_2D'
  +'_ARRAY,'#10'      0,'#10'      gl.RGBA,'#10'      images[0].width,'#10'    '
  +'  images[0].height,'#10'      images.length,'#10'      0,'#10'      gl.RGBA'
  +','#10'      gl.UNSIGNED_BYTE,'#10'      null'#10'    );'#10'    for (let i '
  +'= 0; i < images.length; i++) {'#10'      const xOffset = 0;'#10'      const'
  +' yOffset = 0;'#10'      const imageDepth = 1;'#10'      gl.texSubImage3D('
  +#10'        gl.TEXTURE_2D_ARRAY,'#10'        0,'#10'        xOffset,'#10'   '
  +'     yOffset,'#10'        i,'#10'        images[i].width,'#10'        image'
  +'s[i].height,'#10'        imageDepth,'#10'        gl.RGBA,'#10'        gl.UN'
  +'SIGNED_BYTE,'#10'        this.uploadValue = images[i]'#10'      );'#10'    '
  +'}'#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  }'#10'}'#10
  +#10'module.exports = {'#10'  WebGL2KernelValueHTMLImageArray'#10'};'#10'},{"'
  +'../../../utils":114,"../../web-gl/kernel-value/array":40}],90:[function(req'
  +'uire,module,exports){'#10'const { utils } = require(''../../../utils'');'#10
  +'const { WebGLKernelValueHTMLImage } = require(''../../web-gl/kernel-value/h'
  +'tml-image'');'#10#10'class WebGL2KernelValueHTMLImage extends WebGLKernelVa'
  +'lueHTMLImage {'#10'  getSource() {'#10'    const variablePrecision = this.g'
  +'etVariablePrecisionString();'#10'    return utils.linesToString(['#10'     '
  +' `uniform ${ variablePrecision } sampler2D ${this.id}`,'#10'      `${ varia'
  +'blePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.'
  +'textureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${this.dimension'
  ,'sId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimension'
  +'s[2]})`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2Ke'
  +'rnelValueHTMLImage'#10'};'#10'},{"../../../utils":114,"../../web-gl/kernel-'
  +'value/html-image":54}],91:[function(require,module,exports){'#10'const { ut'
  +'ils } = require(''../../../utils'');'#10'const { WebGL2KernelValueHTMLImage'
  +' } = require(''./html-image'');'#10#10'class WebGL2KernelValueHTMLVideo ext'
  +'ends WebGL2KernelValueHTMLImage {}'#10#10'module.exports = {'#10'  WebGL2Ke'
  +'rnelValueHTMLVideo'#10'};'#10'},{"../../../utils":114,"./html-image":90}],9'
  +'2:[function(require,module,exports){'#10'const { WebGLKernelValueInteger } '
  +'= require(''../../web-gl/kernel-value/integer'');'#10#10'class WebGL2Kernel'
  +'ValueInteger extends WebGLKernelValueInteger {'#10'  getSource(value) {'#10
  +'    const variablePrecision = this.getVariablePrecisionString();'#10'    if'
  +' (this.origin === ''constants'') {'#10'      return `const ${ variablePreci'
  +'sion } int ${this.id} = ${ parseInt(value) };\n`;'#10'    }'#10'    return '
  +'`uniform ${ variablePrecision } int ${this.id};\n`;'#10'  }'#10#10'  update'
  +'Value(value) {'#10'    if (this.origin === ''constants'') return;'#10'    t'
  +'his.kernel.setUniform1i(this.id, this.uploadValue = value);'#10'  }'#10'}'
  +#10#10'module.exports = {'#10'  WebGL2KernelValueInteger'#10'};'#10'},{"../.'
  +'./web-gl/kernel-value/integer":57}],93:[function(require,module,exports){'
  +#10'const { utils } = require(''../../../utils'');'#10'const { WebGLKernelVa'
  +'lueMemoryOptimizedNumberTexture } = require(''../../web-gl/kernel-value/mem'
  +'ory-optimized-number-texture'');'#10#10'class WebGL2KernelValueMemoryOptimi'
  +'zedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {'#10
  +'  getSource() {'#10'    const { id, sizeId, textureSize, dimensionsId, dime'
  +'nsions } = this;'#10'    const variablePrecision = this.getVariablePrecisio'
  +'nString();'#10'    return utils.linesToString(['#10'      `uniform sampler2'
  +'D ${id}`,'#10'      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textu'
  +'reSize[0]}, ${textureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${'
  +'dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})'
  +'`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelVa'
  +'lueMemoryOptimizedNumberTexture'#10'};'#10'},{"../../../utils":114,"../../w'
  +'eb-gl/kernel-value/memory-optimized-number-texture":58}],94:[function(requi'
  +'re,module,exports){'#10'const { utils } = require(''../../../utils'');'#10
  +'const { WebGLKernelValueNumberTexture } = require(''../../web-gl/kernel-val'
  +'ue/number-texture'');'#10#10'class WebGL2KernelValueNumberTexture extends W'
  +'ebGLKernelValueNumberTexture {'#10'  getSource() {'#10'    const { id, size'
  +'Id, textureSize, dimensionsId, dimensions } = this;'#10'    const variableP'
  +'recision = this.getVariablePrecisionString();'#10'    return utils.linesToS'
  +'tring(['#10'      `uniform ${ variablePrecision } sampler2D ${id}`,'#10'   '
  +'   `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${tex'
  +'tureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${dimensionsId} = i'
  +'vec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,'#10'    ]);'#10
  +'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueNumberTexture'#10
  +'};'#10'},{"../../../utils":114,"../../web-gl/kernel-value/number-texture":5'
  +'9}],95:[function(require,module,exports){'#10'const { utils } = require(''.'
  +'./../../utils'');'#10'const { WebGLKernelValueSingleArray } = require(''../'
  +'../web-gl/kernel-value/single-array'');'#10#10'class WebGL2KernelValueSingl'
  +'eArray extends WebGLKernelValueSingleArray {'#10'  getSource() {'#10'    co'
  +'nst variablePrecision = this.getVariablePrecisionString();'#10'    return u'
  +'tils.linesToString(['#10'      `uniform ${ variablePrecision } sampler2D ${'
  +'this.id}`,'#10'      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2($'
  +'{this.textureSize[0]}, ${this.textureSize[1]})`,'#10'      `${ variablePrec'
  +'ision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.di'
  +'mensions[1]}, ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateV'
  +'alue(value) {'#10'    if (value.constructor !== this.initialValueConstructo'
  +'r) {'#10'      this.onUpdateValueMismatch(value.constructor);'#10'      ret'
  +'urn;'#10'    }'#10'    const { context: gl } = this;'#10'    utils.flattenT'
  +'o(value, this.uploadValue);'#10'    gl.activeTexture(this.contextHandle);'
  +#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei('
  +'gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.'
  +'RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, th'
  +'is.uploadValue);'#10'    this.kernel.setUniform1i(this.id, this.index);'#10
  +'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueSingleArray'#10
  +'};'#10'},{"../../../utils":114,"../../web-gl/kernel-value/single-array":60}'
  ,'],96:[function(require,module,exports){'#10'const { utils } = require(''../'
  +'../../utils'');'#10'const { WebGLKernelValueSingleArray1DI } = require(''..'
  +'/../web-gl/kernel-value/single-array1d-i'');'#10#10'class WebGL2KernelValue'
  +'SingleArray1DI extends WebGLKernelValueSingleArray1DI {'#10'  updateValue(v'
  +'alue) {'#10'    if (value.constructor !== this.initialValueConstructor) {'
  +#10'      this.onUpdateValueMismatch(value.constructor);'#10'      return;'
  +#10'    }'#10'    const { context: gl } = this;'#10'    utils.flattenTo(valu'
  +'e, this.uploadValue);'#10'    gl.activeTexture(this.contextHandle);'#10'   '
  +' gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei(gl.UNP'
  +'ACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32'
  +'F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.upl'
  +'oadValue);'#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  }'
  +#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueSingleArray1DI'#10'};'
  +#10'},{"../../../utils":114,"../../web-gl/kernel-value/single-array1d-i":61}'
  +'],97:[function(require,module,exports){'#10'const { WebGLKernelValueSingleA'
  +'rray2 } = require(''../../web-gl/kernel-value/single-array2'');'#10#10'clas'
  +'s WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}'#10
  +#10'module.exports = {'#10'  WebGL2KernelValueSingleArray2'#10'};'#10'},{"..'
  +'/../web-gl/kernel-value/single-array2":62}],98:[function(require,module,exp'
  +'orts){'#10'const { utils } = require(''../../../utils'');'#10'const { WebGL'
  +'KernelValueSingleArray2DI } = require(''../../web-gl/kernel-value/single-ar'
  +'ray2d-i'');'#10#10'class WebGL2KernelValueSingleArray2DI extends WebGLKerne'
  +'lValueSingleArray2DI {'#10'  updateValue(value) {'#10'    if (value.constru'
  +'ctor !== this.initialValueConstructor) {'#10'      this.onUpdateValueMismat'
  +'ch(value.constructor);'#10'      return;'#10'    }'#10'    const { context:'
  +' gl } = this;'#10'    utils.flattenTo(value, this.uploadValue);'#10'    gl.'
  +'activeTexture(this.contextHandle);'#10'    gl.bindTexture(gl.TEXTURE_2D, th'
  +'is.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'   '
  +' gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.text'
  +'ureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);'#10'    this.kernel.se'
  +'tUniform1i(this.id, this.index);'#10'  }'#10'}'#10#10'module.exports = {'#10
  +'  WebGL2KernelValueSingleArray2DI'#10'};'#10'},{"../../../utils":114,"../..'
  +'/web-gl/kernel-value/single-array2d-i":63}],99:[function(require,module,exp'
  +'orts){'#10'const { WebGLKernelValueSingleArray3 } = require(''../../web-gl/'
  +'kernel-value/single-array3'');'#10#10'class WebGL2KernelValueSingleArray3 e'
  +'xtends WebGLKernelValueSingleArray3 {}'#10#10'module.exports = {'#10'  WebG'
  +'L2KernelValueSingleArray3'#10'};'#10'},{"../../web-gl/kernel-value/single-a'
  +'rray3":64}],100:[function(require,module,exports){'#10'const { utils } = re'
  +'quire(''../../../utils'');'#10'const { WebGLKernelValueSingleArray3DI } = r'
  +'equire(''../../web-gl/kernel-value/single-array3d-i'');'#10#10'class WebGL2'
  +'KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {'#10'  up'
  +'dateValue(value) {'#10'    if (value.constructor !== this.initialValueConst'
  +'ructor) {'#10'      this.onUpdateValueMismatch(value.constructor);'#10'    '
  +'  return;'#10'    }'#10'    const { context: gl } = this;'#10'    utils.fla'
  +'ttenTo(value, this.uploadValue);'#10'    gl.activeTexture(this.contextHandl'
  +'e);'#10'    gl.bindTexture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelSt'
  +'orei(gl.UNPACK_FLIP_Y_WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0'
  +', gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOA'
  +'T, this.uploadValue);'#10'    this.kernel.setUniform1i(this.id, this.index)'
  +';'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2KernelValueSingleArra'
  +'y3DI'#10'};'#10'},{"../../../utils":114,"../../web-gl/kernel-value/single-a'
  +'rray3d-i":65}],101:[function(require,module,exports){'#10'const { WebGLKern'
  +'elValueSingleArray4 } = require(''../../web-gl/kernel-value/single-array4'''
  +');'#10#10'class WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingl'
  +'eArray4 {}'#10#10'module.exports = {'#10'  WebGL2KernelValueSingleArray4'#10
  +'};'#10'},{"../../web-gl/kernel-value/single-array4":66}],102:[function(requ'
  +'ire,module,exports){'#10'const { utils } = require(''../../../utils'');'#10
  +'const { WebGLKernelValueSingleInput } = require(''../../web-gl/kernel-value'
  +'/single-input'');'#10#10'class WebGL2KernelValueSingleInput extends WebGLKe'
  +'rnelValueSingleInput {'#10'  getSource() {'#10'    const variablePrecision '
  +'= this.getVariablePrecisionString();'#10'    return utils.linesToString(['
  +#10'      `uniform ${ variablePrecision } sampler2D ${this.id}`,'#10'      `'
  +'${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]},'
  +' ${this.textureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${this.d'
  ,'imensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.d'
  +'imensions[2]})`,'#10'    ]);'#10'  }'#10#10'  updateValue(input) {'#10'    '
  +'const { context: gl } = this;'#10'    utils.flattenTo(input.value, this.upl'
  +'oadValue);'#10'    gl.activeTexture(this.contextHandle);'#10'    gl.bindTex'
  +'ture(gl.TEXTURE_2D, this.texture);'#10'    gl.pixelStorei(gl.UNPACK_FLIP_Y_'
  +'WEBGL, false);'#10'    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.tex'
  +'tureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);'
  +#10'    this.kernel.setUniform1i(this.id, this.index);'#10'  }'#10'}'#10#10
  +'module.exports = {'#10'  WebGL2KernelValueSingleInput'#10'};'#10'},{"../../'
  +'../utils":114,"../../web-gl/kernel-value/single-input":67}],103:[function(r'
  +'equire,module,exports){'#10'const { utils } = require(''../../../utils'');'
  +#10'const { WebGLKernelValueUnsignedArray } = require(''../../web-gl/kernel-'
  +'value/unsigned-array'');'#10#10'class WebGL2KernelValueUnsignedArray extend'
  +'s WebGLKernelValueUnsignedArray {'#10'  getSource() {'#10'    const variabl'
  +'ePrecision = this.getVariablePrecisionString();'#10'    return utils.linesT'
  +'oString(['#10'      `uniform ${ variablePrecision } sampler2D ${this.id}`,'
  +#10'      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textur'
  +'eSize[0]}, ${this.textureSize[1]})`,'#10'      `${ variablePrecision } ivec'
  +'3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}'
  +', ${this.dimensions[2]})`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports '
  +'= {'#10'  WebGL2KernelValueUnsignedArray'#10'};'#10'},{"../../../utils":114'
  +',"../../web-gl/kernel-value/unsigned-array":68}],104:[function(require,modu'
  +'le,exports){'#10'const { utils } = require(''../../../utils'');'#10'const {'
  +' WebGLKernelValueUnsignedInput } = require(''../../web-gl/kernel-value/unsi'
  +'gned-input'');'#10#10'class WebGL2KernelValueUnsignedInput extends WebGLKer'
  +'nelValueUnsignedInput {'#10'  getSource() {'#10'    const variablePrecision'
  +' = this.getVariablePrecisionString();'#10'    return utils.linesToString(['
  +#10'      `uniform ${ variablePrecision } sampler2D ${this.id}`,'#10'      `'
  +'${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]},'
  +' ${this.textureSize[1]})`,'#10'      `${ variablePrecision } ivec3 ${this.d'
  +'imensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.d'
  +'imensions[2]})`,'#10'    ]);'#10'  }'#10'}'#10#10'module.exports = {'#10'  '
  +'WebGL2KernelValueUnsignedInput'#10'};'#10'},{"../../../utils":114,"../../we'
  +'b-gl/kernel-value/unsigned-input":69}],105:[function(require,module,exports'
  +'){'#10'const { WebGLKernel } = require(''../web-gl/kernel'');'#10'const { W'
  +'ebGL2FunctionNode } = require(''./function-node'');'#10'const { FunctionBui'
  +'lder } = require(''../function-builder'');'#10'const { utils } = require('''
  +'../../utils'');'#10'const { fragmentShader } = require(''./fragment-shader'
  +''');'#10'const { vertexShader } = require(''./vertex-shader'');'#10'const {'
  +' lookupKernelValueType } = require(''./kernel-value-maps'');'#10#10'let isS'
  +'upported = null;'#10'let testCanvas = null;'#10'let testContext = null;'#10
  +'let testExtensions = null;'#10#10'let features = null;'#10#10'class WebGL2K'
  +'ernel extends WebGLKernel {'#10'  static get isSupported() {'#10'    if (is'
  +'Supported !== null) {'#10'      return isSupported;'#10'    }'#10'    this.'
  +'setupFeatureChecks();'#10'    isSupported = this.isContextMatch(testContext'
  +');'#10'    return isSupported;'#10'  }'#10#10'  static setupFeatureChecks()'
  +' {'#10'    if (typeof document !== ''undefined'') {'#10'      testCanvas = '
  +'document.createElement(''canvas'');'#10'    } else if (typeof OffscreenCanv'
  +'as !== ''undefined'') {'#10'      testCanvas = new OffscreenCanvas(0, 0);'
  +#10'    }'#10'    if (!testCanvas) return;'#10'    testContext = testCanvas.'
  +'getContext(''webgl2'');'#10'    if (!testContext || !testContext.getExtensi'
  +'on) return;'#10'    testExtensions = {'#10'      EXT_color_buffer_float: te'
  +'stContext.getExtension(''EXT_color_buffer_float''),'#10'      OES_texture_f'
  +'loat_linear: testContext.getExtension(''OES_texture_float_linear''),'#10'  '
  +'  };'#10'    features = this.getFeatures();'#10'  }'#10#10'  static isConte'
  +'xtMatch(context) {'#10'    if (typeof WebGL2RenderingContext !== ''undefine'
  +'d'') {'#10'      return context instanceof WebGL2RenderingContext;'#10'    '
  +'}'#10'    return false;'#10'  }'#10#10'  static getFeatures() {'#10'    con'
  +'st gl = this.testContext;'#10'    return Object.freeze({'#10'      isFloatR'
  +'ead: this.getIsFloatRead(),'#10'      isIntegerDivisionAccurate: this.getIs'
  +'IntegerDivisionAccurate(),'#10'      isSpeedTacticSupported: this.getIsSpee'
  +'dTacticSupported(),'#10'      kernelMap: true,'#10'      isTextureFloat: tr'
  +'ue,'#10'      isDrawBuffers: true,'#10'      channelCount: this.getChannelC'
  +'ount(),'#10'      maxTextureSize: this.getMaxTextureSize(),'#10'      lowIn'
  ,'tPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),'#10
  +'      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl'
  +'.LOW_FLOAT),'#10'      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.F'
  +'RAGMENT_SHADER, gl.MEDIUM_INT),'#10'      mediumFloatPrecision: gl.getShade'
  +'rPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),'#10'      highIntPre'
  +'cision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),'#10' '
  +'     highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl'
  +'.HIGH_FLOAT),'#10'    });'#10'  }'#10#10'  static getIsTextureFloat() {'#10
  +'    return true;'#10'  }'#10#10'  static getChannelCount() {'#10'    return'
  +' testContext.getParameter(testContext.MAX_DRAW_BUFFERS);'#10'  }'#10#10'  s'
  +'tatic getMaxTextureSize() {'#10'    return testContext.getParameter(testCon'
  +'text.MAX_TEXTURE_SIZE);'#10'  }'#10#10'  static lookupKernelValueType(type,'
  +' dynamic, precision, value) {'#10'    return lookupKernelValueType(type, dy'
  +'namic, precision, value);'#10'  }'#10#10'  static get testCanvas() {'#10'  '
  +'  return testCanvas;'#10'  }'#10#10'  static get testContext() {'#10'    re'
  +'turn testContext;'#10'  }'#10#10'  static get features() {'#10'    return f'
  +'eatures;'#10'  }'#10#10'  static get fragmentShader() {'#10'    return frag'
  +'mentShader;'#10'  }'#10'  static get vertexShader() {'#10'    return vertex'
  +'Shader;'#10'  }'#10#10'  initContext() {'#10'    const settings = {'#10'   '
  +'   alpha: false,'#10'      depth: false,'#10'      antialias: false'#10'   '
  +' };'#10'    return this.canvas.getContext(''webgl2'', settings);'#10'  }'#10
  +#10'  initExtensions() {'#10'    this.extensions = {'#10'      EXT_color_buf'
  +'fer_float: this.context.getExtension(''EXT_color_buffer_float''),'#10'     '
  +' OES_texture_float_linear: this.context.getExtension(''OES_texture_float_li'
  +'near''),'#10'    };'#10'  }'#10#10'  validateSettings(args) {'#10'    if (!'
  +'this.validate) {'#10'      this.texSize = utils.getKernelTextureSize({'#10
  +'        optimizeFloatMemory: this.optimizeFloatMemory,'#10'        precisio'
  +'n: this.precision,'#10'      }, this.output);'#10'      return;'#10'    }'
  +#10#10'    const { features } = this.constructor;'#10'    if (this.precision'
  +' === ''single'' && !features.isFloatRead) {'#10'      throw new Error(''Flo'
  +'at texture outputs are not supported'');'#10'    } else if (!this.graphical'
  +' && this.precision === null) {'#10'      this.precision = features.isFloatR'
  +'ead ? ''single'' : ''unsigned'';'#10'    }'#10#10'    if (this.fixIntegerDi'
  +'visionAccuracy === null) {'#10'      this.fixIntegerDivisionAccuracy = !fea'
  +'tures.isIntegerDivisionAccurate;'#10'    } else if (this.fixIntegerDivision'
  +'Accuracy && features.isIntegerDivisionAccurate) {'#10'      this.fixInteger'
  +'DivisionAccuracy = false;'#10'    }'#10#10'    this.checkOutput();'#10#10' '
  +'   if (!this.output || this.output.length === 0) {'#10'      if (args.lengt'
  +'h !== 1) {'#10'        throw new Error(''Auto output only supported for ker'
  +'nels with only one input'');'#10'      }'#10#10'      const argType = utils'
  +'.getVariableType(args[0], this.strictIntegers);'#10'      switch (argType) '
  +'{'#10'        case ''Array'':'#10'          this.output = utils.getDimensio'
  +'ns(argType);'#10'          break;'#10'        case ''NumberTexture'':'#10' '
  +'       case ''MemoryOptimizedNumberTexture'':'#10'        case ''ArrayTextu'
  +'re(1)'':'#10'        case ''ArrayTexture(2)'':'#10'        case ''ArrayText'
  +'ure(3)'':'#10'        case ''ArrayTexture(4)'':'#10'          this.output ='
  +' args[0].output;'#10'          break;'#10'        default:'#10'          th'
  +'row new Error(''Auto output not supported for input type: '' + argType);'#10
  +'      }'#10'    }'#10#10'    if (this.graphical) {'#10'      if (this.outpu'
  +'t.length !== 2) {'#10'        throw new Error(''Output must have 2 dimensio'
  +'ns on graphical mode'');'#10'      }'#10#10'      if (this.precision === '''
  +'single'') {'#10'        console.warn(''Cannot use graphical mode and single'
  +' precision at the same time'');'#10'        this.precision = ''unsigned'';'
  +#10'      }'#10#10'      this.texSize = utils.clone(this.output);'#10'      '
  +'return;'#10'    } else if (!this.graphical && this.precision === null && fe'
  +'atures.isTextureFloat) {'#10'      this.precision = ''single'';'#10'    }'
  +#10#10'    this.texSize = utils.getKernelTextureSize({'#10'      optimizeFlo'
  +'atMemory: this.optimizeFloatMemory,'#10'      precision: this.precision,'#10
  +'    }, this.output);'#10#10'    this.checkTextureSize();'#10'  }'#10#10'  t'
  +'ranslateSource() {'#10'    const functionBuilder = FunctionBuilder.fromKern'
  +'el(this, WebGL2FunctionNode, {'#10'      fixIntegerDivisionAccuracy: this.f'
  +'ixIntegerDivisionAccuracy'#10'    });'#10'    this.translatedSource = funct'
  +'ionBuilder.getPrototypeString(''kernel'');'#10'    this.setupReturnTypes(fu'
  +'nctionBuilder);'#10'  }'#10#10'  drawBuffers() {'#10'    this.context.drawB'
  ,'uffers(this.drawBuffersMap);'#10'  }'#10#10'  getTextureFormat() {'#10'    '
  +'const { context: gl } = this;'#10'    switch (this.getInternalFormat()) {'
  +#10'      case gl.R32F:'#10'        return gl.RED;'#10'      case gl.RG32F:'
  +#10'        return gl.RG;'#10'      case gl.RGBA32F:'#10'        return gl.R'
  +'GBA;'#10'      case gl.RGBA:'#10'        return gl.RGBA;'#10'      default:'
  +#10'        throw new Error(''Unknown internal format'');'#10'    }'#10'  }'
  +#10'  getInternalFormat() {'#10'    const { context: gl } = this;'#10#10'   '
  +' if (this.precision === ''single'') {'#10'      if (this.pipeline) {'#10'  '
  +'      switch (this.returnType) {'#10'          case ''Number'':'#10'       '
  +'   case ''Float'':'#10'          case ''Integer'':'#10'            if (this'
  +'.optimizeFloatMemory) {'#10'              return gl.RGBA32F;'#10'          '
  +'  } else {'#10'              return gl.R32F;'#10'            }'#10'        '
  +'    case ''Array(2)'':'#10'              return gl.RG32F;'#10'            c'
  +'ase ''Array(3)'': '#10'            case ''Array(4)'':'#10'              ret'
  +'urn gl.RGBA32F;'#10'            default:'#10'              throw new Error('
  +'''Unhandled return type'');'#10'        }'#10'      }'#10'      return gl.R'
  +'GBA32F;'#10'    }'#10'    return gl.RGBA;'#10'  }'#10#10'  _setupOutputText'
  +'ure() {'#10'    const gl = this.context;'#10'    if (this.texture) {'#10'  '
  +'    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTUR'
  +'E_2D, this.texture.texture, 0);'#10'      return;'#10'    }'#10'    gl.bind'
  +'Framebuffer(gl.FRAMEBUFFER, this.framebuffer);'#10'    const texture = gl.c'
  +'reateTexture();'#10'    const texSize = this.texSize;'#10'    gl.activeText'
  +'ure(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);'
  +#10'    gl.bindTexture(gl.TEXTURE_2D, texture);'#10'    gl.texParameteri(gl.'
  +'TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);'#10'    gl.texParameteri(gl.TEXT'
  +'URE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);'#10'    gl.texParameteri(gl.TEXTURE_'
  +'2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#10'    gl.texParameteri(gl.TEXTURE'
  +'_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'#10'    const format = this.getInt'
  +'ernalFormat();'#10'    if (this.precision === ''single'') {'#10'      gl.te'
  +'xStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);'#10'    } els'
  +'e {'#10'      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1'
  +'], 0, format, gl.UNSIGNED_BYTE, null);'#10'    }'#10'    gl.framebufferText'
  +'ure2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);'#10
  +'    this.texture = new this.TextureConstructor({'#10'      texture,'#10'   '
  +'   size: texSize,'#10'      dimensions: this.threadDim,'#10'      output: t'
  +'his.output,'#10'      context: this.context,'#10'      internalFormat: this'
  +'.getInternalFormat(),'#10'      textureFormat: this.getTextureFormat(),'#10
  +'      kernel: this,'#10'    });'#10'  }'#10#10'  _setupSubOutputTextures() '
  +'{'#10'    const gl = this.context;'#10'    if (this.mappedTextures) {'#10' '
  +'     for (let i = 0; i < this.subKernels.length; i++) {'#10'        gl.fram'
  +'ebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2'
  +'D, this.mappedTextures[i].texture, 0);'#10'      }'#10'      return;'#10'  '
  +'  }'#10'    const texSize = this.texSize;'#10'    this.drawBuffersMap = [gl'
  +'.COLOR_ATTACHMENT0];'#10'    this.mappedTextures = [];'#10'    for (let i ='
  +' 0; i < this.subKernels.length; i++) {'#10'      const texture = this.creat'
  +'eTexture();'#10'      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1'
  +');'#10'      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + thi'
  +'s.argumentTextureCount + i);'#10'      gl.bindTexture(gl.TEXTURE_2D, textur'
  +'e);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_T'
  +'O_EDGE);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CL'
  +'AMP_TO_EDGE);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILT'
  +'ER, gl.NEAREST);'#10'      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_F'
  +'ILTER, gl.NEAREST);'#10'      const format = this.getInternalFormat();'#10
  +'      if (this.precision === ''single'') {'#10'        gl.texStorage2D(gl.T'
  +'EXTURE_2D, 1, format, texSize[0], texSize[1]);'#10'      } else {'#10'     '
  +'   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.R'
  +'GBA, gl.UNSIGNED_BYTE, null);'#10'      }'#10'      gl.framebufferTexture2D'
  +'(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);'
  +#10#10'      this.mappedTextures.push(new this.TextureConstructor({'#10'    '
  +'    texture,'#10'        size: texSize,'#10'        dimensions: this.thread'
  +'Dim,'#10'        output: this.output,'#10'        context: this.context,'#10
  +'        internalFormat: this.getInternalFormat(),'#10'        textureFormat'
  +': this.getTextureFormat(),'#10'        kernel: this,'#10'      }));'#10'   '
  +' }'#10'  }'#10#10'  _getHeaderString() {'#10'    return '''';'#10'  }'#10#10
  ,'  _getTextureCoordinate() {'#10'    const subKernels = this.subKernels;'#10
  +'    const variablePrecision = this.getVariablePrecisionString(this.texSize,'
  +' this.tactic);'#10'    if (subKernels === null || subKernels.length < 1) {'
  +#10'      return `in ${ variablePrecision } vec2 vTexCoord;\n`;'#10'    } el'
  +'se {'#10'      return `out ${ variablePrecision } vec2 vTexCoord;\n`;'#10' '
  +'   }'#10'  }'#10#10'  _getMainArgumentsString(args) {'#10'    const result '
  +'= [];'#10'    const argumentNames = this.argumentNames;'#10'    for (let i '
  +'= 0; i < argumentNames.length; i++) {'#10'      result.push(this.kernelArgu'
  +'ments[i].getSource(args[i]));'#10'    }'#10'    return result.join('''');'
  +#10'  }'#10#10'  getKernelString() {'#10'    const result = [this.getKernelR'
  +'esultDeclaration()];'#10'    const subKernels = this.subKernels;'#10'    if'
  +' (subKernels !== null) {'#10'      result.push('#10'        ''layout(locati'
  +'on = 0) out vec4 data0'''#10'      );'#10'      switch (this.returnType) {'
  +#10'        case ''Number'':'#10'        case ''Float'':'#10'        case '''
  +'Integer'':'#10'          for (let i = 0; i < subKernels.length; i++) {'#10
  +'            const subKernel = subKernels[i];'#10'            result.push('
  +#10'              subKernel.returnType === ''Integer'' ?'#10'              `'
  +'int subKernelResult_${ subKernel.name } = 0` :'#10'              `float sub'
  +'KernelResult_${ subKernel.name } = 0.0`,'#10'              `layout(location'
  +' = ${ i + 1 }) out vec4 data${ i + 1 }`'#10'            );'#10'          }'
  +#10'          break;'#10'        case ''Array(2)'':'#10'          for (let i'
  +' = 0; i < subKernels.length; i++) {'#10'            result.push('#10'      '
  +'        `vec2 subKernelResult_${ subKernels[i].name }`,'#10'              `'
  +'layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`'#10'            );'
  +#10'          }'#10'          break;'#10'        case ''Array(3)'':'#10'    '
  +'      for (let i = 0; i < subKernels.length; i++) {'#10'            result.'
  +'push('#10'              `vec3 subKernelResult_${ subKernels[i].name }`,'#10
  +'              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`'#10' '
  +'           );'#10'          }'#10'          break;'#10'        case ''Array'
  +'(4)'':'#10'          for (let i = 0; i < subKernels.length; i++) {'#10'    '
  +'        result.push('#10'              `vec4 subKernelResult_${ subKernels['
  +'i].name }`,'#10'              `layout(location = ${ i + 1 }) out vec4 data$'
  +'{ i + 1 }`'#10'            );'#10'          }'#10'          break;'#10'    '
  +'  }'#10'    } else {'#10'      result.push('#10'        ''out vec4 data0'''
  +#10'      );'#10'    }'#10#10'    return utils.linesToString(result) + this.'
  +'translatedSource;'#10'  }'#10#10'  getMainResultGraphical() {'#10'    retur'
  +'n utils.linesToString(['#10'      ''  threadId = indexTo3D(index, uOutputDi'
  +'m)'','#10'      ''  kernel()'','#10'      ''  data0 = actualColor'','#10'  '
  +'  ]);'#10'  }'#10#10'  getMainResultPackedPixels() {'#10'    switch (this.r'
  +'eturnType) {'#10'      case ''LiteralInteger'':'#10'      case ''Number'':'
  +#10'      case ''Integer'':'#10'      case ''Float'':'#10'        return thi'
  +'s.getMainResultKernelPackedPixels() +'#10'          this.getMainResultSubKe'
  +'rnelPackedPixels();'#10'      default:'#10'        throw new Error(`packed '
  +'output only usable with Numbers, "${this.returnType}" specified`);'#10'    '
  +'}'#10'  }'#10#10'  getMainResultKernelPackedPixels() {'#10'    return utils'
  +'.linesToString(['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','
  +#10'      ''  kernel()'','#10'      `  data0 = ${this.useLegacyEncoder ? ''l'
  +'egacyEncode32'' : ''encode32''}(kernelResult)`'#10'    ]);'#10'  }'#10#10' '
  +' getMainResultSubKernelPackedPixels() {'#10'    const result = [];'#10'    '
  +'if (!this.subKernels) return '''';'#10'    for (let i = 0; i < this.subKern'
  +'els.length; i++) {'#10'      const subKernel = this.subKernels[i];'#10'    '
  +'  if (subKernel.returnType === ''Integer'') {'#10'        result.push('#10
  +'          `  data${i + 1} = ${this.useLegacyEncoder ? ''legacyEncode32'' : '
  +'''encode32''}(float(subKernelResult_${this.subKernels[i].name}))`'#10'     '
  +'   );'#10'      } else {'#10'        result.push('#10'          `  data${i '
  +'+ 1} = ${this.useLegacyEncoder ? ''legacyEncode32'' : ''encode32''}(subKern'
  +'elResult_${this.subKernels[i].name})`'#10'        );'#10'      }'#10'    }'
  +#10'    return utils.linesToString(result);'#10'  }'#10#10'  getMainResultKe'
  +'rnelMemoryOptimizedFloats(result, channel) {'#10'    result.push('#10'     '
  +' ''  threadId = indexTo3D(index, uOutputDim)'','#10'      ''  kernel()'','
  +#10'      `  data0.${channel} = kernelResult`,'#10'    );'#10'  }'#10#10'  g'
  +'etMainResultSubKernelMemoryOptimizedFloats(result, channel) {'#10'    if (!'
  +'this.subKernels) return result;'#10'    for (let i = 0; i < this.subKernels'
  +'.length; i++) {'#10'      const subKernel = this.subKernels[i];'#10'      i'
  ,'f (subKernel.returnType === ''Integer'') {'#10'        result.push('#10'   '
  +'       `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name}'
  +')`,'#10'        );'#10'      } else {'#10'        result.push('#10'        '
  +'  `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,'#10'    '
  +'    );'#10'      }'#10'    }'#10'  }'#10#10'  getMainResultKernelNumberText'
  +'ure() {'#10'    return ['#10'      ''  threadId = indexTo3D(index, uOutputD'
  +'im)'','#10'      ''  kernel()'','#10'      ''  data0[0] = kernelResult'','
  +#10'    ];'#10'  }'#10#10'  getMainResultSubKernelNumberTexture() {'#10'    '
  +'const result = [];'#10'    if (!this.subKernels) return result;'#10'    for'
  +' (let i = 0; i < this.subKernels.length; ++i) {'#10'      const subKernel ='
  +' this.subKernels[i];'#10'      if (subKernel.returnType === ''Integer'') {'
  +#10'        result.push('#10'          `  data${i + 1}[0] = float(subKernelR'
  +'esult_${subKernel.name})`,'#10'        );'#10'      } else {'#10'        re'
  +'sult.push('#10'          `  data${i + 1}[0] = subKernelResult_${subKernel.n'
  +'ame}`,'#10'        );'#10'      }'#10'    }'#10'    return result;'#10'  }'
  +#10#10'  getMainResultKernelArray2Texture() {'#10'    return ['#10'      '' '
  +' threadId = indexTo3D(index, uOutputDim)'','#10'      ''  kernel()'','#10' '
  +'     ''  data0[0] = kernelResult[0]'','#10'      ''  data0[1] = kernelResul'
  +'t[1]'','#10'    ];'#10'  }'#10#10'  getMainResultSubKernelArray2Texture() {'
  +#10'    const result = [];'#10'    if (!this.subKernels) return result;'#10
  +'    for (let i = 0; i < this.subKernels.length; ++i) {'#10'      const subK'
  +'ernel = this.subKernels[i];'#10'      result.push('#10'        `  data${i +'
  +' 1}[0] = subKernelResult_${subKernel.name}[0]`,'#10'        `  data${i + 1}'
  +'[1] = subKernelResult_${subKernel.name}[1]`,'#10'      );'#10'    }'#10'   '
  +' return result;'#10'  }'#10#10'  getMainResultKernelArray3Texture() {'#10' '
  +'   return ['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'  '
  +'    ''  kernel()'','#10'      ''  data0[0] = kernelResult[0]'','#10'      '
  +'''  data0[1] = kernelResult[1]'','#10'      ''  data0[2] = kernelResult[2]'
  +''','#10'    ];'#10'  }'#10#10'  getMainResultSubKernelArray3Texture() {'#10
  +'    const result = [];'#10'    if (!this.subKernels) return result;'#10'   '
  +' for (let i = 0; i < this.subKernels.length; ++i) {'#10'      const subKern'
  +'el = this.subKernels[i];'#10'      result.push('#10'        `  data${i + 1}'
  +'[0] = subKernelResult_${subKernel.name}[0]`,'#10'        `  data${i + 1}[1]'
  +' = subKernelResult_${subKernel.name}[1]`,'#10'        `  data${i + 1}[2] = '
  +'subKernelResult_${subKernel.name}[2]`,'#10'      );'#10'    }'#10'    retur'
  +'n result;'#10'  }'#10#10'  getMainResultKernelArray4Texture() {'#10'    ret'
  +'urn ['#10'      ''  threadId = indexTo3D(index, uOutputDim)'','#10'      '''
  +'  kernel()'','#10'      ''  data0 = kernelResult'','#10'    ];'#10'  }'#10
  +#10'  getMainResultSubKernelArray4Texture() {'#10'    const result = [];'#10
  +'    if (!this.subKernels) return result;'#10'    for (let i = 0; i < this.s'
  +'ubKernels.length; ++i) {'#10'      result.push('#10'        `  data${i + 1}'
  +' = subKernelResult_${this.subKernels[i].name}`,'#10'      );'#10'    }'#10
  +'    return result;'#10'  }'#10#10'  destroyExtensions() {'#10'    this.exte'
  +'nsions.EXT_color_buffer_float = null;'#10'    this.extensions.OES_texture_f'
  +'loat_linear = null;'#10'  }'#10#10'  toJSON() {'#10'    const json = super.'
  +'toJSON();'#10'    json.functionNodes = FunctionBuilder.fromKernel(this, Web'
  +'GL2FunctionNode).toJSON();'#10'    json.settings.threadDim = this.threadDim'
  +';'#10'    return json;'#10'  }'#10'}'#10#10'module.exports = {'#10'  WebGL2'
  +'Kernel'#10'};'#10'},{"../../utils":114,"../function-builder":9,"../web-gl/k'
  +'ernel":70,"./fragment-shader":72,"./function-node":73,"./kernel-value-maps"'
  +':74,"./vertex-shader":106}],106:[function(require,module,exports){'#10'cons'
  +'t vertexShader = `#version 300 es'#10'__FLOAT_TACTIC_DECLARATION__;'#10'__I'
  +'NT_TACTIC_DECLARATION__;'#10'__SAMPLER_2D_TACTIC_DECLARATION__;'#10#10'in v'
  +'ec2 aPos;'#10'in vec2 aTexCoord;'#10#10'out vec2 vTexCoord;'#10'uniform vec'
  +'2 ratio;'#10#10'void main(void) {'#10'  gl_Position = vec4((aPos + vec2(1))'
  +' * ratio + vec2(-1), 0, 1);'#10'  vTexCoord = aTexCoord;'#10'}`;'#10#10'mod'
  +'ule.exports = {'#10'  vertexShader'#10'};'#10'},{}],107:[function(require,m'
  +'odule,exports){'#10'const lib = require(''./index'');'#10'const GPU = lib.G'
  +'PU;'#10'for (const p in lib) {'#10'  if (!lib.hasOwnProperty(p)) continue;'
  +#10'  if (p === ''GPU'') continue; '#10'  GPU[p] = lib[p];'#10'}'#10#10'if ('
  +'typeof window !== ''undefined'') {'#10'  bindTo(window);'#10'}'#10'if (type'
  +'of self !== ''undefined'') {'#10'  bindTo(self);'#10'}'#10#10'function bind'
  +'To(target) {'#10'  if (target.GPU) return;'#10'  Object.defineProperty(targ'
  +'et, ''GPU'', {'#10'    get() {'#10'      return GPU;'#10'    }'#10'  });'#10
  ,'}'#10#10'module.exports = lib;'#10'},{"./index":109}],108:[function(require'
  +',module,exports){'#10'const { gpuMock } = require(''gpu-mock.js'');'#10'con'
  +'st { utils } = require(''./utils'');'#10'const { Kernel } = require(''./bac'
  +'kend/kernel'');'#10'const { CPUKernel } = require(''./backend/cpu/kernel'')'
  +';'#10'const { HeadlessGLKernel } = require(''./backend/headless-gl/kernel'''
  +');'#10'const { WebGL2Kernel } = require(''./backend/web-gl2/kernel'');'#10
  +'const { WebGLKernel } = require(''./backend/web-gl/kernel'');'#10'const { k'
  +'ernelRunShortcut } = require(''./kernel-run-shortcut'');'#10#10#10'const ke'
  +'rnelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];'#10#10'const ker'
  +'nelTypes = [''gpu'', ''cpu''];'#10#10'const internalKernels = {'#10'  ''hea'
  +'dlessgl'': HeadlessGLKernel,'#10'  ''webgl2'': WebGL2Kernel,'#10'  ''webgl'
  +''': WebGLKernel,'#10'};'#10#10'let validate = true;'#10#10'class GPU {'#10
  +'  static disableValidation() {'#10'    validate = false;'#10'  }'#10#10'  s'
  +'tatic enableValidation() {'#10'    validate = true;'#10'  }'#10#10'  static'
  +' get isGPUSupported() {'#10'    return kernelOrder.some(Kernel => Kernel.is'
  +'Supported);'#10'  }'#10#10'  static get isKernelMapSupported() {'#10'    re'
  +'turn kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kerne'
  +'lMap);'#10'  }'#10#10'  static get isOffscreenCanvasSupported() {'#10'    r'
  +'eturn (typeof Worker !== ''undefined'' && typeof OffscreenCanvas !== ''unde'
  +'fined'') || typeof importScripts !== ''undefined'';'#10'  }'#10#10'  static'
  +' get isWebGLSupported() {'#10'    return WebGLKernel.isSupported;'#10'  }'
  +#10#10'  static get isWebGL2Supported() {'#10'    return WebGL2Kernel.isSupp'
  +'orted;'#10'  }'#10#10'  static get isHeadlessGLSupported() {'#10'    return'
  +' HeadlessGLKernel.isSupported;'#10'  }'#10#10'  static get isCanvasSupporte'
  +'d() {'#10'    return typeof HTMLCanvasElement !== ''undefined'';'#10'  }'#10
  +#10'  static get isGPUHTMLImageArraySupported() {'#10'    return WebGL2Kerne'
  +'l.isSupported;'#10'  }'#10#10'  static get isSinglePrecisionSupported() {'
  +#10'    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.featu'
  +'res.isFloatRead && Kernel.features.isTextureFloat);'#10'  }'#10#10'  constr'
  +'uctor(settings) {'#10'    settings = settings || {};'#10'    this.canvas = '
  +'settings.canvas || null;'#10'    this.context = settings.context || null;'
  +#10'    this.mode = settings.mode;'#10'    this.Kernel = null;'#10'    this.'
  +'kernels = [];'#10'    this.functions = [];'#10'    this.nativeFunctions = ['
  +'];'#10'    this.injectedNative = null;'#10'    this.onIstanbulCoverageVaria'
  +'ble = settings.onIstanbulCoverageVariable || null;'#10'    this.removeIstan'
  +'bulCoverage = settings.hasOwnProperty(''removeIstanbulCoverage'') ? setting'
  +'s.removeIstanbulCoverage : null;'#10'    if (this.mode === ''dev'') return;'
  +#10'    this.chooseKernel();'#10'    if (settings.functions) {'#10'      for'
  +' (let i = 0; i < settings.functions.length; i++) {'#10'        this.addFunc'
  +'tion(settings.functions[i]);'#10'      }'#10'    }'#10#10'    if (settings.'
  +'nativeFunctions) {'#10'      for (const p in settings.nativeFunctions) {'#10
  +'        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;'#10'    '
  +'    const s = settings.nativeFunctions[p];'#10'        const { name, source'
  +' } = s;'#10'        this.addNativeFunction(name, source, s);'#10'      }'#10
  +'    }'#10'  }'#10#10'  chooseKernel() {'#10'    if (this.Kernel) return;'#10
  +#10'    let Kernel = null;'#10#10'    if (this.context) {'#10'      for (let'
  +' i = 0; i < kernelOrder.length; i++) {'#10'        const ExternalKernel = k'
  +'ernelOrder[i];'#10'        if (ExternalKernel.isContextMatch(this.context))'
  +' {'#10'          if (!ExternalKernel.isSupported) {'#10'            throw n'
  +'ew Error(`Kernel type ${ExternalKernel.name} not supported`);'#10'         '
  +' }'#10'          Kernel = ExternalKernel;'#10'          break;'#10'        '
  +'}'#10'      }'#10'      if (Kernel === null) {'#10'        throw new Error('
  +'''unknown Context'');'#10'      }'#10'    } else if (this.mode) {'#10'     '
  +' if (this.mode in internalKernels) {'#10'        if (!validate || internalK'
  +'ernels[this.mode].isSupported) {'#10'          Kernel = internalKernels[thi'
  +'s.mode];'#10'        }'#10'      } else if (this.mode === ''gpu'') {'#10'  '
  +'      for (let i = 0; i < kernelOrder.length; i++) {'#10'          if (kern'
  +'elOrder[i].isSupported) {'#10'            Kernel = kernelOrder[i];'#10'    '
  +'        break;'#10'          }'#10'        }'#10'      } else if (this.mode'
  +' === ''cpu'') {'#10'        Kernel = CPUKernel;'#10'      }'#10'      if (!'
  +'Kernel) {'#10'        throw new Error(`A requested mode of "${this.mode}" a'
  +'nd is not supported`);'#10'      }'#10'    } else {'#10'      for (let i = '
  +'0; i < kernelOrder.length; i++) {'#10'        if (kernelOrder[i].isSupporte'
  +'d) {'#10'          Kernel = kernelOrder[i];'#10'          break;'#10'      '
  ,'  }'#10'      }'#10'      if (!Kernel) {'#10'        Kernel = CPUKernel;'#10
  +'      }'#10'    }'#10#10'    if (!this.mode) {'#10'      this.mode = Kernel'
  +'.mode;'#10'    }'#10'    this.Kernel = Kernel;'#10'  }'#10#10'  createKerne'
  +'l(source, settings) {'#10'    if (typeof source === ''undefined'') {'#10'  '
  +'    throw new Error(''Missing source parameter'');'#10'    }'#10'    if (ty'
  +'peof source !== ''object'' && !utils.isFunction(source) && typeof source !='
  +'= ''string'') {'#10'      throw new Error(''source parameter not a function'
  +''');'#10'    }'#10#10'    const kernels = this.kernels;'#10'    if (this.mo'
  +'de === ''dev'') {'#10'      const devKernel = gpuMock(source, upgradeDeprec'
  +'atedCreateKernelSettings(settings));'#10'      kernels.push(devKernel);'#10
  +'      return devKernel;'#10'    }'#10#10'    source = typeof source === ''f'
  +'unction'' ? source.toString() : source;'#10'    const switchableKernels = {'
  +'};'#10'    const settingsCopy = upgradeDeprecatedCreateKernelSettings(setti'
  +'ngs) || {};'#10'    if (settings && typeof settings.argumentTypes === ''obj'
  +'ect'') {'#10'      settingsCopy.argumentTypes = Object.keys(settings.argume'
  +'ntTypes).map(argumentName => settings.argumentTypes[argumentName]);'#10'   '
  +' }'#10#10'    function onRequestFallback(args) {'#10'      console.warn(''F'
  +'alling back to CPU'');'#10'      const fallbackKernel = new CPUKernel(sourc'
  +'e, {'#10'        argumentTypes: kernelRun.argumentTypes,'#10'        consta'
  +'ntTypes: kernelRun.constantTypes,'#10'        graphical: kernelRun.graphica'
  +'l,'#10'        loopMaxIterations: kernelRun.loopMaxIterations,'#10'        '
  +'constants: kernelRun.constants,'#10'        dynamicOutput: kernelRun.dynami'
  +'cOutput,'#10'        dynamicArgument: kernelRun.dynamicArguments,'#10'     '
  +'   output: kernelRun.output,'#10'        precision: kernelRun.precision,'#10
  +'        pipeline: kernelRun.pipeline,'#10'        immutable: kernelRun.immu'
  +'table,'#10'        optimizeFloatMemory: kernelRun.optimizeFloatMemory,'#10
  +'        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,'
  +#10'        functions: kernelRun.functions,'#10'        nativeFunctions: ker'
  +'nelRun.nativeFunctions,'#10'        injectedNative: kernelRun.injectedNativ'
  +'e,'#10'        subKernels: kernelRun.subKernels,'#10'        strictIntegers'
  +': kernelRun.strictIntegers,'#10'        debug: kernelRun.debug,'#10'      }'
  +');'#10'      fallbackKernel.build.apply(fallbackKernel, args);'#10'      co'
  +'nst result = fallbackKernel.run.apply(fallbackKernel, args);'#10'      kern'
  +'elRun.replaceKernel(fallbackKernel);'#10'      return result;'#10'    }'#10
  +#10'    function onRequestSwitchKernel(reasons, args, _kernel) {'#10'      i'
  +'f (_kernel.debug) {'#10'        console.warn(''Switching kernels'');'#10'  '
  +'    }'#10'      let newOutput = null;'#10'      if (_kernel.signature && !s'
  +'witchableKernels[_kernel.signature]) {'#10'        switchableKernels[_kerne'
  +'l.signature] = _kernel;'#10'      }'#10'      if (_kernel.dynamicOutput) {'
  +#10'        for (let i = reasons.length - 1; i >= 0; i--) {'#10'          co'
  +'nst reason = reasons[i];'#10'          if (reason.type === ''outputPrecisio'
  +'nMismatch'') {'#10'            newOutput = reason.needed;'#10'          }'
  +#10'        }'#10'      }'#10#10'      const Constructor = _kernel.construct'
  +'or;'#10'      const argumentTypes = Constructor.getArgumentTypes(_kernel, a'
  +'rgs);'#10'      const signature = Constructor.getSignature(_kernel, argumen'
  +'tTypes);'#10'      const existingKernel = switchableKernels[signature];'#10
  +'      if (existingKernel) {'#10'        existingKernel.onActivate(_kernel);'
  +#10'        return existingKernel;'#10'      }'#10#10'      const newKernel '
  +'= switchableKernels[signature] = new Constructor(source, {'#10'        argu'
  +'mentTypes,'#10'        constantTypes: _kernel.constantTypes,'#10'        gr'
  +'aphical: _kernel.graphical,'#10'        loopMaxIterations: _kernel.loopMaxI'
  +'terations,'#10'        constants: _kernel.constants,'#10'        dynamicOut'
  +'put: _kernel.dynamicOutput,'#10'        dynamicArgument: _kernel.dynamicArg'
  +'uments,'#10'        context: _kernel.context,'#10'        canvas: _kernel.c'
  +'anvas,'#10'        output: newOutput || _kernel.output,'#10'        precisi'
  +'on: _kernel.precision,'#10'        pipeline: _kernel.pipeline,'#10'        '
  +'immutable: _kernel.immutable,'#10'        optimizeFloatMemory: _kernel.opti'
  +'mizeFloatMemory,'#10'        fixIntegerDivisionAccuracy: _kernel.fixInteger'
  +'DivisionAccuracy,'#10'        functions: _kernel.functions,'#10'        nat'
  +'iveFunctions: _kernel.nativeFunctions,'#10'        injectedNative: _kernel.'
  +'injectedNative,'#10'        subKernels: _kernel.subKernels,'#10'        str'
  +'ictIntegers: _kernel.strictIntegers,'#10'        debug: _kernel.debug,'#10
  +'        gpu: _kernel.gpu,'#10'        validate,'#10'        returnType: _ke'
  +'rnel.returnType,'#10'        onIstanbulCoverageVariable: _kernel.onIstanbul'
  ,'CoverageVariable,'#10'        removeIstanbulCoverage: _kernel.removeIstanbu'
  +'lCoverage,'#10'        tactic: _kernel.tactic,'#10'        onRequestFallbac'
  +'k,'#10'        onRequestSwitchKernel,'#10'        texture: _kernel.texture,'
  +#10'        mappedTextures: _kernel.mappedTextures,'#10'        drawBuffersM'
  +'ap: _kernel.drawBuffersMap,'#10'      });'#10'      newKernel.build.apply(n'
  +'ewKernel, args);'#10'      kernelRun.replaceKernel(newKernel);'#10'      ke'
  +'rnels.push(newKernel);'#10'      return newKernel;'#10'    }'#10'    const '
  +'mergedSettings = Object.assign({'#10'      context: this.context,'#10'     '
  +' canvas: this.canvas,'#10'      functions: this.functions,'#10'      native'
  +'Functions: this.nativeFunctions,'#10'      injectedNative: this.injectedNat'
  +'ive,'#10'      onIstanbulCoverageVariable: this.onIstanbulCoverageVariable,'
  +#10'      removeIstanbulCoverage: this.removeIstanbulCoverage,'#10'      gpu'
  +': this,'#10'      validate,'#10'      onRequestFallback,'#10'      onReques'
  +'tSwitchKernel'#10'    }, settingsCopy);'#10#10'    const kernel = new this.'
  +'Kernel(source, mergedSettings);'#10'    const kernelRun = kernelRunShortcut'
  +'(kernel);'#10#10'    if (!this.canvas) {'#10'      this.canvas = kernel.can'
  +'vas;'#10'    }'#10#10'    if (!this.context) {'#10'      this.context = ker'
  +'nel.context;'#10'    }'#10#10'    kernels.push(kernel);'#10#10'    return k'
  +'ernelRun;'#10'  }'#10#10'  createKernelMap() {'#10'    let fn;'#10'    let '
  +'settings;'#10'    const argument2Type = typeof arguments[arguments.length -'
  +' 2];'#10'    if (argument2Type === ''function'' || argument2Type === ''stri'
  +'ng'') {'#10'      fn = arguments[arguments.length - 2];'#10'      settings '
  +'= arguments[arguments.length - 1];'#10'    } else {'#10'      fn = argument'
  +'s[arguments.length - 1];'#10'    }'#10#10'    if (this.mode !== ''dev'') {'
  +#10'      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {'
  +#10'        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {'#10'     '
  +'     throw new Error(`kernelMap not supported on ${this.Kernel.name}`);'#10
  +'        }'#10'      }'#10'    }'#10#10'    const settingsCopy = upgradeDepr'
  +'ecatedCreateKernelSettings(settings);'#10'    if (settings && typeof settin'
  +'gs.argumentTypes === ''object'') {'#10'      settingsCopy.argumentTypes = O'
  +'bject.keys(settings.argumentTypes).map(argumentName => settings.argumentTyp'
  +'es[argumentName]);'#10'    }'#10#10'    if (Array.isArray(arguments[0])) {'
  +#10'      settingsCopy.subKernels = [];'#10'      const functions = argument'
  +'s[0];'#10'      for (let i = 0; i < functions.length; i++) {'#10'        co'
  +'nst source = functions[i].toString();'#10'        const name = utils.getFun'
  +'ctionNameFromString(source);'#10'        settingsCopy.subKernels.push({'#10
  +'          name,'#10'          source,'#10'          property: i,'#10'      '
  +'  });'#10'      }'#10'    } else {'#10'      settingsCopy.subKernels = [];'
  +#10'      const functions = arguments[0];'#10'      for (let p in functions)'
  +' {'#10'        if (!functions.hasOwnProperty(p)) continue;'#10'        cons'
  +'t source = functions[p].toString();'#10'        const name = utils.getFunct'
  +'ionNameFromString(source);'#10'        settingsCopy.subKernels.push({'#10' '
  +'         name: name || p,'#10'          source,'#10'          property: p,'
  +#10'        });'#10'      }'#10'    }'#10'    return this.createKernel(fn, s'
  +'ettingsCopy);'#10'  }'#10#10'  combineKernels() {'#10'    const firstKernel'
  +' = arguments[0];'#10'    const combinedKernel = arguments[arguments.length '
  +'- 1];'#10'    if (firstKernel.kernel.constructor.mode === ''cpu'') return c'
  +'ombinedKernel;'#10'    const canvas = arguments[0].canvas;'#10'    const co'
  +'ntext = arguments[0].context;'#10'    const max = arguments.length - 1;'#10
  +'    for (let i = 0; i < max; i++) {'#10'      arguments[i]'#10'        .set'
  +'Canvas(canvas)'#10'        .setContext(context)'#10'        .setPipeline(tr'
  +'ue);'#10'    }'#10#10'    return function() {'#10'      const texture = com'
  +'binedKernel.apply(this, arguments);'#10'      if (texture.toArray) {'#10'  '
  +'      return texture.toArray();'#10'      }'#10'      return texture;'#10' '
  +'   };'#10'  }'#10#10'  setFunctions(functions) {'#10'    this.functions = f'
  +'unctions;'#10'    return this;'#10'  }'#10#10'  setNativeFunctions(nativeFu'
  +'nctions) {'#10'    this.nativeFunctions = nativeFunctions;'#10'    return t'
  +'his;'#10'  }'#10#10'  addFunction(source, settings) {'#10'    this.function'
  +'s.push({ source, settings });'#10'    return this;'#10'  }'#10#10'  addNati'
  +'veFunction(name, source, settings) {'#10'    if (this.kernels.length > 0) {'
  +#10'      throw new Error(''Cannot call "addNativeFunction" after "createKer'
  +'nels" has been called.'');'#10'    }'#10'    this.nativeFunctions.push(Obje'
  +'ct.assign({ name, source }, settings));'#10'    return this;'#10'  }'#10#10
  +'  injectNative(source) {'#10'    this.injectedNative = source;'#10'    retu'
  ,'rn this;'#10'  }'#10#10'  destroy() {'#10'    return new Promise((resolve, '
  +'reject) => {'#10'      if (!this.kernels) {'#10'        resolve();'#10'    '
  +'  }'#10'      setTimeout(() => {'#10'        try {'#10'          for (let i'
  +' = 0; i < this.kernels.length; i++) {'#10'            this.kernels[i].destr'
  +'oy(true); '#10'          }'#10'          let firstKernel = this.kernels[0];'
  +#10'          if (firstKernel) {'#10'            if (firstKernel.kernel) {'
  +#10'              firstKernel = firstKernel.kernel;'#10'            }'#10'  '
  +'          if (firstKernel.constructor.destroyContext) {'#10'              f'
  +'irstKernel.constructor.destroyContext(this.context);'#10'            }'#10
  +'          }'#10'        } catch (e) {'#10'          reject(e);'#10'        '
  +'}'#10'        resolve();'#10'      }, 0);'#10'    });'#10'  }'#10'}'#10#10
  +#10'function upgradeDeprecatedCreateKernelSettings(settings) {'#10'  if (!se'
  +'ttings) {'#10'    return {};'#10'  }'#10'  const upgradedSettings = Object.'
  +'assign({}, settings);'#10#10'  if (settings.hasOwnProperty(''floatOutput'')'
  +') {'#10'    utils.warnDeprecated(''setting'', ''floatOutput'', ''precision'
  +''');'#10'    upgradedSettings.precision = settings.floatOutput ? ''single'''
  +' : ''unsigned'';'#10'  }'#10'  if (settings.hasOwnProperty(''outputToTextur'
  +'e'')) {'#10'    utils.warnDeprecated(''setting'', ''outputToTexture'', ''pi'
  +'peline'');'#10'    upgradedSettings.pipeline = Boolean(settings.outputToTex'
  +'ture);'#10'  }'#10'  if (settings.hasOwnProperty(''outputImmutable'')) {'#10
  +'    utils.warnDeprecated(''setting'', ''outputImmutable'', ''immutable'');'
  +#10'    upgradedSettings.immutable = Boolean(settings.outputImmutable);'#10
  +'  }'#10'  if (settings.hasOwnProperty(''floatTextures'')) {'#10'    utils.w'
  +'arnDeprecated(''setting'', ''floatTextures'', ''optimizeFloatMemory'');'#10
  +'    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);'
  +#10'  }'#10'  return upgradedSettings;'#10'}'#10#10'module.exports = {'#10' '
  +' GPU,'#10'  kernelOrder,'#10'  kernelTypes'#10'};'#10'},{"./backend/cpu/ker'
  +'nel":8,"./backend/headless-gl/kernel":34,"./backend/kernel":36,"./backend/w'
  +'eb-gl/kernel":70,"./backend/web-gl2/kernel":105,"./kernel-run-shortcut":111'
  +',"./utils":114,"gpu-mock.js":4}],109:[function(require,module,exports){'#10
  +'const { GPU } = require(''./gpu'');'#10'const { alias } = require(''./alias'
  +''');'#10'const { utils } = require(''./utils'');'#10'const { Input, input }'
  +' = require(''./input'');'#10'const { Texture } = require(''./texture'');'#10
  +'const { FunctionBuilder } = require(''./backend/function-builder'');'#10'co'
  +'nst { FunctionNode } = require(''./backend/function-node'');'#10'const { CP'
  +'UFunctionNode } = require(''./backend/cpu/function-node'');'#10'const { CPU'
  +'Kernel } = require(''./backend/cpu/kernel'');'#10#10'const { HeadlessGLKern'
  +'el } = require(''./backend/headless-gl/kernel'');'#10#10'const { WebGLFunct'
  +'ionNode } = require(''./backend/web-gl/function-node'');'#10'const { WebGLK'
  +'ernel } = require(''./backend/web-gl/kernel'');'#10'const { kernelValueMaps'
  +': webGLKernelValueMaps } = require(''./backend/web-gl/kernel-value-maps'');'
  +#10#10'const { WebGL2FunctionNode } = require(''./backend/web-gl2/function-n'
  +'ode'');'#10'const { WebGL2Kernel } = require(''./backend/web-gl2/kernel'');'
  +#10'const { kernelValueMaps: webGL2KernelValueMaps } = require(''./backend/w'
  +'eb-gl2/kernel-value-maps'');'#10#10'const { GLKernel } = require(''./backen'
  +'d/gl/kernel'');'#10#10'const { Kernel } = require(''./backend/kernel'');'#10
  +#10'const { FunctionTracer } = require(''./backend/function-tracer'');'#10#10
  +'const mathRandom = require(''./plugins/math-random-uniformly-distributed'')'
  +';'#10#10'module.exports = {'#10'  alias,'#10'  CPUFunctionNode,'#10'  CPUKe'
  +'rnel,'#10'  GPU,'#10'  FunctionBuilder,'#10'  FunctionNode,'#10'  HeadlessG'
  +'LKernel,'#10'  Input,'#10'  input,'#10'  Texture,'#10'  utils,'#10#10'  Web'
  +'GL2FunctionNode,'#10'  WebGL2Kernel,'#10'  webGL2KernelValueMaps,'#10#10'  '
  +'WebGLFunctionNode,'#10'  WebGLKernel,'#10'  webGLKernelValueMaps,'#10#10'  '
  +'GLKernel,'#10'  Kernel,'#10'  FunctionTracer,'#10#10'  plugins: {'#10'    m'
  +'athRandom'#10'  }'#10'};'#10'},{"./alias":5,"./backend/cpu/function-node":6'
  +',"./backend/cpu/kernel":8,"./backend/function-builder":9,"./backend/functio'
  +'n-node":10,"./backend/function-tracer":11,"./backend/gl/kernel":13,"./backe'
  +'nd/headless-gl/kernel":34,"./backend/kernel":36,"./backend/web-gl/function-'
  +'node":38,"./backend/web-gl/kernel":70,"./backend/web-gl/kernel-value-maps":'
  +'39,"./backend/web-gl2/function-node":73,"./backend/web-gl2/kernel":105,"./b'
  +'ackend/web-gl2/kernel-value-maps":74,"./gpu":108,"./input":110,"./plugins/m'
  +'ath-random-uniformly-distributed":112,"./texture":113,"./utils":114}],110:['
  +'function(require,module,exports){'#10'class Input {'#10'  constructor(value'
  +', size) {'#10'    this.value = value;'#10'    if (Array.isArray(size)) {'#10
  ,'      this.size = size;'#10'    } else {'#10'      this.size = new Int32Arr'
  +'ay(3);'#10'      if (size.z) {'#10'        this.size = new Int32Array([size'
  +'.x, size.y, size.z]);'#10'      } else if (size.y) {'#10'        this.size '
  +'= new Int32Array([size.x, size.y]);'#10'      } else {'#10'        this.siz'
  +'e = new Int32Array([size.x]);'#10'      }'#10'    }'#10#10'    const [w, h,'
  +' d] = this.size;'#10'    if (d) {'#10'      if (this.value.length !== (w * '
  +'h * d)) {'#10'        throw new Error(`Input size ${this.value.length} does'
  +' not match ${w} * ${h} * ${d} = ${(h * w * d)}`);'#10'      }'#10'    } els'
  +'e if (h) {'#10'      if (this.value.length !== (w * h)) {'#10'        throw'
  +' new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${'
  +'(h * w)}`);'#10'      }'#10'    } else {'#10'      if (this.value.length !='
  +'= w) {'#10'        throw new Error(`Input size ${this.value.length} does no'
  +'t match ${w}`);'#10'      }'#10'    }'#10#10'  }'#10#10'  toArray() {'#10' '
  +'   const { utils } = require(''./utils'');'#10'    const [w, h, d] = this.s'
  +'ize;'#10'    if (d) {'#10'      return utils.erectMemoryOptimized3DFloat(th'
  +'is.value.subarray ? this.value : new Float32Array(this.value), w, h, d);'#10
  +'    } else if (h) {'#10'      return utils.erectMemoryOptimized2DFloat(this'
  +'.value.subarray ? this.value : new Float32Array(this.value), w, h);'#10'   '
  +' } else {'#10'      return this.value;'#10'    }'#10'  }'#10'}'#10#10'funct'
  +'ion input(value, size) {'#10'  return new Input(value, size);'#10'}'#10#10
  +'module.exports = {'#10'  Input,'#10'  input'#10'};'#10'},{"./utils":114}],1'
  +'11:[function(require,module,exports){'#10'const { utils } = require(''./uti'
  +'ls'');'#10#10'function kernelRunShortcut(kernel) {'#10'  let run = function'
  +'() {'#10'    kernel.build.apply(kernel, arguments);'#10'    run = function('
  +') {'#10'      let result = kernel.run.apply(kernel, arguments);'#10'      i'
  +'f (kernel.switchingKernels) {'#10'        const reasons = kernel.resetSwitc'
  +'hingKernels();'#10'        const newKernel = kernel.onRequestSwitchKernel(r'
  +'easons, arguments, kernel);'#10'        shortcut.kernel = kernel = newKerne'
  +'l;'#10'        result = newKernel.run.apply(newKernel, arguments);'#10'    '
  +'  }'#10'      if (kernel.renderKernels) {'#10'        return kernel.renderK'
  +'ernels();'#10'      } else if (kernel.renderOutput) {'#10'        return ke'
  +'rnel.renderOutput();'#10'      } else {'#10'        return result;'#10'    '
  +'  }'#10'    };'#10'    return run.apply(kernel, arguments);'#10'  };'#10'  '
  +'const shortcut = function() {'#10'    return run.apply(kernel, arguments);'
  +#10'  };'#10'  shortcut.exec = function() {'#10'    return new Promise((acce'
  +'pt, reject) => {'#10'      try {'#10'        accept(run.apply(this, argumen'
  +'ts));'#10'      } catch (e) {'#10'        reject(e);'#10'      }'#10'    })'
  +';'#10'  };'#10'  shortcut.replaceKernel = function(replacementKernel) {'#10
  +'    kernel = replacementKernel;'#10'    bindKernelToShortcut(kernel, shortc'
  +'ut);'#10'  };'#10#10'  bindKernelToShortcut(kernel, shortcut);'#10'  return'
  +' shortcut;'#10'}'#10#10'function bindKernelToShortcut(kernel, shortcut) {'
  +#10'  if (shortcut.kernel) {'#10'    shortcut.kernel = kernel;'#10'    retur'
  +'n;'#10'  }'#10'  const properties = utils.allPropertiesOf(kernel);'#10'  fo'
  +'r (let i = 0; i < properties.length; i++) {'#10'    const property = proper'
  +'ties[i];'#10'    if (property[0] === ''_'' && property[1] === ''_'') contin'
  +'ue;'#10'    if (typeof kernel[property] === ''function'') {'#10'      if (p'
  +'roperty.substring(0, 3) === ''add'' || property.substring(0, 3) === ''set'''
  +') {'#10'        shortcut[property] = function() {'#10'          shortcut.ke'
  +'rnel[property].apply(shortcut.kernel, arguments);'#10'          return shor'
  +'tcut;'#10'        };'#10'      } else {'#10'        shortcut[property] = fu'
  +'nction() {'#10'          return shortcut.kernel[property].apply(shortcut.ke'
  +'rnel, arguments);'#10'        };'#10'      }'#10'    } else {'#10'      sho'
  +'rtcut.__defineGetter__(property, () => shortcut.kernel[property]);'#10'    '
  +'  shortcut.__defineSetter__(property, (value) => {'#10'        shortcut.ker'
  +'nel[property] = value;'#10'      });'#10'    }'#10'  }'#10'  shortcut.kerne'
  +'l = kernel;'#10'}'#10'module.exports = {'#10'  kernelRunShortcut'#10'};'#10
  +'},{"./utils":114}],112:[function(require,module,exports){'#10'const source '
  +'= `// https://www.shadertoy.com/view/4t2SDh'#10'//note: uniformly distribut'
  +'ed, normalized rand, [0,1]'#10'highp float randomSeedShift = 1.0;'#10'highp'
  +' float slide = 1.0;'#10'uniform highp float randomSeed1;'#10'uniform highp '
  +'float randomSeed2;'#10#10'highp float nrand(highp vec2 n) {'#10'  highp flo'
  +'at result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSe'
  +'ed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);'#10'  random'
  +'SeedShift = result;'#10'  if (randomSeedShift > 0.5) {'#10'    slide += 0.0'
  ,'0009; '#10'  } else {'#10'    slide += 0.0009;'#10'  }'#10'  return result;'
  +#10'}`;'#10#10'const name = ''math-random-uniformly-distributed'';'#10#10'co'
  +'nst functionMatch = `Math.random()`;'#10#10'const functionReplace = `nrand('
  +'vTexCoord)`;'#10#10'const functionReturnType = ''Number'';'#10'const onBefo'
  +'reRun = (kernel) => {'#10'  kernel.setUniform1f(''randomSeed1'', Math.rando'
  +'m());'#10'  kernel.setUniform1f(''randomSeed2'', Math.random());'#10'};'#10
  +#10'const plugin = {'#10'  name,'#10'  onBeforeRun,'#10'  functionMatch,'#10
  +'  functionReplace,'#10'  functionReturnType,'#10'  source'#10'};'#10#10'mod'
  +'ule.exports = plugin;'#10'},{}],113:[function(require,module,exports){'#10
  +'class Texture {'#10'  constructor(settings) {'#10'    const {'#10'      tex'
  +'ture,'#10'      size,'#10'      dimensions,'#10'      output,'#10'      con'
  +'text,'#10'      type = ''NumberTexture'','#10'      kernel,'#10'      inter'
  +'nalFormat,'#10'      textureFormat'#10'    } = settings;'#10'    if (!outpu'
  +'t) throw new Error(''settings property "output" required.'');'#10'    if (!'
  +'context) throw new Error(''settings property "context" required.'');'#10'  '
  +'  if (!texture) throw new Error(''settings property "texture" required.'');'
  +#10'    if (!kernel) throw new Error(''settings property "kernel" required.'
  +''');'#10'    this.texture = texture;'#10'    if (texture._refs) {'#10'     '
  +' texture._refs++;'#10'    } else {'#10'      texture._refs = 1;'#10'    }'
  +#10'    this.size = size;'#10'    this.dimensions = dimensions;'#10'    this'
  +'.output = output;'#10'    this.context = context;'#10'    this.kernel = ker'
  +'nel;'#10'    this.type = type;'#10'    this._deleted = false;'#10'    this.'
  +'internalFormat = internalFormat;'#10'    this.textureFormat = textureFormat'
  +';'#10'  }'#10#10'  toArray() {'#10'    throw new Error(`Not implemented on '
  +'${this.constructor.name}`);'#10'  }'#10#10'  clone() {'#10'    throw new Er'
  +'ror(`Not implemented on ${this.constructor.name}`);'#10'  }'#10#10'  delete'
  +'() {'#10'    throw new Error(`Not implemented on ${this.constructor.name}`)'
  +';'#10'  }'#10#10'  clear() {'#10'    throw new Error(`Not implemented on ${'
  +'this.constructor.name}`);'#10'  }'#10'}'#10#10'module.exports = {'#10'  Tex'
  +'ture'#10'};'#10'},{}],114:[function(require,module,exports){'#10'const acor'
  +'n = require(''acorn'');'#10'const { Input } = require(''./input'');'#10'con'
  +'st { Texture } = require(''./texture'');'#10#10'const FUNCTION_NAME = /func'
  +'tion ([^(]*)/;'#10'const STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/m'
  +'g;'#10'const ARGUMENT_NAMES = /([^\s,]+)/g;'#10#10'const utils = {'#10'  sy'
  +'stemEndianness() {'#10'    return _systemEndianness;'#10'  },'#10'  getSyst'
  +'emEndianness() {'#10'    const b = new ArrayBuffer(4);'#10'    const a = ne'
  +'w Uint32Array(b);'#10'    const c = new Uint8Array(b);'#10'    a[0] = 0xdea'
  +'dbeef;'#10'    if (c[0] === 0xef) return ''LE'';'#10'    if (c[0] === 0xde)'
  +' return ''BE'';'#10'    throw new Error(''unknown endianness'');'#10'  },'
  +#10#10'  isFunction(funcObj) {'#10'    return typeof(funcObj) === ''function'
  +''';'#10'  },'#10#10'  isFunctionString(fn) {'#10'    if (typeof fn === ''st'
  +'ring'') {'#10'      return (fn'#10'        .slice(0, ''function''.length)'
  +#10'        .toLowerCase() === ''function'');'#10'    }'#10'    return false'
  +';'#10'  },'#10#10'  getFunctionNameFromString(funcStr) {'#10'    const resu'
  +'lt = FUNCTION_NAME.exec(funcStr);'#10'    if (!result || result.length === '
  +'0) return null;'#10'    return result[1].trim();'#10'  },'#10#10'  getFunct'
  +'ionBodyFromString(funcStr) {'#10'    return funcStr.substring(funcStr.index'
  +'Of(''{'') + 1, funcStr.lastIndexOf(''}''));'#10'  },'#10#10'  getArgumentNa'
  +'mesFromString(fn) {'#10'    const fnStr = fn.replace(STRIP_COMMENTS, '''');'
  +#10'    let result = fnStr.slice(fnStr.indexOf(''('') + 1, fnStr.indexOf('')'
  +''')).match(ARGUMENT_NAMES);'#10'    if (result === null) {'#10'      result'
  +' = [];'#10'    }'#10'    return result;'#10'  },'#10#10'  clone(obj) {'#10
  +'    if (obj === null || typeof obj !== ''object'' || obj.hasOwnProperty(''i'
  +'sActiveClone'')) return obj;'#10#10'    const temp = obj.constructor(); '#10
  +#10'    for (let key in obj) {'#10'      if (Object.prototype.hasOwnProperty'
  +'.call(obj, key)) {'#10'        obj.isActiveClone = null;'#10'        temp[k'
  +'ey] = utils.clone(obj[key]);'#10'        delete obj.isActiveClone;'#10'    '
  +'  }'#10'    }'#10#10'    return temp;'#10'  },'#10#10'  isArray(array) {'#10
  +'    return !isNaN(array.length);'#10'  },'#10#10'  getVariableType(value, s'
  +'trictIntegers) {'#10'    if (utils.isArray(value)) {'#10'      if (value.le'
  +'ngth > 0 && value[0].nodeName === ''IMG'') {'#10'        return ''HTMLImage'
  +'Array'';'#10'      }'#10'      return ''Array'';'#10'    }'#10#10'    switc'
  +'h (value.constructor) {'#10'      case Boolean:'#10'        return ''Boolea'
  +'n'';'#10'      case Number:'#10'        if (strictIntegers && Number.isInte'
  ,'ger(value)) {'#10'          return ''Integer'';'#10'        }'#10'        r'
  +'eturn ''Float'';'#10'      case Texture:'#10'        return value.type;'#10
  +'      case Input:'#10'        return ''Input'';'#10'    }'#10'    switch (v'
  +'alue.nodeName) {'#10'      case ''IMG'':'#10'        return ''HTMLImage'';'
  +#10'      case ''CANVAS'':'#10'        return ''HTMLImage'';'#10'      case '
  +'''VIDEO'':'#10'        return ''HTMLVideo'';'#10'    }'#10'    if (value.ha'
  +'sOwnProperty(''type'')) {'#10'      return value.type;'#10'    }'#10'    re'
  +'turn ''Unknown'';'#10'  },'#10#10'  getKernelTextureSize(settings, dimensio'
  +'ns) {'#10'    let [w, h, d] = dimensions;'#10'    let texelCount = (w || 1)'
  +' * (h || 1) * (d || 1);'#10#10'    if (settings.optimizeFloatMemory && sett'
  +'ings.precision === ''single'') {'#10'      w = texelCount = Math.ceil(texel'
  +'Count / 4);'#10'    }'#10'    if (h > 1 && w * h === texelCount) {'#10'    '
  +'  return new Int32Array([w, h]);'#10'    }'#10'    return utils.closestSqua'
  +'reDimensions(texelCount);'#10'  },'#10#10'  closestSquareDimensions(length)'
  +' {'#10'    const sqrt = Math.sqrt(length);'#10'    let high = Math.ceil(sqr'
  +'t);'#10'    let low = Math.floor(sqrt);'#10'    while (high * low < length)'
  +' {'#10'      high--;'#10'      low = Math.ceil(length / high);'#10'    }'#10
  +'    return new Int32Array([low, Math.ceil(length / low)]);'#10'  },'#10#10
  +'  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {'#10'    const '
  +'totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (di'
  +'mensions[2] || 1) * (dimensions[3] || 1), 4);'#10'    const texelCount = to'
  +'talArea / bitRatio;'#10'    return utils.closestSquareDimensions(texelCount'
  +');'#10'  },'#10#10'  getMemoryOptimizedPackedTextureSize(dimensions, bitRat'
  +'io) {'#10'    const [w, h, d] = dimensions;'#10'    const totalArea = utils'
  +'.roundTo((w || 1) * (h || 1) * (d || 1), 4);'#10'    const texelCount = tot'
  +'alArea / (4 / bitRatio);'#10'    return utils.closestSquareDimensions(texel'
  +'Count);'#10'  },'#10#10'  roundTo(n, d) {'#10'    return Math.floor((n + d '
  +'- 1) / d) * d;'#10'  },'#10'  getDimensions(x, pad) {'#10'    let ret;'#10
  +'    if (utils.isArray(x)) {'#10'      const dim = [];'#10'      let temp = '
  +'x;'#10'      while (utils.isArray(temp)) {'#10'        dim.push(temp.length'
  +');'#10'        temp = temp[0];'#10'      }'#10'      ret = dim.reverse();'
  +#10'    } else if (x instanceof Texture) {'#10'      ret = x.output;'#10'   '
  +' } else if (x instanceof Input) {'#10'      ret = x.size;'#10'    } else {'
  +#10'      throw new Error(`Unknown dimensions of ${x}`);'#10'    }'#10#10'  '
  +'  if (pad) {'#10'      ret = Array.from(ret);'#10'      while (ret.length <'
  +' 3) {'#10'        ret.push(1);'#10'      }'#10'    }'#10#10'    return new '
  +'Int32Array(ret);'#10'  },'#10#10'  flatten2dArrayTo(array, target) {'#10'  '
  +'  let offset = 0;'#10'    for (let y = 0; y < array.length; y++) {'#10'    '
  +'  target.set(array[y], offset);'#10'      offset += array[y].length;'#10'  '
  +'  }'#10'  },'#10#10'  flatten3dArrayTo(array, target) {'#10'    let offset '
  +'= 0;'#10'    for (let z = 0; z < array.length; z++) {'#10'      for (let y '
  +'= 0; y < array[z].length; y++) {'#10'        target.set(array[z][y], offset'
  +');'#10'        offset += array[z][y].length;'#10'      }'#10'    }'#10'  },'
  +#10#10'  flatten4dArrayTo(array, target) {'#10'    let offset = 0;'#10'    f'
  +'or (let l = 0; l < array.length; l++) {'#10'      for (let z = 0; z < array'
  +'[l].length; z++) {'#10'        for (let y = 0; y < array[l][z].length; y++)'
  +' {'#10'          target.set(array[l][z][y], offset);'#10'          offset +'
  +'= array[l][z][y].length;'#10'        }'#10'      }'#10'    }'#10'  },'#10#10
  +'  flattenTo(array, target) {'#10'    if (utils.isArray(array[0])) {'#10'   '
  +'   if (utils.isArray(array[0][0])) {'#10'        if (utils.isArray(array[0]'
  +'[0][0])) {'#10'          utils.flatten4dArrayTo(array, target);'#10'       '
  +' } else {'#10'          utils.flatten3dArrayTo(array, target);'#10'        '
  +'}'#10'      } else {'#10'        utils.flatten2dArrayTo(array, target);'#10
  +'      }'#10'    } else {'#10'      target.set(array);'#10'    }'#10'  },'#10
  +#10'  splitArray(array, part) {'#10'    const result = [];'#10'    for (let '
  +'i = 0; i < array.length; i += part) {'#10'      result.push(new array.const'
  +'ructor(array.buffer, i * 4 + array.byteOffset, part));'#10'    }'#10'    re'
  +'turn result;'#10'  },'#10#10'  getAstString(source, ast) {'#10'    const li'
  +'nes = Array.isArray(source) ? source : source.split(/\r?\n/g);'#10'    cons'
  +'t start = ast.loc.start;'#10'    const end = ast.loc.end;'#10'    const res'
  +'ult = [];'#10'    if (start.line === end.line) {'#10'      result.push(line'
  +'s[start.line - 1].substring(start.column, end.column));'#10'    } else {'#10
  +'      result.push(lines[start.line - 1].slice(start.column));'#10'      for'
  +' (let i = start.line; i < end.line; i++) {'#10'        result.push(lines[i]'
  ,');'#10'      }'#10'      result.push(lines[end.line - 1].slice(0, end.colum'
  +'n));'#10'    }'#10'    return result.join(''\n'');'#10'  },'#10#10'  allPro'
  +'pertiesOf(obj) {'#10'    const props = [];'#10#10'    do {'#10'      props.'
  +'push.apply(props, Object.getOwnPropertyNames(obj));'#10'    } while (obj = '
  +'Object.getPrototypeOf(obj));'#10#10'    return props;'#10'  },'#10#10'  lin'
  +'esToString(lines) {'#10'    if (lines.length > 0) {'#10'      return lines.'
  +'join('';\n'') + '';\n'';'#10'    } else {'#10'      return ''\n'';'#10'    '
  +'}'#10'  },'#10'  warnDeprecated(type, oldName, newName) {'#10'    if (newNa'
  +'me) {'#10'      console.warn(`You are using a deprecated ${ type } "${ oldN'
  +'ame }". It has been replaced with "${ newName }". Fixing, but please upgrad'
  +'e as it will soon be removed.`);'#10'    } else {'#10'      console.warn(`Y'
  +'ou are using a deprecated ${ type } "${ oldName }". It has been removed. Fi'
  +'xing, but please upgrade as it will soon be removed.`);'#10'    }'#10'  },'
  +#10'  flipPixels: (pixels, width, height) => {'#10'    const halfHeight = he'
  +'ight / 2 | 0; '#10'    const bytesPerRow = width * 4;'#10'    const temp = '
  +'new Uint8ClampedArray(width * 4);'#10'    const result = pixels.slice(0);'
  +#10'    for (let y = 0; y < halfHeight; ++y) {'#10'      const topOffset = y'
  +' * bytesPerRow;'#10'      const bottomOffset = (height - y - 1) * bytesPerR'
  +'ow;'#10#10'      temp.set(result.subarray(topOffset, topOffset + bytesPerRo'
  +'w));'#10#10'      result.copyWithin(topOffset, bottomOffset, bottomOffset +'
  +' bytesPerRow);'#10#10'      result.set(temp, bottomOffset);'#10'    }'#10' '
  +'   return result;'#10'  },'#10'  erectPackedFloat: (array, width) => {'#10
  +'    return array.subarray(0, width);'#10'  },'#10'  erect2DPackedFloat: (ar'
  +'ray, width, height) => {'#10'    const yResults = new Array(height);'#10'  '
  +'  for (let y = 0; y < height; y++) {'#10'      const xStart = y * width;'#10
  +'      const xEnd = xStart + width;'#10'      yResults[y] = array.subarray(x'
  +'Start, xEnd);'#10'    }'#10'    return yResults;'#10'  },'#10'  erect3DPack'
  +'edFloat: (array, width, height, depth) => {'#10'    const zResults = new Ar'
  +'ray(depth);'#10'    for (let z = 0; z < depth; z++) {'#10'      const yResu'
  +'lts = new Array(height);'#10'      for (let y = 0; y < height; y++) {'#10' '
  +'       const xStart = (z * height * width) + y * width;'#10'        const x'
  +'End = xStart + width;'#10'        yResults[y] = array.subarray(xStart, xEnd'
  +');'#10'      }'#10'      zResults[z] = yResults;'#10'    }'#10'    return z'
  +'Results;'#10'  },'#10'  erectMemoryOptimizedFloat: (array, width) => {'#10
  +'    return array.subarray(0, width);'#10'  },'#10'  erectMemoryOptimized2DF'
  +'loat: (array, width, height) => {'#10'    const yResults = new Array(height'
  +');'#10'    for (let y = 0; y < height; y++) {'#10'      const offset = y * '
  +'width;'#10'      yResults[y] = array.subarray(offset, offset + width);'#10
  +'    }'#10'    return yResults;'#10'  },'#10'  erectMemoryOptimized3DFloat: '
  +'(array, width, height, depth) => {'#10'    const zResults = new Array(depth'
  +');'#10'    for (let z = 0; z < depth; z++) {'#10'      const yResults = new'
  +' Array(height);'#10'      for (let y = 0; y < height; y++) {'#10'        co'
  +'nst offset = (z * height * width) + (y * width);'#10'        yResults[y] = '
  +'array.subarray(offset, offset + width);'#10'      }'#10'      zResults[z] ='
  +' yResults;'#10'    }'#10'    return zResults;'#10'  },'#10'  erectFloat: (a'
  +'rray, width) => {'#10'    const xResults = new Float32Array(width);'#10'   '
  +' let i = 0;'#10'    for (let x = 0; x < width; x++) {'#10'      xResults[x]'
  +' = array[i];'#10'      i += 4;'#10'    }'#10'    return xResults;'#10'  },'
  +#10'  erect2DFloat: (array, width, height) => {'#10'    const yResults = new'
  +' Array(height);'#10'    let i = 0;'#10'    for (let y = 0; y < height; y++)'
  +' {'#10'      const xResults = new Float32Array(width);'#10'      for (let x'
  +' = 0; x < width; x++) {'#10'        xResults[x] = array[i];'#10'        i +'
  +'= 4;'#10'      }'#10'      yResults[y] = xResults;'#10'    }'#10'    return'
  +' yResults;'#10'  },'#10'  erect3DFloat: (array, width, height, depth) => {'
  +#10'    const zResults = new Array(depth);'#10'    let i = 0;'#10'    for (l'
  +'et z = 0; z < depth; z++) {'#10'      const yResults = new Array(height);'
  +#10'      for (let y = 0; y < height; y++) {'#10'        const xResults = ne'
  +'w Float32Array(width);'#10'        for (let x = 0; x < width; x++) {'#10'  '
  +'        xResults[x] = array[i];'#10'          i += 4;'#10'        }'#10'   '
  +'     yResults[y] = xResults;'#10'      }'#10'      zResults[z] = yResults;'
  +#10'    }'#10'    return zResults;'#10'  },'#10'  erectArray2: (array, width'
  +') => {'#10'    const xResults = new Array(width);'#10'    const xResultsMax'
  +' = width * 4;'#10'    let i = 0;'#10'    for (let x = 0; x < xResultsMax; x'
  +' += 4) {'#10'      xResults[i++] = array.subarray(x, x + 2);'#10'    }'#10
  ,'    return xResults;'#10'  },'#10'  erect2DArray2: (array, width, height) ='
  +'> {'#10'    const yResults = new Array(height);'#10'    const XResultsMax ='
  +' width * 4;'#10'    for (let y = 0; y < height; y++) {'#10'      const xRes'
  +'ults = new Array(width);'#10'      const offset = y * XResultsMax;'#10'    '
  +'  let i = 0;'#10'      for (let x = 0; x < XResultsMax; x += 4) {'#10'     '
  +'   xResults[i++] = array.subarray(x + offset, x + offset + 2);'#10'      }'
  +#10'      yResults[y] = xResults;'#10'    }'#10'    return yResults;'#10'  }'
  +','#10'  erect3DArray2: (array, width, height, depth) => {'#10'    const xRe'
  +'sultsMax = width * 4;'#10'    const zResults = new Array(depth);'#10'    fo'
  +'r (let z = 0; z < depth; z++) {'#10'      const yResults = new Array(height'
  +');'#10'      for (let y = 0; y < height; y++) {'#10'        const xResults '
  +'= new Array(width);'#10'        const offset = (z * xResultsMax * height) +'
  +' (y * xResultsMax);'#10'        let i = 0;'#10'        for (let x = 0; x < '
  +'xResultsMax; x += 4) {'#10'          xResults[i++] = array.subarray(x + off'
  +'set, x + offset + 2);'#10'        }'#10'        yResults[y] = xResults;'#10
  +'      }'#10'      zResults[z] = yResults;'#10'    }'#10'    return zResults'
  +';'#10'  },'#10'  erectArray3: (array, width) => {'#10'    const xResults = '
  +'new Array(width);'#10'    const xResultsMax = width * 4;'#10'    let i = 0;'
  +#10'    for (let x = 0; x < xResultsMax; x += 4) {'#10'      xResults[i++] ='
  +' array.subarray(x, x + 3);'#10'    }'#10'    return xResults;'#10'  },'#10
  +'  erect2DArray3: (array, width, height) => {'#10'    const xResultsMax = wi'
  +'dth * 4;'#10'    const yResults = new Array(height);'#10'    for (let y = 0'
  +'; y < height; y++) {'#10'      const xResults = new Array(width);'#10'     '
  +' const offset = y * xResultsMax;'#10'      let i = 0;'#10'      for (let x '
  +'= 0; x < xResultsMax; x += 4) {'#10'        xResults[i++] = array.subarray('
  +'x + offset, x + offset + 3);'#10'      }'#10'      yResults[y] = xResults;'
  +#10'    }'#10'    return yResults;'#10'  },'#10'  erect3DArray3: (array, wid'
  +'th, height, depth) => {'#10'    const xResultsMax = width * 4;'#10'    cons'
  +'t zResults = new Array(depth);'#10'    for (let z = 0; z < depth; z++) {'#10
  +'      const yResults = new Array(height);'#10'      for (let y = 0; y < hei'
  +'ght; y++) {'#10'        const xResults = new Array(width);'#10'        cons'
  +'t offset = (z * xResultsMax * height) + (y * xResultsMax);'#10'        let '
  +'i = 0;'#10'        for (let x = 0; x < xResultsMax; x += 4) {'#10'         '
  +' xResults[i++] = array.subarray(x + offset, x + offset + 3);'#10'        }'
  +#10'        yResults[y] = xResults;'#10'      }'#10'      zResults[z] = yRes'
  +'ults;'#10'    }'#10'    return zResults;'#10'  },'#10'  erectArray4: (array'
  +', width) => {'#10'    const xResults = new Array(array);'#10'    const xRes'
  +'ultsMax = width * 4;'#10'    let i = 0;'#10'    for (let x = 0; x < xResult'
  +'sMax; x += 4) {'#10'      xResults[i++] = array.subarray(x, x + 4);'#10'   '
  +' }'#10'    return xResults;'#10'  },'#10'  erect2DArray4: (array, width, he'
  +'ight) => {'#10'    const xResultsMax = width * 4;'#10'    const yResults = '
  +'new Array(height);'#10'    for (let y = 0; y < height; y++) {'#10'      con'
  +'st xResults = new Array(width);'#10'      const offset = y * xResultsMax;'
  +#10'      let i = 0;'#10'      for (let x = 0; x < xResultsMax; x += 4) {'#10
  +'        xResults[i++] = array.subarray(x + offset, x + offset + 4);'#10'   '
  +'   }'#10'      yResults[y] = xResults;'#10'    }'#10'    return yResults;'
  +#10'  },'#10'  erect3DArray4: (array, width, height, depth) => {'#10'    con'
  +'st xResultsMax = width * 4;'#10'    const zResults = new Array(depth);'#10
  +'    for (let z = 0; z < depth; z++) {'#10'      const yResults = new Array('
  +'height);'#10'      for (let y = 0; y < height; y++) {'#10'        const xRe'
  +'sults = new Array(width);'#10'        const offset = (z * xResultsMax * hei'
  +'ght) + (y * xResultsMax);'#10'        let i = 0;'#10'        for (let x = 0'
  +'; x < xResultsMax; x += 4) {'#10'          xResults[i++] = array.subarray(x'
  +' + offset, x + offset + 4);'#10'        }'#10'        yResults[y] = xResult'
  +'s;'#10'      }'#10'      zResults[z] = yResults;'#10'    }'#10'    return z'
  +'Results;'#10'  },'#10#10'  flattenFunctionToString: (source, settings) => {'
  +#10'    const { findDependency, thisLookup, doNotDefine } = settings;'#10'  '
  +'  let flattened = settings.flattened;'#10'    if (!flattened) {'#10'      f'
  +'lattened = settings.flattened = {};'#10'    }'#10'    const ast = acorn.par'
  +'se(source);'#10'    const functionDependencies = [];'#10'    let indent = 0'
  +';'#10#10'    function flatten(ast) {'#10'      if (Array.isArray(ast)) {'#10
  +'        const results = [];'#10'        for (let i = 0; i < ast.length; i++'
  +') {'#10'          results.push(flatten(ast[i]));'#10'        }'#10'        '
  +'return results.join('''');'#10'      }'#10'      switch (ast.type) {'#10'  '
  ,'      case ''Program'':'#10'          return flatten(ast.body) + (ast.body['
  +'0].type === ''VariableDeclaration'' ? '';'' : '''');'#10'        case ''Fun'
  +'ctionDeclaration'':'#10'          return `function ${ast.id.name}(${ast.par'
  +'ams.map(flatten).join('', '')}) ${ flatten(ast.body) }`;'#10'        case '
  +'''BlockStatement'': {'#10'          const result = [];'#10'          indent'
  +' += 2;'#10'          for (let i = 0; i < ast.body.length; i++) {'#10'      '
  +'      const flat = flatten(ast.body[i]);'#10'            if (flat) {'#10'  '
  +'            result.push('' ''.repeat(indent) + flat, '';\n'');'#10'        '
  +'    }'#10'          }'#10'          indent -= 2;'#10'          return `{\n$'
  +'{result.join('''')}}`;'#10'        }'#10'        case ''VariableDeclaration'
  +''':'#10'          const declarations = utils.normalizeDeclarations(ast)'#10
  +'            .map(flatten)'#10'            .filter(r => r !== null);'#10'   '
  +'       if (declarations.length < 1) {'#10'            return '''';'#10'    '
  +'      } else {'#10'            return `${ast.kind} ${declarations.join('','
  +''')}`;'#10'          }'#10'          case ''VariableDeclarator'':'#10'     '
  +'       if (ast.init.object && ast.init.object.type === ''ThisExpression'') '
  +'{'#10'              const lookup = thisLookup(ast.init.property.name, true)'
  +';'#10'              if (lookup) {'#10'                return `${ast.id.name'
  +'} = ${flatten(ast.init)}`;'#10'              } else {'#10'                r'
  +'eturn null;'#10'              }'#10'            } else {'#10'              '
  +'return `${ast.id.name} = ${flatten(ast.init)}`;'#10'            }'#10'     '
  +'       case ''CallExpression'': {'#10'              if (ast.callee.property'
  +'.name === ''subarray'') {'#10'                return `${flatten(ast.callee.'
  +'object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatt'
  +'en(value)).join('', '')})`;'#10'              }'#10'              if (ast.c'
  +'allee.object.name === ''gl'' || ast.callee.object.name === ''context'') {'
  +#10'                return `${flatten(ast.callee.object)}.${flatten(ast.call'
  +'ee.property)}(${ast.arguments.map(value => flatten(value)).join('', '')})`;'
  +#10'              }'#10'              if (ast.callee.object.type === ''ThisE'
  +'xpression'') {'#10'                functionDependencies.push(findDependency'
  +'(''this'', ast.callee.property.name));'#10'                return `${ast.ca'
  +'llee.property.name}(${ast.arguments.map(value => flatten(value)).join('', '
  +''')})`;'#10'              } else if (ast.callee.object.name) {'#10'        '
  +'        const foundSource = findDependency(ast.callee.object.name, ast.call'
  +'ee.property.name);'#10'                if (foundSource === null) {'#10'    '
  +'              return `${ast.callee.object.name}.${ast.callee.property.name}'
  +'(${ast.arguments.map(value => flatten(value)).join('', '')})`;'#10'        '
  +'        } else {'#10'                  functionDependencies.push(foundSourc'
  +'e);'#10'                  return `${ast.callee.property.name}(${ast.argumen'
  +'ts.map(value => flatten(value)).join('', '')})`;'#10'                }'#10
  +'              } else if (ast.callee.object.type === ''MemberExpression'') {'
  +#10'                return `${flatten(ast.callee.object)}.${ast.callee.prope'
  +'rty.name}(${ast.arguments.map(value => flatten(value)).join('', '')})`;'#10
  +'              } else {'#10'                throw new Error(''unknown ast.ca'
  +'llee'');'#10'              }'#10'            }'#10'            case ''Retur'
  +'nStatement'':'#10'              return `return ${flatten(ast.argument)}`;'
  +#10'            case ''BinaryExpression'':'#10'              return `(${flat'
  +'ten(ast.left)}${ast.operator}${flatten(ast.right)})`;'#10'            case '
  +'''UnaryExpression'':'#10'              if (ast.prefix) {'#10'              '
  +'  return `${ast.operator} ${flatten(ast.argument)}`;'#10'              } el'
  +'se {'#10'                return `${flatten(ast.argument)} ${ast.operator}`;'
  +#10'              }'#10'              case ''ExpressionStatement'':'#10'    '
  +'            return `${flatten(ast.expression)}`;'#10'              case ''S'
  +'equenceExpression'':'#10'                return `(${flatten(ast.expressions'
  +')})`;'#10'              case ''ArrowFunctionExpression'':'#10'             '
  +'   return `(${ast.params.map(flatten).join('', '')}) => ${flatten(ast.body)'
  +'}`;'#10'              case ''Literal'':'#10'                return ast.raw;'
  +#10'              case ''Identifier'':'#10'                return ast.name;'
  +#10'              case ''MemberExpression'':'#10'                if (ast.obj'
  +'ect.type === ''ThisExpression'') {'#10'                  return thisLookup('
  +'ast.property.name);'#10'                }'#10'                if (ast.compu'
  +'ted) {'#10'                  return `${flatten(ast.object)}[${flatten(ast.p'
  +'roperty)}]`;'#10'                }'#10'                return flatten(ast.o'
  +'bject) + ''.'' + flatten(ast.property);'#10'              case ''ThisExpres'
  ,'sion'':'#10'                return ''this'';'#10'              case ''NewEx'
  +'pression'':'#10'                return `new ${flatten(ast.callee)}(${ast.ar'
  +'guments.map(value => flatten(value)).join('', '')})`;'#10'              cas'
  +'e ''ForStatement'':'#10'                return `for (${flatten(ast.init)};$'
  +'{flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;'#10'    '
  +'          case ''AssignmentExpression'':'#10'                return `${flat'
  +'ten(ast.left)}${ast.operator}${flatten(ast.right)}`;'#10'              case'
  +' ''UpdateExpression'':'#10'                return `${flatten(ast.argument)}'
  +'${ast.operator}`;'#10'              case ''IfStatement'':'#10'             '
  +'   return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;'#10'     '
  +'         case ''ThrowStatement'':'#10'                return `throw ${flatt'
  +'en(ast.argument)}`;'#10'              case ''ObjectPattern'':'#10'         '
  +'       return ast.properties.map(flatten).join('', '');'#10'              c'
  +'ase ''ArrayPattern'':'#10'                return ast.elements.map(flatten).'
  +'join('', '');'#10'              case ''DebuggerStatement'':'#10'           '
  +'     return ''debugger;'';'#10'              case ''ConditionalExpression'''
  +':'#10'                return `${flatten(ast.test)}?${flatten(ast.consequent'
  +')}:${flatten(ast.alternate)}`;'#10'              case ''Property'':'#10'   '
  +'             if (ast.kind === ''init'') {'#10'                  return flat'
  +'ten(ast.key);'#10'                }'#10'      }'#10'      throw new Error(`'
  +'unhandled ast.type of ${ ast.type }`);'#10'    }'#10'    const result = fla'
  +'tten(ast);'#10'    if (functionDependencies.length > 0) {'#10'      const f'
  +'lattenedFunctionDependencies = [];'#10'      for (let i = 0; i < functionDe'
  +'pendencies.length; i++) {'#10'        const functionDependency = functionDe'
  +'pendencies[i];'#10'        if (!flattened[functionDependency]) {'#10'      '
  +'    flattened[functionDependency] = true;'#10'        }'#10'        flatten'
  +'edFunctionDependencies.push(utils.flattenFunctionToString(functionDependenc'
  +'y, settings) + ''\n'');'#10'      }'#10'      return flattenedFunctionDepen'
  +'dencies.join('''') + result;'#10'    }'#10'    return result;'#10'  },'#10
  +#10'  normalizeDeclarations: (ast) => {'#10'    if (ast.type !== ''VariableD'
  +'eclaration'') throw new Error(''Ast is not of type "VariableDeclaration"'')'
  +';'#10'    const normalizedDeclarations = [];'#10'    for (let declarationIn'
  +'dex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {'
  +#10'      const declaration = ast.declarations[declarationIndex];'#10'      '
  +'if (declaration.id && declaration.id.type === ''ObjectPattern'' && declarat'
  +'ion.id.properties) {'#10'        const { properties } = declaration.id;'#10
  +'        for (let propertyIndex = 0; propertyIndex < properties.length; prop'
  +'ertyIndex++) {'#10'          const property = properties[propertyIndex];'#10
  +'          if (property.value.type === ''ObjectPattern'' && property.value.p'
  +'roperties) {'#10'            for (let subPropertyIndex = 0; subPropertyInde'
  +'x < property.value.properties.length; subPropertyIndex++) {'#10'           '
  +'   const subProperty = property.value.properties[subPropertyIndex];'#10'   '
  +'           if (subProperty.type === ''Property'') {'#10'                nor'
  +'malizedDeclarations.push({'#10'                  type: ''VariableDeclarator'
  +''','#10'                  id: {'#10'                    type: ''Identifier'
  +''','#10'                    name: subProperty.key.name'#10'                '
  +'  },'#10'                  init: {'#10'                    type: ''MemberEx'
  +'pression'','#10'                    object: {'#10'                      typ'
  +'e: ''MemberExpression'','#10'                      object: declaration.init'
  +','#10'                      property: {'#10'                        type: '
  +'''Identifier'','#10'                        name: property.key.name'#10'   '
  +'                   },'#10'                      computed: false'#10'       '
  +'             },'#10'                    property: {'#10'                   '
  +'   type: ''Identifier'','#10'                      name: subProperty.key.na'
  +'me'#10'                    },'#10'                    computed: false'#10' '
  +'                 }'#10'                });'#10'              } else {'#10' '
  +'               throw new Error(''unexpected state'');'#10'              }'
  +#10'            }'#10'          } else if (property.value.type === ''Identif'
  +'ier'') {'#10'            normalizedDeclarations.push({'#10'              ty'
  +'pe: ''VariableDeclarator'','#10'              id: {'#10'                typ'
  +'e: ''Identifier'','#10'                name: property.value && property.val'
  +'ue.name ? property.value.name : property.key.name'#10'              },'#10
  +'              init: {'#10'                type: ''MemberExpression'','#10' '
  +'               object: declaration.init,'#10'                property: {'#10
  ,'                  type: ''Identifier'','#10'                  name: propert'
  +'y.key.name'#10'                },'#10'                computed: false'#10' '
  +'             }'#10'            });'#10'          } else {'#10'            t'
  +'hrow new Error(''unexpected state'');'#10'          }'#10'        }'#10'   '
  +'   } else if (declaration.id && declaration.id.type === ''ArrayPattern'' &&'
  +' declaration.id.elements) {'#10'        const { elements } = declaration.id'
  +';'#10'        for (let elementIndex = 0; elementIndex < elements.length; el'
  +'ementIndex++) {'#10'          const element = elements[elementIndex];'#10' '
  +'         if (element.type === ''Identifier'') {'#10'            normalizedD'
  +'eclarations.push({'#10'              type: ''VariableDeclarator'','#10'    '
  +'          id: {'#10'                type: ''Identifier'','#10'             '
  +'   name: element.name'#10'              },'#10'              init: {'#10'  '
  +'              type: ''MemberExpression'','#10'                object: decla'
  +'ration.init,'#10'                property: {'#10'                  type: '''
  +'Literal'','#10'                  value: elementIndex,'#10'                 '
  +' raw: elementIndex.toString(),'#10'                  start: element.start,'
  +#10'                  end: element.end'#10'                },'#10'          '
  +'      computed: true'#10'              }'#10'            });'#10'          '
  +'} else {'#10'            throw new Error(''unexpected state'');'#10'       '
  +'   }'#10'        }'#10'      } else {'#10'        normalizedDeclarations.pu'
  +'sh(declaration);'#10'      }'#10'    }'#10'    return normalizedDeclaration'
  +'s;'#10'  },'#10#10'  splitHTMLImageToRGB: (gpu, image) => {'#10'    const r'
  +'Kernel = gpu.createKernel(function(a) {'#10'      const pixel = a[this.thre'
  +'ad.y][this.thread.x];'#10'      return pixel.r * 255;'#10'    }, {'#10'    '
  +'  output: [image.width, image.height],'#10'      precision: ''unsigned'','
  +#10'      argumentTypes: { a: ''HTMLImage'' },'#10'    });'#10'    const gKe'
  +'rnel = gpu.createKernel(function(a) {'#10'      const pixel = a[this.thread'
  +'.y][this.thread.x];'#10'      return pixel.g * 255;'#10'    }, {'#10'      '
  +'output: [image.width, image.height],'#10'      precision: ''unsigned'','#10
  +'      argumentTypes: { a: ''HTMLImage'' },'#10'    });'#10'    const bKerne'
  +'l = gpu.createKernel(function(a) {'#10'      const pixel = a[this.thread.y]'
  +'[this.thread.x];'#10'      return pixel.b * 255;'#10'    }, {'#10'      out'
  +'put: [image.width, image.height],'#10'      precision: ''unsigned'','#10'  '
  +'    argumentTypes: { a: ''HTMLImage'' },'#10'    });'#10'    const aKernel '
  +'= gpu.createKernel(function(a) {'#10'      const pixel = a[this.thread.y][t'
  +'his.thread.x];'#10'      return pixel.a * 255;'#10'    }, {'#10'      outpu'
  +'t: [image.width, image.height],'#10'      precision: ''unsigned'','#10'    '
  +'  argumentTypes: { a: ''HTMLImage'' },'#10'    });'#10'    const result = ['
  +#10'      rKernel(image),'#10'      gKernel(image),'#10'      bKernel(image)'
  +','#10'      aKernel(image),'#10'    ];'#10'    result.rKernel = rKernel;'#10
  +'    result.gKernel = gKernel;'#10'    result.bKernel = bKernel;'#10'    res'
  +'ult.aKernel = aKernel;'#10'    result.gpu = gpu;'#10'    return result;'#10
  +'  },'#10#10'  splitRGBAToCanvases: (gpu, rgba, width, height) => {'#10'    '
  +'const visualKernelR = gpu.createKernel(function(v) {'#10'      const pixel '
  +'= v[this.thread.y][this.thread.x];'#10'      this.color(pixel.r / 255, 0, 0'
  +', 255);'#10'    }, {'#10'      output: [width, height],'#10'      graphical'
  +': true,'#10'      argumentTypes: { v: ''Array2D(4)'' }'#10'    });'#10'    '
  +'visualKernelR(rgba);'#10#10'    const visualKernelG = gpu.createKernel(func'
  +'tion(v) {'#10'      const pixel = v[this.thread.y][this.thread.x];'#10'    '
  +'  this.color(0, pixel.g / 255, 0, 255);'#10'    }, {'#10'      output: [wid'
  +'th, height],'#10'      graphical: true,'#10'      argumentTypes: { v: ''Arr'
  +'ay2D(4)'' }'#10'    });'#10'    visualKernelG(rgba);'#10#10'    const visua'
  +'lKernelB = gpu.createKernel(function(v) {'#10'      const pixel = v[this.th'
  +'read.y][this.thread.x];'#10'      this.color(0, 0, pixel.b / 255, 255);'#10
  +'    }, {'#10'      output: [width, height],'#10'      graphical: true,'#10
  +'      argumentTypes: { v: ''Array2D(4)'' }'#10'    });'#10'    visualKernel'
  +'B(rgba);'#10#10'    const visualKernelA = gpu.createKernel(function(v) {'#10
  +'      const pixel = v[this.thread.y][this.thread.x];'#10'      this.color(2'
  +'55, 255, 255, pixel.a / 255);'#10'    }, {'#10'      output: [width, height'
  +'],'#10'      graphical: true,'#10'      argumentTypes: { v: ''Array2D(4)'' '
  +'}'#10'    });'#10'    visualKernelA(rgba);'#10'    return ['#10'      visua'
  +'lKernelR.canvas,'#10'      visualKernelG.canvas,'#10'      visualKernelB.ca'
  +'nvas,'#10'      visualKernelA.canvas,'#10'    ];'#10'  },'#10#10'  getMinif'
  +'ySafeName: (fn) => {'#10'    try {'#10'      const ast = acorn.parse(`const'
  ,' value = ${fn.toString()}`);'#10'      const { init } = ast.body[0].declara'
  +'tions[0];'#10'      return init.body.name || init.body.body[0].argument.nam'
  +'e;'#10'    } catch (e) {'#10'      throw new Error(''Unrecognized function '
  +'type.  Please use `() => yourFunctionVariableHere` or function() { return y'
  +'ourFunctionVariableHere; }'');'#10'    }'#10'  },'#10'  sanitizeName: funct'
  +'ion(name) {'#10'    if (dollarSign.test(name)) {'#10'      name = name.repl'
  +'ace(dollarSign, ''S_S'');'#10'    }'#10'    if (doubleUnderscore.test(name)'
  +') {'#10'      name = name.replace(doubleUnderscore, ''U_U'');'#10'    } els'
  +'e if (singleUnderscore.test(name)) {'#10'      name = name.replace(singleUn'
  +'derscore, ''u_u'');'#10'    }'#10'    return name;'#10'  }'#10'};'#10#10'co'
  +'nst dollarSign = /\$/;'#10'const doubleUnderscore = /__/;'#10'const singleU'
  +'nderscore = /_/;'#10#10'const _systemEndianness = utils.getSystemEndianness'
  +'();'#10#10'module.exports = {'#10'  utils'#10'};'#10'},{"./input":110,"./te'
  +'xture":113,"acorn":1}]},{},[107])(107)'#10'});'#10
]);
LazarusResources.Add('XIDEMain','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10#13#10'unit XIDEMain;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$INTERFACES CORBA}'#13
  +#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysU'
  +'tils, strutils,'#13#10'{$ifndef JScript}'#13#10'  FileUtil, Forms, Controls'
  +', Graphics, Dialogs, LCLIntf, ExtCtrls, Menus,'#13#10'  ComCtrls, StdCtrls,'
  +' TypInfo, LazIDEIntf, LResources, DBGrids, DBCtrls, Types,'#13#10'  BufData'
  +'set, DB, Events, DllInterface, LazsUtils, CompilerLogUnit,'#13#10'{$else}'
  +#13#10'  HTMLUtils,'#13#10'{$endif}'#13#10'  // XComponents units...'#13#10
  +'  PyXUtils, StringUtils, NodeUtils, PasteDialogUnit,'#13#10'  UtilsJSCompil'
  +'e, XIFrame, XSVGContainer, XMenu, XScrollBox, XVBox, XHBox, XTree, XMemo,'
  +#13#10'  XTabControl, XButton, XLabel, XEditBox, XCheckBox, XHyperLink, XRad'
  +'ioBtns,'#13#10'  XForm, XTable, XProgressBar, XNumericSlider, XNumberSpinne'
  +'r,'#13#10'  XComboBox, XDatePicker, XColorPicker, XImage, XGroupBox, XCode,'
  +' XStore,'#13#10'  XBitMap, XTrapEvents, XIDEHelpUnit,'#13#10'  XHTMLText, X'
  +'HTMLEditor, EventsInterface,'#13#10'  // XIDEComponents units...'#13#10'  X'
  +'GPUCanvas, XGPUEditor, X3DTable, XThreads, XComposite, XDBTable,'#13#10'  /'
  +'/ XIDE project units...'#13#10'  CompileUserCode, XObjectInsp,XIDESettings,'
  +#13#10'  CodeEditor, InputSelectUnit, PropertyEditUnit,'#13#10'  PopupMemo, '
  +'AboutUnit, SavedSystems, StylesUtils,'#13#10'  IntfParamUnit, IntfEventUnit'
  +', XDataModel;'#13#10#13#10#13#10'{$ifdef JScript}'#13#10'procedure Initiali'
  +'sePage(dummy:string);'#13#10'{$ifdef Python}'#13#10'procedure StartupPython'
  +';'#13#10'{$endif}'#13#10'{$endif}'#13#10#13#10'{ TXIDEForm }'#13#10#13#10't'
  +'ype'#13#10'TXIDEForm = class(TXForm)'#13#10#13#10'  {$ifndef JScript}'#13#10
  +'  // Lazarus-only Form components...'#13#10'  WebMenu: TMenuItem;'#13#10'  '
  +'CompileToJS: TMenuItem;'#13#10'  CompilerShowLog: TMenuItem;'#13#10'  {$end'
  +'if}'#13#10#13#10'  ToggleDesignRunMode: TXMenuItem;'#13#10'  CodeTreePascal'
  +'UnitBtn: TXButton;'#13#10'  NavTreeUpBtn: TXButton;'#13#10'  NavTreeUpDownH'
  +'Box: TXHBox;'#13#10'  NavTreeDownBtn: TXButton;'#13#10'  ResourceTreeButton'
  +'sHBox: TXHBox;'#13#10'  ResourceTreeDelBtn: TXButton;'#13#10'  ResourceTree'
  +'LoadBtn: TXButton;'#13#10'  OIAddPropertyButton: TXButton;'#13#10'  StyleTr'
  +'eeButtonHBox: TXHBox;'#13#10'  StyleTreeDelBtn: TXButton;'#13#10'  StyleTre'
  +'eApplyBtn: TXButton;'#13#10'  StyleNodeQualifier: TXComboBox;'#13#10'  Styl'
  +'eTreeEditBtn: TXButton;'#13#10'  QualifierEditBox: TXEditBox;'#13#10'  Watc'
  +'hBox: TXEditBox;'#13#10'  CodeTreeSearchBtn: TXButton;'#13#10'  CodeTreePyt'
  +'honBtn: TXButton;'#13#10'  CompositePropsScrollbox: TXScrollBox;'#13#10'  D'
  +'ataTree: TXTree;'#13#10'  DMTreeButtonHBox: TXHBox;'#13#10'  DMTreeAddButto'
  +'n: TXButton;'#13#10'  DMTreeAddContainsBtn: TXButton;'#13#10'  DMTreeDelBtn'
  +': TXButton;'#13#10'  DMTreeAddOpBtn: TXButton;'#13#10'  DMUpBtn: TXButton;'
  +#13#10'  DMDownBtn: TXButton;'#13#10'  DMTreeAddRefBtn: TXButton;'#13#10'  C'
  +'odeTreeUpBtn: TXButton;'#13#10'  CodeTreeDownBtn: TXButton;'#13#10'  XEditB'
  +'ox1: TXEditBox;'#13#10'  DMUpDownHBox: TXHBox;'#13#10'  CodeTreeUpDownHBox:'
  +' TXHBox;'#13#10'  XIDEMainMenu: TXMainMenu;'#13#10#13#10'  MyRootDiv: TXScr'
  +'ollBox;'#13#10'  InnerRootVBox: TXVBox;'#13#10'  ObjectInspectorTabs: TXTab'
  +'Control;'#13#10'  UIDesigner: TXTabSheet;'#13#10'  CodeDesigner: TXTabSheet'
  +';'#13#10'  CodeTree: TXTree;'#13#10'  NavTree: TXTree;'#13#10'  PropertyEdi'
  +'torScrollbox: TXScrollBox;'#13#10'  OIButtonGroup: TXHBox;'#13#10'  OICut: '
  +'TXButton;'#13#10'  OIPaste: TXButton;'#13#10'  OICopy: TXButton;'#13#10'  O'
  +'IDelete: TXButton;'#13#10'  RootHBox: TXHBox;'#13#10'  UIRoot: TXScrollBox;'
  +#13#10'  ResourceInspectorTabs: TXTabControl;'#13#10'  Resources: TXTabSheet'
  +';'#13#10'  ResourceTree: TXTree;'#13#10'  CodeTreeEditBtn: TXButton;'#13#10
  +'  CodeTreeDelBtn: TXButton;'#13#10'  OIClear: TXButton;'#13#10#13#10'  Code'
  +'TreeButtonHBox: TXHBox;'#13#10'  DMTreeAddLabel: TXLabel;'#13#10'  XLabel3:'
  +' TXLabel;'#13#10'  EventsEditorScrollBox: TXScrollBox;'#13#10'  SystemMenu:'
  +' TXMenuItem;'#13#10'  SystemSaveClip: TXMenuItem;'#13#10'  SystemLoad: TXMe'
  +'nuItem;'#13#10'  SystemClear: TXMenuItem;'#13#10'  SystemDeploy: TXMenuItem'
  +';'#13#10'  OITabs: TXTabControl;'#13#10'  OIPropertiesTab: TXTabSheet;'#13
  +#10'  OIEventsTab: TXTabSheet;'#13#10'  CodeTreeBtnsVB1: TXVBox;'#13#10'  Co'
  +'deTreeBtnsVB2: TXVBox;'#13#10'  XIDETrapEvents1: TXTrapEvents;'#13#10'  Hel'
  +'pMenu: TXMenuItem;'#13#10'  HelpAbout: TXMenuItem;'#13#10'  HelpOverview: T'
  ,'XMenuItem;'#13#10'  CodeTreeBtnsVB3: TXVBox;'#13#10'  SystemSettings: TXMen'
  +'uItem;'#13#10'  SystemSaveFile: TXMenuItem;'#13#10'  SystemEncapsulate: TXM'
  +'enuItem;'#13#10'  SystemLoadFromStore: TXMenuItem;'#13#10'  StyleDesigner: '
  +'TXTabSheet;'#13#10'  StyleSheet: TXTree;'#13#10'  GeneratedStyleSheetText: '
  +'TXMemo;'#13#10'  StyleTreeScrollBox: TXScrollBox;'#13#10'  StyleResourcesPa'
  +'ge: TXTabSheet;'#13#10'  StyleResources: TXTree;'#13#10'  XMemo1: TXMemo;'
  +#13#10'  OICompositePropsTab: TXTabSheet;'#13#10'  DataDesigner: TXTabSheet;'
  +#13#10'  DMAttribsScrollbox: TXScrollBox;'#13#10#13#10'  procedure CodeTreeD'
  +'ownBtnHandleButtonClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myV'
  +'alue: AnsiString);'#13#10'  procedure CodeTreePythonBtnHandleButtonClick(e:'
  +' TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'  procedure CodeTreeUpBtnHandleButtonClick(e: TEventStatus; nodeID: AnsiStr'
  +'ing;'#13#10'    myValue: AnsiString);'#13#10'  procedure DataTreeHandleTree'
  +'NodeClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiStri'
  +'ng);'#13#10'  function DataTreeTreeNodeHintFunc(TreeLabelStr: String): Stri'
  +'ng;'#13#10'  procedure DMTreeAddButtonHandleButtonClick(e: TEventStatus;'#13
  +#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure DMTreeA'
  +'ddOpBtnHandleButtonClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'  procedure DMTreeAddContainsBtnHandleButtonClic'
  +'k(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'  procedure DMTreeDelBtnHandleButtonClick(e: TEventStatus; nodeID: AnsiS'
  +'tring;'#13#10'    myValue: AnsiString);'#13#10'  procedure DMDownBtnHandleB'
  +'uttonClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiStr'
  +'ing);'#13#10'  procedure DMUpBtnHandleButtonClick(e: TEventStatus; nodeID: '
  +'AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure DummyPositi'
  +'onMarker;   // DO not delete this line.'#13#10#13#10'  {$ifndef JScript}'#13
  +#10'  // Lazarus-only methods...'#13#10'  procedure CompilerShowLogClick(Sen'
  +'der: TObject);'#13#10'  procedure CompileToJSClick(Sender: TObject);'#13#10
  +'  procedure FormActivate(Sender: TObject);'#13#10'  procedure FormClose(Sen'
  +'der: TObject; var CloseAction: TCloseAction); override;'#13#10'  procedure '
  +'FormCreate(Sender: TObject);'#13#10'  procedure FormResize(Sender: TObject)'
  +';'#13#10'  procedure LoadIframes(dum:integer);'#13#10'  {$endif}'#13#10#13
  +#10'  // Common Event Handlers - created at design time along with X compone'
  +'nts...'#13#10'  function HandleGenericEvent(MyEventType,myValue:string;Even'
  +'tNode:TDataNode):Boolean;'#13#10'  procedure CodeTreeHandleTreeNodeClick(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure H'
  +'elpAboutHandleClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue'
  +': AnsiString);'#13#10'  procedure HelpOverviewHandleClick(e: TEventStatus; '
  +'nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure MyR'
  +'ootDivClick(Sender: TObject);'#13#10'  procedure NavTreeDownBtnHandleButton'
  +'Click(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'  procedure NavTreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiStr'
  +'ing; myValue: AnsiString);'#13#10'  procedure NavTreeHandleDragStart(e:TEve'
  +'ntStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure NavTr'
  +'eeHandleDrop(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'  procedure NavTreeHandleDropAccepted(e: TEventStatus; nodeID: AnsiString;'
  +#13#10'    myValue: AnsiString);'#13#10'  procedure ResourceTreeHandleDrop(e'
  +': TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10
  +'  procedure ResourceTreeHandleDropAccepted(e: TEventStatus; nodeID: AnsiStr'
  +'ing;'#13#10'    myValue: AnsiString);'#13#10'  procedure NavTreeUpBtnHandle'
  +'ButtonClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiSt'
  +'ring);'#13#10'  procedure OITabsHandleChange(e: TEventStatus; nodeID: AnsiS'
  +'tring;'#13#10'    myValue: AnsiString);'#13#10'  function NavTreeTreeNodeHi'
  +'ntFunc(TreeLabelStr: String): String;'#13#10'  procedure ObjectInspectorTab'
  +'sHandleChange(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'  procedure ResourceInspectorTabsHandleChange(e: TEventStatus; nodeID: A'
  +'nsiString; myValue: AnsiString);'#13#10'  procedure OICopyComponentHandleBu'
  +'ttonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10' '
  +' procedure OICopyHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myVal'
  +'ue: AnsiString);'#13#10'  procedure OICutHandleButtonClick(e:TEventStatus;n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'  procedure OIDeleteHandleB'
  +'uttonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'  procedure OIPasteHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myV'
  +'alue: AnsiString);'#13#10'  procedure PropertyEditorScrollboxHandleClick(e:'
  ,'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure O'
  +'IAddPropertyButtonHandleButtonClick(e: TEventStatus;'#13#10'    nodeID: Ans'
  +'iString; myValue: AnsiString);'#13#10'  procedure ResourceTreeHandleTreeNod'
  +'eClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  pr'
  +'ocedure ResourceTreeHandleDragStart(e:TEventStatus;nodeID: AnsiString; myVa'
  +'lue: AnsiString);'#13#10'  function ResourceTreeTreeNodeHintFunc(TreeLabelS'
  +'tr: String): String;'#13#10'  procedure StyleNodeQualifierHandleChange(e: T'
  +'EventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  '
  +'procedure StyleSheetHandleDrop(e: TEventStatus; nodeID: AnsiString;'#13#10
  +'    myValue: AnsiString);'#13#10'  procedure StyleSheetHandleDropAccepted(e'
  +': TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10
  +'  procedure StyleSheetHandleTreeNodeClick(e: TEventStatus; nodeID: AnsiStri'
  +'ng;'#13#10'    myValue: AnsiString);'#13#10'  procedure StyleTreeApplyBtnHa'
  +'ndleButtonClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: An'
  +'siString);'#13#10'  procedure StyleTreeDelBtnHandleButtonClick(e: TEventSta'
  +'tus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedur'
  +'e SystemClearHandleClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'  procedure SystemDeployHandleClick(e:TEventStatus;nodeID: An'
  +'siString; myValue: AnsiString);'#13#10'  procedure ResourceTreeDelBtnHandle'
  +'ButtonClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'  procedure ResourceTreeLoadBtnHandleButtonClick(e: TEventSta'
  +'tus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedur'
  +'e SystemEncapsulateHandleClick(e: TEventStatus; nodeID: AnsiString;'#13#10
  +'    myValue: AnsiString);'#13#10'  procedure SystemLoadFromStoreHandleClick'
  +'(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13
  +#10'  procedure SystemLoadHandleClick(e:TEventStatus;nodeID: AnsiString; myV'
  +'alue: AnsiString);'#13#10'  procedure SystemSaveClipHandleClick(e:TEventSta'
  +'tus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure SystemSave'
  +'FileHandleClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: An'
  +'siString);'#13#10'  procedure SystemSettingsHandleClick(e: TEventStatus; no'
  +'deID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure Toggl'
  +'eDesignRunModeHandleClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'  procedure StyleTreeEditBtnHandleButtonClick(e: TEventStatu'
  +'s; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure '
  +'XButton1HandleButtonClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    m'
  +'yValue: AnsiString);'#13#10'  procedure DMTreeAddRefBtnHandleButtonClick(e:'
  +' TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'  procedure XIDETrapEvents1HandleAny(e: TEventStatus; nodeID: AnsiString;  '
  +'myValue: AnsiString);'#13#10'  procedure CodeTreeDelBtnHandleButtonClick(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure C'
  +'odeTreeEditBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString;myValue: '
  +'AnsiString);'#13#10'  procedure CodeTreePascalUnitBtnHandleButtonClick(e:TE'
  +'ventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure Cod'
  +'eTreeSearchBtnHandleButtonClick(e: TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10#13#10'  procedure UIRootClick(Sender: TObject);'#13#10
  +#13#10'private'#13#10'  { private declarations }'#13#10'public'#13#10'  { pu'
  +'blic declarations }'#13#10' end;'#13#10#13#10'var'#13#10'XIDEForm: TXIDEFor'
  +'m;'#13#10#13#10#13#10'implementation'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{'
  +'$ifdef Python}'#13#10'procedure StartupPython;'#13#10'begin'#13#10'  XIDEFo'
  +'rm.CodeTreePythonBtn.IsVisible:=true;'#13#10'  PyMemoComponent:=XIDEForm.XM'
  +'emo1;'#13#10'  RunInitialScript;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'f'
  +'unction TXIDEForm.HandleGenericEvent(MyEventType,myValue:string;EventNode:T'
  +'DataNode):Boolean;'#13#10'var'#13#10'  CompositeNode:TdataNode;'#13#10'begi'
  +'n'#13#10'  result:=true;'#13#10'  // If the EventNode is part of the user'''
  +'s system definition, then select the node in the object inspector.'#13#10' '
  +' if (DesignMode=true)'#13#10'  and ((NodeIsDescendantOf(EventNode,UIProject'
  +'RootName) > -1)'#13#10'    or (EventNode.NodeType=''TXMenuItem'')'#13#10'  '
  +'  or (NodeIsInXForm(EventNode) = true)) then'#13#10'  begin'#13#10'    if ('
  +'(MyEventType=''Click'')'#13#10'      or ( MyEventType=''ButtonClick'')'#13
  +#10'      or ( MyEventType=''TreeNodeClick'')) then'#13#10'    begin'#13#10
  +'      if ((EventNode.NodeType<>''TXMenuItem'') or (EventNode.IsDynamic=true'
  +'))  then'#13#10'      begin'#13#10'        ResourceInspectorTabs.TabIndex:='
  +'0;'#13#10'        ObjectInspectorTabs.TabIndex:=0;'#13#10'        if EventN'
  +'ode.NameSpace<>'''' then'#13#10'        begin'#13#10'          CompositeNod'
  ,'e := FindCompositeContainer(EventNode);'#13#10'          if (CompositeNode<'
  +'>nil) then'#13#10'            SelectNavTreeNode(CompositeNode,false);'#13#10
  +'        end'#13#10'        else'#13#10'          SelectNavTreeNode(EventNod'
  +'e,false);'#13#10'        result:=false;  //do no further event handling'#13
  +#10'      end;'#13#10'    end'#13#10'    else if (MyEventType=''Change'') th'
  +'en'#13#10'    begin'#13#10'      SelectNavTreeNode(EventNode,true);    //re'
  +'fresh'#13#10'    end'#13#10'    else if MyEventType=''HTMLEditorBrowserClos'
  +'ed'' then'#13#10'    begin'#13#10'        // a HTMLEditor browser window ha'
  +'s closed...refresh the object inspector to reflect'#13#10'        // the st'
  +'ate of the ''Showing'' flag.'#13#10'        if ObjectInspectorSelectedNavTr'
  +'eeNode = EventNode then'#13#10'        begin'#13#10'          RefreshObject'
  +'Inspector(EventNode);'#13#10'        end;'#13#10'    end;'#13#10'  end'#13
  +#10'  else if (DesignMode=false)'#13#10'  then'#13#10'  begin'#13#10'    // '
  +'Run Mode.'#13#10'    // Trap a property change event, to push new value to '
  +'destination properties.'#13#10'    if (MyEventType=''Change'') then'#13#10
  +'    begin'#13#10'      //PushSourceToAttributes(EventNode,?????SourceAttrib'
  +');       //...we don''t know which attribute has changed'#13#10'      PushN'
  +'odeSourcesToAttributes(EventNode);'#13#10'    end;'#13#10'  end;'#13#10'end'
  +';'#13#10#13#10'procedure TXIDEForm.DummyPositionMarker;     // do not delet'
  +'e this procedure'#13#10'begin'#13#10'end;'#13#10#13#10'procedure TXIDEForm.'
  +'CodeTreePythonBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiSt'
  +'ring; myValue: AnsiString);'#13#10'begin'#13#10'  OIAddCodeUnitNode(''Pytho'
  +'nScript'');'#13#10'end;'#13#10#13#10'procedure TXIDEForm.CodeTreeDownBtnHan'
  +'dleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'begin'#13#10'  CodeTreeMoveSiblingUpDown(''Down'');'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXIDEForm.CodeTreeUpBtnHandleButtonClick(e: TEve'
  +'ntStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'
  +#13#10'  CodeTreeMoveSiblingUpDown(''Up'');'#13#10'end;'#13#10#13#10'procedu'
  +'re TXIDEForm.DataTreeHandleTreeNodeClick(e: TEventStatus;'#13#10'  nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  DMDataTreeNodeChang'
  +'e(e,nodeId,'''',myValue);'#13#10'end;'#13#10#13#10'function TXIDEForm.DataT'
  +'reeTreeNodeHintFunc(TreeLabelStr: String): String;'#13#10'begin'#13#10'  re'
  +'sult:=DMTreeNodeHint(TreeLabelStr);'#13#10'end;'#13#10#13#10'procedure TXID'
  +'EForm.DMTreeAddButtonHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: An'
  +'siString; myValue: AnsiString);'#13#10'begin'#13#10'  DMAddElement;'#13#10
  +'end;'#13#10#13#10'procedure TXIDEForm.DMTreeAddOpBtnHandleButtonClick(e: TE'
  +'ventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'
  +#13#10'  DMAddElement(''DMOp'');'#13#10'end;'#13#10#13#10'procedure TXIDEFor'
  +'m.DMTreeAddContainsBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: A'
  +'nsiString; myValue: AnsiString);'#13#10'begin'#13#10'  DMAddElement(''DMCon'
  +'tains'');'#13#10'end;'#13#10#13#10'procedure TXIDEForm.DMTreeAddRefBtnHandl'
  +'eButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'begin'#13#10'  DMAddElement(''DMRef'');'#13#10'end;'#13#10#13
  +#10'procedure TXIDEForm.DMTreeDelBtnHandleButtonClick(e: TEventStatus;'#13#10
  +'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  DMDeleteE'
  +'lement;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.DMUpBtnHandleButtonCli'
  +'ck(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'begin'#13#10'  DMMoveSiblingUpDown(''Up'');'#13#10'end;'#13#10#13#10'pro'
  +'cedure TXIDEForm.DMDownBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeI'
  +'D: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  DMMoveSiblingUpD'
  +'own(''Down'');'#13#10'end;'#13#10#13#10'procedure TXIDEForm.NavTreeHandleTr'
  +'eeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'begin'#13#10'  OINavTreeNodeChange(e,nodeId,'''',myValue);'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.NavTreeHandleDragStart(e:TEventStatus;nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIDragItem(e,nodeId'
  +',myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.NavTreeHandleDrop(e'
  +':TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10
  +'  OIDropItem(e,nodeId,myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEFor'
  +'m.NavTreeHandleDropAccepted(e: TEventStatus;'#13#10'  nodeID: AnsiString; m'
  +'yValue: AnsiString);'#13#10'var'#13#10'  SourceIsNavigator,SourceIsResource'
  +'Tree:Boolean;'#13#10'  DstNodeName,Part1:String;'#13#10'  DstNode:TDataNode'
  +';'#13#10'  ok:Boolean;'#13#10'  values:TNodeEventValue;'#13#10'begin'#13#10
  +'  //showmessage(''checking drop. Sourcename=''+SourceName+'' DstText=''+dst'
  +'Text);'#13#10#13#10'  // e.ValueObject is an object of type TNodeEventValue'
  ,'.'#13#10'  // values.myNode is of type TTreeNode, and contains data with a '
  +'unique id.'#13#10'  values:=TNodeEventValue(e.ValueObject);'#13#10#13#10'  '
  +'SourceIsNavigator:=false;'#13#10'  SourceIsResourceTree:=false;'#13#10'  if'
  +' (values.SourceName=''ResourceTree'') then'#13#10'  begin'#13#10'    Source'
  +'IsResourceTree:=true;'#13#10'  end;'#13#10'  if (values.SourceName=''NavTre'
  +'e'') then SourceIsNavigator:=true;'#13#10'  ok:=(SourceIsNavigator )'#13#10
  +'          or (SourceIsResourceTree );'#13#10#13#10'  if ok'#13#10'  and Sou'
  +'rceIsResourceTree then'#13#10'  begin'#13#10'    //showmessage(''checking d'
  +'rop. DstText=''+dstText);'#13#10'    // additional node-level checks...'#13
  +#10'    if (values.dstText<>'''') then'#13#10'    begin'#13#10'      DstNode'
  +'name:=TreeLabelToId(values.DstText,''NavTree'',Part1);'#13#10'      DstNode'
  +':=FindDataNodeById(UIRootNode,DstNodeName,'''',true);     //!!namespace - a'
  +'ssuming top design level only'#13#10'      if (DstNode<>nil) then'#13#10'  '
  +'    begin'#13#10'        ok:=OINavTreeAllowDrop(DstNode);'#13#10'      end;'
  +#13#10'    end;'#13#10'  end;'#13#10'  e.ReturnString:=myBoolToStr(ok);'#13
  +#10'end;'#13#10#13#10'procedure TXIDEForm.NavTreeUpBtnHandleButtonClick(e: T'
  +'EventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begi'
  +'n'#13#10'  OIMoveNavSiblingUpDown(''Up'');'#13#10'end;'#13#10#13#10'procedu'
  +'re TXIDEForm.OITabsHandleChange(e: TEventStatus; nodeID: AnsiString;'#13#10
  +'  myValue: AnsiString);'#13#10'begin'#13#10'  OIPropsEventsTabChange;'#13#10
  +'end;'#13#10#13#10'procedure TXIDEForm.NavTreeDownBtnHandleButtonClick(e: TE'
  +'ventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'
  +#13#10'  OIMoveNavSiblingUpDown(''Down'');'#13#10'end;'#13#10#13#10'function'
  +' TXIDEForm.NavTreeTreeNodeHintFunc(TreeLabelStr: String): String;'#13#10'be'
  +'gin'#13#10'  result := OITreeNodeHint(TreeLabelStr);'#13#10'end;'#13#10#13
  +#10'procedure TXIDEForm.ObjectInspectorTabsHandleChange(e:TEventStatus;nodeI'
  +'D: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  {$ifdef JScript}'
  +#13#10'  if ObjectInspectorTabs.TabIndex=3 then'#13#10'  begin'#13#10'     S'
  +'etStyleOptions;'#13#10'     ResourceInspectorTabs.TabIndex:=1;'#13#10'  end'
  +#13#10'  else if ObjectInspectorTabs.TabIndex=0 then'#13#10'    ResourceInsp'
  +'ectorTabs.TabIndex:=0;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure'
  +' TXIDEForm.OICopyComponentHandleButtonClick(e:TEventStatus;nodeID: AnsiStri'
  +'ng; myValue: AnsiString);'#13#10'begin'#13#10'  OIComponentCopy(nodeId,myVa'
  +'lue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OICopyHandleButtonClick('
  +'e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10
  +'  OICopySelectedItem;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OICutHan'
  +'dleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'begin'#13#10'  OICutItem(nodeId,myValue);'#13#10'end;'#13#10#13#10'proce'
  +'dure TXIDEForm.OIDeleteHandleButtonClick(e:TEventStatus;nodeID: AnsiString;'
  +' myValue: AnsiString);'#13#10'begin'#13#10'   OIDeleteSelectedItem;'#13#10
  +'end;'#13#10#13#10'procedure TXIDEForm.OIPasteHandleButtonClick(e:TEventStat'
  +'us;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIPasteI'
  +'tem(nodeId,myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.PropertyE'
  +'ditorScrollboxHandleClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'begin'#13#10#13#10'end;'#13#10#13#10'procedure TXIDEForm.Res'
  +'ourceTreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: An'
  +'siString);'#13#10'begin'#13#10'  OIResourceTreeNodeChange(nodeId,myValue);'
  +#13#10'end;'#13#10#13#10'procedure TXIDEForm.ResourceTreeHandleDragStart(e:T'
  +'EventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10' '
  +' OIDragItem(e,nodeId,myValue);'#13#10'end;'#13#10#13#10'function TXIDEForm.'
  +'ResourceTreeTreeNodeHintFunc(TreeLabelStr: String): String;'#13#10'begin'#13
  +#10'  result := OIResTreeNodeHint(TreeLabelStr);'#13#10'end;'#13#10#13#10#13
  +#10'procedure TXIDEForm.StyleNodeQualifierHandleChange(e: TEventStatus;'#13
  +#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  {$ifde'
  +'f JScript}'#13#10'  UpdateNodeQualifierField;'#13#10'  GenerateStyleSheets;'
  +#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEForm.StyleSheetHan'
  +'dleDrop(e: TEventStatus; nodeID: AnsiString;'#13#10'  myValue: AnsiString);'
  +#13#10'{$ifdef JScript}'#13#10'var'#13#10'  values:TNodeEventValue;'#13#10' '
  +' TreeNodeId:String;'#13#10'{$endif}'#13#10'begin'#13#10'  // e.ValueObject '
  +'is an object of type TNodeEventValue.'#13#10'  // values.myNode is of type '
  +'TTreeNode, and contains data with a unique id.'#13#10#13#10'  {$ifdef JScri'
  +'pt}'#13#10'  values:=TNodeEventValue(e.ValueObject);'#13#10'  asm'#13#10'  '
  +'  TreeNodeId=values.myNode.id;'#13#10'  end;'#13#10'  //showmessage(''dropp'
  +'ing on node ''+TreeNodeId);'#13#10'  StyleSheet.selectedNodeId:=TreeNodeId;'
  ,#13#10'  PasteSelectedStyleResources(true,DropTarget,false,TNodeEventValue(e'
  +'.ValueObject));// the boolean means this does the paste and reports errors '
  +'rather than just checking it'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'pro'
  +'cedure TXIDEForm.StyleSheetHandleDropAccepted(e: TEventStatus;'#13#10'  nod'
  +'eID: AnsiString; myValue: AnsiString);'#13#10'{$ifdef JScript}'#13#10'var'
  +#13#10'  values:TNodeEventValue;'#13#10'  SourceName,SrcText,DstText,ReturnS'
  +'tring:String;'#13#10'  priorNodeText:string;'#13#10'{$endif}'#13#10'begin'
  +#13#10'  {$ifdef JScript}'#13#10'  values:=TNodeEventValue(e.ValueObject);'
  +#13#10'  SourceName:=values.SourceName;  // name of tree being dragged from'
  +#13#10'  SrcText:=values.SrcText;        // text of treenode being dragged'
  +#13#10'  DstText:=values.DstText;        // text of treenode being dragged o'
  +'ver'#13#10'  if SourceName=''StyleResources'' then'#13#10'  begin'#13#10'  '
  +'  // set e.ReturnString to "True" or "False"'#13#10'    PriorNodeText:= Sty'
  +'leResources.SelectedNodeText;'#13#10'    if SrcText <> priorNodeText then'
  +#13#10'      EditAttributeValue(''StyleResources'','''',''SelectedNodeText'''
  +',SrcText);'#13#10'    WatchBox.ItemValue:=''StyleResources.SelectedNodeText'
  +'=''+StyleResources.SelectedNodeText;'#13#10'    if PasteSelectedStyleResour'
  +'ces(false,DstText,true,TNodeEventValue(e.ValueObject))=true  then'#13#10'  '
  +'    ReturnString:=''True'''#13#10'    else'#13#10'      ReturnString:=''Fal'
  +'se'';'#13#10'  end'#13#10'  else'#13#10'    ReturnString:=''False'';'#13#10
  +'  e.ReturnString:=ReturnString;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'procedure TXIDEForm.StyleSheetHandleTreeNodeClick(e: TEventStatus;'#13#10' '
  +' nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  {$ifdef JS'
  +'cript}'#13#10'  PopulateStyleEditor(false);// use drop downs if available'
  +#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEForm.StyleTreeAppl'
  +'yBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  UpdateNodeQu'
  +'alifierField;'#13#10'  GenerateStyleSheets;'#13#10'  {$endif}'#13#10'end;'
  +#13#10#13#10'procedure TXIDEForm.StyleTreeDelBtnHandleButtonClick(e: TEventS'
  +'tatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13
  +#10'  {$ifdef JScript}'#13#10'  DeleteStyleNode;'#13#10'  {$endif}'#13#10'en'
  +'d;'#13#10#13#10'procedure TXIDEForm.ResourceTreeHandleDrop(e: TEventStatus;'
  +' nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10'begin'#13#10'end'
  +';'#13#10#13#10#13#10'procedure TXIDEForm.ResourceTreeHandleDropAccepted(e: '
  +'TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'var'
  +#13#10'  SourceIsResourceTree:Boolean;'#13#10'  values:TNodeEventValue;'#13
  +#10'begin'#13#10'  values:=TNodeEventValue(e.ValueObject);'#13#10'  SourceIs'
  +'ResourceTree:=false;'#13#10'  if (values.SourceName=''ResourceTree'') then '
  +'SourceIsResourceTree:=true;'#13#10'  e.ReturnString:=myBoolToStr(SourceIsRe'
  +'sourceTree );'#13#10'end;'#13#10#13#10'procedure TXIDEForm.ResourceTreeDelB'
  +'tnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: '
  +'AnsiString);'#13#10'begin'#13#10'  OIDeleteResource;'#13#10'end;'#13#10#13
  +#10'procedure TXIDEForm.ResourceTreeLoadBtnHandleButtonClick(e: TEventStatus'
  +';'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  '
  +'OILoadResource;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.SystemEncapsul'
  +'ateHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'begin'#13#10'  OIEncapsulate;'#13#10'end;'#13#10#13#10'proce'
  +'dure TXIDEForm.SystemLoadFromStoreHandleClick(e: TEventStatus;'#13#10'  nod'
  +'eID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  if DesignMode='
  +'false then'#13#10'    ShowMessage(''Please switch to Design Mode first'')'
  +#13#10'  else'#13#10'  begin'#13#10'    SavedSystemsForm.Initialise;'#13#10
  +'    XForm.ShowXForm(''SavedSystemsForm'',true);'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'procedure TXIDEForm.UIRootClick(Sender: TObject);'#13#10'begin'
  +#13#10'end;'#13#10#13#10'procedure TXIDEForm.SystemClearHandleClick(e:TEvent'
  +'Status;nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10'var'#13#10
  +'ok:boolean;'#13#10'begin'#13#10'  ok:=XIDEConfirm(''OK to clear the system?'
  +''');'#13#10#13#10'  if ok then'#13#10'  begin'#13#10'    OIClearSystem;'#13
  +#10'    SelectNavTreeNode(MainFormProjectRoot,true);'#13#10#13#10'  end;'#13
  +#10'end;'#13#10#13#10'procedure TXIDEForm.SystemDeployHandleClick(e:TEventSt'
  +'atus;nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10'begin'#13#10
  +'  OIDeploySystem;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.SystemLoadHa'
  +'ndleClick(e:TEventStatus;nodeID: AnsiString;'#13#10'  myValue: AnsiString);'
  +#13#10'begin'#13#10'  if DesignMode=false then'#13#10'    ShowMessage(''Plea'
  +'se switch to Design Mode first'')'#13#10'  else'#13#10'    OISystemLoad(e,n'
  ,'odeId);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.SystemSaveClipHandleCl'
  +'ick(e:TEventStatus;nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10
  +'begin'#13#10'  SaveSystemToClip;'#13#10'end;'#13#10#13#10'procedure TXIDEFo'
  +'rm.SystemSaveFileHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; '
  +'myValue: AnsiString);'#13#10'begin'#13#10'  SaveSystemToFile;'#13#10'end;'
  +#13#10#13#10#13#10'procedure TXIDEForm.ToggleDesignRunModeHandleClick(e:TEve'
  +'ntStatus;nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10'begin'#13
  +#10'  if DesignMode then'#13#10'      SaveSystemData;'#13#10#13#10'  DoToggl'
  +'eDesignRunMode(ToggleDesignRunMode);'#13#10'end;'#13#10#13#10#13#10'procedu'
  +'re TXIDEForm.StyleTreeEditBtnHandleButtonClick(e: TEventStatus;'#13#10'  no'
  +'deID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  {$ifdef JScri'
  +'pt}'#13#10'  PopulateStyleEditor(true);// edit instead of using drop downs '
  +'when available'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEFo'
  +'rm.XButton1HandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; '
  +'myValue: AnsiString);'#13#10'begin'#13#10'//  ConstructPascalDM();'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXIDEForm.XIDETrapEvents1HandleAny(e: TEventStat'
  +'us;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  '
  +'eventNode:TDataNode;'#13#10'  doContinue:Boolean;'#13#10'begin'#13#10'  eve'
  +'ntNode:=FindDataNodeById(SystemNodeTree,e.NodeId,e.NameSpace,true);'#13#10
  +'  doContinue:=HandleGenericEvent(e.eventtype,myValue,eventNode);'#13#10'  e'
  +'.ContinueAfterTrappers:=doContinue;'#13#10'end;'#13#10#13#10'procedure TXID'
  +'EForm.CodeTreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValu'
  +'e: AnsiString);'#13#10'begin'#13#10'   OICodeTreeNodeChange(nodeId,myValue)'
  +';'#13#10'end;'#13#10#13#10'procedure TXIDEForm.HelpAboutHandleClick(e: TEve'
  +'ntStatus; nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10'begin'
  +#13#10'  XForm.ShowXForm(''AboutXIDEForm'',true);'#13#10'end;'#13#10#13#10'p'
  +'rocedure TXIDEForm.HelpOverviewHandleClick(e: TEventStatus;'#13#10'  nodeID'
  +': AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  ClearInspectors;'
  +#13#10'  XIDEHelpForm.InitialiseonShow;'#13#10'  XForm.ShowXForm(''XIDEHelpF'
  +'orm'',false);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.MyRootDivClick(S'
  +'ender: TObject);'#13#10'begin'#13#10'end;'#13#10#13#10'procedure TXIDEForm.'
  +'CodeTreePascalUnitBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString;'
  +#13#10'  myValue: AnsiString);'#13#10'begin'#13#10'  OIAddCodeUnitNode(''Pas'
  +'Unit'');'#13#10'end;'#13#10#13#10'procedure TXIDEForm.CodeTreeEditBtnHandle'
  +'ButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'begin'#13#10'  OIEditCodeUnit;'#13#10'end;'#13#10#13#10'procedure TXIDEForm'
  +'.CodeTreeDelBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'begin'#13#10'  OIDeleteCodeUnit;'#13#10'end;'#13#10#13
  +#10'procedure XIDESetupUIRootNode;'#13#10'begin'#13#10'  UIRootNode.SetAttri'
  +'buteValue(''DeploymentMode'',''Design'');'#13#10'  UIRootNode.SetAttributeV'
  +'alue(''SystemName'',''XIDESystem'');'#13#10'  UIRootNode.SetAttributeValue('
  +'''DBVersion'',''1'',''Integer'',true);'#13#10'  // Add root node attributes'
  +' for ''settings'' data...'#13#10'  UIRootNode.SetAttributeValue(''ShowResou'
  +'rces'',''Right'');     //Left,Right'#13#10'  UIRootNode.SetAttributeValue('
  +'''PythonPackages'','''');    //eg. numpy;matplotlib;scipy'#13#10#13#10'  //'
  +' Add root node events'#13#10'  UIRootNode.myeventTypes.Add(''OnEnterRunMode'
  +''');'#13#10'  UIRootNode.myeventTypes.Add(''OnExitRunMode'');'#13#10'  UIRo'
  +'otNode.InitialiseEventHandlers;'#13#10'  {$ifdef JScript}'#13#10'  UIRootNo'
  +'de.MyForm:=nil;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEF'
  +'orm.SystemSettingsHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString;'
  +' myValue: AnsiString);'#13#10'begin'#13#10#13#10'  XIDESettingsForm.Initial'
  +'iseOnShow;'#13#10'  ShowXForm(''XIDESettingsForm'',true);'#13#10#13#10'end;'
  +#13#10#13#10'procedure TXIDEForm.OIAddPropertyButtonHandleButtonClick(e: TEv'
  +'entStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'
  +#13#10'  OIAddInterfaceElement;'#13#10'end;'#13#10#13#10'procedure TXIDEForm'
  +'.ResourceInspectorTabsHandleChange(e: TEventStatus;'#13#10'  nodeID: AnsiSt'
  +'ring; myValue: AnsiString);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10' '
  +' if ResourceInspectorTabs.TabIndex=1 then'#13#10'  begin'#13#10'     Object'
  +'InspectorTabs.TabIndex:=3;'#13#10'  end'#13#10'  else if ResourceInspectorT'
  +'abs.TabIndex=0 then'#13#10'    ObjectInspectorTabs.TabIndex:=0;'#13#10'  {$'
  +'endif}'#13#10'end;'#13#10#13#10'procedure TXIDEForm.CodeTreeSearchBtnHandle'
  +'ButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStri'
  +'ng);'#13#10'begin'#13#10'  OICodeSearch;'#13#10'end;'#13#10#13#10'{$ifndef '
  +'JScript}'#13#10#13#10#13#10'procedure InitialiseResources;'#13#10'// define'
  ,' project-specific resources.'#13#10'// required files have been pre-built i'
  +'nto the resource file xide.lrs.'#13#10'// the resource folders and files wi'
  +'ll be created from these lists by the procedure WriteResourceFiles in unit '
  +'UtilsJSCompile.'#13#10'begin'#13#10'  gpujs:=ResourceToString(''gpu-browser'
  +''');'#13#10#13#10'  // files needed for this project to be compiled by pas2'
  +'js, to generate the project JS file...'#13#10'  AddRequiredFile(''webtransp'
  +'ilerutils'',''resources/project/webtranspilerutils.pas'');'#13#10'  AddRequ'
  +'iredFile(''xthreads'',''resources/project/xthreads.pas'');'#13#10'  AddRequ'
  +'iredFile(''xgpucanvas'',''resources/project/xgpucanvas.pas'');'#13#10'  Add'
  +'RequiredFile(''xgpueditor'',''resources/project/xgpueditor.pas'');'#13#10' '
  +' AddRequiredFile(''x3dtable'',''resources/project/x3dtable.pas'');'#13#10' '
  +' AddRequiredFile(''xdbtable'',''resources/project/xdbtable.pas'');'#13#10' '
  +' AddRequiredFile(''xcomposite'',''resources/project/xcomposite.pas'');'#13
  +#10'  AddRequiredFile(''xcompositeintf'',''resources/project/xcompositeintf.'
  +'pas'');'#13#10'  AddRequiredFile(''gpu-browser'',''resources/project/gpu-br'
  +'owser.js'');'#13#10#13#10'  AddRequiredFile(''xidemain'',''resources/projec'
  +'t/XIDEMain.pas'');'#13#10'  AddRequiredFile(''xobjectinsp'',''resources/pro'
  +'ject/xobjectinsp.pas'');'#13#10'  AddRequiredFile(''codeeditor'',''resource'
  +'s/project/codeeditor.pas'');'#13#10'  AddRequiredFile(''compileusercode'','
  +'''resources/project/compileusercode.pas'');'#13#10'  AddRequiredFile(''inpu'
  +'tselectunit'',''resources/project/inputselectunit.pas'');'#13#10'  AddRequi'
  +'redFile(''propertyeditunit'',''resources/project/propertyeditunit.pas'');'
  +#13#10'  AddRequiredFile(''popupmemo'',''resources/project/popupmemo.pas'');'
  +#13#10'  AddRequiredFile(''interfacetypes'',''resources/project/interfacetyp'
  +'es.pas'');'#13#10'  AddRequiredFile(''interfacetypesdll'',''resources/proje'
  +'ct/interfacetypesdll.pas'');'#13#10'  AddRequiredFile(''aboutunit'',''resou'
  +'rces/project/aboutunit.pas'');'#13#10'  AddRequiredFile(''xidehelpunit'','''
  +'resources/project/xidehelpunit.pas'');'#13#10'  AddRequiredFile(''savedsyst'
  +'ems'',''resources/project/savedsystems.pas'');'#13#10'  AddRequiredFile(''s'
  +'tylesutils'',''resources/project/stylesutils.pas'');'#13#10'  AddRequiredFi'
  +'le(''pyxutils'',''resources/project/pyxutils.pas'');'#13#10'  AddRequiredFi'
  +'le(''xidesettings'',''resources/project/xidesettings.pas'');'#13#10'  AddRe'
  +'quiredFile(''intfparamunit'',''resources/project/intfparamunit.pas'');'#13
  +#10'  AddRequiredFile(''intfeventunit'',''resources/project/intfeventunit.pa'
  +'s'');'#13#10'  AddRequiredFile(''xdatamodel'',''resources/project/xdatamode'
  +'l.pas'');'#13#10#13#10'  // files needed for web-pas2jscompiler to be compi'
  +'lable by pas2js, and built into the project JS file...'#13#10'  AddRequired'
  +'File(''fppas2js'',''resources/pas2jstranspiler/fppas2js.pp'');'#13#10'  Add'
  +'RequiredFile(''fppjssrcmap'',''resources/pas2jstranspiler/fppjssrcmap.pp'')'
  +';'#13#10'  AddRequiredFile(''pas2jscompiler'',''resources/pas2jstranspiler/'
  +'pas2jscompiler.pp'');'#13#10'  AddRequiredFile(''fpjson'',''resources/pas2j'
  +'stranspiler/fpjson.pp'');                       // used by filecache'#13#10
  +'  AddRequiredFile(''pas2jsfilecache'',''resources/pas2jstranspiler/pas2jsfi'
  +'lecache.pp'');'#13#10'  AddRequiredFile(''pas2jsfiler'',''resources/pas2jst'
  +'ranspiler/pas2jsfiler.pp'');'#13#10'  AddRequiredFile(''pas2jsfileutils'','
  +'''resources/pas2jstranspiler/pas2jsfileutils.pp'');'#13#10'  AddRequiredFil'
  +'e(''pas2jsfileutilsnodejs'',''resources/pas2jstranspiler/pas2jsfileutilsnod'
  +'ejs.inc'');'#13#10'  AddRequiredFile(''pas2jslogger'',''resources/pas2jstra'
  +'nspiler/pas2jslogger.pp'');'#13#10'  AddRequiredFile(''pas2jspparser'',''re'
  +'sources/pas2jstranspiler/pas2jspparser.pp'');'#13#10'  AddRequiredFile(''pa'
  +'s2js_defines'',''resources/pas2jstranspiler/pas2js_defines.inc'');'#13#10' '
  +' AddRequiredFile(''nodejsfs'',''resources/pas2jstranspiler/nodejsfs.pas'');'
  +#13#10'  AddRequiredFile(''contnrs'',''resources/pas2jstranspiler/contnrs.pa'
  +'s'');'#13#10'  AddRequiredFile(''nodejs'',''resources/pas2jstranspiler/node'
  +'js.pas'');'#13#10'  AddRequiredFile(''jstree'',''resources/pas2jstranspiler'
  +'/jstree.pp'');'#13#10'  AddRequiredFile(''jswriter'',''resources/pas2jstran'
  +'spiler/jswriter.pp'');'#13#10'  AddRequiredFile(''jsbase'',''resources/pas2'
  +'jstranspiler/jsbase.pp'');'#13#10'  AddRequiredFile(''jssrcmap'',''resource'
  +'s/pas2jstranspiler/jssrcmap.pas'');'#13#10'  AddRequiredFile(''jstoken'','''
  +'resources/pas2jstranspiler/jstoken.pp'');'#13#10'  AddRequiredFile(''pscann'
  +'er'',''resources/pas2jstranspiler/pscanner.pp'');'#13#10'  AddRequiredFile('
  +'''pparser'',''resources/pas2jstranspiler/pparser.pp'');'#13#10'  AddRequire'
  +'dFile(''pastree'',''resources/pas2jstranspiler/pastree.pp'');'#13#10'  AddR'
  +'equiredFile(''pasresolver'',''resources/pas2jstranspiler/pasresolver.pp'');'
  ,#13#10'  AddRequiredFile(''pasuseanalyzer'',''resources/pas2jstranspiler/pas'
  +'useanalyzer.pp'');'#13#10'  AddRequiredFile(''pasresolveeval'',''resources/'
  +'pas2jstranspiler/pasresolveeval.pas'');'#13#10'  AddRequiredFile(''web'','''
  +'resources/pas2jstranspiler/web.pas'');'#13#10'  AddRequiredFile(''pas2jsuti'
  +'ls'',''resources/pas2jstranspiler/pas2jsutils.pp'');'#13#10'  AddRequiredFi'
  +'le(''pas2jsfs'',''resources/pas2jstranspiler/pas2jsfs.pp'');'#13#10'  AddRe'
  +'quiredFile(''webfilecache'',''resources/pas2jstranspiler/webfilecache.pp'')'
  +';'#13#10'  AddRequiredFile(''pas2jswebcompiler'',''resources/pas2jstranspil'
  +'er/pas2jswebcompiler.pp'');'#13#10#13#10'  InitialiseCompilerResources(''XI'
  +'DE'',ProjectDirectory);'#13#10#13#10'  if not DirectoryExists(''SavedSystem'
  +'s'') then'#13#10'    CreateDir(''SavedSystems'');'#13#10'end;'#13#10#13#10
  +'{ TXIDEForm }'#13#10'procedure TXIDEForm.FormCreate(Sender: TObject);'#13#10
  +'var'#13#10'  SystemDescription:String;'#13#10'begin'#13#10#13#10'  MainForm'
  +':=self;'#13#10'  MainFormTopControl:=MyRootDiv;'#13#10'  UITopControl:=UIRo'
  +'ot;'#13#10#13#10'  SystemNodeTree.ScreenObject:=nil;       // root node has'
  +' no screen object.'#13#10#13#10'  myNode:=DoXFormCreated(self);'#13#10#13#10
  +'  XIDESetupUIRootNode;'#13#10#13#10'  MainFormProjectRoot:=FindDataNodeById'
  +'(SystemNodeTree,UIProjectRootName,'''',true);'#13#10#13#10'  NavTreeCompone'
  +'nt:=self.NavTree.myNode;'#13#10'  DataTreeComponent:=self.DataTree.myNode;'
  +#13#10'  ResourceTreeComponent:=self.ResourceTree.myNode;'#13#10'  CodeTreeC'
  +'omponent:=self.CodeTree.myNode;'#13#10#13#10'  InitialiseResources;'#13#10
  +'  InitialiseXIDE;'#13#10'  InitialiseXComponentsProject;'#13#10'  XGPUEdito'
  +'r.CreateGPUEditForm;'#13#10'  GPUEditorDoneBtn.myNode.registerEvent(''Butto'
  +'nClick'',@OIEventWrapper.CloseGPUEditor);'#13#10#13#10'  InitialiseStyleDes'
  +'igner;'#13#10#13#10'  StyleResourcesPage.IsVisible:=false;      // this is '
  +'browser/HTML only'#13#10'  ObjectInspectorTabs.TabIndex:=0;'#13#10'  Resour'
  +'ceInspectorTabs.TabIndex:=0;'#13#10#13#10'  // is there a saved system from'
  +' a previous session?'#13#10'  SystemDescription:=trim(ReadFromLocalStore('''
  +'XIDESavedData.txt''));'#13#10'  if SystemDescription<>'''' then'#13#10'  be'
  +'gin'#13#10'    DoSystemLoad(SystemDescription,'''');'#13#10'  end'#13#10'  '
  +'else'#13#10'    SelectNavTreeNode(MainFormProjectRoot,true);'#13#10#13#10' '
  +' {$ifdef Python}'#13#10'  StartupPython;'#13#10'  {$endif}'#13#10#13#10'end'
  +';'#13#10#13#10'procedure TXIDEForm.LoadIframes(dum:integer);'#13#10'begin'
  +#13#10'  // un-suspend all the ''iframe'' components...'#13#10'  GlobalSuppr'
  +'essFrameDisplay:=false;'#13#10'  UnSuspendFrames(SystemNodeTree);'#13#10'en'
  +'d;'#13#10#13#10'procedure TXIDEForm.FormActivate(Sender: TObject);'#13#10'b'
  +'egin'#13#10'  LoadIframes(0);'#13#10' // Application.QueueAsyncCall(@LoadIf'
  +'rames, 0);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.FormClose(Sender: T'
  +'Object; var CloseAction: TCloseAction);'#13#10'begin'#13#10'  SaveSystemDat'
  +'a;'#13#10'  SuppressEvents:=true;'#13#10'  inherited FormClose(Sender, Clos'
  +'eAction);'#13#10'  {$ifdef Python}'#13#10'  if Assigned(PythonEngine1) then'
  +#13#10'  begin'#13#10'    PythonEngine1.Finalize;  //!! to prevent crash whe'
  +'n main form is closed  !!!! not working?.'#13#10'    PythonEngine1.UnloadDl'
  +'l;'#13#10'    PythonEngine1.Destroy;'#13#10'  end;'#13#10'  {$endif}'#13#10
  +'end;'#13#10#13#10#13#10'procedure TXIDEForm.CompileToJSClick(Sender: TObjec'
  +'t);'#13#10'var'#13#10'  ok:Boolean;'#13#10'  i:integer;'#13#10'  ExtraDirec'
  +'tives,ExtraHTML:TStringList;'#13#10'begin'#13#10#13#10'  // Start in Design'
  +' Mode'#13#10'  if not DesignMode then'#13#10'    DoToggleDesignRunMode(Togg'
  +'leDesignRunMode);'#13#10#13#10'  // Close any open popups'#13#10'  for i:=l'
  +'ength(OpenXForms)-1 downto 0 do'#13#10'  begin'#13#10'    CloseXForm(OpenXF'
  +'orms[i].NodeName,OpenXForms[i].NameSpace);'#13#10'  end;'#13#10#13#10'  // '
  +'Delete object inspector dynamic property editor fields'#13#10'  ClearInspec'
  +'tors;'#13#10#13#10'  SaveSystemData;'#13#10#13#10'  ExtraDirectives:=TStrin'
  +'gList.Create;'#13#10'  // Compile the user-created event code into a unit, '
  +'to check for pas2js compile errors.'#13#10'  ok:=CompileEventCode(CodeEditF'
  +'orm.CodeEdit,''LazJS'');'#13#10#13#10'  ExtraHTML:=TStringList.Create;'#13
  +#10'  if ok then'#13#10'  begin'#13#10'    // additional inc file for compos'
  +'ite resources'#13#10'    SaveCompositesToIncFile;'#13#10#13#10'    {$ifdef '
  +'Python}'#13#10'    ExtraDirectives.add(''-dPython'');'#13#10'    ExtraHTML:'
  +'=PyodideScript;'#13#10'    {$endif}'#13#10'    //ExtraHTML.Add(''<script sr'
  +'c="http://asterius.netlify.app/demo/pandoc/pandoc.js"></script> '');  //###'
  +'### pandoc test'#13#10'    //ExtraHTML.Add(''<script src="file:///C:/Laz19P'
  +'rojects/XIDE/pandoc/pandoc.js"></script> '');  //###### pandoc test'#13#10
  +'    //ExtraHTML.Add(''<script src="file:///C:/Laz19Projects/XIDE/pandoc/try'
  ,'server.js"></script> '');  //###### pandoc test'#13#10#13#10'    CompileJSa'
  +'ndExecute(''resources/project/'',ExtraDirectives,ExtraHTML);'#13#10'    if '
  +'not FileExists(''XIDEMain.js'') then'#13#10'      ShowCompilerLog;'#13#10' '
  +' end'#13#10'  else'#13#10'  begin'#13#10'    DisplayDllCompileErrors;'#13#10
  +'  end;'#13#10'  ExtraDirectives.free;'#13#10'  ExtraHTML.Free;'#13#10'end;'
  +#13#10#13#10'procedure TXIDEForm.CompilerShowLogClick(Sender: TObject);'#13
  +#10'begin'#13#10'  ShowCompilerLog;'#13#10'end;'#13#10#13#10'procedure TXIDE'
  +'Form.FormResize(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(self, '
  +'MyRootDiv);'#13#10'end;'#13#10#13#10#13#10'{$else}'#13#10'procedure Initial'
  +'isePage(dummy:string);'#13#10'var'#13#10'  tempstr,dm:string;'#13#10'  i:in'
  +'teger;'#13#10'  s,str:string;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  ok'
  +':=true;'#13#10#13#10'  StartingUp:=true;// suppress event handlers while st'
  +'arting up'#13#10'  CheckBrowser;'#13#10#13#10'  // this include file contai'
  +'ns create statements for all the interface objects in main form and other f'
  +'orms'#13#10'  // XForm nodes are added as children of UIRootNode.'#13#10'  '
  +'{$I systemintface.inc}'#13#10'  MainForm:=XIDEForm;'#13#10'  //showmessage('
  +'''mainform node is ''+MainForm.myNode.NodeName+'' class=''+MainForm.myNode.'
  +'NodeClass+'' type=''+MainForm.myNode.NodeType);'#13#10#13#10'  asm'#13#10' '
  +' try{'#13#10'     // now do Javascript specific start up code'#13#10'     p'
  +'as.HTMLUtils.addHandVBoxStyles();'#13#10'     pas.HTMLUtils.addWidgetInnerS'
  +'tyles();'#13#10'     }catch(err) { alert(err.message+'' in XIDEMain'');}'#13
  +#10'  end;'#13#10#13#10'  XIDESetupUIRootNode;'#13#10'  InitDMTree;'#13#10#13
  +#10'  NavTreeComponent:=XIDEForm.NavTree.myNode;'#13#10'  DataTreeComponent:'
  +'=XIDEForm.DataTree.myNode;'#13#10'  ResourceTreeComponent:=XIDEForm.Resourc'
  +'eTree.myNode;'#13#10'  CodeTreeComponent:=XIDEForm.CodeTree.myNode;'#13#10
  +#13#10'  MainFormProjectRoot:=FindDataNodeById(SystemNodeTree,UIProjectRootN'
  +'ame,'''',true);'#13#10#13#10'  BuildSkeletonResourceTree;'#13#10'  Initiali'
  +'seStyleDesigner;'#13#10#13#10'  // this include file (systemnodetree.inc) c'
  +'ontains the system description to be loaded at startup.'#13#10'  // It incl'
  +'udes the XIDE framework components.'#13#10'  // It reflects the system as i'
  +'t was defined when the ''Run in Browser'' button was last pressed in the De'
  +'sktop environment.'#13#10'  {$I systemnodetree.inc}'#13#10'  XMLToNodeTree('
  +'LoadedSystemString,UIRootNode);   //! has been saved by the ''Run in Browse'
  +'r'' menu button'#13#10'//  showmessage(''after XMLToNodeTree. Node ''+Syste'
  +'mRootName+'' has ''+inttostr(length(systemnodetree.childnodes))+'' children'
  +''');'#13#10'  InitialiseXIDE;'#13#10#13#10'  PopupMemoForm.InitialiseMemo;'
  +#13#10'  CodeEditForm.Initialise;'#13#10#13#10'  RedisplayResourceTree;'#13
  +#10'  InitialiseStyleResources;'#13#10'  StyleRootNode:=XIDEForm.StyleSheet.'
  +'myNode;'#13#10'  GenerateStyleSheets;'#13#10#13#10#13#10'  //systempas:=''1'
  +''' + LineEnding'#13#10'  //+ ''2'' + LineEnding'#13#10'  //+ ''3'';   // th'
  +'is construct was causing pas2js to produce a stack overflow.  Using \n inst'
  +'ead.'#13#10#13#10'  {$I eventsinterfacepas.inc}'#13#10'  {$I interfacetypes'
  +'pas.inc}'#13#10#13#10'  // minimal rtl set....'#13#10'  //{$I systempas.inc'
  +'}'#13#10'  //{$I typespas.inc}'#13#10'  //{$I classespas.inc}'#13#10'  //{$'
  +'I jspas.inc}'#13#10'  //{$I rtlconstspas.inc}'#13#10'  //{$I sysutilspas.in'
  +'c}'#13#10#13#10'  // common rtl set.....'#13#10'  {$I classespas.inc}'#13#10
  +'  {$I contnrspas.inc}'#13#10'  {$I dateutilspas.inc}'#13#10'  {$I jspas.inc'
  +'}'#13#10'  {$I mathpas.inc}'#13#10'  {$I rtlconstspas.inc}'#13#10'  {$I str'
  +'utilspas.inc}'#13#10'  {$I systempas.inc}'#13#10'  {$I sysutilspas.inc}'#13
  +#10'  {$I typespas.inc}'#13#10'  {$I typinfopas.inc}'#13#10'  //  {$I rttipa'
  +'s.inc}'#13#10#13#10'  {$I gpu-browserjs.inc}'#13#10#13#10'  // If this JS s'
  +'tartup was NOT initiated from the Lazarus/Desktop runtime, then load up'#13
  +#10'  // the last stored system description. This replaces the user interfac'
  +'e area being designed by the user, but not'#13#10'  // the XIDE framework o'
  +'bject inspector components.'#13#10'  RunningDeployedRuntime:=false;'#13#10
  +#13#10'  asm'#13#10'    dm = myDeployedMode;'#13#10'  end;'#13#10#13#10'  if'
  +' dm=''FromLaz'' then'#13#10'  begin'#13#10'    {$I systemcomposites.inc}'#13
  +#10'    InitialiseComposites;'#13#10'  end;'#13#10#13#10'  //showmessage(''d'
  +'m=''+dm);'#13#10'  if dm<>''FromLaz'' then'#13#10'  begin'#13#10'    if dm='
  +'''Run'' then'#13#10'    begin'#13#10'      // hide the XIDE framework'#13#10
  +'      ShowHideObjectInspector(false);'#13#10'    end;'#13#10#13#10'    {$if'
  +'ndef Python}'#13#10'    //showmessage(''NOT python - checking for saved sys'
  +'tem'');'#13#10'    ok:=CheckForSavedSystemOnLoad;'#13#10'    // when using '
  +'python, we have to wait until pyodide is ready, so this step'#13#10'    // '
  ,'is handled in the python load scripts.'#13#10'    {$endif}'#13#10'  end;'#13
  +#10#13#10'  StartingUp:=false;// suppress event handlers while starting up'
  +#13#10'  SelectNavTreeNode(MainFormProjectRoot,true);'#13#10'  RunModeAttemp'
  +'ts:=0;'#13#10#13#10'  if ok then'#13#10'  begin'#13#10'      // Deal with t'
  +'he DeployedMode flag'#13#10'      if dm=''Run'' then'#13#10'      begin'#13
  +#10'        RunningDeployedRuntime:=true;'#13#10'        XIDEForm.SystemDepl'
  +'oy.IsVisible:=false;'#13#10'        XIDEForm.ToggleDesignRunMode.IsVisible:'
  +'=false;'#13#10'        XIDEForm.HelpMenu.IsVisible:=false;'#13#10'        X'
  +'IDEForm.SystemClear.IsVisible:=false;'#13#10'        XIDEForm.SystemDeploy.'
  +'IsVisible:=false;'#13#10'        XIDEForm.SystemLoad.IsVisible:=false;'#13
  +#10'        XIDEForm.SystemLoadFromStore.IsVisible:=false;'#13#10'        XI'
  +'DEForm.SystemEncapsulate.IsVisible:=false;'#13#10'        XIDEForm.SystemSe'
  +'ttings.IsVisible:=false;'#13#10'        ShowGreyOverlay(SystemRootName,''Gr'
  +'ey1'',''Compiling Deployed System. Please Wait...'');'#13#10'        // tim'
  +'eout here so the grey overlay appears'#13#10'        {$ifndef Python}'#13#10
  +'        asm'#13#10'        myTimeout(pas.XObjectInsp.ContinueToggleToRunMod'
  +'e,5,''ContinueToggleToRunMode'',0);'#13#10'        end;'#13#10'        // w'
  +'hen using python, we have to wait until pyodide is ready, so this step'#13
  +#10'        // is handled in the python load scripts.'#13#10'        {$endif'
  +'}'#13#10'      end;'#13#10'  end;'#13#10'end;'#13#10'{$endif}'#13#10#13#10
  +#13#10'begin'#13#10'  MainUnitName:=''XIDEMain'';'#13#10#13#10'  {$ifndef JS'
  +'cript}'#13#10'    Application.ShowHint:=true;'#13#10'    {$I rtl.lrs}'#13#10
  +'    {$I xide.lrs}'#13#10'  {$endif}'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('xobjectinsp','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10#13#10'unit XObjectInsp;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10
  +#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, TypInfo, Stri'
  +'ngutils, StrUtils, NodeUtils, Events, PopupMemo,'#13#10'{$ifndef JScript}'
  +#13#10'  LazsUtils, Menus, DynLibs, Contnrs, FileUtil,'#13#10'  Controls, Co'
  +'mCtrls, PropEdits, ExtCtrls, Dialogs,Forms,CompilerLogUnit, xpparser,'#13#10
  +'{$else}'#13#10'  AboutUnit,pparser,HTMLUtils,'#13#10'{$endif}'#13#10'  Util'
  +'sJSCompile,XIFrame, XSVGContainer,'#13#10'  WrapperPanel,  CompileUserCode,'
  +#13#10'  XHBox, XVBox, XCode,XColorPicker,'#13#10'  XTree,  XButton, XScroll'
  +'Box, XEditBox, XCheckBox, XComboBox, XTabControl,'#13#10'  XForm, XTable, X'
  +'Memo, XMenu, CodeEditor, PropertyEditUnit, EventsInterface,'#13#10'  XGPUCa'
  +'nvas, XGPUEditor, XCompositeIntf, XDBTable, StylesUtils,IntfParamUnit,IntfE'
  +'ventUnit;'#13#10#13#10'{$ifdef JScript}'#13#10'function CheckForSavedSystem'
  +'OnLoad:Boolean;'#13#10'procedure ShowXFormForDesign(XFormName:String);'#13
  +#10'procedure ToggleToRunModeAfterCompile(ok:boolean);'#13#10'procedure Brow'
  +'serSaveData(TheData:String);'#13#10'procedure ContinueToggleToRunMode;'#13
  +#10'procedure CompleteDeployFromBrowser(deployname:String);'#13#10'procedure'
  +' InitialiseComposites;'#13#10'procedure CompleteToggleToRunMode(ok:Boolean)'
  +';'#13#10'{$endif}'#13#10#13#10'{$ifndef JScript}'#13#10'type TLoadTimerTag '
  +'= class'#13#10'       public'#13#10'         systemstring:string;'#13#10'  '
  +'       SysName:String;'#13#10'         procedure DoXMLToNodeTree(sender:TOb'
  +'ject);'#13#10'       end;'#13#10'{$endif}'#13#10#13#10'type'#13#10'  TOIEve'
  +'ntWrapper = class'#13#10'    procedure OIEditProperty(e:TEventStatus;nodeId'
  +':string;myValue:string);'#13#10'    procedure OIEditEvent(e:TEventStatus;no'
  +'deId:string;myValue:string);'#13#10'    procedure OIEditEventCode(e:TEventS'
  +'tatus;nodeId:string;myValue:string);'#13#10'    procedure OIEditEventCodeFr'
  +'omCodeTree(NodeNameToEdit:string;EventToEdit:string);'#13#10'    procedure '
  +'OIEditIntfEvent(e:TEventStatus;nodeId:String;myValue:String);'#13#10'    pr'
  +'ocedure TestButtonClick(e:TEventStatus;nodeId:string;myValue:string);'#13#10
  +'    procedure OIEditPropertyButtonClick(e:TEventStatus;nodeId:string;myValu'
  +'e:string);'#13#10'    procedure OIDelPropertyButtonClick(e:TEventStatus;nod'
  +'eId:string;myValue:string);'#13#10'    procedure OIDelEventButtonClick(e:TE'
  +'ventStatus;nodeId:string;myValue:string);'#13#10'    procedure CloseGPUEdit'
  +'or(e:TEventStatus;nodeId:string;myValue:string);'#13#10'    {$ifdef JScript'
  +'}'#13#10'    procedure OIPasteTarget(e:TEventStatus;nodeId:string;myValue:s'
  +'tring);'#13#10'    {$endif}'#13#10'  end;'#13#10#13#10'procedure DumpFullNo'
  +'deTree;'#13#10'procedure InitialiseXIDE;'#13#10'function XIDEConfirm(prompt'
  +'String:String):boolean;'#13#10'function GetTreeTextHierarchy(StartNode,TopR'
  +'ootNode:TDataNode):String;'#13#10'function GetTreeTextHierarchyWithIndices('
  +'StartNode,TopRootNode:TDataNode):String;'#13#10'procedure SetupAvailableRes'
  +'ources;'#13#10'procedure RebuildNavigatorTree;'#13#10'procedure RebuildCode'
  +'Tree;'#13#10'procedure RebuildResourcesTree;'#13#10'procedure BuildSkeleton'
  +'ResourceTree;'#13#10'procedure SaveSystemData;'#13#10'procedure OINavTreeNo'
  +'deChange(e:TEventStatus;nodeId,NameSpace:string;myValue:string);'#13#10'pro'
  +'cedure OICodeTreeNodeChange(nodeId:string;myValue:string);'#13#10'procedure'
  +' OIResourceTreeNodeChange(nodeId:string;myValue:string);'#13#10'procedure O'
  +'IDragItem(e:TEventStatus;nodeId:string;myValue:string);'#13#10'procedure OI'
  +'DropItem(e:TEventStatus;nodeId:string;myValue:string);'#13#10'function OIPa'
  +'steItem(nodeId:string;myValue:string):boolean;'#13#10'procedure OICutItem(n'
  +'odeId:string;myValue:string);'#13#10'procedure CopyNavNode( NodeToCopy:TDat'
  +'aNode);'#13#10'procedure OICopySelectedItem;'#13#10'procedure OIDeleteSelec'
  +'tedItem;'#13#10'function OIDeleteItem(NodeId,NameSpace:String;ShowNotFoundM'
  +'sg:Boolean=true;ShowConfirm:Boolean=true):Boolean;'#13#10'procedure OICompo'
  +'nentCopy(nodeId:string;myValue:string);'#13#10'procedure OISystemLoad(e:TEv'
  +'entStatus;nodeId:string);'#13#10'procedure OIClearSystem;'#13#10'procedure '
  +'OIDeploySystem;'#13#10'function OITreeNodeHint(TreeLabelStr:String):String;'
  +#13#10'function OIResTreeNodeHint(TreeLabelStr:String):String;'#13#10'proced'
  +'ure PopulateObjectInspector(CurrentNode:TDataNode);'#13#10'procedure Refres'
  +'hObjectInspectorLater(targetNode:TDataNode);'#13#10'procedure OIPropsEvents'
  ,'TabChange;'#13#10'procedure PopulateResourceInspector(CurrentNode:TDataNode'
  +');'#13#10'function TreeLabelToID(TreeLabelStr,TreeName:String;var FirstBit:'
  +'String):String;'#13#10'function GetNavigatorHint(InTree:TDataNode;SystemNod'
  +'eName:String):String;'#13#10'function CompositeResourcesString(QuotedString'
  +':Boolean):String;'#13#10'function BuildSystemString(Encapsulate:Boolean):St'
  +'ring;'#13#10'Procedure SaveSystemToClip;'#13#10'Procedure SaveSystemToFile;'
  +#13#10'procedure ClearResourceInspector;'#13#10'procedure ClearInspectors;'
  +#13#10'procedure OILoadSavedSystem(SysName:String);'#13#10'function DoSystem'
  +'Load(SystemDescription,SysName:string):Boolean;'#13#10'procedure CodeEditor'
  +'Closed(EditBoxNode:TdataNode);'#13#10'procedure PropertyEditorClosed(EditBo'
  +'xNode:TdataNode);'#13#10'function isValidSystemData(SystemDescription:strin'
  +'g):boolean;'#13#10'procedure EditEventCode(NodeNameToEdit,EventToEdit,MainC'
  +'ode,InitCode:String);'#13#10'procedure OIAddCodeUnitNode(UnitType:String);'
  +#13#10'procedure OIEditCodeUnit;'#13#10'procedure OIDeleteCodeUnit;'#13#10'p'
  +'rocedure DoToggleDesignRunMode(Sender:TXMenuItem);'#13#10'procedure Display'
  +'DllCompileErrors;'#13#10'function OINavTreeAllowDrop(DstNode:TDataNode):Boo'
  +'lean;'#13#10'procedure SelectNavTreeNode(CurrentNode:TDataNode; refresh:boo'
  +'lean);'#13#10'Function ConstructSystemTreeString(CurrentItem:TDataNode; lev'
  +'el:Integer; IncludeTypes,IncludeProperties:Boolean;'#13#10'                '
  +'                   Exclusions:TStringList;PropType:String):String;'#13#10'p'
  +'rocedure OIMoveItem(nodeId,NameSpace:string;NewParentId:string);'#13#10'pro'
  +'cedure OICopyToNewParent(nodeId,NameSpace:string;NewParentId:string;NewName'
  +':String);  overload;'#13#10'{$ifndef JScript}'#13#10'procedure SaveComposit'
  +'esToIncFile;'#13#10'procedure OICopyToNewParent(nodeId,NameSpace:string;New'
  +'ParentId:string;NewName:PChar);  overload;'#13#10'{$endif}'#13#10'procedure'
  +' DiscoverSavedFiles(suffix:String;var NamesList:TStringList; SortBy:String)'
  +';'#13#10'procedure OIMoveNavSiblingUpDown(UpDown:String);'#13#10'procedure '
  +'CodeTreeMoveSiblingUpDown(UpDown:String);'#13#10'procedure DoSelectNavTreeN'
  +'ode(CurrentNode:TDataNode; refresh:boolean);'#13#10'procedure RefreshObject'
  +'Inspector(CurrentNode:TDataNode);'#13#10'procedure ShowHideObjectInspector('
  +'show:Boolean);'#13#10'function XIDEPrompt(PromptString,DefaultString:string'
  +'):string;'#13#10'procedure RedisplayResourceTree;'#13#10'procedure OIEncaps'
  +'ulate;'#13#10'procedure OIDeleteResource;'#13#10'procedure OILoadResource;'
  +#13#10'procedure OIAddInterfaceElement;'#13#10'procedure DiscoverSavedSystem'
  +'s(var NamesList:TStringList);'#13#10'procedure OICodeSearch;'#13#10'functio'
  +'n NameStringIsValid(nm:String):Boolean;'#13#10'function CanAddChildToParent'
  +'(ParentNode,SourceNode:TDataNode):Boolean;'#13#10'function GetValidItemName'
  +'(PromptString,DefaultString:String):String;'#13#10'function ComponentNameIs'
  +'Unique(ScreenObjectName,NameSpace:string):Boolean;'#13#10'procedure SetScre'
  +'enToDesignMode;'#13#10'procedure CheckForPythonCode;'#13#10#13#10#13#10'con'
  +'st'#13#10'  ResourceDataRootName=  ''ResourceRoot'' ;'#13#10'  CodeDataRoot'
  +'Name=  ''dllRoot'' ;'#13#10'  UIProjectRootName = ''UIRoot'';              '
  +'      //the scrollbox containing the user-designed (mainform) system'#13#10
  +'  PropertyEditorScrollboxName:string = ''PropertyEditorScrollbox'';'#13#10
  +'  CompositePropsScrollboxName:string = ''CompositePropsScrollbox'';'#13#10
  +'  CompositePropsTabName:string = ''OICompositePropsTab'';'#13#10'  EventsEd'
  +'itorScrollboxName:string = ''EventsEditorScrollbox'';'#13#10'//  ResourceEd'
  +'itorScrollboxName:string = ''ResourceEditorScrollbox'';'#13#10'  Deployment'
  +'ModeOptions:Array[0..1] of string = (''Design'',''Run'');'#13#10'  ShowReso'
  +'urcesOptions:Array[0..1] of string = (''Left'',''Right'');'#13#10#13#10#13
  +#10'var'#13#10'  MainFormProjectRoot:TDataNode;'#13#10'  DesignMode:Boolean;'
  +#13#10'  NavTreeComponent,DataTreeComponent,ResourcesNodeTree, ResourceTreeC'
  +'omponent, CodeTreeComponent:TDataNode;'#13#10'  OIEventWrapper:TOIEventWrap'
  +'per;'#13#10'  LastLazUserInterfaceItemSelected,LastHTMLUserInterfaceItemSel'
  +'ected:String;'#13#10'  LastHTMLUserInterfaceItemHadBorder:Boolean;'#13#10' '
  +' TreeInFocus, ObjectInspectorSelectedNavTreeNode, ObjectInspectorSelectedCo'
  +'deTreeNode, ObjectInspectorSourceNode:TDataNode;'#13#10'  OISelectedCodePro'
  +'cName:String;'#13#10'  OISelectedCodeLineNum:integer;'#13#10'  RunModeAttem'
  +'pts:integer;'#13#10#13#10'  PropertiesNode, InterfacePropsNode, InterfaceTa'
  +'bNode, EventsNode,'#13#10'    AddInterfacePropsButtonNode, OITabs, DMAttrib'
  +'sNode : TDataNode;'#13#10#13#10'  {$ifndef JScript}'#13#10'  UITopControl:T'
  +'WinControl;'#13#10'  {$else}'#13#10'  RunningDeployedRuntime:Boolean;'#13#10
  +'  CompositesString:String;'#13#10'  {$endif}'#13#10#13#10'const'#13#10'  At'
  +'tributeEditorNameDelimiter:string = ''__'';'#13#10#13#10'implementation'#13
  ,#10'uses SavedSystems, PasteDialogUnit, PyXUtils, XDataModel, XIDEMain;'#13
  +#10#13#10#13#10'  //SandraMode:Boolean = true;'#13#10#13#10'var'#13#10'  Obj'
  +'ectInspectorSelectedCodeNodeText:String;'#13#10'  AvailableResourcesSelecte'
  +'dNode:TDataNode;'#13#10'  ObjectInspectorSourceCut:Boolean;'#13#10#13#10'//'
  +'type'#13#10'//  TCompositeResource = record'#13#10'//    ResourceName:Strin'
  +'g;'#13#10'//    SourceString:String;'#13#10'//  end;'#13#10'//var'#13#10'//'
  +'  ListOfComposites:Array of TCompositeResource;'#13#10#13#10'function XIDEC'
  +'onfirm(promptString:String):boolean;'#13#10'var'#13#10'  ok:boolean;'#13#10
  +'begin'#13#10'  ok:=confirm(promptString);'#13#10#13#10'  result:=ok;'#13#10
  +'end;'#13#10#13#10'function GetTreeTextHierarchy(StartNode,TopRootNode:TData'
  +'Node):String;'#13#10'var'#13#10'  ParentNode:TDataNode;'#13#10'  treeText:S'
  +'tring;'#13#10'begin'#13#10'  treeText:=StartNode.NodeType+''(''+StartNode.N'
  +'odeName+'')'';'#13#10'  ParentNode:=StartNode.NodeParent;'#13#10'  while (P'
  +'arentNode<>nil) and (ParentNode<>TopRootNode.NodeParent) do'#13#10'  begin'
  +#13#10'    treeText:=ParentNode.NodeType+''(''+ParentNode.NodeName+'')''+''/'
  +'''+treeText;'#13#10'    ParentNode:=ParentNode.NodeParent;'#13#10'  end;'#13
  +#10'  result:=treeText;'#13#10'end;'#13#10'function GetTreeTextHierarchyWith'
  +'Indices(StartNode,TopRootNode:TDataNode):String;'#13#10'var'#13#10'  Parent'
  +'Node:TDataNode;'#13#10'  treeText:String;'#13#10'  thisindex:integer;'#13#10
  +'begin'#13#10'  treeText:='''';'#13#10'  //{$ifdef JScript}asm console.log('
  +'''GetTreeTextHierarchyWithIndices StartNode=''+StartNode.NodeName); end; {$'
  +'endif}'#13#10'  if StartNode.NodeParent <> nil then'#13#10'    thisindex:=S'
  +'tartNode.NodeParent.GetChildIndex(StartNode)'#13#10'  else'#13#10'    thisi'
  +'ndex:=0;'#13#10'  treeText:= intToStr(thisindex) + ''~:~'' + StartNode.Node'
  +'Type+''(''+StartNode.NodeName+'')'';'#13#10'  ParentNode:=StartNode.NodePar'
  +'ent;'#13#10'  //{$ifdef JScript}asm console.log(''GetTreeTextHierarchyWithI'
  +'ndices ParentNode='',ParentNode); end; {$endif}'#13#10'  while (ParentNode<'
  +'>nil) and (ParentNode<>TopRootNode.NodeParent) do'#13#10'  begin'#13#10'   '
  +' if ParentNode.NodeParent <> nil then'#13#10'      thisindex:=ParentNode.No'
  +'deParent.GetChildIndex(ParentNode)'#13#10'    else'#13#10'      thisindex:='
  +'0;'#13#10'    treeText:= intToStr(thisindex) + ''~:~'' + ParentNode.NodeTyp'
  +'e+''(''+ParentNode.NodeName+'')''+''~/~''+treeText;'#13#10'    ParentNode:='
  +'ParentNode.NodeParent;'#13#10'  end;'#13#10'  result:=treeText;'#13#10'end;'
  +#13#10#13#10'Function ConstructSystemTreeString(CurrentItem:TDataNode; level'
  +':Integer; IncludeTypes,IncludeProperties:boolean;'#13#10'                  '
  +'                 Exclusions:TStringList;PropType:String):String;'#13#10'// '
  +'Recursive'#13#10'var ArrayString:String;'#13#10'    i,j,numchildren:integer'
  +';'#13#10'    InsertingAttributes:Boolean;'#13#10'begin'#13#10'  // In the m'
  +'ain form, start at UIRoot node'#13#10#13#10'  if CurrentItem<>nil then'#13
  +#10'  begin'#13#10'    if (CurrentItem.NameSpace='''')'#13#10'    and ('#13
  +#10'    ((CurrentItem.NodeClass=''UI'') and (CurrentItem.IsDynamic=true))'#13
  +#10'    or ((CurrentItem.NodeClass=''SVG'') and (CurrentItem.IsDynamic=true)'
  +')'#13#10'    or ((CurrentItem.NodeClass=''UI'') and (CurrentItem.NodeType='
  +'''TXForm'') and (CurrentItem.NodeName = MainForm.Name))'#13#10'    or ((Cur'
  +'rentItem.NodeClass=''UI'') and (CurrentItem.NodeType=''TXMainMenu''))'#13#10
  +'    or ((CurrentItem.NodeClass=''NV'') and (CurrentItem.IsDynamic=true))'#13
  +#10'    or (CurrentItem.NodeClass=''DM'')'#13#10'    or (CurrentItem=SystemN'
  +'odeTree)'#13#10'    or (CurrentItem=ResourcesNodeTree)'#13#10'    or (Curre'
  +'ntItem=CodeRootNode)'#13#10'    or (CurrentItem=UIRootNode)'#13#10'    or ('
  +'CurrentItem=MainFormProjectRoot)'#13#10'    or (CurrentItem.NodeClass=''Cod'
  +'e'')'#13#10'    or (CurrentItem.NodeClass[1]=''R'')'#13#10'    )'#13#10'   '
  +' then'#13#10'    begin'#13#10'      if (Exclusions=nil)'#13#10'      or (Ex'
  +'clusions.IndexOf(CurrentItem.NodeName)<0) then'#13#10'      begin'#13#10'  '
  +'      if CurrentItem.NodeClass[1]<>''R'' then'#13#10'         j:=0;'#13#10
  +'          //showmessage(''Currentitem=''+CurrentItem.NodeClass+'' ''+Curren'
  +'tItem.NodeType+'' ''+CurrentItem.Nodename);'#13#10'        numchildren:=len'
  +'gth(CurrentItem.ChildNodes);'#13#10#13#10'        if level = 0 then ArraySt'
  +'ring:='' '';'#13#10#13#10'        if (IncludeProperties)'#13#10'        and'
  +' ((CurrentItem.NodeClass=''UI'') or (CurrentItem.NodeClass=''NV'') or (Curr'
  +'entItem.NodeClass=''DM''))'#13#10'        and (length(CurrentItem.NodeAttri'
  +'butes)>0) then'#13#10'          InsertingAttributes:=true'#13#10'        el'
  +'se'#13#10'          InsertingAttributes:=false;'#13#10#13#10'        if lev'
  +'el=0'#13#10'        then ArrayString:=''['''#13#10'        else'#13#10'    '
  +'    begin'#13#10'          if (NumChildren>0)'#13#10'          or (Insertin'
  ,'gAttributes) then'#13#10'              ArrayString:=ArrayString+'',['''#13
  +#10'          else'#13#10'              ArrayString:=ArrayString+'','';'#13
  +#10'        end;'#13#10#13#10'        if IncludeTypes then'#13#10'          '
  +'ArrayString:=ArrayString+''"''+CurrentItem.NodeType+''(''+CurrentItem.NodeN'
  +'ame+'')"'''#13#10'        else'#13#10'          ArrayString:=ArrayString+'''
  +'"''+CurrentItem.NodeName+''"'';'#13#10#13#10'        if (InsertingAttribute'
  +'s) then'#13#10'        begin'#13#10'          for j:=0 to length(CurrentIte'
  +'m.NodeAttributes)-1 do'#13#10'          begin'#13#10'            if (Exclus'
  +'ions.IndexOf(CurrentItem.NodeName+''.''+CurrentItem.NodeAttributes[j].Attri'
  +'bName)<0)'#13#10'            and ((CurrentItem.NodeAttributes[j].AttribType'
  +'=PropType)'#13#10'                or (PropType='''')'#13#10'               '
  +' or (Currentitem.NodeType=''TXCompositeIntf'')         //!!!! improve this'
  +#13#10'                ) then'#13#10'            begin'#13#10'              '
  +'ArrayString:=ArrayString+'','';'#13#10'              ArrayString:=ArrayStri'
  +'ng+''"''+CurrentItem.NodeName+''.''+CurrentItem.NodeAttributes[j].AttribNam'
  +'e+''"'';'#13#10'            end;'#13#10'          end;'#13#10'        end;'
  +#13#10#13#10'        if (CurrentItem.NodeName <> MainForm.Name) then'#13#10
  +'          for i:=0 to numchildren-1 do'#13#10'          begin'#13#10'      '
  +'       ArrayString:=ArrayString+ConstructSystemTreeString(CurrentItem.Child'
  +'Nodes[i],level+1,IncludeTypes,IncludeProperties,Exclusions,PropType);'#13#10
  +'          end'#13#10'        else'#13#10'        begin'#13#10'          // '
  +'Main Form only....'#13#10'          // for main form, just want  UIProjectR'
  +'ootName, plus main menu'#13#10'          for i:=0 to numchildren-1 do'#13#10
  +'          begin'#13#10'            if (CurrentItem.ChildNodes[i].NodeType='
  +'''TXMainMenu'') then'#13#10'               ArrayString:=ArrayString+Constru'
  +'ctSystemTreeString(CurrentItem.ChildNodes[i],level+1,IncludeTypes,IncludePr'
  +'operties,Exclusions,PropType);'#13#10'          end;'#13#10#13#10'         '
  +' ArrayString:=ArrayString+ConstructSystemTreeString(MainFormProjectRoot,lev'
  +'el+1,IncludeTypes,IncludeProperties,Exclusions,PropType);'#13#10#13#10'    '
  +'    end;'#13#10#13#10'        if ( NumChildren>0)'#13#10'        or (level='
  +'0)'#13#10'        or (InsertingAttributes) then'#13#10'          ArrayStrin'
  +'g:=ArrayString+'']'';'#13#10#13#10'      end;'#13#10'    end;'#13#10'  end;'
  +#13#10#13#10'  result:= ArrayString;'#13#10'end;'#13#10#13#10'Function Const'
  +'ructCodeTreeString(CurrentItem:TDataNode; level:Integer):String;'#13#10'// '
  +'Recursive'#13#10'var ArrayString, ProcsString,ss:String;'#13#10'    i,p,num'
  +'children:integer;'#13#10'begin'#13#10'  if CurrentItem<>nil then'#13#10'  b'
  +'egin'#13#10'    if (CurrentItem.NameSpace='''')'#13#10'    and ('#13#10'   '
  +' (CurrentItem=CodeRootNode)'#13#10'    or (CurrentItem.NodeClass=''Code'')'
  +#13#10'    )'#13#10'    then'#13#10'    begin'#13#10'      ss:=CurrentItem.N'
  +'odeName;'#13#10'      numchildren:=length(CurrentItem.ChildNodes);'#13#10#13
  +#10'      p:=0;'#13#10'      ProcsString:='''';'#13#10'      if (CurrentItem'
  +'.NodeClass=''Code'')'#13#10'      and (NumChildren=0) then'#13#10'      beg'
  +'in'#13#10'        // This is a raw Pascal unit or a Python script.'#13#10' '
  +'       // Pascal: If the compiler has been run (pas2js), then there will be'
  +' a list of defined procedures/functions'#13#10'        // available for dis'
  +'play in this tree.'#13#10'        i:=length(pyUnitFuncs);'#13#10'        fo'
  +'r i:=0 to length(XIDEProcsList)-1 do'#13#10'        begin'#13#10'          '
  +'if lowercase(XIDEProcsList[i].FileName) = lowercase(CurrentItem.NodeName)+'
  +'''.pas'' then'#13#10'          begin'#13#10'            p:=p+1;'#13#10'    '
  +'        //ProcsString:=ProcsString+'',"''+inttostr(XIDEProcsList[i].LineNum'
  +')+''(''+XIDEProcsList[i].Name+'')"'';'#13#10'            ProcsString:=Procs'
  +'String+'',"''+XIDEProcsList[i].Name+''"'';'#13#10'          end;'#13#10'   '
  +'     end;'#13#10'        // Python:'#13#10'        for i:=0 to length(pyUni'
  +'tFuncs)-1 do'#13#10'        begin'#13#10'          if lowercase(pyUnitFuncs'
  +'[i].PyUnitName) = lowercase(CurrentItem.NodeName) then'#13#10'          beg'
  +'in'#13#10'            p:=p+1;'#13#10'            ProcsString:=ProcsString+'
  +''',"''+pyUnitFuncs[i].PyFuncName+''"'';'#13#10'          end;'#13#10'      '
  +'  end;'#13#10'      end;'#13#10#13#10#13#10'      if level = 0 then ArraySt'
  +'ring:='' '';'#13#10#13#10'      if level=0'#13#10'      then ArrayString:='
  +'''['''#13#10'      else'#13#10'      begin'#13#10'        if (NumChildren>0'
  +') or (p>0)'#13#10'        then'#13#10'              ArrayString:=ArrayStrin'
  +'g+'',['''#13#10'        else'#13#10'              ArrayString:=ArrayString+'
  +''','';'#13#10'      end;'#13#10#13#10'      ArrayString:=ArrayString+''"''+'
  +'CurrentItem.NodeType+''(''+CurrentItem.NodeName+'')"'';'#13#10#13#10#13#10
  ,'      if (p>0) then'#13#10'      begin'#13#10'        // This is a raw unit'
  +'.'#13#10'        // If the compiler has been run (pas2js), then there will '
  +'be a list of defined procedures'#13#10'        // available for display in '
  +'this tree.'#13#10'        ArrayString:=ArrayString+ProcsString+'']'';'#13#10
  +'      end;'#13#10#13#10'      for i:=0 to numchildren-1 do'#13#10'      beg'
  +'in'#13#10'         ArrayString:=ArrayString+ConstructCodeTreeString(Current'
  +'Item.ChildNodes[i],level+1);'#13#10'      end;'#13#10#13#10'      if ( NumC'
  +'hildren>0)'#13#10'      or (level=0)'#13#10'      then'#13#10'        Array'
  +'String:=ArrayString+'']'';'#13#10#13#10'    end;'#13#10'  end;'#13#10#13#10
  +'  result:= ArrayString;'#13#10'end;'#13#10#13#10#13#10'function TreeLabelTo'
  +'ID(TreeLabelStr,TreeName:String;var FirstBit:String):String;'#13#10'//e.g. '
  +'"EditBox(MySimpleID)"  =>  "MySimpleID"'#13#10'// or  "EditBox(MySimpleID) '
  +'Click"  =>  "MySimpleID"'#13#10'var i,ln:integer;'#13#10'  newstring,tempst'
  +'r,TreeLabel2:String;'#13#10'  StartOfIdFound:boolean;'#13#10'begin'#13#10' '
  +' TreeLabel2:=TreeLabelStr;'#13#10'  StartOfIdFound:=false;'#13#10'  newstri'
  +'ng:='''';'#13#10'  FirstBit:='''';'#13#10'  ln:=length(TreeLabel2);'#13#10
  +'  i:=1;'#13#10'  while i< ln+1 do'#13#10'  begin'#13#10'    tempstr:=TreeLa'
  +'bel2[i];'#13#10'    if (StartOfIdFound=true) and  (tempstr<>'')'') then'#13
  +#10'      newstring:=newstring+tempstr;'#13#10'    if (StartOfIdFound=false)'
  +' and (tempstr<>''('') then'#13#10'      FirstBit:=FirstBit+tempstr;'#13#10
  +'    if tempstr=''('' then'#13#10'      StartOfIdFound:=true;'#13#10'    if '
  +'tempstr='')'' then'#13#10'      i:=ln;'#13#10'    i:=i+1;'#13#10'  end;'#13
  +#10'  if StartOfIdFound=false then // no brackets'#13#10'  begin'#13#10'    '
  +'newstring:=TreeLabelStr;'#13#10'  end;'#13#10'  //newstring:=myStringReplac'
  +'e( newstring,''Contents'','''',999,999);'#13#10'  newstring:=ReplaceStr( ne'
  +'wstring,''Contents'','''');'#13#10'  result :=  trim(newstring);'#13#10'end'
  +';'#13#10#13#10#13#10'Function ConstructEventsTreeString(CurrentItem:TDataNo'
  +'de;var e:integer):String;'#13#10'// Recursive'#13#10'var ArrayString,dflt:S'
  +'tring;'#13#10'    i,numchildren:integer;'#13#10'begin'#13#10'  dflt:=DfltEv'
  +'entCode;'#13#10'  if CurrentItem<>nil then'#13#10'  if CurrentItem.NameSpac'
  +'e='''' then'#13#10'  begin'#13#10#13#10'      numchildren:=length(CurrentIt'
  +'em.ChildNodes);'#13#10#13#10'      if CurrentItem=MainFormProjectRoot then'
  +#13#10'        ArrayString:='',["Root(Events)"'';'#13#10#13#10'      for i:='
  +'0 to CurrentItem.myEventTypes.Count-1 do'#13#10'      begin'#13#10'        '
  +'if (CurrentItem.HasUserEventCode(CurrentItem.myEventTypes[i]))'#13#10'     '
  +'   and (CurrentItem.GetEventCode(CurrentItem.myEventTypes[i])<>dflt) then'
  +#13#10'        begin'#13#10'           e:=e+1;'#13#10'           ArrayString'
  +':=ArrayString+'','';'#13#10'           ArrayString:=ArrayString+''"''+Curre'
  +'ntItem.NodeType+''(''+CurrentItem.NodeName+'') ''+CurrentItem.myEventTypes['
  +'i]+''"'''#13#10'        end;'#13#10'      end;'#13#10#13#10' //     {$ifdef'
  +' JScript} showmessage(CurrentItem.Nodename+'' has ''+inttostr(numchildren)+'
  +''' children''); {$endif}'#13#10'      for i:=0 to numchildren-1 do'#13#10' '
  +'     begin'#13#10' //       {$ifdef JScript} showmessage(''Child ''+inttost'
  +'r(i)+'' ''+CurrentItem.ChildNodes[i].NodeName); {$endif}'#13#10'        Arr'
  +'ayString:=ArrayString+ConstructEventsTreeString(CurrentItem.ChildNodes[i],e'
  +');'#13#10'      end;'#13#10#13#10'      if CurrentItem=MainFormProjectRoot '
  +'then'#13#10'        ArrayString:=ArrayString+'']'';'#13#10'  end;'#13#10#13
  +#10'  result:= ArrayString;'#13#10'end;'#13#10#13#10'Function ConstructGPUCo'
  +'deTreeString(CurrentItem:TDataNode):String;'#13#10'// Recursive'#13#10'var '
  +'ArrayString:String;'#13#10'    i,numchildren:integer;'#13#10'begin'#13#10' '
  +' if CurrentItem<>nil then'#13#10'  if CurrentItem.NameSpace='''' then'#13#10
  +'  begin'#13#10#13#10'      numchildren:=length(CurrentItem.ChildNodes);'#13
  +#10#13#10'      if CurrentItem=MainFormProjectRoot then'#13#10'        Array'
  +'String:='',["Root(GPUCode)"'';'#13#10#13#10'      if (CurrentItem.NodeType='
  +'''TXGPUCanvas'')'#13#10'      and (CurrentItem.NodeClass=''UI'')'#13#10'   '
  +'   and (CurrentItem.IsDynamic=true) then'#13#10'      begin'#13#10'        '
  +'ArrayString:=ArrayString+'','';'#13#10'        ArrayString:=ArrayString+''"'
  +'''+CurrentItem.NodeType+''(''+CurrentItem.NodeName+'') "'''#13#10'      end'
  +';'#13#10#13#10'      for i:=0 to numchildren-1 do'#13#10'      begin'#13#10
  +'        ArrayString:=ArrayString+ConstructGPUCodeTreeString(CurrentItem.Chi'
  +'ldNodes[i]);'#13#10'      end;'#13#10#13#10'      if CurrentItem=MainFormPr'
  +'ojectRoot then'#13#10'        ArrayString:=ArrayString+'']'';'#13#10'  end;'
  +#13#10#13#10'  result:= ArrayString;'#13#10'end;'#13#10#13#10'function GetNa'
  +'vigatorHint(InTree:TDataNode;SystemNodeName:String):String;'#13#10'var'#13
  ,#10'SystemNode:TDataNode;'#13#10'foundattrib:TNodeAttribute;'#13#10'begin'#13
  +#10'  result:='''';'#13#10'  SystemNode:=FindDataNodeById(InTree,SystemNodeN'
  +'ame,'''',false);'#13#10'  //showmessage(''GetNavigatorHint ''+SystemNodeNam'
  +'e);'#13#10'  if SystemNode<>nil then'#13#10'  begin'#13#10'    if SystemNod'
  +'e.HasAttribute(''Hint'') then'#13#10'    begin'#13#10'      foundattrib:=Sy'
  +'stemNode.GetAttribute(''Hint'',false);'#13#10'      if foundattrib<>nil the'
  +'n'#13#10'        result:=foundattrib.AttribValue;'#13#10'    end;'#13#10'  '
  +'end;'#13#10'  //showmessage(''GetNavigatorHint result ''+result);'#13#10'en'
  +'d;'#13#10#13#10'procedure InitResourcesNodeTree;'#13#10'var'#13#10'  emptyA'
  +'ttribs:TNodeAttributesArray;'#13#10'  RRoot:TDataNode;'#13#10'begin'#13#10
  +'  setlength(emptyAttribs,0);'#13#10'  RRoot:=FindDataNodeById(SystemNodeTre'
  +'e,''ResourceRoot'','''',false);'#13#10'  if RRoot=nil then'#13#10'  begin'
  +#13#10'    ResourcesNodeTree:=AddChildToDataNode(SystemNodeTree,''ResourceRo'
  +'ot'',ResourceDataRootName,'''','''',emptyAttribs,-1);'#13#10'    //Resource'
  +'sNodeTree.AddAttribute(''ParentName'',''String'', SystemRootName,true);'#13
  +#10'    // This represents the set of library ''resource'' elements that are'
  +' available in the resources tree'#13#10'  end;'#13#10'end;'#13#10#13#10'fun'
  +'ction RegisterResource(ClassName,ScreenObjectType,ScreenObjectName,ParentNa'
  +'me:string; Hint:String):TDataNode;  overload;'#13#10' var'#13#10'      myAt'
  +'tribs:TNodeAttributesArray;'#13#10'      myparent,myself:TDataNode;'#13#10
  +'      n,i:integer;'#13#10'      TempChildNodes:TChildNodesArray;'#13#10'  b'
  +'egin'#13#10#13#10'    myparent:= FindDataNodeById(ResourcesNodeTree,ParentN'
  +'ame,'''',true);'#13#10'    if myparent<>nil'#13#10'    then'#13#10'    begi'
  +'n'#13#10'      setlength(myAttribs,1);'#13#10'      myAttribs[0]:=TNodeAttr'
  +'ibute.Create(nil,''Hint'');'#13#10'      myAttribs[0].AttribType:=''String'
  +''';'#13#10'      myAttribs[0].AttribReadOnly:=True;'#13#10'      myAttribs['
  +'0].AttribValue:=Hint;'#13#10#13#10'      myself:=AddChildToDataNode(myparen'
  +'t,ClassName,ScreenObjectName,ScreenObjectType,'''',myAttribs,-1);'#13#10#13
  +#10'      if myself<>nil then'#13#10'      begin'#13#10'        //mySelf.Add'
  +'Attribute(''ParentName'', ParentName,''String'',true);'#13#10'        //myS'
  +'elf.SetAttributeValue(''ParentName'', ParentName,''String'');'#13#10#13#10
  +'        // myself is a local variable.  Re-assign it to the childnodes arra'
  +'y.'#13#10'        TempChildNodes:= myparent.ChildNodes;'#13#10'        n:= '
  +'Length(TempChildNodes);'#13#10'        myparent.ChildNodes[n-1]:=myself;'#13
  +#10'      end;'#13#10#13#10'      result:=myself;'#13#10'    end;'#13#10'  e'
  +'nd;'#13#10#13#10'procedure BuildSkeletonResourceTree;'#13#10'var'#13#10'  e'
  +'mptyAttribs:TNodeAttributesArray;'#13#10'begin'#13#10'  setLength(emptyAttr'
  +'ibs,0);'#13#10'  ResourcesNodeTree:=AddChildToDataNode(SystemNodeTree,''Res'
  +'ourceRoot'',ResourceDataRootName,'''','''',emptyAttribs,-1);'#13#10'  //Res'
  +'ourcesNodeTree.AddAttribute(''ParentName'',''String'', SystemRootName,true)'
  +';'#13#10'  RegisterResource(''RUI'','''',''Composites'',''ResourceRoot'','''
  +''');'#13#10'end;'#13#10#13#10'procedure SaveSystemData;'#13#10'var'#13#10' '
  +' TheData:String;'#13#10'  NavSelected,CodeSelected:TDataNode;'#13#10'begin'
  +#13#10'  if not StartingUp then'#13#10'  begin'#13#10'    NavSelected:=Objec'
  +'tInspectorSelectedNavTreeNode;'#13#10'    CodeSelected:=ObjectInspectorSele'
  +'ctedNavTreeNode;'#13#10#13#10'    TheData:=BuildSystemString(false);'#13#10
  +'    {$ifndef JScript}'#13#10'    WriteToLocalStore(''XIDESavedData.txt'',Th'
  +'eData);'#13#10'    {$else}'#13#10'    BrowserSaveData(TheData);'#13#10'    '
  +'{$endif}'#13#10'    SaveLocalDB;'#13#10#13#10'    ObjectInspectorSelectedNa'
  +'vTreeNode:=NavSelected;'#13#10'    ObjectInspectorSelectedNavTreeNode:=Code'
  +'Selected;'#13#10'  end;'#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'pr'
  +'ocedure BrowserSaveData(TheData:String);'#13#10'var'#13#10'  sysname:string'
  +';'#13#10'begin'#13#10'  sysname:=UIRootNode.GetAttribute(''SystemName'',fal'
  +'se).AttribValue;'#13#10'  asm'#13#10'   //console.log(''saving local XIDESa'
  +'vedData''+sysname);'#13#10'   pas.HTMLUtils.WriteToLocalStore("XIDESavedDat'
  +'a"+sysname,TheData);'#13#10'  end;'#13#10'end;'#13#10'{$endif}'#13#10#13#10
  +'procedure InitialiseXIDE;'#13#10'begin'#13#10'  //OITabs:=FindDataNodeById('
  +'SystemNodeTree,''OITabs'','''',true);'#13#10'  OITabs:=FindDataNodeById(UIR'
  +'ootNode,''OITabs'','''',true);'#13#10'  PropertiesNode:=FindDataNodeById(OI'
  +'Tabs,PropertyEditorScrollboxName,'''',true);'#13#10'  DMAttribsNode:=FindDa'
  +'taNodeById(UIRootNode,DMAttribsScrollboxName,'''',true);'#13#10'  Interface'
  +'PropsNode:=FindDataNodeById(OITabs,CompositePropsScrollboxName,'''',true);'
  +#13#10'  EventsNode:=FindDataNodeById(OITabs,EventsEditorScrollboxName,'''','
  +'true);'#13#10'  InterfaceTabNode:=FindDataNodeById(OITabs,CompositePropsTab'
  ,'Name,'''',true);'#13#10'  AddInterfacePropsButtonNode:=FindDataNodeById(UIR'
  +'ootNode,''OIAddPropertyButton'','''',true);'#13#10#13#10'  InitResourcesNod'
  +'eTree;'#13#10'  RebuildResourcesTree;'#13#10'  // Populate navigator and co'
  +'de tree from SystemNodeTree'#13#10'  RebuildNavigatorTree;'#13#10'  Rebuild'
  +'CodeTree;'#13#10'  RebuildDMTree;'#13#10#13#10'  {$ifndef JScript}'#13#10' '
  +' ConsoleNode:=FindDataNodeById(UIRootNode,''XMemo1'','''',true);'#13#10'  {'
  +'$else}'#13#10'  AboutXIDEForm.BuildText;'#13#10'  PasteDialogUnit.SetupPast'
  +'eDialogForm;'#13#10'  PasteDialogUnit.PasteTarget.myNode.registerEvent(''Me'
  +'moPaste'',@OIEventWrapper.OIPasteTarget);'#13#10'  XGPUEditor.CreateGPUEdit'
  +'Form;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10#13#10'{$ifdef JScript}'#13
  +#10'procedure InitialiseComposites;'#13#10'var'#13#10'  composites:TDataNode'
  +';'#13#10'  i:integer;'#13#10'  itemname,src:String;'#13#10'begin'#13#10'  /'
  +'/showmessage(''InitialiseComposites ''+CompositesString);'#13#10'  // The s'
  +'tring CompositesString contains the XML list of the stored composites defin'
  +'ed in the desktop system.'#13#10'  // These are now being transferred into '
  +'the browser environment.'#13#10'  composites:=FindDataNodeById(ResourcesNod'
  +'eTree,''Composites'','''',false);'#13#10'  if (composites<>nil)'#13#10'  an'
  +'d (CompositesString<>''</>'') then'#13#10'    XMLToNodeTree(CompositesStrin'
  +'g,composites,false);'#13#10'  for i:=0 to length(composites.ChildNodes)-1 d'
  +'o'#13#10'  begin'#13#10'    itemName:=composites.ChildNodes[i].NodeName;'#13
  +#10'    // these names all have a _xcmp suffix.'#13#10'    composites.ChildN'
  +'odes[i].NodeName:=itemName;'#13#10'    src:=composites.ChildNodes[i].GetAtt'
  +'ribute(''SourceString'',false).AttribValue;'#13#10'    itemName:=Copy(itemN'
  +'ame,1,length(itemName)-5);'#13#10'    WriteToLocalStore(itemName+''.xcmp'','
  +'src);'#13#10'  end;'#13#10'  RebuildResourcesTree;'#13#10'end;'#13#10'{$end'
  +'if}'#13#10#13#10'procedure ClearAllComposites;'#13#10'var'#13#10'  composit'
  +'es:TDataNode;'#13#10'begin'#13#10'  composites:=FindDataNodeById(ResourcesN'
  +'odeTree,''Composites'','''',false);'#13#10'  DeleteNodeChildren(composites)'
  +';'#13#10'end;'#13#10#13#10'type'#13#10'  TFileDetails = class'#13#10'    Na'
  +'me: String;'#13#10'    Size, Time: int64;'#13#10'    TimeStamp:TDateTime;'
  +#13#10'  end;'#13#10#13#10'  function CompareName(A, B: Pointer): Integer;'
  +#13#10'  begin'#13#10'    //Result := CompareFilenames(TFileDetails(A).Name,'
  +' length(TFileDetails(A).Name), TFileDetails(B).Name, length(TFileDetails(B)'
  +'.Name), false);'#13#10'  end;'#13#10#13#10'  function CompareSize(A, B: Poi'
  +'nter): Integer;'#13#10'  begin'#13#10'    Result := TFileDetails(A).Size - '
  +'TFileDetails(B).Size;'#13#10'  end;'#13#10#13#10'  function CompareTime(A, '
  +'B: Pointer): Integer;'#13#10'  begin'#13#10'    Result := TFileDetails(A).T'
  +'ime - TFileDetails(B).Time;'#13#10'  end;'#13#10#13#10'procedure DiscoverSa'
  +'vedFiles(suffix:String;var NamesList:TStringList; SortBy:String);'#13#10'{$'
  +'ifndef JScript}'#13#10'var'#13#10'  Info : TSearchRec;'#13#10'  Count : Lon'
  +'gint;'#13#10'  bits:TStringList;'#13#10'  tmp:String;'#13#10'  dt: TDateTim'
  +'e;'#13#10'  i:integer;'#13#10'  y, d, m, h, min, sec, msec: word;'#13#10'  '
  +'FileList: TObjectList;'#13#10'  LDetails : TFileDetails;'#13#10'  function '
  +'FormatLine(Info: TSearchRec):String;'#13#10'  begin'#13#10'    with Info do'
  +#13#10'    begin'#13#10'      bits:=stringsplit(Name,''.'');'#13#10'      tm'
  +'p:=bits[0];'#13#10'      if tmp<>'''' then'#13#10'        if suffix<>''xcmp'
  +''' then'#13#10'        begin'#13#10'          dt := Info.TimeStamp;'#13#10
  +'          decodeDate( dt, y, m, d );'#13#10'          decodeTime( dt, h, mi'
  +'n, sec, msec );'#13#10'          tmp:=tmp+''      ''+format(''%.2d'',[d])+'
  +'''/''+format(''%.2d'',[m])+''/''+inttostr(y)+'#13#10'               '' ''+f'
  +'ormat(''%.2d'',[h])+'':''+format(''%.2d'',[min])+'':''+format(''%.2d'',[sec'
  +']);'#13#10'        end;'#13#10#13#10'    end;'#13#10'    result:=tmp;'#13#10
  +'  end;'#13#10'  function FormatLine2(Info: TFileDetails):String;'#13#10'  b'
  +'egin'#13#10'    with Info do'#13#10'    begin'#13#10'      bits:=stringspli'
  +'t(Name,''.'');'#13#10'      tmp:=bits[0];'#13#10'      if tmp<>'''' then'#13
  +#10'        if suffix<>''xcmp'' then'#13#10'        begin'#13#10'          d'
  +'t := Info.TimeStamp;'#13#10'          decodeDate( dt, y, m, d );'#13#10'   '
  +'       decodeTime( dt, h, min, sec, msec );'#13#10'          tmp:=tmp+''   '
  +'   ''+format(''%.2d'',[d])+''/''+format(''%.2d'',[m])+''/''+inttostr(y)+'#13
  +#10'               '' ''+format(''%.2d'',[h])+'':''+format(''%.2d'',[min])+'
  +''':''+format(''%.2d'',[sec]);'#13#10'        end;'#13#10#13#10'    end;'#13
  +#10'    result:=tmp;'#13#10'  end;'#13#10#13#10'begin'#13#10'  FileList := T'
  +'ObjectList.Create;'#13#10'  bits:=TStringList.Create;'#13#10'    Count:=0;'
  +#13#10'    If FindFirst (''SavedSystems/*.''+suffix,faAnyFile,Info)=0 then'
  ,#13#10'    begin'#13#10'      Repeat'#13#10'        Inc(Count);'#13#10'     '
  +'   With Info do'#13#10'          begin'#13#10'            tmp:=FormatLine(I'
  +'nfo);'#13#10'            if tmp<>'''' then'#13#10'            begin'#13#10
  +'              NamesList.Add(tmp);'#13#10#13#10'              LDetails := TF'
  +'ileDetails.Create;'#13#10'              LDetails.Name := Info.Name;'#13#10
  +'              LDetails.Size := Info.Size;'#13#10'              LDetails.Tim'
  +'e := Info.Time;'#13#10'              LDetails.TimeStamp := Info.TimeStamp;'
  +#13#10'              FileList.Add(LDetails);'#13#10'            end;'#13#10
  +'          end;'#13#10'      Until FindNext(info)<>0;'#13#10'    end;'#13#10
  +'    FindClose(Info);'#13#10'    if SortBy = ''Time'' then'#13#10'    begin'
  +#13#10'      NamesList.Clear;'#13#10'      FileList.Sort(@CompareTime);'#13
  +#10'      for i := FileList.Count - 1 downto 0 do'#13#10'      begin'#13#10
  +'        tmp:=FormatLine2(TFileDetails(FileList[i]));'#13#10'        NamesLi'
  +'st.Add(tmp);'#13#10'      end;'#13#10'    end;'#13#10'{$else}'#13#10'var'#13
  +#10'  namesArray:TStringArray;'#13#10'  n:integer;'#13#10'  bits:TStringList'
  +';'#13#10'  nm,ts:String;'#13#10'begin'#13#10'  bits:=TStringList.Create;'#13
  +#10'  setlength(namesArray,0);'#13#10'  asm'#13#10'  namesArray = Object.key'
  +'s(localStorage);'#13#10'  if (SortBy == "Time") {'#13#10'    namesArray.sor'
  +'t(function(a,b){'#13#10'      // subtract dates'#13#10'      // to get a va'
  +'lue that is either negative, positive, or zero.'#13#10'      var aobj = loc'
  +'alStorage.getItem(a);'#13#10'      var bobj = localStorage.getItem(b);'#13
  +#10'      return (new Date(JSON.parse(bobj).timestamp) - new Date(JSON.parse'
  +'(aobj).timestamp));'#13#10'    });'#13#10'  }'#13#10'  //console.log(''name'
  +'sArray'',namesArray);'#13#10'  end;'#13#10'  for n:= 0 to length(namesArray'
  +')-1 do'#13#10'  begin'#13#10'    bits:=stringsplit(namesArray[n],''.'');'#13
  +#10'    if (bits.count=2)'#13#10'    and (bits[1]=suffix) then'#13#10'    be'
  +'gin'#13#10'      nm:=bits[0];'#13#10'      asm'#13#10'      if (suffix!=''x'
  +'cmp'') {'#13#10'        // find the timestamp...'#13#10'        try {'#13#10
  +'          var object = JSON.parse(localStorage.getItem(namesArray[n]));'#13
  +#10'          ts = '''';'#13#10'          if (object!=null) {'#13#10'       '
  +'     if ( object.hasOwnProperty(''timestamp'') ) {'#13#10'              var'
  +' tsd = new Date(object.timestamp);'#13#10'              ts = ''      ''+tsd'
  +'.toLocaleDateString()+'' ''+tsd.toLocaleTimeString();'#13#10'            }'
  +#13#10'          }'#13#10'        }  catch(err) {ts=''''; }  // skip the un-'
  +'parseable item.'#13#10'      }'#13#10'      end;'#13#10'      NamesList.Add'
  +'(nm+ts);'#13#10'    end;'#13#10'  end;'#13#10'{$endif}'#13#10'  bits.Free;'
  +#13#10'end;'#13#10#13#10'(*'#13#10'namesArray.sort(function(a,b){'#13#10'  /'
  +'/ Turn your strings into dates, and then subtract them'#13#10'  // to get a'
  +' value that is either negative, positive, or zero.'#13#10'  return new Date'
  +'(b.timestamp) - new Date(a.timestamp);'#13#10'});'#13#10'*)'#13#10#13#10'pr'
  +'ocedure DiscoverSavedSystems(var NamesList:TStringList);'#13#10'begin'#13#10
  +'  //SavedSystemsForm.SavedSystemsSortBtn.IsVisible:=true;'#13#10'  Discover'
  +'SavedFiles(''xide'',NamesList,''Name'');'#13#10'end;'#13#10'procedure Disco'
  +'verSavedComposites(var NamesList:TStringList);'#13#10'begin'#13#10'  Discov'
  +'erSavedFiles(''xcmp'',NamesList,''Name'');'#13#10'end;'#13#10#13#10'procedu'
  +'re SetupAvailableResources;'#13#10'var'#13#10'  NamesList:TStringList;'#13
  +#10'  i:integer;'#13#10'  str:String;'#13#10'  RNode:TDataNode;'#13#10'begin'
  +#13#10#13#10'  RegisterResource(''RUI'','''',''UIComponents'',ResourceDataRo'
  +'otName,'''');'#13#10'  // Set up the tree of available components'#13#10#13
  +#10'  RegisterResource(''RUI'','''',''Layout'',''UIComponents'','''');'#13#10
  +'  RegisterResource(''RUI'',''TXVBox'',''TXVBox'',''Layout'',''Panel for ver'
  +'tically aligned items'');'#13#10'  RegisterResource(''RUI'',''TXHBox'',''TX'
  +'HBox'',''Layout'',''Panel for horizontally aligned items'');'#13#10'  Regis'
  +'terResource(''RUI'',''TXGroupBox'',''TXGroupBox'',''Layout'','''');'#13#10
  +'  RegisterResource(''RUI'',''TXScrollBox'',''TXScrollBox'',''Layout'',''Scr'
  +'ollable panel (with vertical alignment of items)'');'#13#10'  RegisterResou'
  +'rce(''RUI'',''TXTabControl'',''TXTabControl'',''Layout'',''Container for a '
  +'set of Tab Pages'');'#13#10'  RegisterResource(''RUI'',''TXTabSheet'',''TXT'
  +'abSheet'',''Layout'',''Tab Page'');'#13#10'  RegisterResource(''RUI'',''TXF'
  +'orm'',''TXForm'',''Layout'',''Pop-up Form'');'#13#10#13#10'  RegisterResour'
  +'ce(''RUI'','''',''Numeric'',''UIComponents'','''');'#13#10'  RegisterResour'
  +'ce(''RUI'',''TXProgressBar'',''TXProgressBar'',''Numeric'','''');'#13#10'  '
  +'RegisterResource(''RUI'',''TXNumericSlider'',''TXNumericSlider'',''Numeric'
  +''','''');'#13#10'  //AddAttrib(AttrParams,''StepSize'',''Real'',''1'',false'
  ,');'#13#10'  RegisterResource(''RUI'',''TXNumberSpinner'',''TXNumberSpinner'
  +''',''Numeric'','''');'#13#10#13#10'  RegisterResource(''RUI'','''',''Text'''
  +',''UIComponents'','''');'#13#10'  RegisterResource(''RUI'',''TXLabel'',''TX'
  +'Label'',''Text'',''Simple text label'');'#13#10'  RegisterResource(''RUI'','
  +'''TXHyperlink'',''TXHyperlink'',''Text'',''URL Link item'');'#13#10'  //Add'
  +'Attrib(AttrParams,''ContainerWidth'','''','''',false);'#13#10'  RegisterRes'
  +'ource(''RUI'',''TXEditBox'',''TXEditBox'',''Text'',''Editable text box'');'
  +#13#10'  RegisterResource(''RUI'',''TXMemo'',''TXMemo'',''Text'',''Editable '
  +'multi-line text box'');'#13#10'  RegisterResource(''RUI'',''TXTable'',''TXT'
  +'able'',''Text'',''2D Tabular data display'');'#13#10'  RegisterResource(''R'
  +'UI'',''TXDBTable'',''TXDBTable'',''Text'',''2D Tabular dataset display'');'
  +#13#10#13#10'  //{$ifdef Python}'#13#10'  ////AddAttrib(AttrParams,''Languag'
  +'e'',''String'',''Python'',false);'#13#10'  //RegisterResource(''RUI'',''TXC'
  +'ode'',''TXCode'',''Text'','''');'#13#10'  //{$endif}'#13#10#13#10'  Registe'
  +'rResource(''RUI'','''',''Selectors'',''UIComponents'','''');'#13#10'  Regis'
  +'terResource(''RUI'',''TXButton'',''TXButton'',''Selectors'',''Button'');'#13
  +#10'  //AddAttrib(AttrParams,''Enabled'',''Boolean'',''True'',false);'#13#10
  +'  RegisterResource(''RUI'',''TXCheckBox'',''TXCheckBox'',''Selectors'',''Ch'
  +'eckbox'');'#13#10'  RegisterResource(''RUI'',''TXRadioBtns'',''TXRadioBtns'
  +''',''Selectors'',''Radio buttons group'');'#13#10'  //AddAttrib(AttrParams,'
  +'''ItemIndex'',''Integer'',''0'',false);'#13#10'  RegisterResource(''RUI'','
  +'''TXComboBox'',''TXComboBox'',''Selectors'',''Drop-down selector'');'#13#10
  +'  //AddAttrib(AttrParams,''ItemText'',''String'',''Tree'',false);'#13#10'  '
  +'RegisterResource(''RUI'',''TXTree'',''TXTree'',''Selectors'',''Hierarchical'
  +' tree structure'');'#13#10'  RegisterResource(''RUI'',''TXDatePicker'',''TX'
  +'DatePicker'',''Selectors'',''Date picker'');'#13#10'  RegisterResource(''RU'
  +'I'',''TXColorPicker'',''TXColorPicker'',''Selectors'',''Colour picker'');'
  +#13#10'  RegisterResource(''RUI'',''TXMainMenu'',''TXMainMenu'',''Selectors'
  +''',''Main menu, container for menu items'');'#13#10'  RegisterResource(''RU'
  +'I'',''TXMenuItem'',''TXMenuItem'',''Selectors'',''Menu Item'');'#13#10#13#10
  +'  //   RegisterResource(''RUI'',''FilePicker'',''FilePicker'',''Selectors'''
  +',-1,AttrParams);'#13#10#13#10'  RegisterResource(''RUI'','''',''Media'',''U'
  +'IComponents'','''');'#13#10'  RegisterResource(''RUI'',''TXImage'',''TXImag'
  +'e'',''Media'',''Image'');'#13#10'  RegisterResource(''RUI'',''TXBitMap'','''
  +'TXBitMap'',''Media'',''Bitmap'');'#13#10#13#10'     // missing.....Audio'#13
  +#10'     // missing.....Video'#13#10'     // missing.....Chat'#13#10#13#10' '
  +' RegisterResource(''RUI'','''',''IFrame'',''UIComponents'','''');'#13#10'  '
  +'RegisterResource(''RUI'',''TXIFrame'',''TXIFrame'',''IFrame'',''IFrame (emb'
  +'edded HTML) component'');'#13#10'  RegisterResource(''RUI'',''TXGPUCanvas'''
  +',''TXGPUCanvas'',''IFrame'',''GPU Canvas'');'#13#10'  RegisterResource(''RU'
  +'I'',''TXHTMLEditor'',''TXHTMLEditor'',''IFrame'',''Editable HTML text frame'
  +''');'#13#10'  RegisterResource(''RUI'',''TXHTMLText'',''TXHTMLText'',''IFra'
  +'me'',''Non-editable HTML Text frame'');'#13#10'  RegisterResource(''RUI'','
  +'''TXSVGContainer'',''TXSVGContainer'',''IFrame'',''SVG Container'');'#13#10
  +'  RegisterResource(''RUI'','''',''SVGComponents'',''IFrame'','''');'#13#10
  +'  RegisterResource(''RSVG'',''TXSVGText'',''TXSVGText'',''SVGComponents'','
  +'''SVG Text element'');'#13#10'  RegisterResource(''RSVG'',''TXSVGRect'',''T'
  +'XSVGRect'',''SVGComponents'',''SVG Rectangle element'');'#13#10'  RegisterR'
  +'esource(''RSVG'',''TXSVGRoundedRect'',''TXSVGRoundedRect'',''SVGComponents'
  +''',''SVG Rounded Rectangle element'');'#13#10'  RegisterResource(''RSVG'','
  +'''TXSVGCircle'',''TXSVGCircle'',''SVGComponents'',''SVG Circle element'');'
  +#13#10'  RegisterResource(''RSVG'',''TXSVGEllipse'',''TXSVGEllipse'',''SVGCo'
  +'mponents'',''SVG Ellipse element'');'#13#10'  RegisterResource(''RSVG'',''T'
  +'XSVGLine'',''TXSVGLine'',''SVGComponents'',''SVG Line element'');'#13#10'  '
  +'RegisterResource(''RSVG'',''TXSVGPolyLine'',''TXSVGPolyLine'',''SVGComponen'
  +'ts'',''SVG Poly-line element'');'#13#10'  RegisterResource(''RSVG'',''TXSVG'
  +'PolyGon'',''TXSVGPolyGon'',''SVGComponents'',''SVG Polygon element'');'#13
  +#10#13#10'  RegisterResource(''RUI'','''',''Composites'',''UIComponents'','''
  +''');'#13#10#13#10'      // Set up the list of previously saved composite it'
  +'ems'#13#10'      NamesList:=TStringList.Create;'#13#10'      DiscoverSavedC'
  +'omposites(NamesList);'#13#10'      for i:=0 to NamesList.count-1 do'#13#10
  +'      begin'#13#10'        //ClearAttribs(AttrParams);'#13#10'        //Add'
  +'Attrib(AttrParams,''CompositeType'',''String'',NamesList[i],true);'#13#10' '
  +'       {$ifndef JScript}'#13#10'        str:=ReadFromLocalStore(''SavedSyst'
  ,'ems/''+NamesList[i]+''.xcmp'');'#13#10'        {$else}'#13#10'        str:='
  +'ReadFromLocalStore(NamesList[i]+''.xcmp'');'#13#10'        {$endif}'#13#10
  +'        //AddAttrib(AttrParams,''SourceString'',''String'',str,true);'#13#10
  +'        RNode := RegisterResource(''RUI'',''TXComposite'',NamesList[i]+''_x'
  +'cmp'',''Composites'',''Composite (encapsulated) component'');   //suffix to'
  +' protect nodename-uniqueness'#13#10'        RNode.SetAttributeValue(''Compo'
  +'siteType'',NamesList[i],''String'',true);'#13#10'        RNode.SetAttribute'
  +'Value(''SourceString'',str,''String'',true);'#13#10'      end;'#13#10#13#10
  +'  RegisterResource(''RNV'','''',''Non-Visual Components'',ResourceDataRootN'
  +'ame,'''');'#13#10'  RegisterResource(''RNV'',''TXStore'',''TXStore'',''Non-'
  +'Visual Components'',''Data Store item (keyname, value pair)'');'#13#10'  Re'
  +'gisterResource(''RNV'',''TXTrapEvents'',''TXTrapEvents'',''Non-Visual Compo'
  +'nents'',''Event handler to intercept system events'');'#13#10'  RegisterRes'
  +'ource(''RNV'',''TXThreads'',''TXThreads'',''Non-Visual Components'',''To pr'
  +'ovide multi-thread process'');'#13#10'  RegisterResource(''RNV'',''TXCompos'
  +'iteIntf'',''TXCompositeIntf'',''Non-Visual Components'',''Interface element'
  +' for Composites'');'#13#10#13#10'  NamesList.Free;'#13#10#13#10'end;'#13#10
  +#13#10#13#10'function XIDEPrompt(PromptString,DefaultString:string):string;'
  +#13#10'var'#13#10'  str:string;'#13#10'begin'#13#10'    {$ifndef JScript}'#13
  +#10'    str:=DefaultString;'#13#10'    if not InputQuery(''XIDE'', PromptStr'
  +'ing, str) then'#13#10'      str:=''''   //user cancelled the dialog'#13#10
  +'    else'#13#10'    begin'#13#10'      //Following event handler being call'
  +'ed (while probably in design mode) due to the requirement for'#13#10'      '
  +'//event logging during design.'#13#10'      // Not available for capture by'
  +' user-written code.'#13#10'      HandleEvent(nil,''UserInput'',SystemRootNa'
  +'me,'''',str);'#13#10'    end;'#13#10'    {$else}'#13#10'    asm'#13#10'    '
  +' var res = prompt(PromptString, DefaultString);'#13#10'     if (res==null) '
  +'{str=''''}'#13#10'      else {'#13#10'        str=res;'#13#10'        //Fol'
  +'lowing event handler being called (while probably in design mode) due to th'
  +'e requirement for'#13#10'        //event logging during design.'#13#10'    '
  +'    // Not available for capture by user-written code.'#13#10'        pas.E'
  +'vents.handleEvent(null,''UserInput'',pas.NodeUtils.SystemRootName,'''',str)'
  +';'#13#10'      }'#13#10'    end;'#13#10'    {$endif}'#13#10#13#10'    resul'
  +'t:=str;'#13#10'end;'#13#10#13#10'function NameStringIsValid(nm:String):Bool'
  +'ean;'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  ok:=false;'#13#10
  +'  if FoundString(nm,''.'')>0 then'#13#10'    showmessage(''Enter the name w'
  +'ithout dot characters ''''.'''''')'#13#10'  else if FoundString(nm,'' '')>0'
  +' then'#13#10'    showmessage(''Enter the name without space characters'')'
  +#13#10'  else if not SysUtils.IsValidIdent(nm) then'#13#10'    showmessage('
  +'''Name is not valid - Use Alphanumeric characters plus ''''_''''; first cha'
  +'r non-numeric.'')'#13#10'  else'#13#10'    ok:=true;'#13#10'  result:=ok;'
  +#13#10'end;'#13#10#13#10'function GetValidItemName(PromptString,DefaultStrin'
  +'g:String):String;'#13#10'var'#13#10'  resultstring:String;'#13#10'  ok:Bool'
  +'ean;'#13#10'begin'#13#10'  ok:=false;'#13#10'  while not ok do'#13#10'  beg'
  +'in'#13#10'    resultstring:= trim(XIDEPrompt(PromptString,DefaultString));'
  +#13#10'    if resultstring<>'''' then'#13#10'    begin'#13#10'      DefaultS'
  +'tring:=resultstring;'#13#10'      ok:=NameStringIsValid(resultstring);'#13
  +#10'    end'#13#10'    else'#13#10'      ok:=true; // user cancelled the act'
  +'ion'#13#10'  end;'#13#10'  result:=resultstring;'#13#10'end;'#13#10#13#10'f'
  +'unction GetComponentName(PromptString:string):string;'#13#10'var DefaultStr'
  +'ing:string;'#13#10'begin'#13#10'   DefaultString := ''Created_''+DateTimeTo'
  +'Str(Now);'#13#10'   DefaultString :=ReplaceStr( DefaultString,'' '',''_'');'
  +#13#10'   DefaultString :=ReplaceStr( DefaultString,'':'',''_'');'#13#10'   '
  +'DefaultString :=ReplaceStr( DefaultString,''-'',''_'');'#13#10'   DefaultSt'
  +'ring :=ReplaceStr( DefaultString,''/'',''_'');'#13#10'   result:=GetValidIt'
  +'emName(PromptString,DefaultString);'#13#10'end;'#13#10#13#10'function Compo'
  +'nentNameIsUnique(ScreenObjectName,NameSpace:string):Boolean;'#13#10'var'#13
  +#10'  myresult:Boolean;'#13#10'  founditem:TDataNode;'#13#10'begin'#13#10'  '
  +'myresult:=true;'#13#10'  founditem:=FindDataNodeById(SystemNodeTree,ScreenO'
  +'bjectName,NameSpace,false);    //UIRootNode??'#13#10'  if (founditem<>nil)'
  +#13#10'  then'#13#10'  begin'#13#10'    ShowMessage(''Error. Name >''+Screen'
  +'ObjectName+''< is not unique when creating a new system component'' );'#13
  +#10'    myresult:=false;'#13#10'  end;'#13#10'  result:=myresult;'#13#10'end'
  +';'#13#10#13#10'{$ifdef JScript}'#13#10#13#10'procedure ShowXFormForDesign(X'
  ,'FormName:String);'#13#10'var'#13#10'  XFormNode:TDataNode;'#13#10'begin'#13
  +#10'  //showmessage(''ShowXFormForDesign ''+XFormName);'#13#10'  // Swap the'
  +' centre section of the screen for the requested XForm, so it can be display'
  +'ed while'#13#10'  // still accessing the nav tree and resources tree'#13#10
  +'  asm'#13#10'    var ob = document.getElementById(XFormName);'#13#10'    va'
  +'r UIScreen = document.getElementById(''UIRoot'');'#13#10'    var UIContent '
  +'= document.getElementById(''UIRootContents'');'#13#10'    UIContent.style.d'
  +'isplay = "none";'#13#10'    UIScreen.appendChild(ob);'#13#10'    //pas.XFor'
  +'m.ShowXForm(XFormName);'#13#10'    ob.style.position=''relative'';'#13#10' '
  +' end;'#13#10'  XFormNode:=FindDataNodeById(UIRootNode,XFormName,'''',true);'
  +#13#10'  TXForm(XFormNode.ScreenObject).Showing:=''Modal'';'#13#10'end;'#13
  +#10#13#10'procedure CloseXFormForDesign(XFormName:String);'#13#10'var'#13#10
  +'  UIRootNodeName:string;'#13#10'begin'#13#10'  //showmessage(''CloseXFormFo'
  +'rDesign ''+XFormName);'#13#10'  UIRootNodeName:=UIRootNode.Nodename;'#13#10
  +'  asm'#13#10'    //alert(''UIRootNodeName=''+UIRootNodeName);'#13#10'    va'
  +'r ob = document.getElementById(XFormName);'#13#10'    if (ob!=null) {'#13#10
  +'      ob.style.position=''fixed'';'#13#10'      ob.style.display = "none";'
  +#13#10'      var root =  document.getElementById(UIRootNodeName);'#13#10'   '
  +'   root.appendChild(ob);'#13#10'      }'#13#10'    var UIContent = document'
  +'.getElementById(''UIRootContents'');'#13#10'    UIContent.style.display = "'
  +'flex";'#13#10'  end;'#13#10'  //if OpenXForms.IndexOf(XFormName)>-1 then'#13
  +#10'  DeleteOpenXForm(XFormName,'''');'#13#10'end;'#13#10#13#10'{$endif}'#13
  +#10#13#10'procedure DeHighlightObject(OldNode:TDataNode);'#13#10'// de-highl'
  +'ight the previous selected component.'#13#10'begin'#13#10'  {$ifndef JScrip'
  +'t}'#13#10'  if OldNode<>nil then'#13#10'    begin'#13#10'      SetBooleanPr'
  +'operty(TComponent(OldNode.ScreenObject),''IsSelected'',false);'#13#10'    e'
  +'nd;'#13#10'  {$else}'#13#10'  asm'#13#10'    //alert(''LastHTMLUserInterfac'
  +'eItemSelected=''+pas.XObjectInsp.LastHTMLUserInterfaceItemSelected+'' hadBo'
  +'rder=''+pas.XObjectInsp.LastHTMLUserInterfaceItemHadBorder);'#13#10'    pas'
  +'.HTMLUtils.UnHighlight(pas.XObjectInsp.LastHTMLUserInterfaceItemSelected,pa'
  +'s.XObjectInsp.LastHTMLUserInterfaceItemHadBorder);'#13#10'  end;'#13#10'  {'
  +'$endif}'#13#10#13#10'end;'#13#10#13#10'procedure HighlightNavigatorObject(C'
  +'urrentNode:TDataNode);'#13#10'var'#13#10'  {$ifdef JScript}'#13#10'  mf:TFo'
  +'rm;'#13#10'  mfn,cfn:string;'#13#10'  {$endif}'#13#10'  tmp:string;'#13#10
  +'  Border:Boolean;'#13#10'  i:integer;'#13#10'  ParentNode:TDataNode;'#13#10
  +'  TabPage:TXTabSheet;'#13#10'begin'#13#10'  tmp:='''';'#13#10'  if CurrentN'
  +'ode.HasAttribute(''Border'') then'#13#10'    tmp:=CurrentNode.GetAttribute('
  +'''Border'',false).AttribValue;'#13#10'  if tmp='''' then'#13#10'    Border:'
  +'=false'#13#10'  else'#13#10'    Border:=myStrToBool(tmp);'#13#10#13#10'  //'
  +' if the component is in a XForm, show the form'#13#10'  {$ifndef JScript}'
  +#13#10'  for i:=length(OpenXForms)-1 downto 0 do'#13#10'  begin'#13#10'    i'
  +'f (OpenXForms[i].NodeName<>MainForm.Name) or (OpenXForms[i].NameSpace<>'''''
  +') then'#13#10'      CloseXForm(OpenXForms[i].NodeName,OpenXForms[i].NameSpa'
  +'ce);'#13#10'  end;'#13#10'  if CurrentNode.MyForm<>nil  then'#13#10'    Sho'
  +'wXForm(CurrentNode.MyForm.Name,false,CurrentNode.NameSpace);'#13#10'  {$els'
  +'e}'#13#10'  for i:=length(OpenXForms)-1 downto 0 do'#13#10'  begin'#13#10' '
  +'   if OpenXForms[i].NameSpace='''' then'#13#10'      CloseXFormForDesign(Op'
  +'enXForms[i].NodeName);'#13#10'  end;'#13#10'  {$endif}'#13#10#13#10#13#10' '
  +' {$ifndef JScript}'#13#10'  // highlight component on screen'#13#10'  if Cu'
  +'rrentNode.NodeClass=''UI'' then'#13#10'    SetBooleanProperty(TComponent(Cu'
  +'rrentNode.ScreenObject),''IsSelected'',true)'#13#10'  else'#13#10'    SetBo'
  +'oleanProperty(CurrentNode,''IsSelected'',true);'#13#10'  if LastLazUserInte'
  +'rfaceItemSelected <> '''' then'#13#10'  begin'#13#10'    LastLazUserInterfa'
  +'ceItemSelected:='''';'#13#10'  end;'#13#10'  if (CurrentNode.ScreenObject<>'
  +'nil) then'#13#10'  begin'#13#10'    LastLazUserInterfaceItemSelected:=Curre'
  +'ntNode.NodeName;'#13#10'  end;'#13#10' {$Else}'#13#10'    // HTML - highlig'
  +'ht component on screen'#13#10'    mf:=MainForm;'#13#10'    mfn:=MainForm.Na'
  +'me;'#13#10'    if CurrentNode.MyForm<>nil then'#13#10'      cfn:=CurrentNod'
  +'e.MyForm.Name'#13#10'    else'#13#10'    begin'#13#10'      //showmessage('
  +'''CurrentNode.MyForm is nil'');'#13#10'      cfn:=mf.Name;'#13#10'    end;'
  +#13#10'    asm'#13#10'     try{'#13#10'     //alert(''highlight component on'
  +' screen...''+CurrentNode.NodeName);'#13#10'     //alert(''cfn=''+cfn+'' mfn'
  +'=''+mfn);'#13#10'      if  (cfn!=mfn) {'#13#10'         $mod.ShowXFormForDe'
  +'sign(cfn)  }'#13#10'      else {'#13#10'        var UIContent = document.ge'
  ,'tElementById(''UIRootContents'');'#13#10'        UIContent.style.display = '
  +'"flex";'#13#10'      }'#13#10#13#10'     var myobj = document.getElementByI'
  +'d(CurrentNode.NameSpace+CurrentNode.NodeName);'#13#10'     if ((myobj!=null'
  +')&&(myobj!=cfn)) {'#13#10#13#10'       pas.HTMLUtils.Highlight(myobj.id);'
  +#13#10'       pas.XObjectInsp.LastHTMLUserInterfaceItemSelected = myobj.id;'
  +#13#10'       pas.XObjectInsp.LastHTMLUserInterfaceItemHadBorder = Border;'
  +#13#10#13#10'       }'#13#10'     //alert(''highlight component done.'');'#13
  +#10'     }catch(err) { alert(err.message+''  in XObjectInsp.HighlightNavigat'
  +'orObject''); }'#13#10'   end;'#13#10#13#10'  {$endif}'#13#10#13#10'  // ok '
  +'we have raised the relevant form, and highlighted the object.'#13#10'  // N'
  +'ow check up the parent list in case it''s on a closed tab page...'#13#10'  '
  +'//ParentNode:=FindParentOfNode(SystemNodeTree,CurrentNode);'#13#10'  Parent'
  +'Node:=CurrentNode.NodeParent;'#13#10'  while (ParentNode<>nil)'#13#10'  and'
  +' (ParentNode.NodeType<>''TXForm'')'#13#10'  and (ParentNode.NodeName<>''App'
  +'licationRoot'')'#13#10'  and (ParentNode<>UIRootNode) do'#13#10'  begin'#13
  +#10'    if ParentNode.NodeType=''TXTabSheet'' then'#13#10'    begin'#13#10' '
  +'     TabPage:=TXTabSheet(ParentNode.ScreenObject);'#13#10'      //ParentNod'
  +'e:=FindParentOfNode(SystemNodeTree,ParentNode);'#13#10'      ParentNode:=Pa'
  +'rentNode.NodeParent;'#13#10'      {$ifndef JScript}'#13#10'      TXTabContr'
  +'ol(ParentNode.ScreenObject).ActivePage:=TabPage;'#13#10'      {$else}'#13#10
  +'      ChangeTabPage(TabPage.NodeName,ParentNode.NodeName,'''',TabPage);'#13
  +#10'      {$endif}'#13#10'    end;'#13#10'    //ParentNode:=FindParentOfNode'
  +'(SystemNodeTree,ParentNode);'#13#10'    ParentNode:=ParentNode.NodeParent;'
  +#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'procedure RefreshObjectInspecto'
  +'r(CurrentNode:TDataNode);'#13#10'var Prefix1,AttributePrefix:string;'#13#10
  +'  i:integer;'#13#10'  WidgetNode:TDataNode;'#13#10'  myAttribs:TNodeAttribu'
  +'tesArray;'#13#10'  s:boolean;'#13#10'  BoxName,AttribValue:String;'#13#10' '
  +' MyWidget:TObject;'#13#10'begin'#13#10'  s:=SuppressEvents;'#13#10'  Suppre'
  +'ssEvents:=true;'#13#10'  //showmessage(''RefreshObjectInspector. Node=''+Cu'
  +'rrentNode.NodeName);'#13#10#13#10'  if (CurrentNode<>nil)  then'#13#10'  be'
  +'gin'#13#10'      if CurrentNode.NodeClass=''DM'' then'#13#10'        Prefix'
  +'1:=''DM'''#13#10'      else'#13#10'        Prefix1:=''OI'';'#13#10'      At'
  +'tributePrefix:=Prefix1+AttributeEditorNameDelimiter+CurrentNode.NodeName;'
  +#13#10'      myAttribs:=CurrentNode.NodeAttributes;'#13#10#13#10'      for i'
  +':=0 to length(myAttribs)-1 do'#13#10'      begin'#13#10'        //exclude S'
  +'uppressed properties that user shouldn''t see'#13#10'        if (FindSuppre'
  +'ssedProperty(CurrentNode.NodeType,CurrentNode.NodeAttributes[i].AttribName)'
  +'<0)'#13#10'        and (CurrentNode.NodeAttributes[i].AttribName<>''ParentN'
  +'ame'') then'#13#10'        begin'#13#10'          BoxName:=AttributePrefix+'
  +'AttributeEditorNameDelimiter'#13#10'                    +CurrentNode.NodeAt'
  +'tributes[i].AttribName+AttributeEditorNameDelimiter'#13#10'                '
  +'    +IntToStr(i+2);'#13#10'          AttribValue:=CurrentNode.NodeAttribute'
  +'s[i].AttribValue;'#13#10'          WidgetNode:=FindDataNodeById(PropertiesN'
  +'ode,BoxName,'''',false);'#13#10'          if WidgetNode<>nil then'#13#10'  '
  +'        begin'#13#10'            MyWidget:=WidgetNode.ScreenObject;'#13#10
  +#13#10'            if (CurrentNode.NodeAttributes[i].AttribType = ''Boolean'
  +''')'#13#10'            and (myWidget is TXCheckBox) then'#13#10'           '
  +' begin'#13#10'               TXCheckBox(myWidget).Checked:=myStrtoBool(Attr'
  +'ibValue);'#13#10'            end'#13#10'            else if (myWidget is TX'
  +'ComboBox) then'#13#10'            begin'#13#10'              TXComboBox(myW'
  +'idget).ItemValue:=AttribValue;'#13#10'            end'#13#10'            el'
  +'se if (myWidget is TXEditBox) then'#13#10'            begin'#13#10'        '
  +'      TXEditBox(myWidget).ItemValue:=AttribValue;'#13#10'            end'#13
  +#10'            else if (myWidget is TXColorPicker) then'#13#10'            '
  +'begin'#13#10'              TXColorPicker(myWidget).ItemValue:=AttribValue;'
  +#13#10'            end;'#13#10'          end;'#13#10'       end;'#13#10#13#10
  +'     end;'#13#10#13#10'    //------------------- Refresh the registered Eve'
  +'nts Tabpage -----------------------'#13#10#13#10'    if CurrentNode.IsDynam'
  +'ic then'#13#10'    begin'#13#10'        for i:=0 to CurrentNode.MyEventType'
  +'s.count-1 do'#13#10'        begin'#13#10'          BoxName:=AttributePrefix'
  +'+AttributeEditorNameDelimiter'#13#10'                    +CurrentNode.MyEve'
  +'ntTypes[i]+AttributeEditorNameDelimiter'#13#10'                    +IntToSt'
  +'r(i+2);'#13#10'          AttribValue:=CurrentNode.myEventHandlers[i].TheCod'
  +'e;'#13#10#13#10'          WidgetNode:=FindDataNodeById(EventsNode,BoxName,'
  ,''''',false);'#13#10'          if WidgetNode<>nil then'#13#10'          begi'
  +'n'#13#10'            MyWidget:=WidgetNode.ScreenObject;'#13#10'            '
  +'if MyWidget<>nil then'#13#10'              TXEditBox(myWidget).ItemValue:=A'
  +'ttribValue;'#13#10'          end;'#13#10#13#10'        end;'#13#10'    end;'
  +#13#10'  end;'#13#10#13#10'  SuppressEvents:=s;'#13#10'end;'#13#10#13#10'pro'
  +'cedure RefreshObjectInspectorLater(targetNode:TDataNode);'#13#10'begin'#13
  +#10'  {$ifndef JScript}'#13#10'  // do after delay because this process dele'
  +'tes the button whose click event we are handling'#13#10'  ObjectInspectorSe'
  +'lectedNavTreeNode:=nil;'#13#10'  HandleEventLater(nil,''TreeNodeClick'',''N'
  +'avTree'','''','''');'#13#10'  {$else}'#13#10'  PopulateObjectInspector(targ'
  +'etNode);'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure DoSelectNavTr'
  +'eeNode(CurrentNode:TDataNode; refresh:boolean);'#13#10'var'#13#10'  mynodeT'
  +'ext:string;'#13#10'  IFrameNode:TDataNode;'#13#10'  okToContinue:Boolean;'
  +#13#10'begin'#13#10'  if CurrentNode.NameSpace<>'''' then'#13#10'    EXIT;'
  +#13#10#13#10'  okToContinue:=true;'#13#10'  {$ifdef JScript}'#13#10'  asm'#13
  +#10'    var ob=document.getElementById(''Grey1'');'#13#10'    if (ob!=null) '
  +'{'#13#10'      if (ob.style.display!=''none'') {'#13#10'        okToContinu'
  +'e=false;'#13#10'      }'#13#10'    }'#13#10'  end;'#13#10'  if length(OpenX'
  +'Forms)>0 then'#13#10'    okToContinue:=false;'#13#10'  {$endif}'#13#10#13#10
  +'   //!! Should operate this by node id, not text  :: HOWEVER, in the nav tr'
  +'ee, node texts are all unique.'#13#10'  //showmessage(''DoSelectNavTreeNode'
  +' ''+CurrentNode.NodeClass+'' ''+CurrentNode.NodeType+'' ''+CurrentNode.Node'
  +'Name+'' '');'#13#10'  if (DesignMode) and (okToContinue) then'#13#10'  begi'
  +'n'#13#10'    XDBTable.SetDSNameOptions(DMRoot);'#13#10#13#10'    {$ifdef Ch'
  +'romium}'#13#10'     {$ifndef JScript}'#13#10'     // For an SVG container, '
  +'inspect the Title, and switch to a child SVG node, if appropriate.'#13#10' '
  +'    if CurrentNode.NodeType=''TXSVGContainer'' then'#13#10'     begin'#13#10
  +'       IFrameNode:=SVGItemFromTitle(TXSVGContainer(CurrentNode.ScreenObject'
  +').FrameTitle);'#13#10'       if IFrameNode<>nil then'#13#10'         Curren'
  +'tNode:=IFrameNode;'#13#10'     end;'#13#10'     {$endif}'#13#10'    {$endif'
  +'}'#13#10#13#10'     mynodeText := CurrentNode.NodeType+''(''+CurrentNode.No'
  +'dename+'')'';'#13#10'     //showmessage(''mynodeText=''+mynodeText);'#13#10
  +#13#10'     TreeInFocus := UIRootNode;'#13#10#13#10'     {$ifndef JScript}'
  +#13#10'     TXTree(NavTreeComponent.ScreenObject).SelectedNodeText:=mynodeTe'
  +'xt;  // (Windows) this selects the node in the navtree component, if change'
  +'d.'#13#10'     {$endif}'#13#10#13#10'     if (ObjectInspectorSelectedNavTre'
  +'eNode=nil)'#13#10'     or (ObjectInspectorSelectedNavTreeNode<>CurrentNode)'
  +' then'#13#10'     begin'#13#10'       DeHighlightObject(ObjectInspectorSele'
  +'ctedNavTreeNode);'#13#10#13#10'       //display the attributes of the selec'
  +'ted node in the object inspector'#13#10'       ObjectInspectorSelectedNavTr'
  +'eeNode:=CurrentNode;'#13#10'       PopulateObjectInspector(CurrentNode);'#13
  +#10'       {$ifdef JScript}'#13#10'       TXTree(NavTreeComponent).SelectedN'
  +'odeText:=mynodeText;   // (Browser) this selects the node in the navtree co'
  +'mponent, if changed.'#13#10'       {$endif}'#13#10#13#10'       // Highligh'
  +'t the selected object (dotted border)'#13#10'       HighlightNavigatorObjec'
  +'t(ObjectInspectorSelectedNavTreeNode);'#13#10'     end'#13#10'     else  if'
  +' (refresh) then'#13#10'     begin'#13#10'       // just refresh all the dis'
  +'played property values'#13#10'       RefreshObjectInspector(CurrentNode);'
  +#13#10'     end;'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'procedure  Sel'
  +'ectNavTreeNode(CurrentNode:TDataNode; refresh:boolean);'#13#10'begin'#13#10
  +'  if CurrentNode.NameSpace='''' then'#13#10'  begin'#13#10'    {$ifndef JSc'
  +'ript}'#13#10'    DoSelectNavTreeNode(CurrentNode,refresh);'#13#10'    {$els'
  +'e}'#13#10'    asm'#13#10'    myTimeout(pas.XObjectInsp.DoSelectNavTreeNode,'
  +'5,''DoSelectNavTreeNode'',0,CurrentNode,refresh);'#13#10'    end;'#13#10'  '
  +'  {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'procedure  SelectCo'
  +'deTreeNode(CurrentNode:TDataNode; refresh:boolean; TreeNodeText:String);'#13
  +#10'begin'#13#10'     //!!!! Should to operate this by node id, not text  ::'
  +' HOWEVER, in the code tree, node texts are all unique.'#13#10#13#10'     //'
  +'showmessage(''SelectCodeTreeNode ''+CurrentNode.Nodename+'' >''+TreeNodeTex'
  +'t+''<'');'#13#10'     //mynodeText := CurrentNode.NodeType+''(''+CurrentNod'
  +'e.Nodename+'')'';'#13#10'     TreeInFocus := CodeRootNode;'#13#10#13#10'   '
  +'  {$ifndef JScript}'#13#10'     TXTree(CodeTreeComponent.ScreenObject).Sele'
  +'ctedNodeText:=TreeNodeText;  // this selects the node in the codetree compo'
  +'nent, if changed.'#13#10'     {$endif}'#13#10#13#10'     if CurrentNode<>ni'
  ,'l then'#13#10'     begin'#13#10'       if (refresh)'#13#10'       or (Objec'
  +'tInspectorSelectedCodeTreeNode=nil)'#13#10'       or (ObjectInspectorSelect'
  +'edCodeTreeNode<>CurrentNode) then'#13#10'       begin'#13#10#13#10'        '
  +' if DesignMode then'#13#10'         begin'#13#10'           ObjectInspector'
  +'SelectedCodeTreeNode:=CurrentNode;'#13#10'           {$ifdef JScript}'#13#10
  +'           TXTree(CodeTreeComponent).SelectedNodeText:=TreeNodeText;  // th'
  +'is selects the node in the codetree component, if changed.'#13#10'         '
  +'  {$endif}'#13#10#13#10'         end;'#13#10'       end;'#13#10'       Obje'
  +'ctInspectorSelectedCodeNodeText:=TreeNodeText;'#13#10'     end'#13#10'     '
  +'else'#13#10'     begin'#13#10'       ObjectInspectorSelectedCodeTreeNode:=C'
  +'urrentNode;'#13#10'     end;'#13#10'end;'#13#10#13#10'procedure RebuildReso'
  +'urcesTree;'#13#10' var'#13#10'     newtreestring:string;'#13#10'     ResTre'
  +'e:TXTree;'#13#10' begin'#13#10'   //showmessage(''ConstructSystemTreeString'
  +' for resources'');'#13#10'   ClearResourceInspector;'#13#10'   DeleteNodeCh'
  +'ildren(ResourcesNodeTree);'#13#10#13#10'   SetupAvailableResources;'#13#10
  +#13#10'   newtreestring:= ConstructSystemTreeString(ResourcesNodeTree,0,fals'
  +'e,false,nil,'''');'#13#10'   ResTree:=TXTree(ResourceTreeComponent.ScreenOb'
  +'ject);'#13#10'   {$ifndef JScript}'#13#10'   TXTree(ResourceTreeComponent.S'
  +'creenObject).TreeData:=newtreestring;'#13#10'   TmyTreeView(ResTree.myContr'
  +'ol).ExpandTreeNodes(ResTree.OpenToLevel);'#13#10'   {$else}'#13#10'   TXTre'
  +'e(ResourceTreeComponent).TreeData:=newtreestring;'#13#10'   {$endif}'#13#10
  +'end;'#13#10#13#10'procedure RebuildNavigatorTree;'#13#10'var'#13#10'    new'
  +'treestring:string;'#13#10'    tempNode:TDataNode;'#13#10'begin'#13#10'(*'#13
  +#10'actual node tree structure...'#13#10'(SystemNodeTree)'#13#10' |'#13#10'U'
  +'IRootNode'#13#10'   |'#13#10'   MainForm'#13#10'       |'#13#10'       Whol'
  +'e of main form'#13#10'   XForms'#13#10#13#10'what we want to see on the nav'
  +'igator is....'#13#10'UIRootNode'#13#10'   |'#13#10'   MainForm'#13#10'     '
  +'  UIRoot (centre section only)'#13#10'       MainMenu'#13#10'       Non-vis'
  +'ual components'#13#10'   XForms (dynamic only)'#13#10#13#10'*)'#13#10#13#10
  +'  // construct string for the ''UI'' section of the main form'#13#10'  //sh'
  +'owmessage(''ConstructSystemTreeString for nav'');'#13#10'  newtreestring:= '
  +'ConstructSystemTreeString(UIRootNode,0,true,false,nil,'''');'#13#10'  {$ifn'
  +'def JScript}'#13#10'  // WriteToFile(''navtree.txt'',newtreestring);'#13#10
  +'  TXTree(NavTreeComponent.ScreenObject).TreeData:=newtreestring;'#13#10'  {'
  +'$else}'#13#10'  TXTree(NavTreeComponent).TreeData:=newtreestring;'#13#10'  '
  +'{$endif}'#13#10#13#10'  // set hints for the special attributes on UIRootNo'
  +'de'#13#10'  UIRootNode.GetAttribute(''DeploymentMode'',false).AttribHint:='
  +'''When the designed system is deployed to html (menu System>Deploy) it is s'
  +'et up to start in design mode or run mode '';'#13#10'  UIRootNode.GetAttrib'
  +'ute(''DBVersion'',false).AttribHint:=''Latest iteration number of the local'
  +' database built from data description on entry to run mode '';'#13#10'  UIR'
  +'ootNode.GetAttribute(''PythonPackages'',false).AttribHint:=''Python package'
  +'s to be loaded in the browser (pyodide) environment (; delimited, eg numpy;'
  +'matplotlib). '';'#13#10#13#10#13#10'  if ObjectInspectorSelectedNavTreeNode'
  +'<>nil then'#13#10'  begin'#13#10'    //showmessage(''selecting node ''+Obje'
  +'ctInspectorSelectedNavTreeNode.nodename);'#13#10'    tempNode:=ObjectInspec'
  +'torSelectedNavTreeNode;'#13#10'    ObjectInspectorSelectedNavTreeNode:=nil;'
  +'   // so it will be selected/green bordered'#13#10'    SelectNavTreeNode(te'
  +'mpNode,true);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure RebuildCodeT'
  +'ree;'#13#10'var'#13#10'    newtreestring:string;'#13#10'    e:integer;'#13
  +#10'begin'#13#10'(*'#13#10'CodeRootNode'#13#10'   |'#13#10'   Unit1'#13#10' '
  +'  ...'#13#10'   Event Handlers'#13#10'      |'#13#10'      Event 1'#13#10' '
  +'     ...'#13#10'   GPU Canvas widgets'#13#10'      |'#13#10'      Widget 1 '
  +'Animation Code'#13#10'*)'#13#10#13#10'  // construct string for the ''Code'
  +''' section of the main form'#13#10'  //showmessage(''ConstructSystemTreeStr'
  +'ing for code'');'#13#10'  newtreestring:= ConstructCodeTreeString(CodeRootN'
  +'ode,0);'#13#10#13#10'  // For improved visibility, also add nodes to this t'
  +'ree for all event handlers'#13#10'  // defined within the UIRootNode'#13#10
  +'  e:=0;'#13#10'  newtreestring := ''["Root",''+newtreestring + ConstructEve'
  +'ntsTreeString(SystemNodeTree,e);'#13#10#13#10'  // AND any GPUCanvas widget'
  +'s, for access to the AnimationCode property'#13#10'  newtreestring := newtr'
  +'eestring + ConstructGPUCodeTreeString(SystemNodeTree);'#13#10#13#10'  newtr'
  +'eestring := newtreestring + '']'';'#13#10#13#10#13#10'  {$ifndef JScript}'
  +#13#10'  TXTree(CodeTreeComponent.ScreenObject).TreeData:=newtreestring;'#13
  ,#10'  {$else}'#13#10'  TXTree(CodeTreeComponent).TreeData:=newtreestring;'#13
  +#10'  {$endif}'#13#10'  if ObjectInspectorSelectedCodeTreeNode<>nil then'#13
  +#10'  begin'#13#10'    SelectCodeTreeNode(ObjectInspectorSelectedCodeTreeNod'
  +'e,true,ObjectInspectorSelectedCodeNodeText);'#13#10'  end;'#13#10#13#10'end'
  +';'#13#10#13#10'procedure HandleNavTreeClickEvent(DataNodeId:String; TreeNod'
  +'eText:String);'#13#10'var CurrentNode :TDataNode;'#13#10'begin'#13#10'//Sho'
  +'wMessage(''ntc event. node=''+DataNodeId+'' Text=''+TreeNodeText);'#13#10' '
  +' if TreeNodeText<>''Root'' then'#13#10'  begin'#13#10'    CurrentNode:=Find'
  +'DataNodeById(UIRootNode,DataNodeId,'''',true);'#13#10'    if CurrentNode=ni'
  +'l then'#13#10'      showmessage(''Cannot find node ''+DataNodeId+'' in XObj'
  +'ectInsp.HandleNavTreeClickEvent'')'#13#10'    else'#13#10'    begin'#13#10
  +'      SelectNavTreeNode(CurrentNode,false);'#13#10'    end;'#13#10#13#10'  '
  +'end;'#13#10'end;'#13#10#13#10'function FindLineNumForProc(ProcName:String):'
  +'integer;'#13#10'var'#13#10'  i,ln:integer;'#13#10'begin'#13#10'  ln:=1;'#13
  +#10'  i:=0;'#13#10'  while i<length(XIDEProcsList) do'#13#10'  begin'#13#10
  +'    if lowercase(XIDEProcsList[i].Name) = lowercase(ProcName) then'#13#10' '
  +'   begin'#13#10'      ln:=XIDEProcsList[i].LineNum;'#13#10'    end;'#13#10
  +'    i:=i+1;'#13#10'  end;'#13#10'  result:=ln;'#13#10'end;'#13#10#13#10'fun'
  +'ction FindLineNumForPyFunc(UnitNode:TDataNode;FuncName:String):integer;'#13
  +#10'var'#13#10'  i,j,ln:integer;'#13#10'  codetxt:String;'#13#10'  Lines:TSt'
  +'ringList;'#13#10'begin'#13#10'  ln:=-1;'#13#10'  i:=0;'#13#10'  while i<len'
  +'gth(pyUnitFuncs) do'#13#10'  begin'#13#10'    if (lowercase(pyUnitFuncs[i].'
  +'PyUnitName) = lowercase(UnitNode.NodeName))'#13#10'    and (pyUnitFuncs[i].'
  +'PyFuncName = FuncName) then'#13#10'    begin'#13#10'      // have to look f'
  +'or the function in the script to find line number'#13#10'      CodeTxt:=Uni'
  +'tNode.GetAttribute(''Code'',true).AttribValue;'#13#10'      Lines:=StringSp'
  +'lit(CodeTxt,LineEnding);'#13#10'      j:=0;'#13#10'      while (j < Lines.C'
  +'ount) and (ln<0) do'#13#10'      begin'#13#10'        Lines[j]:=trim(Lines['
  +'j]);'#13#10'        Lines[j]:=Copy(Lines[j], 1, 4+length(FuncName));'#13#10
  +'        if Lines[j] = ''def ''+FuncName then'#13#10'        begin'#13#10'  '
  +'        ln:=j+1;'#13#10'          j:=Lines.Count;'#13#10'        end;'#13#10
  +'        j:=j+1;'#13#10'      end;'#13#10#13#10'    end;'#13#10'    i:=i+1;'
  +#13#10'  end;'#13#10'  if ln<0 then ln:=0;'#13#10'  result:=ln;'#13#10'end;'
  +#13#10#13#10'procedure HandleCodeTreeClickEvent(TreeNodeId,TreeNodeText,Firs'
  +'tBit:String);'#13#10'var'#13#10'  CurrentNode :TDataNode;'#13#10'  ParentTe'
  +'xt, ParentId, p1:String;'#13#10'  {$ifndef JScript}'#13#10'  myTreeNode:TTr'
  +'eeNode;'#13#10'  {$else}'#13#10'  selectedNodeId:String;'#13#10'  {$endif}'
  +#13#10'begin'#13#10'//ShowMessage(''HandleCodeTreeClickEvent. node=''+TreeNo'
  +'deId+'' text=''+TreeNodeText);'#13#10'  OISelectedCodeProcName:='''';'#13#10
  +'  if (TreeNodeText<>CodeRootName)'#13#10'  and (TreeNodeText<>''Root'')'#13
  +#10'  and (TreeNodeText<>''Root(Events)'')'#13#10'  and (TreeNodeText<>''Roo'
  +'t(GPUCode)'') then'#13#10'  begin'#13#10'    CurrentNode:=FindDataNodeById('
  +'CodeRootNode,TreeNodeId,'''',false);'#13#10'    if CurrentNode = nil then'
  +#13#10'      CurrentNode:=FindDataNodeById(SystemNodeTree,TreeNodeId,'''',fa'
  +'lse); // might be an event handler or GPU code'#13#10'    if CurrentNode<>n'
  +'il then'#13#10'    begin'#13#10'      SelectCodeTreeNode(CurrentNode,false,'
  +'TreeNodeText);'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'     '
  +' // TreeNodeId might be the name of a function within a pascal unit (if com'
  +'piler has been run),'#13#10'      // in which case the relevant data node i'
  +'s the parent pasunit.'#13#10'      {$ifndef JScript}'#13#10'      myTreeNod'
  +'e:=TMyTreeView(TXTree(CodeTreeComponent.ScreenObject).myControl).Selected;'
  +#13#10'      ParentText:=myTreeNode.Parent.Text;'#13#10'      {$else}'#13#10
  +'      selectedNodeId:=TXTree(CodeTreeComponent).SelectedNodeId;'#13#10'    '
  +'  ParentText:=TXTree(CodeTreeComponent).getParentOfNode(selectedNodeId);'#13
  +#10'      //showmessage(''ParentText1=''+ParentText);'#13#10'      ParentTex'
  +'t:=TXTree(CodeTreeComponent).TextOfNode(ParentText);'#13#10'      //showmes'
  +'sage(''ParentText2=''+ParentText);'#13#10'      {$endif}'#13#10#13#10'     '
  +' ParentId:=TreeLabelToID(ParentText,''CodeTree'',p1);'#13#10'      CurrentN'
  +'ode:=FindDataNodeById(SystemNodeTree,ParentId,'''',true);'#13#10'      if ('
  +'CurrentNode<>nil)'#13#10'      and (CurrentNode.NodeType=''PasUnit'') then'
  +#13#10'      begin'#13#10'         SelectCodeTreeNode(CurrentNode,false,Tree'
  +'NodeText);'#13#10'         OISelectedCodeProcName:=TreeNodeId;'#13#10'     '
  +'    OISelectedCodeLineNum:=FindLineNumForProc(OISelectedCodeProcName);'#13
  +#10'      end'#13#10'      else if (CurrentNode<>nil)'#13#10'      and (Curr'
  ,'entNode.NodeType=''PythonScript'') then'#13#10'      begin'#13#10'         '
  +'SelectCodeTreeNode(CurrentNode,false,TreeNodeText);'#13#10'         OISelec'
  +'tedCodeProcName:=TreeNodeId;'#13#10'         OISelectedCodeLineNum:=FindLin'
  +'eNumForPyFunc(CurrentNode,OISelectedCodeProcName);'#13#10'      end'#13#10
  +'      else'#13#10'      begin'#13#10'        showmessage(''Cannot find syst'
  +'em node ''+TreeNodeId);'#13#10'        ObjectInspectorSelectedCodeTreeNode:'
  +'=nil;'#13#10'      end;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10' '
  +'   ObjectInspectorSelectedCodeTreeNode:=nil;'#13#10'end;'#13#10#13#10'proce'
  +'dure CopyNavNode( NodeToCopy:TDataNode);'#13#10'begin'#13#10'   // Copy an '
  +'item from the Navigator tree.  Populates ObjectInspectorSourceNode.'#13#10
  +'   if (NodeToCopy<>nil)'#13#10'   and (NodeToCopy.NodeName<>'''') and (Node'
  +'ToCopy.NodeType<>'''') then'#13#10'   begin'#13#10'     ObjectInspectorSour'
  +'ceNode:=CopyNode(NodeToCopy,true);'#13#10'     ObjectInspectorSourceCut:=fa'
  +'lse;'#13#10'     //ShowMessage(''CopyNavNode.  Source node is ''+NodeToCopy'
  +'.NodeName);'#13#10'     XIDEForm.OIPaste.Hint:=''Ready to paste UI node ''+'
  +'ObjectInspectorSourceNode.NodeName;'#13#10'   end'#13#10'   else ShowMessag'
  +'e(''Select an item (from the Navigation Tree) to copy before calling this a'
  +'ction'');'#13#10'end;'#13#10#13#10'procedure PickItem( SelectedResourcesTre'
  +'eNode:TDataNode);'#13#10'begin'#13#10'   // Copy an item from the Resources'
  +' tree, ready for paste elsewhere'#13#10'   if (SelectedResourcesTreeNode<>n'
  +'il)'#13#10'   and (SelectedResourcesTreeNode.NodeName<>'''') and (SelectedR'
  +'esourcesTreeNode.NodeType<>'''')'#13#10'   and (SelectedResourcesTreeNode.N'
  +'odeType<>''Demo'') and (SelectedResourcesTreeNode.NodeType<>''Test'') then'
  +#13#10'   begin'#13#10'      ObjectInspectorSourceNode:=CopyNode(SelectedRes'
  +'ourcesTreeNode,true);'#13#10'      ObjectInspectorSourceCut:=false;'#13#10
  +'      XIDEForm.OIPaste.Hint:=''Ready to paste Resource node ''+ObjectInspec'
  +'torSourceNode.NodeName;'#13#10'   end;'#13#10'//   else'#13#10'//     ShowM'
  +'essage(''Select an item (from the Resource Tree) to copy before calling thi'
  +'s action'');'#13#10'end;'#13#10#13#10'procedure  SelectResourceTreeNode(Tre'
  +'eNodeText:string;CurrentNode:TDataNode);'#13#10'begin'#13#10'  //!!!! Shoul'
  +'d to operate this by node id, not text  :: HOWEVER, in the resource tree, n'
  +'ode texts are all unique.'#13#10'  //showmessage(''SelectResourceTreeNode '
  +'''+TreeNodeText);'#13#10'  AvailableResourcesSelectedNode:=CurrentNode;'#13
  +#10'  PopulateResourceInspector(CurrentNode);'#13#10'end;'#13#10#13#10'proce'
  +'dure HandleResourcesTreeClickEvent(nodeId,TreeNodeId:String);'#13#10'var Cu'
  +'rrentNode :TDataNode;'#13#10'begin'#13#10'  CurrentNode:=FindDataNodeById(R'
  +'esourcesNodeTree,TreeNodeId,'''',true);'#13#10'  //ShowMessage(''HandleReso'
  +'urcesTreeClickEvent treenodeId=''+TreeNodeId+'' currentnode=''+currentnode.'
  +'NodeName);'#13#10'  if CurrentNode=nil then'#13#10'    showmessage(''Cannot'
  +' find node ''+TreeNodeId+'' in XObjectInsp.HandleResourcesTreeClickEvent'')'
  +#13#10'  else'#13#10'  begin'#13#10'    SelectResourceTreeNode(TreeNodeId,Cu'
  +'rrentNode);'#13#10'    if AvailableResourcesSelectedNode.NodeClass<>''RSS'''
  +' then'#13#10'      PickItem(CurrentNode);'#13#10'  end;'#13#10#13#10'end;'
  +#13#10#13#10'procedure DeleteItemQuietly(InTree,SelectedNode:TDataNode);'#13
  +#10'var'#13#10'   ParentNode:TDataNode;'#13#10'begin'#13#10'  ParentNode:=Fi'
  +'ndParentOfNode(InTree,SelectedNode);'#13#10'     DeleteNode(ParentNode,Sele'
  +'ctedNode);'#13#10#13#10'     if InTree.NodeName=SystemRootName then'#13#10
  +'     begin'#13#10'      // showmessage(''reset selected node to ''+ParentNo'
  +'de.NodeName);'#13#10'       ObjectInspectorSelectedNavTreeNode:=ParentNode;'
  +#13#10'     end'#13#10'     else if InTree.NodeName=CodeRootName then'#13#10
  +'     begin'#13#10'       ObjectInspectorSelectedCodeTreeNode:=ParentNode;'
  +#13#10'       ObjectInspectorSelectedCodeNodeText:='''';  //!!!! ??'#13#10' '
  +'      OISelectedCodeProcName:='''';'#13#10'     end;'#13#10#13#10'end;'#13
  +#10#13#10#13#10'function DeleteItem(InTree,SelectedNode:TDataNode):Boolean;'
  +#13#10'var'#13#10'  Deleted:Boolean;'#13#10'begin'#13#10'  Deleted:=false;'
  +#13#10'  if  (SelectedNode=nil) or (SelectedNode.NodeName='''') then'#13#10
  +'    ShowMessage(''Select an item on the Navigation Tree before calling this'
  +' action'')'#13#10'  else'#13#10'  begin'#13#10'    if SelectedNode.IsDynami'
  +'c then'#13#10'    begin'#13#10'      if (SelectedNode.NodeName=UIProjectRoo'
  +'tName)'#13#10'      or (SelectedNode.NodeName=CodeRootName)'#13#10'      or'
  +' (SelectedNode.NodeName=ResourceDataRootName)'#13#10'      then'#13#10'    '
  +'    ShowMessage(''Cannot remove the root node'')'#13#10'      else'#13#10' '
  +'     begin'#13#10'         DeleteItemQuietly(InTree,SelectedNode);'#13#10#13
  +#10'         if DesignMode then'#13#10'         begin'#13#10'           {$if'
  ,'def JScript}'#13#10'           if not RunningDeployedRuntime then'#13#10'  '
  +'         {$endif}'#13#10'           SaveSystemData;'#13#10#13#10'          '
  +' if InTree.NodeName=SystemRootName then'#13#10'           begin'#13#10'    '
  +'          RebuildNavigatorTree;'#13#10'              RebuildCodeTree;  // ('
  +'to remove displayed event code items)'#13#10'           end'#13#10'        '
  +'   else if InTree.NodeName=CodeRootName then'#13#10'           begin'#13#10
  +'              RebuildCodeTree;'#13#10'           end;'#13#10'         end;'
  +#13#10#13#10'         Deleted:=true;'#13#10'      end;'#13#10'    end'#13#10
  +'    else'#13#10'      showmessage(''Lazarus-designed components cannot be d'
  +'eleted here.  Only dynamically created components may be deleted at runtime'
  +''');'#13#10'  end;'#13#10'  result:=Deleted;'#13#10'end;'#13#10#13#10'funct'
  +'ion CutItemQuietly(InTree,SelectedNode:TDataNode):TDataNode;'#13#10'begin'
  +#13#10'  ObjectInspectorSourceNode:=CopyNode(SelectedNode,true);'#13#10'  //'
  +'ShowMessage(''cutting ''+ObjectInspectorSourceNode.NodeName);'#13#10'  Obje'
  +'ctInspectorSourceCut:=true;'#13#10'  DeleteItemQuietly(InTree,SelectedNode)'
  +';'#13#10'  //ShowMessage(''finished cutting.  oi node is ''+ObjectInspector'
  +'SourceNode.NodeName);'#13#10'  XIDEForm.OIPaste.Hint:=''Ready to paste UI n'
  +'ode ''+ObjectInspectorSourceNode.NodeName;'#13#10'  result:=ObjectInspector'
  +'SourceNode;'#13#10'end;'#13#10#13#10'procedure CutItem(InTree,SelectedNode:'
  +'TDataNode);'#13#10'var'#13#10'   myName:string;'#13#10'   cutNode:TDataNode'
  +';'#13#10'begin'#13#10'  //ShowMessage(''cutitem.  selectednode=''+SelectedN'
  +'ode.NodeName);'#13#10'  if  (SelectedNode=nil) or (SelectedNode.NodeName='''
  +''') then'#13#10'    ShowMessage(''Select an item on the Navigation Tree bef'
  +'ore calling this action'')'#13#10'  else'#13#10'  begin'#13#10'    if Selec'
  +'tedNode.IsDynamic then'#13#10'    begin'#13#10'      if (SelectedNode.NodeN'
  +'ame=UIProjectRootName)'#13#10'      or (SelectedNode.NodeName=ResourceDataR'
  +'ootName)'#13#10'      then'#13#10'        ShowMessage(''Cannot remove the r'
  +'oot node'')'#13#10'      else'#13#10'      begin'#13#10'        myName:=Sel'
  +'ectedNode.NodeName;'#13#10'        cutNode:=CutItemQuietly(InTree,SelectedN'
  +'ode);'#13#10#13#10'        if designMode then'#13#10'        begin'#13#10' '
  +'         SaveSystemData;  // this clears ObjectInspectorSourceNode'#13#10#13
  +#10'          if InTree.NodeName=SystemRootName then'#13#10'          begin'
  +#13#10'            RebuildNavigatorTree;'#13#10'            RebuildCodeTree;'
  +#13#10'          end;'#13#10'          ObjectInspectorSourceNode:=cutNode;'
  +#13#10'        end;'#13#10'        ShowMessage(''Node ''+ myName +'' ready t'
  +'o paste'');'#13#10#13#10'      end;'#13#10'    end'#13#10'    else'#13#10' '
  +'     showmessage(''Lazarus-designed components cannot be deleted here.  Onl'
  +'y dynamically created components may be deleted at runtime'');'#13#10#13#10
  +'  end;'#13#10'end;'#13#10#13#10'procedure RenameChildNodes(MyNode:TDataNode'
  +';Prefix:string);'#13#10'var'#13#10'   i:integer;'#13#10'begin'#13#10'  for '
  +'i:=0 to length(MyNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    MyNode.Chi'
  +'ldNodes[i].NodeName:=Prefix + MyNode.ChildNodes[i].NodeName;'#13#10'    Ren'
  +'ameChildNodes(MyNode.ChildNodes[i],Prefix);'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'procedure PasteItemQuietly(InTree:TDataNode;pos:integer;ParentNode,So'
  +'urceNode:TDataNode);'#13#10'var'#13#10'   TreePos:integer;'#13#10'   glb:Bo'
  +'olean;'#13#10'   SaveSelectedCodeTreeNode:TDataNode;'#13#10'   SaveNodeText'
  +':String;'#13#10'   procedure UnHighlight(TreeNode:TDataNode);'#13#10'   beg'
  +'in'#13#10'     {$ifndef JScript}'#13#10'     if TreeNode.NodeClass=''UI'' t'
  +'hen'#13#10'       SetBooleanProperty(TreeNode.ScreenObject,''IsSelected'',f'
  +'alse)'#13#10'     else'#13#10'       SetBooleanProperty(TreeNode,''IsSelect'
  +'ed'',false);'#13#10'     {$else}'#13#10'     if IsPublishedProp(TreeNode,'''
  +'IsSelected'') then'#13#10'       SetBoolProp(TreeNode,''IsSelected'',false)'
  +';'#13#10'     {$endif}'#13#10'   end;'#13#10'begin'#13#10'  SourceNode.Scre'
  +'enObject:=nil;'#13#10'  TreePos:=pos;'#13#10'  {$ifndef JScript}'#13#10'  g'
  +'lb:=  GlobalSuppressFrameDisplay;'#13#10'  {$endif}'#13#10#13#10'  if Objec'
  +'tInspectorSourceCut=false then'#13#10'    // this is a copy - have to renam'
  +'e all child nodes'#13#10'    if SourceNode.NodeType <> ''TXComposite'' then'
  +#13#10'      RenameChildNodes(SourceNode,SourceNode.NodeName);    //!!!! thi'
  +'s will break any references in event code to these nodes'#13#10#13#10'  if '
  +'(InTree.NodeName=SystemRootName) then'#13#10'  begin'#13#10'    // un-highl'
  +'ight selected item in nav tree'#13#10'    if ObjectInspectorSelectedNavTree'
  +'Node<>nil then'#13#10'      UnHighlight(ObjectInspectorSelectedNavTreeNode)'
  +';'#13#10#13#10'    //.........Create the new node and associated screen obj'
  +'ect........................'#13#10'    {$ifndef JScript}'#13#10'    GlobalS'
  ,'uppressFrameDisplay:=false;'#13#10'    {$endif}'#13#10'    ObjectInspectorS'
  +'electedNavTreeNode:=InsertSystemNode(ParentNode,SourceNode,TreePos);'#13#10
  +'    {$ifndef JScript}'#13#10'    GlobalSuppressFrameDisplay:=glb;'#13#10'  '
  +'  {$endif}'#13#10#13#10'    if DesignMode then'#13#10'    begin'#13#10'    '
  +'  SaveSystemData;'#13#10'      // rebuild the system description tree'#13#10
  +'      RebuildNavigatorTree;'#13#10'      RebuildCodeTree;'#13#10'    end;'
  +#13#10'  end'#13#10'  else if (InTree.NodeName=CodeRootName) then'#13#10'  b'
  +'egin'#13#10'    // un-highlight selected item in code tree'#13#10'    if Ob'
  +'jectInspectorSelectedCodeTreeNode<>nil then'#13#10'      UnHighlight(Object'
  +'InspectorSelectedCodeTreeNode);'#13#10'    //.........Create the new node .'
  +'.......................'#13#10'    SaveNodeText:=ObjectInspectorSelectedCod'
  +'eNodeText;'#13#10'    SaveSelectedCodeTreeNode:=InsertSystemNode(ParentNode'
  +',SourceNode,TreePos);'#13#10#13#10'    if DesignMode then'#13#10'    begin'
  +#13#10'      SaveSystemData;'#13#10'      ObjectInspectorSelectedCodeTreeNod'
  +'e:=SaveSelectedCodeTreeNode;'#13#10'      ObjectInspectorSelectedCodeNodeTe'
  +'xt:=SaveNodeText;'#13#10'      // rebuild the system description tree'#13#10
  +'      RebuildCodeTree;'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13
  +#10'function CanAddChildToParent(ParentNode,SourceNode:TDataNode):Boolean;'
  +#13#10'begin'#13#10'  result:=false;'#13#10' // showmessage(''add ''+SourceN'
  +'ode.NodeClass+'' to ''+ParentNode.NodeType);'#13#10'  if (ParentNode.NodeTy'
  +'pe<>''TXSVGContainer'') and (SourceNode.NodeClass = ''SVG'') then'#13#10'  '
  +'   ShowMessage(''Can only paste SVG items to an SVGContainer.'')'#13#10'  e'
  +'lse if (ParentNode.NodeType=''TXSVGContainer'') and (SourceNode.NodeClass <'
  +'> ''SVG'') then'#13#10'     ShowMessage(''Can only paste SVG items to an SV'
  +'GContainer.'')'#13#10'  else if (ParentNode.NodeType=''TXTabControl'') and '
  +'(SourceNode.NodeType<>''TXTabSheet'') then'#13#10'    ShowMessage(''Only a '
  +'TabSheet can be inserted under a TabControl element'')'#13#10'  else if (Pa'
  +'rentNode.NodeType<>''TXTabControl'') and (SourceNode.NodeType=''TXTabSheet'
  +''') then'#13#10'    ShowMessage(''A TabSheet can only be inserted under a T'
  +'abControl element'')'#13#10'  else if (ParentNode.NodeType=''TXMainMenu'') '
  +'and (SourceNode.NodeType<>''TXMenuItem'') then'#13#10'    ShowMessage(''Onl'
  +'y a MenuItem can be inserted under a MainMenu element'')'#13#10'  else if ('
  +'ParentNode.NodeType<>''TXMainMenu'') and (ParentNode.NodeType<>''TXMenuItem'
  +''') and(SourceNode.NodeType=''TXMenuItem'') then'#13#10'    ShowMessage(''A'
  +' MenuItem can only be inserted under a MainMenu or MenuItem element'')'#13
  +#10'  else if (ParentNode.NodeType=''TXForm'') and (SourceNode.NodeType=''TX'
  +'MainMenu'') and (ParentNode.NodeName=MainForm.Name) then'#13#10'    ShowMes'
  +'sage(''The Main Form already has a Main Menu'')'#13#10'  else if (ParentNod'
  +'e.NodeType<>''TXForm'') and (SourceNode.NodeType=''TXMainMenu'') then'#13#10
  +'    ShowMessage(''A MainMenu can only be inserted under a Form element'')'
  +#13#10'  else if (SourceNode.NodeClass=''NV'') and (ParentNode<>UIRootNode) '
  +'then'#13#10'    ShowMessage(ParentNode.NodeType+'' ''+SourceNode.NodeClass+'
  +''' ''+''A non-visual component can only be inserted under the UI Root Node'
  +''')'#13#10'  else if (ParentNode.NodeClass=''NV'') then'#13#10'    ShowMess'
  +'age(''A non-visual component cannot contain child nodes'')'#13#10'  else if'
  +' (SourceNode.NodeType=''TXForm'') and (ParentNode<>UIRootNode) then'#13#10
  +'    ShowMessage(''XForm can only be added to the UI Root Node'')'#13#10'  e'
  +'lse if (SourceNode.NodeClass<>''NV'') and (SourceNode.NodeType<>''TXForm'')'
  +' and (ParentNode=UIRootNode) then'#13#10'    ShowMessage(''Only XForm and N'
  +'on-Visual items can be added to the UI Root Node - please select another co'
  +'ntainer'')'#13#10'  else if (SourceNode.NodeClass=''UI'') and (ParentNode.N'
  +'odeType=''TXForm'') and (ParentNode.NodeName=MainForm.Name) then'#13#10'   '
  +' ShowMessage(''In the main form, UI items can only be added within the UI R'
  +'oot Node'')'#13#10'  else if (ParentNode.NodeClass=''DM'') and (ParentNode.'
  +'NodeType=''DMRoot'') and (SourceNode.NodeType<>''DMClass'') then'#13#10'   '
  +' ShowMessage(''Only a DMClass can be inserted under a DMRoot element'')'#13
  +#10'  else if (ParentNode.NodeClass=''DM'') and (ParentNode.NodeType<>''DMCl'
  +'ass'') and (SourceNode.NodeType=''DMContains'') then'#13#10'    ShowMessage'
  +'(''A DMContains can only be inserted under a DMClass element'')'#13#10'  el'
  +'se if (ParentNode.NodeClass=''DM'') and (ParentNode.NodeType<>''DMClass'') '
  +'and (SourceNode.NodeType=''DMOp'') then'#13#10'    ShowMessage(''A DMOp can'
  +' only be inserted under a DMClass element'')'#13#10'  else if (ParentNode.N'
  +'odeClass=''DM'') and (ParentNode.NodeType<>''DMClass'') and (SourceNode.Nod'
  +'eType=''DMRef'') then'#13#10'    ShowMessage(''A DMRef can only be inserted'
  ,' under a DMClass element'')'#13#10'  else'#13#10'    // all ok - go ahead a'
  +'nd paste'#13#10'    result:=true;'#13#10#13#10'end;'#13#10#13#10'function O'
  +'INavTreeAllowDrop(DstNode:TDataNode):Boolean;'#13#10'var'#13#10'  SrcNode:T'
  +'DataNode;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  ok:=true;'#13#10'  Src'
  +'Node:=ObjectInspectorSourceNode;'#13#10'      // cannot drop to Root Node, '
  +'except for forms and non-visuals.'#13#10'      if (DstNode.NodeClass=''Root'
  +''')'#13#10'      and (SrcNode.NodeType <> ''TXForm'')'#13#10'      and (Src'
  +'Node.NodeClass <> ''NV'')'#13#10'      and (SrcNode.NodeClass <> ''RNV'') t'
  +'hen'#13#10'        ok:=false;'#13#10'      // on main form, cannot drop to '
  +'Form node'#13#10'      if (DstNode.NodeType=''TXForm'')'#13#10'      and (D'
  +'stNode.NodeName=MainForm.Name)'#13#10'      and (SrcNode.NodeType <> ''TXMa'
  +'inMenu'')'#13#10'      and (SrcNode.NodeClass <> ''NV'')'#13#10'      and ('
  +'SrcNode.NodeClass <> ''RNV'') then'#13#10'        ok:=false;'#13#10'      /'
  +'/ have to drop txform onto the UI Root node'#13#10'      if (DstNode<>UIRoo'
  +'tNode)'#13#10'      and (SrcNode.NodeType=''TXForm'') then'#13#10'        o'
  +'k:=false;'#13#10'      // cannot drop non-menu items into a menu'#13#10'   '
  +'   if ((DstNode.NodeType = ''TXMainMenu'')'#13#10'      or (DstNode.NodeTyp'
  +'e = ''TXMenuItem''))'#13#10'      and (SrcNode.NodeType <> ''TXMenuItem'') '
  +'then'#13#10'        ok:=false;'#13#10'      // cannot drop menu items into '
  +'a non-menu'#13#10'      if (DstNode.NodeType <> ''TXMainMenu'')'#13#10'    '
  +'  and (DstNode.NodeType <> ''TXMenuItem'')'#13#10'      and (SrcNode.NodeTy'
  +'pe = ''TXMenuItem'') then'#13#10'        ok:=false;'#13#10'      // main me'
  +'nu can only drop to a form item'#13#10'      if (DstNode.NodeType <> ''TXFo'
  +'rm'')'#13#10'      and (SrcNode.NodeType = ''TXMainMenu'') then'#13#10'    '
  +'    ok:=false;'#13#10'      // main form already has a main menu'#13#10'   '
  +'   if (DstNode.NodeType = ''TXForm'')'#13#10'      and (SrcNode.NodeType = '
  +'''TXMainMenu'')'#13#10'      and (DstNode.NodeName=MainForm.Name) then'#13
  +#10'        ok:=false;'#13#10'      // cannot drop tab page except into a ta'
  +'b control'#13#10'      if (DstNode.NodeType<>''TXTabControl'')'#13#10'     '
  +' and (SrcNode.NodeType=''TXTabSheet'') then'#13#10'        ok:=false;'#13#10
  +'      if (DstNode.NodeType=''TXTabControl'')'#13#10'      and (SrcNode.Node'
  +'Type<>''TXTabSheet'') then'#13#10'        ok:=false;'#13#10'      // can on'
  +'ly drop non-visuals onto the UI Root node'#13#10'      if (DstNode<>UIRootN'
  +'ode)'#13#10'      and ((SrcNode.NodeClass = ''NV'')'#13#10'        or (SrcN'
  +'ode.NodeClass = ''RNV'')) then'#13#10'        ok:=false;'#13#10'      // ca'
  +'n only drop SVG items into an SVG Container'#13#10'      if (DstNode.NodeTy'
  +'pe<>''TXSVGContainer'') and (DstNode.NodeClass<>''SVG'')'#13#10'      and ('
  +'(SrcNode.NodeClass = ''SVG'') or (SrcNode.NodeClass = ''RSVG'')) then'#13#10
  +'         ok:=false;'#13#10'      if ((DstNode.NodeType=''TXSVGContainer'') '
  +'or (DstNode.NodeClass=''SVG''))'#13#10'      and (SrcNode.NodeClass <> ''SV'
  +'G'') and (SrcNode.NodeClass <> ''RSVG'') then'#13#10'         ok:=false;'#13
  +#10'  result:=ok;'#13#10'end;'#13#10#13#10'procedure SetSystemName(NewName:S'
  +'tring);'#13#10'begin'#13#10'  UIRootNode.SetAttributeValue(''SystemName'',N'
  +'ewName);'#13#10'  {$ifdef JScript}'#13#10'  asm'#13#10'    document.title=N'
  +'ewName;'#13#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure '
  +'LoadNamedSystem(sysname:string);'#13#10'var'#13#10'  SystemDescription,file'
  +'name:String;'#13#10'begin'#13#10'//   basename:=myStringReplace(sysname,''_'
  +'xide'','''',1,-1);'#13#10'   filename:=sysname+''.xide'';'#13#10'   {$ifnde'
  +'f JScript}'#13#10'   // on Desktop, saved systems are in this sub-folder...'
  +#13#10'   filename:=''SavedSystems/''+filename;'#13#10'   {$endif}'#13#10'  '
  +' SystemDescription:=ReadFromLocalStore(filename);'#13#10#13#10'   DoSystemL'
  +'oad(SystemDescription,sysname);'#13#10'   if UIRootNode.GetAttribute(''Syst'
  +'emName'',true).AttribValue=''XIDESystem'' then'#13#10'     SetSystemName(sy'
  +'sname);'#13#10'end;'#13#10#13#10'procedure LoadCompositeResource(CompNode:T'
  +'dataNode);'#13#10'var'#13#10'  SystemDescription:String;'#13#10'begin'#13#10
  +'   SystemDescription:=CompNode.GetAttribute(''SourceString'',false).AttribV'
  +'alue;'#13#10#13#10'   DoSystemLoad(SystemDescription,CompNode.NodeName);'#13
  +#10#13#10'end;'#13#10#13#10'function PasteItem(NavTreeDestinationNode:TDataN'
  +'ode;OrigSourceNode:TDataNode;NewName:String):boolean;'#13#10'var'#13#10'   '
  +'SourceNode,ParentNode, NewNode:TDataNode;'#13#10'   TreePos:integer;'#13#10
  +'   ok,TargetIsContainer:Boolean;'#13#10'   CompositeResource:Boolean;'#13#10
  +'   InterfaceNodes:TNodesArray;'#13#10'   i,j:integer;'#13#10'   evtyp:Strin'
  +'g;'#13#10'   evh:TeventHandlerRec;'#13#10'begin'#13#10'  ok:=false;'#13#10
  +'  if  OrigSourceNode.NodeClass=''RSS'' then'#13#10'    EXIT;'#13#10'  // ma'
  ,'ke a copy of the source node (as we may make changes here)'#13#10'  SourceN'
  +'ode:=CopyNode(OrigSourceNode,true);'#13#10#13#10'  CompositeResource:=false'
  +';'#13#10'  //showmessage(''PasteItem...source=''+SourceNode.Nodename+'' des'
  +'t=''+NavTreeDestinationNode.NodeName);'#13#10'  //showmessage(''PasteItem..'
  +'.dest=''+NavTreeDestinationNode.Nodename+'' type=''+NavTreeDestinationNode.'
  +'NodeType+'' class=''+NavTreeDestinationNode.NodeClass);'#13#10'  if (NavTre'
  +'eDestinationNode=nil) or (SourceNode=nil)'#13#10'  or (NavTreeDestinationNo'
  +'de.NodeName='''') or (SourceNode.NodeName='''') then'#13#10'  begin'#13#10
  +'      if (NavTreeDestinationNode=nil) or (NavTreeDestinationNode.NodeName='
  +''''') then'#13#10'        ShowMessage(''Select a destination to paste to be'
  +'fore calling this action'') ;'#13#10'      if (SourceNode=nil) or (SourceNo'
  +'de.NodeName='''') then'#13#10'        ShowMessage(''Select an item to copy '
  +'before calling this action'');'#13#10'  end'#13#10'  else'#13#10'  begin'#13
  +#10'    //ShowMessage(''PasteItem.  Source=''+SourceNode.NodeName+'' Dest='''
  +'+NavTreeDestinationNode.NodeName);'#13#10'    if (SourceNode.NodeClass=''RU'
  +'I'') then'#13#10'      if (SourceNode.NodeType=''TXComposite'') then'#13#10
  +'        CompositeResource:=true'#13#10'      else'#13#10'        setlength('
  +'SourceNode.NodeAttributes,0);  // removes the Hint attribute (from the reso'
  +'urce tree node)'#13#10#13#10'    if SourceNode.NodeClass=''RUI'' then Sourc'
  +'eNode.NodeClass:=''UI'';'#13#10'    if SourceNode.NodeClass=''RNV'' then So'
  +'urceNode.NodeClass:=''NV'';'#13#10'    if SourceNode.NodeClass=''RSVG'' the'
  +'n SourceNode.NodeClass:=''SVG'';'#13#10#13#10'    if (SourceNode.NodeClass<'
  +'>''UI'')'#13#10'    and (SourceNode.NodeClass<>''NV'')'#13#10'    and (Sour'
  +'ceNode.NodeClass<>''SVG'')'#13#10'    then'#13#10'    begin'#13#10'       S'
  +'howMessage(''Can only add UI, NV and SVG items to the Navigator tree'');'#13
  +#10'       EXIT;'#13#10'    end;'#13#10#13#10'    // Is the destination node'
  +' a container (paste new child) or not (paste sibling)'#13#10'    if (NavTre'
  +'eDestinationNode = UIRootNode)'#13#10'    or (NavTreeDestinationNode.NodeTy'
  +'pe=''TXForm'') then'#13#10'      TargetIsContainer:=true'#13#10'    else if'
  +' (NavTreeDestinationNode.NodeType=''TXTabSheet'')'#13#10'    and (SourceNod'
  +'e.NodeType=''TXTabSheet'') then'#13#10'      TargetIsContainer:=false'#13#10
  +'    else'#13#10'    begin'#13#10'      if (NavTreeDestinationNode.ScreenObj'
  +'ect = nil)                    //eg. is nil for SVG internal widgets'#13#10
  +'      {$ifndef JScript}'#13#10'      or (NavTreeDestinationNode.ScreenObjec'
  +'t = NavTreeDestinationNode)'#13#10'      {$endif}'#13#10'      then'#13#10
  +'        TargetIsContainer:=false'#13#10'      else'#13#10'      begin'#13#10
  +'        {$ifndef JScript}'#13#10'        TargetIsContainer:=GetBooleanPrope'
  +'rty(TComponent(NavTreeDestinationNode.ScreenObject),''isContainer'');'#13#10
  +'        {$else}'#13#10'        TargetIsContainer:=GetBoolProp(NavTreeDestin'
  +'ationNode.ScreenObject,''isContainer'');'#13#10'      {$endif}'#13#10'     '
  +' end;'#13#10'    end;'#13#10#13#10'    if TargetIsContainer = true then'#13
  +#10'    begin'#13#10'      //ShowMessage(''paste under container'');'#13#10
  +'      ParentNode:=NavTreeDestinationNode;'#13#10'      TreePos:=-1;'#13#10
  +'    end'#13#10'    else'#13#10'    begin'#13#10'      // ShowMessage(''past'
  +'e as sibling'');'#13#10'      //ParentNode:=FindParentOfNode(SystemNodeTree'
  +',NavTreeDestinationNode);'#13#10'      ParentNode:=NavTreeDestinationNode.N'
  +'odeParent;'#13#10'      TreePos:=ParentNode.GetChildIndex(NavTreeDestinatio'
  +'nNode);'#13#10'    end;'#13#10#13#10'   //showmessage(''PasteItem. parent='
  +'''+ParentNode.Nodename+'' type=''+ParentNode.NodeType+'' class=''+ParentNod'
  +'e.NodeClass);'#13#10#13#10'    if CanAddChildToParent(ParentNode,SourceNode'
  +') then'#13#10'    begin'#13#10'       if NewName='''' then'#13#10'       be'
  +'gin'#13#10'         if ObjectInspectorSourceCut=false then'#13#10'         '
  +'begin'#13#10'             // Dialog for name entry'#13#10'             NewN'
  +'ame:=GetComponentName(''Enter Component Name:'');'#13#10'         end'#13#10
  +'         else'#13#10'         begin'#13#10'            NewName:=SourceNode.'
  +'NodeName;'#13#10'         end;'#13#10'       end;'#13#10#13#10'       // Is'
  +' the source node named uniquely?'#13#10'       //showmessage(''check unique'
  +' name ''+NewName);'#13#10'       if (NewName<>'''') and (ComponentNameIsUni'
  +'que(NewName,OrigSourceNode.NameSpace)) then'#13#10'       begin'#13#10'    '
  +'     SourceNode.NodeName:=NewName;'#13#10'         PasteItemQuietly(UIRootN'
  +'ode,TreePos,ParentNode,SourceNode);'#13#10'         ok:=true;'#13#10#13#10
  +'          if CompositeResource then'#13#10'          begin'#13#10'         '
  +'   NewNode:=FindDataNodeById(ParentNode,NewName,OrigSourceNode.NameSpace,tr'
  +'ue);'#13#10'            // next, expand the composite node according to its'
  ,' SourceString'#13#10'            XMLToNodeTree(SourceNode.GetAttribute(''So'
  +'urceString'',true).AttribValue, NewNode, true);'#13#10'            // and r'
  +'eset the instantiated SourceString to blank'#13#10'            NewNode.SetA'
  +'ttributeValue(''SourceString'','''',''String'',true);'#13#10'            //'
  +' From within the expanded composite, find interface node(s?) and add the de'
  +'fined properties and events'#13#10'            InterfaceNodes:=FindNodesOfT'
  +'ype(NewNode,''TXCompositeIntf'',true,NewNode.NodeName);'#13#10'            '
  +'for i:=0 to length(InterfaceNodes)-1 do     //!! only allow one of these'#13
  +#10'            begin'#13#10'              for j:=0 to length(InterfaceNodes'
  +'[i].NodeAttributes)-1 do'#13#10'                // copying interface attrib'
  +'ute here so that it is accessible from main system,'#13#10'                '
  +'// but if the property is not "Input" to the composite, then the value will'
  +' not be editable in design mode.'#13#10'                NewNode.AddAttribut'
  +'e(InterfaceNodes[i].NodeAttributes[j].AttribName,''String'','#13#10'       '
  +'                              InterfaceNodes[i].NodeAttributes[j].AttribVal'
  +'ue,'#13#10'                                     (not InterfaceNodes[i].Node'
  +'Attributes[j].AttribReadOnly));'#13#10'              for j:=0 to InterfaceN'
  +'odes[i].myEventTypes.Count-1 do'#13#10'              begin'#13#10'         '
  +'       evtyp := InterfaceNodes[i].myEventTypes[j];'#13#10'                /'
  +'/ copying event type and code here so that it is accessible from main syste'
  +'m,'#13#10'                // (ie. using a DoEvent call), but if the interfa'
  +'ce event is ''readonly'', then'#13#10'                // the code in the ev'
  +'ent will not be editable'#13#10'                // in design mode, as it is'
  +' defined within the encapsulated composite element.'#13#10'                '
  +'evh := InterfaceNodes[i].GetEvent(evtyp);'#13#10'                NewNode.Ad'
  +'dEvent(evtyp,'#13#10'                                 evh.TheCode,'#13#10' '
  +'                                evh.InitCode,'#13#10'                      '
  +'           evh.ReadOnlyInterface,'#13#10'                                 e'
  +'vh.EventHint'#13#10'                                 );'#13#10'            '
  +'  end;'#13#10'            end;'#13#10'          end;'#13#10'       end;'#13
  +#10'    end;'#13#10#13#10'  end;'#13#10'  result:=ok;'#13#10'end;'#13#10#13
  +#10'procedure ShowHideNode(aNode:TDataNode;show:Boolean);'#13#10'begin'#13#10
  +'   if aNode<>nil then'#13#10'     if aNode.NodeClass=''UI'' then'#13#10'   '
  +'  begin'#13#10'         {$ifndef JScript}'#13#10'         SetBooleanPropert'
  +'y(aNode.ScreenObject,''IsVisible'',show);'#13#10'         {$else}'#13#10'  '
  +'       if IsPublishedProp(aNode,''IsVisible'') then'#13#10'         begin'
  +#13#10'           SetBoolProp(aNode,''IsVisible'',show);'#13#10'         end'
  +';'#13#10'         {$endif}'#13#10'     end;'#13#10'end;'#13#10#13#10'proced'
  +'ure ClearResourceInspector;'#13#10'var'#13#10'  btnNode:TDataNode;'#13#10'b'
  +'egin'#13#10'  AvailableResourcesSelectedNode:=nil;'#13#10'  PopulateResourc'
  +'eInspector(nil);'#13#10'  btnNode:=FindDataNodeById(systemnodetree,''Resour'
  +'ceTreeDelBtn'','''',true);'#13#10'  TXButton(btnNode.ScreenObject).Enabled:'
  +'=false;'#13#10'  btnNode:=FindDataNodeById(systemnodetree,''ResourceTreeLoa'
  +'dBtn'','''',true);'#13#10'  TXButton(btnNode.ScreenObject).Enabled:=false;'
  +#13#10'end;'#13#10#13#10#13#10'procedure ClearInspectors;'#13#10'begin'#13#10
  +'  if NavTreeComponent.ScreenObject <>nil then'#13#10'  begin'#13#10'    Obj'
  +'ectInspectorSourceNode:=nil;'#13#10'    XIDEForm.OIPaste.Hint:=''Nothing to'
  +' paste. Select a Resource, or Copy/Cut a Designer node first.'';'#13#10#13
  +#10'    TXTree(NavTreeComponent.ScreenObject).DeSelectNode;'#13#10'    DeHig'
  +'hlightObject(ObjectInspectorSelectedNavTreeNode);'#13#10'    PopulateObject'
  +'Inspector(nil);'#13#10'    ClearResourceInspector;'#13#10'    ObjectInspect'
  +'orSelectedNavTreeNode:=nil;'#13#10'    DMClearSelection;'#13#10#13#10'    T'
  +'XTree(CodeTreeComponent.ScreenObject).DeSelectNode;'#13#10'    ObjectInspec'
  +'torSelectedCodeTreeNode:=nil;'#13#10'    ObjectInspectorSelectedCodeNodeTex'
  +'t:='''';'#13#10'    OISelectedCodeProcName:='''';'#13#10#13#10'    if CodeE'
  +'ditform<>nil then'#13#10'    begin'#13#10'      CodeEditForm.CodeEdit.ItemV'
  +'alue:='''';'#13#10'      CodeEditForm.CodeEditInit.ItemValue:='''';'#13#10
  +'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'function CompositeResources'
  +'String(QuotedString:Boolean):String;'#13#10'var'#13#10'  StartNode:TdataNod'
  +'e;'#13#10'  systemstring:String;'#13#10'begin'#13#10'  StartNode:=FindDataN'
  +'odeById(ResourcesNodeTree,''Composites'','''',true);'#13#10'  systemstring:'
  +'=NodeTreeToXML(StartNode,MainFormProjectRoot,false,QuotedString);'#13#10'  '
  +'result:= systemstring;'#13#10#13#10'end;'#13#10'{$ifndef JScript}'#13#10'pr'
  +'ocedure SaveCompositesToIncFile;'#13#10'var'#13#10'  systemstring:string;'
  ,#13#10#13#10'begin'#13#10'  systemstring:= CompositeResourcesString(true);'
  +#13#10#13#10'  WriteToFile(ProjectDirectory+''tempinc/systemcomposites.inc'''
  +',''XObjectInsp.CompositesString := ''''''+systemstring+'''''';'');'#13#10'e'
  +'nd;'#13#10'{$endif}'#13#10'procedure DebugWriteNodeTree(StartNode,ParentNod'
  +'e:TdataNode;var txt:String;lvl:integer);'#13#10'var'#13#10'  i:integer;'#13
  +#10'begin'#13#10'  txt:=txt+LineEnding;'#13#10'  for i:=0 to lvl-1 do'#13#10
  +'    txt:=txt+''  '';'#13#10'  if ParentNode<>nil then'#13#10'    txt:=txt+S'
  +'tartNode.NodeClass+'' ''+ StartNode.NodeType+'' ''+StartNode.NodeName+'' '''
  +'+myBoolToStr(StartNode.IsDynamic)+'' ''+StartNode.NodeParent.NodeName+'' '''
  +'+ParentNode.NodeName'#13#10'  else'#13#10'    txt:=txt+StartNode.NodeClass+'
  +''' ''+ StartNode.NodeType+'' ''+StartNode.NodeName+'' ''+myBoolToStr(StartN'
  +'ode.IsDynamic);'#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13
  +#10'    DebugWriteNodeTree(StartNode.ChildNodes[i],StartNode,txt,lvl+1);'#13
  +#10'end;'#13#10'procedure DumpFullNodeTree;'#13#10'var'#13#10'  txt:String;'
  +#13#10'begin'#13#10'  DebugwriteNodetree(SystemnodeTree,nil,txt,0);'#13#10' '
  +' {$ifndef JScript}'#13#10'  WriteToLocalStore(''debugtree'',txt);'#13#10'  '
  +'{$else}'#13#10'  myCopyToClip(''debugtree'',txt );'#13#10'  {$endif}'#13#10
  +'end;'#13#10#13#10'function BuildSystemString(Encapsulate:Boolean):String;'
  +#13#10'var'#13#10'  systemstring,fullstring:string;'#13#10'  StartNode,UINod'
  +'e, MenuNode,StyleTreeParent:TDataNode;'#13#10'  i:integer;'#13#10'  TopType'
  +',TopClass:String;'#13#10'begin'#13#10'  //showmessage(''BuildSystemString'''
  +');'#13#10'  ClearInspectors;'#13#10'  // Save just the user-design portions'
  +' of the system node tree.'#13#10'  // Mainform Menu items, Mainform centre '
  +'section, PLUS dynamic XForms added.'#13#10#13#10'  UINode:=MainFormProjectR'
  +'oot;'#13#10'  TopType:=UINode.NodeType;'#13#10'  TopClass:=UINode.NodeClass'
  +';'#13#10'  UINode.NodeType:=''Root'';    // so that this item will be skipp'
  +'ed on load'#13#10'  UINode.NodeClass:=''Root'';    // so that this item wil'
  +'l be skipped on load'#13#10'  UINode.IsDynamic:=true;'#13#10#13#10'  MenuNo'
  +'de:=FindDataNodeById(UIRootNode,''XIDEMainMenu'','''',true);'#13#10#13#10' '
  +' // Create a temporary root node to enclose the project nodes (copy from UI'
  +'RootNode)'#13#10'  StartNode:= CopyNode(UIRootNode,false);'#13#10'  StartNo'
  +'de.NodeType:=''Root'';    // so that the top item will be skipped on load'
  +#13#10'  StartNode.NodeClass:=''Root'';    // so that the top item will be s'
  +'kipped on load'#13#10'  StartNode.IsDynamic:=true;'#13#10'  if not Encapsul'
  +'ate then'#13#10'  begin'#13#10'    // normal system...'#13#10'    setlength'
  +'(StartNode.ChildNodes,2);'#13#10'    StartNode.ChildNodes[0]:=MenuNode;    '
  +'    // give it one child node for the Mainform menu items'#13#10'    StartN'
  +'ode.ChildNodes[1]:=UINode;        // give it one child node for the user in'
  +'terface section'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    // enc'
  +'apsulation...'#13#10'    setlength(StartNode.ChildNodes,1);'#13#10'    Star'
  +'tNode.ChildNodes[0]:=UINode;        // give it one child node for the user '
  +'interface section'#13#10'  end;'#13#10#13#10'  systemstring:= NodeTreeToXML'
  +'(StartNode,nil,true,false);'#13#10#13#10'  UINode.NodeType:=TopType;'#13#10
  +'  UINode.NodeClass:=TopClass;'#13#10'  UINode.IsDynamic:=false;'#13#10#13#10
  +'  // add non-visual components'#13#10'  StartNode:=FindDataNodeById(SystemN'
  +'odeTree,SystemRootName,'''',true);'#13#10'  for i:=0 to length(StartNode.Ch'
  +'ildNodes)-1 do'#13#10'  begin'#13#10'    if (StartNode.ChildNodes[i].NodeCl'
  +'ass=''NV'')'#13#10'    and (StartNode.ChildNodes[i].IsDynamic) then'#13#10
  +'    begin'#13#10'      systemstring:=systemstring+NodeTreeToXML(StartNode.C'
  +'hildNodes[i],StartNode,true,false);'#13#10'    end;'#13#10'  end;'#13#10#13
  +#10'//  showmessage(''6'');'#13#10'  // now look for other XForms'#13#10'  S'
  +'tartNode:=FindDataNodeById(SystemNodeTree,SystemRootName,'''',true);'#13#10
  +'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    i'
  +'f (StartNode.ChildNodes[i].NodeType=''TXForm'')'#13#10'    and (StartNode.N'
  +'odeName<>''CodeEditForm'')'#13#10'    and (StartNode.NodeName<>''PasteDialo'
  +'g'')'#13#10'    and (StartNode.ChildNodes[i].IsDynamic)'#13#10'    then'#13
  +#10'    begin'#13#10'      systemstring:=systemstring+NodeTreeToXML(StartNod'
  +'e.ChildNodes[i],nil,true,false);'#13#10'    end;'#13#10'  end;'#13#10#13#10
  +'//  showmessage(''7'');'#13#10'  // and add any functions and raw code unit'
  +'s'#13#10'  StartNode:=FindDataNodeById(SystemNodeTree,CodeRootName,'''',tru'
  +'e);'#13#10'  if StartNode=nil then'#13#10'  begin'#13#10'    showmessage('''
  +'oops. cannot find node CodeUnits in BuildSystemString'');'#13#10'    EXIT;'
  +#13#10'  end;'#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10
  +'  begin'#13#10'    if (StartNode.ChildNodes[i].NodeType=''PasUnit'')'#13#10
  ,'    or (StartNode.ChildNodes[i].NodeType=''PythonScript'')'#13#10'    and ('
  +'StartNode.ChildNodes[i].IsDynamic) then'#13#10'    begin'#13#10'      syste'
  +'mstring:=systemstring+NodeTreeToXML(StartNode.ChildNodes[i],CodeRootNode,tr'
  +'ue,false);'#13#10'    end;'#13#10'  end;'#13#10#13#10'  // and add any data'
  +' model elements'#13#10'  StartNode:=DMRoot;'#13#10'  if StartNode=nil then'
  +#13#10'  begin'#13#10'    showmessage(''oops. cannot find node DMRoot in Bui'
  +'ldSystemString'');'#13#10'    EXIT;'#13#10'  end;'#13#10'  for i:=0 to leng'
  +'th(StartNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    systemstring:=syste'
  +'mstring+NodeTreeToXML(StartNode.ChildNodes[i],DMRoot,true,false);'#13#10'  '
  +'end;'#13#10#13#10'  if not Encapsulate then'#13#10'  begin'#13#10'    // ad'
  +'d the tree ''StyleSheet'' so that its data is preserved with the user''s pr'
  +'oject'#13#10'    StyleTreeParent:=FindDataNodeById(systemnodetree,''StyleDe'
  +'signer'','''',true);'#13#10'    systemstring:=systemstring+NodeTreeToXML(St'
  +'ylesNode,StyleTreeParent,false,false);'#13#10'  end;'#13#10#13#10'  fullstr'
  +'ing:= systemstring;'#13#10#13#10'  result:=fullstring;'#13#10'end;'#13#10#13
  +#10'Procedure SaveSystemToClip;'#13#10'var'#13#10'  fullstring:String;'#13#10
  +'begin'#13#10'  fullstring:=BuildSystemString(false);'#13#10'  myCopyToClip('
  +'''System'',fullstring );'#13#10'end;'#13#10#13#10'Procedure SaveSystemToFil'
  +'e;'#13#10'var'#13#10'  fullstring,oldname,sysname,storename:String;'#13#10
  +'begin'#13#10'  oldname:=UIRootNode.GetAttribute(''SystemName'',false).Attri'
  +'bValue;'#13#10'  sysname:=GetValidItemName(''Enter System Name'',oldname);'
  +#13#10'  if sysname='''' then'#13#10'    EXIT;'#13#10#13#10'  SetSystemName('
  +'sysname);'#13#10'  storename:=sysname+''.xide'';'#13#10'  {$ifndef JScript}'
  +#13#10'  storename:=''SavedSystems/''+storename;'#13#10'  {$endif}'#13#10'  '
  +'fullstring:=BuildSystemString(false);'#13#10'  WriteToLocalStore(storename,'
  +'fullstring);'#13#10'  RebuildResourcesTree;'#13#10#13#10'  if sysname<>oldn'
  +'ame then'#13#10'  begin'#13#10'    // copy any existing stored datasets'#13
  +#10'    // (desktop)...create new directory, and copy contents'#13#10'    //'
  +' (browser)...copy local database to new name (NB. Async function)'#13#10'  '
  +'  DBSaveAs(oldname,sysname);'#13#10'  end;'#13#10'end;'#13#10#13#10'functio'
  +'n isValidSystemData(SystemDescription:string):boolean;'#13#10'var teststrin'
  +'g,sys:string;'#13#10'   i:integer;'#13#10'   MatchFound:boolean;'#13#10'beg'
  +'in'#13#10'  MatchFound:=true;'#13#10'  sys:=trim(SystemDescription);'#13#10
  +'  teststring:=''<Root|; Class |=Root|; Name |=UIRoot'';'#13#10#13#10'  if l'
  +'ength(SystemDescription)>=length(teststring) then'#13#10'  begin'#13#10'   '
  +' for i :=1 to Length(teststring) do'#13#10'    begin'#13#10'       if (sys['
  +'i]<> teststring[i])'#13#10'       then  MatchFound:=false;'#13#10'    end;'
  +#13#10'  end;'#13#10'  result:=MatchFound;'#13#10'end;'#13#10#13#10'procedur'
  +'e CheckEventCode(StartNode:TDataNode);'#13#10'var'#13#10'  i:integer;'#13#10
  +'  tmp:string;'#13#10'begin'#13#10'  if (StartNode.IsDynamic) or (StartNode='
  +'UIRootNode) then'#13#10'    for i:=0 to length(StartNode.myEventHandlers)-1'
  +' do'#13#10'    begin'#13#10'      tmp:=StartNode.myEventHandlers[i].TheCode'
  +';'#13#10'      if (trim(tmp)<>'''')  then'#13#10'      begin'#13#10'       '
  +'  tmp:=trim(StartNode.myEventHandlers[i].InitCode);'#13#10'         if not '
  +'PythonCodeExists then'#13#10'           PythonCodeExists := (FoundStringCI('
  +'tmp,''RunPython('')>0);'#13#10#13#10'         tmp:=StartNode.myEventHandler'
  +'s[i].TheCode;'#13#10'         if not PythonCodeExists then'#13#10'         '
  +'  PythonCodeExists := (FoundStringCI(tmp,''RunPython('')>0);'#13#10#13#10' '
  +'     end;'#13#10'    end;'#13#10'  if not PythonCodeExists then'#13#10'    '
  +'for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'      CheckEventCode(S'
  +'tartNode.ChildNodes[i]);'#13#10#13#10'end;'#13#10'procedure CheckForPythonC'
  +'ode;'#13#10'var'#13#10'  i:integer;'#13#10'begin'#13#10'  PythonCodeExists:'
  +'=false;'#13#10'  for i:=0 to length(CodeRootNode.ChildNodes)-1 do'#13#10'  '
  +'begin'#13#10'    if CodeRootNode.ChildNodes[i].NodeType=''PythonScript'' th'
  +'en'#13#10'    begin'#13#10'       PythonCodeExists:=true;'#13#10'    end;'
  +#13#10'  end;'#13#10'  if not PythonCodeExists then'#13#10'  begin'#13#10'  '
  +'  // also check ALL Pascal event code for ''RunPython'' calls...'#13#10'   '
  +' PythonCodeExists:=false;'#13#10'    CheckEventCode(SystemNodeTree);'#13#10
  +'  end;'#13#10#13#10'end;'#13#10#13#10'{$ifndef Python}'#13#10#13#10'procedu'
  +'re CheckForPythonCode2;'#13#10'begin'#13#10'  CheckForPythonCode;'#13#10'  '
  +'if PythonCodeExists then'#13#10'    showmessage(''Warning: The loaded syste'
  +'m contains Python code.  These cannot be executed unless the XIDE framework'
  +' is built with the ''''Python'''' option'');'#13#10'end;'#13#10'{$endif}'#13
  +#10#13#10'{$ifndef JScript}'#13#10'procedure TLoadTimerTag.DoXMLToNodeTree(s'
  ,'ender:TObject);'#13#10'var'#13#10'   myTimer:tTimer;'#13#10'   myTag:TLoadT'
  +'imerTag;'#13#10'   glb:Boolean;'#13#10'   i:integer;'#13#10'begin'#13#10'  '
  +'glb:=GlobalSuppressFrameDisplay;'#13#10'  GlobalSuppressFrameDisplay:=true;'
  +#13#10#13#10'  OIClearSystem;'#13#10'  ClearAllComposites;'#13#10#13#10'  my'
  +'Timer:=TTimer(sender);'#13#10'  myTimer.Enabled:=false;'#13#10'  myTag:=TLo'
  +'adTimerTag(myTimer.Tag);'#13#10'  XMLToNodeTree(myTag.systemstring,UIRootNo'
  +'de);'#13#10#13#10'  {$ifdef JScript}'#13#10'  i:=length(DMRoot.ChildNodes);'
  +#13#10'  asm console.log(''DoXMLToNodeTree 1. DMRoot numchildnodes='',i); en'
  +'d;'#13#10'  {$endif}'#13#10#13#10'  if myTag.SysName<>'''' then'#13#10'  be'
  +'gin'#13#10'    SetSystemName(myTag.SysName);'#13#10'  end;'#13#10#13#10'  R'
  +'ebuildResourcesTree;'#13#10'  RedisplayResourceTree;'#13#10'{$ifdef JScript'
  +'}'#13#10'i:=length(DMRoot.ChildNodes);'#13#10'asm console.log(''DoXMLToNode'
  +'Tree 2. DMRoot numchildnodes='',i); end;'#13#10'{$endif}'#13#10#13#10'  Reb'
  +'uildNavigatorTree;'#13#10'{$ifdef JScript}'#13#10'i:=length(DMRoot.ChildNod'
  +'es);'#13#10'asm console.log(''DoXMLToNodeTree 3. DMRoot numchildnodes='',i)'
  +'; end;'#13#10'{$endif}'#13#10'  RebuildCodeTree;'#13#10'{$ifdef JScript}'#13
  +#10'i:=length(DMRoot.ChildNodes);'#13#10'asm console.log(''DoXMLToNodeTree 4'
  +'. DMRoot numchildnodes='',i); end;'#13#10'{$endif}'#13#10'  RebuildDMTree;'
  +#13#10'  SelectNavTreeNode(MainFormProjectRoot,true);'#13#10#13#10'  //make '
  +'sure UIRoot width attribute is still at 60% (design mode)'#13#10'  //if Sho'
  +'wResourceTree<>''Hide'' then'#13#10'    MainFormProjectRoot.SetAttributeVal'
  +'ue(''ContainerWidth'',''60%'');'#13#10'  //else'#13#10'  //  MainFormProjec'
  +'tRoot.SetAttributeValue(''ContainerWidth'',''80%'');'#13#10#13#10'  {$ifnde'
  +'f Python}'#13#10'  CheckForPythonCode2;'#13#10'  {$endif}'#13#10#13#10'  Gl'
  +'obalSuppressFrameDisplay:=glb;'#13#10#13#10'  sender.Destroy;'#13#10'end;'
  +#13#10#13#10'function DoSystemLoad(SystemDescription,SysName:string):Boolean'
  +';'#13#10'var'#13#10'  tempTimer:TTimer;'#13#10'  myTag:TLoadTimerTag;'#13#10
  +'  ok:boolean;'#13#10'begin'#13#10'   if (isValidSystemData(SystemDescriptio'
  +'n)=true)'#13#10'   then'#13#10'   begin'#13#10'     //'#13#10'     // throw'
  +' a timer to avoid event contention while we are deleting objects'#13#10'   '
  +'  tempTimer:=TTimer.Create(MainForm);'#13#10'     tempTimer.Enabled:=false;'
  +#13#10'     tempTimer.Interval:=100;'#13#10#13#10'     myTag:=TLoadTimerTag.'
  +'Create;'#13#10'     myTag.systemstring:=SystemDescription;'#13#10'     myTa'
  +'g.SysName:=SysName;'#13#10'     tempTimer.Tag:=WinSizeDependentInt(myTag);'
  +#13#10#13#10'     tempTimer.OnTimer:=@mytag.DoXMLToNodeTree;'#13#10'     tem'
  +'pTimer.Enabled:=true;'#13#10'   end'#13#10'   else'#13#10'   begin'#13#10' '
  +'    ok:=false;'#13#10'     ShowMessage(''Error.....Put a valid system descr'
  +'iption string on the clipboard before calling this option '');'#13#10'   en'
  +'d;'#13#10'   result:=ok;'#13#10'end;'#13#10'{$else}'#13#10'function DoSyste'
  +'mLoad(SystemDescription,SysName:string):boolean;'#13#10'var'#13#10'  ok:Boo'
  +'lean;'#13#10'begin'#13#10'   ok:=true;'#13#10'   if (isValidSystemData(Syst'
  +'emDescription)=true)'#13#10'   then'#13#10'   begin'#13#10'     StartingUp:'
  +'=true;    //suppress event handling'#13#10'     OIClearSystem;'#13#10'     '
  +'ClearAllComposites;'#13#10'    asm'#13#10'    try {'#13#10'    //alert(''de'
  +'fault parent is ''+pas.NodeUtils.UIRootNode);'#13#10'    pas.NodeUtils.XMLT'
  +'oNodeTree(SystemDescription,pas.NodeUtils.UIRootNode);'#13#10'    } catch(e'
  +'rr) { ok=false; alert(err.message+''  in XObjectInsp.DoSystemLoad '');}'#13
  +#10'    end;'#13#10#13#10'    if SysName<>'''' then'#13#10'      SetSystemNa'
  +'me(SysName);'#13#10#13#10'    UnSuspendFrames(SystemNodeTree);'#13#10#13#10
  +'    RebuildResourcesTree;'#13#10'    RedisplayResourceTree;'#13#10#13#10'  '
  +'  if not RunningDeployedRuntime then'#13#10'      SaveSystemData;'#13#10#13
  +#10'    RebuildNavigatorTree;'#13#10'    RebuildCodeTree;'#13#10#13#10'    G'
  +'enerateStyleSheets;'#13#10'    //InitAutomatedCursor;'#13#10#13#10'    Sele'
  +'ctNavTreeNode(MainFormProjectRoot,true);'#13#10'    {$ifndef Python}'#13#10
  +'    CheckForPythonCode2;'#13#10'    {$endif}'#13#10#13#10'   end'#13#10'   '
  +'else'#13#10'   begin'#13#10'     ok:=false;'#13#10'     ShowMessage(''Error'
  +'.....system description string is not valid '');'#13#10'   end;'#13#10'   S'
  +'tartingUp:=false;'#13#10'   result:=ok;'#13#10'end;'#13#10'{$endif}'#13#10
  +#13#10'procedure OINavTreeNodeChange(e:TEventStatus;nodeId,NameSpace:string;'
  +'myValue:string);'#13#10'var'#13#10'  NodeText,TreeNodeId,p1:String;'#13#10
  +'  myTree:TXTree;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  myTree:=T'
  +'XTree(NavTreeComponent.ScreenObject);'#13#10'  {$else}'#13#10'  myTree:=TXT'
  +'ree(NavTreeComponent);'#13#10'  {$endif}'#13#10'  NodeText:=myTree.Selected'
  +'NodeText;'#13#10'  TreeNodeId:=TreeLabelToID(NodeText,''NavTree'',p1);'#13
  ,#10#13#10'  //NodeID is the Navigator Ttree object clicked on    eg. Navigat'
  +'ionTreeContents   or in html, the name of the node...'#13#10'  //myValue is'
  +'  the label text of the clicked node (desktop) OR the treenode id (Browser)'
  +#13#10'  //TreeNodeId is  the associated datanode name (from the treenode te'
  +'xt)'#13#10'  if TreeNodeId<>'''' then'#13#10'  begin'#13#10'    //showmessa'
  +'ge(''OINavTreeNodeChange.  Id=''+TreeNodeId);'#13#10'     HandleNavTreeClic'
  +'kEvent(TreeNodeId,nodeText);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedu'
  +'re OIResourceTreeNodeChange(nodeId:string;myValue:string);'#13#10'var'#13#10
  +'  NodeText,TreeNodeId,p1:String;'#13#10'  myTree:TXTree;'#13#10'begin'#13#10
  +'  {$ifndef JScript}'#13#10'  myTree:=TXTree(ResourceTreeComponent.ScreenObj'
  +'ect);'#13#10'  NodeText:=myTree.SelectedNodeText;'#13#10'  {$else}'#13#10' '
  +' myTree:=TXTree(ResourceTreeComponent);'#13#10'  NodeText:=myTree.SelectedN'
  +'odeText;'#13#10'  {$endif}'#13#10'  TreeNodeId:=TreeLabelToID(NodeText,''Re'
  +'sourceTree'',p1);'#13#10#13#10'  //NodeID is the Navigator Ttree object cli'
  +'cked on    eg. NavigationTreeContents   or in html, the name of the node...'
  +#13#10'  //myValue is  the label text of the clicked node (desktop) OR the t'
  +'reenode id (Browser)'#13#10'  //TreeNodeId is  the screen object name (from'
  +' the name within myvalue)'#13#10'  if TreeNodeId<>'''' then'#13#10'  begin'
  +#13#10'     // ShowMessage(''OIResourceTreeNodeChange nodeId=''+nodeId);'#13
  +#10'      HandleResourcesTreeClickEvent(nodeId,NodeText);'#13#10'  end;'#13
  +#10'end;'#13#10#13#10'procedure OICodeTreeNodeChange(nodeId:string;myValue:s'
  +'tring);'#13#10'var'#13#10'  NodeText,TreeNodeId,FirstBit:String;'#13#10'  m'
  +'yTree:TXTree;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  myTree:=TXTr'
  +'ee(CodeTreeComponent.ScreenObject);'#13#10'  NodeText:=myTree.SelectedNodeT'
  +'ext;'#13#10'  {$else}'#13#10'  myTree:=TXTree(CodeTreeComponent);'#13#10'  '
  +'NodeText:=myTree.SelectedNodeText;'#13#10'  {$endif}'#13#10'  TreeNodeId:=T'
  +'reeLabelToID(NodeText,''CodeTree'',FirstBit);'#13#10#13#10'  if TreeNodeId<'
  +'>'''' then'#13#10'  begin'#13#10'    //showmessage(''OICodeTreeNodeChange. '
  +'nodeId=''+nodeId+'' TreeNodeId=''+TreeNodeId);'#13#10'     HandleCodeTreeCl'
  +'ickEvent(TreeNodeId,NodeText,FirstBit);'#13#10'  end;'#13#10'end;'#13#10#13
  +#10'procedure OICutItem(nodeId:string;myValue:string);'#13#10'begin'#13#10' '
  +' if TreeInFocus<>nil then'#13#10'  begin'#13#10'    // if we are looking at'
  +' the nav tree, cut the selected nav node;'#13#10'    // if we are looking a'
  +'t the code tree, cut the selected code node;'#13#10'    if TreeInFocus.Node'
  +'Name=SystemRootName then'#13#10'      CutItem(UIRootNode,ObjectInspectorSel'
  +'ectedNavTreeNode);'#13#10'  end;'#13#10'end;'#13#10#13#10'function OIPasteI'
  +'tem(nodeId:string;myValue:string):boolean;'#13#10'// if called via drag/dro'
  +'p, myvalue is the text of the destination node'#13#10'// otherwise, from Pa'
  +'ste button, destination node is ObjectInspectorSelectedNavTreeNode.'#13#10
  +'var dst,p1:string;'#13#10'  DestNode:TDataNode;'#13#10'  ok:boolean;'#13#10
  +'begin'#13#10'  ok:=false;'#13#10'//showmessage(''OIPasteItem. ''+nodeId);'
  +#13#10'  if (TreeInFocus<>nil) and (ObjectInspectorSourceNode<>nil) then'#13
  +#10'  begin'#13#10'    if myValue=''OIPaste'' then'#13#10'        DestNode:='
  +'ObjectInspectorSelectedNavTreeNode'#13#10'    else'#13#10'    begin'#13#10
  +'        dst:=TreeLabelToID( myValue, TreeInFocus.NodeName,p1);  // destinat'
  +'ion node'#13#10'        DestNode:=FindDataNodeById(UIRootNode,dst,'''',true'
  +');      //!!namespace - assuming top design level only'#13#10'    end;'#13
  +#10'//showmessage(''dest node ''+DestNode.NodeName);'#13#10'    if TreeInFoc'
  +'us.NodeName=SystemRootName then'#13#10'    begin'#13#10'      ok:=PasteItem'
  +'(DestNode,ObjectInspectorSourceNode,'''');'#13#10'    end;'#13#10'  end'#13
  +#10'  else'#13#10'    if (TreeInFocus=nil) then'#13#10'       ShowMessage('''
  +'Select Paste destination first'')'#13#10'    else if ObjectInspectorSourceN'
  +'ode=nil then'#13#10'    begin'#13#10'      ShowMessage(''Copy an item first'
  +''');'#13#10'      XIDEForm.OIPaste.Hint:=''Nothing to paste. Select a Resou'
  +'rce, or Copy/Cut a Designer node first.'';'#13#10'    end;'#13#10'  result:'
  +'=ok;'#13#10'end;'#13#10#13#10'procedure OIDropItem(e:TEventStatus;nodeId:st'
  +'ring;myValue:string);'#13#10'var'#13#10'  TreeNodeId,p1:string;'#13#10'  Or'
  +'iginalSource, OriginalParent:TDataNode;'#13#10'  values:TNodeEventValue;'#13
  +#10'  OriginalPos:integer;'#13#10'  ok,ItemWasCut:boolean;'#13#10'begin'#13
  +#10'  // Drop an item on the Navigator tree'#13#10'  //showmessage(''OIDropI'
  +'tem.  myValue=''+myValue);'#13#10#13#10'  TreeNodeId:=TreeLabelToID( myValu'
  +'e, ''NavTree'',p1);  // destination node'#13#10#13#10'  TreeInFocus:=UIRoot'
  +'Node;'#13#10'  DeHighlightObject(ObjectInspectorSelectedNavTreeNode);'#13#10
  +'  ObjectInspectorSelectedNavTreeNode:=FindDataNodeById(UIRootNode,TreeNodeI'
  ,'d,'''',true);'#13#10'  //ShowMessage(''drop ''+ObjectInspectorSourceNode.No'
  +'deName+'' at ''+ObjectInspectorSelectedNavTreeNode.NodeName);'#13#10#13#10
  +'  // if an intra-tree drag/drop, then cut the source node first'#13#10'  //'
  +' find the original source node (still in the nav tree)'#13#10'  OriginalSou'
  +'rce:=FindDataNodeById(SystemNodeTree,ObjectInspectorSourceNode.NodeName,'''
  +''',false);'#13#10'  if (OriginalSource<>nil) then'#13#10'  begin'#13#10'   '
  +' OriginalParent:=OriginalSource.NodeParent;'#13#10'    OriginalPos:=Origina'
  +'lParent.GetChildIndex(OriginalSource);'#13#10'  end;'#13#10'  if (OriginalS'
  +'ource<>nil)'#13#10'  and (OriginalSource <> ObjectInspectorSelectedNavTreeN'
  +'ode)'#13#10'  and (OriginalSource.IsDynamic=true)'#13#10'  and (NodeIsDesce'
  +'ndantOf(OriginalSource,UIRootNode.NodeName) > -1)   // is in Nav tree'#13#10
  +'  then'#13#10'  begin'#13#10'    CutItemQuietly(UIRootNode,OriginalSource);'
  +#13#10'    ItemWasCut:=true;'#13#10'  end;'#13#10#13#10'  // paste the sourc'
  +'e node into the Nav tree'#13#10'  if (OriginalSource <> ObjectInspectorSele'
  +'ctedNavTreeNode) then'#13#10'    ok:=OIPasteItem(nodeId,myValue);'#13#10'  '
  +'if not ok then'#13#10'    if ItemWasCut then'#13#10'      // reverse the cu'
  +'t'#13#10'      PasteItemQuietly(UIRootNode,OriginalPos,OriginalParent,Origi'
  +'nalSource);'#13#10'end;'#13#10#13#10'procedure OIMoveNavSiblingUpDown(UpDow'
  +'n:String);'#13#10'var'#13#10'  thisNode, myParent:TdataNode;'#13#10'  c,n,i'
  +':integer;'#13#10'begin'#13#10'  thisNode:=ObjectInspectorSelectedNavTreeNod'
  +'e;'#13#10'  if thisNode<>nil then'#13#10'  begin'#13#10'    //myParent:=Fin'
  +'dParentOfNode(SystemNodeTree,thisNode);'#13#10'    myParent:=thisNode.NodeP'
  +'arent;'#13#10'    if myParent<>nil then'#13#10'    begin'#13#10'      for i'
  +':=0 to length(myParent.ChildNodes)-1 do'#13#10'      begin'#13#10'        i'
  +'f myParent.ChildNodes[i]=thisNode then'#13#10'          c:=i;'#13#10'      '
  +'end;'#13#10'      if UpDown=''Up'' then'#13#10'        if c>0 then n:=c-1'
  +#13#10'        else n:=-1;'#13#10'      if UpDown=''Down'' then'#13#10'     '
  +'   if c<length(myParent.ChildNodes)-1 then'#13#10'          n:=c+1'#13#10' '
  +'       else'#13#10'          n:=-1;'#13#10'      if n>-1 then'#13#10'      '
  +'begin'#13#10'        CopyNavNode( thisNode);    // populates  ObjectInspect'
  +'orSourceNode'#13#10'        CutItemQuietly(UIRootNode,thisNode);'#13#10'   '
  +'     // paste the source node back under the parent at new position'#13#10
  +'        PasteItemQuietly(UIRootNode,n,myParent,ObjectInspectorSourceNode);'
  +#13#10'      end;'#13#10'    end;'#13#10'    RebuildNavigatorTree;'#13#10'  '
  +'end;'#13#10'end;'#13#10#13#10'procedure CodeTreeMoveSiblingUpDown(UpDown:St'
  +'ring);'#13#10'var'#13#10'  thisNode, myParent:TdataNode;'#13#10'  c,n,i:int'
  +'eger;'#13#10'  NodeText:String;'#13#10'begin'#13#10'  thisNode:=ObjectInspe'
  +'ctorSelectedCodeTreeNode;'#13#10'  NodeText:=ObjectInspectorSelectedCodeNod'
  +'eText;'#13#10'  if thisNode<>nil then'#13#10'  begin'#13#10'    myParent:=t'
  +'hisNode.NodeParent;'#13#10'    if (myParent<>nil)'#13#10'    and (myParent.'
  +'NodeName = ''CodeUnits'') then'#13#10'    begin'#13#10'      for i:=0 to le'
  +'ngth(myParent.ChildNodes)-1 do'#13#10'      begin'#13#10'        if myParen'
  +'t.ChildNodes[i]=thisNode then'#13#10'          c:=i;'#13#10'      end;'#13
  +#10'      if UpDown=''Up'' then'#13#10'        if c>0 then n:=c-1'#13#10'   '
  +'     else n:=-1;'#13#10'      if UpDown=''Down'' then'#13#10'        if c<l'
  +'ength(myParent.ChildNodes)-1 then'#13#10'          n:=c+1'#13#10'        el'
  +'se'#13#10'          n:=-1;'#13#10'      if n>-1 then'#13#10'      begin'#13
  +#10'        CopyNavNode( thisNode);    // populates  ObjectInspectorSourceNo'
  +'de'#13#10'        CutItemQuietly(CodeRootNode,thisNode);'#13#10'        // '
  +'paste the source node back under the parent at new position'#13#10'        '
  +'PasteItemQuietly(CodeRootNode,n,myParent,ObjectInspectorSourceNode);'#13#10
  +'      end;'#13#10'    end;'#13#10'    ObjectInspectorSelectedCodeNodeText:='
  +'NodeText;'#13#10'    RebuildCodeTree;'#13#10'  end;'#13#10'end;'#13#10#13#10
  +#13#10'procedure OIMoveItem(nodeId,NameSpace:string;NewParentId:string);'#13
  +#10'// Interface function (available to user code block) to re-parent a node'
  +' in the nav tree.'#13#10'var'#13#10'  OriginalSource, DestNode:TDataNode;'
  +#13#10'begin'#13#10'  // find the source node'#13#10'  OriginalSource:=FindD'
  +'ataNodeById(UIRootNode,NodeId,NameSpace,false);'#13#10'  if (OriginalSource'
  +'<>nil) then'#13#10'  begin'#13#10#13#10'    TreeInFocus:=UIRootNode;'#13#10
  +'    // find the new parent node'#13#10'    DestNode:=FindDataNodeById(UIRoo'
  +'tNode,NewParentId,NameSpace,true);'#13#10'    if DestNode<>nil then'#13#10
  +'    begin'#13#10'      //ShowMessage(''OIMoveItem ''+ObjectInspectorSourceN'
  +'ode.NodeName+'' at ''+ObjectInspectorSelectedNavTreeNode.NodeName);'#13#10
  +#13#10'      if (OriginalSource <> DestNode)'#13#10'      and (DestNode.IsDy'
  ,'namic=true)'#13#10'      and (CanAddChildToParent(DestNode,OriginalSource))'
  +' then'#13#10'      begin'#13#10'         CopyNavNode( OriginalSource);    /'
  +'/ populates  ObjectInspectorSourceNode'#13#10'         CutItemQuietly(UIRoo'
  +'tNode,OriginalSource);'#13#10'         // paste the source node under the n'
  +'ew parent'#13#10'         PasteItem(DestNode,ObjectInspectorSourceNode,'''''
  +');'#13#10'      end'#13#10'      else'#13#10'        showmessage(''MoveComp'
  +'onent:  Cannot move node ''+nodeId+'' to new parent ''+NewParentId);'#13#10
  +'    end'#13#10'    else'#13#10'      showmessage(''MoveComponent:  Cannot f'
  +'ind destination node ''+NewParentId);'#13#10'  end'#13#10'  else'#13#10'   '
  +' showmessage(''MoveComponent:  Cannot find source node ''+nodeId);'#13#10'e'
  +'nd;'#13#10#13#10'procedure OICopyToNewParent(nodeId,NameSpace:string;NewPar'
  +'entId:string;NewName:String);'#13#10'// Interface function (available to us'
  +'er code block) to copy a node in the nav tree to the given parent.'#13#10'v'
  +'ar'#13#10'  OriginalSource, DestNode:TDataNode;'#13#10'  s:boolean;'#13#10
  +'begin'#13#10'  // find the source node'#13#10'  OriginalSource:=FindDataNod'
  +'eById(UIRootNode,NodeId,NameSpace,false);'#13#10'  if (OriginalSource<>nil)'
  +' then'#13#10'  begin'#13#10'    s:=SuppressEvents;'#13#10'    SuppressEvent'
  +'s:=true;'#13#10'    TreeInFocus:=UIRootNode;'#13#10'    // find the new par'
  +'ent node'#13#10'    DestNode:=FindDataNodeById(UIRootNode,NewParentId,NameS'
  +'pace,true);'#13#10'    if (DestNode<>nil) then'#13#10'    begin'#13#10'    '
  +'  //ShowMessage(''OIMoveItem ''+ObjectInspectorSourceNode.NodeName+'' at '''
  +'+ObjectInspectorSelectedNavTreeNode.NodeName);'#13#10#13#10'        if (Ori'
  +'ginalSource <> DestNode)'#13#10'        and (DestNode.IsDynamic=true)'#13#10
  +'        and (CanAddChildToParent(DestNode,OriginalSource)) then'#13#10'    '
  +'    begin'#13#10'           CopyNavNode( OriginalSource);    // populates  '
  +'ObjectInspectorSourceNode'#13#10'           // paste the source node under '
  +'the new parent'#13#10'           PasteItem(DestNode,ObjectInspectorSourceNo'
  +'de,NewName);'#13#10'        end'#13#10'        else'#13#10'          showme'
  +'ssage(''MoveComponent:  Cannot move node ''+nodeId+'' to new parent ''+NewP'
  +'arentId);'#13#10'    end'#13#10'    else'#13#10'      showmessage(''MoveCom'
  +'ponent:  Cannot find destination node ''+NewParentId);'#13#10'    SuppressE'
  +'vents:=s;'#13#10'  end'#13#10'  else'#13#10'    showmessage(''MoveComponent'
  +':  Cannot find source node ''+nodeId);'#13#10'end;'#13#10'{$ifndef JScript}'
  +#13#10'procedure OICopyToNewParent(nodeId,NameSpace:string;NewParentId:strin'
  +'g;NewName:PChar);'#13#10'begin'#13#10'   OICopyToNewParent(nodeId,NameSpace'
  +',NewParentId,strPas(NewName));'#13#10'end;'#13#10'{$endif}'#13#10#13#10'pro'
  +'cedure OICopySelectedItem;'#13#10'begin'#13#10'  if TreeInFocus<>nil then'
  +#13#10'  begin'#13#10'    if TreeInFocus.NodeName=SystemRootName then'#13#10
  +'    begin'#13#10'      CopyNavNode( ObjectInspectorSelectedNavTreeNode);'#13
  +#10'    end;'#13#10#13#10'  end'#13#10'  else'#13#10'    ShowMessage(''OICop'
  +'ySelectedItem.  TreeInFocus is nil'');'#13#10#13#10'end;'#13#10#13#10'proce'
  +'dure OIDeleteComposite;'#13#10'var'#13#10'  filename:string;'#13#10'begin'
  +#13#10'  if (AvailableResourcesSelectedNode<>nil) and (AvailableResourcesSel'
  +'ectedNode.NodeClass=''RUI'') then'#13#10'  begin'#13#10'    filename:=myStr'
  +'ingReplace(AvailableResourcesSelectedNode.NodeName,''_xcmp'',''.xcmp'',1,-1'
  +');'#13#10'    if XIDEConfirm(''OK to delete composite resource ''+filename+'
  +'''?'') then'#13#10'    begin'#13#10'      {$ifndef JScript}'#13#10'      fi'
  +'lename:=''SavedSystems/''+filename;'#13#10'      {$endif}'#13#10'      Clea'
  +'rLocalStore( filename);'#13#10'      RebuildResourcesTree;'#13#10'    end;'
  +#13#10'  end'#13#10'  else'#13#10'    ShowMessage(''Select a composite resou'
  +'rce first'');'#13#10'end;'#13#10'procedure OIDeleteResource;'#13#10'begin'
  +#13#10'  if (AvailableResourcesSelectedNode<>nil)'#13#10'    and (AvailableR'
  +'esourcesSelectedNode.NodeClass=''RUI'')'#13#10'    and (AvailableResourcesS'
  +'electedNode.NodeType=''TXComposite'') then'#13#10'    if XIDEConfirm(''OK t'
  +'o delete ''+AvailableResourcesSelectedNode.NodeName+''?'') then'#13#10'    '
  +'  OIDeleteComposite;'#13#10'end;'#13#10#13#10'procedure OILoadComposite;'#13
  +#10'begin'#13#10'  if (AvailableResourcesSelectedNode<>nil)'#13#10'    and ('
  +'AvailableResourcesSelectedNode.NodeClass=''RUI'')'#13#10'    and (Available'
  +'ResourcesSelectedNode.NodeType=''TXComposite'') then'#13#10'  begin'#13#10
  +'    if XIDEConfirm(''OK to load composite ''+AvailableResourcesSelectedNode'
  +'.NodeName+'' for editing?'') then'#13#10'      LoadCompositeResource(Availa'
  +'bleResourcesSelectedNode);'#13#10'  end'#13#10'  else'#13#10'    ShowMessag'
  +'e(''Select a composite resource first'');'#13#10'end;'#13#10#13#10#13#10'pr'
  +'ocedure OILoadSavedSystem(SysName:String);'#13#10'begin'#13#10'    if XIDEC'
  ,'onfirm(''OK to load system ''+SysName+''?'') then'#13#10'      LoadNamedSys'
  +'tem(SysName);'#13#10'end;'#13#10#13#10'procedure OILoadResource;'#13#10'beg'
  +'in'#13#10#13#10'  if (AvailableResourcesSelectedNode<>nil)'#13#10'    and ('
  +'AvailableResourcesSelectedNode.NodeClass=''RUI'')'#13#10'    and (Available'
  +'ResourcesSelectedNode.NodeType=''TXComposite'') then'#13#10'    OILoadCompo'
  +'site;'#13#10'end;'#13#10#13#10'procedure OIDragItem(e:TEventStatus;nodeId:s'
  +'tring;myValue:string);'#13#10'var'#13#10'  TreeNodeId,p1:string;'#13#10'beg'
  +'in'#13#10'  // Nav Tree, and Resource Tree.'#13#10#13#10'  TreeNodeId:=Tree'
  +'LabelToID( myValue, nodeId,p1);'#13#10'  //ShowMessage(''OIDragItem nodeid '
  +'''+nodeId+'' node=''+myNode.NodeName+'' treenodeid=''+TreeNodeId);'#13#10' '
  +' if nodeId = ''ResourceTree'' then'#13#10'  begin'#13#10'    AvailableResou'
  +'rcesSelectedNode:=FindDataNodeById(ResourcesNodeTree,TreeNodeId,'''',true);'
  +#13#10'    //ShowMessage(''OIDragItem node ''+AvailableResourcesSelectedNode'
  +'.NodeName);'#13#10'    if (AvailableResourcesSelectedNode<>nil)'#13#10'    '
  +'and (AvailableResourcesSelectedNode.NodeName<>'''')'#13#10'    and (Availab'
  +'leResourcesSelectedNode.NodeType<>'''')'#13#10'    and (AvailableResourcesS'
  +'electedNode.NodeType<>''Demo'')'#13#10'    and (AvailableResourcesSelectedN'
  +'ode.NodeType<>''Test'') then'#13#10'      PickItem( AvailableResourcesSelec'
  +'tedNode);'#13#10'  end'#13#10'  else'#13#10'  if nodeId = ''NavTree'' then'
  +#13#10'    begin'#13#10'      ObjectInspectorSelectedNavTreeNode:=FindDataNo'
  +'deById(UIRootNode,TreeNodeId,'''',true);'#13#10'      TreeInFocus:=UIRootNo'
  +'de;'#13#10'      OICopySelectedItem;'#13#10'    end;'#13#10'end;'#13#10#13
  +#10'procedure OIDeleteSelectedItem;'#13#10'begin'#13#10'  if TreeInFocus<>ni'
  +'l then'#13#10'  begin'#13#10'    if (TreeInFocus.NodeName=SystemRootName)'
  +#13#10'    and (ObjectInspectorSelectedNavTreeNode<>nil) then'#13#10'    beg'
  +'in'#13#10'      if XIDEConfirm(''OK to delete component ''+ObjectInspectorS'
  +'electedNavTreeNode.NodeName+''?'') then'#13#10'        DeleteItem(UIRootNod'
  +'e,ObjectInspectorSelectedNavTreeNode)'#13#10'    end;'#13#10'  end;'#13#10
  +'end;'#13#10#13#10'function OIDeleteItem(NodeId,NameSpace:String;ShowNotFoun'
  +'dMsg:Boolean=true;ShowConfirm:Boolean=true):Boolean;'#13#10'var'#13#10'  No'
  +'deToDelete:TdataNode;'#13#10'  ok,Deleted:Boolean;'#13#10'begin'#13#10'  De'
  +'leted:=false;'#13#10'  ok:=false;'#13#10'  NodeToDelete:=FindDataNodeById(U'
  +'IRootNode,NodeId,NameSpace,ShowNotFoundMsg);'#13#10'  if NodeToDelete<>nil '
  +'then'#13#10'  begin'#13#10'    if ShowConfirm=false then'#13#10'    begin'
  +#13#10'      ok:=true ;'#13#10'    end'#13#10'    else'#13#10'    begin'#13
  +#10'      if XIDEConfirm(''OK to delete component ''+NodeToDelete.NodeName+'
  +'''?'') then'#13#10'        ok:=true;'#13#10'    end;'#13#10'    if ok then'
  +#13#10'      Deleted:=DeleteItem(UIRootNode,NodeToDelete);'#13#10'  end;'#13
  +#10'  result:=Deleted;'#13#10'end;'#13#10#13#10'procedure OISystemLoad(e:TEv'
  +'entStatus;nodeId:string);'#13#10'var'#13#10'  SystemDescription:String;'#13
  +#10'begin'#13#10'  //{$ifdef JScript}'#13#10'  //asm console.log(''OISystemL'
  +'oad''); end;'#13#10'  //{$endif}'#13#10#13#10'   if (e=nil)  or (e.InitRunn'
  +'ing=false) then'#13#10'   begin'#13#10'     if (e=nil) then'#13#10'     beg'
  +'in'#13#10'       e:=TEventStatus.Create(''Click'',nodeId);'#13#10'     end;'
  +#13#10'     e.initRunning:=true;'#13#10'     PasteDialogUnit.CompletionEvent'
  +':=e;'#13#10'     {$ifdef JScript}'#13#10'     e.AsyncProcsRunning.Add(''Cop'
  +'yFromClip'');'#13#10'     {$endif}'#13#10#13#10'   end'#13#10'   else'#13#10
  +'   begin'#13#10'     e.InitRunning:=false;'#13#10'   end;'#13#10#13#10'   i'
  +'f e.InitRunning then'#13#10'   begin'#13#10'     PasteDoneBtn.IsVisible:=fa'
  +'lse;'#13#10'     SystemDescription:=mygetClipboardData(''System''); // (htm'
  +'l) opens the popup for paste action'#13#10'   end;'#13#10'   e.InitDone:=tr'
  +'ue;'#13#10#13#10'   if e.EventHasWaitingAsyncProcs = false then'#13#10'   /'
  +'/ this is lazarus and a confirm dialog is not needed'#13#10'   // otherwise'
  +' this is HTML and we have waited for a ctrl-V event from the PasteDialog fo'
  +'rm'#13#10'   begin'#13#10'     {$ifndef JScript}'#13#10'     // Lazarus onl'
  +'y'#13#10'     DoSystemLoad(SystemDescription,'''');'#13#10'     {$else}'#13
  +#10'     asm'#13#10'       //console.log(''call DoSystemLoad '');'#13#10'   '
  +'    pas.NodeUtils.StartingUp=false;'#13#10'       var pasteTarget = documen'
  +'t.getElementById(''PasteTargetContents'');'#13#10'       var PasteString = '
  +'pasteTarget.value;'#13#10'       //alert(''Paste string = >''+PasteString+'
  +'''<'' );'#13#10'       pas.XObjectInsp.DoSystemLoad(PasteString,'''');'#13
  +#10'     end;'#13#10'     {$endif}'#13#10'   end;'#13#10#13#10'end;'#13#10#13
  +#10'procedure OIClearSystem;'#13#10'var'#13#10'  i:integer;'#13#10'begin'#13
  +#10'    // close XForm windows'#13#10'    for i:=length(OpenXForms)-1 downto'
  ,' 0 do'#13#10'    begin'#13#10'      CloseXForm(OpenXForms[i].NodeName,OpenX'
  +'Forms[i].NameSpace);'#13#10'    end;'#13#10'    SetSystemName(''XIDESystem'
  +''');'#13#10#13#10'    PyMemoComponent:=XIDEMain.XIDEForm.XMemo1;'#13#10#13
  +#10'    ClearInspectors;'#13#10'    ClearAllDynamicNodes(SystemNodeTree); //'
  +' clear any existing dynamic screen components under Root'#13#10#13#10'    /'
  +'/ open the properties tab in the object inspector'#13#10'    XIDEForm.Objec'
  +'tInspectorTabs.TabIndex:=0;'#13#10'    XIDEForm.OITabs.TabIndex:=0;'#13#10
  +'    XIDEForm.ResourceInspectorTabs.TabIndex:=0;'#13#10#13#10'    RebuildNav'
  +'igatorTree;'#13#10'    RebuildCodeTree;'#13#10'    RebuildResourcesTree;'#13
  +#10'    InitialiseStyleDesigner;'#13#10#13#10'    InitDMTree;'#13#10'    DMC'
  +'hanged:=false;'#13#10'    RebuildDMTree;'#13#10' end;'#13#10#13#10#13#10'fu'
  +'nction SetMyDeployedMode(wholesystem,dm2:String):String;'#13#10'var'#13#10
  +'  dp1,dp2:integer;'#13#10'begin'#13#10'  // look for the string /*Deploymen'
  +'t*/'#13#10'  dp1 := FoundString(wholesystem,''/*Deployment1*/'');'#13#10'  '
  +'if dp1>0 then'#13#10'  begin'#13#10'    dp2:=FoundString(wholesystem,''/*De'
  +'ployment2*/'');'#13#10'    if dp2>0 then'#13#10'    begin'#13#10'      dp2:'
  +'=dp2+15;'#13#10'      Delete(wholesystem,dp1,(dp2-dp1));'#13#10'      Inser'
  +'t(''/*Deployment1*/var myDeployedMode = ''''''+dm2+'''''';/*Deployment2*/'''
  +',wholesystem,dp1);'#13#10'    end;'#13#10'  end;'#13#10'  result:=wholesyst'
  +'em;'#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure CompleteDepl'
  +'oyFromBrowser(deployname:String);'#13#10'var'#13#10'  htmlHead,htmlBody,who'
  +'lesystem,projectJS,currentNodeTree,dm2,sysname,dpstr:String;'#13#10'  ok:bo'
  +'olean;'#13#10'  dp1,dp2:integer;'#13#10'begin'#13#10'  // make temporary ch'
  +'anges to root node attributes'#13#10'  sysname:=UIRootNode.GetAttribute(''S'
  +'ystemName'',false).AttribValue;'#13#10'  dm2:=UIRootNode.GetAttribute(''Dep'
  +'loymentMode'',false).AttribValue;'#13#10'  UIRootNode.SetAttributeValue(''S'
  +'ystemName'',deployname);'#13#10#13#10'  ok:=CompileEventCode(CodeEditForm.C'
  +'odeEdit,''JSJS'');'#13#10'  DeleteGreyOverlay(''Grey1'');'#13#10'  if ok th'
  +'en'#13#10'  begin'#13#10'    wholesystem:=''<!DOCTYPE HTML>''  +LineEnding'
  +#13#10'        + ''<html  lang="en">'' +LineEnding;'#13#10'    projectJS:='''
  +''';'#13#10'    asm'#13#10'      //console.log(''finding core js code'');'#13
  +#10'      // find the block of JS code that defines the XIDE framework'#13#10
  +'      //!! this needs to be the JS for running the framework, is NOT the co'
  +'mpiled user code'#13#10'      var corecode = document.getElementById("Proje'
  +'ctCodeContainer");'#13#10'      if (corecode != null) {'#13#10'        proj'
  +'ectJS=corecode.innerHTML;'#13#10'        }'#13#10'    end;'#13#10'    htmlH'
  +'ead:=BuildHTMLHead(''XIDEMain'',sysname,dm2,projectJS);'#13#10'    wholesys'
  +'tem:=wholesystem + htmlHead;'#13#10'    htmlBody:=BuildHTMLBody;'#13#10'   '
  +' wholesystem:=wholesystem + htmlBody;'#13#10#13#10#13#10'    // set LoadedS'
  +'ystemString...'#13#10'    currentNodeTree := NodeTreeToXML(SystemNodeTree,n'
  +'il,false,true);'#13#10'    // look for the string ''pas.NodeUtils.LoadedSys'
  +'temString ='''#13#10'    dp1 := 0;'#13#10'    dp1 := FoundString(wholesyste'
  +'m,chr(112)+''as.NodeUtils.LoadedSystemString = "*";'');  // length 39'#13#10
  +'    if dp1>0 then'#13#10'    begin'#13#10'      dp1 := dp1 + 39;'#13#10'   '
  +'   dp2 := FoundString(wholesystem,''<\/Root>";'');   // length 10'#13#10'  '
  +'    if dp2>0 then'#13#10'      begin'#13#10'        dp2 := dp2 + 10;'#13#10
  +'        Delete(wholesystem,dp1,(dp2-dp1));'#13#10'        Insert(''pas.Node'
  +'Utils.LoadedSystemString = ''''''+currentNodeTree+'''''';'',wholesystem,dp1'
  +');'#13#10'      end;'#13#10'    end;'#13#10#13#10'    PasteDialogUnit.Paste'
  +'Target.ItemValue:=wholesystem;'#13#10'    PasteDialogUnit.PasteDoneBtn.IsVi'
  +'sible:=true;'#13#10'    PasteDialogUnit.PasteLabel.LabelCaption:=''Press Do'
  +'ne to complete the copy to clipboard action'';'#13#10'    PasteDialogUnit.P'
  +'asteTarget.IsVisible:=false;'#13#10#13#10'    OpenModal(''PasteDialog'');'
  +#13#10#13#10'  end;'#13#10'  UIRootNode.SetAttributeValue(''SystemName'',sys'
  +'name);'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure OIDeploySys'
  +'tem;'#13#10'// Save a browser-ready html copy of the whole system (includin'
  +'g XIDE framework) to the clipboard'#13#10'var'#13#10'  wholesystem,jsText,s'
  +'ysname,deployname:String;'#13#10'  lines,ExtraLines,ExtraDirectives:TString'
  +'List;'#13#10'  ok:boolean;'#13#10'  dm:String;'#13#10'begin'#13#10'  // Fir'
  +'st delete object inspector dynamic property editor fields'#13#10'  ClearIns'
  +'pectors;'#13#10#13#10'  sysname:=UIRootNode.GetAttribute(''SystemName'',fal'
  +'se).AttribValue;'#13#10'  deployname:=XIDEPrompt(''Name of Deployed System'
  +''',sysname);'#13#10'  if deployname='''' then  // user has cancelled'#13#10
  +'    EXIT;'#13#10#13#10'  ExtraDirectives:=TStringList.Create;'#13#10#13#10
  ,'  {$ifndef JScript}'#13#10'  lines:=TStringList.Create;'#13#10'  // Compile'
  +' the user-created event code into a unit.'#13#10'  ok:=CompileEventCode(Cod'
  +'eEditForm.CodeEdit,''LazJS'');'#13#10'  if ok then'#13#10'  begin'#13#10'  '
  +'   Screen.Cursor := crHourglass;'#13#10#13#10'     UIRootNode.SetAttributeV'
  +'alue(''SystemName'',deployname);'#13#10'     // Save the system definition '
  +'data for the compiler'#13#10'     SaveSystemToIncFile;'#13#10'     UIRootNo'
  +'de.SetAttributeValue(''SystemName'',sysname);'#13#10#13#10'     // addition'
  +'al inc file for composite resources'#13#10'     SaveCompositesToIncFile;'#13
  +#10#13#10'     {$ifdef Python}'#13#10'     ExtraDirectives.Add(''-dPython'')'
  +';'#13#10'     {$endif}'#13#10'     // now cross compile from a saved copy o'
  +'f this source with the conditional define'#13#10'     // switch (JScript) s'
  +'et to compile the JS version instead of the Lazarus version'#13#10'     Tra'
  +'nspileMyProgram(''XIDEMain'',ProjectDirectory,''resources/project/'',CodeEd'
  +'itForm.CodeEdit,false,ExtraDirectives);'#13#10#13#10'     if FileExists(''X'
  +'IDEMain.js'') then'#13#10'       lines.LoadFromFile(''XIDEMain.js'');'#13#10
  +#13#10'     Screen.Cursor := crDefault;'#13#10#13#10'  end'#13#10'  else'#13
  +#10'  begin'#13#10'    DisplayDllCompileErrors;'#13#10'  end;'#13#10#13#10' '
  +' {$ifdef Python}'#13#10'  ExtraLines:=PyodideScript;'#13#10'  ExtraLines.Ad'
  +'d(''<script>'');'#13#10'  ExtraLines.AddStrings(lines);'#13#10'  lines.Text'
  +':=ExtraLines.Text;'#13#10'  {$else}'#13#10'  lines.insert(0,''    <script t'
  +'ype="application/javascript" >'');'#13#10'  {$endif}'#13#10'  lines.add('' '
  +'  </script>  '');'#13#10#13#10'  jsText:=lines.text;'#13#10#13#10'  dm:=UIR'
  +'ootNode.GetAttribute(''DeploymentMode'',false).AttribValue ;'#13#10'  whole'
  +'system := CreateHTMLWrapper(''XIDEMain'',dm,true,jsText);'#13#10'  lines.Fr'
  +'ee;'#13#10'  myCopyToClip(''HTML System'',wholesystem );'#13#10#13#10'  {$e'
  +'lse}'#13#10'  ShowGreyOverlay(SystemRootName,''Grey1'',''Completing Deploym'
  +'ent. Please Wait...'');'#13#10'  // timeout here so the grey overlay appear'
  +'s'#13#10'  asm'#13#10'    myTimeout(pas.XObjectInsp.CompleteDeployFromBrows'
  +'er,20,''CompleteDeployFromBrowser'',0,deployname);'#13#10'  end;'#13#10#13
  +#10'  {$endif}'#13#10#13#10'  ExtraDirectives.Free;'#13#10'end;'#13#10#13#10
  +'procedure OIComponentCopy(nodeId:string;myValue:string);'#13#10'begin'#13#10
  +'  PickItem( AvailableResourcesSelectedNode);'#13#10'end;'#13#10#13#10'proce'
  +'dure ShowHideObjectInspector(show:Boolean);'#13#10'var'#13#10'  aNode:Tdata'
  +'Node;'#13#10'  lr:String;'#13#10'begin'#13#10'   if not show then'#13#10'  '
  +' begin'#13#10'     DeHighlightObject(ObjectInspectorSelectedNavTreeNode);'
  +#13#10'     ClearInspectors;'#13#10'   end;'#13#10#13#10'   aNode:=FindDataN'
  +'odeById(UIRootNode,''InnerRootVBox'','''',true);'#13#10'   if aNode<>nil th'
  +'en'#13#10'     ShowHideNode(aNode,show);'#13#10#13#10'   aNode:=FindDataNod'
  +'eById(UIRootNode,''ResourceInspectorTabs'','''',true);'#13#10'   lr:=UIRoot'
  +'Node.GetAttribute(''ShowResources'',true).AttribValue;'#13#10'   if aNode<>'
  +'nil then'#13#10'     if lr<>''Hide'' then'#13#10'       ShowHideNode(aNode,'
  +'show);'#13#10#13#10'   if show then'#13#10'   begin'#13#10'     if lr<>''Hi'
  +'de'' then'#13#10'       TXScrollBox(MainFormProjectRoot.ScreenObject).Conta'
  +'inerWidth:=''60%'''#13#10'     else'#13#10'       TXScrollBox(MainFormProje'
  +'ctRoot.ScreenObject).ContainerWidth:=''80%'';'#13#10'   end'#13#10'   else'
  +#13#10'   begin'#13#10'     TXScrollBox(MainFormProjectRoot.ScreenObject).Co'
  +'ntainerWidth:=''100%'';'#13#10'   end;'#13#10#13#10'end;'#13#10#13#10'{$ifn'
  +'def JScript}'#13#10'procedure RedisplayResourceTree;'#13#10'var'#13#10'  hb'
  +'ox:TWinControl;'#13#10'  aNode:TdataNode;'#13#10'  ob1,ob2,ob3:TControl;'#13
  +#10'  lr:String;'#13#10'begin'#13#10'  aNode:=FindDataNodeById(UIRootNode,'''
  +'RootHBox'','''',true);'#13#10'  hbox:=TWinControl(aNode.ScreenObject);'#13
  +#10'  aNode:=FindDataNodeById(UIRootNode,''ResourceInspectorTabs'','''',true'
  +');'#13#10'  ob1:=TControl(aNode.ScreenObject);'#13#10'  lr:=UIRootNode.GetA'
  +'ttribute(''ShowResources'',true).AttribValue;'#13#10'  if lr=''Hide'' then'
  +#13#10'  begin'#13#10'    TXTabControl(ob1).IsVisible:=false;'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'    aNode:=FindDataNodeById(UIRootNode,'
  +'''InnerRootVBox'','''',true);'#13#10'    ob2:=TControl(aNode.ScreenObject);'
  +#13#10'    aNode:=FindDataNodeById(UIRootNode,UIProjectRootName,'''',true);'
  +#13#10'    ob3:=TControl(aNode.ScreenObject);'#13#10#13#10'    hbox.RemoveCo'
  +'ntrol(ob1);'#13#10'    hbox.RemoveControl(ob2);'#13#10'    hbox.RemoveContr'
  +'ol(ob3);'#13#10#13#10'    //if ShowResourceTree=''Left'' then'#13#10'    if'
  +' lr=''Left'' then'#13#10'    begin'#13#10'      ob1.Parent:=hbox;'#13#10'  '
  +'    ob2.Parent:=hbox;'#13#10'      ob3.Parent:=hbox;'#13#10'    end'#13#10
  +'    //else if ShowResourceTree=''Right'' then'#13#10'    else'#13#10'    be'
  ,'gin'#13#10'      ob2.Parent:=hbox;'#13#10'      ob3.Parent:=hbox;'#13#10'  '
  +'    ob1.Parent:=hbox;'#13#10'    end;'#13#10'    TXTabControl(ob1).IsVisibl'
  +'e:=true;'#13#10'  end;'#13#10'  if DesignMode then'#13#10'    ShowHideObjec'
  +'tInspector(true);'#13#10'  DoFormResize(MainForm, MainFormTopControl);'#13
  +#10'end;'#13#10'{$else}'#13#10'procedure RedisplayResourceTree;'#13#10'var'
  +#13#10'  aNode:TdataNode;'#13#10'  ob1:TObject;'#13#10'  lr:String;'#13#10'b'
  +'egin'#13#10'  aNode:=FindDataNodeById(UIRootNode,''ResourceInspectorTabs'','
  +''''',true);'#13#10'  ob1:=aNode.ScreenObject;'#13#10'  lr:=UIRootNode.GetAt'
  +'tribute(''ShowResources'',true).AttribValue;'#13#10'  if lr=''Hide'' then'
  +#13#10'  begin'#13#10'    TXTabControl(ob1).IsVisible:=false;'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'    TXTabControl(ob1).IsVisible:=true;'
  +#13#10'    asm'#13#10'    var hbox=document.getElementById(''RootHBoxContent'
  +'s'');'#13#10'    ob1=document.getElementById(''ResourceInspectorTabs'');'#13
  +#10'    var ob2=document.getElementById(''InnerRootVBox'');'#13#10'    var o'
  +'b3=document.getElementById(''UIRoot'');'#13#10#13#10'    hbox.removeChild(o'
  +'b1);'#13#10'    hbox.removeChild(ob2);'#13#10'    hbox.removeChild(ob3);'#13
  +#10#13#10'    //if (pas.XObjectInsp.ShowResourceTree==''Left'') {'#13#10'   '
  +' if (lr==''Left'') {'#13#10'      hbox.appendChild(ob1);'#13#10'      hbox.'
  +'appendChild(ob2);'#13#10'      hbox.appendChild(ob3);'#13#10'    }'#13#10' '
  +'   //if (pas.XObjectInsp.ShowResourceTree==''Right'') {'#13#10'    else {'
  +#13#10'      hbox.appendChild(ob2);'#13#10'      hbox.appendChild(ob3);'#13
  +#10'      hbox.appendChild(ob1);'#13#10'    }'#13#10'    end;'#13#10'  end;'
  +#13#10'  if DesignMode then'#13#10'    ShowHideObjectInspector(true);'#13#10
  +'end;'#13#10'{$endif}'#13#10#13#10'procedure DisplayDllCompileErrors;'#13#10
  +'{$ifdef JScript}'#13#10'var'#13#10'  nm,nm2:String;'#13#10'{$endif}'#13#10
  +'begin'#13#10'  if CodeEditForm.CodeEdit.MessageLines<>'''' then'#13#10'  be'
  +'gin'#13#10#13#10'    CodeEditForm.Mode:=''dll'';'#13#10'    CodeEditForm.In'
  +'itialiseOnShow(''Compiler Errors'','''','''');'#13#10#13#10'    ShowXForm('
  +'''CodeEditForm'',true);     // the relevant text and message contents have '
  +'already been populated'#13#10#13#10'    {$ifdef JScript}'#13#10'    nm:=Cod'
  +'eEditor.CodeEditForm.CodeEdit.NodeName;'#13#10'    nm2:=CodeEditor.CodeEdit'
  +'Form.CodeEditInit.NodeName;'#13#10'    asm'#13#10'      pas.XCode.DoKeyUp(n'
  +'m2+''Contents'',nm2,'''',null);'#13#10'      pas.XCode.DoKeyUp(nm+''Content'
  +'s'',nm,'''',null);'#13#10'    end;'#13#10'    {$endif}'#13#10'  end;'#13#10
  +#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure CompleteToggleToR'
  +'unMode(ok:Boolean);'#13#10'begin'#13#10'  SuppressUserEvents:=false;'#13#10
  +#13#10'  if ok then'#13#10'  begin'#13#10'    asm'#13#10'      console.log('
  +'''CompleteToggleToRunMode calling event OnEnterRunMode'');'#13#10'    end;'
  +#13#10'    {$ifdef Python}'#13#10'    asm'#13#10'    async function waitForN'
  +'ewPackages() {'#13#10'    await loadPyPkgs(doAfterPyPaksLoaded);  //pysrcLo'
  +'aded();  // make sure all required python packages are loaded'#13#10'    }'
  +#13#10'    waitForNewPackages();'#13#10'    function doAfterPyPaksLoaded() {'
  +#13#10'      console.log("doAfterPyPaksLoaded");'#13#10'      testPyPkLoaded'
  +'(''xarray'');'#13#10'    end;'#13#10'    if (PyXUtils.PyPkTest=1) then'#13
  +#10'       BuildXArrays(true);'#13#10'    //exec all defined python scripts'
  +#13#10'    GatherAndRunPythonScriptsLater;'#13#10'    {$endif}'#13#10'    as'
  +'m'#13#10'    myTimeout(pas.Events.handleEvent,5,''handleEvent'',0,null,''On'
  +'EnterRunMode'',pas.NodeUtils.SystemRootName,'''','''');'#13#10'    end;'#13
  +#10'    {$ifdef Python}'#13#10'    asm'#13#10'    }'#13#10'    end;'#13#10' '
  +'   {$endif}'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    // Revert '
  +'to design mode'#13#10'    SetScreenToDesignMode;'#13#10'    DeleteGreyOverl'
  +'ay(''Grey1'');'#13#10'  end;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'proce'
  +'dure ToggleToRunModeAfterCompile(ok:boolean);'#13#10'var'#13#10'  MenuItemN'
  +'ode:TDataNode;'#13#10'  MenuItem,SysMenuItem:TXMenuItem;'#13#10'  v:integer'
  +';'#13#10'begin'#13#10'  MenuItemNode:=FindDataNodeById(UIRootNode,''ToggleD'
  +'esignRunMode'','''',true);'#13#10'  MenuItem:=TXMenuItem(MenuItemNode.Scree'
  +'nObject);'#13#10'  if ok then'#13#10'  begin'#13#10'    // event code has c'
  +'ompiled successfully'#13#10'    DesignMode:=false;'#13#10'    MenuItem.Capt'
  +'ion:=''Design Mode'';'#13#10'    // Hide Object Inspector'#13#10'    ShowHi'
  +'deObjectInspector(false);'#13#10#13#10'    {$ifndef JScript}'#13#10'    //U'
  +'nload the events dll, if previously loaded'#13#10'    if MyLibC <>  DynLibs'
  +'.NilHandle then'#13#10'      if FreeLibrary(MyLibC) then'#13#10'        MyL'
  +'ibC:= DynLibs.NilHandle;'#13#10#13#10'    GlobalSuppressFrameDisplay:=false'
  +';'#13#10'    UnsuspendFrames(SystemNodeTree);'#13#10#13#10'    DoFormResize'
  ,'(MainForm, MainFormTopControl);'#13#10'    TWinControl(MainFormProjectRoot.'
  +'ScreenObject).SetFocus;'#13#10#13#10'    SysMenuItem:=XIDEForm.SystemMenu;'
  +#13#10'    SysMenuItem.IsVisible:=false;'#13#10#13#10'    //GatherSourcedAtt'
  +'ributes(SystemNodeTree);'#13#10'    GatherSourcedAttributes(UIRootNode);'#13
  +#10'    PushAllSourcesToAttributes;'#13#10#13#10'    ok:=BuildLocalDB(StrToI'
  +'nt(UIRootNode.GetAttribute(''DBVersion'',false).AttribValue));'#13#10#13#10
  +'    SuppressUserEvents:=false;'#13#10#13#10'    HandleEventLater(nil,''OnEn'
  +'terRunMode'',SystemRootName,'''','''');'#13#10'    {$ifdef Python}'#13#10' '
  +'   //Clear the python engine and re-initialise'#13#10'    DoPy_InitEngine;'
  +#13#10'    RunInitialScript;'#13#10'    BuildXArrays(true);'#13#10'    //do '
  +'later .... exec all defined python scripts'#13#10'    GatherAndRunPythonScr'
  +'iptsLater;'#13#10'    {$endif}'#13#10'    {$else}'#13#10'    GatherSourcedA'
  +'ttributes(UIRootNode);'#13#10'    PushAllSourcesToAttributes;'#13#10'    v:'
  +'=StrToInt(UIRootNode.GetAttribute(''DBVersion'',false).AttribValue);'#13#10
  +'    asm'#13#10'      ok=pas.XDataModel.BuildLocalDB(v,pas.XObjectInsp.Compl'
  +'eteToggleToRunMode);'#13#10'    end;'#13#10#13#10'    {$endif}'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'    // Pascal compilation of event code '
  +'has failed'#13#10'    SuppressUserEvents:=true;'#13#10'    {$ifndef JScript'
  +'}'#13#10'    DisplayDllCompileErrors;'#13#10'    {$else}'#13#10'    if Runn'
  +'ingDeployedRuntime   then'#13#10'    begin'#13#10'      showmessage(''Unabl'
  +'e to compile event code.  Cannot load this system'');'#13#10'      //!! nee'
  +'d to clear the system here, or something.....'#13#10'      OIClearSystem;'
  +#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      DeleteGreyOverl'
  +'ay(''Grey1'');'#13#10'      DisplayDllCompileErrors;'#13#10'      CodeEditF'
  +'orm.NavigateToFirstError;'#13#10#13#10'    end;'#13#10'    {$endif}'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure ContinueT'
  +'oggleToRunMode;'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10'    // '
  +'Compile the user-created event code, using embedded pas2js compiler'#13#10
  +'    // and generate js'#13#10'    ok:=CompileEventCode(CodeEditForm.CodeEdi'
  +'t,''JSJS'');'#13#10'    //asm console.log(''calling ToggleToRunModeAfterCom'
  +'pile''); end;'#13#10'    ToggleToRunModeAfterCompile(ok);'#13#10'    {$ifnd'
  +'ef Python}'#13#10'    DeleteGreyOverlay(''Grey1'');'#13#10'    {$endif}'#13
  +#10'end;'#13#10'{$endif}'#13#10#13#10'procedure SetScreenToDesignMode;'#13#10
  +'var'#13#10'  MenuItemNode:TDataNode;'#13#10'  MenuItem:TXMenuItem;'#13#10'b'
  +'egin'#13#10'  MenuItemNode:=FindDataNodeById(UIRootNode,''ToggleDesignRunMo'
  +'de'','''',true);'#13#10'  MenuItem:=TXMenuItem(MenuItemNode.ScreenObject);'
  +#13#10'  DesignMode:=true;'#13#10'  SuppressUserEvents:=true;'#13#10'  SetLe'
  +'ngth(SourcedAttribs,0);        // keep these during design mode !!!!????'#13
  +#10'  MenuItem.Caption:=''Run Mode'';'#13#10'  XIDEForm.SystemMenu.IsVisible'
  +':=true;'#13#10'  // Show Object Inspector'#13#10'  ShowHideObjectInspector('
  +'true);'#13#10'  {$ifndef JScript}'#13#10'  GlobalSuppressFrameDisplay:=true'
  +';'#13#10'  DoFormResize(MainForm,MainFormTopControl);'#13#10'  {$endif}'#13
  +#10#13#10'end;'#13#10#13#10'procedure DoToggleDesignRunMode(Sender:TXMenuIte'
  +'m);'#13#10'var'#13#10'  ok:Boolean;'#13#10'  GPUNodes:TNodesArray;'#13#10' '
  +' i:integer;'#13#10'begin'#13#10'  ok:=true;'#13#10#13#10'  if (DesignMode=t'
  +'rue)'#13#10'  then'#13#10'  begin'#13#10'    // Go to Run Mode'#13#10'    E'
  +'ditAttributeValue(''XMemo1'','''',''ItemValue'','''',false);'#13#10'    {$i'
  +'fdef Python}'#13#10'    PyScriptsExecuted:=false;'#13#10#13#10'    if (PyMe'
  +'moComponent<>nil)'#13#10'    and (assigned(PyMemoComponent)) then'#13#10'  '
  +'  begin'#13#10'      PyMemoComponent.ItemValue:='''';'#13#10'    end;'#13#10
  +'    {$endif}'#13#10#13#10'    SetLength(SourcedAttribs,0);'#13#10'    {$ifn'
  +'def JScript}'#13#10'    // Check pas2js Compilation of the user-created eve'
  +'nt code first.'#13#10'    ok:=CompileEventCode(CodeEditForm.CodeEdit,''LazJ'
  +'S'');'#13#10'    if ok then'#13#10'    begin'#13#10'      // Now Compile th'
  +'e user-created event code into the dll.'#13#10'      ok:=CompileEventCode(C'
  +'odeEditForm.CodeEdit,''LazDll'');'#13#10'      ToggleToRunModeAfterCompile('
  +'ok);'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      DisplayDl'
  +'lCompileErrors;'#13#10'    end;'#13#10'    {$else}'#13#10'    RunModeAttemp'
  +'ts:=RunModeAttempts+1;'#13#10'    for i:=length(OpenXForms)-1 downto 0 do'
  +#13#10'    begin'#13#10'      if OpenXForms[i].NameSpace='''' then'#13#10'  '
  +'      CloseXFormForDesign(OpenXForms[i].NodeName);'#13#10'    end;'#13#10#13
  +#10'    {$ifdef Python}'#13#10'    asm'#13#10'      if (readyForRunMode==fal'
  +'se) {'#13#10'        if (pas.XObjectInsp.RunModeAttempts>3) {'#13#10'      '
  +'    alert(''Pyodide still not ready. Please check console for possible prob'
  ,'lems.'');'#13#10'        }'#13#10'        else {'#13#10'          alert(''P'
  +'yodide is not ready. Please wait and try again.'');'#13#10'        }'#13#10
  +'        ok = false;'#13#10'      }'#13#10'    end;'#13#10'    {$endif}'#13
  +#10'    if ok then'#13#10'    begin'#13#10'      RunModeAttempts:=0;'#13#10
  +'      ShowGreyOverlay(SystemRootName,''Grey1'',''Compiling System. Please W'
  +'ait...'');'#13#10'      // timeout here so the grey overlay appears'#13#10
  +'      asm'#13#10'        myTimeout(pas.XObjectInsp.ContinueToggleToRunMode,'
  +'5,''ContinueToggleToRunMode'',0);'#13#10'      end;'#13#10'    end;'#13#10
  +'    {$endif}'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    // Go to '
  +'Design Mode'#13#10'    PyScriptsExecuted:=false;'#13#10'    if StartingUp=f'
  +'alse then'#13#10'    begin'#13#10'      // First, STOP any running GPU comp'
  +'onents'#13#10'      GPUNodes:=FindNodesOfType(UIRootNode,''TXGPUCanvas'');'
  +#13#10'      for i:=0 to length(GPUNodes)-1 do'#13#10'      begin'#13#10'   '
  +'     if GPUNodes[i].ScreenObject<>nil then'#13#10'        begin'#13#10'    '
  +'      //showmessage(''stopping gpu ''+GPUNodes[i].NodeName);'#13#10'       '
  +'   TXGPUCanvas(GPUNodes[i].ScreenObject).Active:=false;'#13#10'        end;'
  +#13#10'      end;'#13#10'    end;'#13#10'    {$ifdef JScript}'#13#10'    if '
  +'RunningDeployedRuntime then'#13#10'    begin'#13#10'      showmessage(''Des'
  +'ign Mode not available'');'#13#10'      EXIT;'#13#10'    end;'#13#10'    {$'
  +'endif}'#13#10#13#10'    HandleEvent(nil,''OnExitRunMode'',SystemRootName,'''
  +''','''');'#13#10#13#10'    SaveLocalDB;'#13#10'    CloseLocalDB;'#13#10#13
  +#10'    SetScreenToDesignMode;'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10
  +#13#10'procedure EditResourceAttributeValue(NodeName,AttrName,NewValue:strin'
  +'g);'#13#10'// Editing a node in  the Resources Navigator tree'#13#10'var'#13
  +#10'   myNode:TDataNode;'#13#10'   myAttrib:TNodeAttribute;'#13#10'begin'#13
  +#10'   // find the given node'#13#10'   myNode:=FindDataNodeById(ResourcesNo'
  +'deTree,NodeName,'''',true);'#13#10'   if myNode<>nil then'#13#10'   begin'
  +#13#10'     myAttrib:=myNode.GetAttribute(AttrName,false);'#13#10'     if my'
  +'Attrib.AttribValue<>NewValue then'#13#10'     begin'#13#10'       // update'
  +' the attribute value'#13#10'       myNode.SetAttributeValue(AttrName,NewVal'
  +'ue);'#13#10'     end;'#13#10'   end;'#13#10'end;'#13#10#13#10'procedure Edi'
  +'tEventCode(NodeNameToEdit,EventToEdit,MainCode,InitCode:String);'#13#10'var'
  +#13#10'  targetNode:TDataNode;'#13#10'  i:integer;'#13#10'begin'#13#10'  //t'
  +'argetNode:=FindDataNodeById(SystemNodetree,NodeNameToEdit,'''',true);'#13#10
  +'  targetNode:=FindDataNodeById(UIRootNode,NodeNameToEdit,'''',true);'#13#10
  +#13#10'  for i:=0 to targetNode.myEventTypes.count-1 do'#13#10'  begin'#13#10
  +'    if targetNode.myEventTypes[i] = EventToEdit then'#13#10'    begin'#13#10
  +'      targetNode.myEventHandlers[i].TheCode:=MainCode;'#13#10'      targetN'
  +'ode.myEventHandlers[i].InitCode:=InitCode;'#13#10'    end;'#13#10'  end;'#13
  +#10#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.TestButtonClick(e:TEve'
  +'ntStatus;nodeId:string;myValue:string);'#13#10'begin'#13#10'            //s'
  +'howmessage(''OIEditProperty ''+nodeId+'' ''+myValue);'#13#10'            Ed'
  +'itAttributeValue(''TestDynamic1'','''',''Caption'',''dynamic event ok'');'
  +#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.OIEditPropertyButtonClick'
  +'(e:TEventStatus;nodeId:string;myValue:string);'#13#10'var'#13#10'  bits:TSt'
  +'ringList;'#13#10'  NodeNameToEdit,PropertyToEdit, EditBoxName, SourceName:S'
  +'tring;'#13#10'  targetNode:TDataNode;'#13#10'  targetAttribute:TNodeAttribu'
  +'te;'#13#10'begin'#13#10'  bits:=stringsplit(nodeId,AttributeEditorNameDelim'
  +'iter);'#13#10'  if bits.Count = 4 then'#13#10'  begin'#13#10'    if (bits[0'
  +']=''OI'') or (bits[0]=''RI'') or (bits[0]=''DM'') then       // OI, Editbox'
  +'name, NodeName, suffix'#13#10'    begin'#13#10'      NodeNameToEdit:=bits[1'
  +'];'#13#10'      PropertyToEdit:=bits[2];'#13#10'    end;'#13#10'  end;'#13
  +#10#13#10'  if  (bits[0]<>''DM'') then'#13#10'    targetNode:=FindDataNodeBy'
  +'Id(UIRootNode,NodeNameToEdit,'''',true)'#13#10'  else'#13#10'    targetNode'
  +':=FindDataNodeById(DMRoot,NodeNameToEdit,'''',true);'#13#10'  if targetNode'
  +'=nil then'#13#10'    EXIT;'#13#10'  targetAttribute:= targetNode.GetAttribu'
  +'te(PropertyToEdit,false);'#13#10#13#10'  if ((targetNode.NodeType<>''TXGPUC'
  +'anvas'')'#13#10'  or ((targetAttribute.AttribName<>''AnimationCode'') and ('
  +'targetAttribute.AttribName<>''InitStageData'')))'#13#10'  and ((targetNode.'
  +'NodeType<>''DMOp'') or (targetAttribute.AttribName<>''Code'')) then'#13#10
  +'  begin'#13#10'    // pop up the property editor.'#13#10'    PropertyEditFo'
  +'rm.TargetNode:=targetNode;'#13#10'    PropertyEditForm.TargetAttribute:=tar'
  +'getAttribute;'#13#10#13#10'    // show validation details (eg range, functi'
  +'on,...) according to type....'#13#10'    // and display data source details'
  ,'...'#13#10'    PropertyEditForm.PropertyEditName.ItemValue:=PropertyToEdit;'
  +#13#10'    PropertyEditForm.PropertyEditType.ItemValue:=targetAttribute.Attr'
  +'ibType;'#13#10'    PropertyEditForm.PropertyEditTabSheet3.IsVisible:=true;'
  +#13#10'    if targetNode.NodeType = ''TXCompositeIntf'' then'#13#10'    begi'
  +'n'#13#10'      PropertyEditForm.PropertyEditHint.IsVisible:=true;'#13#10'  '
  +'    PropertyEditForm.PropertyEditHint.ItemValue:=targetAttribute.AttribHint'
  +';'#13#10'      if targetAttribute.AttribReadOnly=true then'#13#10'        P'
  +'ropertyEditForm.PropertyEditTabSheet3.IsVisible:=false;'#13#10'    end'#13
  +#10'    else'#13#10'      PropertyEditForm.PropertyEditHint.IsVisible:=false'
  +';'#13#10'    SourceName:=targetAttribute.AttribSource.InputNodeName;'#13#10
  +'    if targetAttribute.AttribSource.InputAttribName<>'''' then'#13#10'    b'
  +'egin'#13#10'      SourceName:=SourceName+''.''+targetAttribute.AttribSource'
  +'.InputAttribName;'#13#10'//      showmessage(''This attribute has source '''
  +'+SourceName);'#13#10'    end;'#13#10'    PropertyEditForm.PropertyEditSourc'
  +'eBox.ItemValue:=SourceName;'#13#10'    // PropertyEditBox is the editbox (o'
  +'r combobox, checkbox etc) in the object inspector...'#13#10'    // associat'
  +'ed EditBox has same name, minus the Btn suffix...'#13#10'    EditBoxName:=b'
  +'its[0]+AttributeEditorNameDelimiter'#13#10'                 +NodeNameToEdit'
  +'+AttributeEditorNameDelimiter'#13#10'                 +PropertyToEdit+Attri'
  +'buteEditorNameDelimiter'#13#10'                 +myStringReplace(bits[3],'''
  +'Btn'','''',1,9999);         //myStringReplace(nodeId,''Btn'','''',1,9999);'
  +#13#10'    //if bits[0]=''DM'' then'#13#10'    //  PropertyEditBox:=FindData'
  +'NodeById(DMAttribsNode,EditBoxName,'''',true)'#13#10'    //else'#13#10'    '
  +'  PropertyEditBox:=FindDataNodeById(OITabs,EditBoxName,'''',true);'#13#10#13
  +#10'    PropertyEditForm.SetupPages;'#13#10'    ShowXForm(''PropertyEditForm'
  +''',true);'#13#10'  end'#13#10'  else'#13#10'  if (targetNode.NodeType=''DMO'
  +'p'')'#13#10'  and (targetAttribute.AttribName=''Code'') then'#13#10'  begin'
  +#13#10'    ShowDMOpCodeEditor(targetNode,nodeId);'#13#10'  end'#13#10'  else'
  +#13#10'  // Special Case - edit the AnimationCode in a TXGPUCanvas component'
  +' using the dedicated popup editor...'#13#10'  // Special Case - edit the In'
  +'itStageData in a TXGPUCanvas component using the dedicated popup editor...'
  +#13#10'  begin'#13#10'    if targetAttribute.AttribName=''InitStageData'' th'
  +'en'#13#10'      ShowGPUEditor(targetNode,2)'#13#10'    else'#13#10'      Sh'
  +'owGPUEditor(targetNode,0);'#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'pro'
  +'cedure TOIEventWrapper.OIDelPropertyButtonClick(e:TEventStatus;nodeId:strin'
  +'g;myValue:string);'#13#10'var'#13#10'  bits:TStringList;'#13#10'  NodeNameT'
  +'oEdit,PropertyToDelete:String;'#13#10'  targetNode:TDataNode;'#13#10'  targ'
  +'etAttribute:TNodeAttribute;'#13#10'begin'#13#10'  bits:=stringsplit(nodeId,'
  +'AttributeEditorNameDelimiter);'#13#10'  if bits.Count = 4 then'#13#10'  beg'
  +'in'#13#10'    if (bits[0]=''OI'') then       // OI, Editboxname, NodeName, '
  +'suffix'#13#10'    begin'#13#10'      NodeNameToEdit:=bits[1];'#13#10'      '
  +'PropertyToDelete:=bits[2];'#13#10'    end'#13#10'    else'#13#10'      EXIT'
  +';'#13#10'  end'#13#10'  else'#13#10'    EXIT;'#13#10#13#10'  targetNode:=Fi'
  +'ndDataNodeById(UIRootNode,NodeNameToEdit,'''',true);'#13#10'  targetAttribu'
  +'te:= targetNode.GetAttribute(PropertyToDelete,false);'#13#10#13#10'  if (ta'
  +'rgetNode.NodeType=''TXCompositeIntf'') then'#13#10'  begin'#13#10'    targe'
  +'tNode.DeleteAttribute(targetAttribute.AttribName);'#13#10'  end'#13#10'  el'
  +'se'#13#10'    showmessage(''This property cannot be deleted'');'#13#10#13#10
  +'  // refresh the object inspector'#13#10'  RefreshObjectInspectorLater(targ'
  +'etNode);'#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.OIDelEventButto'
  +'nClick(e:TEventStatus;nodeId:string;myValue:string);'#13#10'var'#13#10'  bi'
  +'ts:TStringList;'#13#10'  NodeNameToEdit,EventToDelete:String;'#13#10'  targ'
  +'etNode:TDataNode;'#13#10'begin'#13#10'  bits:=stringsplit(nodeId,AttributeE'
  +'ditorNameDelimiter);'#13#10'  if bits.Count = 4 then'#13#10'  begin'#13#10
  +'    if (bits[0]=''OI'') then       // OI, Editboxname, NodeName, suffix'#13
  +#10'    begin'#13#10'      NodeNameToEdit:=bits[1];'#13#10'      EventToDele'
  +'te:=bits[2];'#13#10'    end'#13#10'    else'#13#10'      EXIT;'#13#10'  end'
  +#13#10'  else'#13#10'    EXIT;'#13#10#13#10'  targetNode:=FindDataNodeById(U'
  +'IRootNode,NodeNameToEdit,'''',true);'#13#10#13#10'  if (targetNode.NodeType'
  +'=''TXCompositeIntf'') then'#13#10'  begin'#13#10'    targetNode.DeleteEvent'
  +'(EventToDelete);'#13#10'  end'#13#10'  else'#13#10'    showmessage(''This e'
  +'vent cannot be deleted'');'#13#10#13#10'  // refresh the object inspector'
  +#13#10'  RefreshObjectInspectorLater(targetNode);'#13#10'end;'#13#10#13#10'p'
  +'rocedure TOIEventWrapper.OIEditProperty(e:TEventStatus;nodeId:string;myValu'
  ,'e:string);'#13#10'var'#13#10'  bits:TStringList;'#13#10'  NodeNameToEdit,At'
  +'trNameToEdit:String;'#13#10'  {$ifdef JScript}'#13#10'  ok:boolean;'#13#10
  +'  {$endif}'#13#10'begin'#13#10'  //showmessage(''OIEditProperty ''+nodeId+'
  +''' ''+myValue);'#13#10'  // fudge...'#13#10'  {$ifdef JScript}'#13#10'  ok:'
  +'=true;'#13#10'  asm'#13#10'    if (myValue==undefined) {ok=false};'#13#10' '
  +' end;'#13#10'  if not ok then EXIT;'#13#10'  {$endif}'#13#10#13#10'  bits:='
  +'stringsplit(nodeId,AttributeEditorNameDelimiter);'#13#10'  if bits.Count = '
  +'4 then'#13#10'  begin'#13#10'    if (bits[0]=''OI'') or (bits[0]=''RI'') or'
  +' (bits[0]=''DM'') then       // OI, Editboxname, NodeName, Attrname, suffix'
  +#13#10'    begin'#13#10'      NodeNameToEdit:=bits[1];'#13#10'      AttrName'
  +'ToEdit:=bits[2];'#13#10'      if bits[0]=''OI'' then'#13#10'      begin'#13
  +#10'        //showmessage(''OIEditProperty ''+nodeId+'' ''+AttrNameToEdit+'''
  +' ''+myValue);'#13#10'        EditAttributeValue(NodeNameToEdit,'''',AttrNam'
  +'eToEdit,myValue);'#13#10'        RefreshObjectInspector(ObjectInspectorSele'
  +'ctedNavTreeNode);'#13#10'      end'#13#10'      else if bits[0]=''DM'' then'
  +#13#10'      begin'#13#10'        EditAttributeValue(NodeNameToEdit,'''',Att'
  +'rNameToEdit,myValue,false,DMRoot);'#13#10'        DMAttribsCrosscheck(NodeN'
  +'ameToEdit);'#13#10'        RebuildDMTreeLater;         //!!!! must do ''lat'
  +'er'' because may be processing eg. combobox event'#13#10'        //RefreshO'
  +'bjectInspector(DMSelectedDataTreeNode);'#13#10'        DMChanged:=true;'#13
  +#10'      end'#13#10'      else'#13#10'        EditResourceAttributeValue(No'
  +'deNameToEdit,AttrNameToEdit,myValue);'#13#10'    end;'#13#10'  end;'#13#10
  +'end;'#13#10#13#10'procedure TOIEventWrapper.OIEditEvent(e:TEventStatus;node'
  +'Id:string;myValue:string);'#13#10'var'#13#10'  bits:TStringList;'#13#10'  N'
  +'odeNameToEdit,EventToEdit,EventInitCode:String;'#13#10'  EventNode:TDataNod'
  +'e;'#13#10'begin'#13#10'      bits:=stringsplit(nodeId,AttributeEditorNameDe'
  +'limiter);'#13#10'      if bits.Count = 4 then'#13#10'      begin'#13#10'   '
  +'     if (bits[0]=''OI'') or (bits[0]=''RI'') then       // OI, Editboxname,'
  +' NodeName, suffix'#13#10'        begin'#13#10'          NodeNameToEdit:=bit'
  +'s[1];'#13#10'          EventToEdit:=bits[2];'#13#10'          EventNode:=Fi'
  +'ndDataNodeById(UIRootNode,NodeNameToEdit,'''',true);'#13#10'          Event'
  +'InitCode:=EventNode.GetEventCode(EventToEdit);'#13#10'          //showmessa'
  +'ge(''OIEditEvent ''+nodeId+'' ''+myValue);'#13#10'          EditEventCode(N'
  +'odeNameToEdit,EventToEdit,myValue,EventInitCode);'#13#10'        end;'#13#10
  +'      end;'#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.CloseGPUEdito'
  +'r(e:TEventStatus;nodeId:string;myValue:string);'#13#10'begin'#13#10'  GPUEv'
  +'ents.CloseCodeEditor(e,nodeId,myValue);'#13#10'  if ObjectInspectorSelected'
  +'NavTreeNode<>nil then'#13#10'    RefreshObjectInspector(ObjectInspectorSele'
  +'ctedNavTreeNode);'#13#10'end;'#13#10#13#10'procedure CodeEditorClosed(EditB'
  +'oxNode:TdataNode);'#13#10'var'#13#10'  tmp:string;'#13#10'  CodeNode:TDataN'
  +'ode;'#13#10'begin'#13#10'  //showmessage(''CodeEditorClosed. Mode=''+CodeEd'
  +'itForm.Mode+'' return status ''+ CodeEditStatus);'#13#10'  if CodeEditStatu'
  +'s = ''ok'' then'#13#10'  begin'#13#10'    tmp:=CodeEditForm.CodeEdit.ItemVa'
  +'lue;'#13#10'    if CodeEditForm.Mode=''EventCode'' then'#13#10'    begin'#13
  +#10'      if EditBoxNode<>nil then'#13#10'         // set value of the assoc'
  +'iated edit box'#13#10'         TXEditBox(EditBoxNode.ScreenObject).ItemValu'
  +'e:=CodeEditForm.CodeEdit.ItemValue;'#13#10'         // nb. above doesn''t t'
  +'rigger the onchange event for the edit box.'#13#10'      // update the Code'
  +' data...'#13#10'      EditEventCode(CodeEditForm.TargetNodeName,CodeEditFor'
  +'m.EventType,CodeEditForm.CodeEdit.ItemValue,'#13#10'                       '
  +'                                                CodeEditForm.CodeEditInit.I'
  +'temValue);'#13#10'      if ObjectInspectorSelectedNavTreeNode<>nil then'#13
  +#10'        RefreshObjectInspector(ObjectInspectorSelectedNavTreeNode);'#13
  +#10#13#10'    end'#13#10'    else if (CodeEditForm.Mode=''UnitCode'')'#13#10
  +'      or (CodeEditForm.Mode=''PasUnitCode'')'#13#10'      or (CodeEditForm.'
  +'Mode=''PythonScriptCode'')'#13#10'      or (CodeEditForm.Mode=''DMOpCode'')'
  +#13#10'    then'#13#10'    begin'#13#10'      tmp:=CodeEditForm.TargetNodeNa'
  +'me;'#13#10'      // name of unit is in TargetNodeName'#13#10'      if (Code'
  +'EditForm.Mode=''DMOpCode'') then'#13#10'        CodeNode:=FindDataNodeById('
  +'DMRoot,CodeEditForm.TargetNodeName,'''',true)'#13#10'      else'#13#10'    '
  +'    CodeNode:=FindDataNodeById(CodeRootNode,CodeEditForm.TargetNodeName,'''
  +''',true);'#13#10'      tmp:=CodeEditForm.CodeEdit.ItemValue;'#13#10'      C'
  +'odeNode.SetAttributeValue(''Code'',tmp,''String'');'#13#10'    end'#13#10' '
  +'   else if (CodeEditForm.Mode=''SearchCode'')  then'#13#10'    begin'#13#10
  ,'      // do nothing'#13#10'    end;'#13#10#13#10'    RebuildCodeTree;'#13#10
  +'  end;'#13#10'  OIEditBox:=nil;'#13#10'end;'#13#10#13#10'procedure Property'
  +'EditorClosed(EditBoxNode:TdataNode);'#13#10'var'#13#10'  tmp:string;'#13#10
  +'  SourceBits:TStringList;'#13#10'  SourceNode, SourceAttrib, NewValue:Strin'
  +'g;'#13#10'  EditNode:TDataNode;'#13#10'begin'#13#10'  if PropertyEditStatus'
  +' = ''ok'' then'#13#10'  begin'#13#10'    EditNode:= PropertyEditForm.EditNo'
  +'de;'#13#10'    // Set the value of TargetAttribute from the widget on the E'
  +'dit tabpage...'#13#10'    if EditNode.NodeType=''TXEditBox'' then'#13#10'  '
  +'    NewValue:=EditNode.GetAttribute(''ItemValue'',false).AttribValue'#13#10
  +'    else if EditNode.NodeType=''TXMemo'' then'#13#10'      NewValue:=EditNo'
  +'de.GetAttribute(''ItemValue'',false).AttribValue'#13#10'    else if EditNod'
  +'e.NodeType=''TXTree'' then'#13#10'      NewValue:=TXTree(EditNode.ScreenObj'
  +'ect).buildTreeDataString'#13#10'      //NewValue:=EditNode.GetAttribute(''T'
  +'reeData'',false).AttribValue'#13#10'    else if EditNode.NodeType=''TXTable'
  +''' then'#13#10'    begin'#13#10'      NewValue:=EditNode.GetAttribute(''Tab'
  +'leData'',false).AttribValue;'#13#10'      PropertyEditForm.TargetAttribute.'
  +'AttribValue:= NewValue;'#13#10'      if PropertyEditForm.TargetAttribute.At'
  +'tribName=''TableData'' then'#13#10'      begin'#13#10'        PropertyEditF'
  +'orm.TargetNode.SetAttributeValue(''NumRows'',EditNode.GetAttribute(''NumRow'
  +'s'',false).AttribValue);'#13#10'        PropertyEditForm.TargetNode.SetAttr'
  +'ibuteValue(''NumCols'',EditNode.GetAttribute(''NumCols'',false).AttribValue'
  +');'#13#10'      end;'#13#10'    end'#13#10'    else if EditNode.NodeType='''
  +'TXCheckBox'' then'#13#10'      NewValue:=EditNode.GetAttribute(''Checked'','
  +'false).AttribValue'#13#10'    else if EditNode.NodeType=''TXComboBox'' then'
  +#13#10'      NewValue:=EditNode.GetAttribute(''ItemValue'',false).AttribValu'
  +'e'#13#10'    else if EditNode.NodeType=''TXColorPicker'' then'#13#10'      '
  +'NewValue:=EditNode.GetAttribute(''ItemValue'',false).AttribValue;'#13#10#13
  +#10'    // Update the property value in the target node...'#13#10'    if (Pr'
  +'opertyEditForm.TargetAttribute.AttribName<>''MapData'')'#13#10'    and (Pro'
  +'pertyEditForm.TargetAttribute.AttribName<>''MapColors'') then'#13#10'      '
  +'PropertyEditForm.TargetAttribute.AttribValue:= NewValue;'#13#10'    EditAtt'
  +'ributeValue(PropertyEditForm.TargetNode,PropertyEditForm.TargetAttribute.At'
  +'tribName,NewValue);'#13#10'    //if PropertyEditForm.TargetNode.NodeClass='
  +'''DM'' then'#13#10'    //  DMChanged:=true;'#13#10#13#10'    // Set the dat'
  +'a source for the property, if specified...'#13#10'    tmp:=trim(PropertyEdi'
  +'tForm.PropertyEditSourceBox.ItemValue);'#13#10'    if tmp<>'''' then'#13#10
  +'    begin'#13#10'      SourceBits:=stringsplit(tmp,''.'');'#13#10'      Sou'
  +'rceNode:=SourceBits[0];'#13#10'      if SourceBits.Count>1 then'#13#10'    '
  +'    SourceAttrib:=SourceBits[1];'#13#10'      PropertyEditForm.TargetNode.S'
  +'etAttributeSource(PropertyEditForm.TargetAttribute.AttribName,SourceNode,'''
  +''',SourceAttrib);'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'  '
  +'    PropertyEditForm.TargetNode.SetAttributeSource(PropertyEditForm.TargetA'
  +'ttribute.AttribName,'''','''','''');'#13#10'    end;'#13#10#13#10'    if Pr'
  +'opertyEditForm.TargetNode.NodeType = ''TXCompositeIntf'' then'#13#10'    be'
  +'gin'#13#10'      PropertyEditForm.TargetAttribute.AttribHint:=PropertyEditF'
  +'orm.PropertyEditHint.ItemValue;'#13#10'    end;'#13#10#13#10'    RefreshObj'
  +'ectInspector(PropertyEditForm.TargetNode);'#13#10'  end;'#13#10'  PropertyE'
  +'ditBox:=nil;'#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.OIEditEvent'
  +'CodeFromCodeTree(NodeNameToEdit:string;EventToEdit:string);'#13#10'var'#13
  +#10'  EventCode, EventInitCode:string;'#13#10'  targetNode:TDataNode;'#13#10
  +'begin'#13#10'  // pop up the syntax editor.'#13#10'  OIEditBox:=nil;'#13#10
  +'  targetNode:=FindDataNodeById(UIRootNode,NodeNameToEdit,'''',true);'#13#10
  +'  EventCode:=targetNode.GetEventCode(EventToEdit);'#13#10'  EventInitCode:='
  +'targetNode.GetEventInitCode(EventToEdit);'#13#10'  if Trim(EventCode)='''' '
  +'then'#13#10'  begin'#13#10'    // provide a template event procedure'#13#10
  +'    EventCode:= ''begin'' + LineEnding +'#13#10'                '' '' + Lin'
  +'eEnding +'#13#10'                ''end;'' + LineEnding;'#13#10'  end;'#13#10
  +'  CodeEditForm.CodeEdit.ItemValue := EventCode;'#13#10'  CodeEditForm.CodeE'
  +'ditInit.ItemValue := EventInitCode;'#13#10'  //EventNum:=targetNode.EventNu'
  +'m(EventToEdit);'#13#10'  CodeEditForm.CodeEdit.MessageLines:='''';'#13#10' '
  +' CodeEditForm.CodeEditInit.MessageLines:='''';'#13#10#13#10'  CodeEditForm.'
  +'CodeEditMainTabs.TabIndex:=0;'#13#10'  CodeEditForm.Mode:=''EventCode'';'#13
  +#10'  CodeEditForm.InitialiseOnShow(''Event Handler'',NodeNameToEdit,EventTo'
  +'Edit);'#13#10'  ShowXForm(''CodeEditForm'',true);'#13#10#13#10'end;'#13#10
  ,#13#10'procedure TOIEventWrapper.OIEditEventCode(e:TEventStatus;nodeId:strin'
  +'g;myValue:string);'#13#10'var'#13#10'  EditBoxName, EventCode:string;'#13#10
  +'  bits:TStringList;'#13#10'  NodeNameToEdit,EventToEdit:String;'#13#10'  ta'
  +'rgetNode:TDataNode;'#13#10'begin'#13#10'  bits:=stringsplit(nodeId,Attribut'
  +'eEditorNameDelimiter);'#13#10'  if bits.Count = 4 then'#13#10'  begin'#13#10
  +'    if (bits[0]=''OI'') or (bits[0]=''RI'') then       // OI, Editboxname, '
  +'NodeName, suffix'#13#10'    begin'#13#10'      NodeNameToEdit:=bits[1];'#13
  +#10'      EventToEdit:=bits[2];'#13#10'    end;'#13#10'  end;'#13#10'  bits.'
  +'Free;'#13#10'  // pop up the syntax editor.'#13#10'  // remove the ''Btn'' '
  +'suffix'#13#10'  EditBoxName:=Copy(nodeId,1,length(nodeId)-3);'#13#10'  OIEd'
  +'itBox:=FindDataNodeById(UIRootNode,EditBoxName,'''',true);'#13#10'  EventCo'
  +'de:=TXEditBox(OIEditBox.ScreenObject).ItemValue;'#13#10'  if Trim(EventCode'
  +')='''' then'#13#10'  begin'#13#10'    // provide a template event procedure'
  +#13#10'    if (FoundString(EventToEdit,''Thread'')=1)'#13#10'    and (FoundS'
  +'tring(EventToEdit,''ThreadVars'')<>1) then'#13#10'      EventCode:= DfltThr'
  +'eadEventCode(NodeNameToEdit)'#13#10'    else if (EventToEdit=''DropAccepted'
  +''') then'#13#10'      EventCode := DfltTreeNodeEventCode'#13#10'    else'#13
  +#10'      EventCode:= DfltEventCode;'#13#10'  end;'#13#10'  CodeEditForm.Cod'
  +'eEdit.ItemValue := EventCode;'#13#10'  targetNode:=FindDataNodeById(UIRootN'
  +'ode,NodeNameToEdit,'''',true);'#13#10'  CodeEditForm.CodeEditInit.ItemValue'
  +' := targetNode.GetEventInitCode(EventToEdit);'#13#10#13#10'  CodeEditForm.C'
  +'odeEdit.MessageLines:='''';'#13#10'  CodeEditForm.CodeEditInit.MessageLines'
  +':='''';'#13#10#13#10'  CodeEditForm.Mode:=''EventCode'';'#13#10'  CodeEditF'
  +'orm.CodeEditMainTabs.TabIndex:=0;'#13#10'  CodeEditForm.InitialiseOnShow('''
  +'Event Handler'',NodeNameToEdit,EventToEdit);'#13#10#13#10'  ShowXForm(''Cod'
  +'eEditForm'',true);'#13#10#13#10'end;'#13#10#13#10'procedure TOIEventWrapper'
  +'.OIEditIntfEvent(e:TEventStatus;nodeId:string;myValue:string);'#13#10'var'
  +#13#10'  bits:TStringList;'#13#10'  targetNode:TDataNode;'#13#10'  NodeNameT'
  +'oEdit,EventNameToEdit:String;'#13#10'  EventToEdit:TEventHandlerRec;'#13#10
  +'begin'#13#10'  bits:=stringsplit(nodeId,AttributeEditorNameDelimiter);'#13
  +#10'  if bits.Count = 4 then'#13#10'  begin'#13#10'    if (bits[0]=''OI'') o'
  +'r (bits[0]=''RI'') then       // OI, Editboxname, NodeName, suffix'#13#10' '
  +'   begin'#13#10'      NodeNameToEdit:=bits[1];'#13#10'      EventNameToEdit'
  +':=bits[2];'#13#10'    end;'#13#10'  end;'#13#10'  bits.Free;'#13#10'  targe'
  +'tNode:=FindDataNodeById(UIRootNode,NodeNameToEdit,'''',true);'#13#10'  if t'
  +'argetNode<>nil then'#13#10'  begin'#13#10'    EventToEdit:=targetNode.GetEv'
  +'ent(EventNameToEdit);'#13#10'    if EventToEdit<>nil then'#13#10'    begin'
  +#13#10'      IntfEventUnit.EventToEdit:=EventToEdit;'#13#10'      IntfEventU'
  +'nit.IntfEventForm.IntfEventName.ItemValue:=EventNameToEdit;'#13#10'      In'
  +'tfEventUnit.IntfEventForm.IntfEventName.ReadOnly:=true;'#13#10'      if Eve'
  +'ntToEdit.ReadOnlyInterface=true then'#13#10'        IntfEventUnit.IntfEvent'
  +'Form.IntfEventType.ItemValue:=''Read-Only'''#13#10'      else'#13#10'      '
  +'  IntfEventUnit.IntfEventForm.IntfEventType.ItemValue:=''Editable'';'#13#10
  +' //     IntfEventUnit.IntfEventForm.IntfEventType.Enabled:=false;'#13#10'  '
  +'    IntfEventUnit.IntfEventForm.IntfEventHint.ItemValue:=EventToEdit.EventH'
  +'int;'#13#10'      ShowXForm(''IntfEventForm'',true);'#13#10'    end;'#13#10
  +'  end;'#13#10'end;'#13#10#13#10#13#10'{$ifdef JScript}'#13#10'procedure TOI'
  +'EventWrapper.OIPasteTarget(e:TEventStatus;nodeId:string;myValue:string);'#13
  +#10'var'#13#10'  i:integer;'#13#10'  PasteEvent:TEventStatus;'#13#10'begin'
  +#13#10'//  happens when user hits ctrl-V on the paste dialog form'#13#10#13
  +#10'  PasteEvent:=PasteDialogUnit.CompletionEvent;'#13#10#13#10'  if PasteEv'
  +'ent<>nil then'#13#10'  begin'#13#10'    PasteEvent.ClearAsync(''CopyFromCli'
  +'p'');'#13#10'  end;'#13#10'  FinishHTMLPasteAction(myValue);'#13#10#13#10'e'
  +'nd;'#13#10'{$endif}'#13#10#13#10#13#10#13#10'function OITreeNodeHint(TreeLa'
  +'belStr:String):String;'#13#10'var'#13#10'   SystemNodeName,p1:string;'#13#10
  +'begin'#13#10'  //showmessage(''OINodeTreeHint ''+TreeLabelStr);'#13#10'  Sy'
  +'stemNodeName:=TreeLabelToID( TreeLabelStr,''NavTree'',p1);'#13#10'  //resul'
  +'t := GetNavigatorHint(SystemNodeTree,SystemNodeName);'#13#10'  result := Ge'
  +'tNavigatorHint(UIRootNode,SystemNodeName);'#13#10'end;'#13#10#13#10'functio'
  +'n OIResTreeNodeHint(TreeLabelStr:String):String;'#13#10'var'#13#10'   Syste'
  +'mNodeName,p1:string;'#13#10'begin'#13#10'  SystemNodeName:=TreeLabelToID( T'
  +'reeLabelStr,''ResourceTree'',p1);'#13#10'  result := GetNavigatorHint(Syste'
  +'mNodeTree,SystemNodeName);'#13#10'end;'#13#10#13#10'procedure AddPropertyEd'
  +'itButton(BoxName:String; HBoxNode:TDataNode;CannotEdit:Boolean);'#13#10'// '
  ,'                    HBox     <name>HB'#13#10'//                       widge'
  +'t   <name>'#13#10'//                       Button    <name>Btn'#13#10'var'
  +#13#10'  NewBtn:TXButton;'#13#10'begin'#13#10'    NewBtn:=TXButton(AddDynami'
  +'cWidget(''TXButton'',MainForm,HBoxNode,BoxName+''Btn'','''',''Top'',-1).Scr'
  +'eenObject);'#13#10'    NewBtn.ButtonWidth:=''30px'';'#13#10'    NewBtn.Spac'
  +'ingAround:=0;'#13#10#13#10'    if CannotEdit then'#13#10'    begin'#13#10' '
  +'     NewBtn.Caption:='' '';'#13#10'      NewBtn.Enabled:=false'#13#10'    e'
  +'nd'#13#10'    else'#13#10'    begin'#13#10'      NewBtn.Caption:=''...'';'
  +#13#10'      NewBtn.Hint:=''Edit Property'';'#13#10'      NewBtn.myNode.Regi'
  +'sterEvent(''ButtonClick'',@OIEventWrapper.OIEditPropertyButtonClick);'#13#10
  +'    end;'#13#10'end;'#13#10#13#10'procedure AddPropertyDelButton(BoxName:St'
  +'ring; HBoxNode:TDataNode);'#13#10'//                     HBox     <name>HB'
  +#13#10'//                       widget   <name>'#13#10'//                   '
  +'    editButton    <name>Btn'#13#10'//                       delButton    <n'
  +'ame>DelBtn'#13#10'var'#13#10'  NewBtn:TXButton;'#13#10'begin'#13#10'    New'
  +'Btn:=TXButton(AddDynamicWidget(''TXButton'',MainForm,HBoxNode,BoxName+''Del'
  +'Btn'','''',''Top'',-1).ScreenObject);'#13#10'    NewBtn.ButtonWidth:=''30px'
  +''';'#13#10'    NewBtn.SpacingAround:=0;'#13#10#13#10'    NewBtn.Caption:='''
  +'Del'';'#13#10'    NewBtn.Hint:=''Delete Property'';'#13#10'    NewBtn.myNod'
  +'e.RegisterEvent(''ButtonClick'',@OIEventWrapper.OIDelPropertyButtonClick);'
  +#13#10'end;'#13#10#13#10'procedure AddEventDelButton(BoxName:String; HBoxNod'
  +'e:TDataNode);'#13#10'//                     HBox     <name>HB'#13#10'//    '
  +'                   widget   <name>'#13#10'//                       editButt'
  +'on    <name>Btn'#13#10'//                       delButton    <name>DelBtn'
  +#13#10'var'#13#10'  NewBtn:TXButton;'#13#10'begin'#13#10'    NewBtn:=TXButto'
  +'n(AddDynamicWidget(''TXButton'',MainForm,HBoxNode,BoxName+''DelBtn'','''','
  +'''Top'',-1).ScreenObject);'#13#10'    NewBtn.ButtonWidth:=''30px'';'#13#10
  +'    NewBtn.SpacingAround:=0;'#13#10#13#10'    NewBtn.Caption:=''Del'';'#13
  +#10'    NewBtn.Hint:=''Delete Event'';'#13#10'    NewBtn.myNode.RegisterEven'
  +'t(''ButtonClick'',@OIEventWrapper.OIDelEventButtonClick);'#13#10'end;'#13#10
  +#13#10'function AddPropertyContainer(ParentNode:TDataNode;BoxName:String; va'
  +'r VBoxNode,HBoxNode:TdataNode):TXHbox;'#13#10'var'#13#10'  NewHBox:TXHBox;'
  +#13#10'  NewVBox:TXVBox;'#13#10'   //                   VBox     <name>VB'#13
  +#10'   //                     HBox     <name>HB'#13#10'begin'#13#10'  VBoxNo'
  +'de:=AddDynamicWidget(''TXVBox'',MainForm,ParentNode,BoxName+''VB'','''',''L'
  +'eft'',-1);'#13#10'  NewVBox:=TXVBox(VBoxNode.ScreenObject);'#13#10'  HBoxNo'
  +'de:=AddDynamicWidget(''TXHBox'',MainForm,VBoxNode,BoxName+''HB'','''',''Rig'
  +'ht'',-1);'#13#10'  NewHBox:=TXHBox(HBoxNode.ScreenObject);'#13#10#13#10'  N'
  +'ewVBox.Border:=false;'#13#10'  NewVBox.ContainerHeight:='''';'#13#10'  NewV'
  +'Box.ContainerWidth:=''96%'';'#13#10'  NewHBox.Border:=false;'#13#10'  NewHB'
  +'ox.ContainerHeight:='''';'#13#10'  NewHBox.ContainerWidth:='''';'#13#10#13
  +#10'  NewHBox.Alignment:=''Right'';'#13#10#13#10'  result:=NewHBox;'#13#10'e'
  +'nd;'#13#10#13#10'procedure AddCheckBox(PropertiesNode,TargetNode:TDataNode;'
  +'BoxName,LblText,ItmValue:String;ro:Boolean;attribHint:String);'#13#10'var'
  +#13#10'  NewCheckBox:TXCheckBox;'#13#10'  NewHBox:TXHBox;'#13#10'  HBoxNode,'
  +' VBoxNode:TDataNode;'#13#10'begin'#13#10'  NewHBox:=AddPropertyContainer(Pr'
  +'opertiesNode,BoxName,VBoxNode,HBoxNode);'#13#10'  NewCheckBox:=TXCheckBox(A'
  +'ddDynamicWidget(''TXCheckBox'',MainForm,HBoxNode,BoxName,'''',''Top'',-1).S'
  +'creenObject);'#13#10#13#10'  if (TargetNode.NodeClass<>''DM'') then'#13#10
  +'    AddPropertyEditButton(BoxName,HBoxNode,ro);'#13#10#13#10'  NewCheckBox.'
  +'Checked:=myStrToBool(ItmValue);'#13#10'  NewCheckBox.LabelText:=LblText;'#13
  +#10'  NewCheckBox.ReadOnly:=ro;'#13#10'  NewCheckBox.LabelPos:=''Left'';'#13
  +#10'  NewCheckBox.Hint:=attribHint;'#13#10#13#10'  NewHBox.Alignment:=''Righ'
  +'t'';'#13#10#13#10'  NewCheckBox.myNode.registerEvent(''Click'',@OIEventWrap'
  +'per.OIEditProperty);'#13#10'end;'#13#10#13#10'procedure AddPropertyEditBox('
  +'ParentNode,TargetNode:TDataNode;BoxName,LblText,ItmValue:String;ro,CanDelet'
  +'e:Boolean;attribHint:String);'#13#10'var'#13#10'  NewEditBox:TXEditBox;'#13
  +#10'  VBoxNode,HBoxNode:TDataNode;'#13#10'  NewHBox:TXHBox;'#13#10'  CannotE'
  +'dit:Boolean;'#13#10'begin'#13#10'  NewHBox:=AddPropertyContainer(ParentNode'
  +',BoxName,VBoxNode,HBoxNode);'#13#10'  NewEditBox:=TXEditBox(AddDynamicWidge'
  +'t(''TXEditBox'',MainForm,HBoxNode,BoxName,'''',''Top'',-1).ScreenObject);'
  +#13#10#13#10'  CannotEdit:=ro;'#13#10'  if CanDelete then'#13#10'    CannotE'
  +'dit:=false;'#13#10#13#10'  if (TargetNode.NodeClass<>''DM'')'#13#10'  or (('
  +'TargetNode.NodeType=''DMOp'') and (LblText=''Code'')) then'#13#10'    AddPr'
  ,'opertyEditButton(BoxName,HBoxNode,CannotEdit);'#13#10'  if CanDelete then'
  +#13#10'    AddPropertyDelButton(BoxName,HBoxNode);'#13#10#13#10'  NewEditBox'
  +'.LabelText:=LblText;'#13#10'  NewEditBox.BoxWidth:=''120px'';'#13#10'  NewE'
  +'ditBox.ReadOnly:=ro;'#13#10'  NewEditBox.LabelPos:=''Left'';'#13#10'  NewEd'
  +'itBox.Hint:=attribHint;'#13#10'  NewHBox.ContainerHeight:='''';'#13#10#13#10
  +'  NewHBox.Alignment:=''Right'';     //!!!! why do I have to set this again '
  +'here, for it to take effect??'#13#10#13#10'  NewEditBox.ItemValue:=ItmValue'
  +';'#13#10#13#10'  // event handler....'#13#10'  // by default, the XEditBox '
  +'has an onExit event handler that calls HandleEvent with an'#13#10'  // even'
  +'t type of ''Change''.'#13#10'  // HandleEvent will expect to find a functio'
  +'n of type TEventHandler defined within the main or popup form, which'#13#10
  +'  // was created at design time in the Lazarus IDE.'#13#10'  // The name of'
  +' the expected function is <EditBoxName>HandleChange.'#13#10'  // HOWEVER - '
  +'Here, where the editbox is dynamically created,'#13#10'  // have to registe'
  +'r an event in the data node instead.'#13#10'  NewEditBox.myNode.registerEve'
  +'nt(''Change'',@OIEventWrapper.OIEditProperty);'#13#10'end;'#13#10#13#10'pro'
  +'cedure AddPropertyColorPicker(ParentNode,TargetNode:TDataNode;BoxName,LblTe'
  +'xt,ItmValue:String;ro:Boolean;IsResource:Boolean;attribHint:String);'#13#10
  +'var'#13#10'  NewColorPicker:TXColorPicker;'#13#10'  VBoxNode,HBoxNode:TData'
  +'Node;'#13#10'  NewHBox:TXHBox;'#13#10'begin'#13#10'  NewHBox:=AddPropertyCo'
  +'ntainer(ParentNode,BoxName,VBoxNode,HBoxNode);'#13#10'  NewHBox.ContainerHe'
  +'ight:='''';'#13#10'  NewColorPicker:=TXColorPicker(AddDynamicWidget(''TXCol'
  +'orPicker'',MainForm,HBoxNode,BoxName,'''',''Top'',-1).ScreenObject);'#13#10
  +#13#10'  if (not IsResource)'#13#10'  and (TargetNode.NodeClass<>''DM'') the'
  +'n'#13#10'    AddPropertyEditButton(BoxName,HBoxNode,ro);'#13#10#13#10'  New'
  +'ColorPicker.ItemValue:=ItmValue;'#13#10'  NewColorPicker.LabelText:=LblText'
  +';'#13#10'  NewColorPicker.BoxWidth:=''120px'';'#13#10'  //NewColorPicker.Re'
  +'adOnly:= ro;  //!!!! Do we need to use ''Enabled'' instead? Sort out for Br'
  +'owser.'#13#10'  NewColorPicker.LabelPos:=''Left'';'#13#10'  NewColorPicker.'
  +'Hint:=attribHint;'#13#10#13#10'  NewHBox.Alignment:=''Right'';     //!!!! w'
  +'hy do I have to set this again here, for it to take effect??'#13#10#13#10' '
  +' // event handler....'#13#10'  NewColorPicker.myNode.registerEvent(''Change'
  +''',@OIEventWrapper.OIEditProperty);'#13#10'end;'#13#10#13#10'procedure AddE'
  +'ventEditBox(ParentNode:TDataNode;BoxName,LblText,ItmValue,HintText:String;C'
  +'anEditCode:Boolean;enableButton,CanDelete:Boolean);'#13#10'var'#13#10'  New'
  +'HBox:TXHBox;'#13#10'  NewButton:TXButton;'#13#10'  NewEditBox:TXEditBox;'#13
  +#10'  NewNode1,NewNode2:TDataNode;'#13#10'    //                   VBox     '
  +'<name>VB'#13#10'    //                     HBox     <name>HB'#13#10'    // '
  +'                      EditBox   <name>'#13#10'    //                       '
  +'Button    <name>Btn'#13#10'begin'#13#10'  NewHBox:=AddPropertyContainer(Par'
  +'entNode,BoxName,NewNode1,NewNode2);'#13#10'  NewHBox.ContainerHeight:='''';'
  +#13#10'  NewEditBox:=TXEditBox(AddDynamicWidget(''TXEditBox'',MainForm,NewNo'
  +'de2,BoxName,'''',''Top'',-1).ScreenObject);'#13#10#13#10'  begin'#13#10'   '
  +' NewButton:=TXButton(AddDynamicWidget(''TXButton'',MainForm,NewNode2,BoxNam'
  +'e+''Btn'','''',''Top'',-1).ScreenObject);'#13#10'    NewButton.Caption:=''.'
  +'..'';'#13#10'    if enableButton then'#13#10'    begin'#13#10'      NewButt'
  +'on.Enabled:=true;'#13#10'      if (CanDelete=false) or (CanEditCode=true) t'
  +'hen'#13#10'      begin'#13#10'        NewButton.Hint:=''Edit Event Code'';'
  +#13#10'        NewButton.myNode.RegisterEvent(''ButtonClick'',@OIEventWrappe'
  +'r.OIEditEventCode);'#13#10'      end'#13#10'      else'#13#10'      begin'
  +#13#10'        NewButton.Hint:=''Edit Event Hint'';'#13#10'        NewButton'
  +'.myNode.RegisterEvent(''ButtonClick'',@OIEventWrapper.OIEditIntfEvent);'#13
  +#10'      end;'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      '
  +'NewButton.Enabled:=false;'#13#10'    end;'#13#10'  end;'#13#10#13#10'  NewE'
  +'ditBox.ItemValue:=ItmValue;'#13#10'  NewEditBox.LabelText:=LblText;'#13#10
  +'  NewEditBox.BoxWidth:=''100px'';'#13#10'  NewEditBox.LabelPos:=''Left'';'
  +#13#10'  NewEditBox.Hint:=HintText;'#13#10'  NewEditBox.ReadOnly:=(not CanEd'
  +'itCode);'#13#10#13#10#13#10'  if CanDelete then'#13#10'    AddEventDelButto'
  +'n(BoxName,NewHBox.myNode);'#13#10#13#10'  NewHBox.Alignment:=''Right'';'#13
  +#10#13#10'  // event handlers....'#13#10'  NewEditBox.myNode.registerEvent('
  +'''Change'',@OIEventWrapper.OIEditEvent);'#13#10'end;'#13#10#13#10'procedure'
  +' AddComboBox(PropertiesNode,TargetNode:TDataNode;BoxName,LblText,ItmValue:S'
  +'tring;ro:Boolean;Options:TStringList;attribHint:String);'#13#10'var'#13#10
  +'  NewComboBox:TXComboBox;'#13#10'  NewHBox:TXHBox;'#13#10'  VBoxNode,HBoxNo'
  ,'de:TDataNode;'#13#10'begin'#13#10'  NewHBox:=AddPropertyContainer(Propertie'
  +'sNode,BoxName,VBoxNode,HBoxNode);'#13#10'  NewHBox.ContainerHeight:='''';'
  +#13#10'  NewComboBox:=TXComboBox(AddDynamicWidget(''TXComboBox'',MainForm,HB'
  +'oxNode,BoxName,'''',''Top'',-1).ScreenObject);'#13#10#13#10'  if (TargetNod'
  +'e.NodeClass<>''DM'') then'#13#10'    AddPropertyEditButton(BoxName,HBoxNode'
  +',ro);'#13#10#13#10'  NewComboBox.LabelText:=LblText;'#13#10'  NewComboBox.B'
  +'oxWidth:=''120px'';'#13#10'  //NewComboBox.ReadOnly:=ro;      //!!!! use En'
  +'abled instead?  Sort out for Browser.'#13#10'  NewComboBox.LabelPos:=''Left'
  +''';'#13#10'  NewComboBox.Alignment:=''Right'';'#13#10'  NewComboBox.Hint:=a'
  +'ttribHint;'#13#10'  NewComboBox.OptionList:=StringListToJSONString(Options)'
  +';'#13#10#13#10'  NewComboBox.ItemValue:=ItmValue;  // this will set itemind'
  +'ex'#13#10#13#10'  NewHBox.Alignment:=''Right'';'#13#10#13#10'  NewComboBox.'
  +'myNode.registerEvent(''Change'',@OIEventWrapper.OIEditProperty);'#13#10'end'
  +';'#13#10#13#10'procedure PopulateObjectInspector(CurrentNode:TDataNode);'#13
  +#10'var Prefix1,AttributePrefix:string;'#13#10'  i:integer;'#13#10'  MainPan'
  +'el,ShowOn,IntfNode:TDataNode;'#13#10'  IntfEvent:TEventHandlerRec;'#13#10' '
  +' myAttribs:TNodeAttributesArray;'#13#10'  ro:boolean;'#13#10'  s:boolean;'
  +#13#10'  AttribOptions:TStringList;'#13#10'  tabIndex,DisplayType,HintText:S'
  +'tring;'#13#10'  dfltAttrib:TDefaultAttribute;'#13#10'  NodesList:TNodesArra'
  +'y;'#13#10'begin'#13#10'  s:=SuppressEvents;'#13#10'  SuppressEvents:=true;'
  +#13#10#13#10'  EditAttributeValue(PropertiesNode,''IsVisible'',''false'');'
  +#13#10'  DeleteNodeChildren(PropertiesNode);'#13#10'  EditAttributeValue(Int'
  +'erfacePropsNode,''IsVisible'',''false'');'#13#10'  DeleteNodeChildren(Inter'
  +'facePropsNode);'#13#10'  EditAttributeValue(EventsNode,''IsVisible'',''fals'
  +'e'');'#13#10'  DeleteNodeChildren(EventsNode);'#13#10'  EditAttributeValue('
  +'DMAttribsNode,''IsVisible'',''false'');'#13#10'  DeleteNodeChildren(DMAttri'
  +'bsNode);'#13#10'  MainPanel:=PropertiesNode;'#13#10'  Prefix1:=''OI'';'#13
  +#10#13#10'  if (CurrentNode<>nil)  then'#13#10'  begin'#13#10'    if (Curren'
  +'tNode.NodeClass = ''UI'')'#13#10'    or (CurrentNode.NodeClass = ''NV'')'#13
  +#10'    or (CurrentNode.NodeClass = ''SVG'')'#13#10'    or (CurrentNode=UIRo'
  +'otNode) then'#13#10'    begin'#13#10'      tabIndex:=OITabs.GetAttribute('''
  +'TabIndex'',false).AttribValue;'#13#10'      if tabIndex = ''0'' then'#13#10
  +'        DisplayType:=''UIProps'''#13#10'      else if tabIndex = ''1'' then'
  +#13#10'        DisplayType:=''UIEvents'''#13#10'      else if tabIndex = ''2'
  +''' then'#13#10'        DisplayType:=''Intf'';'#13#10'    end'#13#10'    els'
  +'e if CurrentNode.NodeClass = ''DM'' then'#13#10'    begin'#13#10'      Disp'
  +'layType:=''DM'';'#13#10'      MainPanel:=DMAttribsNode;'#13#10'      Prefix'
  +'1:=''DM'';'#13#10'    end;'#13#10#13#10'    if CurrentNode.NodeType=''TXCom'
  +'posite'' then'#13#10'    begin'#13#10'      IntfNode:=nil;'#13#10'      Nod'
  +'esList:=FindNodesOfType(CurrentNode,''TXCompositeIntf'',true,CurrentNode.No'
  +'deName);  // should be only 1 of these'#13#10'      if length(NodesList)>0 '
  +'then'#13#10'        IntfNode:=NodesList[0];'#13#10'    end;'#13#10#13#10'  '
  +'  if (DisplayType=''UIProps'')'#13#10'    or (DisplayType=''Intf'')'#13#10
  +'    or (DisplayType=''DM'')'#13#10'    then'#13#10'    begin'#13#10'      i'
  +'f CurrentNode<>nil then'#13#10'      begin'#13#10'        AttributePrefix:='
  +'Prefix1+AttributeEditorNameDelimiter+CurrentNode.NodeName;'#13#10#13#10'   '
  +'     AddPropertyEditBox(MainPanel,CurrentNode,AttributePrefix+AttributeEdit'
  +'orNameDelimiter'#13#10'                                  +''Name''+Attribut'
  +'eEditorNameDelimiter'#13#10'                                  +''0'',''Name'
  +''',CurrentNode.NodeName,true,false,CurrentNode.NodeName);'#13#10#13#10'    '
  +'    myAttribs:=CurrentNode.NodeAttributes;'#13#10'        for i:=0 to lengt'
  +'h(myAttribs)-1 do'#13#10'        if (CurrentNode.NodeAttributes[i]<>nil)'#13
  +#10'        and (CurrentNode.NodeAttributes[i].AttribName <> '''') then'#13
  +#10'        begin'#13#10'          dfltAttrib:=GetDefaultAttrib(CurrentNode.'
  +'NodeType,CurrentNode.NodeAttributes[i].AttribName);'#13#10'          ro:=Cu'
  +'rrentNode.NodeAttributes[i].AttribReadOnly;'#13#10'          //exclude Supp'
  +'ressed properties that user shouldn''t see'#13#10'          if (FindSuppres'
  +'sedProperty(CurrentNode.NodeType,CurrentNode.NodeAttributes[i].AttribName)<'
  +'0)'#13#10'          and (CurrentNode.NodeAttributes[i].AttribName<>''Parent'
  +'Name'')'#13#10'          and ((DisplayType<>''DM'')'#13#10'               o'
  +'r (CurrentNode.NodeAttributes[i].AttribName<>''MakeXArrays'')'#13#10'      '
  +'         or (CurrentNode.NodeName<>''Dimensions''))'#13#10'          and (('
  +'DisplayType<>''DM'')'#13#10'               or (CurrentNode.NodeAttributes[i'
  +'].AttribName<>''Multiplicity'')'#13#10'               or (CurrentNode.NodeT'
  ,'ype<>''DMAttrib'')'#13#10'               or ((CurrentNode.NodeType=''DMAttr'
  +'ib'') and (CurrentNode.NodeParent.GetAttribute(''MakeXArrays'',false).Attri'
  +'bValue=''False'')))'#13#10'          then'#13#10'          begin'#13#10'   '
  +'         if (CurrentNode.NodeType<>''TXComposite'')'#13#10'            or ('
  +'IsADefaultAttrib(CurrentNode.NodeType,CurrentNode.NodeAttributes[i].AttribN'
  +'ame)) then'#13#10'            begin'#13#10'              ShowOn:=MainPanel;'
  +#13#10'              if (CurrentNode.NodeType=''TXCompositeIntf'')'#13#10'  '
  +'            or (dfltAttrib.AttribHint = '''')'#13#10'              then'#13
  +#10'                HintText:=CurrentNode.NodeAttributes[i].AttribHint'#13#10
  +'              else'#13#10'                HintText:= dfltAttrib.AttribHint;'
  +#13#10'            end'#13#10'            else'#13#10'            begin   //'
  +' is TXComposite, and no default hint'#13#10'              ShowOn:=Interface'
  +'PropsNode;'#13#10'              if (IntfNode<>nil)'#13#10'              and'
  +' (IntfNode.HasAttribute(CurrentNode.NodeAttributes[i].AttribName)) then'#13
  +#10'                HintText:=IntfNode.GetAttribute(CurrentNode.NodeAttribut'
  +'es[i].AttribName,false).AttribHint;'#13#10'            end;'#13#10#13#10'  '
  +'          if CurrentNode.NodeAttributes[i].AttribType = ''Boolean'' then'#13
  +#10'            begin'#13#10'              AddCheckBox(ShowOn,CurrentNode,At'
  +'tributePrefix+AttributeEditorNameDelimiter'#13#10'                      +Cu'
  +'rrentNode.NodeAttributes[i].AttribName+AttributeEditorNameDelimiter'#13#10
  +'                      +IntToStr(i+2),'#13#10'                       Current'
  +'Node.NodeAttributes[i].AttribName,CurrentNode.NodeAttributes[i].AttribValue'
  +',ro,HintText);'#13#10'            end'#13#10'            else'#13#10'      '
  +'      begin'#13#10'              AttribOptions:=LookupAttribOptions(Current'
  +'Node.NodeType,CurrentNode.NodeAttributes[i].AttribName);'#13#10'           '
  +'   if AttribOptions<>nil then'#13#10'              begin'#13#10'           '
  +'     AddComboBox(ShowOn,CurrentNode,AttributePrefix+AttributeEditorNameDeli'
  +'miter'#13#10'                      +CurrentNode.NodeAttributes[i].AttribNam'
  +'e+AttributeEditorNameDelimiter'#13#10'                      +IntToStr(i+2),'
  +#13#10'                       CurrentNode.NodeAttributes[i].AttribName,Curre'
  +'ntNode.NodeAttributes[i].AttribValue,ro,'#13#10'                       Attr'
  +'ibOptions,HintText);'#13#10'              end'#13#10'              else if '
  +'CurrentNode.NodeAttributes[i].AttribType=''Color'' then'#13#10'            '
  +'    AddPropertyColorPicker(ShowOn,CurrentNode,AttributePrefix+AttributeEdit'
  +'orNameDelimiter'#13#10'                      +CurrentNode.NodeAttributes[i]'
  +'.AttribName+AttributeEditorNameDelimiter'#13#10'                      +IntT'
  +'oStr(i+2),'#13#10'                       CurrentNode.NodeAttributes[i].Attr'
  +'ibName,CurrentNode.NodeAttributes[i].AttribValue,ro,false,HintText)'#13#10
  +'              else'#13#10'                AddPropertyEditBox(ShowOn,Current'
  +'Node,AttributePrefix+AttributeEditorNameDelimiter'#13#10'                  '
  +'  +CurrentNode.NodeAttributes[i].AttribName+AttributeEditorNameDelimiter'#13
  +#10'                    +IntToStr(i+2),'#13#10'                     CurrentN'
  +'ode.NodeAttributes[i].AttribName,CurrentNode.NodeAttributes[i].AttribValue,'
  +#13#10'                     ro,(CurrentNode.NodeType=''TXCompositeIntf''),'
  +#13#10'                     HintText);'#13#10'            end;'#13#10'      '
  +'    end;'#13#10'        end;'#13#10'        EditAttributeValue(MainPanel,'''
  +'IsVisible'',''true'');'#13#10'        if CurrentNode.NodeType=''TXComposite'
  +''' then'#13#10'          EditAttributeValue(InterfacePropsNode,''IsVisible'
  +''',''true'');'#13#10#13#10'      end;'#13#10'    end'#13#10'    else if Dis'
  +'playType=''UIEvents'' then'#13#10'    begin'#13#10'      //----------------'
  +'--- Display the registered Events -----------------------'#13#10#13#10'    '
  +'  if CurrentNode<>nil then'#13#10'      if ((CurrentNode.IsDynamic) or (Cur'
  +'rentNode=UIRootNode)) then'#13#10'      begin'#13#10'        AttributePrefi'
  +'x:=Prefix1+AttributeEditorNameDelimiter+CurrentNode.NodeName;'#13#10#13#10
  +'        for i:=0 to CurrentNode.MyEventTypes.count-1 do'#13#10'        begi'
  +'n'#13#10'          HintText:= CurrentNode.myEventHandlers[i].EventHint;'#13
  +#10'          if (CurrentNode.NodeType=''TXComposite'')'#13#10'          and'
  +' (IntfNode<>nil) then'#13#10'          begin'#13#10'            // get the '
  +'event hint from the underlying interface node'#13#10'            IntfEvent:'
  +'=IntfNode.GetEvent(CurrentNode.MyEventTypes[i]);'#13#10'            if Intf'
  +'Event<>nil then'#13#10'              HintText:= IntfEvent.EventHint;'#13#10
  +'          end;'#13#10'          AddEventEditBox(EventsNode,AttributePrefix+'
  +'AttributeEditorNameDelimiter //OI__nodename__'#13#10'                      '
  +'      +CurrentNode.MyEventTypes[i]+AttributeEditorNameDelimiter   //eventty'
  ,'pe__'#13#10'                            +IntToStr(i+2),                    '
  +'                         //suffix'#13#10'                             Curre'
  +'ntNode.MyEventTypes[i],'#13#10'                             CurrentNode.myE'
  +'ventHandlers[i].TheCode,'#13#10'                             HintText,'#13
  +#10'                             //CanEditCode...'#13#10'                   '
  +'          (((CurrentNode.NodeType<>''TXComposite'') and (CurrentNode.NodeTy'
  +'pe<>''TXCompositeIntf''))'#13#10'                             or ((CurrentN'
  +'ode.NodeType=''TXCompositeIntf'') and (CurrentNode.myEventHandlers[i].ReadO'
  +'nlyInterface=true))'#13#10'                             or ((CurrentNode.No'
  +'deType=''TXComposite'') and (CurrentNode.myEventHandlers[i].ReadOnlyInterfa'
  +'ce=false))'#13#10'                             ),'#13#10'                  '
  +'           //EnableButton...'#13#10'                             ((CurrentN'
  +'ode.NodeType<>''TXComposite'')'#13#10'                             or ((Cur'
  +'rentNode.NodeType=''TXComposite'') and (CurrentNode.myEventHandlers[i].Read'
  +'OnlyInterface=false))'#13#10'                             ),'#13#10'       '
  +'                      //CanDelete...'#13#10'                             (C'
  +'urrentNode.NodeType=''TXCompositeIntf'')'#13#10'                           '
  +'  );'#13#10#13#10'        end;'#13#10'      end;'#13#10'      EditAttribute'
  +'Value(EventsNode,''IsVisible'',''true'');'#13#10'    end;'#13#10#13#10'    '
  +'if CurrentNode.NodeType=''TXComposite'' then'#13#10'      EditAttributeValu'
  +'e(InterfaceTabNode,''IsVisible'',''true'')'#13#10'    else'#13#10'      Edi'
  +'tAttributeValue(InterfaceTabNode,''IsVisible'',''false'');'#13#10'    if (C'
  +'urrentNode.NodeType=''TXCompositeIntf'') then'#13#10'      EditAttributeVal'
  +'ue(AddInterfacePropsButtonNode,''IsVisible'',''true'')'#13#10'    else'#13
  +#10'      EditAttributeValue(AddInterfacePropsButtonNode,''IsVisible'',''fal'
  +'se'');'#13#10'  end;'#13#10#13#10'  SuppressEvents:=s;'#13#10#13#10'end;'#13
  +#10#13#10'procedure OIPropsEventsTabChange;'#13#10'begin'#13#10'  PopulateOb'
  +'jectInspector(ObjectInspectorSelectedNavTreeNode);'#13#10'end;'#13#10#13#10
  +#13#10'procedure PopulateResourceInspector(CurrentNode:TDataNode);'#13#10'va'
  +'r AttributePrefix:string;'#13#10'  i:integer;'#13#10'  PropertiesNode,btnNo'
  +'de:TDataNode;'#13#10'  myAttribs:TNodeAttributesArray;'#13#10'  ro:boolean;'
  +#13#10'  s:boolean;'#13#10'begin'#13#10'  s:=SuppressEvents;'#13#10'  Suppre'
  +'ssEvents:=true;'#13#10#13#10'  if (CurrentNode<>nil)'#13#10'  and ((Current'
  +'Node.NodeClass=''RSS'')'#13#10'    or (CurrentNode.NodeType=''TXComposite'''
  +')) then'#13#10'  begin'#13#10'    btnNode:=FindDataNodeById(UIRootNode,''Re'
  +'sourceTreeDelBtn'','''',true);'#13#10'    TXButton(btnNode.ScreenObject).En'
  +'abled:=true;'#13#10'    btnNode:=FindDataNodeById(UIRootNode,''ResourceTree'
  +'LoadBtn'','''',true);'#13#10'    TXButton(btnNode.ScreenObject).Enabled:=tr'
  +'ue;'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    btnNode:=FindDataN'
  +'odeById(UIRootNode,''ResourceTreeDelBtn'','''',true);'#13#10'    TXButton(b'
  +'tnNode.ScreenObject).Enabled:=false;'#13#10'    btnNode:=FindDataNodeById(U'
  +'IRootNode,''ResourceTreeLoadBtn'','''',true);'#13#10'    TXButton(btnNode.S'
  +'creenObject).Enabled:=false;'#13#10'  end;'#13#10#13#10'  SuppressEvents:=s'
  +';'#13#10'end;'#13#10#13#10'procedure OIAddCodeUnitNode(UnitType:String);'#13
  +#10'var'#13#10'  NewName,UnitCode:String;'#13#10'  NewNode:TDataNode;'#13#10
  +'begin'#13#10'  // create a data node for the new unit, and add under CodeRo'
  +'otNode.'#13#10'  // Dialog for name entry'#13#10'  NewName:=GetComponentNam'
  +'e(''Enter Unit Name:'');'#13#10#13#10'  // Is the source node named uniquel'
  +'y?'#13#10'  if (NewName<>'''') and (ComponentNameIsUnique(NewName,'''')) th'
  +'en'#13#10'  begin'#13#10'    NewNode:=TDataNode.Create(''Code'',NewName,'''
  +''',UnitType,true);'#13#10'    NewNode.NodeName:=NewName;'#13#10'    UnitCod'
  +'e:= DfltUnitCode(NewName,UnitType);'#13#10'    NewNode.SetAttributeValue('''
  +'Code'',UnitCode,''String'');'#13#10#13#10'    ObjectInspectorSelectedCodeTr'
  +'eeNode:=InsertSystemNode(CodeRootNode,NewNode,-1);'#13#10'    OISelectedCod'
  +'eProcName:='''';'#13#10'    ObjectInspectorSelectedCodeNodeText:='''';'#13
  +#10#13#10'    // rebuild the code tree'#13#10'    RebuildCodeTree;'#13#10#13
  +#10'  end;'#13#10'end;'#13#10#13#10'procedure OIEditCodeUnit;'#13#10'var'#13
  +#10'  UnitCode, EventType:string;'#13#10'  tmp,NodeNameToEdit:String;'#13#10
  +'  bits:TStringList;'#13#10'  //AllKernels:TAnimCodeArray;'#13#10'begin'#13
  +#10'  if ObjectInspectorSelectedCodeTreeNode<>nil then'#13#10'  begin'#13#10
  +'    if (ObjectInspectorSelectedCodeTreeNode.NodeType=''PasUnit'')'#13#10'  '
  +'  or (ObjectInspectorSelectedCodeTreeNode.NodeType=''PythonScript'')'#13#10
  +'    then'#13#10'    begin'#13#10'      NodeNameToEdit:=ObjectInspectorSelec'
  +'tedCodeTreeNode.NodeName;'#13#10#13#10'      // pop up the syntax editor.'
  ,#13#10'      UnitCode:=ObjectInspectorSelectedCodeTreeNode.GetAttribute(''Co'
  +'de'',true).AttribValue;'#13#10'      if UnitCode='''' then'#13#10'      beg'
  +'in'#13#10'        // provide a template unit'#13#10'        if ObjectInspec'
  +'torSelectedCodeTreeNode.NodeType=''PasUnit'' then'#13#10'          UnitCode'
  +':= DfltUnitCode(NodeNameToEdit,''PasUnit'')'#13#10'        else if ObjectIn'
  +'spectorSelectedCodeTreeNode.NodeType=''PythonScript'' then'#13#10'         '
  +' UnitCode:= DfltPythonCode;'#13#10'      end;'#13#10'      CodeEditForm.Cod'
  +'eEdit.ItemValue := UnitCode;'#13#10'      CodeEditForm.CodeEdit.MessageLine'
  +'s:='''';'#13#10#13#10'      CodeEditForm.Mode:=ObjectInspectorSelectedCodeT'
  +'reeNode.NodeType+''Code'';'#13#10'      CodeEditForm.InitialiseOnShow(Objec'
  +'tInspectorSelectedCodeTreeNode.NodeType,NodeNameToEdit,'''');'#13#10'      '
  +'{$ifdef JScript}'#13#10'      ShowXForm(''CodeEditForm'',true);'#13#10'    '
  +'  {$endif}'#13#10'      if (ObjectInspectorSelectedCodeTreeNode.NodeType='''
  +'PasUnit'')'#13#10'      or (ObjectInspectorSelectedCodeTreeNode.NodeType='''
  +'PythonScript'') then'#13#10'      begin'#13#10'        CodeEditForm.SetCurs'
  +'orPosition(OISelectedCodeLineNum,1);'#13#10'      end;'#13#10'      {$ifnde'
  +'f JScript}'#13#10'      ShowXForm(''CodeEditForm'',true);'#13#10'      {$en'
  +'dif}'#13#10#13#10'    end'#13#10'    else'#13#10'    if (ObjectInspectorSel'
  +'ectedCodeTreeNode.NodeClass=''UI'')'#13#10'    or (ObjectInspectorSelectedC'
  +'odeTreeNode.NodeClass=''NV'')'#13#10'    or (ObjectInspectorSelectedCodeTre'
  +'eNode.NodeClass=''SVG'')'#13#10'    or ((ObjectInspectorSelectedCodeTreeNod'
  +'e.NodeClass=''Root'')'#13#10'      and (ObjectInspectorSelectedCodeTreeNode'
  +'.NodeName=SystemRootName))'#13#10'    then'#13#10'    begin'#13#10'      //'
  +' selected node is UI so we are looking at some event handler code'#13#10'  '
  +'    // OR Selected node is the UI Root so we are looking at one of the ''sy'
  +'stem'' level events'#13#10'      // navigate to the relevant UI element'#13
  +#10'      DoSelectNavTreeNode(ObjectInspectorSelectedCodeTreeNode,false);'#13
  +#10'      // Find which event to edit...'#13#10'      // delete to first )'
  +#13#10'      tmp:=ObjectInspectorSelectedCodeNodeText;'#13#10'      bits:=St'
  +'ringSplit(tmp,'')'');'#13#10'      if bits.Count=2 then'#13#10'      begin'
  +#13#10'        // event follows the space'#13#10'        EventType:=TrimWhit'
  +'eSpace(bits[1]);'#13#10'        if EventType<>'''' then'#13#10'          //'
  +' Pop up the event code editor'#13#10'          OIEventWrapper.OIEditEventCo'
  +'deFromCodeTree(ObjectInspectorSelectedCodeTreeNode.Nodename,EventType)'#13
  +#10'        else if (ObjectInspectorSelectedCodeTreeNode.NodeType=''TXGPUCan'
  +'vas'')'#13#10'        then'#13#10'        begin'#13#10'          ShowGPUEdi'
  +'tor(ObjectInspectorSelectedCodeTreeNode,0);'#13#10'        end;'#13#10'    '
  +'  end;'#13#10'    end'#13#10'    else'#13#10'      showmessage(''Select a C'
  +'ode Node first - selected node is not an appropriate type'');'#13#10#13#10
  +'  end'#13#10'  else'#13#10'  begin'#13#10'    showmessage(''Select a Code N'
  +'ode first'');'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure OICodeSearch'
  +';'#13#10'begin'#13#10'  // pop up the syntax editor.'#13#10'  CodeEditForm.'
  +'CodeEdit.ItemValue := '''';'#13#10'  CodeEditForm.CodeEdit.MessageLines:='''
  +''';'#13#10#13#10'  CodeEditForm.Mode:=''SearchCode'';'#13#10'  if (ObjectIn'
  +'spectorSelectedCodeTreeNode<>nil)'#13#10'  and (ObjectInspectorSelectedCode'
  +'TreeNode.NodeType=''PasUnit'') then'#13#10'  begin'#13#10'    CodeEditForm.'
  +'CodeEditFindTxt.ItemValue:=OISelectedCodeProcName;'#13#10'  end;'#13#10'  C'
  +'odeEditForm.InitialiseOnShow(''Search Results'','''','''');'#13#10'  ShowXF'
  +'orm(''CodeEditForm'',true);'#13#10'  {$ifdef JScript}'#13#10'  CodeEditForm'
  +'.CodeEditFindTxt.HasFocus:=true;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'procedure OIDeleteCodeUnit;'#13#10'begin'#13#10'  if ObjectInspectorSelecte'
  +'dCodeTreeNode<>nil then'#13#10'  begin'#13#10'    if  (ObjectInspectorSelec'
  +'tedCodeTreeNode.NodeType=''PasUnit'')'#13#10'    or  (ObjectInspectorSelect'
  +'edCodeTreeNode.NodeType=''PythonScript'')'#13#10'    then'#13#10'    begin'
  +#13#10'      if XIDEConfirm(''OK to delete ''+ObjectInspectorSelectedCodeTre'
  +'eNode.NodeName+''?'') then'#13#10'      begin'#13#10'        DeleteItem(Cod'
  +'eRootNode,ObjectInspectorSelectedCodeTreeNode);'#13#10'        OISelectedCo'
  +'deProcName:='''';'#13#10'      end;'#13#10'    end'#13#10'    else'#13#10' '
  +'     if  (ObjectInspectorSelectedCodeTreeNode.NodeType=''Root'') then'#13#10
  +'        showmessage(''Select a Code Node (Unit or Function) first'')'#13#10
  +'      else'#13#10'        showmessage(''Cannot delete event code here'');'
  +#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    showmessage(''Select a '
  +'Code Node (Unit or Function) first'');'#13#10'  end;'#13#10'end;'#13#10#13
  +#10'Procedure OIEncapsulate;'#13#10'var'#13#10'  fullstring,itemName,PromptS'
  ,'tring,DefaultString:String;'#13#10'begin'#13#10'  // Take the current user-'
  +'defined system, and store its structure in the resource tree under ''Compos'
  +'ites'', with'#13#10'  // a name provided by the user, and save to local sto'
  +'rage.'#13#10'  DefaultString:=UIRootNode.GetAttribute(''SystemName'',false)'
  +'.AttribValue;'#13#10'  if DefaultString=''XIDESystem'' then'#13#10'    Defa'
  +'ultString:='''';'#13#10'  if pos(''_xcmp'',DefaultString)=length(DefaultStr'
  +'ing)-4 then'#13#10'  begin'#13#10'    Delete(DefaultString,length(DefaultSt'
  +'ring)-4,5);'#13#10'    PromptString:=''Enter Name of Composite Item:'';'#13
  +#10'  end'#13#10'  else'#13#10'    PromptString:=''Enter Name of new Composi'
  +'te Item:'';'#13#10'  itemName:=GetValidItemName(PromptString,DefaultString '
  +');'#13#10'  if itemName='''' then'#13#10'    EXIT;'#13#10#13#10'  fullstrin'
  +'g:=BuildSystemString(true);'#13#10'  itemName:=itemName+''.xcmp'';'#13#10' '
  +' {$ifndef JScript}'#13#10'  itemName:=''SavedSystems/''+itemName;'#13#10'  '
  +'{$endif}'#13#10'  WriteToLocalStore(itemName,fullstring);'#13#10#13#10'  Re'
  +'buildResourcesTree;'#13#10#13#10'end;'#13#10#13#10'procedure OIAddInterface'
  +'Element;'#13#10'var'#13#10'  myIntf:TXCompositeIntf;'#13#10'  NewName,tabIn'
  +'dex:String;'#13#10'  ok,IsReadOnly,tf:Boolean;'#13#10'begin'#13#10'  // for'
  +' a TXCompositeIntf item, user can add interface properties, or bespoke even'
  +'ts.'#13#10'  if (ObjectInspectorSelectedNavTreeNode=nil)'#13#10'  or (Objec'
  +'tInspectorSelectedNavTreeNode.NodeType<>''TXCompositeIntf'') then'#13#10'  '
  +'  showmessage(''Please select a Composite Interface (TXCompositeIntf) eleme'
  +'nt first'')'#13#10'  else'#13#10'  begin'#13#10'    myIntf:=TXCompositeIntf'
  +'(ObjectInspectorSelectedNavTreeNode.ScreenObject);'#13#10#13#10'    tabInde'
  +'x:=OITabs.GetAttribute(''TabIndex'',false).AttribValue;'#13#10#13#10'    if'
  +' tabIndex=''0'' then'#13#10'    begin'#13#10#13#10'      // create a new at'
  +'tribute/property for the selected node'#13#10'      ok:=false;'#13#10'     '
  +' // Dialog for name and type entry'#13#10'      IntfParamUnit.InterfaceElem'
  +'ent := myIntf;'#13#10'      IntfParamUnit.ClearForm;'#13#10'      ShowXForm'
  +'(''IntfParamForm'',true);'#13#10#13#10'    end'#13#10'    else'#13#10'    b'
  +'egin'#13#10'      // create a new event for the selected node'#13#10'      '
  +'ok:=false;'#13#10'      IntfEventUnit.InterfaceElement := myIntf;'#13#10'  '
  +'    IntfEventUnit.ClearForm;'#13#10'      ShowXForm(''IntfEventForm'',true)'
  +';'#13#10#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'{$ifdef JScr'
  +'ipt}'#13#10#13#10'function CheckForSavedSystemOnLoad:Boolean;'#13#10'var'#13
  +#10'  ok:boolean;'#13#10'  sysname,tempstr:String;'#13#10'begin'#13#10'//   '
  +'showmessage(''not running from Laz, so loading last system description'');'
  +#13#10'   //look for a system description with the same name as the one we j'
  +'ust loaded.'#13#10'   sysname:=UIRootNode.getAttribute(''SystemName'',false'
  +').AttribValue;'#13#10'//    showmessage(''looking for saved system XIDESave'
  +'dData''+sysname);'#13#10'   tempstr:=trim(ReadFromLocalStore(''XIDESavedDat'
  +'a''+sysname));'#13#10'   //showmessage(tempstr);'#13#10'   if tempstr<>'''''
  +' then'#13#10'   begin'#13#10'     //showmessage(''found ''+sysname);'#13#10
  +'     ok:=StringUtils.confirm(''Press OK to resume your previous "''+sysname'
  +'+''" session, or Cancel to continue with the basic load'');'#13#10'     if '
  +'ok then'#13#10'     begin'#13#10'       ok:=DoSystemLoad(tempstr,sysname);'
  +#13#10'       if ok then'#13#10'       begin'#13#10'         RebuildNavigato'
  +'rTree;'#13#10'         RebuildCodeTree;'#13#10'       end'#13#10'       els'
  +'e'#13#10'       begin'#13#10'         //showmessage(''load failed'');'#13#10
  +'         OIClearSystem;'#13#10'       end;'#13#10'     end'#13#10'     else'
  +' ok:=true;'#13#10'   end;'#13#10'   result:=ok;'#13#10'end;'#13#10'{$endif}'
  +#13#10#13#10#13#10#13#10'begin'#13#10'  AddAttribOptions(''Root'',''Deployme'
  +'ntMode'',DeploymentModeOptions);'#13#10'  AddAttribOptions(''Root'',''ShowR'
  +'esources'',ShowResourcesOptions);'#13#10#13#10'  DesignMode:=true;'#13#10' '
  +' RunModeAttempts:=0;'#13#10'  OIEventWrapper := TOIEventWrapper.Create;'#13
  +#10'  ObjectInspectorSelectedNavTreeNode:=nil;'#13#10'  ObjectInspectorSelec'
  +'tedCodeTreeNode:=nil;'#13#10'  OISelectedCodeProcName:='''';'#13#10'  OISel'
  +'ectedCodeLineNum:=1;'#13#10'  AvailableResourcesSelectedNode:=nil;'#13#10' '
  +' ObjectInspectorSelectedCodeNodeText:='''';'#13#10'  {$ifndef JScript}'#13
  +#10'  GlobalSuppressFrameDisplay:=true;'#13#10'  {$endif}'#13#10'  Additiona'
  +'lScript:='#13#10'     ''<script> '' +LineEnding'#13#10#13#10'     +''var gl'
  +'bTimeoutWaiting=false;  ''  +LineEnding'#13#10'     +''var jobId=0;     '' '
  +' +LineEnding'#13#10'     +''var JobsWaiting=[];  ''  +LineEnding'#13#10'   '
  +'  +''var db; ''+LineEnding'#13#10#13#10'     +''function runFn(fn,ms,fname,'
  +'job,...args) {  ''  +LineEnding'#13#10'     +''  var ars='''''''';  ''  +Li'
  ,'neEnding'#13#10'     +''  for (var i = 2; i < arguments.length; i++) {ars=a'
  +'rs+'''' ''''+arguments[i];} ''  +LineEnding'#13#10'  //   +''  console.log('
  +'''''running ''''+fname+'''' : ''''+ars); ''  +LineEnding'#13#10'     +''  f'
  +'n(...args);  ''  +LineEnding'#13#10'     +''  glbTimeoutWaiting=false;  '' '
  +' +LineEnding'#13#10'     +''  tryNextJob();  ''  +LineEnding'#13#10'     +'
  +'''}                           ''  +LineEnding'#13#10'     +''function tryNe'
  +'xtJob() { ''  +LineEnding'#13#10'     +''  if (JobsWaiting.length==0) retur'
  +'n; ''  +LineEnding'#13#10'     +''  if (glbTimeoutWaiting==false) ''+LineEn'
  +'ding'#13#10'     +''    {  ''  +LineEnding'#13#10'     +''    var nextjob=J'
  +'obsWaiting.shift();  ''  +LineEnding'#13#10'     +''    job=nextjob.jobid; '
  +' ''  +LineEnding'#13#10'     +''    glbTimeoutWaiting=true;  ''  +LineEndin'
  +'g'#13#10'  //   +''    console.log(''''Queueing ''''+nextjob.fname);  ''  +'
  +'LineEnding'#13#10'  //   +''    console.log(nextjob); ''  +LineEnding'#13#10
  +'     +''    setTimeout(runFn,nextjob.msec,   ...nextjob.args);    //args==='
  +'[fn,msec,fname,job,...args]   ''  +LineEnding'#13#10'     +''    }   ''  +L'
  +'ineEnding'#13#10'     +''  else {   ''  +LineEnding'#13#10'     +''    setT'
  +'imeout(tryNextJob,100);  ''  +LineEnding'#13#10'     +''    }  ''  +LineEnd'
  +'ing'#13#10'     +''}  ''  +LineEnding'#13#10'     +''function myTimeout(fn,'
  +'msec,fname,job,...args) {  ''  +LineEnding'#13#10'     +''  var ars='''''''
  +''';   ''  +LineEnding'#13#10'     +''  for (var i = 3; i < arguments.length'
  +'; i++) {ars=ars+'''' ''''+arguments[i];}   ''  +LineEnding'#13#10'     +'' '
  +'   jobId=jobId+1;  ''  +LineEnding'#13#10'     +''    if (jobId>30000) jobI'
  +'d=1;  ''  +LineEnding'#13#10'     +''    job=jobId;  ''  +LineEnding'#13#10
  +'  //   +''    console.log(''''myTimeout ***** new job ''''+job+'''' ''''+fn'
  +'ame);   ''  +LineEnding'#13#10'     +''    JobsWaiting.push({jobid:job, fun'
  +'c:fn, msec:msec, fname:fname, args:arguments});  ''  +LineEnding'#13#10'   '
  +'  +''    tryNextJob();  ''  +LineEnding'#13#10'     +''  return job;     '''
  +'  +LineEnding'#13#10'     +''}  ''  +LineEnding'#13#10#13#10'     +''</scri'
  +'pt>'';'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('codeeditor','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit CodeEditor;'#13#10'{$'
  +'ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'int'
  +'erface'#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUtils,Compi'
  +'leUserCode,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, '
  +'Graphics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, StdCtrls, ComCtrls, G'
  +'rids,'#13#10'  TypInfo, LazIDEIntf,'#13#10'  LazsUtils,'#13#10'  Events, Ty'
  +'pes,'#13#10'  SynEdit, SynEditTypes,'#13#10'  {$else}'#13#10'  HTMLUtils,'
  +#13#10'  {$endif}'#13#10'  webTranspilerUtils, UtilsJSCompile, WrapperPanel,'
  +' XScrollBox, XVBox, XHBox, XTree, XMemo, XTabControl, XButton,'#13#10'  XLa'
  +'bel, XEditBox, XCheckBox, XComboBox, XHyperLink, XRadioBtns, XCode, XForm, '
  +'XGPUCanvas, XGPUEditor,'#13#10'  XMenu, PopupMemo,EventsInterface;'#13#10#13
  +#10#13#10#13#10'type'#13#10#13#10'  { TCodeEditForm }'#13#10#13#10'  TCodeEd'
  +'itForm = class(TXForm)'#13#10'    CodeEditSaveBtn: TXButton;'#13#10'    Cod'
  +'eEditCancelBtn: TXButton;'#13#10'    CodeEditFormXHBox1: TXHBox;'#13#10'   '
  +' CodeEditFormXVBox1: TXVBox;'#13#10'    CodeEdit: TXCode;'#13#10'    CodeEd'
  +'itHelpBtn: TXButton;'#13#10'    CodeEditMainTabs: TXTabControl;'#13#10'    '
  +'CodeEditMainCodeTab: TXTabSheet;'#13#10'    CodeEditInitTab: TXTabSheet;'#13
  +#10'    CodeEditInit: TXCode;'#13#10'    CodeEditFindBtn: TXButton;'#13#10' '
  +'   CodeEditFindTxt: TXEditBox;'#13#10'    CodeEditFindNextBtn: TXButton;'#13
  +#10'    CodeEditFindCase: TXCheckBox;'#13#10'    CodeEditFindGlobal: TXCheck'
  +'Box;'#13#10'    CodeEditContextLabel: TXLabel;'#13#10'    {$ifndef JScript}'
  +#13#10'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormR'
  +'esize(Sender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13
  +#10'    {$endif}'#13#10'    procedure Initialise;'#13#10'    procedure Initi'
  +'aliseOnShow(Context,NodeName,EvType:String);'#13#10'    procedure CodeEditH'
  +'andleClickMessage(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'    procedure CodeEditInitHandleClickMessage(e: TEventStatus; nodeID:'
  +' AnsiString; myValue: AnsiString);'#13#10'    procedure CodeEditCancelBtnHa'
  +'ndleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'    procedure CodeEditHelpBtnHandleButtonClick(e:TEventStatus;nodeID: An'
  +'siString;  myValue: AnsiString);'#13#10'    procedure CodeEditSaveBtnHandle'
  +'ButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'    procedure CodeEditFindBtnHandleButtonClick(e: TEventStatus; nodeID: Ans'
  +'iString; myValue: AnsiString);'#13#10'    procedure CodeEditFindNextBtnHand'
  +'leButtonClick(e: TEventStatus; nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'    procedure DoLocalSearch(TextToFind:String);'#13#10'    procedure DoG'
  +'lobalSearch(TextToFind:String);'#13#10'    procedure NavigateToFirstError;'
  +#13#10'    procedure SetCursorPosition(targetLine,targetChar:integer);'#13#10
  +'    procedure DisplayIncFile(FileName,lineNum,charPos:String);'#13#10'    p'
  +'rocedure HandleMessageClick(e:TEventStatus;nodeID: AnsiString; myValue: Ans'
  +'iString; ThisCodeEdit:TXCode);'#13#10'    procedure CodeEditMainTabsHandleC'
  +'hange(e: TEventStatus; nodeID: AnsiString; myValue: AnsiString);'#13#10'  p'
  +'rivate'#13#10#13#10'  public'#13#10'    Mode:String;               //  dll,'
  +' EventCode, FunctionCode, UnitCode, PasUnitCode, PythonScriptCode, DMOpsCod'
  +'e, GPUKernel'#13#10'    TargetNodeName:String;'#13#10'    TargetNameSpace:S'
  +'tring;'#13#10'    EventType:String;'#13#10#13#10'    {$ifdef JScript}'#13#10
  +'    LastSearchIndex:integer;'#13#10'    RegExp:TObject;'#13#10'    {$endif}'
  +#13#10'end;'#13#10#13#10'var'#13#10'  CodeEditForm: TCodeEditForm;'#13#10'  '
  +'CodeEditStatus:String;'#13#10'  OIEditBox, CodeFormRoot:TDataNode;'#13#10#13
  +#10'implementation'#13#10'uses XObjectInsp, XDataModel;'#13#10#13#10'{$R *.l'
  +'fm}'#13#10#13#10'{ TCodeEditForm }'#13#10#13#10'procedure TCodeEditForm.Ini'
  +'tialiseOnShow(Context,NodeName,EvType:String);'#13#10'begin'#13#10'  Target'
  +'NodeName:=NodeName;'#13#10'  TargetNameSpace:='''';'#13#10'  EventType:=EvT'
  +'ype;'#13#10'  self.CodeEditContextLabel.LabelCaption:=Context+'' ''+NodeNam'
  +'e+'' ''+EvType;'#13#10'  CodeEdit.LabelText:='''';'#13#10#13#10'  CodeEditF'
  +'indGlobal.Checked:=false;'#13#10#13#10'  if (Mode=''dll'') then'#13#10'  be'
  +'gin'#13#10'    CodeEditFindTxt.ItemValue:='''';'#13#10'    CodeEdit.Contain'
  +'erHeight:=''100%'';           // CodeEdit is % of the parent component (tab'
  +'page)'#13#10'    CodeEditInitTab.IsVisible:=false;'#13#10'    CodeEdit.Mess'
  ,'agesHeight:=''30%'';'#13#10'  end'#13#10'  else if ((Mode=''EventCode'') or'
  +' (Mode=''GPUKernel'')) then'#13#10'  begin'#13#10'    CodeEditFindTxt.ItemV'
  +'alue:='''';'#13#10'    if CodeEdit.MessageLines='''' then'#13#10'      Code'
  +'Edit.MessagesHeight:=''1'''#13#10'    else'#13#10'      CodeEdit.MessagesHe'
  +'ight:=''30%'';'#13#10'    CodeEdit.ContainerHeight:=''95%'';           // C'
  +'odeEdit is % of the parent component (tabpage)'#13#10#13#10'    if FoundStr'
  +'ing(EventType,''Thread'')<>1 then'#13#10'    begin'#13#10'      CodeEditIni'
  +'tTab.IsVisible:=true;'#13#10'      CodeEditInit.ContainerHeight:=''95%'';'
  +#13#10'      CodeEditInit.MessagesHeight:=''1'';'#13#10'     end'#13#10'    '
  +'else'#13#10'    begin'#13#10'      // no initialisation code allowed for wo'
  +'rker threads'#13#10'      CodeEditInitTab.IsVisible:=false;'#13#10'    end;'
  +#13#10'  end'#13#10'  else'#13#10'  if (Mode=''SearchCode'') then'#13#10'  b'
  +'egin'#13#10'    CodeEdit.ContainerHeight:=''100%'';           // CodeEdit i'
  +'s % of the parent component (tabpage)'#13#10'    CodeEditInitTab.IsVisible:'
  +'=false;'#13#10'    CodeEdit.MessagesHeight:=''30%'';'#13#10'    CodeEditFin'
  +'dGlobal.Checked:=true;'#13#10'    CodeEditFindCase.Checked:=true;'#13#10'  '
  +'  CodeEditFindTxt.HasFocus:=true;'#13#10'    {$ifdef JScript}'#13#10'    //'
  +' if navigating here from a PasUnit sub-procedure on the code tree, then aut'
  +'omatically run a search'#13#10'    // for instances of the procedure name..'
  +'.'#13#10'    if self.CodeEditFindTxt.ItemValue<>'''' then'#13#10'      DoGl'
  +'obalSearch(self.CodeEditFindTxt.ItemValue);'#13#10'    {$endif}'#13#10'  en'
  +'d'#13#10'  else'#13#10'  begin'#13#10'    CodeEdit.ContainerHeight:=''95%'''
  +';            // CodeEdit is % of the parent component (tabpage)'#13#10'    '
  +'CodeEditInitTab.IsVisible:=false;'#13#10'    if CodeEdit.MessageLines='''' '
  +'then'#13#10'      CodeEdit.MessagesHeight:=''1'''#13#10'    else'#13#10'   '
  +'   CodeEdit.MessagesHeight:=''30%'';'#13#10'    CodeEditFindTxt.ItemValue:='
  +''''';'#13#10'  end;'#13#10#13#10'  if CodeEditInitTab.IsVisible=true then'
  +#13#10'  begin'#13#10'    // make the same messages visible on both tabs'#13
  +#10'    CodeEditInit.ContainerHeight:=CodeEdit.ContainerHeight;'#13#10'    C'
  +'odeEditInit.MessagesHeight:=CodeEdit.MessagesHeight;'#13#10'    CodeEditIni'
  +'t.MessageLines:=CodeEdit.MessageLines;'#13#10'  end;'#13#10#13#10'  if (Mod'
  +'e<>''EventCode'') then'#13#10'    CodeEditMainTabs.TabIndex:=0;'#13#10#13#10
  +'  if (Mode<>''PythonScriptCode'') then'#13#10'    CodeEdit.Language:=''Pasc'
  +'al'''#13#10'  else'#13#10'    CodeEdit.Language:=''Python'';'#13#10#13#10'e'
  +'nd;'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TCodeEditForm.FormCreat'
  +'e(Sender: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13
  +#10#13#10'  Initialise;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.For'
  +'mResize(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(self, CodeEdit'
  +'FormXVBox1);'#13#10'  //!! fudge.... have to set minWidth as alClient fails'
  +' to reset size of this panel....!!'#13#10'  CodeEdit.myControl.Constraints.'
  +'MinWidth:=CodeEdit.Width;'#13#10'  CodeEdit.myControl.Constraints.MinHeight'
  +':=CodeEdit.Height;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.FormSho'
  +'w(Sender: TObject);'#13#10'begin'#13#10'  // scroll the messages to the bot'
  +'tom'#13#10'  CodeEdit.TheMessages.VertScrollBar.Position:=CodeEdit.TheMessa'
  +'ges.Lines.Count-1;'#13#10'  if (Mode=''dll'') or (Mode=''GPUKernel'') then'
  +#13#10'    NavigateToFirstError'#13#10'  else if (Mode=''SearchCode'') then'
  +#13#10'  begin'#13#10'    // if navigating here from a PasUnit sub-procedure'
  +' on the code tree, then automatically run a search'#13#10'    // for instan'
  +'ces of the procedure name...'#13#10'    if self.CodeEditFindTxt.ItemValue<>'
  +''''' then'#13#10'      DoGlobalSearch(self.CodeEditFindTxt.ItemValue);'#13
  +#10'    TEdit(CodeEditFindTxt.myControl).SetFocus;'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'{$endif}'#13#10#13#10'procedure TCodeEditForm.Initialise;'#13#10
  +'begin'#13#10'  CodeFormRoot:=FindDataNodeById(myNode,''CodeEditFormXVBox1'''
  +','''',true);'#13#10#13#10'  TargetNodeName:='''';'#13#10'  TargetNameSpace:'
  +'='''';'#13#10'  EventType:='''';'#13#10'  self.CodeEditContextLabel.LabelCa'
  +'ption:='''';'#13#10'  CodeEdit.LabelText:='''';'#13#10#13#10'  {$ifndef JSc'
  +'ript}'#13#10'  TXForm(self).Height:=trunc(MainForm.Height*90/100);'#13#10' '
  +' TXForm(self).Width:=trunc(MainForm.Width*90/100);'#13#10'  {$else}'#13#10
  +'  TXForm(self).Top:=50;'#13#10'  TXForm(self).Left:=50;'#13#10#13#10'  asm'
  +#13#10'    var ob=document.getElementById(this.NameSpace+this.NodeName+''Con'
  +'tents'');'#13#10'    if (ob!=null) {'#13#10'      var str=''90%'';'#13#10' '
  +'     pas.HTMLUtils.SetHeightWidthHTML(this,ob,''W'',str);'#13#10'      pas.'
  +'HTMLUtils.SetHeightWidthHTML(this,ob,''H'',str);'#13#10'    }'#13#10'  end;'
  +#13#10#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure TCodeEditFo'
  ,'rm.CodeEditHelpBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString;'#13
  +#10'  myValue: AnsiString);'#13#10'begin'#13#10'  ShowXForm(''PopupMemoForm'
  +''',false);'#13#10'end;'#13#10#13#10#13#10'{$ifdef JScript}'#13#10'Function '
  +'GetErrorLineNum(ErrorString,Delimiter:string):integer;'#13#10'  var   LinNu'
  +'mPos,linenum:integer;'#13#10'        lineNumStr:string;'#13#10'  begin'#13
  +#10'    lineNumStr:=''-1'';'#13#10'    LinNumPos:=pos(Delimiter,ErrorString)'
  +';'#13#10'    if LinNumPos >0 then'#13#10'      lineNumStr := rightstr(Error'
  +'String,(1+length(errorstring)-length(Delimiter)-LinNumPos));'#13#10'    Try'
  +#13#10'      linenum:= strtoint(lineNumStr);'#13#10'    except'#13#10'    On'
  +' E : EConvertError do'#13#10'      linenum:= -1;'#13#10'    end;'#13#10'   '
  +' result:=linenum;'#13#10'  end;'#13#10'{$endif}'#13#10#13#10'procedure TCod'
  +'eEditForm.NavigateToFirstError;'#13#10'var'#13#10'  i:integer;'#13#10'  Fou'
  +'ndLineNum:Boolean;'#13#10'  FileName,CharPos:string;'#13#10'  LineNum:Strin'
  +'g;'#13#10'  LNum:integer;'#13#10'  {$ifdef JScript}'#13#10'  tmp1:TStringLi'
  +'st;'#13#10'  {$endif}'#13#10'begin'#13#10'  // search the messages list.  L'
  +'ook for a name(line,char) string.'#13#10'  // If the line also contains key'
  +'word ''Error'' then navigate to the indicated code block'#13#10'  lNum:=-1;'
  +#13#10'  {$ifndef JScript}'#13#10'  i:=0;'#13#10'  while i<CodeEdit.TheMessa'
  +'ges.lines.count do'#13#10'  begin'#13#10'    if (FoundString(CodeEdit.TheMe'
  +'ssages.lines[i],''Error:'')>0)'#13#10'    or (FoundString(CodeEdit.TheMessa'
  +'ges.lines[i],''Fatal:'')>0) then'#13#10'    begin'#13#10'      CodeEdit.Get'
  +'FileNameLineNumAndCharPos(FoundLineNum,CodeEdit.TheMessages.lines[i], ''('''
  +',FileName,LineNum,CharPos );'#13#10'      if (trim(FileName)<>'''')'#13#10
  +'      and (lineNum<>'''') then'#13#10'      begin'#13#10'        LNum:=i;'
  +#13#10'        i:=CodeEdit.TheMessages.lines.count;'#13#10'      end;'#13#10
  +'    end;'#13#10'    i:=i+1;'#13#10'  end;'#13#10'  {$else}'#13#10'  tmp1:=T'
  +'StringList.Create;'#13#10'  tmp1.Text:=CodeEdit.MessageLines;'#13#10'  i:=0'
  +';'#13#10'  while i<tmp1.count do'#13#10'  begin'#13#10'    if (FoundString('
  +'tmp1[i],''Error:'')>0)'#13#10'    or (FoundString(tmp1[i],''Fatal:'')>0) th'
  +'en'#13#10'    begin'#13#10'      CodeEdit.GetFileNameLineNumAndCharPos(Foun'
  +'dLineNum,tmp1[i], ''('',FileName,LineNum,CharPos );'#13#10'      if (trim(F'
  +'ileName)<>'''')'#13#10'      and (lineNum<>'''') then'#13#10'      begin'#13
  +#10'        LNum:=i;'#13#10'        i:=tmp1.count;'#13#10'      end;'#13#10
  +'    end;'#13#10'    i:=i+1;'#13#10'  end;'#13#10'  FreeAndNil(tmp1);'#13#10
  +'  {$endif}'#13#10'  if lNum>-1 then'#13#10'  begin'#13#10'    DisplayIncFil'
  +'e(Filename,lineNum,CharPos);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedu'
  +'re TCodeEditForm.SetCursorPosition(targetLine,targetChar:integer);'#13#10'b'
  +'egin'#13#10'  // showmessage(''targetline=''+inttostr(targetline));'#13#10
  +'  // set cursor position'#13#10'  if (targetChar>-1) then'#13#10'    if Cod'
  +'eEditMainTabs.TabIndex=0 then'#13#10'      CodeEdit.GoToLineCharPos(targetL'
  +'ine,targetChar)'#13#10'    else'#13#10'      CodeEditInit.GoToLineCharPos(t'
  +'argetLine,targetChar);'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.Dis'
  +'playIncFile(FileName,lineNum,charPos:String);'#13#10'var'#13#10'  tmp1:TStr'
  +'ingList;'#13#10'  FStrings,FStrings2:TStringList;'#13#10'  TargetNode:TData'
  +'Node;'#13#10'  targetLine:integer;'#13#10'  Context,FileType:String;'#13#10
  +'begin'#13#10'  {$ifndef JScript}'#13#10'    tmp1:=LoadIncludeFile(nil,FileN'
  +'ame,''tempinc/'');'#13#10'  {$else}'#13#10'    tmp1:=LoadIncludeFile(myWebC'
  +'ompiler.Compiler,FileName,''tempinc/'');'#13#10'  {$endif}'#13#10#13#10'  i'
  +'f tmp1.Count>0 then'#13#10'  begin'#13#10'    CodeEdit.ItemValue:=tmp1.Text'
  +';'#13#10'    CodeEditInit.ItemValue:='''';'#13#10'    FreeAndNil(tmp1);'#13
  +#10#13#10'    self.TargetNodeName:='''';'#13#10'    self.TargetNameSpace:='''
  +''';'#13#10'    self.EventType:='''';'#13#10'    //filename is NodeName + Ev'
  +'entType'#13#10'    //or for a GPU kernel, may be NodeName__kernelnum'#13#10
  +'    FStrings2:=StringSplit(FileName,''.'');'#13#10'    FileType:=FStrings2['
  +'FStrings2.Count-1];'#13#10'    if FStrings2.Count=2 then'#13#10'    begin'
  +#13#10'      if FileType=''inc'' then'#13#10'      begin'#13#10'        // c'
  +'ould be a function or an event handler       !!namespace - separate with _ '
  +'?  !!disallow _ in element names????'#13#10'        FStrings:=StringSplit(F'
  +'Strings2[0],''__'');'#13#10'        if FStrings.Count>=2 then'#13#10'      '
  +'  begin'#13#10'          if FStrings.Count=2 then'#13#10'          begin'#13
  +#10'            self.TargetNodeName:=FStrings[0];'#13#10'            if Stri'
  +'ngUtils.IsStrFloatNum(FStrings[1]) then'#13#10'              self.EventType'
  +':='''''#13#10'            else'#13#10'              self.EventType:=FString'
  +'s[1];'#13#10'          end'#13#10'          else'#13#10'          begin'#13
  ,#10'            if FStrings[2]=''Init'' then'#13#10'            begin'#13#10
  +'              self.TargetNameSpace:='''';'#13#10'              self.TargetN'
  +'odeName:=FStrings[0];'#13#10'              self.EventType:=FStrings[1];'#13
  +#10'            end'#13#10'            else'#13#10'            begin'#13#10
  +'              self.TargetNameSpace:=FStrings[0];'#13#10'              self.'
  +'TargetNodeName:=FStrings[1];'#13#10'              self.EventType:=FStrings['
  +'2];'#13#10'            end;'#13#10'          end;'#13#10#13#10'          if'
  +' (self.TargetNameSpace='''')'#13#10'          and (self.EventType<>'''') th'
  +'en'#13#10'          begin'#13#10'            self.Mode:=''EventCode'';'#13
  +#10'            Context:=''Event Handler'';'#13#10#13#10'            CodeEdi'
  +'tInitTab.IsVisible:=true;'#13#10#13#10'            // Load up both the main'
  +' event code AND the initialisation code...'#13#10'            TargetNode:=F'
  +'indDataNodeById(UIRootNode,self.TargetNodeName,'''',true);'#13#10'         '
  +'   if TargetNode<>nil then'#13#10'            begin'#13#10'              Co'
  +'deEditInit.ItemValue:=TargetNode.GetEventInitCode(self.EventType);'#13#10#13
  +#10'              CodeEdit.ItemValue:=TargetNode.GetEventCode(self.EventType'
  +');'#13#10'              targetLine:=StrToInt(linenum)-1;'#13#10'           '
  +'   if FoundString(FileName,''Init.'')>0 then'#13#10'                 CodeEd'
  +'itMainTabs.TabIndex:=1;'#13#10'            end;'#13#10'          end'#13#10
  +'          else'#13#10'          begin'#13#10'            // a GPU kernel...'
  +#13#10'            //CodeEditorClosed(nil);'#13#10'            CodeEdit.Item'
  +'Value:='''';'#13#10'            TargetNode:=FindDataNodeById(UIRootNode,sel'
  +'f.TargetNodeName,'''',true);'#13#10'            if TargetNode<>nil then'#13
  +#10'              {$ifndef JScript}'#13#10'              ShowGPUKernelLater('
  +'targetNode,FileName,StrToInt(linenum),CharPos); // later...'#13#10'        '
  +'      {$else}'#13#10'              ShowGPUKernel(targetNode,FileName,StrToI'
  +'nt(linenum),CharPos);'#13#10'              {$endif}'#13#10'          end;'
  +#13#10'        end'#13#10'        else if FStrings.Count=1 then'#13#10'     '
  +'   begin'#13#10'          self.TargetNodeName:=FStrings[0];'#13#10'        '
  +'  self.EventType:='''';'#13#10'          TargetNode:=FindDataNodeById(DMRoo'
  +'t,self.TargetNodeName,'''',false);'#13#10'          if TargetNode<>nil then'
  +#13#10'            if TargetNode.NodeType=''DMOp'' then'#13#10'            b'
  +'egin'#13#10'              self.Mode:=''DMOpCode'';'#13#10'              Con'
  +'text:=''DMOp Code'';'#13#10'              CodeEdit.ItemValue:=TargetNode.Ge'
  +'tAttribute(''Code'',false).AttribValue;'#13#10'              targetLine:=St'
  +'rToInt(linenum)-1;    // -1 because there is no top line (function xxx;) in'
  +' the source code'#13#10'            end'#13#10'            else'#13#10'    '
  +'          showmessage(''Cannot find DMOp node ''+self.TargetNodeName)'#13#10
  +'          else'#13#10'            showmessage(''Cannot find DMRoot node ''+'
  +'self.TargetNodeName);'#13#10'        end;'#13#10#13#10'        FreeAndNil(F'
  +'Strings);'#13#10'      end'#13#10'      else'#13#10'      begin'#13#10'    '
  +'    self.TargetNodeName:=FStrings2[0];'#13#10'        TargetNode:=FindDataN'
  +'odeById(CodeRootNode,self.TargetNodeName,'''',false);'#13#10'        self.E'
  +'ventType:='''';'#13#10'        if TargetNode<>nil then'#13#10'        begin'
  +#13#10'          self.Mode:=''UnitCode'';'#13#10'          Context:=''PasUni'
  +'t'';'#13#10'          CodeEdit.ItemValue:=TargetNode.GetAttribute(''Code'','
  +'false).AttribValue;'#13#10'          targetLine:=StrToInt(linenum)-1;     /'
  +'/ -1 because there is no top line (unit xxx;) in the source code'#13#10'   '
  +'     end;'#13#10'      end;'#13#10'    end;'#13#10'    FreeAndNil(FStrings2'
  +');'#13#10'    if self.TargetNameSpace='''' then'#13#10'    begin'#13#10'   '
  +'   self.InitialiseOnShow(Context,self.TargetNodeName,self.EventType);'#13#10
  +'      SetCursorPosition(targetLine,strToInt(charPos));'#13#10'    end'#13#10
  +'    else'#13#10'    begin'#13#10'      showmessage(''This code is within an'
  +' encapsulated element (''+self.TargetNameSpace+'') - not available for edit'
  +''');'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    s'
  +'howmessage(''This file is not available for edit'');'#13#10'  end;'#13#10' '
  +' FreeAndNil(tmp1);'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.HandleM'
  +'essageClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString; ThisCod'
  +'eEdit:TXCode);'#13#10'var linenumber,targetLine:integer;'#13#10'    Selecte'
  +'dLine,FileName,CharPos:string;'#13#10'    FoundLineNum:Boolean;'#13#10'    '
  +'FStrings,bits:TStringList;'#13#10'    LineNum,Context:String;'#13#10'    Ta'
  +'rgetNode:TDataNode;'#13#10'    {$ifdef JScript}'#13#10'    Messages:TString'
  +'List;'#13#10'    {$endif}'#13#10'begin'#13#10'  //showmessage(''CodeEdit Ha'
  +'ndleClickMessage ''+ nodeID + '' ''+myValue);'#13#10' {$ifndef JScript}'#13
  ,#10' linenumber:=thisCodeEdit.TheMessages.CaretPos.Y;'#13#10' SelectedLine:='
  +' thisCodeEdit.TheMessages.lines[linenumber];'#13#10' thisCodeEdit.GetFileNa'
  +'meLineNumAndCharPos(FoundLineNum,SelectedLine, ''('',FileName,LineNum,CharP'
  +'os );'#13#10' {$else}'#13#10' // Find the message line thats been clicked o'
  +'n'#13#10' try'#13#10' linenumber:=StrToInt(myValue);'#13#10' except'#13#10
  +'   On E : EConvertError do'#13#10'   EXIT;'#13#10' end;'#13#10' Messages:=T'
  +'StringList.Create;'#13#10' Messages.Text:=thisCodeedit.MessageLines;'#13#10
  +' //showmessage(''linenumber=''+inttostr(linenumber)+'' count=''+inttostr(Me'
  +'ssages.Count));'#13#10' if linenumber>Messages.Count then'#13#10'   EXIT;'
  +#13#10' SelectedLine:= Messages[linenumber-1];'#13#10' Messages.Free;'#13#10
  +' // Find the indicated line number from the message'#13#10' thisCodeEdit.Ge'
  +'tFileNameLineNumAndCharPos(FoundLineNum,SelectedLine, ''('',FileName,LineNu'
  +'m,CharPos );'#13#10' //showmessage(''FileName=''+FileName+'' Indicated Line'
  +'num is ''+linenum);'#13#10' {$endif}'#13#10#13#10' CodeEditMainTabs.TabInde'
  +'x:=0;'#13#10#13#10' //load the indicated file from the tempinc folder into '
  +'the code edit box'#13#10' if (trim(FileName)<>'''')'#13#10' and (lineNum<>'
  +''''')'#13#10' and (charPos<>'''') then'#13#10' begin'#13#10'   FStrings:=St'
  +'ringSplit(FileName,''.'');'#13#10'   if ((FStrings.Count=2)'#13#10'     and'
  +' (FStrings[1]=''inc''))'#13#10'   or (CodeEditForm.Mode = ''dll'')'#13#10' '
  +'  or (CodeEditForm.Mode = ''GPUKernel'') then'#13#10'   begin'#13#10'     D'
  +'isplayIncFile(FileName,lineNum,CharPos);'#13#10'   end'#13#10'   else'#13#10
  +'   begin'#13#10'     //if Filename includes a dot, then it''s a nodename an'
  +'d eventtype.'#13#10'     //if it contains .AnimationCode then it''s a GPU k'
  +'ernel (from a code search list)'#13#10'     //Otherwise it''s a code elemen'
  +'t (function or Pasunit or PythonScript nodename)'#13#10#13#10'     // save '
  +'any edits already done...'#13#10'     CodeEditStatus:=''ok'';'#13#10'     i'
  +'f CodeEditForm.Mode<>''SearchCode'' then'#13#10'       CodeEditorClosed(nil'
  +');'#13#10#13#10'     if FStrings.Count>1 then'#13#10'     begin'#13#10'    '
  +'   bits:=StringSplit(FStrings[0],''__'');'#13#10'       self.TargetNodeName'
  +':=bits[0];'#13#10'       targetNode:=FindDataNodeByid(CodeRootNode,self.Tar'
  +'getNodeName,'''',false);'#13#10'       if targetNode=nil then'#13#10'      '
  +'   targetNode:=FindDataNodeByid(DMRoot,self.TargetNodeName,'''',false);'#13
  +#10'       if targetNode=nil then'#13#10'         targetNode:=FindDataNodeBy'
  +'id(systemNodeTree,self.TargetNodeName,'''',false);'#13#10'       if targetN'
  +'ode<>nil then'#13#10'       begin'#13#10'         if (FStrings[1]=''Animati'
  +'onCode'') then'#13#10'         begin'#13#10'           self.Mode:=''Animati'
  +'onCode'';'#13#10'           Context:=targetNode.NodeType;'#13#10'          '
  +' self.EventType:='''';'#13#10'           CodeEditInit.ItemValue:='''';'#13
  +#10'           CodeEdit.ItemValue:='''';'#13#10'           CodeEditMainTabs.'
  +'TabIndex:=0;'#13#10'         end'#13#10'         else'#13#10'         if FS'
  +'trings.Count>2 then'#13#10'         begin'#13#10'           self.EventType:'
  +'=FStrings[1];'#13#10'           self.Mode:=''EventCode'';'#13#10'          '
  +' Context:=''Event Handler'';'#13#10'           CodeEditInit.ItemValue:=Targ'
  +'etNode.GetEventInitCode(self.EventType);'#13#10'           CodeEdit.ItemVal'
  +'ue:=TargetNode.GetEventCode(self.EventType);'#13#10'           if FStrings['
  +'2]=''EventInitCode'' then'#13#10'           begin'#13#10'             CodeE'
  +'ditMainTabs.TabIndex:=1;'#13#10'           end'#13#10'           else'#13#10
  +'           begin'#13#10'             CodeEditMainTabs.TabIndex:=0;'#13#10' '
  +'          end;'#13#10'         end'#13#10'         else'#13#10'         beg'
  +'in'#13#10'           if targetNode.NodeType=''PasUnit'' then'#13#10'       '
  +'      self.Mode:=''PasUnitCode'''#13#10'           else if targetNode.NodeT'
  +'ype=''PythonScript'' then'#13#10'             self.Mode:=''PythonScriptCode'
  +''''#13#10'           else if targetNode.NodeType=''DMOp'' then'#13#10'     '
  +'        self.Mode:=''DMOpCode'';'#13#10'           Context:=targetNode.Node'
  +'Type;'#13#10'           self.EventType:='''';'#13#10'           CodeEditIni'
  +'t.ItemValue:='''';'#13#10'           CodeEdit.ItemValue:=TargetNode.GetAttr'
  +'ibute(''Code'',true).AttribValue;'#13#10'           CodeEditMainTabs.TabInd'
  +'ex:=0;'#13#10'         end;'#13#10'       end;'#13#10'     end;'#13#10#13#10
  +'     targetLine:=StrToInt(linenum)+1;'#13#10'     if (targetNode<>nil) then'
  +#13#10'       if (self.Mode<>''GPUKernel'')'#13#10'       and (self.Mode<>'''
  +'AnimationCode'') then'#13#10'       begin'#13#10'         self.InitialiseOn'
  +'Show(Context,targetNode.NodeName,self.EventType);'#13#10'         SetCursor'
  +'Position(targetLine,strToInt(charPos));'#13#10'       end'#13#10'       els'
  +'e'#13#10'       begin'#13#10'         // GPU Animation code has a separate '
  ,'editor form...'#13#10'         ShowGPUKernel(targetNode,FileName,targetLine'
  +',CharPos);'#13#10'       end;'#13#10'   end;'#13#10#13#10'   FreeAndNil(FSt'
  +'rings);'#13#10#13#10' end;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm'
  +'.CodeEditHandleClickMessage(e:TEventStatus;nodeID: AnsiString; myValue: Ans'
  +'iString);'#13#10'begin'#13#10'  self.HandleMessageClick(e,nodeID,myValue,Co'
  +'deEdit);'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.CodeEditInitHandl'
  +'eClickMessage(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'begin'#13#10'  self.HandleMessageClick(e,nodeID,myValue,CodeE'
  +'ditInit);'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.CodeEditMainTabs'
  +'HandleChange(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'begin'#13#10'  if CodeEditMainTabs.TabIndex = 1 then'#13#10'  '
  +'  if CodeEditForm.CodeEditInit.ItemValue = '''' then'#13#10'      CodeEditF'
  +'orm.CodeEditInit.ItemValue := DfltEventCode;'#13#10'end;'#13#10#13#10'proce'
  +'dure TCodeEditForm.DoGlobalSearch(TextToFind:String);'#13#10'  {$ifndef JSc'
  +'ript}'#13#10'  procedure SearchThisText(TheName,TheType,TheText:String);'#13
  +#10'  var'#13#10'    lineNumber: integer;'#13#10'    TempMemo:TMemo;'#13#10
  +'    atPos:integer;'#13#10'  begin'#13#10'     TempMemo:=TMemo.Create(nil);'
  +#13#10'     TempMemo.Lines.Text:=TheText;'#13#10'      for lineNumber := 0 t'
  +'o TempMemo.lines.count-1 do'#13#10'      begin'#13#10'        if self.CodeE'
  +'ditFindCase.Checked then'#13#10'          atPos:=Pos( UpperCase(TextToFind)'
  +', UpperCase(TempMemo.lines[lineNumber]) )'#13#10'        else'#13#10'      '
  +'    atPos:=Pos( TextToFind, TempMemo.lines[lineNumber] );'#13#10'        if'
  +' atPos > 0 then'#13#10'          //ShowMessage( ''Found in line '' + IntToS'
  +'tr(lineNumber) );'#13#10'          //self.CodeEdit.TheMessages.Append(TheNa'
  +'me+'' : ''+TheType+'' : ''+TempMemo.lines[lineNumber]);'#13#10'          se'
  +'lf.CodeEdit.AddMessage(TheName+''.''+TheType+''(''+inttostr(lineNumber)+'','
  +'''+inttostr(atPos)+'') ''+TempMemo.lines[lineNumber]);'#13#10'      end;'#13
  +#10'  end;'#13#10'  {$else}'#13#10'  procedure SearchThisText(TheName,TheTyp'
  +'e,TheText:String);'#13#10'  var'#13#10'    lines:TStringList;'#13#10'    i,'
  +'p:integer;'#13#10'  begin'#13#10'    lines:=TStringList.Create;'#13#10'    '
  +'lines.Text:=TheText;'#13#10'    for i:=0 to lines.Count-1 do'#13#10'    beg'
  +'in'#13#10'      if self.CodeEditFindCase.Checked then'#13#10'        p:=Fou'
  +'ndStringCI(lines[i], TextToFind)'#13#10'      else'#13#10'        p:=FoundS'
  +'tring(lines[i], TextToFind);'#13#10'      if p>0 then'#13#10'        self.C'
  +'odeEdit.AddMessage(TheName+''.''+TheType+''(''+inttostr(i)+'',''+inttostr(p'
  +')+'') ''+lines[i]);'#13#10'    end;'#13#10'    FreeAndNil(lines);'#13#10'  '
  +'end;'#13#10'  {$endif}'#13#10#13#10'  procedure SearchEventsCode(CurrentIte'
  +'m:TDataNode);'#13#10'  var dflt:String;'#13#10'      i,k,numchildren:intege'
  +'r;'#13#10'      AllKernels:TAnimCodeArray;'#13#10'  begin'#13#10'    dflt:='
  +'DfltEventCode;'#13#10'    if CurrentItem<>nil then'#13#10'    if CurrentIte'
  +'m.NameSpace='''' then'#13#10'    begin'#13#10'        numchildren:=length(C'
  +'urrentItem.ChildNodes);'#13#10'        for i:=0 to CurrentItem.myEventTypes'
  +'.Count-1 do'#13#10'        begin'#13#10'          if (CurrentItem.HasUserEv'
  +'entCode(CurrentItem.myEventTypes[i]))'#13#10'          and (CurrentItem.Get'
  +'EventCode(CurrentItem.myEventTypes[i])<>dflt) then'#13#10'          begin'
  +#13#10'             SearchThisText(CurrentItem.nodeName+''.''+CurrentItem.my'
  +'EventTypes[i],'#13#10'                            ''EventCode'','#13#10'   '
  +'                         CurrentItem.GetEventCode(CurrentItem.myEventTypes['
  +'i]));'#13#10'             SearchThisText(CurrentItem.nodeName+''.''+Current'
  +'Item.myEventTypes[i],'#13#10'                            ''EventInitCode'','
  +#13#10'                            CurrentItem.GetEventInitCode(CurrentItem.'
  +'myEventTypes[i]));'#13#10'          end;'#13#10'        end;'#13#10'       '
  +' if (CurrentItem.NodeType=''TXGPUCanvas'') then'#13#10'        begin'#13#10
  +'          AllKernels:=TXGPUCanvas(CurrentItem.ScreenObject).FetchAllAnimCod'
  +'e;'#13#10'          for k:=0 to length(AllKernels)-1 do'#13#10'          be'
  +'gin'#13#10'            SearchThisText(CurrentItem.nodeName+''__''+inttostr('
  +'k),''AnimationCode'',AllKernels[k].CodeBlock.Text);'#13#10'          end;'
  +#13#10'        end;'#13#10#13#10'        for i:=0 to numchildren-1 do'#13#10
  +'        begin'#13#10'          SearchEventsCode(CurrentItem.ChildNodes[i]);'
  +#13#10'        end;'#13#10#13#10'    end;'#13#10'  end;'#13#10'  procedure S'
  +'earchCodeNode(ThisNode:TdataNode);'#13#10'  var'#13#10'    i:integer;'#13#10
  +'  begin'#13#10'    if (ThisNode.NodeType=''PasUnit'')'#13#10'    or (ThisNo'
  +'de.NodeType=''PythonScript'')'#13#10'    then'#13#10'    begin'#13#10'     '
  +' SearchThisText(ThisNode.NodeName,ThisNode.NodeType,ThisNode.GetAttribute('
  ,'''Code'',true).AttribValue);'#13#10'    end;'#13#10'    for i:=0 to length('
  +'ThisNode.ChildNodes)-1 do'#13#10'      SearchCodeNode(ThisNode.ChildNodes[i'
  +']);'#13#10'  end;'#13#10'  procedure SearchDMOpsCode(ThisNode:TdataNode);'
  +#13#10'  var'#13#10'    i:integer;'#13#10'  begin'#13#10'    if (ThisNode.No'
  +'deType=''DMOp'')'#13#10'    then'#13#10'    begin'#13#10'      SearchThisTe'
  +'xt(ThisNode.NodeName,ThisNode.NodeType,ThisNode.GetAttribute(''Code'',true)'
  +'.AttribValue);'#13#10'    end;'#13#10'    for i:=0 to length(ThisNode.Child'
  +'Nodes)-1 do'#13#10'      SearchDMOpsCode(ThisNode.ChildNodes[i]);'#13#10'  '
  +'end;'#13#10#13#10'begin'#13#10'  // text blocks to be searched....'#13#10' '
  +' //   Raw Units'#13#10'  //   Functions'#13#10'  //   Event handlers'#13#10
  +'  // search through each text block, listing name, line number and line tex'
  +'t for each found occurrence'#13#10'  // (list found elements in messages bl'
  +'ock)'#13#10'  //!! save any changes first....??'#13#10'  CodeEditStatus:='''
  +'ok'';'#13#10'  if CodeEditForm.Mode<>''SearchCode'' then'#13#10'  begin'#13
  +#10'    CodeEditorClosed(nil);'#13#10'    CodeEditForm.Mode:=''SearchCode'';'
  +#13#10'    CodeEditForm.InitialiseOnShow(''Search Results'','''','''');'#13
  +#10'  end;'#13#10#13#10'  self.CodeEdit.MessageLines:='''';'#13#10'  self.Co'
  +'deEdit.ItemValue:='''';'#13#10'  SearchCodeNode(CodeRootNode);'#13#10'  Sea'
  +'rchEventsCode(UIRootNode);'#13#10'  SearchDMOpsCode(DMRoot);'#13#10#13#10'e'
  +'nd;'#13#10#13#10'procedure TCodeEditForm.DoLocalSearch(TextToFind:String);'
  +#13#10'var'#13#10'    found:integer;'#13#10'    {$ifndef JScript}'#13#10'   '
  +' opts:TSynSearchOptions;'#13#10'    {$else}'#13#10'    txt,qual:String;'#13
  +#10'    {$endif}'#13#10'begin'#13#10'    {$ifndef JScript}'#13#10'    if sel'
  +'f.CodeEditFindCase.Checked then'#13#10'      opts := [ssoEntireScope]'#13#10
  +'    else'#13#10'      opts:= [ssoEntireScope,ssoMatchCase];'#13#10'    foun'
  +'d:=self.CodeEdit.TheEditor.SearchReplace(TextToFind,'''',opts);'#13#10#13#10
  +'    {$else}'#13#10'    qual:=''g'';'#13#10'    if self.CodeEditFindCase.Che'
  +'cked then'#13#10'      qual:=''gi'';'#13#10'    txt:=TextToFind;'#13#10'   '
  +' asm'#13#10'    var textfield=document.getElementById(''CodeEditContentsRea'
  +'l'');'#13#10'    //var regex=new RegExp(txt, "gi");'#13#10'    var regex=ne'
  +'w RegExp(txt, qual);'#13#10'    this.RegExp=regex;'#13#10#13#10'    var ok='
  +'regex.test(textfield.value);'#13#10'    //alert(''test regex.lastIndex=''+r'
  +'egex.lastIndex);'#13#10#13#10'    if (!ok)'#13#10'      {found=-1;}'#13#10
  +'    else {'#13#10'      found=regex.lastIndex;  }'#13#10#13#10'    //alert('
  +'''search(regex) ''+regex+'' found=''+found);'#13#10'    this.LastSearchInde'
  +'x=found;'#13#10'    end;'#13#10'    if found>-1 then'#13#10'      self.Code'
  +'Edit.GoToCharPos(found-length(txt));'#13#10'    self.LastSearchIndex:=found'
  +';'#13#10'    found:=found+1;'#13#10'    {$endif}'#13#10'  if found<1 then'
  +#13#10'    showmessage(''Not found'');'#13#10#13#10'end;'#13#10#13#10'proced'
  +'ure TCodeEditForm.CodeEditFindBtnHandleButtonClick(e: TEventStatus;'#13#10
  +'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  if self.C'
  +'odeEditFindTxt.ItemValue='''' then'#13#10'    showmessage(''Please enter te'
  +'xt to be found'')'#13#10'  else'#13#10'  begin'#13#10'    if CodeEditFindGl'
  +'obal.Checked=false then'#13#10'      DoLocalSearch(self.CodeEditFindTxt.Ite'
  +'mValue)'#13#10'    else'#13#10'      DoGlobalSearch(self.CodeEditFindTxt.It'
  +'emValue);'#13#10'  end;'#13#10'end;'#13#10'procedure TCodeEditForm.CodeEdit'
  +'FindNextBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; '
  +'myValue: AnsiString);'#13#10'var'#13#10'    found:integer;'#13#10'    {$ifn'
  +'def JScript}'#13#10'    opts:TSynSearchOptions;'#13#10'    {$else}'#13#10' '
  +'   txt:String;'#13#10'    startidx:integer;'#13#10'    {$endif}'#13#10'begi'
  +'n'#13#10'  if self.CodeEditFindTxt.ItemValue='''' then'#13#10'    showmessa'
  +'ge(''Please enter text to be found'')'#13#10'  else'#13#10'  begin'#13#10' '
  +'   {$ifndef JScript}'#13#10'    if self.CodeEditFindCase.Checked then'#13#10
  +'      opts := [ssoFindContinue]'#13#10'    else'#13#10'      opts:= [ssoFin'
  +'dContinue,ssoMatchCase];'#13#10'    found:=self.CodeEdit.TheEditor.SearchRe'
  +'place(self.CodeEditFindTxt.ItemValue,'''',opts);'#13#10'    {$else}'#13#10
  +'    txt:=self.CodeEditFindTxt.ItemValue;'#13#10'    startidx:=self.LastSear'
  +'chIndex;'#13#10'    asm'#13#10'    if ((this.RegExp==null)||(this.RegExp==u'
  +'ndefined)) {'#13#10'      alert(''Please use "Find" first''); }'#13#10'    '
  +'else {'#13#10'      var regex=this.RegExp;'#13#10'      regex.lastIndex=sta'
  +'rtidx;'#13#10'      var textfield=document.getElementById(''CodeEditContent'
  +'sReal'');'#13#10'      var ok=regex.test(textfield.value);'#13#10'      if '
  +'(!ok)'#13#10'        {found=-1;}'#13#10'      else {'#13#10'        found=r'
  +'egex.lastIndex;  }'#13#10'      //alert(''test regex.lastIndex=''+regex.las'
  ,'tIndex);'#13#10#13#10'      this.LastSearchIndex=found;'#13#10'      //aler'
  +'t(''regex ''+regex+'' found=''+found);'#13#10'      }'#13#10'    end;'#13#10
  +'    if found>-1 then'#13#10'      self.CodeEdit.GoToCharPos(found-length(tx'
  +'t));'#13#10'    found:=found+1;'#13#10'    {$endif}'#13#10'    if found<1 t'
  +'hen'#13#10'      showmessage(''No further occurrences'');'#13#10#13#10'  en'
  +'d;'#13#10'end;'#13#10#13#10#13#10'procedure TCodeEditForm.CodeEditSaveBtnHa'
  +'ndleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'begin'#13#10'    CodeEditStatus:=''ok'';'#13#10'    TXForm(self).Showing'
  +':=''No'';'#13#10'    CodeEditorClosed(OIEditBox);'#13#10'end;'#13#10#13#10
  +'procedure TCodeEditForm.CodeEditCancelBtnHandleButtonClick(e:TEventStatus;n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  CodeEditStat'
  +'us:=''Cancel'';'#13#10'  TXForm(self).Showing:=''No'';'#13#10'  {$ifndef JS'
  +'cript}'#13#10'  {$else}'#13#10'  OIEditBox:=nil;'#13#10'  {$endif}'#13#10'e'
  +'nd;'#13#10#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('compileusercode','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit CompileUserCode;'#13
  +#10#13#10'(*'#13#10'This unit manages the Free Pascal compilation of user-cr'
  +'eated event handler code'#13#10'into a dll, with functions callable in run '
  +'mode.'#13#10#13#10'Equivalent compilation to JS, for use in the HTML runtim'
  +'e, is done using pas2js compiler.'#13#10#13#10'*)'#13#10#13#10'{$ifndef JSc'
  +'ript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'interface'#13
  +#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, StrUtils, NodeUtils,'
  +'  UtilsJSCompile,'#13#10'  webTranspilerUtils,'#13#10'  XComposite,XGPUCanv'
  +'as,'#13#10'{$ifndef JScript}'#13#10'  {$if defined ( windows)}'#13#10'  Win'
  +'dows,                           // for CurrentThreadID'#13#10'  {$endif}'#13
  +#10'  //CompilerLogUnit,'#13#10'  LazsUtils, Controls, URIParser,'#13#10'  P'
  +'ropEdits,TypInfo, Dialogs, Dynlibs,Process,'#13#10'  XCode, Forms, Events, '
  +'xpparser;'#13#10'{$else}'#13#10'  HTMLUtils,XCode,XIFrame,Events,'#13#10'  '
  +'webfilecache, pas2jswebcompiler, pparser,'#13#10'  InterfaceTypes;'#13#10'{'
  +'$endif}'#13#10#13#10'{$ifdef Python}'#13#10'{$ifndef JScript}'#13#10'type'
  +#13#10'  // record type for queued async functions'#13#10'  TPyXQueueRec = r'
  +'ecord'#13#10'    QDummy: string;'#13#10'  end;'#13#10'  PPyXQueueRec = ^TPy'
  +'XQueueRec;'#13#10'{$endif}'#13#10'type'#13#10'  TPyProcs = class(TObject)'
  +#13#10'    procedure GatherAndRunPythonScripts(parms:PtrInt);'#13#10'  end;'
  +#13#10'var'#13#10'    PyProcs:TPyProcs;'#13#10'{$endif}'#13#10#13#10'functio'
  +'n CompileEventCode(MyCodeEditor:TXCode;RunMode:String):Boolean;'#13#10'func'
  +'tion   DfltUnitCode(UnitName,UnitType:String):string;'#13#10'function   Dfl'
  +'tEventCode:string;'#13#10'function   DfltOpCode:string;'#13#10'function   D'
  +'fltThreadEventCode(NodeName:String):string;'#13#10'function   DfltTreeNodeE'
  +'ventCode:string;'#13#10'function   DfltPythonCode:string;'#13#10'procedure '
  +'GatherSourcedAttributes(StartNode:TDataNode);'#13#10'{$ifdef Python}'#13#10
  +'{$ifdef JScript}'#13#10'procedure GatherAndRunPythonScriptsFromJS;'#13#10'{'
  +'$endif}'#13#10'function RunPyScript(PyScriptCode:TStringList;nm:String):Boo'
  +'lean;'#13#10'procedure GatherAndRunPythonScriptsLater;'#13#10'{$endif}'#13
  +#10#13#10'//type'#13#10'//  TUserPyFile = record'#13#10'//    ModuleName:Str'
  +'ing;'#13#10'//    FuncName:String;'#13#10'//  end;'#13#10'//'#13#10'Var'#13
  +#10'//  PyFuncsList:array of TUserPyFile;'#13#10'  PyFuncsString:String;'#13
  +#10#13#10'var'#13#10'    ConfigfpcPath:String;'#13#10'    AllUserPyCode:Stri'
  +'ng;'#13#10#13#10'{$ifndef JScript}'#13#10'{$else}'#13#10'var'#13#10'    JSO'
  +'utput:String;'#13#10#13#10#13#10'    eventsinterfacepas:String;'#13#10'    '
  +'interfacetypespas:String;'#13#10#13#10'    classespas:String;'#13#10'    co'
  +'ntnrspas:String;'#13#10'    dateutilspas:String;'#13#10'    jspas:String;'
  +#13#10'    mathpas:String;'#13#10'    rtlconstspas:String;'#13#10'    struti'
  +'lspas:String;'#13#10'    systempas:String;'#13#10'    sysutilspas:String;'
  +#13#10'    typespas:String;'#13#10'    typinfopas:String;'#13#10#13#10'{$end'
  +'if}'#13#10#13#10#13#10#13#10'implementation'#13#10'uses  XObjectInsp, PyXUt'
  +'ils, XDataModel;'#13#10#13#10'{$ifndef JScript}'#13#10'type'#13#10'   TMyDL'
  +'L = function (var instring:string): string; stdcall ;'#13#10#13#10'var'#13
  +#10'    AProcess: TProcess;'#13#10'{$endif}'#13#10'var'#13#10'    PascalCode'
  +',ExportsList,NamespaceUnits,PyCodeFromComposites:TStringList;'#13#10'    Al'
  +'lGPUNodes:TNodesArray;'#13#10#13#10#13#10#13#10'{$ifndef JScript}'#13#10'pr'
  +'ocedure DeleteDynamicIncFiles;'#13#10'var'#13#10'  lSearchRec:TSearchRec;'
  +#13#10'  lPath:string;'#13#10'  procedure DeleteThem(aMask:String);'#13#10' '
  +' begin'#13#10'    if FindFirst(lPath+aMask,faAnyFile,lSearchRec) = 0 then'
  +#13#10'    begin'#13#10'      try'#13#10'        repeat'#13#10'          Sys'
  +'Utils.DeleteFile(lPath+lSearchRec.Name);    //!! does not delete any files '
  +'it thinks are open...'#13#10'        until SysUtils.FindNext(lSearchRec) <>'
  +' 0;'#13#10'      finally'#13#10'        SysUtils.FindClose(lSearchRec);  //'
  +' Free resources on successful find'#13#10'      end;'#13#10'    end;'#13#10
  +'  end;'#13#10#13#10'begin'#13#10'  if not DirectoryExists(''tempinc'') then'
  +#13#10'    CreateDir(''tempinc'');'#13#10#13#10'  lPath := ''tempinc/'';'#13
  +#10'  DeleteThem(''*.*'');'#13#10#13#10'  lPath := ''resources/xcomponents/'
  +''';'#13#10'  DeleteThem(''*.ppu'');'#13#10#13#10'end;'#13#10#13#10'procedur'
  +'e CloseMyFile(FileName:String);'#13#10'var'#13#10'   tf: TextFile;'#13#10'b'
  ,'egin'#13#10'  if FileExists(FileName) then'#13#10'  begin'#13#10'    Assign'
  +'File(tf,FileName);'#13#10'   {$I-}'#13#10'    Reset(tf);'#13#10'   {$I+}'#13
  +#10'   if IOResult <> 0 then   // file is open'#13#10'   begin'#13#10'    tr'
  +'y'#13#10'      CloseFile(tf);'#13#10'    finally'#13#10'    end;'#13#10'   '
  +'end;'#13#10' end;'#13#10'end;'#13#10#13#10'procedure WriteRTLIncFile(filepa'
  +'th,filename,suffix:String);'#13#10'var'#13#10'  TheStream:TFileStream;'#13
  +#10'  Incname:string;'#13#10'  TxtLines:TStringList;'#13#10'  i:integer;'#13
  +#10'begin'#13#10'  // Load up the required file'#13#10'  TxtLines:=TStringLi'
  +'st.Create;'#13#10'  TxtLines.LoadFromFile(filepath+filename+''.''+suffix);'
  +#13#10#13#10'  // Set up a file stream for the target .inc file'#13#10'  Inc'
  +'Name:=''tempinc/''+filename+suffix+''.inc'';'#13#10'  try'#13#10'    TheStr'
  +'eam:=TFileStream.Create(IncName,fmCreate or fmOpenRead or fmOpenWrite or fm'
  +'ShareDenyNone);'#13#10'  except'#13#10'    showmessage(''Unable to create f'
  +'ile ''+IncName);'#13#10'  end;'#13#10#13#10#13#10'  if suffix=''js'' then'
  +#13#10'  begin'#13#10'    TxtLines.Text:=''''''''+SubstituteSpecials(TxtLine'
  +'s.Text)+'''''''';'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'      //'
  +' Substitute single-quotes in the text to be copied'#13#10'      TxtLines.Te'
  +'xt:=ReplaceStr(TxtLines.Text,'''''''',''&myapos;'');'#13#10'      for i:=0 '
  +'to TxtLines.Count-1 do'#13#10'      begin'#13#10'        TxtLines[i]:=''+ '
  +'''''''+TxtLines[i]+''\n'''' '' ;'#13#10'      end;'#13#10'  end;'#13#10#13
  +#10#13#10'  // Wrap the text with pascal code that will load it into a strin'
  +'g variable.'#13#10'  if filename+suffix=''gpu-browserjs'' then'#13#10'  beg'
  +'in'#13#10'    // gpu-browser.js'#13#10'    TxtLines.Insert(0,''pas.XGPUCanv'
  +'as.gpujs = '');'#13#10'  end'#13#10'  else if suffix=''js'' then'#13#10'   '
  +' TxtLines.Insert(0,''pas.CompileUserCode.''+filename+suffix+'' = '')'#13#10
  +'  else'#13#10'    TxtLines.Insert(0,''pas.CompileUserCode.''+filename+suffi'
  +'x+'' = '''''''' '');'#13#10#13#10'  TxtLines.Insert(0,''asm'');'#13#10'  Tx'
  +'tLines.Add('';'');'#13#10'  TxtLines.Add(''end;'');'#13#10'  //... and will'
  +' put back the original quote chars'#13#10'  if suffix=''js'' then'#13#10'  '
  +'begin'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    //TxtLines.Add(f'
  +'ilename+suffix+'':=MyStringReplace(''+filename+suffix+'',''''&myapos;'''','
  +''''''''''''''''',-1,-1);'');'#13#10'    TxtLines.Add(filename+suffix+'':=Re'
  +'placeStr(''+filename+suffix+'',''''&myapos;'''','''''''''''''''');'');'#13
  +#10'  end;'#13#10#13#10'  // Save the new .inc file'#13#10'  TxtLines.SaveTo'
  +'Stream(TheStream);'#13#10#13#10'  TheStream.Free;'#13#10'  TxtLines.Free;'
  +#13#10'end;'#13#10#13#10'procedure WriteRTLIncFile(filepath,filename:String)'
  +';  overload;'#13#10'begin'#13#10'  WriteRTLIncFile(filepath,filename,''pas'
  +''');'#13#10'end;'#13#10#13#10'procedure WriteRTLIncFiles;'#13#10'// Write f'
  +'iles required by the pas2js compiler'#13#10'begin'#13#10#13#10'  // minimal'
  +' required rtl set....'#13#10' // WriteRTLIncFile(''resources/rtl/'',''syste'
  +'m'');'#13#10' // WriteRTLIncFile(''resources/rtl/'',''rtlconsts'');'#13#10
  +' // WriteRTLIncFile(''resources/rtl/'',''js'');'#13#10' // WriteRTLIncFile('
  +'''resources/rtl/'',''sysutils'');'#13#10' // WriteRTLIncFile(''resources/rt'
  +'l/'',''types'');'#13#10' // WriteRTLIncFile(''resources/rtl/'',''classes'')'
  +';'#13#10#13#10'  // common rtl set.....'#13#10'  WriteRTLIncFile(''resource'
  +'s/rtl/'',''classes'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''contnr'
  +'s'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''dateutils'');'#13#10'  '
  +'WriteRTLIncFile(''resources/rtl/'',''js'');'#13#10'  WriteRTLIncFile(''reso'
  +'urces/rtl/'',''math'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''rtlco'
  +'nsts'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''strutils'');'#13#10
  +'  WriteRTLIncFile(''resources/rtl/'',''system'');'#13#10'  WriteRTLIncFile('
  +'''resources/rtl/'',''sysutils'');'#13#10'  WriteRTLIncFile(''resources/rtl/'
  +''',''types'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''typinfo'');'#13
  +#10#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''rtti'');'#13#10'  //  W'
  +'riteRTLIncFile(''resources/rtl/'',''timer'');'#13#10'  //  WriteRTLIncFile('
  +'''resources/rtl/'',''nodejs'');'#13#10'  //  WriteRTLIncFile(''resources/rt'
  +'l/'',''objpas'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''libjque'
  +'ry'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''hotreloadclient'')'
  +';'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''class2pas'');'#13#10'  '
  +'//  WriteRTLIncFile(''resources/rtl/'',''browserconsole'');'#13#10'  //  Wr'
  +'iteRTLIncFile(''resources/rtl/'',''web'');'#13#10'  //  WriteRTLIncFile(''r'
  +'esources/rtl/'',''webaudio'');'#13#10'  //  WriteRTLIncFile(''resources/rtl'
  +'/'',''webbluetooth'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''we'
  +'bgl'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''webrouter'');'#13
  ,#10#13#10'  WriteRTLIncFile(''resources/project/'',''gpu-browser'',''js'');'
  +#13#10'end;'#13#10#13#10#13#10'procedure LoadFPCConfig;'#13#10'var'#13#10'  '
  +'TheStream : TFileStream;'#13#10'  TheLines:TStringList;'#13#10'begin'#13#10
  +'  // pick up the last-used config file XIDERunSettings.dta'#13#10'  TheLine'
  +'s:=TStringList.Create;'#13#10'  if FileExists(ProjectDirectory+''XIDERunSet'
  +'tings.dta'') then'#13#10'  begin'#13#10'    try'#13#10'      TheStream:=TFi'
  +'leStream.Create(ProjectDirectory +''XIDERunSettings.dta'',fmOpenRead or fmS'
  +'hareDenyNone);'#13#10'      TheLines.LoadFromStream(TheStream);'#13#10'    '
  +'  TheStream.Free;'#13#10'    except'#13#10'      TheLines.AddStrings(Config'
  +'FPCPath,true);'#13#10'    end;'#13#10'    if TheLines.Count>0 then'#13#10' '
  +'   begin'#13#10'      ConfigfpcPath:=TheLines[0];'#13#10'    end;'#13#10'  '
  +'end;'#13#10'  FreeAndNil(TheLines);'#13#10'end;'#13#10#13#10'{$endif}'#13#10
  +#13#10#13#10'function BuildEventheader(NameSpace,NodeName,EventType,RunMode,'
  +'Phase:String):String;'#13#10'var'#13#10'  procName:String;'#13#10'begin'#13
  +#10'  procName:= ''procedure ''+NameSpace+NodeName + ''Handle'' + EventType '
  +'+ Phase;'#13#10'  if RunMode<>''JSJS'' then'#13#10'  begin'#13#10'    resul'
  +'t:=procName + ''(e:TEventStatus;NodeId: AnsiString; myValue: AnsiString); '
  +''';'#13#10'    if RunMode=''LazDll'' then'#13#10'      result:=result + '' '
  +' stdcall; '';'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    // JSJS'
  +#13#10'    result:=procName + ''(e:TEventStatus;NodeId,myValue:String); '';'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'procedure GatherEventHeaders(RunMode,'
  +'NameSpace:String;StartNode:TDataNode;UnitCode:TStringList;var n:integer);'
  +#13#10'var'#13#10'    i:integer;'#13#10'    tmp,Dflt:string;'#13#10'begin'#13
  +#10'  if StartNode.NameSpace= NameSpace then'#13#10'  begin'#13#10'    // us'
  +'er-created event code is held in the data nodes (node.myEventHandlers[i].Th'
  +'eCode)'#13#10'    if (StartNode.IsDynamic) or (StartNode=UIRootNode) then'
  +#13#10'      for i:=0 to length(StartNode.myEventHandlers)-1 do'#13#10'     '
  +' begin'#13#10'        // (exclude events for worker threads...)'#13#10'    '
  +'    if (StartNode.NodeType<>''TXThreads'')'#13#10'        or (FoundString(S'
  +'tartNode.myEventTypes[i],''Thread'')<>1) then'#13#10'        begin'#13#10' '
  +'         tmp:=StartNode.myEventHandlers[i].TheCode;'#13#10'          dflt:='
  +'DfltEventCode;'#13#10'          if (trim(StartNode.myEventHandlers[i].TheCo'
  +'de)<>'''')'#13#10'          and (tmp<>Dflt) then'#13#10'          begin'#13
  +#10'            n:=n+1;'#13#10'            tmp:=BuildEventHeader(NameSpace,S'
  +'tartNode.NodeName,StartNode.myEventTypes[i],RunMode,'''');'#13#10'         '
  +'   UnitCode.Add(tmp);'#13#10'          end;'#13#10'        end;'#13#10'    '
  +'  end;'#13#10'  end;'#13#10#13#10'    for i:=0 to length(StartNode.ChildNod'
  +'es)-1 do'#13#10'      GatherEventHeaders(RunMode,NameSpace,StartNode.ChildN'
  +'odes[i],UnitCode,n);'#13#10#13#10'end;'#13#10#13#10'procedure GatherEventHe'
  +'adersForWorkerThreads(RunMode:String;StartNode:TDataNode;CodeBlock:TStringL'
  +'ist);'#13#10'var'#13#10'    i:integer;'#13#10'    tmp,Dflt:string;'#13#10'b'
  +'egin'#13#10#13#10'  if (StartNode.IsDynamic)'#13#10'  and (StartNode.NodeTy'
  +'pe=''TXThreads'')  then'#13#10'  begin'#13#10'    for i:=0 to length(StartN'
  +'ode.myEventHandlers)-1 do'#13#10'    begin'#13#10'      if (FoundString(Sta'
  +'rtNode.myEventTypes[i],''Thread'')=1)'#13#10'      and (FoundString(StartNo'
  +'de.myEventTypes[i],''ThreadVars'')<>1) then'#13#10'      begin'#13#10'     '
  +'   tmp:=StartNode.myEventHandlers[i].TheCode;'#13#10'        dflt:=DfltThre'
  +'adEventCode(StartNode.NodeName);'#13#10'        if (trim(StartNode.myEventH'
  +'andlers[i].TheCode)<>'''')'#13#10'        and (tmp<>Dflt) then'#13#10'     '
  +'   begin'#13#10'          tmp:=BuildEventHeader('''',StartNode.NodeName,Sta'
  +'rtNode.myEventTypes[i],RunMode,'''');  //!!!!namespace'#13#10'          Cod'
  +'eBlock.Add(tmp);'#13#10'        end;'#13#10'      end;'#13#10'    end;'#13
  +#10'  end;'#13#10#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13
  +#10'    GatherEventHeadersForWorkerThreads(RunMode,StartNode.ChildNodes[i],C'
  +'odeBlock);'#13#10'end;'#13#10#13#10'procedure GatherVarsForWorkerThreads1(R'
  +'unMode:String;StartNode:TDataNode;CodeBlock:TStringList);'#13#10'var'#13#10
  +'    i:integer;'#13#10'    VarNames:string;'#13#10'    VarNamesList:TStringL'
  +'ist;'#13#10'begin'#13#10#13#10'  if (StartNode.IsDynamic)'#13#10'  and (Sta'
  +'rtNode.NodeType=''TXThreads'')  then'#13#10'  begin'#13#10'    VarNames := '
  +'StartNode.GetAttribute(''ThreadVarNums'',true).AttribValue;'#13#10'    if V'
  +'arNames<>'''' then'#13#10'    begin'#13#10'      CodeBlock.Add(''type TXVar'
  +'s''+StartNode.NodeName+'' = class(TObject)'');'#13#10'      CodeBlock.Add('
  +'''private'');'#13#10'      VarNamesList:=TStringList.Create;'#13#10'      V'
  +'arNamesList.StrictDelimiter:=true;'#13#10'      VarNamesList.Delimiter:='','
  ,''';'#13#10'      VarNamesList.LineBreak:='','';'#13#10'      VarNamesList.T'
  +'ext:=VarNames;'#13#10'      for i:=0 to VarNamesList.Count-1 do'#13#10'    '
  +'  begin'#13#10'          CodeBlock.Add(''  f''+VarNamesList[i]+'':float;'')'
  +';'#13#10'      end;'#13#10'      for i:=0 to VarNamesList.Count-1 do'#13#10
  +'      begin'#13#10'          CodeBlock.Add(''  procedure set''+VarNamesList'
  +'[i]+''(AValue:float);'');'#13#10'      end;'#13#10'      CodeBlock.Add(''pu'
  +'blic'');'#13#10'      for i:=0 to VarNamesList.Count-1 do'#13#10'      begi'
  +'n'#13#10'          CodeBlock.Add(''  property ''+VarNamesList[i]+'':float r'
  +'ead f''+VarNamesList[i]+'' write set''+VarNamesList[i]+'';'');'#13#10'     '
  +' end;'#13#10'      CodeBlock.Add(''end;'');'#13#10'      CodeBlock.Add(''va'
  +'r XVars''+StartNode.NodeName+'':TXVars''+StartNode.NodeName+'';'');'#13#10
  +#13#10'      VarNamesList.Free;'#13#10'    end;'#13#10'  end'#13#10'  else'
  +#13#10'    for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'      Gather'
  +'VarsForWorkerThreads1(RunMode,StartNode.ChildNodes[i],CodeBlock);'#13#10'en'
  +'d;'#13#10'procedure GatherVarsForWorkerThreads2(RunMode:String;StartNode:TD'
  +'ataNode;CodeBlock:TStringList);'#13#10'var'#13#10'    i:integer;'#13#10'   '
  +' VarNames:string;'#13#10'    VarNamesList:TStringList;'#13#10'begin'#13#10
  +#13#10'  if (StartNode.IsDynamic)'#13#10'  and (StartNode.NodeType=''TXThrea'
  +'ds'')  then'#13#10'  begin'#13#10'    VarNames := StartNode.GetAttribute('''
  +'ThreadVarNums'',true).AttribValue;'#13#10'    if VarNames<>'''' then'#13#10
  +'    begin'#13#10'      VarNamesList:=TStringList.Create;'#13#10'      VarNa'
  +'mesList.StrictDelimiter:=true;'#13#10'      VarNamesList.Delimiter:='','';'
  +#13#10'      VarNamesList.LineBreak:='','';'#13#10'      VarNamesList.Text:='
  +'VarNames;'#13#10'      for i:=0 to VarNamesList.Count-1 do'#13#10'      beg'
  +'in'#13#10'          CodeBlock.Add(''procedure TXVars''+StartNode.NodeName+'
  +'''.set''+VarNamesList[i]+''(AValue:float);'');'#13#10'          CodeBlock.A'
  +'dd(''begin'');'#13#10'          CodeBlock.Add(''{$if defined ( windows)}'')'
  +';'#13#10'          CodeBlock.Add(''  if GetCurrentThreadID = MainThreadID  '
  +'then '');         //!!!! and browser code????'#13#10'          CodeBlock.Ad'
  +'d(''{$endif}'');'#13#10'          CodeBlock.Add(''    f''+VarNamesList[i]+'
  +''' := AValue;'');                   //!!!! else... raise error?'#13#10'    '
  +'      CodeBlock.Add(''end;'');'#13#10'      end;'#13#10#13#10'      VarName'
  +'sList.Free;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    for i:=0 '
  +'to length(StartNode.ChildNodes)-1 do'#13#10'      GatherVarsForWorkerThread'
  +'s2(RunMode,StartNode.ChildNodes[i],CodeBlock);'#13#10'end;'#13#10'procedure'
  +' GatherVarsForWorkerThreads3(RunMode:String;StartNode:TDataNode;CodeBlock:T'
  +'StringList);'#13#10'var'#13#10'    i:integer;'#13#10'    VarNames:string;'
  +#13#10'begin'#13#10#13#10'  if (StartNode.IsDynamic)'#13#10'  and (StartNode'
  +'.NodeType=''TXThreads'')  then'#13#10'  begin'#13#10'    VarNames := StartN'
  +'ode.GetAttribute(''ThreadVarNums'',true).AttribValue;'#13#10'    if VarName'
  +'s<>'''' then'#13#10'    begin'#13#10'      CodeBlock.Add(''  XVars''+StartN'
  +'ode.NodeName+'':=TXVars''+StartNode.NodeName+''.Create;'');'#13#10'    end;'
  +#13#10'  end'#13#10'  else'#13#10'    for i:=0 to length(StartNode.ChildNode'
  +'s)-1 do'#13#10'      GatherVarsForWorkerThreads3(RunMode,StartNode.ChildNod'
  +'es[i],CodeBlock);'#13#10'end;'#13#10#13#10'procedure GatherEventCode(RunMod'
  +'e,NameSpace:String;Compiler:TObject;StartNode:TDataNode;UnitCode:TStringLis'
  +'t);'#13#10'var'#13#10'    i:integer;'#13#10'    hdr,tmp,Dflt,ns:string;'#13
  +#10'    IncCode,InitCode:TStringList;'#13#10'begin'#13#10'  if StartNode.Nam'
  +'eSpace=NameSpace then'#13#10'  begin'#13#10'    // user-created event code '
  +'is held in the data nodes (node.myEventHandlers[i].TheCode)'#13#10'    IncC'
  +'ode:=TStringList.Create;'#13#10'    if (StartNode.IsDynamic) or (StartNode='
  +'UIRootNode) then'#13#10'      for i:=0 to length(StartNode.myEventHandlers)'
  +'-1 do'#13#10'      // (exclude events for worker threads...)'#13#10'      i'
  +'f (StartNode.NodeType<>''TXThreads'')'#13#10'      or (FoundString(StartNod'
  +'e.myEventTypes[i],''Thread'')<>1) then'#13#10'      begin'#13#10'        tm'
  +'p:=StartNode.myEventHandlers[i].TheCode;'#13#10'        Dflt:=DfltEventCode'
  +';'#13#10'        if (trim(tmp)<>'''')'#13#10'        and (tmp<>Dflt) then'
  +#13#10'        begin'#13#10'           // Insert a procedure containing the '
  +'code for the event initialisation'#13#10'           hdr:=BuildEventHeader(N'
  +'ameSpace,StartNode.NodeName,StartNode.myEventTypes[i],'''',''Init'');'#13#10
  +'           tmp:=trim(StartNode.myEventHandlers[i].InitCode);'#13#10'       '
  +'    if not PythonCodeExists then'#13#10'             PythonCodeExists := (F'
  +'oundStringCI(tmp,''RunPython('')>0);'#13#10'           InitCode:=StringSpli'
  +'t(tmp,LineEnding);'#13#10'           InitCode.Insert(0,hdr);'#13#10'       '
  ,'    if InitCode.Count=1 then'#13#10'             InitCode.Add(''begin end;'
  +''');'#13#10'           if Namespace='''' then'#13#10'             ns:='''''
  +#13#10'           else'#13#10'             ns:=Namespace+''__'';'#13#10'    '
  +'       WriteIncFile(Compiler,ns+StartNode.NodeName, StartNode.myEventTypes['
  +'i]+''__Init'',''tempinc/'', UnitCode, InitCode);'#13#10#13#10'           //'
  +' Insert a procedure containing the main code for the event'#13#10'         '
  +'  hdr:=BuildEventHeader(NameSpace,StartNode.NodeName,StartNode.myEventTypes'
  +'[i],'''',''Main'');'#13#10'           tmp:=StartNode.myEventHandlers[i].The'
  +'Code;'#13#10'           if not PythonCodeExists then'#13#10'             Py'
  +'thonCodeExists := (FoundStringCI(tmp,''RunPython('')>0);'#13#10'           '
  +'IncCode:=StringSplit(tmp,LineEnding);'#13#10'           IncCode.Insert(0,hd'
  +'r);'#13#10'           WriteIncFile(Compiler,ns+StartNode.NodeName, StartNod'
  +'e.myEventTypes[i],''tempinc/'', UnitCode, IncCode);'#13#10#13#10'          '
  +' // Insert a control procedure to run the init and main code for the event'
  +#13#10'           tmp:=BuildEventHeader(NameSpace,StartNode.NodeName,StartNo'
  +'de.myEventTypes[i],RunMode,'''');'#13#10'           UnitCode.Add(tmp);'#13
  +#10#13#10'           UnitCode.Add(''begin'');'#13#10'           UnitCode.Add'
  +'(''  ExecuteEventHandler(e,nodeID,myValue,'''#13#10'                       '
  +' +''@''+NameSpace+StartNode.NodeName + ''Handle'' + StartNode.myEventTypes['
  +'i] + ''Init''+'','''#13#10'                        +''@''+NameSpace+StartNo'
  +'de.NodeName + ''Handle'' + StartNode.myEventTypes[i] + ''Main''+'');'');'#13
  +#10'           UnitCode.Add(''end;'');'#13#10#13#10#13#10'           {$ifnde'
  +'f JScript}'#13#10'           if RunMode=''LazDll'' then'#13#10'            '
  +' ExportsList.Add(''exports ''+NameSpace+StartNode.NodeName + ''Handle'' + S'
  +'tartNode.myEventTypes[i]+'';'');'#13#10'           {$endif}'#13#10#13#10'  '
  +'      end;'#13#10'      end;'#13#10'    FreeAndNil(IncCode);'#13#10#13#10' '
  +' end;'#13#10#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10' '
  +'     GatherEventCode(RunMode,NameSpace,Compiler,StartNode.ChildNodes[i],Uni'
  +'tCode);'#13#10#13#10'end;'#13#10#13#10'procedure GatherEventCodeForWorkerTh'
  +'reads(RunMode,NameSpace:String;Compiler:TObject;StartNode:TDataNode;CodeBlo'
  +'ck:TStringList);'#13#10'var'#13#10'    i:integer;'#13#10'    hdr,tmp,Dflt,e'
  +'t:string;'#13#10'    IncCode:TStringList;'#13#10'begin'#13#10'  // user-cre'
  +'ated event code is held in the data nodes (node.myEventHandlers[i].TheCode)'
  +#13#10'  IncCode:=TStringList.Create;'#13#10'  if (StartNode.NodeType=''TXTh'
  +'reads'')'#13#10'  and (StartNode.IsDynamic) then'#13#10'    for i:=0 to len'
  +'gth(StartNode.myEventHandlers)-1 do'#13#10'    if FoundString(StartNode.myE'
  +'ventTypes[i],''Thread'')=1 then          // just the Thread<n> events'#13#10
  +'    begin'#13#10'      et:=StartNode.myEventTypes[i];'#13#10'      tmp:=Sta'
  +'rtNode.myEventHandlers[i].TheCode;'#13#10'      Dflt:=DfltThreadEventCode(S'
  +'tartNode.NodeName);'#13#10'      if (trim(tmp)<>'''')'#13#10'      and (tmp'
  +'<>Dflt) then'#13#10'      begin'#13#10#13#10'         // Insert a procedure'
  +' containing the main code for the event'#13#10'         hdr:=BuildEventHead'
  +'er(NameSpace,StartNode.NodeName,StartNode.myEventTypes[i],RunMode,'''');'#13
  +#10'         IncCode:=StringSplit(StartNode.myEventHandlers[i].TheCode,LineE'
  +'nding);'#13#10'         IncCode.Insert(0,hdr);'#13#10'         WriteIncFile'
  +'(Compiler,StartNode.NodeName, StartNode.myEventTypes[i],''tempinc/'', CodeB'
  +'lock, IncCode);'#13#10#13#10'         {$ifndef JScript}'#13#10'         if '
  +'RunMode=''LazDll'' then'#13#10'           CodeBlock.Add(''exports ''+NameSp'
  +'ace+StartNode.NodeName + ''Handle'' + StartNode.myEventTypes[i]+'';'');'#13
  +#10'         {$endif}'#13#10#13#10'      end;'#13#10'    end;'#13#10'  FreeA'
  +'ndNil(IncCode);'#13#10#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 d'
  +'o'#13#10'    GatherEventCodeForWorkerThreads(RunMode,NameSpace,Compiler,Sta'
  +'rtNode.ChildNodes[i],CodeBlock);'#13#10'end;'#13#10#13#10#13#10'procedure B'
  +'uildThreadEventsUnit(Compiler:TObject;RunMode:String);'#13#10'var'#13#10'  '
  +'UnitCode:TStringList;'#13#10'    procedure AddUnitCodeLine(str:String);'#13
  +#10'    begin'#13#10'      UnitCode.add(str);'#13#10'    end;'#13#10'begin'
  +#13#10'  UnitCode:=TStringList.Create;'#13#10'  // Note: this unit does not '
  +'contain the user-interface functions provided for main-thread events'#13#10
  +'  // (units InterfaceTypes, or dllInterface).'#13#10#13#10'  AddUnitCodeLin'
  +'e(''unit ''+DllName+''Threads;'');'#13#10'  AddUnitCodeLine(''{$ifndef JScr'
  +'ipt}'');'#13#10'  AddUnitCodeLine(''{$mode objfpc}{$H+}'');'#13#10'  AddUni'
  +'tCodeLine(''{$endif}'');'#13#10'  AddUnitCodeLine(''interface'');'#13#10'  '
  +'AddUnitCodeLine(''uses Classes, SysUtils, Math, contnrs, dateutils,'');'#13
  +#10'  AddUnitCodeLine(''{$if defined ( windows)}'');'#13#10'  AddUnitCodeLin'
  ,'e(''  windows, '');'#13#10'  AddUnitCodeLine(''{$endif}'');'#13#10'  AddUni'
  +'tCodeLine(''  rtlconsts, strutils, types, typinfo, EventsInterface;'');'#13
  +#10#13#10'  AddUnitCodeLine('''');'#13#10'  AddUnitCodeLine(''type AnsiStrin'
  +'g=String;'');'#13#10#13#10'  AddUnitCodeLine('''');'#13#10'  GatherEventHea'
  +'dersForWorkerThreads(RunMode,SystemNodeTree,UnitCode);'#13#10#13#10'  AddUn'
  +'itCodeLine('''');'#13#10'  GatherVarsForWorkerThreads1(RunMode,SystemNodeTr'
  +'ee,UnitCode);'#13#10#13#10'  AddUnitCodeLine('''');'#13#10'  AddUnitCodeLin'
  +'e(''implementation'' );'#13#10'  AddUnitCodeLine('''');'#13#10#13#10'  Gath'
  +'erVarsForWorkerThreads2(RunMode,SystemNodeTree,UnitCode);'#13#10'  GatherEv'
  +'entCodeForWorkerThreads(RunMode,'''',Compiler,SystemNodeTree,UnitCode);'#13
  +#10#13#10'  AddUnitCodeLine(''    '' );'#13#10'  AddUnitCodeLine(''begin'');'
  +#13#10'  GatherVarsForWorkerThreads3(RunMode,SystemNodeTree,UnitCode);'#13#10
  +'  AddUnitCodeLine(''end.'');'#13#10#13#10'  {$ifndef JScript}'#13#10'  // s'
  +'ave the generated pas file'#13#10'  SysUtils.DeleteFile(''tempinc/''+DllNam'
  +'e+''Threads''+''.pas'');'#13#10'  UnitCode.SaveToFile(''tempinc/''+DllName+'
  +'''Threads''+''.pas'');'#13#10'  {$else}'#13#10#13#10'  TPas2JSWebCompiler(C'
  +'ompiler).WebFS.SetFileContent(DllName+''Threads''+''.pas'',UnitCode.Text);'
  +#13#10'  {$endif}'#13#10#13#10'  // add this unit to the uses list in the ma'
  +'in module'#13#10'  PascalCode.Add('',''+DllName+''Threads'');'#13#10#13#10
  +'  FreeAndNil(UnitCode);'#13#10'end;'#13#10#13#10'function AddPasUnit(UnitNo'
  +'de:TDataNode; MainUnitCode:TStringList;Compiler:TObject):String;'#13#10'var'
  +#13#10'    tmp,nm:string;'#13#10'    UnitCode:TStringList;'#13#10'begin'#13
  +#10'  UnitCode:=TStringList.Create;'#13#10'  // Pascal Unit code is all in a'
  +'ttribute attribute : Code'#13#10'  UnitCode.Clear;'#13#10'  nm:=UnitNode.No'
  +'deName;'#13#10#13#10'  if UnitNode.NameSpace<>'''' then'#13#10'    nm:=Unit'
  +'Node.NameSpace+''__''+nm;'#13#10'  UnitCode.Add(''unit ''+nm+'';'');'#13#10
  +#13#10'  // add user-written unit code block'#13#10'  tmp:=UnitNode.GetAttri'
  +'bute(''Code'',true).AttribValue;'#13#10'  UnitCode.Append(tmp);'#13#10#13#10
  +'  {$ifndef JScript}'#13#10'  // save the generated pas file'#13#10'  SysUti'
  +'ls.DeleteFile(''tempinc/''+nm+''.pas'');'#13#10'  UnitCode.SaveToFile(''tem'
  +'pinc/''+nm+''.pas'');'#13#10'  {$else}'#13#10'  TPas2JSWebCompiler(Compiler'
  +').WebFS.SetFileContent(nm+''.pas'',UnitCode.Text);'#13#10'  //WriteToLocalS'
  +'tore(nm+''.pas'',UnitCode.Text);'#13#10'  XIDEUserUnits.add(nm+''.pas'');  '
  +'    // used within the pas2js compiler (see pparser.pp)'#13#10'  {$endif}'
  +#13#10#13#10'  // add this unit to the uses list in the main module'#13#10' '
  +' MainUnitCode.Add('',''+nm);'#13#10#13#10'  FreeAndNil(UnitCode);'#13#10'  '
  +'result:=nm;'#13#10'end;'#13#10#13#10'procedure AddPyScript(UnitNode:TDataNo'
  +'de; PythonCode:TStringList);'#13#10'var'#13#10'    tmp,nm:string;'#13#10'be'
  +'gin'#13#10'  // Python Script code is all in attribute : Code'#13#10'  nm:='
  +'UnitNode.NodeName;'#13#10'  if UnitNode.NameSpace<>'''' then'#13#10'    nm:'
  +'=UnitNode.NameSpace+''__''+nm;'#13#10#13#10'  PythonCode.add(''print(''''ex'
  +'ecuting script ''+nm+'''''')'');'#13#10#13#10'  // add user-written unit co'
  +'de block'#13#10'  tmp:=UnitNode.GetAttribute(''Code'',true).AttribValue;'#13
  +#10'  PythonCode.Append(tmp);'#13#10#13#10'end;'#13#10#13#10#13#10'procedure'
  +' AddExecFunc(Namespace:String;UnitCode:TStringList);'#13#10'begin'#13#10'  '
  +'UnitCode.Add(''type THandler = procedure(e:TEventStatus;NodeId:AnsiString;m'
  +'yValue:AnsiString); '');'#13#10'  UnitCode.Add(''procedure ExecuteEventHand'
  +'ler(e:TEventStatus;NodeId: AnsiString; myValue: AnsiString; initfunc,mainfu'
  +'nc:THandler); '' );'#13#10'  UnitCode.Add(''var  '' );'#13#10'  UnitCode.Ad'
  +'d(''  asyncWaiting:boolean; '' );'#13#10'  UnitCode.Add(''begin'' );'#13#10
  +'  UnitCode.Add(''  asyncWaiting := false;'' );'#13#10'  UnitCode.Add(''  if'
  +' (e<>nil) then'' );'#13#10'  UnitCode.Add(''    asyncWaiting := e.EventHasW'
  +'aitingAsyncProcs;'' );'#13#10'  UnitCode.Add(''  AppMethods.mmiSetEventsNam'
  +'eSpace(''''''+Namespace+'''''');'' );'#13#10'  UnitCode.Add(''  if ((e=nil)'
  +' or (e.InitDone=false)) '' );'#13#10'  UnitCode.Add(''  and (not asyncWaiti'
  +'ng) then '' );'#13#10'  UnitCode.Add(''  begin '' );'#13#10'  UnitCode.Add('
  +'''    if (e=nil) then'' );'#13#10'  UnitCode.Add(''    begin '' );'#13#10' '
  +' UnitCode.Add(''      e:=TEventStatus.Create(e.eventType,NodeId);'' );'#13
  +#10'  UnitCode.Add(''      e.NameSpace:=''''''+Namespace+'''''';'' );'#13#10
  +'  UnitCode.Add(''    end;'' );'#13#10'  UnitCode.Add(''    e.InitRunning:=t'
  +'rue; '' );'#13#10'  UnitCode.Add(''    e.InitDone:=true;'' );'#13#10'  Unit'
  +'Code.Add(''    initfunc(e,NodeId,myValue);'' );'#13#10'  UnitCode.Add(''   '
  +' e.InitRunning:=false;'' );'#13#10'  UnitCode.Add(''  end;'' );'#13#10'  Un'
  +'itCode.Add(''  if e.AsyncProcsRunning.Count = 1 then'' );'#13#10'  UnitCode'
  ,'.Add(''    e.ClearAsync(''''ShowBusy'''');'' );'#13#10'  UnitCode.Add(''  i'
  +'f e.EventHasWaitingAsyncProcs = false then '' );'#13#10'  UnitCode.Add(''  '
  +'begin '' );'#13#10'  {$ifndef JScript}'#13#10'  UnitCode.Add(''    mainfunc'
  +'(e,NodeId,myValue);'' );'#13#10'  {$else}'#13#10'  UnitCode.Add(''    asm'''
  +' );     /// timeout/job-queue so that any changes made in the ''init'' sect'
  +'on will be refreshed on screen'#13#10'  UnitCode.Add(''    myTimeout(mainfu'
  +'nc,5,''''Event Main'''',0,e,NodeId,myValue); '');'#13#10'  UnitCode.Add('' '
  +'   end;'' );'#13#10'  {$endif}'#13#10'  UnitCode.Add(''  end;'' );'#13#10' '
  +' UnitCode.Add(''end;'' );'#13#10'end;'#13#10#13#10'function GatherUserUnits'
  +'(RunMode:String; Compiler:TObject):String;'#13#10'var'#13#10'    i:integer;'
  +#13#10'    FirstUnitName,nm:string;'#13#10#13#10'begin'#13#10#13#10'  // use'
  +'r-created units are held as data nodes (attribute ''Code'')'#13#10'  // cre'
  +'ate a pas file on disk for each unit, and insert the unit name for the dll '
  +'''uses'' clause'#13#10#13#10'  {$ifdef JScript}'#13#10'  XIDEUserUnits.clea'
  +'r;'#13#10'  {$endif}'#13#10#13#10'  for i:=0 to length(CodeRootNode.ChildNo'
  +'des)-1 do'#13#10'  begin'#13#10'    if CodeRootNode.ChildNodes[i].NodeType='
  +'''PasUnit'' then'#13#10'    begin'#13#10'      nm:=AddPasUnit(CodeRootNode.'
  +'ChildNodes[i],PascalCode,Compiler);'#13#10'      if i=0 then FirstUnitName:'
  +'=nm;'#13#10'    end;'#13#10'  end;'#13#10#13#10'  // Build a separate unit '
  +'to hold ''event'' code for worker threads (within TXThreads components)'#13
  +#10'  // This code is in a separate unit from the main event code so that th'
  +'e scope of worker threads'#13#10'  // can be limited (they are self-contain'
  +'ed, with no access to data/functions in the main thread).'#13#10'  BuildThr'
  +'eadEventsUnit(Compiler,RunMode);'#13#10#13#10'  result:=FirstUnitName;'#13
  +#10#13#10'end;'#13#10#13#10#13#10'procedure GatherUserUnitsInComposites(RunM'
  +'ode,NameSpace:String;StartNode:TDataNode;MainUnitCode:TStringList;Compiler:'
  +'TObject);'#13#10'var'#13#10'    i:integer;'#13#10'    tmp:string;'#13#10'be'
  +'gin'#13#10'  if (StartNode.NodeType=''TXComposite'') then'#13#10'  begin'#13
  +#10'    for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'      if StartN'
  +'ode.ChildNodes[i].NodeType=''PasUnit'' then'#13#10'      begin'#13#10'     '
  +'   tmp:=AddPasUnit(StartNode.ChildNodes[i],MainUnitCode,Compiler);'#13#10' '
  +'     end'#13#10'      else if StartNode.ChildNodes[i].NodeType=''PythonScri'
  +'pt'' then'#13#10'      begin'#13#10'        AddPyScript(StartNode.ChildNode'
  +'s[i],PyCodeFromComposites);'#13#10'      end;'#13#10'  end;'#13#10#13#10'en'
  +'d;'#13#10#13#10'procedure BuildNamespaceUnit(RunMode,NameSpace:String; This'
  +'Node:TDataNode;Compiler:TObject);'#13#10'var'#13#10'    UnitCode:TStringLis'
  +'t;'#13#10'    n:integer;'#13#10'    procedure AddUnitCodeLine(str:String);'
  +#13#10'    begin'#13#10'      UnitCode.add(str);'#13#10'    end;'#13#10#13#10
  +'begin'#13#10#13#10'  // create a pas file on disk for each unit, and insert'
  +' the unit name for the dll ''uses'' clause'#13#10'  {$ifdef JScript}'#13#10
  +'  NamespaceUnits.Add(NameSpace);'#13#10'  {$endif}'#13#10#13#10'  n:=0;'#13
  +#10'  UnitCode:=TStringList.Create;'#13#10#13#10'  // Unit code is built fro'
  +'m separate attributes : Code, Init.'#13#10'  UnitCode.Clear;'#13#10'  AddUn'
  +'itCodeLine(''unit ''+NameSpace+'';'');'#13#10'  AddUnitCodeLine(''{$ifndef '
  +'JScript}'');'#13#10'  AddUnitCodeLine(''{$mode objfpc}{$H+}'');'#13#10'  Ad'
  +'dUnitCodeLine(''{$endif}'');'#13#10'  AddUnitCodeLine(''interface'');'#13#10
  +'  AddUnitCodeLine(''uses Classes, SysUtils, Math, contnrs, dateutils,'');'
  +#13#10'  AddUnitCodeLine(''  rtlconsts, strutils, types, typinfo, EventsInte'
  +'rface'');'#13#10'  GatherUserUnitsInComposites(RunMode,NameSpace,ThisNode,U'
  +'nitCode,Compiler);'#13#10'  if RunMode=''LazDll'' then'#13#10'   AddUnitCod'
  +'eLine(''  ,InterfaceTypesDll;'')'#13#10'  else'#13#10'  begin'#13#10'   Add'
  +'UnitCodeLine(''  ,InterfaceTypes;'');'#13#10'  end;'#13#10#13#10'  GatherEv'
  +'entHeaders(RunMode,NameSpace,SystemNodeTree,UnitCode,n);'#13#10#13#10'  Add'
  +'UnitCodeLine(''implementation'');'#13#10#13#10'  //GatherUserFuncs(RunMode,'
  +'NameSpace,Compiler,CodeRootNode,UnitCode,n);'#13#10#13#10'  AddExecFunc(Nam'
  +'eSpace,UnitCode);'#13#10'  GatherEventCode(RunMode,NameSpace,Compiler,Syste'
  +'mNodeTree,UnitCode);'#13#10#13#10'  AddUnitCodeLine(''    '' );'#13#10'  Ad'
  +'dUnitCodeLine(''begin'');'#13#10'  AddUnitCodeLine(''end.'');'#13#10#13#10
  +'  if n>0 then'#13#10'  begin'#13#10'   {$ifndef JScript}'#13#10'   // save '
  +'the generated pas file'#13#10'   //!!!! namespaces....255 char limit on fil'
  +'e names !!!!!!!!!'#13#10'   SysUtils.DeleteFile(''tempinc/''+NameSpace+''.p'
  +'as'');'#13#10'   UnitCode.SaveToFile(''tempinc/''+NameSpace+''.pas'');'#13
  +#10'   {$else}'#13#10'   TPas2JSWebCompiler(Compiler).WebFS.SetFileContent(N'
  +'ameSpace+''.pas'',UnitCode.Text);'#13#10'   {$endif}'#13#10#13#10'   // add'
  ,' this unit to the uses list in the main module'#13#10'   PascalCode.Add('','
  +'''+NameSpace);'#13#10#13#10'  end;'#13#10#13#10'  FreeAndNil(UnitCode);'#13
  +#10#13#10'end;'#13#10#13#10'procedure ConstructNamespaceUnits(RunMode,NameSp'
  +'ace:String; Compiler:TObject; StartNode:TDataNode);'#13#10'var'#13#10'    i'
  +':integer;'#13#10'    CompositeNameSpace:String;'#13#10'begin'#13#10'  // Wh'
  +'ere a system node is an encapsulated sub-system, the child nodes will have '
  +'a non-blank NamesSpace value.'#13#10'  // For all ''namespace'' nodes, cons'
  +'truct a separate unit to contain user functions and event code local to the'
  +' namespace group.'#13#10'  CompositeNameSpace:=NameSpace;'#13#10'  if Start'
  +'Node.NodeType=''TXComposite'' then'#13#10'  begin'#13#10'    CompositeNameS'
  +'pace:=CompositeNameSpace+StartNode.NodeName;'#13#10'    if length(StartNode'
  +'.ChildNodes)>0 then'#13#10'      BuildNamespaceUnit(RunMode,CompositeNameSp'
  +'ace,StartNode,Compiler);'#13#10'  end;'#13#10#13#10'  // Walk the system tr'
  +'ee looking for namespace components'#13#10'  for i:=0 to length(StartNode.C'
  +'hildNodes)-1 do'#13#10'    if (StartNode.ChildNodes[i].NodeClass=''UI'')'#13
  +#10'    or (StartNode.ChildNodes[i].NodeClass=''Root'') then'#13#10'      Co'
  +'nstructNamespaceUnits(RunMode,CompositeNameSpace,Compiler,StartNode.ChildNo'
  +'des[i]);'#13#10#13#10'end;'#13#10#13#10'procedure ConstructDataModelUnits(R'
  +'unMode:String);'#13#10'begin'#13#10'  ConstructPascalDM(RunMode,PascalCode)'
  +';'#13#10'end;'#13#10#13#10'function ConstructGPUUnits(RunMode:String; Compi'
  +'ler:TObject):Boolean;'#13#10'// Each XGPUCanvas widget contains a set of '''
  +'animation code'' kernels, written in pascal.'#13#10'// Build a separate pas'
  +'cal unit for each GPU widget, which can be called at runtime to'#13#10'// p'
  +'rovide a GPU emulation mode.'#13#10'var'#13#10'  i:integer;'#13#10'  txt:St'
  +'ring;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  result:=true;'#13#10'  All'
  +'GPUNodes := NodeUtils.FindNodesOfType(UIRootNode,''TXGPUCanvas'');'#13#10' '
  +' for i:=0 to length(AllGPUNodes)-1 do'#13#10'  begin'#13#10'    {$ifdef JSc'
  +'ript} asm console.log(''RunMode'',RunMode); end; {$endif}'#13#10'    ok:=TX'
  +'GPUCanvas(AllGPUNodes[i].ScreenObject).BuildPascalAnimationUnit(Compiler,Ru'
  +'nMode);'#13#10'    if ok then'#13#10'    begin'#13#10'      txt:=TXGPUCanva'
  +'s(AllGPUNodes[i].ScreenObject).GeneratedPascalUnit;'#13#10'      // add thi'
  +'s unit to the uses list in the main module'#13#10'      PascalCode.Add('',G'
  +'PUCode''+AllGPUNodes[i].NodeName);'#13#10'    end'#13#10'    else'#13#10'  '
  +'  begin'#13#10'      result:=false;'#13#10'      EXIT;'#13#10'    end;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'{$ifdef Python}'#13#10'function RunPyScr'
  +'ipt(PyScriptCode:TStringList;nm:String):Boolean;'#13#10'var'#13#10'    ok:B'
  +'oolean;'#13#10'    tmp:string;'#13#10'begin'#13#10'  ok:=true;'#13#10'  if '
  +'PyScriptCode.Count > 0 then'#13#10'  begin'#13#10'  {$ifndef JScript}'#13#10
  +'    try'#13#10'    PythonEngine1.ExecStrings( PyScriptCode );'#13#10'    ex'
  +'cept'#13#10'      on E: Exception do'#13#10'      begin'#13#10'        show'
  +'message(''Python error in ''+nm+'' : ''+e.Message);'#13#10'        ok:=fals'
  +'e;'#13#10'      end;'#13#10'    end;'#13#10'    {$else}'#13#10'    tmp:=PyS'
  +'criptCode.Text;'#13#10'    asm'#13#10'    try {'#13#10'    pyodide.runPytho'
  +'n(tmp);'#13#10'    } catch(err) { alert(err.message+''  in ''+nm);'#13#10' '
  +'        ok=false;'#13#10'         }'#13#10'    end;'#13#10'    {$endif}'#13
  +#10'  end;'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'procedure TPyProcs.'
  +'GatherAndRunPythonScripts(parms:PtrInt);'#13#10'var'#13#10'  ok:Boolean;'#13
  +#10'  i,j:integer;'#13#10'  tmp,nm:string;'#13#10'  lines:TStringList;'#13#10
  +'  UnitNode:TdataNode;'#13#10'  PyCode,PyList:TStringList;'#13#10'  txt:Stri'
  +'ng;'#13#10'  {$ifndef JScript}'#13#10'  ReceivedQueueRec: TPyXQueueRec;'#13
  +#10'  {$endif}'#13#10'  function RunPythonCodeAndClear:Boolean;'#13#10'  var'
  +#13#10'    ok:Boolean;'#13#10'  begin'#13#10'    ok:=RunPyScript(PyCode,'''''
  +');'#13#10'    PyCode.Clear;            // this is to reset Python line numb'
  +'ering back to 0'#13#10'    result:=ok;'#13#10'  end;'#13#10#13#10'begin'#13
  +#10'  {$ifndef JScript}'#13#10'  Screen.Cursor := crHourglass;'#13#10'  {$el'
  +'se}'#13#10'  asm console.log(''GatherAndRunPythonScripts''); end;'#13#10'  '
  +'{$endif}'#13#10#13#10'  ok:=true;'#13#10'  // user-created scripts are held'
  +' as data nodes (class ''Code'', type ''PythonScript'')'#13#10'  Lines:=TStr'
  +'ingList.Create;'#13#10'  PyCode:=TStringList.Create;'#13#10'  //PyExeString'
  +'(''import os'');'#13#10'  //PyExeString(''orig = os.getcwd()'');'#13#10'  /'
  +'/PyExeString(''print("orig = ",os.getcwd())'');'#13#10'  //{$ifndef JScript'
  +'}'#13#10'  //PyExeString(''os.chdir("tempinc")'');'#13#10'  //{$else}'#13#10
  +'  //{$endif}'#13#10'  //SetLength(PyFuncsList,0);'#13#10'  PyCode.Clear;'#13
  +#10#13#10'  {$ifndef JScript}'#13#10'  PyCode.add(''def ListFunctions(TempDi'
  ,'ct):'');'#13#10'  PyCode.add(''  functions = []'');'#13#10'  PyCode.add('' '
  +' for key, value in TempDict.items():'');'#13#10'  PyCode.add(''     if call'
  +'able(value) : functions.append(key)'');'#13#10'  PyCode.add(''  return(func'
  +'tions)'');'#13#10'  PyCode.add(''TempDict = locals().copy()'');'#13#10'  Py'
  +'Code.add(''InitialFunctions =  ListFunctions(TempDict)'');'#13#10'  {$else}'
  +#13#10'  // in the browser/Pyodide environment, we have not re-initialised P'
  +'ython on entry to run mode,'#13#10'  // so it is necessary to clear previou'
  +'s declarations of functions from the dictionary first'#13#10'  PyCode.add('
  +'''TempDict = locals().copy()'');'#13#10'  PyCode.add(''FinalFunctions =  Li'
  +'stFunctions(TempDict)'');'#13#10'  PyCode.add(''AddedFunctions = [item for '
  +'item in FinalFunctions if item not in InitialFunctions]'');'#13#10'  PyCode'
  +'.add(''for item in AddedFunctions:'');'#13#10'  PyCode.add(''  exec(str(ite'
  +'m) + " = None")'');'#13#10'  {$endif}'#13#10'  PyCode.add(''WorkingFunction'
  +'s = [item for item in InitialFunctions]'');'#13#10'  PyCode.add(''AllFuncsS'
  +'tr = ''''['''''');'#13#10'  ok:=RunPythonCodeAndClear;'#13#10#13#10'  for i'
  +':=0 to length(CodeRootNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    if ok'
  +' then'#13#10'    begin'#13#10'      if CodeRootNode.ChildNodes[i].NodeType='
  +'''PythonScript'' then'#13#10'      begin'#13#10'       PythonCodeExists:=tr'
  +'ue;'#13#10'       UnitNode:=CodeRootNode.ChildNodes[i];'#13#10'       // co'
  +'de is all in attribute : Code'#13#10'       nm:=UnitNode.NodeName;'#13#10' '
  +'      PyCode.add(''print(''''running script ''+nm+'''''')'');'#13#10'      '
  +' ok:=RunPythonCodeAndClear;'#13#10#13#10'       // add user-written unit co'
  +'de block'#13#10'       tmp:=UnitNode.GetAttribute(''Code'',true).AttribValu'
  +'e;'#13#10'       Lines:=StringSplit(tmp,LineEnding);'#13#10'       for j:=0'
  +' to Lines.Count-1 do'#13#10'         PyCode.add(Lines[j]);'#13#10'       //'
  +'At the bottom of each of our python units add...............'#13#10'       '
  +'PyCode.add(''NewDict = locals().copy()'');'#13#10'       PyCode.add(''Final'
  +'Functions =  ListFunctions(NewDict)'');'#13#10'       PyCode.add(''AddedFun'
  +'ctions = [item for item in FinalFunctions if item not in WorkingFunctions]'
  +''');'#13#10'       //PyCode.add(''print(''''Added '''',AddedFunctions)'');'
  +#13#10'       PyCode.add(''if (len(AddedFunctions)>0) and (AllFuncsStr!='''''
  +'[''''):'');'#13#10'       PyCode.Add(''  AllFuncsStr = AllFuncsStr + '''','
  +''''''');'#13#10'       PyCode.add(''for j in range(len(AddedFunctions)):'')'
  +';'#13#10'       PyCode.add(''  if j>0:'');'#13#10'       PyCode.add(''    A'
  +'llFuncsStr = AllFuncsStr + '''','''''');'#13#10'       PyCode.add(''  AllFu'
  +'ncsStr = AllFuncsStr + ''''"''+nm+'','''' +str(AddedFunctions[j])+''''"'''''
  +''');                // ("myname", "funcname")'#13#10'       PyCode.add(''Wo'
  +'rkingFunctions = [item for item in FinalFunctions]'');'#13#10'       ok:=Ru'
  +'nPythonCodeAndClear;'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10
  +'  PyCode.add(''AllFuncsStr = AllFuncsStr + '''']'''''');'#13#10'  //PyCode.'
  +'add(''print("AllFuncsStr",AllFuncsStr)'');'#13#10'  PyCode.add(''UpdatepyLo'
  +'adedFuncs(AllFuncsStr)'');'#13#10#13#10'    if PythonCodeExists then'#13#10
  +'    begin'#13#10'      AllUserPyCode:=PyCode.Text;'#13#10'      // scripts '
  +'for the main system are held under the root node CodeRootNode.'#13#10'     '
  +' // There may be other scripts held within composite components (already ga'
  +'thered into PyCodeFromComposites).'#13#10'      ok:=RunPyScript(PyCodeFromC'
  +'omposites,'''');'#13#10'      ok:=RunPyScript(PyCode,'''');'#13#10'      {$'
  +'ifdef JScript}'#13#10'      asm console.log(''done GatherAndRunPythonScript'
  +'s''); end;'#13#10'      {$endif}'#13#10'    end;'#13#10'    PyScriptsExecut'
  +'ed:=true;'#13#10#13#10#13#10#13#10'  FreeAndNil(PyCode);'#13#10'  FreeAndNi'
  +'l(Lines);'#13#10'  {$ifndef JScript}'#13#10'  Screen.Cursor := crDefault;'
  +#13#10'  {$endif}'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'procedur'
  +'e GatherAndRunPythonScriptsLater;'#13#10'var'#13#10'  QueueRecToSend: PPyXQ'
  +'ueueRec;'#13#10'begin'#13#10'  New(QueueRecToSend);'#13#10'  QueueRecToSend'
  +'^.QDummy:=''1'';'#13#10'  Application.QueueAsyncCall(@PyProcs.GatherAndRunP'
  +'ythonScripts,PtrInt(QueueRecToSend)); // put msg into queue that will be pr'
  +'ocessed from the main thread after all other messages'#13#10'end;'#13#10'{$'
  +'else}'#13#10'procedure GatherAndRunPythonScriptsFromJS;'#13#10'begin'#13#10
  +'  try'#13#10'  PyProcs.GatherAndRunPythonScripts(0);'#13#10'  except'#13#10
  +'    on E: Exception do'#13#10'    begin'#13#10'      showmessage(''Error ex'
  +'ecuting Python script: ''+e.Message);'#13#10'    end;'#13#10'  end;'#13#10
  +'  DeleteGreyOverlay(''Grey1'');'#13#10'end;'#13#10'procedure GatherAndRunPy'
  +'thonScriptsLater;'#13#10'begin'#13#10'  UpdateWaitMessage(''Grey1'',''Runni'
  +'ng Python Scripts...'');'#13#10'  // timeout here so the grey overlay gets '
  ,'updated'#13#10'  asm'#13#10'  myTimeout(pas.CompileUserCode.GatherAndRunPyt'
  +'honScriptsFromJS,5,''GatherAndRunPythonScriptsFromJS'',0,0);'#13#10'  end;'
  +#13#10'end;'#13#10'{$endif}'#13#10#13#10'{$endif}'#13#10#13#10#13#10'{$ifnde'
  +'f JScript}'#13#10#13#10'procedure WriteProjectIncFiles;'#13#10'begin'#13#10
  +'  WriteRTLIncFile(''resources/xcomponents/'',''eventsinterface'');'#13#10' '
  +' WriteRTLIncFile(''resources/project/'',''interfacetypes'');'#13#10#13#10'e'
  +'nd;'#13#10#13#10'{$endif}'#13#10#13#10'function initialiseCodeToBeCompiled('
  +'RunMode:String; Compiler:TObject; var FirstUnitName:String):Boolean;    //R'
  +'unMode is LazJS, LazDll or JSJS'#13#10'var'#13#10'    i,n:integer;'#13#10' '
  +'   ok:Boolean;'#13#10'begin'#13#10' // delete old .inc and .pas files'#13#10
  +'  {$ifndef JScript}'#13#10' DeleteDynamicIncFiles;'#13#10'  WriteRTLIncFile'
  +'s;'#13#10'  WriteProjectIncFiles;'#13#10'  {$endif}'#13#10' PascalCode.Clea'
  +'r;'#13#10' ExportsList.Clear;'#13#10' PyCodeFromComposites.Clear;'#13#10' n'
  +':=0;'#13#10#13#10' if (RunMode = ''LazJS'') or (RunMode = ''JSJS'') then'#13
  +#10' begin'#13#10'   setlength(XIDEProcsList,0);'#13#10'   // Build pascal s'
  +'ource code for events unit - to be compiled by the Pas2JS compiler'#13#10' '
  +'  PascalCode.Add(''unit ''+DllName+'';'' );'#13#10'   PascalCode.Add(''inte'
  +'rface'' );'#13#10'   PascalCode.Add(''    '' );'#13#10'   PascalCode.Add('''
  +'uses'');'#13#10'   PascalCode.Add(''  Classes, SysUtils, Math, EventsInterf'
  +'ace, InterfaceTypes, '');  //!!!! make uses clause editable ??'#13#10'   Pa'
  +'scalCode.Add(''  contnrs, dateutils, rtlconsts, strutils, types, typinfo'')'
  +';'#13#10#13#10'   FirstUnitName:=GatherUserUnits(RunMode,Compiler);'#13#10
  +'   ConstructNamespaceUnits(RunMode,'''',Compiler,MainFormProjectRoot);'#13
  +#10'   ConstructDataModelUnits(RunMode);'#13#10'   ok:=ConstructGPUUnits(Run'
  +'Mode,Compiler);'#13#10'   if not ok then'#13#10'   begin'#13#10'     result'
  +':=ok;'#13#10'     EXIT;'#13#10'   end;'#13#10'   PascalCode.Add('';'');'#13
  +#10'   PascalCode.Add('''');'#13#10#13#10'   GatherEventHeaders(RunMode,'''''
  +',SystemNodeTree,PascalCode,n);'#13#10#13#10'   PascalCode.Add('''');'#13#10
  +'   PascalCode.Add(''implementation'' );'#13#10'   PascalCode.Add('''');'#13
  +#10#13#10'   AddExecFunc('''',PascalCode);'#13#10'   GatherEventCode(RunMode'
  +','''',Compiler,SystemNodeTree,PascalCode);'#13#10#13#10'   PascalCode.Add('
  +'''    '' );'#13#10'   PascalCode.Add(''begin'');'#13#10'   PascalCode.Add('
  +'''end.'');'#13#10' end'#13#10' else if RunMode = ''LazDll'' then'#13#10' be'
  +'gin'#13#10'   // Build source code for events DLL - to be compiled by the F'
  +'ree Pascal compiler'#13#10'   PascalCode.Add(''library ''+DllName+'';'' );'
  +#13#10'   PascalCode.Add(''{$mode objfpc}{$H+}{$R+}'');'#13#10'   PascalCode'
  +'.Add( ''    '' );'#13#10'   PascalCode.Add(''uses'');'#13#10'   //windows, '
  +'??'#13#10'   {$ifdef linux}'#13#10'   PascalCode.Add(''  cthreads,'');'#13
  +#10'   {$endif}'#13#10'   PascalCode.Add(''  Classes, SysUtils, strutils, Ma'
  +'th, EventsInterface, InterfaceTypesDll '');'#13#10'   FirstUnitName:=Gather'
  +'UserUnits(RunMode,nil);'#13#10'   ConstructNamespaceUnits(RunMode,'''',nil,'
  +'SystemNodeTree);'#13#10'   ConstructDataModelUnits(RunMode);'#13#10'   ok:='
  +'ConstructGPUUnits(RunMode,Compiler);'#13#10'   if not ok then'#13#10'   beg'
  +'in'#13#10'     result:=ok;'#13#10'     EXIT;'#13#10'   end;'#13#10'   Pasca'
  +'lCode.Add('';'');'#13#10'   PascalCode.Add('''');'#13#10'   PascalCode.Add('
  +''''');'#13#10#13#10'   AddExecFunc('''',PascalCode);'#13#10'   GatherEventC'
  +'ode(RunMode,'''',nil,SystemNodeTree,PascalCode);'#13#10#13#10'   PascalCode'
  +'.Add( ''    '' );'#13#10'   PascalCode.Add( ''procedure SetDllContext(mmi:I'
  +'MyMethodInterface); stdcall;'' );'#13#10'   PascalCode.Add( ''begin'' );'#13
  +#10'   PascalCode.Add( ''  InterfaceTypesDll.SetDllContext(mmi);  '' );'#13
  +#10'   PascalCode.Add( ''end;'' );'#13#10'   PascalCode.Add( ''exports SetDl'
  +'lContext;'' );'#13#10'   PascalCode.Add( ''    '' );'#13#10'   for i:=0 to '
  +'ExportsList.Count-1 do'#13#10'     PascalCode.Add(ExportsList[i]);'#13#10' '
  +'  PascalCode.Add( ''    '' );'#13#10'    PascalCode.Add( ''begin'');'#13#10
  +'    PascalCode.Add( ''  '' );'#13#10'    PascalCode.Add( ''end.'');'#13#10
  +' end;'#13#10' {$ifndef Python}'#13#10' if PythonCodeExists then'#13#10'   s'
  +'howmessage(''Warning: The system contains Python code.  These cannot be exe'
  +'cuted unless the XIDE framework is built with the ''''Python'''' option'');'
  +#13#10' {$endif}'#13#10' result:=ok;'#13#10'end;'#13#10#13#10'procedure Gath'
  +'erSourcedAttributes(StartNode:TDataNode);'#13#10'var'#13#10'  i,n:integer;'
  +#13#10'  CompositeNode:TDataNode;'#13#10'  NodesList:TNodesArray;'#13#10'  p'
  +'rocedure CollectAll(StartNode:TDataNode);'#13#10'  var'#13#10'    i:integer'
  +';'#13#10'  begin'#13#10'    if StartNode.IsDynamic then'#13#10'    begin'#13
  +#10'      for i:=0 to length(StartNode.NodeAttributes)-1 do'#13#10'      beg'
  ,'in'#13#10'        if StartNode.NodeAttributes[i].AttribSource.InputNodeName'
  +'<>'''' then'#13#10'        begin'#13#10'          setlength(SourcedAttribs,'
  +'length(SourcedAttribs)+1);'#13#10'          SourcedAttribs[length(SourcedAt'
  +'tribs)-1].TheAttribute:=StartNode.NodeAttributes[i];'#13#10'          Sourc'
  +'edAttribs[length(SourcedAttribs)-1].TheNode:=StartNode;'#13#10'          So'
  +'urcedAttribs[length(SourcedAttribs)-1].InProgress:=false;'#13#10'          '
  +'//SourcedAttribs[length(SourcedAttribs)-1].SourceNode:=FindDataNodeById(Sys'
  +'temNodeTree,'#13#10'          SourcedAttribs[length(SourcedAttribs)-1].Sour'
  +'ceNode:=FindDataNodeById(UIRootNode,'#13#10'                               '
  +'                                                StartNode.NodeAttributes[i]'
  +'.AttribSource.InputNodeName,'#13#10'                                       '
  +'                                        StartNode.NodeAttributes[i].AttribS'
  +'ource.InputNameSpace,'#13#10'                                              '
  +'                                 true);'#13#10'        end;'#13#10'      en'
  +'d;'#13#10'    end;'#13#10'    for i:=0 to length(StartNode.ChildNodes)-1 do'
  +#13#10'    begin'#13#10'      CollectAll(StartNode.ChildNodes[i]);'#13#10'  '
  +'  end;'#13#10'  end;'#13#10'begin'#13#10'  NodesList:=FindNodesOfType(Start'
  +'Node,''TXCompositeIntf'');'#13#10'  for n:=0 to length(NodesList)-1 do'#13
  +#10'  begin'#13#10'  if NodesList[n].IsDynamic then'#13#10'  begin'#13#10'  '
  +'  // For any TXCompositeIntf (composite interface element) nodes, each of i'
  +'ts non-default "input" attributes'#13#10'    // will need to be set up with'
  +' values sourced from the element container (type TXComposite).'#13#10'    /'
  +'/ NB. an input property has attribreadonly set to True on the TXCompositeIn'
  +'tf component.'#13#10'    // An output property has attribreadonly set to Fa'
  +'lse on the TXCompositeIntf component.'#13#10'    CompositeNode:=FindComposi'
  +'teContainer(NodesList[n]);'#13#10'    if CompositeNode<>nil then'#13#10'   '
  +'   for i:=0 to length(NodesList[n].NodeAttributes)-1 do'#13#10'        if ('
  +'not IsADefaultAttrib(''TXCompositeIntf'',NodesList[n].NodeAttributes[i].Att'
  +'ribName))'#13#10'        and (NodesList[n].NodeAttributes[i].AttribReadOnly'
  +'=true) then  //ie. an "input" property'#13#10'        begin'#13#10'        '
  +'  NodesList[n].NodeAttributes[i].AttribSource.InputAttribName:=NodesList[n]'
  +'.NodeAttributes[i].AttribName;'#13#10'          NodesList[n].NodeAttributes'
  +'[i].AttribSource.InputNameSpace:=CompositeNode.NameSpace;'#13#10'          '
  +'NodesList[n].NodeAttributes[i].AttribSource.InputNodeName:=CompositeNode.No'
  +'deName;'#13#10'        end;'#13#10'  end;'#13#10'  end;'#13#10'  NodesList:'
  +'=FindNodesOfType(StartNode,''TXComposite'');'#13#10'  for n:=0 to length(No'
  +'desList)-1 do'#13#10'  begin'#13#10'    // if this node is a TXComposite (c'
  +'omposite element) then each of its non-default "output" attributes'#13#10' '
  +'   // will need to be set up with values sourced from an interface element '
  +'internal to the composite (type TXCompositeIntf).'#13#10'    for i:=0 to le'
  +'ngth(NodesList[n].NodeAttributes)-1 do'#13#10'    begin'#13#10'      if (no'
  +'t IsADefaultAttrib(''TXComposite'',NodesList[n].NodeAttributes[i].AttribNam'
  +'e))'#13#10'      and (NodesList[n].NodeAttributes[i].AttribReadOnly=true) t'
  +'hen //ie. an "output" property'#13#10'      begin'#13#10'        CompositeN'
  +'ode:=FindInterfaceNode(NodesList[n],NodesList[n].NodeName,NodesList[n].Node'
  +'Attributes[i].AttribName);'#13#10'        if CompositeNode<>nil then'#13#10
  +'        begin'#13#10'          NodesList[n].NodeAttributes[i].AttribSource.'
  +'InputAttribName:=NodesList[n].NodeAttributes[i].AttribName;'#13#10'        '
  +'  NodesList[n].NodeAttributes[i].AttribSource.InputNameSpace:=CompositeNode'
  +'.NameSpace;'#13#10'          NodesList[n].NodeAttributes[i].AttribSource.In'
  +'putNodeName:=CompositeNode.NodeName;'#13#10'        end;'#13#10'      end;'
  +#13#10'    end;'#13#10'  end;'#13#10'  CollectAll(StartNode);'#13#10'end;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'function DefaultFPCConfig:String;'#13#10
  +'var'#13#10'  cfg:String;'#13#10'begin'#13#10#13#10'  {$ifdef windows}'#13#10
  +'  cfg:=''C:/fpcupdeluxe/fpc/bin/i386-win32'';   // Location of Lazarus inst'
  +'allation (needed for Free Pascal compilation of user events dll)'#13#10'  {'
  +'$endif}'#13#10'  {$ifdef linux}'#13#10'  cfg:=''/home/pi/fpcupdeluxe/fpc/bi'
  +'n/arm-linux'';'#13#10'  {$endif}'#13#10'  result:=cfg;'#13#10#13#10'end;'#13
  +#10#13#10'procedure RunFPCCompiler(MyCodeEditor:TXCode; DLLFileName,PASFileN'
  +'ame:String);'#13#10'var'#13#10'    Lines:TStringList;'#13#10'begin'#13#10' '
  +' Lines:=TStringList.Create;'#13#10'  SysUtils.DeleteFile(''resources/projec'
  +'t/''+DLLFileName);'#13#10'  SysUtils.DeleteFile(''fpcerrors.txt'');'#13#10
  +'  SysUtils.DeleteFile(''fpcdebug.txt'');'#13#10#13#10'  //Unload the lib, i'
  +'f already loaded'#13#10'  if MyLibC <>  DynLibs.NilHandle then'#13#10'    i'
  ,'f FreeLibrary(MyLibC) then'#13#10'      MyLibC:= DynLibs.NilHandle;'#13#10
  +#13#10'  // create the TProcess object'#13#10'  AProcess := TProcess.Create('
  +'nil);'#13#10#13#10'  // Tell the new AProcess what the command to execute i'
  +'s.'#13#10'  // Use the Free Pascal compiler'#13#10'  AProcess.Executable:= '
  +'ConfigfpcPath+''/fpc'';'#13#10#13#10'  // add parameters'#13#10'  AProcess.'
  +'Parameters.Add(''@''+ConfigfpcPath+''/fpc.cfg'');'#13#10#13#10'  AProcess.P'
  +'arameters.Add(''resources/project/''+PASFileName);'#13#10'  AProcess.Parame'
  +'ters.Add(''-Fu./resources/xcomponents'');      // for EventsInterface.pas'
  +#13#10'  AProcess.Parameters.Add(''-Fu./tempinc'');'#13#10'  AProcess.Parame'
  +'ters.Add(''-Fi./tempinc'');'#13#10'  AProcess.Parameters.Add(''-Fefpcerrors'
  +'.txt'');'#13#10'  AProcess.Parameters.Add(''-dDll'');'#13#10'  AProcess.Par'
  +'ameters.Add(''-gl'');'#13#10'  //AProcess.Parameters.Add(''-debug-log=DllDe'
  +'bugLog.log'');'#13#10'  AProcess.Parameters.Add(''-vewilv'');              '
  +'//verbose     //v: writes to fpcdebug.txt'#13#10'  AProcess.Parameters.Add('
  +'''-Xg'');              //debugging    //compiler debugging'#13#10'  AProces'
  +'s.Parameters.Add(''-B'');                //build all units'#13#10'  AProces'
  +'s.Parameters.Add(''-Cr'');               //range checking'#13#10'//    APro'
  +'cess.Parameters.Add(''-k -R ./'');               //pass to linker'#13#10'  '
  +'//AProcess.Parameters.Add(''-gw'');'#13#10#13#10'  {$ifdef linux}'#13#10'  '
  +'AProcess.Parameters.Add(''-fPIC'');              // Generate PIC code'#13#10
  +'  {$endif}'#13#10#13#10'  // We will define an option for when the program'
  +#13#10'  // is run. This option will make sure that our program'#13#10'  // '
  +'does not continue until the program we will launch'#13#10'  // has stopped '
  +'running.'#13#10'  // see for bug fix ..... http://wiki.freepascal.org/Execu'
  +'ting_External_Programs#Reading_large_output'#13#10'  //AProcess.Options := '
  +'AProcess.Options + [poWaitOnExit, poUsePipes, poNoConsole];'#13#10'  //APro'
  +'cess.Options := AProcess.Options + [poWaitOnExit, poUsePipes, poNewConsole]'
  +';'#13#10'  AProcess.Options := AProcess.Options + [poWaitOnExit, poUsePipes'
  +'];'#13#10#13#10'  Lines.clear;'#13#10'  // Now let AProcess run the program'
  +#13#10'  try'#13#10'    try'#13#10'    AProcess.Execute;'#13#10'    except'
  +#13#10'      on E:Exception do'#13#10'      begin'#13#10'        showmessage'
  +'(''Unable to execute process fpc.exe.  Check Run Settings. ''+e.Message);'
  +#13#10'        MyCodeEditor.MessageLines:=''Error: Unable to execute process'
  +' fpc.exe.  Check Run Settings. ''+e.Message;'#13#10'      end;'#13#10'    e'
  +'nd;'#13#10'  finally'#13#10'    // Now read the output of fpc into a memo'
  +#13#10'    if FileExists(''fpcerrors.txt'') then'#13#10'    begin'#13#10'   '
  +'   Lines.LoadFromFile(''fpcerrors.txt'');'#13#10'      MyCodeEditor.Message'
  +'Lines:=Lines.Text;'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10' '
  +'     MyCodeEditor.MessageLines:=''Error: Cannot find fpc output file fpcerr'
  +'ors.txt.  Check Run Settings.'';'#13#10'    end;'#13#10'  end;'#13#10'  // '
  +'This is not reached until process stops running.'#13#10'  AProcess.Free;'#13
  +#10'  Lines.Free;'#13#10#13#10'end;'#13#10#13#10'function CheckForCompilatio'
  +'nErrors(MyCodeEditor:TXCode;DllFileName,RunMode:String):Boolean;'#13#10'var'
  +#13#10'  FoundError,FoundFatal:Boolean;'#13#10'  i:integer;'#13#10'begin'#13
  +#10'  // check messages for errors'#13#10'  FoundError:=false;'#13#10'  Foun'
  +'dFatal:=false;'#13#10'  i:=0;'#13#10'  while (i<MyCodeEditor.TheMessages.li'
  +'nes.Count)'#13#10'  and (FoundError=false)'#13#10'  and (FoundFatal=false) '
  +'do'#13#10'  begin'#13#10'    MyCodeEditor.GetMessage(FoundError,MyCodeEdito'
  +'r.TheMessages.lines[i],''Error:'');'#13#10'    MyCodeEditor.GetMessage(Foun'
  +'dFatal,MyCodeEditor.TheMessages.lines[i],''Fatal:'');'#13#10'    i:=i+1;'#13
  +#10'  end;'#13#10#13#10'  // does the compiled file exist?'#13#10'  if (RunM'
  +'ode = ''LazDll'')'#13#10'  and (not FileExists(''resources/project/''+DLLFi'
  +'leName)) then'#13#10'    FoundError:=true;'#13#10#13#10'  if (FoundError) o'
  +'r (FoundFatal) then'#13#10'    result:=false'#13#10'  else'#13#10'    resul'
  +'t:=true;'#13#10#13#10'end;'#13#10#13#10'function CompileEventCode(MyCodeEdi'
  +'tor:TXCode; RunMode:String):Boolean;'#13#10'var'#13#10'   ExtraDirectives:T'
  +'StringList;'#13#10'   PASFileName,FirstUnitName:string;'#13#10'   DLLFileNa'
  +'me:string;'#13#10'   i:integer;'#13#10'   ok:Boolean;'#13#10'begin'#13#10' '
  +' Screen.Cursor := crHourglass;'#13#10'  PythonCodeExists:=false;'#13#10#13
  +#10'  ExtraDirectives:=TStringList.Create;'#13#10#13#10'  XIDEProjectDir:=Pr'
  +'ojectDirectory;   // see xpparser'#13#10#13#10'  DllName:=MainUnitName+''Ev'
  +'ents'';'#13#10#13#10'  // clean up from previous runs'#13#10'  MyCodeEditor'
  +'.MessageLines:='''';'#13#10#13#10'  PASFileName:= DllName+''.pas'';'#13#10
  +'  SysUtils.DeleteFile(''resources/project/''+PASFileName);'#13#10'  SysUtil'
  ,'s.DeleteFile(''resources/project/''+DllName+''.o'');'#13#10#13#10'  ok:=Ini'
  +'tialiseCodeToBeCompiled(RunMode,nil,FirstUnitName);'#13#10'  if ok then'#13
  +#10'  begin'#13#10'    MyCodeEditor.ItemValue:=PascalCode.Text;'#13#10'    /'
  +'/ save the text to be compiled to the .pas file'#13#10'    MyCodeEditor.The'
  +'Editor.Lines.SaveToFile(''resources/project/''+PASFileName);'#13#10#13#10' '
  +'   if RunMode = ''LazJS'' then'#13#10'    begin'#13#10'      // run the pas'
  +'2js compiler just for the events unit to check for errors'#13#10'      {$if'
  +'def Python}'#13#10'      ExtraDirectives.add(''-dPython'');'#13#10'      {$'
  +'endif}'#13#10'      TranspileMyProgram(DllName,ProjectDirectory,''resources'
  +'/project/'',MyCodeEditor,false,ExtraDirectives);'#13#10'      // retrieve t'
  +'he list of functions to be shown under the code tree'#13#10'      RebuildCo'
  +'deTree;  //uses xpparser.XIDEProcsList;'#13#10'    end'#13#10#13#10'    els'
  +'e if RunMode = ''LazDll'' then'#13#10'    begin'#13#10'      // run the fre'
  +'e pascal compiler (FPC) to create the dll'#13#10'      // (from http://wiki'
  +'.freepascal.org/Executing_External_Programs#TProcess)'#13#10'      DLLFileN'
  +'ame:= DllName+''.''+SharedSuffix;'#13#10'      {$ifdef linux}'#13#10'      '
  +'DLLFileName:=''lib''+DLLFileName;'#13#10'      {$endif}'#13#10'      RunFPC'
  +'Compiler(MyCodeEditor,DLLFileName,PASFileName);'#13#10'    end;'#13#10#13#10
  +'    ok := CheckForCompilationErrors(MyCodeEditor,DllFileName,RunMode);'#13
  +#10#13#10'  end;'#13#10#13#10'  ExtraDirectives.Free;'#13#10#13#10'  Screen.'
  +'Cursor := crDefault;'#13#10#13#10'  result:=ok;'#13#10#13#10'end;'#13#10#13
  +#10'{$else}'#13#10#13#10'function ExtractModuleName(instr:String):String;'#13
  +#10'var'#13#10'  k:integer;'#13#10'  found:boolean;'#13#10'  modname:String;'
  +#13#10'begin'#13#10'  found:=false;'#13#10'  k:=1;'#13#10'  while k< length('
  +'instr) do'#13#10'  begin'#13#10'    if instr[k]=''"'' then'#13#10'    begin'
  +#13#10'      if found then'#13#10'        k:=length(inStr)'#13#10'      else'
  +#13#10'        found:=true;'#13#10'    end'#13#10'    else if found then'#13
  +#10'      modname:=modname+instr[k];'#13#10'    k:=k+1;'#13#10'  end;'#13#10
  +'  //showmessage(''found name ''+modname);'#13#10'  result:=modname;'#13#10
  +'end;'#13#10#13#10'function LocateNextModule(var inLines:TStringList):intege'
  +'r;'#13#10'var'#13#10'  i,j,k:integer;'#13#10'  modname,tmp:String;'#13#10'b'
  +'egin'#13#10'  result:=-1;'#13#10'  tmp:=inLines.Text;'#13#10'  i:=0;'#13#10
  +'  j:=0;'#13#10'  while i < inLines.Count do'#13#10'  begin'#13#10'    j:=Fo'
  +'undString(inLines[i],''rtl.module("'');'#13#10'    if j > 0 then'#13#10'   '
  +' begin'#13#10'      result:=i;'#13#10'      i:=inLines.Count;'#13#10'    en'
  +'d;'#13#10'    i:=i+1;'#13#10'  end;'#13#10'  //showmessage(''linenum=''+int'
  +'tostr(result)+'' line is ''+inLines[result]);'#13#10'end;'#13#10#13#10'func'
  +'tion CompileEventCode(MyCodeEditor:TXCode; RunMode:String):Boolean;'#13#10
  +'var'#13#10'  tmp,FirstUnitName,CurrentUnitName:String;'#13#10'  ok:Boolean;'
  +#13#10'  i,j,l:integer;'#13#10'  args,JSOutputLines,JSKeep : TStringList;'#13
  +#10'  Res,PasModuleExists : Boolean;'#13#10'  lWebFS : TPas2JSWebFS;'#13#10
  +'  NSUnits,GPUUnits:array of String;'#13#10'begin'#13#10'  PythonCodeExists:'
  +'=false;'#13#10'  NamespaceUnits.Clear;'#13#10#13#10'  MyWebCompiler.mycodee'
  +'ditor:=MyCodeEditor;'#13#10'  DllName:=MainUnitName+''Events'';'#13#10'  //'
  +' clean up from previous runs'#13#10'  MyCodeEditor.MessageLines:='''';'#13
  +#10#13#10'  //.....Run the compiler .......'#13#10#13#10'  MyWebCompiler.Com'
  +'piler.Log.OnLog:=@MyWebCompiler.DoLog;'#13#10#13#10'  MyWebCompiler.Compile'
  +'r.WebFS.LoadBaseURL:='''';'#13#10#13#10'  ok:=InitialiseCodeToBeCompiled(Ru'
  +'nMode,MyWebCompiler.Compiler,FirstUnitName); // populates PascalCode string'
  +'list, and builds user units'#13#10'  if ok then'#13#10'  begin'#13#10'    M'
  +'yCodeEditor.ItemValue:=PascalCode.Text;'#13#10'    //WriteToLocalStore(''Co'
  +'mpileMain'',PascalCode.Text);'#13#10#13#10'    Res:=False;'#13#10#13#10'   '
  +' lWebFS:=MyWebCompiler.Compiler.WebFS;'#13#10'    // Load up the RTL source'
  +'s that are required for the compilation...    //!!!! maybe do this only onc'
  +'e??'#13#10'    asm'#13#10'    lWebFS.SetFileContent(''eventsinterface.pas'''
  +',pas.CompileUserCode.eventsinterfacepas);'#13#10'    lWebFS.SetFileContent('
  +'''interfacetypes.pas'',pas.CompileUserCode.interfacetypespas);'#13#10'    e'
  +'nd;'#13#10'    LoadRTLFilesForPas2JS(lWebFS);'#13#10#13#10'    // Load up t'
  +'he main .pas file'#13#10'    lWebFS.SetFileContent(DllName+''.pas'',PascalC'
  +'ode.Text);'#13#10#13#10'    args:=TStringList.Create;'#13#10'    try'#13#10
  +'      //Args.Add(-Jeutf-8);      //  encode messages as:  Unicode UTF-8. De'
  +'fault when using -Fe.'#13#10'      //-Jminclude               //  include P'
  +'ascal sources in source map.'#13#10'//      Args.Add(''-Tbrowser'');   //  '
  +'Set target platform'#13#10'    // -Tnodejs'#13#10'      Args.Add(''-vwnhe'''
  ,');'#13#10'      Args.Add(''-O-'');           //  Disable optimizations'#13
  +#10'      Args.Add(''-Jc'');           //  Write all JavaScript concatenated'
  +' into the output file'#13#10'      //      Args.Add(''-Jirtl.js'');   //  I'
  +'nsert JS file <x> into main JS file.'#13#10'      Args.Add(''-Jirtl.js-'');'
  +'         //  Remove a JS file.'#13#10'      Args.Add(''-dJScript'');'#13#10
  +'      Args.Add(''-B'');                //build all units'#13#10'// -Pecmasc'
  +'ript5     // Set target processor.'#13#10'// -MobjFPC  // FPC''s Object Pas'
  +'cal compatibility mode (default)'#13#10'// -Sc      // Support operators li'
  +'ke C (*=,+=,/= and -=)'#13#10'// -Ju<x> : Add <x> to foreign unit paths. Fo'
  +'reign units are not compiled.'#13#10'      Args.Add(DllName+''.pas'');'#13
  +#10#13#10'      //........................................................'
  +#13#10'      MyWebCompiler.Compiler.Run('''','''',Args,True);'#13#10'      R'
  +'es:=MyWebCompiler.Compiler.ExitCode=0;'#13#10'      //.....................'
  +'...................................'#13#10#13#10'    finally'#13#10'     Ar'
  +'gs.Free;'#13#10'    end;'#13#10#13#10'    //EditAttributeValue(''XMemo2'','
  +''''',''ItemValue'',PascalCode.Text);        //!!!! temporary for debugging'
  +#13#10#13#10'    if res=true then'#13#10'    begin'#13#10#13#10'      // Fir'
  +'st De-register the events unit, plus any other user units used'#13#10'     '
  +' SetLength(NSUnits,NamespaceUnits.Count);'#13#10'      for i:=0 to Namespac'
  +'eUnits.Count-1 do'#13#10'        NSUnits[i]:=NamespaceUnits[i];'#13#10'    '
  +'  SetLength(GPUUnits,length(AllGPUNodes));'#13#10'      for i:=0 to length('
  +'AllGPUNodes)-1 do'#13#10'      begin'#13#10'        GPUUnits[i]:=AllGPUNode'
  +'s[i].NodeName;'#13#10'      end;'#13#10'      asm'#13#10'      try {'#13#10
  +'      var hd=document.head;'#13#10'      var div=document.getElementById('''
  +'UserEventCodeContainer'');'#13#10'      if (div==null) {'#13#10'         di'
  +'v=document.createElement(''div'');'#13#10'         div.id=''UserEventCodeCo'
  +'ntainer'';'#13#10'         hd.appendChild(div);'#13#10'         }'#13#10'  '
  +'    div.innerHTML='''';'#13#10#13#10'      // remove the prior registration'
  +' of this module...'#13#10'      if (pas[pas.Events.DllName]) {'#13#10'     '
  +'   pas[pas.Events.DllName]=null;'#13#10'        // and any user units ....'
  +#13#10'        var codeRoot=pas.NodeUtils.CodeRootNode;'#13#10'        for ('
  +'var i=0; i<codeRoot.ChildNodes.length; i++) {'#13#10'             if (codeR'
  +'oot.ChildNodes[i].NodeType==''PasUnit'')'#13#10'                {'#13#10'  '
  +'               //alert(''removing unit ''+codeRoot.ChildNodes[i].NodeName);'
  +#13#10'                 pas[codeRoot.ChildNodes[i].NodeName]=null;'#13#10'  '
  +'               }'#13#10'           }'#13#10'        // and any TXComposite '
  +'(namespace) units....'#13#10'        for (i=0; i<NSUnits.length; i++) {'#13
  +#10'          pas[NSUnits[i]]=null;'#13#10'        }'#13#10'        // and a'
  +'ny TXGPUCanvas (emulation) units....'#13#10'        for (i=0; i<GPUUnits.le'
  +'ngth; i++) {'#13#10'          pas[GPUUnits[i]]=null;'#13#10'          pas['
  +'''GPUCode''+GPUUnits[i]]=null;'#13#10'        }'#13#10'        // and the w'
  +'orker threads unit ....'#13#10'        pas[pas.Events.DllName+''Threads'']='
  +'null;'#13#10#13#10'        // and the DataModel unit ....'#13#10'        va'
  +'r DMRoot=pas.XDataModel.DMRoot;'#13#10'        //console.log(''removing uni'
  +'t DMRoot'');'#13#10'        pas[''DMRoot'']=null;'#13#10#13#10'        }'#13
  +#10'      } catch(err) { alert(err.message + '' in CompileEventCode (units d'
  +'e-registration) '');     div.innerHTML=''''; ok=false;}'#13#10'      end;'
  +#13#10#13#10'      // Capture the output from the Pas2JS compiler'#13#10'   '
  +'   JSOutput:=MyWebCompiler.Compiler.WebFS.GetFileContent(DllName+''.js'');'
  +#13#10#13#10'      // Delete from the JS file all units that already exist i'
  +'n the main page...'#13#10'      if FirstUnitName='''' then FirstUnitName:=D'
  +'llName;'#13#10#13#10'      // pas2js has produced a JS output file includin'
  +'g all referenced rtl units.'#13#10'      // Chop up the output into separat'
  +'e modules, and retain only those rtl modules'#13#10'      // that are not a'
  +'lready registered...'#13#10'      JSOutputLines:=TStringList.Create;'#13#10
  +'      JSOutputLines.Text:=JSOutput;'#13#10'      JSKeep:=TStringList.Create'
  +';'#13#10#13#10'      PasModuleExists:=false;'#13#10#13#10'      CurrentUnit'
  +'Name:=''.'';'#13#10'      while (CurrentUnitName<>'''')'#13#10'      and (C'
  +'urrentUnitName<>FirstUnitName) do'#13#10'      begin'#13#10'        i:=Loca'
  +'teNexTModule(JSOutputLines);'#13#10'        CurrentUnitName:=ExtractModuleN'
  +'ame(JSOutputLines[i]);'#13#10'        //asm console.log(''i='',i,'' checkin'
  +'g module ''+CurrentUnitName); end;'#13#10'        if (i-1) > 0 then'#13#10
  +'          for j:=0 to i-1 do'#13#10'          begin'#13#10'            if P'
  +'asModuleExists=false then'#13#10'              JSKeep.Add(JSOutputLines[0])'
  ,';'#13#10'            JSOutputLines.Delete(0);'#13#10'          end;'#13#10
  +'        //deal with this module...'#13#10'        if (CurrentUnitName<>Firs'
  +'tUnitName) then'#13#10'        begin'#13#10'          PasModuleExists:=true'
  +';'#13#10'          asm'#13#10'          //console.log(pas[CurrentUnitName])'
  +';'#13#10'          if (pas[CurrentUnitName]==undefined) {'#13#10'          '
  +'   PasModuleExists = false;'#13#10'          }'#13#10'          end;'#13#10
  +'          if PasModuleExists = false then'#13#10'          begin'#13#10'   '
  +'         //asm console.log(''keeping module ''+CurrentUnitName); end;'#13#10
  +'            JSKeep.Add(JSOutputLines[0]);'#13#10'          end;'#13#10'    '
  +'      JSOutputLines.Delete(0);'#13#10'        end;'#13#10'      end;'#13#10
  +#13#10'      //tmp:=JSKeep.Text;'#13#10'      //asm alert( tmp); end;'#13#10
  +#13#10'      JSOutput:=JSKeep.Text + JSOutputLines.Text;'#13#10'      JSOutp'
  +'utLines.Free;'#13#10'      JSKeep.Free;'#13#10'    end;'#13#10#13#10'    //'
  +'EditAttributeValue(''XMemo1'','''',''ItemValue'',JSOutput);        //!!!! t'
  +'emporary for debugging'#13#10#13#10'    ok:=res;'#13#10'    if res=true the'
  +'n'#13#10'    begin'#13#10#13#10'      //showmessage(''Events compilation do'
  +'ne.  Output=''+JSOutput);'#13#10#13#10'      // Inject the generated JS scr'
  +'ipt'#13#10'      asm'#13#10'      try {'#13#10'        //alert(''inject scr'
  +'ipt : ''+ pas.CompileUserCode.JSOutput);'#13#10'        var script = docume'
  +'nt.createElement(''script'');'#13#10'        script.innerHTML = pas.Compile'
  +'UserCode.JSOutput;'#13#10'        div.appendChild(script);'#13#10'      } c'
  +'atch(err) { alert(err.message + '' in CompileEventCode (injecting script) '
  +''');     div.innerHTML=''''; ok=false;}'#13#10#13#10'      try {'#13#10#13
  +#10'        //alert(''try re-registration...'');'#13#10'        // must re-r'
  +'egister the events unit and any user units in its uses clause....'#13#10'  '
  +'      var module = pas[pas.Events.DllName];'#13#10'        //alert(''module'
  +' ''+pas.Events.DllName+''=''+module);'#13#10'        if (module!=null) {'#13
  +#10'          rtl.loadintf(module);      // to register the new module''s pr'
  +'operties'#13#10'          rtl.loadimpl(module);      // to register the new'
  +' module''s properties'#13#10'        }'#13#10'        else {alert(''Problem'
  +' encountered with unit registration in rtl'');'#13#10'              ok=fals'
  +'e;'#13#10'              }'#13#10'        } catch(err) { alert(err + '' in C'
  +'ompileEventCode (module registration) '');     div.innerHTML=''''; ok=false'
  +';}'#13#10'        //} catch(err) { alert(err.name+'' ''+err.at+'' ''+err.te'
  +'xt+'' ''+err.message + '' in CompileEventCode 2 '');     div.innerHTML='''''
  +'; ok=false;}'#13#10#13#10'      end;'#13#10'    end;'#13#10#13#10'    // re'
  +'trieve the list of functions to be shown under the code tree'#13#10'    Reb'
  +'uildCodeTree;  //pparser.XIDEProcsList;'#13#10#13#10'    //....decide if th'
  +'ere are errors or not .......'#13#10'    if ok=false then showmessage(''Com'
  +'pilation failed'')'#13#10'    else showmessage(''Compilation successful'');'
  +#13#10'  end;'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10#13#10'{$endif}'
  +#13#10#13#10'function   DfltUnitCode(UnitName,UnitType:String):string;'#13#10
  +'begin'#13#10'  if UnitType=''PasUnit'' then'#13#10'    result:=''{$ifdef Dl'
  +'l}''+ LineEnding                  //NB. unit name is generated at compile t'
  +'ime'#13#10'          +''{$mode objfpc}{$H+}{$R+}''+ LineEnding'#13#10'     '
  +'     +''{$endif}''+ LineEnding'#13#10'          + ''interface ''+ LineEndin'
  +'g'#13#10'          + ''uses Classes, Sysutils,''+ LineEnding'#13#10'       '
  +'   + ''   Math, contnrs, dateutils, rtlconsts, strutils, types, typinfo,Eve'
  +'ntsInterface,''+ LineEnding'#13#10'          + ''{$ifdef Dll} InterfaceType'
  +'sDll; {$else} InterfaceTypes; {$endif} '' + LineEnding'#13#10'          + L'
  +'ineEnding'#13#10'          + ''implementation '' + LineEnding'#13#10'      '
  +'    + '' '' + LineEnding'#13#10'          + ''begin'' + LineEnding'#13#10' '
  +'         + ''// IMPORTANT: do not use any of the XIDE interface functions '
  +''' + LineEnding'#13#10'          + ''//(eg. SetPropertyValue etc in unit In'
  +'terfaceTypesDll) '' + LineEnding'#13#10'          + ''// inside the unit in'
  +'itialization section.....errors will occur.'' + LineEnding'#13#10'         '
  +' + ''end. '''#13#10'  else  if UnitType=''PythonScript'' then'#13#10'    re'
  +'sult:=''#Python script'';'#13#10'end;'#13#10#13#10'function   DfltEventCode'
  +':string;'#13#10'begin'#13#10'  result:= ''begin'' + LineEnding +'#13#10'   '
  +'         '' '' + LineEnding +'#13#10'            ''end;'' + LineEnding;'#13
  +#10'end;'#13#10'function   DfltOpCode:string;'#13#10'begin'#13#10'  result:='
  +' ''begin'' + LineEnding +'#13#10'            '' '' + LineEnding +'#13#10'  '
  +'          ''end;'' + LineEnding;'#13#10'end;'#13#10'function   DfltThreadEv'
  +'entCode(NodeName:String):string;'#13#10'begin'#13#10'  result:= ''begin'' +'
  ,' LineEnding +'#13#10'           ''  with XVars''+NodeName+'' do '' + LineEn'
  +'ding +'#13#10'           ''  begin'' + LineEnding +'#13#10'           ''  e'
  +'nd;'' + LineEnding +'#13#10'           ''end;'' + LineEnding;'#13#10'end;'
  +#13#10'function   DfltTreeNodeEventCode:string;'#13#10'begin'#13#10'  result'
  +':= ''var'' + LineEnding +'#13#10'          ''  values:TNodeEventValue;'' + '
  +'LineEnding +'#13#10'          ''  SourceName,SrcText,DstText:String;''  + L'
  +'ineEnding +'#13#10'          ''begin'' + LineEnding +'#13#10'          ''  '
  +'values:=TNodeEventValue(e.ValueObject);'' + LineEnding +'#13#10'          '
  +'''  SourceName:=values.SourceName;  // name of tree being dragged from'' + '
  +'LineEnding +'#13#10'          ''  SrcText:=values.SrcText;        // text o'
  +'f treenode being dragged'' + LineEnding +'#13#10'          ''  DstText:=val'
  +'ues.DstText;        // text of treenode being dragged over'' + LineEnding +'
  +#13#10'          ''  // set e.ReturnString to "True" or "False" '' + LineEnd'
  +'ing +'#13#10'          ''  e.ReturnString:=''''True'''';'' + LineEnding +'
  +#13#10'          ''end;'' + LineEnding;'#13#10'end;'#13#10'function   DfltPy'
  +'thonCode:string;'#13#10'begin'#13#10'  result:= ''# Python script'' + LineE'
  +'nding;'#13#10'end;'#13#10#13#10'begin'#13#10'  PascalCode:=TStringList.Crea'
  +'te;'#13#10'  ExportsList:=TStringList.Create;'#13#10'  PyCodeFromComposites'
  +':=TStringList.Create;'#13#10'  {$ifdef Python}'#13#10'  PyProcs:=TPyProcs.C'
  +'reate;'#13#10'  {$endif}'#13#10'  {$ifndef JScript}'#13#10'  MyLibC := dynl'
  +'ibs.NilHandle;'#13#10'  ConfigFPCPath:=DefaultFPCConfig;'#13#10'  LoadFPCCo'
  +'nfig;'#13#10'  {$else}'#13#10'  NamespaceUnits:=TStringList.Create;'#13#10
  +'  {$endif}'#13#10#13#10'end.'#13#10#13#10#13#10
]);
LazarusResources.Add('propertyeditunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit PropertyEditUnit;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10
  +#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, '
  +'NodeUtils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, G'
  +'raphics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, Grids, TypIn'
  +'fo, LazIDEIntf,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'
  +' StdCtrls,'#13#10'  {$else}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  '
  +'WrapperPanel,XVBox,XScrollBox, XHBox, XTree, XTable,XMemo, XTabControl, XBu'
  +'tton, XLabel,'#13#10'  XEditBox, XCheckBox, XHyperLink, XRadioBtns, XCode, '
  +'XForm, XComboBox,'#13#10'  XColorPicker, CodeEditor, InputSelectUnit,Events'
  +'Interface;'#13#10#13#10'type'#13#10#13#10'  { TPropertyEditForm }'#13#10#13
  +#10'  TPropertyEditForm = class(TXForm)'#13#10'    PropertyEditFormXHBox2: T'
  +'XHBox;'#13#10'    PropertyEditFormXTabControl11: TXTabControl;'#13#10'    P'
  +'ropertyEditSourceHBox: TXHBox;'#13#10'    PropertyEditVBox1: TXVBox;'#13#10
  +'    PropertyEditTabSheet1: TXTabSheet;'#13#10'    PropertyEditTab1VBox1: TX'
  +'VBox;'#13#10'    PropertyEditName: TXEditBox;'#13#10'    PropertyEditType: '
  +'TXEditBox;'#13#10'    PropertyEditDoneBtn: TXButton;'#13#10'    PropertyEdi'
  +'tCancelBtn: TXButton;'#13#10'    PropertyEditSourceBox: TXEditBox;'#13#10' '
  +'   PropertyEditSourceBtn: TXButton;'#13#10'    PropertyEditTabSheet3: TXTab'
  +'Sheet;'#13#10'    PropertyEditVBox99: TXVBox;'#13#10'    PropertyEditLabel:'
  +' TXLabel;'#13#10'    PropertyEditVBox66: TXVBox;'#13#10'    PropertyEditHin'
  +'t: TXEditBox;'#13#10'    {$ifndef JScript}'#13#10'    procedure FormCreate('
  +'Sender: TObject);'#13#10'    procedure FormResize(Sender: TObject);'#13#10
  +'    {$endif}'#13#10'    procedure PropertyEditCancelBtnHandleButtonClick(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure'
  +' PropertyEditDoneBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'    procedure PropertyEditSourceBtnHandleButtonC'
  +'lick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    pr'
  +'ocedure HandleTreeDataNodeSelect(e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'    procedure HandleTreeDataDragStart(e:TEventStatus;'
  +'nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure HandleTreeDa'
  +'taDrop(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    '
  +'procedure InsertSiblingNode(e:TEventStatus;nodeID: AnsiString; myValue: Ans'
  +'iString);'#13#10'    procedure InsertChildNode(e:TEventStatus;nodeID: AnsiS'
  +'tring; myValue: AnsiString);'#13#10'    procedure DeleteTreeNode(e:TEventSt'
  +'atus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure CopyTre'
  +'eNode(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    p'
  +'rocedure PasteTreeNode(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStri'
  +'ng);'#13#10'    procedure InsertTableRow(e:TEventStatus;nodeID: AnsiString;'
  +' myValue: AnsiString);'#13#10'    procedure InsertTableColumn(e:TEventStatu'
  +'s;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure DeleteTabl'
  +'eRow(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    pr'
  +'ocedure DeleteTableColumn(e:TEventStatus;nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'    procedure CopyStringToTable(e:TEventStatus;nodeID: AnsiS'
  +'tring; myValue: AnsiString);'#13#10#13#10'    procedure SetupPages;'#13#10
  +'  private'#13#10#13#10'  public'#13#10'    TargetNode:TDataNode;'#13#10'   '
  +' EditNode:TDataNode;'#13#10'    TargetAttribute:TNodeAttribute;'#13#10'  en'
  +'d;'#13#10#13#10'var'#13#10'  PropertyEditForm: TPropertyEditForm;'#13#10'  '
  +'PropertyEditBox:TDataNode;'#13#10'  PropertyEditStatus:String;'#13#10#13#10
  +'  {$ifndef JScript}'#13#10'  CopiedTreeNode:TTreeNode;'#13#10'  {$else}'#13
  +#10'  CopiedTreeNode:String;'#13#10'  {$endif}'#13#10#13#10'implementation'
  +#13#10'{$R *.lfm}'#13#10'uses xobjectinsp;'#13#10#13#10'procedure TPropertyE'
  +'ditForm.SetupPages;'#13#10'var'#13#10'  NewEditBox:TXEditBox;'#13#10'  NewC'
  +'heckBox:TXCheckBox;'#13#10'  NewColorPicker:TXColorPicker;'#13#10'  NewComb'
  +'oBox:TXComboBox;'#13#10'  NewMemo:TXMemo;'#13#10'  NewTree:TXTree;'#13#10' '
  +' NewHBox:TXHBox;'#13#10'  NewTable:TXTable;'#13#10'  NewBtn1,NewBtn2,NewBtn'
  +'3,NewBtn4,NewBtn5:TXButton;'#13#10'  AttribOptions:TStringList;'#13#10'  st'
  +'r:String;'#13#10'begin'#13#10'  PropertyEditStatus:=''Cancel'';'#13#10'  In'
  +'putSelectForm.ExclNodeName:=TargetNode.NodeName;'#13#10'  InputSelectForm.E'
  ,'xclPropertyName:=TargetAttribute.AttribName;'#13#10'  InputSelectForm.PropT'
  +'ype:=TargetAttribute.AttribType;'#13#10#13#10'  DeleteNodeChildren(Property'
  +'EditVBox66.myNode);'#13#10#13#10'  self.Caption := ''Property Editor : ''+T'
  +'argetNode.Nodename + ''.'' + TargetAttribute.AttribName;'#13#10'  PropertyE'
  +'ditLabel.LabelCaption:=''Edit the value of property ''+TargetAttribute.Attr'
  +'ibName;'#13#10#13#10'  //Build the necessary widget(s) for editing the prop'
  +'erty according to type'#13#10'  if (TargetAttribute.AttribType=''String'')'
  +#13#10'  or (TargetAttribute.AttribType=''Integer'') then'#13#10'  begin'#13
  +#10'    AttribOptions:=LookupAttribOptions(TargetNode.NodeType,TargetAttribu'
  +'te.AttribName);'#13#10'    if AttribOptions<>nil then'#13#10'    begin'#13
  +#10'      NewComboBox:=TXComboBox(AddDynamicWidget(''TXComboBox'',PropertyEd'
  +'itForm,PropertyEditVBox66.myNode,''PropertyEditWidget'','''',''Left'',-1).S'
  +'creenObject);'#13#10'      NewComboBox.OptionList:=StringListToJSONString(A'
  +'ttribOptions);'#13#10'      NewComboBox.LabelText:='''';'#13#10'      EditN'
  +'ode:=NewComboBox.myNode;'#13#10'      NewComboBox.ItemValue:=TargetAttribut'
  +'e.AttribValue;'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'     '
  +'  // property Itemvalue in a TXMemo is type String, but needs a memo editor'
  +#13#10'      if ((TargetAttribute.AttribName=''ItemValue'') and (TargetNode.'
  +'NodeType=''TXMemo''))'#13#10'            or ((TargetAttribute.AttribName='''
  +'MapData'') and (TargetNode.NodeType=''TXBitMap''))'#13#10'            or (('
  +'TargetAttribute.AttribName=''MapColors'') and (TargetNode.NodeType=''TXBitM'
  +'ap''))'#13#10'            or ((TargetAttribute.AttribName=''MapPixelArray'''
  +') and (TargetNode.NodeType=''TXBitMap''))'#13#10'            or ((TargetAtt'
  +'ribute.AttribName=''HTMLSource''))'#13#10'            or ((TargetAttribute.'
  +'AttribName=''SourceText'') and (TargetNode.NodeType=''TXHTMLText''))'#13#10
  +'            or ((TargetAttribute.AttribName=''SourceText'') and (TargetNode'
  +'.NodeType=''TXHTMLEditor''))'#13#10'            or ((TargetAttribute.Attrib'
  +'Name=''XMLString'') and (TargetNode.NodeType=''TXSVGContainer''))'#13#10'  '
  +'          or ((TargetAttribute.AttribName=''OptionList''))'#13#10'      the'
  +'n'#13#10'      begin'#13#10'        NewMemo:=TXMemo(AddDynamicWidget(''TXMe'
  +'mo'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditWidget'','''''
  +',''Left'',-1).ScreenObject);'#13#10'        NewMemo.LabelText:='''';'#13#10
  +'        NewMemo.MemoHeight:=''90%'';'#13#10'        NewMemo.MemoWidth:=''95'
  +'%'';'#13#10'        NewMemo.ItemValue:=TargetAttribute.AttribValue;'#13#10
  +'        EditNode:=NewMemo.myNode;'#13#10'      end'#13#10'      else'#13#10
  +'      begin'#13#10'        // just a short string (or number) - EditBox'#13
  +#10'        NewEditBox:=TXEditBox(AddDynamicWidget(''TXEditBox'',PropertyEdi'
  +'tForm,PropertyEditVBox66.myNode,''PropertyEditWidget'','''',''Left'',-1).Sc'
  +'reenObject);'#13#10'        NewEditBox.LabelText:='''';'#13#10'        Edit'
  +'Node:=NewEditBox.myNode;'#13#10'        NewEditBox.ItemValue:=TargetAttribu'
  +'te.AttribValue;'#13#10'        NewEditBox.BoxWidth:=''90%'';'#13#10'      e'
  +'nd;'#13#10'    end;'#13#10'  end'#13#10'  else if TargetAttribute.AttribTyp'
  +'e=''TreeString'' then'#13#10'  // property TreeData is type String, but nee'
  +'ds a special editor'#13#10'  begin'#13#10'     NewTree:=TXTree(AddDynamicWi'
  +'dget(''TXTree'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditWi'
  +'dget'','''',''Left'',-1).ScreenObject);'#13#10'     NewTree.TreeData:=Targe'
  +'tAttribute.AttribValue;'#13#10'     NewTree.TreeHeight:=''80%'';'#13#10'   '
  +'  NewTree.TreeWidth:=''100%'';'#13#10'     NewTree.LabelText:='''';'#13#10
  +'     NewTree.ReadOnly:=false;'#13#10'     NewTree.Draggable:=true;'#13#10' '
  +'    // tree needs event handlers for editing'#13#10'     // copy, cut, past'
  +'e, drag/drop, delete, insert'#13#10'     NewTree.myNode.registerEvent(''Tre'
  +'eNodeClick'',@PropertyEditForm.HandleTreeDataNodeSelect);'#13#10'     NewTr'
  +'ee.myNode.registerEvent(''DragStart'',@PropertyEditForm.HandleTreeDataDragS'
  +'tart);'#13#10'     NewTree.myNode.registerEvent(''Drop'',@PropertyEditForm.'
  +'HandleTreeDataDrop);'#13#10#13#10'     NewHBox:=TXHBox(AddDynamicWidget(''T'
  +'XHBox'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditHBox66'','
  +''''',''Left'',-1).ScreenObject);'#13#10'     NewHBox.ContainerHeight:='''';'
  +#13#10#13#10'     NewBtn1:=TXButton(AddDynamicWidget(''TXButton'',PropertyEd'
  +'itForm,NewHBox.myNode,''PropertyEditBtn1'','''',''Left'',-1).ScreenObject);'
  +#13#10'     NewBtn1.Caption:=''Insert Sibling'';'#13#10'     NewBtn1.myNode.'
  +'registerEvent(''ButtonClick'',@PropertyEditForm.InsertSiblingNode);'#13#10
  +#13#10'     NewBtn2:=TXButton(AddDynamicWidget(''TXButton'',PropertyEditForm'
  +',NewHBox.myNode,''PropertyEditBtn2'','''',''Left'',-1).ScreenObject);'#13#10
  +'     NewBtn2.Caption:=''Insert Child'';'#13#10'     NewBtn2.myNode.register'
  ,'Event(''ButtonClick'',@PropertyEditForm.InsertChildNode);'#13#10#13#10'    '
  +' NewBtn3:=TXButton(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBox.m'
  +'yNode,''PropertyEditBtn3'','''',''Left'',-1).ScreenObject);'#13#10'     New'
  +'Btn3.Caption:=''Delete Node'';'#13#10'     NewBtn3.myNode.registerEvent(''B'
  +'uttonClick'',@PropertyEditForm.DeleteTreeNode);'#13#10#13#10'     NewBtn4:='
  +'TXButton(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBox.myNode,''Pr'
  +'opertyEditCopyBtn'','''',''Left'',-1).ScreenObject);'#13#10'     NewBtn4.Ca'
  +'ption:=''Copy'';'#13#10'     NewBtn4.myNode.registerEvent(''ButtonClick'',@'
  +'PropertyEditForm.CopyTreeNode);'#13#10#13#10'     NewBtn5:=TXButton(AddDyna'
  +'micWidget(''TXButton'',PropertyEditForm,NewHBox.myNode,''PropertyEditPasteB'
  +'tn'','''',''Left'',-1).ScreenObject);'#13#10'     NewBtn5.Caption:=''Paste'
  +''';'#13#10'     NewBtn5.myNode.registerEvent(''ButtonClick'',@PropertyEditF'
  +'orm.PasteTreeNode);'#13#10#13#10'     EditNode:=NewTree.myNode;'#13#10'  en'
  +'d'#13#10'  else if TargetAttribute.AttribType=''TableString'' then'#13#10' '
  +' begin'#13#10'    NewTable:=TXTable(AddDynamicWidget(''TXTable'',PropertyEd'
  +'itForm,PropertyEditVBox66.myNode,''PropertyEditWidget'','''',''Left'',-1).S'
  +'creenObject);'#13#10'    NewTable.IsNumeric:=TXTable(TargetNode.ScreenObjec'
  +'t).IsNumeric;'#13#10'    NewTable.TableData:=TargetAttribute.AttribValue;'
  +#13#10'    str:= NewTable.TableData;'#13#10'    NewTable.TableHeight:=''70%'
  +''';'#13#10'    NewTable.TableWidth:=''100%'';'#13#10'    NewTable.LabelText'
  +':='''';'#13#10'    if TargetNode.NodeType=''TXTable'' then'#13#10'    begin'
  +#13#10'      str:=TargetNode.GetAttribute(''ColWidth'',false).AttribValue;'
  +#13#10'      if str<>'''' then'#13#10'        NewTable.ColWidth:=strtoint(st'
  +'r);'#13#10'    end;'#13#10#13#10'    NewTable.HasHeaderRow:=false;       //'
  +' allow for editing col headers'#13#10#13#10'    NewHBox:=TXHBox(AddDynamicW'
  +'idget(''TXHBox'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditH'
  +'Box66'','''',''Left'',-1).ScreenObject);'#13#10'    NewHBox.ContainerHeight'
  +':='''';'#13#10#13#10'    NewBtn1:=TXButton(AddDynamicWidget(''TXButton'',Pr'
  +'opertyEditForm,NewHBox.myNode,''PropertyEditBtn1'','''',''Left'',-1).Screen'
  +'Object);'#13#10'    NewBtn1.Caption:=''Insert Row'';'#13#10'    NewBtn1.myN'
  +'ode.registerEvent(''ButtonClick'',@PropertyEditForm.InsertTableRow);'#13#10
  +#13#10'    NewBtn2:=TXButton(AddDynamicWidget(''TXButton'',PropertyEditForm,'
  +'NewHBox.myNode,''PropertyEditBtn2'','''',''Left'',-1).ScreenObject);'#13#10
  +'    NewBtn2.Caption:=''Insert Column'';'#13#10'    NewBtn2.myNode.registerE'
  +'vent(''ButtonClick'',@PropertyEditForm.InsertTableColumn);'#13#10#13#10'   '
  +' NewBtn3:=TXButton(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBox.m'
  +'yNode,''PropertyEditBtn3'','''',''Left'',-1).ScreenObject);'#13#10'    NewB'
  +'tn3.Caption:=''Delete Row'';'#13#10'    NewBtn3.myNode.registerEvent(''Butt'
  +'onClick'',@PropertyEditForm.DeleteTableRow);'#13#10#13#10'    NewBtn4:=TXBu'
  +'tton(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBox.myNode,''Proper'
  +'tyEditBtn4'','''',''Left'',-1).ScreenObject);'#13#10'    NewBtn4.Caption:='
  +'''Delete Column'';'#13#10'    NewBtn4.myNode.registerEvent(''ButtonClick'','
  +'@PropertyEditForm.DeleteTableColumn);'#13#10#13#10'    EditNode:=NewTable.m'
  +'yNode;'#13#10#13#10'    // option to edit the TableData string directly - E'
  +'ditBox'#13#10'    NewEditBox:=TXEditBox(AddDynamicWidget(''TXEditBox'',Prop'
  +'ertyEditForm,PropertyEditVBox66.myNode,''PropertyEditWidget2'','''',''Left'
  +''',-1).ScreenObject);'#13#10'    NewEditBox.LabelText:=''OR edit TableData '
  +'as string....'';'#13#10'    NewEditBox.LabelPos:=''Top'';'#13#10'    NewEdi'
  +'tBox.ItemValue:=TargetAttribute.AttribValue;'#13#10'    NewEditBox.BoxWidth'
  +':=''90%'';'#13#10'    NewBtn5:=TXButton(AddDynamicWidget(''TXButton'',Prope'
  +'rtyEditForm,PropertyEditVBox66.myNode,''PropertyEditBtn5'','''',''Left'',-1'
  +').ScreenObject);'#13#10'    NewBtn5.Caption:=''Apply to Table'';'#13#10'   '
  +' NewBtn5.Hint:=''Apply the string value to the Table'';'#13#10'    NewBtn5.'
  +'myNode.registerEvent(''ButtonClick'',@PropertyEditForm.CopyStringToTable);'
  +#13#10#13#10#13#10'  end'#13#10'  else if TargetAttribute.AttribType=''Boole'
  +'an'' then'#13#10'  begin'#13#10'    NewCheckBox:=TXCheckBox(AddDynamicWidge'
  +'t(''TXCheckBox'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditW'
  +'idget'','''',''Left'',-1).ScreenObject);'#13#10'    NewCheckBox.LabelText:='
  +''''';'#13#10'    EditNode:=NewCheckBox.myNode;'#13#10'    NewCheckBox.Check'
  +'ed:=myStrToBool(TargetAttribute.AttribValue);'#13#10'  end'#13#10'  else if'
  +' TargetAttribute.AttribType=''Color'' then'#13#10'  begin'#13#10'    NewCol'
  +'orPicker:=TXColorPicker(AddDynamicWidget(''TXColorPicker'',PropertyEditForm'
  +',PropertyEditVBox66.myNode,''PropertyEditWidget'','''',''Left'',-1).ScreenO'
  +'bject);'#13#10'    NewColorPicker.LabelText:='''';'#13#10'    EditNode:=New'
  ,'ColorPicker.myNode;'#13#10'    NewColorPicker.ItemValue:=TargetAttribute.At'
  +'tribValue;'#13#10'  end;'#13#10'  if PropertyEditForm.PropertyEditTabSheet3'
  +'.IsVisible then'#13#10'    PropertyEditFormXTabControl11.TabIndex:=1'#13#10
  +'  else'#13#10'    PropertyEditFormXTabControl11.TabIndex:=0;'#13#10'end;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'procedure TPropertyEditForm.FormCreate(Se'
  +'nder: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10
  +'end;'#13#10#13#10'procedure TPropertyEditForm.FormResize(Sender: TObject);'
  +#13#10'begin'#13#10'  DoFormResize(self, PropertyEditVBox1);'#13#10'end;'#13
  +#10#13#10'{$endif}'#13#10#13#10#13#10'procedure TPropertyEditForm.PropertyEd'
  +'itCancelBtnHandleButtonClick('#13#10'  e:TEventStatus;nodeID: AnsiString; m'
  +'yValue: AnsiString);'#13#10'begin'#13#10'  PropertyEditStatus:=''Cancel'';'
  +#13#10'  TXForm(self).Showing:=''No'';'#13#10'  PropertyEditBox:=nil;'#13#10
  +'end;'#13#10#13#10'procedure TPropertyEditForm.PropertyEditDoneBtnHandleButt'
  +'onClick('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  PropertyEditStatus:=''ok'';'#13#10'  TXForm(self).Show'
  +'ing:=''No'';'#13#10'  PropertyEditorClosed(PropertyEditBox);'#13#10'end;'#13
  +#10#13#10'procedure TPropertyEditForm.PropertyEditSourceBtnHandleButtonClick'
  +'('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'begin'#13#10'    InputSelectForm.TargetEditBoxNode:=PropertyEditSourceBox.m'
  +'yNode;'#13#10'    if TargetNode.NodeType<>''TXComposite'' then             '
  +'      //!!!! improve this'#13#10'      InputSelectForm.PropType:=TargetAttr'
  +'ibute.AttribType'#13#10'    else'#13#10'      InputSelectForm.PropType:='''
  +''';'#13#10'    InputSelectForm.Initialise;'#13#10'    ShowXForm(''InputSele'
  +'ctForm'',true);'#13#10'    {$ifndef JScript}'#13#10'    // on return...'#13
  +#10'    InputSelectForm.InputSelectClosed;'#13#10'    {$endif}'#13#10'end;'
  +#13#10#13#10'procedure TPropertyEditForm.HandleTreeDataNodeSelect('#13#10'  '
  +'e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10
  +#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.HandleTreeDataDragStart'
  +'('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);        '
  +'   //!!!! do this with node id''s....'#13#10'var'#13#10'  treeNode:TDataNod'
  +'e;'#13#10'  myXTree:TXTree;'#13#10'begin'#13#10'  //showmessage(''dragstart'
  +'. value=''+myValue);'#13#10'  // value is the text of the selected (dragged'
  +') node'#13#10'  {$ifndef JScript}'#13#10'  treeNode:=FindDataNodeById(Syste'
  +'mNodeTree,nodeId,'''',true);'#13#10'  myXTree:=TXTree(treenode.ScreenObject'
  +');'#13#10'  myXTree.SelectedNodeText:=myValue;'#13#10#13#10'  {$else}'#13#10
  +'  //treeNode:=FindDataNodeById(SystemNodeTree,nodeId,'''',true);'#13#10'  /'
  +'/myXTree:=TXTree(treenode.ScreenObject);'#13#10'  //myXTree.NodeBeingDragge'
  +'d:=myValue;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TPropertyE'
  +'ditForm.HandleTreeDataDrop('#13#10'  e:TEventStatus;nodeID: AnsiString; myV'
  +'alue: AnsiString);         //!!!! node id''s'#13#10'var'#13#10'  myXTree:TX'
  +'Tree;'#13#10'  treeNode:TDataNode;'#13#10'begin'#13#10'  //showmessage(''dr'
  +'op.  data=''+myValue);'#13#10'  // SelectedNodeText is the node being dragg'
  +'ed'#13#10'  // myValue is the target node'#13#10'  treeNode:=FindDataNodeBy'
  +'Id(SystemNodeTree,nodeId,'''',true);'#13#10'  myXTree:=TXTree(treenode.Scre'
  +'enObject);'#13#10#13#10#13#10'  {$ifndef JScript}'#13#10'  myXTree.MoveNode'
  +'(myXTree.SelectedNodeText,myValue);'#13#10'  {$else}'#13#10'  myXTree.MoveN'
  +'ode(myXTree.NodeBeingDragged,myValue);         //!!!! change this to use no'
  +'de id instead of text'#13#10'  myXTree.NodeBeingDragged:='''';'#13#10'  {$e'
  +'ndif}'#13#10#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.InsertSibl'
  +'ingNode('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'var'#13#10'  TheTree:TDataNode;'#13#10'  i:integer;'#13#10'begin'#13
  +#10'  TheTree:=FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidg'
  +'et'','''',true);'#13#10'  i:=1;'#13#10'  while (not TXtree(TheTree.ScreenOb'
  +'ject).NodeTextIsUnique(''New Node''+intToStr(i))) do'#13#10'    i:=i+1;'#13
  +#10'  TXtree(TheTree.ScreenObject).InsertNewSiblingNode(''New Node''+intToSt'
  +'r(i));'#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.InsertChildNode'
  +'('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'var'#13#10'  TheTree:TDataNode;'#13#10'  i:integer;'#13#10'begin'#13#10'  T'
  +'heTree:=FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'','
  +''''',true);'#13#10'  i:=1;'#13#10'  while (not TXtree(TheTree.ScreenObject)'
  +'.NodeTextIsUnique(''New Node''+intToStr(i))) do'#13#10'    i:=i+1;'#13#10' '
  +' TXtree(TheTree.ScreenObject).InsertNewChildNode(''New Node''+intToStr(i));'
  +#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.DeleteTreeNode('#13#10
  +'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10
  ,'  TheTree:TDataNode;'#13#10'begin'#13#10'  TheTree:=FindDataNodeById(Proper'
  +'tyEditVBox66.myNode,''PropertyEditWidget'','''',true);'#13#10#13#10'  TXtre'
  +'e(TheTree.ScreenObject).DeleteSelectedNode;'#13#10#13#10#13#10'end;'#13#10
  +#13#10'procedure TPropertyEditForm.CopyTreeNode('#13#10'  e:TEventStatus;nod'
  +'eID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  TheTree:TDataNod'
  +'e;'#13#10'  {$ifndef JScript}'#13#10'  myTree:TmyTreeView;'#13#10'  {$endif'
  +'}'#13#10'begin'#13#10'  TheTree:=FindDataNodeById(PropertyEditVBox66.myNode'
  +',''PropertyEditWidget'','''',true);'#13#10'  {$ifndef JScript}'#13#10'  myT'
  +'ree:=TmyTreeView(TXTree(TheTree.ScreenObject).myControl);'#13#10'  if myTre'
  +'e.Selected<>nil then'#13#10'  begin'#13#10'    CopiedTreeNode:=myTree.Selec'
  +'ted;'#13#10'  end'#13#10'  else'#13#10'    showmessage(''Please select a tr'
  +'ee node first'');'#13#10'{$else}'#13#10'  CopiedTreeNode:=TXTree(TheTree.Sc'
  +'reenObject).SelectedNodeId;'#13#10'{$endif}'#13#10'end;'#13#10#13#10'{$ifnd'
  +'ef JScript}'#13#10'function CopyThisNode(myTree:TmyTreeView;ANode,NewParent'
  +':TTreeNode):TTreeNode;'#13#10'var'#13#10'  NodeParent:TTreeNode;'#13#10'  N'
  +'odeText:String;'#13#10'begin'#13#10'  NodeText:=ANode.Text;'#13#10'//  Node'
  +'Text:=myTree.MakeTextUnique(NodeText);'#13#10'  NodeParent:=myTree.Items.Ad'
  +'dChild(NewParent,NodeText);'#13#10'  if ANode.HasChildren then          //!'
  +'!!! suspect this built-in also needs uniqueness for node texts...'#13#10'  '
  +'begin'#13#10'    ANode:=ANode.GetFirstChild;'#13#10'    if ANode<>nil then'
  +#13#10'    begin'#13#10'      CopyThisNode(myTree,ANode,NodeParent);'#13#10
  +'      repeat'#13#10'        ANode := ANode.getNextSibling;'#13#10'        i'
  +'f ANode<>nil then'#13#10'        begin'#13#10'          CopyThisNode(myTree'
  +',ANode,NodeParent);'#13#10'        end;'#13#10'      until ANode = nil;'#13
  +#10'    end;'#13#10'  end;'#13#10'  result:=NodeParent;'#13#10'end;'#13#10'{'
  +'$endif}'#13#10#13#10'procedure TPropertyEditForm.PasteTreeNode('#13#10'  e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  '
  +'TheTree:TDataNode;'#13#10'  {$ifndef JScript}'#13#10'  myTree:TmyTreeView;'
  +#13#10'  {$endif}'#13#10'begin'#13#10'{$ifndef JScript}'#13#10'  if (CopiedT'
  +'reeNode<>nil) then'#13#10'  begin'#13#10'    TheTree:=FindDataNodeById(Prop'
  +'ertyEditVBox66.myNode,''PropertyEditWidget'','''',true);'#13#10'    myTree:'
  +'=TmyTreeView(TXTree(TheTree.ScreenObject).myControl);'#13#10'    if (myTree'
  +'.Selected<>nil) then'#13#10'    begin'#13#10'      // traverse the copied t'
  +'ree node, inserting new node and children at selected spot'#13#10'      myT'
  +'ree.Selected:=CopyThisNode(myTree,CopiedTreeNode,myTree.Selected);'#13#10' '
  +'   end'#13#10'    else'#13#10'      showmessage(''Please select a tree node'
  +' first'');'#13#10'  end'#13#10'{$else}'#13#10'  if (CopiedTreeNode<>'''') t'
  +'hen'#13#10'  begin'#13#10'    TheTree:=FindDataNodeById(PropertyEditVBox66.'
  +'myNode,''PropertyEditWidget'','''',true);'#13#10'    if TXTree(TheTree.Scre'
  +'enObject).SelectedNodeId<>'''' then'#13#10'    begin'#13#10'      //!!!!'#13
  +#10'    end'#13#10'    else'#13#10'      showmessage(''Please select a tree '
  +'node first'');'#13#10'  end'#13#10'{$endif}'#13#10'  else'#13#10'    showme'
  +'ssage(''Please copy a tree node first'');'#13#10'end;'#13#10#13#10'procedur'
  +'e TPropertyEditForm.InsertTableRow(e:TEventStatus;nodeID: AnsiString; myVal'
  +'ue: AnsiString);'#13#10'var'#13#10'  myTable:TXTable;'#13#10'  myEditBox:TX'
  +'EditBox;'#13#10'begin'#13#10'  myTable:=TXTable(FindDataNodeById(PropertyEd'
  +'itVBox66.myNode,''PropertyEditWidget'','''',true).ScreenObject);'#13#10'  m'
  +'yEditBox:=TXEditBox(FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEd'
  +'itWidget2'','''',true).ScreenObject);'#13#10'  myTable.AddTableRows(1);'#13
  +#10'  myEditBox.ItemValue:=myTable.TableData;'#13#10'  {$ifndef JScript}'#13
  +#10'  TStringGrid(myTable.myControl).FixedRows:=0; //allow editing column he'
  +'aders'#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure TPropertyE'
  +'ditForm.InsertTableColumn(e:TEventStatus;nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'var'#13#10'  myTable:TXTable;'#13#10'  myEditBox:TXEditBox;'
  +#13#10'begin'#13#10'  myTable:=TXTable(FindDataNodeById(PropertyEditVBox66.m'
  +'yNode,''PropertyEditWidget'','''',true).ScreenObject);'#13#10'  myEditBox:='
  +'TXEditBox(FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget2'
  +''','''',true).ScreenObject);'#13#10'  myTable.AddTableColumns(1);'#13#10'  '
  +'myEditBox.ItemValue:=myTable.TableData;'#13#10'  {$ifndef JScript}'#13#10' '
  +' TStringGrid(myTable.myControl).FixedRows:=0; //allow editing column header'
  +'s'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.De'
  +'leteTableRow(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'var'#13#10'  myTable:TXTable;'#13#10'  myEditBox:TXEditBox;'#13#10'begin'#13
  +#10'  myTable:=TXTable(FindDataNodeById(PropertyEditVBox66.myNode,''Property'
  ,'EditWidget'','''',true).ScreenObject);'#13#10'  myEditBox:=TXEditBox(FindDa'
  +'taNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget2'','''',true).Scr'
  +'eenObject);'#13#10'  myTable.DeleteSelectedRow;'#13#10'  myEditBox.ItemValu'
  +'e:=myTable.TableData;'#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.'
  +'DeleteTableColumn(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'var'#13#10'  myTable:TXTable;'#13#10'  myEditBox:TXEditBox;'#13#10'  '
  +'r,c:integer;'#13#10'begin'#13#10'  myTable:=TXTable(FindDataNodeById(Proper'
  +'tyEditVBox66.myNode,''PropertyEditWidget'','''',true).ScreenObject);'#13#10
  +'  myEditBox:=TXEditBox(FindDataNodeById(PropertyEditVBox66.myNode,''Propert'
  +'yEditWidget2'','''',true).ScreenObject);'#13#10'  r:=myTable.SelectedRow;'
  +#13#10'  c:=myTable.SelectedCol;'#13#10'  //i:=TStringGridAccess(TStringGrid'
  +'(myTable.myControl)).Col;'#13#10'  if (r<0) or (c<0) then'#13#10'    showme'
  +'ssage(''column not selected'')'#13#10'  else if (c=0) and (myTable.NumCols='
  +'1) then'#13#10'    showmessage(''cannot delete all columns'')'#13#10'  else'
  +#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'    TStringGridAccess(TSt'
  +'ringGrid(myTable.myControl)).DeleteCol(c);'#13#10'    {$else}'#13#10'    as'
  +'m'#13#10'        var ob = document.getElementById(myTable.NameSpace+myTable'
  +'.NodeName+''Contents'');'#13#10'        if (ob!=null) {'#13#10'        for '
  +'(var i = 0, row; row = ob.rows[i]; i++) {'#13#10'                row.delete'
  +'Cell(c);'#13#10'            } }'#13#10'    end;'#13#10'    {$endif}'#13#10
  +'    myTable.TableData:=myTable.ConstructDataString;'#13#10'    myEditBox.It'
  +'emValue:=myTable.TableData;'#13#10'    {$ifndef JScript}'#13#10'    TString'
  +'Grid(myTable.myControl).FixedRows:=0; //allow editing column headers'#13#10
  +'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TPropertyEdit'
  +'Form.CopyStringToTable(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStri'
  +'ng);'#13#10'var'#13#10'  myTable:TXTable;'#13#10'  myEditBox:TXEditBox;'#13
  +#10'begin'#13#10'  myTable:=TXTable(FindDataNodeById(PropertyEditVBox66.myNo'
  +'de,''PropertyEditWidget'','''',true).ScreenObject);'#13#10'  myEditBox:=TXE'
  +'ditBox(FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget2'','
  +''''',true).ScreenObject);'#13#10'  myTable.TableData:=myEditBox.ItemValue;'
  +#13#10'end;'#13#10#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('inputselectunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InputSelectUnit;'#13
  +#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10
  +'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUt'
  +'ils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, Graphic'
  +'s, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, TypInfo, LazIDEInt'
  +'f,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'#13#10'  {$e'
  +'lse}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  XScrollBox, XVBox, XHBo'
  +'x, XTree, XMemo, XTabControl, XButton, XLabel,'#13#10'  XEditBox, XCheckBox'
  +', XHyperLink, XRadioBtns, XCode, XForm, XComboBox,'#13#10'  XColorPicker,Ev'
  +'entsInterface ;'#13#10#13#10'type'#13#10#13#10'  { TInputSelectForm }'#13#10
  +#13#10'  TInputSelectForm = class(TXForm)'#13#10'    InputSelectTree: TXTree'
  +';'#13#10'    InputSelectVBox1: TXVBox;'#13#10'    InputSelectDoneBtn: TXBut'
  +'ton;'#13#10'    {$ifndef JScript}'#13#10'    procedure FormCreate(Sender: T'
  +'Object);'#13#10'    procedure FormResize(Sender: TObject);'#13#10'    {$end'
  +'if}'#13#10'    procedure Initialise;'#13#10'    procedure InputSelectClosed'
  +';'#13#10'    procedure InputSelectDoneBtnHandleButtonClick(e:TEventStatus;n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'    procedure InputSelectTr'
  +'eeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStrin'
  +'g);'#13#10'  private'#13#10#13#10'  public'#13#10'    ExclNodeName, ExclPro'
  +'pertyName, PropType : String;'#13#10'    SelectedItem:String;'#13#10'    Ta'
  +'rgetEditBoxNode:TDataNode;'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  In'
  +'putSelectForm: TInputSelectForm;'#13#10'  InputSelectStatus:String;'#13#10
  +#13#10'implementation'#13#10'uses xobjectinsp,CodeEditor;'#13#10'{$R *.lfm}'
  +#13#10#13#10'{ TInputSelectForm }'#13#10'procedure TInputSelectForm.Initiali'
  +'se;'#13#10'var'#13#10'  treestring, excludemyname:string;'#13#10'  Exclusio'
  +'ns:TStringList;'#13#10'begin'#13#10'  SelectedItem:='''';'#13#10'  InputSel'
  +'ectStatus:=''Cancel'';'#13#10'  Exclusions:=TStringList.Create;'#13#10'  Ex'
  +'clusions.Add(ResourceDataRootName);'#13#10'  excludemyname:=ExclNodeName;'
  +#13#10'  if ExclPropertyName<>'''' then'#13#10'    excludemyname:=excludemyn'
  +'ame+''.''+exclPropertyName;'#13#10'  Exclusions.Add(excludemyname);'#13#10
  +'  //showmessage(''ConstructSystemTreeString in inputselectform'');'#13#10' '
  +' //treestring:= ConstructSystemTreeString(SystemNodeTree,0,true,true,Exclus'
  +'ions,PropType);'#13#10'  treestring:= ConstructSystemTreeString(UIRootNode,'
  +'0,true,true,Exclusions,PropType);'#13#10'  InputSelectTree.TreeData:=treest'
  +'ring;'#13#10'  FreeAndNil(Exclusions);'#13#10'end;'#13#10#13#10'procedure T'
  +'InputSelectForm.InputSelectDoneBtnHandleButtonClick( e:TEventStatus;nodeID:'
  +' AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  InputSelectStatus:'
  +'=''ok'';'#13#10'  TXForm(self).Showing:=''No'';'#13#10'  {$ifdef JScript}'
  +#13#10'  InputSelectClosed;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'{$ifn'
  +'def JScript}'#13#10'procedure TInputSelectForm.FormCreate(Sender: TObject);'
  +#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'end;'#13#10#13#10
  +'procedure TInputSelectForm.FormResize(Sender: TObject);'#13#10'begin'#13#10
  +'  DoFormResize(self, InputSelectVBox1);'#13#10'end;'#13#10#13#10'{$endif}'
  +#13#10#13#10'procedure TInputSelectForm.InputSelectTreeHandleTreeNodeClick(e'
  +':TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'// myValue i'
  +'s the internal ID of the clicked treenode.'#13#10'// SelectedItem stores th'
  +'e selected node Text.'#13#10'var'#13#10'  NodeText:String;'#13#10'begin'#13
  +#10'  NodeText:=InputSelectTree.SelectedNodeText;'#13#10'  SelectedItem:=Nod'
  +'eText;'#13#10'end;'#13#10#13#10'procedure TInputSelectForm.InputSelectClose'
  +'d;'#13#10'begin'#13#10'  if InputSelectStatus=''ok'' then'#13#10'  begin'#13
  +#10'    TXEditBox(TargetEditBoxNode.ScreenObject).ItemValue:=self.SelectedIt'
  +'em;'#13#10'  end;'#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('popupmemo','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit PopupMemo;'#13#10#13
  +#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, Nod'
  +'eUtils,'#13#10'  {$ifndef JScript}'#13#10'  LazsUtils,'#13#10'  {$endif}'#13
  +#10'  XVBox,  XMemo, XForm, XHTMLText;'#13#10#13#10'type'#13#10#13#10'  { TP'
  +'opupMemoForm }'#13#10#13#10'  TPopupMemoForm = class(TXForm)'#13#10'    Pop'
  +'upMemoVBox: TXVBox;'#13#10'    PopupHelpText: TXMemo;'#13#10'    {$ifndef J'
  +'Script}'#13#10'    procedure FormCreate(Sender: TObject);'#13#10'    proced'
  +'ure FormResize(Sender: TObject);'#13#10'    procedure FormShow(Sender: TObj'
  +'ect);'#13#10'    {$endif}'#13#10'  private'#13#10#13#10'  public'#13#10'   '
  +' procedure InitialiseMemo;'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  Po'
  +'pupMemoForm: TPopupMemoForm;'#13#10#13#10'implementation'#13#10'uses'#13#10
  +'  XObjectInsp;'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{ TPopupMemoForm }'#13
  +#10#13#10'{$ifndef JScript}'#13#10'procedure TPopupMemoForm.FormCreate(Sende'
  +'r: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'  I'
  +'nitialiseMemo;'#13#10'end;'#13#10#13#10'procedure TPopupMemoForm.FormResize'
  +'(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(self, PopupMemoVBox);'
  +#13#10'end;'#13#10#13#10'procedure TPopupMemoForm.FormShow(Sender: TObject);'
  +#13#10'begin'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure TPopup'
  +'MemoForm.InitialiseMemo;'#13#10'begin'#13#10'  PopupHelpText.ItemValue:='#13
  +#10'  ''A number of interface functions have been provided for interaction w'
  +'ith the XIDE framework and project data.'' + LineEnding +'#13#10'  '' '' + '
  +'LineEnding +'#13#10'  ''General Functions'' + LineEnding +'#13#10'  ''====='
  +'============'' + LineEnding +'#13#10'  ''procedure SetPropertyValue(nodeNam'
  +'e,propName,newValue:String);  '' + LineEnding +'#13#10'  ''                '
  +'            set a component property (string value)  '' + LineEnding +'#13
  +#10'  ''function  GetPropertyValue(nodeName,propName:String);  ''  + LineEnd'
  +'ing +'#13#10'  ''                            returns a component property v'
  +'alue (as string) ''   + LineEnding +'#13#10'  ''procedure SetPropertyValueI'
  +'ndexed(nodeName,propName:String;newValue:TStringArray; x,y:integer); ''  + '
  +'LineEnding +'#13#10'  ''                            set a portion of a comp'
  +'onent array property  ''  + LineEnding +'#13#10'  ''procedure CopyToClip(st'
  +'r:String); ''    + LineEnding +'#13#10'  ''                            copi'
  +'es the given string to the clipboard ''  + LineEnding +'#13#10'  ''function'
  +'  CopyFromClip(e:TEventStatus):String; '' + LineEnding +'#13#10'  ''       '
  +'   CopyFromClip is an async function (required for browser use), so it must'
  +' be coded in the  '' + LineEnding +'#13#10'  ''          ''''Init'''' secti'
  +'on of an event handler. The result here is a blank string.                 '
  +' '' + LineEnding +'#13#10'  ''          The clipboard string is held in e.R'
  +'eturnString, which can be picked up in the             '' + LineEnding +'#13
  +#10'  ''          ''''Main'''' section of the event handler.                '
  +'                                    '' + LineEnding +'#13#10'  ''procedure '
  +'ShowXForm(XFormID:String; modal:Boolean);  '' + LineEnding +'#13#10'  ''   '
  +'                         opens a TXForm. [note:''''modal=false'''' currentl'
  +'y only effective on desktop] '' + LineEnding +'#13#10'  ''procedure CloseXF'
  +'orm(XFormID:String);  '' + LineEnding +'#13#10'  ''                        '
  +'    closes a TXForm.  '' + LineEnding +'#13#10'  ''procedure DoEvent(EventT'
  +'ype,NodeId,myValue:String); ''  + LineEnding +'#13#10'  ''                 '
  +'           executes the event handler defined for the given event type and '
  +'component. ''  + LineEnding +'#13#10'  ''procedure MoveComponent(nodeId:str'
  +'ing;NewParentId:string); ''  + LineEnding +'#13#10'  ''                    '
  +'        re-parents the given UI component ''  + LineEnding +'#13#10'  ''pro'
  +'cedure CopyComponent(nodeId,NewParentId,NewName:string); ''  + LineEnding +'
  +#13#10'  ''                            copies the given UI component and pla'
  +'ces the clone under the given parent ''  + LineEnding +'#13#10'  ''function'
  +'  DeleteComponent(nodeId:string;ShowNotFoundMsg:Boolean=true;ShowConfirm:Bo'
  +'olean=true):Boolean; ''  + LineEnding +'#13#10'  ''                        '
  +'    deletes the given UI component. Returns false if not done. ''   + LineE'
  +'nding +'#13#10'  ''function  UserSystemAsString():String;''  + LineEnding +'
  +#13#10'  ''                            Returns the string representation of '
  ,'the current user system (can be imported to XIDE via System>Load)  ''  + Li'
  +'neEnding +'#13#10'  ''function  LoadUserSystemString(SystemString:String);'
  +'''  + LineEnding +'#13#10'  ''                            Imports a new use'
  +'r system to the XIDE framework (can only be done in ''''Design'''' mode) '''
  +'  + LineEnding +'#13#10'  ''procedure Show  Busy(e:TEventStatus);''  + Line'
  +'Ending +'#13#10'  ''                            Shows the busy cursor  ''  '
  +'+ LineEnding +'#13#10'  ''          ShowBusy is an async function (required'
  +' for browser use), so it must be coded in the  '' + LineEnding +'#13#10'  '
  +'''          ''''Init'''' section of an event handler.         '' + LineEndi'
  +'ng +'#13#10'  ''procedure HideBusy;''   + LineEnding +'#13#10'  ''         '
  +'                   Hides the busy cursor  ''  + LineEnding +'#13#10'  ''pro'
  +'cedure ProcessMessages;''  + LineEnding +'#13#10'  ''                      '
  +'      Functional in Desktop execution only.  Executes a pascal Application.'
  +'ProcessMessages statement.  ''  + LineEnding +'#13#10'  ''procedure DebugSt'
  +'art;''  + LineEnding +'#13#10'  ''                            Functional in'
  +' Browser execution only.  Executes a Javascript ''''debugger;'''' statement'
  +' - starts the native browser debug facility.  ''  + LineEnding+'#13#10'  '''
  +'procedure RunPython(str:String);''  + LineEnding +'#13#10'  ''             '
  +'               Executes the given Python script  ''  + LineEnding +'#13#10
  +'  ''procedure PyodideLoadPackage(nm:String); ''  + LineEnding +'#13#10'  '''
  +'                            Functional in Browser execution only.  Loads th'
  +'e requested Pyodide/python package, so that it will be available for import'
  +'.  ''  + LineEnding +'#13#10'  ''                            Note this runs'
  +' an asynchronous process. Check the console for progress.  ''  + LineEnding'
  +' +'#13#10'  ''function PyodidePackageLoaded(nm:String):Boolean; ''  + LineE'
  +'nding +'#13#10'  ''                            Functional in Browser execut'
  +'ion only.  Returns true if the named package has been loaded into the Pyodi'
  +'de environment.  ''  + LineEnding;'#13#10#13#10'  PopupHelpText.ItemValue:='
  +'PopupHelpText.ItemValue +'#13#10'  '' '' + LineEnding +'#13#10'  ''Messages'
  +' and Dialogs'' + LineEnding +'#13#10'  ''===================='' + LineEndin'
  +'g +'#13#10'  ''procedure ShowMessage(msg:String);       '' + LineEnding +'
  +#13#10'  ''                            displays a popup alert '' + LineEndin'
  +'g +'#13#10'  ''function  Confirm(TextMessage:string):boolean;   ''  + LineE'
  +'nding +'#13#10'  ''                            displays a confirmation aler'
  +'t; returns true/false ''  + LineEnding +'#13#10'  ''function  Prompt(TextMe'
  +'ssage,promptString:string):string; ''  + LineEnding +'#13#10'  ''          '
  +'                  displays an input box; returns user-entered string ''   +'
  +' LineEnding +'#13#10'  ''procedure ConsoleLog(txt:String);''  + LineEnding '
  +'+'#13#10'  ''                            Writes a debug message to the cons'
  +'ole log  ''  + LineEnding;'#13#10#13#10'  PopupHelpText.ItemValue:=PopupHel'
  +'pText.ItemValue +'#13#10'  '' '' + LineEnding +'#13#10'  ''TXTable Function'
  +'s'' + LineEnding +'#13#10'  ''================='' + LineEnding +'#13#10'  '
  +'''procedure  LoadTableFromExcelCopy(TableName,CopiedString:String);  ''  + '
  +'LineEnding +'#13#10'  ''                            Populate the given TXTa'
  +'ble component with a string in Excel format (eg. as copied from a spreadshe'
  +'et)  ''  + LineEnding +'#13#10'  ''procedure  LoadTableFromNumArray(TableNa'
  +'me,NumArray:T2DNumArray);  ''  + LineEnding +'#13#10'  ''                  '
  +'          Populate the given TXTable component from a 2D numeric array  '' '
  +' + LineEnding +'#13#10'  ''procedure  LoadTableFromStringArray(TableName,Nu'
  +'mArray:T2DStringArray);  ''  + LineEnding +'#13#10'  ''                    '
  +'        Populate the given TXTable component from a 2D string array  ''  + '
  +'LineEnding +'#13#10'  ''function  GetTableDataArray(TableName:String;SkipHe'
  +'ader:Boolean):T2DStringArray;  ''  + LineEnding +'#13#10'  ''              '
  +'              Fetch the cells from the given TXTable component as a 2D stri'
  +'ng array  ''  + LineEnding +'#13#10'  ''function  GetTableDataForExcel(Tabl'
  +'eName:String):String;  ''  + LineEnding +'#13#10'  ''                      '
  +'      Fetch the cells from the given TXTable component ready for paste to a'
  +' spreadsheet  ''  + LineEnding +'#13#10'  ''function  Array2DToString(arr:T'
  +'2DNumArray):String;''  + LineEnding +'#13#10'  ''                          '
  +'  Convert numeric 2D array to string form eg. [[...],...,[...]]  ''  + Line'
  +'Ending;'#13#10#13#10'  PopupHelpText.ItemValue:=PopupHelpText.ItemValue +'
  +#13#10'  '' '' + LineEnding +'#13#10'  ''TXTree Functions'' + LineEnding +'
  +#13#10'  ''================='' + LineEnding +'#13#10'  ''procedure  DeleteSe'
  +'lectedTreeNode(TreeName:string); ''  + LineEnding +'#13#10'  ''            '
  ,'                deletes the currently selected node in the named tree compo'
  +'nent ''   + LineEnding;'#13#10#13#10#13#10'  PopupHelpText.ItemValue:=Popup'
  +'HelpText.ItemValue +'#13#10'  '' '' + LineEnding +'#13#10'  ''TXGPUCanvas F'
  +'unctions'' + LineEnding +'#13#10'  ''====================='' + LineEnding +'
  +#13#10'  ''function  GetGPUParamNumValue(GPUName,pName:String):TNumArray; '''
  +'  + LineEnding +'#13#10'  ''                            For the given TXGPU'
  +'Canvas component, returns the value of the named numeric parameter as an ar'
  +'ray ''  + LineEnding +'#13#10'  ''function  GetGPUParam2DNumValue(GPUName,p'
  +'Name:String):TNumArray; ''  + LineEnding +'#13#10'  ''                     '
  +'       For the given TXGPUCanvas component, returns the value of the named '
  +'2D numeric parameter as an array ''  + LineEnding +'#13#10'  ''function  Ge'
  +'tGPUConstIntValue(GPUName,pName:String):integer;''  + LineEnding +'#13#10' '
  +' ''                            For the given TXGPUCanvas component, returns'
  +' the value of the named integer parameter ''  + LineEnding +'#13#10'  ''pro'
  +'cedure SetGPUParamNumValue(GPUName,pName:String;pValue:TNumArray);''  + Lin'
  +'eEnding +'#13#10'  ''                            For the given TXGPUCanvas '
  +'component, sets the value of the named numeric parameter as a 1-D array '' '
  +' + LineEnding +'#13#10'  ''procedure SetGPUParam2DNumValue(GPUName,pName:St'
  +'ring;pValue:T2DNumArray);''  + LineEnding +'#13#10'  ''                    '
  +'        For the given TXGPUCanvas component, sets the value of the named nu'
  +'meric parameter as a 2-D array ''  + LineEnding +'#13#10'  ''procedure SetG'
  +'PUConstIntValue(GPUName,pName:String;pValue:integer);''  + LineEnding +'#13
  +#10'  ''                            For the given TXGPUCanvas component, set'
  +'s the value of the named integer parameter ''  + LineEnding +'#13#10'  ''fu'
  +'nction  GetGPUPixelArray(GPUName:String):T3DNumArray; ''  + LineEnding +'#13
  +#10'  ''                            Fetch the current Pixel array for the gi'
  +'ven TXGPUCanvas component  ''  + LineEnding +'#13#10'  ''function  GetGPUPi'
  +'xelArrayAsString(GPUName:String):String;''  + LineEnding +'#13#10'  ''     '
  +'                       Fetch the current Pixel array in string format for t'
  +'he given TXGPUCanvas component  ''  + LineEnding +'#13#10'  ''function  Get'
  +'GPUStageArray(GPUName:String):T3DNumArray; ''  + LineEnding +'#13#10'  ''  '
  +'                          Fetch the stage array (resulting from the non-gra'
  +'phical kernel stack) for the given TXGPUCanvas component  ''  + LineEnding '
  +'+'#13#10'  ''function  GetGPUStageArrayAsString(GPUName:String):String;''  '
  +'+ LineEnding +'#13#10'  ''                            Fetch the stage array'
  +' in string format for the given TXGPUCanvas component  ''  + LineEnding +'
  +#13#10'  ''function  GetGPUInitStageArray(GPUName:String):T3DNumArray; ''  +'
  +' LineEnding +'#13#10'  ''                            Fetch the initial stag'
  +'e array (from the InitStageData property) for the given TXGPUCanvas compone'
  +'nt  ''  + LineEnding;'#13#10#13#10'  PopupHelpText.ItemValue:=PopupHelpText'
  +'.ItemValue +'#13#10'  '' '' + LineEnding +'#13#10'  ''DataStore Functions'''
  +' + LineEnding +'#13#10'  ''===================='' + LineEnding +'#13#10'  '
  +'''          All of these are async functions (necessary for browser use), s'
  +'o must be coded in the  '' + LineEnding +'#13#10'  ''          ''''Init'''''
  +' section of an event handler.         '' + LineEnding +'#13#10'  ''        '
  +'  The ''''Main'''' section of the event handler follows when async function'
  +'s(s) have completed. '' + LineEnding +'#13#10'  ''function DSAppendRow(e:TE'
  +'ventStatus;DSName:String;recObject:TObject):Boolean; ''  + LineEnding +'#13
  +#10'  ''                            Append a row to the named dataStore (nam'
  +'ed for a class in the data model). ''  + LineEnding +'#13#10'  ''          '
  +'                  recObject is an instance of the relevant class, containin'
  +'g the data to be appended. ''  + LineEnding +'#13#10'  ''function DSFetchRo'
  +'w(e:TEventStatus;DSName:String;DSKeyValues:String):Boolean; ''  + LineEndin'
  +'g +'#13#10'  ''                            Fetch a row from the named dataS'
  +'tore (named for a class in the data model). ''  + LineEnding +'#13#10'  '' '
  +'                           DSKeyValues is a ;-delimited string of key value'
  +'s to identify the requested row. ''  + LineEnding +'#13#10'  ''            '
  +'                Set e.ValueObject to an empty instance of the relevant clas'
  +'s. ''  + LineEnding +'#13#10'  ''                            On return in t'
  +'he ''''Main'''' event handler, e.AsyncReturnObject will contain the found r'
  +'ow. ''  + LineEnding +'#13#10'  ''function DSDeleteRow(e:TEventStatus;DSNam'
  +'e:String;DSKeyValues:String):Boolean;  ''  + LineEnding +'#13#10'  ''      '
  +'                      Delete a row from the named dataStore (named for a cl'
  +'ass in the data model). ''  + LineEnding +'#13#10'  ''                     '
  ,'       DSKeyValues is a ;-delimited string of key values to identify the re'
  +'quested row. ''  + LineEnding +'#13#10'  ''function DSDeleteAllRows(e:TEven'
  +'tStatus;DSName:String):Boolean;  ''  + LineEnding +'#13#10'  ''            '
  +'                Delete all rows from the named dataStore (named for a class'
  +' in the data model). ''  + LineEnding;'#13#10#13#10'  PopupHelpText.ItemVal'
  +'ue:=PopupHelpText.ItemValue +'#13#10'  '' '' + LineEnding +'#13#10'  ''Pyth'
  +'on Only'' + LineEnding +'#13#10'  ''==========='' + LineEnding +'#13#10'  '
  +'''function  ShowPythonPlot(ImgName,fig) ''  + LineEnding +'#13#10'  ''     '
  +'                       In the given TXImage component, displays the content'
  +'s of fig (a matplotlib figure) ''  + LineEnding +'#13#10'  ''function  Conv'
  +'ertNumpyArrayToJSON(npArray) ''  + LineEnding +'#13#10'  ''                '
  +'            Converts the given np.data item to JSON format (eg. ready to lo'
  +'ad a TXTable) ''  + LineEnding +'#13#10'  ''function  SetPyConsole(MemoName'
  +') ''  + LineEnding +'#13#10'  ''                            Redirects conso'
  +'le log output to the named TXMemo component ''  + LineEnding +'#13#10'  ''f'
  +'unction  ResetXArrays(DefaultDims) ''  + LineEnding +'#13#10'  ''          '
  +'                  Rebuilds all XArrays as defined in the data tree. Set Def'
  +'aultDims False to retain session settings of dimension sizes. ''  + LineEnd'
  +'ing;'#13#10#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('interfacetypes','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InterfaceTypes;'#13#10
  +'(*'#13#10'   Interface declarations'#13#10'   for use with the dynamically '
  +'created dll, used for executing user event code (also see unit CompileUserC'
  +'ode)'#13#10' *)'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'
  +#13#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, S'
  +'ysUtils, EventsInterface;'#13#10#13#10'type'#13#10'Tshowmessage=procedure(m'
  +'sg:String) of object;'#13#10'Tsetpropertyvalue=procedure(nodeName:String;pr'
  +'opName:String;newValue:String) of object;'#13#10'TsetpropertyvalueIndexed=p'
  +'rocedure(nodeName:String;propName:String;newValue:TStringArray;x,y:integer)'
  +' of object;'#13#10'Tconfirm=function(TextMessage:string):boolean of object;'
  +#13#10'Tgetpropertyvalue=function(nodeName:String;propName:String):string  o'
  +'f object;'#13#10'Tprompt=function(TextMessage,promptString:string):string o'
  +'f object;'#13#10'Tshowxform=procedure(XFormID:String; modal:Boolean) of obj'
  +'ect;'#13#10'Tclosexform=procedure(XFormID:String) of object;'#13#10'TCopyTo'
  +'Clip=procedure(str:String) of object;'#13#10'TCopyFromClip=function(e:TEven'
  +'tStatus):String of object;'#13#10'TLoadTableFromExcelCopy=procedure(TableNa'
  +'me,CopiedString:String) of object;'#13#10'TGetTableDataForExcel=function(Ta'
  +'bleName:String):String of object;'#13#10'TLoadTableFromNumArray=procedure(T'
  +'ableName:String;NumArray:T2DNumArray) of object;'#13#10'TLoadTableFromStrin'
  +'gArray=procedure(TableName:String;StrArray:T2DStringArray) of object;'#13#10
  +'TGetTableDataArray=function(TableName:String;SkipHeader:Boolean):T2DStringA'
  +'rray of object;'#13#10'TDoEvent=procedure(EventType,NodeId,myValue:String) '
  +'of object;'#13#10'TMoveComponent=procedure(nodeId:string;NewParentId:string'
  +') of object;'#13#10'TCopyComponent=procedure(nodeId,NewParentId,NewName:str'
  +'ing) of object;'#13#10'TDeleteComponent=function(nodeId:string;ShowNotFound'
  +'Msg:Boolean=true;ShowConfirm:Boolean=true):Boolean of object;'#13#10'TDelet'
  +'eSelectedTreeNode=procedure(TreeName:string) of object;'#13#10'TGetGPUParam'
  +'NumValue=function(GPUName,pName:String):TNumArray of object;'#13#10'TGetGPU'
  +'Param2DNumValue=function(GPUName,pName:String):T2DNumArray of object;'#13#10
  +'TGetGPUConstIntValue=function(GPUName,pName:String):integer of object;'#13
  +#10'TSetGPUParamNumValue=procedure(GPUName,pName:String;pValue:TNumArray) of'
  +' object;'#13#10'TSetGPUParam2DNumValue=procedure(GPUName,pName:String;pValu'
  +'e:T2DNumArray) of object;'#13#10'TSetGPUConstIntValue=procedure(GPUName,pNa'
  +'me:String;pValue:integer) of object;'#13#10'TStartMain=procedure(e:TEventSt'
  +'atus) of object;'#13#10'TShowBusy=procedure(e:TEventStatus) of object;'#13
  +#10'THideBusy=procedure of object;'#13#10'TProcessMessages=procedure of obje'
  +'ct;'#13#10'TUserSystemAsString=function():String of object;'#13#10'TLoadUse'
  +'rSystemString=procedure(SystemString:String) of object;'#13#10'TConsoleLog='
  +'procedure(txt:String) of object;'#13#10'TArray2DToString=function(arr:T2DNu'
  +'mArray):String of object;'#13#10'TGetGPUPixelArray=function(GPUName:String)'
  +':T3DNumArray of object;'#13#10'TGetGPUPixelArrayAsString=function(GPUName:S'
  +'tring):String of object;'#13#10'TGetGPUStageArray=function(GPUName:String):'
  +'T3DNumArray of object;'#13#10'TGetGPUStageArrayAsString=function(GPUName:St'
  +'ring):String of object;'#13#10'TGetGPUInitStageArray=function(GPUName:Strin'
  +'g):T3DNumArray of object;'#13#10'TDebugStart=procedure of object;'#13#10'TR'
  +'unPython=procedure(str:String) of object;'#13#10'TSetImageSource=procedure('
  +'nm,str:String) of object;'#13#10'TWobbleCEF=procedure(nm:String) of object;'
  +#13#10'TPyodideLoadPackage=procedure(nm:String) of object;'#13#10'TPyodidePa'
  +'ckageLoaded=function(nm:String):Boolean of object;'#13#10'TDSFetchRow=funct'
  +'ion(e:TEventStatus;DSName:String;DSKeyValues:String):Boolean of object;'#13
  +#10'TDSAppendRow=function(e:TEventStatus;DSName:String;recObject:TObject):Bo'
  +'olean of object;'#13#10'TDSDeleteRow=function(e:TEventStatus;DSName:String;'
  +'DSKeyValues:String):Boolean of object;'#13#10'TDSDeleteAllRows=function(e:T'
  +'EventStatus;DSName:String):Boolean of object;'#13#10#13#10#13#10'{$ifdef JS'
  +'cript}'#13#10'var'#13#10'ShowMessage:Tshowmessage;'#13#10'ShowXForm:Tshowxf'
  +'orm;'#13#10'CloseXForm:Tclosexform;'#13#10'Confirm:Tconfirm;'#13#10'Prompt:'
  +'Tprompt;'#13#10'SetPropertyValue:Tsetpropertyvalue;'#13#10'SetPropertyValue'
  +'Indexed:Tsetpropertyvalueindexed;'#13#10'GetPropertyValue:Tgetpropertyvalue'
  +';'#13#10'CopyToClip:TCopyToClip;'#13#10'CopyFromClip:TCopyFromClip;'#13#10
  ,'LoadTableFromExcelCopy:TLoadTableFromExcelCopy;'#13#10'GetTableDataForExcel'
  +':TGetTableDataForExcel;'#13#10'LoadTableFromNumArray:TLoadTableFromNumArray'
  +';'#13#10'LoadTableFromStringArray:TLoadTableFromStringArray;'#13#10'GetTabl'
  +'eDataArray:TGetTableDataArray;'#13#10'DoEvent:TDoEvent;'#13#10'MoveComponen'
  +'t:TMoveComponent;'#13#10'CopyComponent:TCopyComponent;'#13#10'DeleteCompone'
  +'nt:TDeleteComponent;'#13#10'DeleteSelectedTreeNode:TDeleteSelectedTreeNode;'
  +#13#10'GetGPUParamNumValue:TGetGPUParamNumValue;'#13#10'GetGPUParam2DNumValu'
  +'e:TGetGPUParam2DNumValue;'#13#10'GetGPUConstIntValue:TGetGPUConstIntValue;'
  +#13#10'SetGPUParamNumValue:TSetGPUParamNumValue;'#13#10'SetGPUParam2DNumValu'
  +'e:TSetGPUParam2DNumValue;'#13#10'SetGPUConstIntValue:TSetGPUConstIntValue;'
  +#13#10'ShowBusy:TShowBusy;'#13#10'HideBusy:THideBusy;'#13#10'ProcessMessages'
  +':TProcessMessages;'#13#10'UserSystemAsString:TUserSystemAsString;'#13#10'Lo'
  +'adUserSystemString:TLoadUserSystemString;'#13#10'ConsoleLog:TConsoleLog;'#13
  +#10'Array2DToString:TArray2DToString;'#13#10'GetGPUPixelArray:TGetGPUPixelAr'
  +'ray;'#13#10'GetGPUPixelArrayAsString:TGetGPUPixelArrayAsString;'#13#10'GetG'
  +'PUStageArray:TGetGPUStageArray;'#13#10'GetGPUStageArrayAsString:TGetGPUStag'
  +'eArrayAsString;'#13#10'GetGPUInitStageArray:TGetGPUInitStageArray;'#13#10'D'
  +'ebugStart:TDebugStart;'#13#10'RunPython:TRunPython;'#13#10'SetImageSource:T'
  +'SetImageSource;'#13#10'WobbleCEF:TWobbleCEF;'#13#10'PyodideLoadPackage:TPyo'
  +'dideLoadPackage;'#13#10'PyodidePackageLoaded:TPyodidePackageLoaded;'#13#10
  +'DSFetchRow:TDSFetchRow;'#13#10'DSAppendRow:TDSAppendRow;'#13#10'DSDeleteRow'
  +':TDSDeleteRow;'#13#10'DSDeleteAllRows:TDSDeleteAllRows;'#13#10#13#10'//DSDa'
  +'tasetToString:TDSDatasetToString;'#13#10#13#10'var EventsNameSpace:String;'
  +#13#10#13#10'type TMethodsClass = class(TObject)'#13#10' public'#13#10' Curr'
  +'entEventType:String;'#13#10' CurrentNodeId:String;'#13#10#13#10' procedure '
  +'mmiSetEventsNameSpace(NameSpace:String);'#13#10' procedure mmishowmessage(m'
  +'sg:String);'#13#10' procedure mmiShowXForm(XFormID:String; modal:Boolean);'
  +#13#10' procedure mmiCloseXForm(XFormID:String);'#13#10' procedure mmisetpro'
  +'pertyvalue(nodeName:String;propName:String;newValue:String);'#13#10' proced'
  +'ure mmisetpropertyvalueindexed(nodeName:String;propName:String;newValue:TSt'
  +'ringArray; x,y:integer);'#13#10' function mmigetpropertyvalue(nodeName:Stri'
  +'ng;propName:String):string;'#13#10' Function mmiconfirm(TextMessage:string)'
  +':boolean;'#13#10' Function mmiprompt(TextMessage,promptString:string):strin'
  +'g;'#13#10' procedure mmiCopyToClip(str:String);'#13#10' function mmiCopyFro'
  +'mClip(e:TEventStatus):String;'#13#10' procedure mmiLoadTableFromExcelCopy(T'
  +'ableName,CopiedString:String);'#13#10' function mmiGetTableDataForExcel(Tab'
  +'leName:String):String;'#13#10' procedure mmiLoadTableFromNumArray(TableName'
  +':String;NumArray:T2DNumArray);'#13#10' procedure mmiLoadTableFromStringArra'
  +'y(TableName:String;StrArray:T2DStringArray);'#13#10' function mmiGetTableDa'
  +'taArray(TableName:String;SkipHeader:Boolean):T2DStringArray;'#13#10' proced'
  +'ure mmiDoEvent(EventType,NodeId,myValue:String);'#13#10' procedure mmiMoveC'
  +'omponent(nodeId:string;NewParentId:string);'#13#10' procedure mmiCopyCompon'
  +'ent(nodeId,NewParentId,NewName:string);'#13#10' function mmiDeleteComponent'
  +'(nodeId:string;ShowNotFoundMsg:Boolean=true;ShowConfirm:Boolean=true):Boole'
  +'an;'#13#10' procedure mmiDeleteSelectedTreeNode(TreeName:string);'#13#10' f'
  +'unction mmiGetGPUParamNumValue(GPUName,pName:String):TNumArray;'#13#10' fun'
  +'ction mmiGetGPUParam2DNumValue(GPUName,pName:String):T2DNumArray;'#13#10' f'
  +'unction mmiGetGPUConstIntValue(GPUName,pName:String):integer;'#13#10' proce'
  +'dure mmiSetGPUParamNumValue(GPUName,pName:String;pValue:TNumArray);'#13#10
  +' procedure mmiSetGPUParam2DNumValue(GPUName,pName:String;pValue:T2DNumArray'
  +');'#13#10' procedure mmiSetGPUConstIntValue(GPUName,pName:String;pValue:int'
  +'eger);'#13#10' procedure mmiStartMain(e:TEventStatus);'#13#10' procedure mm'
  +'iShowBusy(e:TEventStatus);'#13#10' procedure mmiHideBusy;'#13#10' procedure'
  +' mmiProcessMessages;'#13#10' function mmiUserSystemAsString():String;'#13#10
  +' procedure mmiLoadUserSystemString(SystemString:String);'#13#10' procedure '
  +'mmiConsoleLog(txt:String);'#13#10' function mmiArray2DToString(arr:T2DNumAr'
  +'ray):String;'#13#10' function mmiGetGPUPixelArray(GPUName:String):T3DNumArr'
  +'ay;'#13#10' function mmiGetGPUPixelArrayAsString(GPUName:String):String;'#13
  +#10' function mmiGetGPUStageArray(GPUName:String):T3DNumArray;'#13#10' funct'
  +'ion mmiGetGPUStageArrayAsString(GPUName:String):String;'#13#10' function mm'
  +'iGetGPUInitStageArray(GPUName:String):T3DNumArray;'#13#10' procedure mmiDeb'
  +'ugStart;'#13#10' procedure mmiRunPython(str:String);'#13#10' procedure mmiS'
  +'etImageSource(nm,str:String);'#13#10' procedure mmiPyodideLoadPackage(nm:St'
  +'ring);'#13#10' function mmiPyodidePackageLoaded(nm:String):Boolean;'#13#10
  ,' function mmiDSFetchRow(e:TEventStatus;DSName:String;DSKeyValues:String):Bo'
  +'olean;'#13#10' function mmiDSAppendRow(e:TEventStatus;DSName:String;recObje'
  +'ct:TObject):Boolean;'#13#10' function mmiDSDeleteRow(e:TEventStatus;DSName:'
  +'String;DSKeyValues:String):Boolean;'#13#10' function mmiDSDeleteAllRows(e:T'
  +'EventStatus;DSName:String):Boolean;'#13#10' //function mmiDSDatasetToString'
  +'(e:TEventStatus;DSName:String):Boolean;'#13#10'end;'#13#10#13#10'type AnsiS'
  +'tring=String;'#13#10#13#10'var appmethods : TMethodsClass;'#13#10#13#10'pro'
  +'cedure DSReturnToEvent(ReturnEvent:TEventStatus;ProcName:String);'#13#10#13
  +#10'{$endif}'#13#10#13#10#13#10'implementation'#13#10#13#10'{$ifdef JScript}'
  +#13#10'procedure SetInterfaceContext;'#13#10'begin'#13#10'  appmethods:=TMet'
  +'hodsClass.Create;'#13#10'  ShowMessage:=@AppMethods.mmishowmessage;'#13#10
  +'  showxform:=@appmethods.mmishowxform;'#13#10'  closexform:=@appmethods.mmi'
  +'closexform;'#13#10'  setpropertyvalue:=@AppMethods.mmisetpropertyvalue;'#13
  +#10'  setpropertyvalueindexed:=@AppMethods.mmisetpropertyvalueindexed;'#13#10
  +'  getpropertyvalue:=@AppMethods.mmigetpropertyvalue;'#13#10'  confirm:=@App'
  +'Methods.mmiconfirm;'#13#10'  prompt:=@AppMethods.mmiprompt;'#13#10'  copyto'
  +'clip:=@AppMethods.mmiCopyToClip;'#13#10'  copyfromclip:=@AppMethods.mmiCopy'
  +'FromClip;'#13#10'  LoadTableFromExcelCopy:=@AppMethods.mmiLoadTableFromExce'
  +'lCopy;'#13#10'  GetTableDataForExcel:=@AppMethods.mmiGetTableDataForExcel;'
  +#13#10'  LoadTableFromNumArray:=@AppMethods.mmiLoadTableFromNumArray;'#13#10
  +'  LoadTableFromStringArray:=@AppMethods.mmiLoadTableFromStringArray;'#13#10
  +'  GetTableDataArray:=@AppMethods.mmiGetTableDataArray;'#13#10'  doevent:=@a'
  +'ppmethods.mmiDoEvent;'#13#10'  movecomponent:=@appmethods.mmiMoveComponent;'
  +#13#10'  copycomponent:=@appmethods.mmiCopyComponent;'#13#10'  deletecompone'
  +'nt:=@appmethods.mmiDeleteComponent;'#13#10'  deleteselectedtreenode:=@appme'
  +'thods.mmiDeleteSelectedTreeNode;'#13#10'  getgpuparamnumvalue:=@appmethods.'
  +'mmiGetGPUParamNumValue;'#13#10'  getgpuparam2dnumvalue:=@appmethods.mmiGetG'
  +'PUParam2DNumValue;'#13#10'  getgpuconstintvalue:=@appmethods.mmiGetGPUConst'
  +'IntValue;'#13#10'  setgpuparamnumvalue:=@appmethods.mmiSetGPUParamNumValue;'
  +#13#10'  setgpuparam2Dnumvalue:=@appmethods.mmiSetGPUParam2DNumValue;'#13#10
  +'  setgpuconstintvalue:=@appmethods.mmiSetGPUConstIntValue;'#13#10'  showbus'
  +'y:=@appmethods.mmiShowBusy;'#13#10'  hidebusy:=@appmethods.mmiHideBusy;'#13
  +#10'  processmessages:=@appmethods.mmiProcessMessages;'#13#10'  UserSystemAs'
  +'String:=@appmethods.mmiUserSystemAsString;'#13#10'  LoadUserSystemString:=@'
  +'appmethods.mmiLoadUserSystemString;'#13#10'  ConsoleLog:=@appmethods.mmiCon'
  +'soleLog;'#13#10'  Array2DToString:=@appmethods.mmiArray2DToString;'#13#10' '
  +' GetGPUPixelArray:=@appmethods.mmiGetGPUPixelArray;'#13#10'  GetGPUPixelArr'
  +'ayAsString:=@appmethods.mmiGetGPUPixelArrayAsString;'#13#10'  GetGPUStageAr'
  +'ray:=@appmethods.mmiGetGPUStageArray;'#13#10'  GetGPUStageArrayAsString:=@a'
  +'ppmethods.mmiGetGPUStageArrayAsString;'#13#10'  GetGPUinitStageArray:=@appm'
  +'ethods.mmiGetGPUInitStageArray;'#13#10'  DebugStart:=@appmethods.mmiDebugSt'
  +'art;'#13#10'  RunPython:=@appmethods.mmiRunPython;'#13#10'  SetImageSource:'
  +'=@appmethods.mmiSetImageSource;'#13#10'  PyodideLoadPackage:=@appmethods.mm'
  +'iPyodideLoadPackage;'#13#10'  PyodidePackageLoaded:=@appmethods.mmiPyodideP'
  +'ackageLoaded;'#13#10'  DSFetchRow:=@appmethods.mmiDSFetchRow;'#13#10'  DSAp'
  +'pendRow:=@appmethods.mmiDSAppendRow;'#13#10'  DSDeleteRow:=@appmethods.mmiD'
  +'SDeleteRow;'#13#10'  DSDeleteAllRows:=@appmethods.mmiDSDeleteAllRows;'#13#10
  +'  //DSDatasetToString:=@appmethods.mmiDSDatasetToString;'#13#10'end;'#13#10
  +#13#10'procedure DSReturnToEvent(ReturnEvent:TEventStatus;ProcName:String);'
  +#13#10'begin'#13#10'  if (ReturnEvent<>nil) then'#13#10'  begin'#13#10'     '
  +'ReturnEvent.ClearAsync(ProcName);'#13#10'     asm'#13#10'     pas.Events.ha'
  +'ndleEvent(ReturnEvent,'#13#10'                 ReturnEvent.EventType,'#13#10
  +'                 ReturnEvent.NodeId,'#13#10'                 ReturnEvent.Na'
  +'meSpace,'#13#10'                 '''','''');'#13#10'     end;'#13#10'  end;'
  +#13#10#13#10'end;'#13#10#13#10'procedure TMethodsClass.mmiSetEventsNameSpace'
  +'(NameSpace:String);'#13#10'begin'#13#10'  asm'#13#10'  pas.InterfaceTypes.E'
  +'ventsNameSpace=NameSpace;'#13#10'  end;'#13#10'end;'#13#10'procedure TMetho'
  +'dsClass.mmishowmessage(msg:String);'#13#10'begin'#13#10'  asm'#13#10'  aler'
  +'t(msg);'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmisetprop'
  +'ertyvalue(nodeName:String;propName:String;newValue:String);'#13#10'begin'#13
  +#10'  asm'#13#10'  pas.NodeUtils.EditAttributeValue2(nodeName,pas.InterfaceT'
  +'ypes.EventsNameSpace,propName,newValue);'#13#10'  end;'#13#10'end;'#13#10'p'
  +'rocedure TMethodsClass.mmisetpropertyvalueindexed(nodeName:String;propName:'
  +'String;newValue:TStringArray; x,y:integer);'#13#10'begin'#13#10'  asm'#13#10
  ,'  pas.NodeUtils.EditAttributeValueIndexed(nodeName,pas.InterfaceTypes.Event'
  +'sNameSpace,propName,newValue,x,y);'#13#10#13#10#13#10'  if (pas.InterfaceTy'
  +'pes.EventsNameSpace!='''') {'#13#10#13#10'     var myNode=pas.NodeUtils.Fin'
  +'dDataNodeById(pas.NodeUtils.UIRootNode,nodeName,pas.InterfaceTypes.EventsNa'
  +'meSpace,true);'#13#10'     if (mynode!=null) {'#13#10'       if (myNode.Nod'
  +'eType==''TXCompositeIntf'') {'#13#10'          // find the composite contai'
  +'ner'#13#10'          var CompositeContainer=pas.XComposite.FindCompositeCon'
  +'tainer(myNode);'#13#10'          // set the equivalent property'#13#10'    '
  +'      if (CompositeContainer!=null) {'#13#10'            CompositeContainer'
  +'.SetAttributeValue(propName,newValue);'#13#10'          }'#13#10'       }'
  +#13#10'     }'#13#10'  }'#13#10'  end;'#13#10'end;'#13#10'function TMethodsC'
  +'lass.mmigetpropertyvalue(nodeName:String;propName:String):String;'#13#10'va'
  +'r'#13#10'  val:String;'#13#10'begin'#13#10'  asm'#13#10'  //var myNode=pas.'
  +'NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,nodeName,pas.Interf'
  +'aceTypes.EventsNameSpace,true);'#13#10'  var myNode=pas.NodeUtils.FindDataN'
  +'odeById(pas.NodeUtils.UIRootNode,nodeName,pas.InterfaceTypes.EventsNameSpac'
  +'e,true);'#13#10'  if (myNode!=null) {'#13#10'    // special case for actual'
  +' height/width attributes...'#13#10'    if ((propName==''ActualHeight'')||(p'
  +'ropName==''ActualWidth'')) {'#13#10'      //alert(''mmigetpropertyvalue res'
  +'etting h/w'');'#13#10'      pas.XIFrame.ResetHWAttributes(myNode);'#13#10' '
  +'   }'#13#10'    var attr=myNode.GetAttributeAnyCase(propName,false);'#13#10
  +'    if (attr!=null) {'#13#10'      val=attr.AttribValue;'#13#10'      }'#13
  +#10'      else val='''';'#13#10'    }'#13#10'  else  {'#13#10'    val='''';'
  +#13#10'    }'#13#10'  end;'#13#10'  result:=val;'#13#10'end;'#13#10'Function'
  +' TMethodsClass.mmiconfirm(TextMessage:string):boolean;'#13#10'var'#13#10'  '
  +'ok:boolean;'#13#10'begin'#13#10'  asm'#13#10'  //ok=pas.StringUtils.confirm'
  +'(TextMessage);'#13#10'  ok=pas.XObjectInsp.XIDEConfirm(TextMessage);'#13#10
  +'  end;'#13#10'  result:=ok;'#13#10'end;'#13#10'Function TMethodsClass.mmipr'
  +'ompt(TextMessage,promptString:string):string;'#13#10'var'#13#10'  res:Strin'
  +'g;'#13#10'begin'#13#10'  asm'#13#10'  //res=pas.StringUtils.prompt(TextMess'
  +'age,promptString);'#13#10'  res=pas.XObjectInsp.XIDEPrompt(TextMessage,prom'
  +'ptString);'#13#10'  end;'#13#10'  result:=res;'#13#10'end;'#13#10'procedure'
  +' TMethodsClass.mmiShowXForm(XFormID:String; modal:Boolean);'#13#10'begin'#13
  +#10'  asm'#13#10'  //alert(''calling showxform ''+XFormID+'' ns=''+pas.Inter'
  +'faceTypes.EventsNameSpace);'#13#10'  pas.XForm.ShowXForm(XFormID,modal,pas.'
  +'InterfaceTypes.EventsNameSpace);'#13#10'  end;'#13#10'end;'#13#10'procedure'
  +' TMethodsClass.mmiCloseXForm(XFormID:String);'#13#10'begin'#13#10'  asm'#13
  +#10'  pas.XForm.CloseXForm(XFormID,pas.InterfaceTypes.EventsNameSpace);'#13
  +#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiCopyToClip(str:Stri'
  +'ng);'#13#10'begin'#13#10'  asm'#13#10'  pas.NodeUtils.myCopyToClip(''String'
  +''',str);'#13#10'  end;'#13#10'end;'#13#10'function TMethodsClass.mmiCopyFro'
  +'mClip(e:TEventStatus):String;'#13#10'var'#13#10'  str:String;'#13#10'begin'
  +#13#10'  // CopyFromClip is an async function (required for browser use), so'
  +' it must be coded in the'#13#10'  // ''Init'' section of an event handler. '
  +'The result here is a blank string.'#13#10'  // mygetClipboardData pops up t'
  +'he paste dialog form, where the user must press Ctrl-V.'#13#10'  // The pas'
  +'ted string is then held in e.ReturnString, which cn be picked up in the'#13
  +#10'  // ''Main'' section of the event handler.'#13#10'  str:='''';'#13#10' '
  +' asm'#13#10'    {'#13#10'      if (e!=null)'#13#10'      {'#13#10'        i'
  +'f (e.InitRunning==false) {'#13#10'          alert(''Warning: CopyFromClip m'
  +'ust be called from the "Init" section of an event handler'');'#13#10'      '
  +'    }'#13#10'        e.AsyncProcsRunning.Add(''CopyFromClip'');'#13#10'    '
  +'    //alert(''mmiCopyFromClip. completion event is ''+e.EventType);'#13#10
  +'        pas.PasteDialogUnit.CompletionEvent=e;'#13#10'        var str=pas.N'
  +'odeUtils.mygetClipboardData(''String'');'#13#10'      }'#13#10'      else'
  +#13#10'        alert(''CopyFromClip must be called with parameter "e"'');'#13
  +#10'    }'#13#10'  end;'#13#10'  result:=str;   // have to await user pressi'
  +'ng ctrl-v to get pasted data'#13#10'end;'#13#10#13#10'procedure TMethodsCla'
  +'ss.mmiLoadTableFromExcelCopy(TableName,CopiedString:String);'#13#10'begin'
  +#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUt'
  +'ils.SystemNodeTree,TableName,pas.InterfaceTypes.EventsNameSpace,true);'#13
  +#10'    if ((myNode!=null)&&(myNode.NodeType==''TXTable''))'#13#10'    {'#13
  +#10'      myNode.LoadTableFromExcelCopy(CopiedString);'#13#10'    }'#13#10' '
  +' end;'#13#10'end;'#13#10'function TMethodsClass.mmiGetTableDataForExcel(Tab'
  ,'leName:String):String;'#13#10'var'#13#10'  dta:String;'#13#10'begin'#13#10
  +'  dta:='''';'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeB'
  +'yId(pas.NodeUtils.SystemNodeTree,TableName,pas.InterfaceTypes.EventsNameSpa'
  +'ce,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXTable''))'#13
  +#10'    {'#13#10'      dta = myNode.GetTableDataForExcel;'#13#10'    }'#13#10
  +'  end;'#13#10'  result:=dta;'#13#10'end;'#13#10#13#10'procedure TMethodsCla'
  +'ss.mmiLoadTableFromNumArray(TableName:String;NumArray:T2DNumArray);'#13#10
  +'begin'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas'
  +'.NodeUtils.SystemNodeTree,TableName,pas.InterfaceTypes.EventsNameSpace,true'
  +');'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXTable''))'#13#10'  '
  +'  {'#13#10'      myNode.LoadTableFromNumArray(NumArray);'#13#10'    }'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'procedure TMethodsClass.mmiLoadTableFromStr'
  +'ingArray(TableName:String;StrArray:T2DStringArray);'#13#10'begin'#13#10'  a'
  +'sm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.Syste'
  +'mNodeTree,TableName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if'
  +' ((myNode!=null)&&(myNode.NodeType==''TXTable''))'#13#10'    {'#13#10'     '
  +' myNode.LoadTableFromStringArray(StrArray);'#13#10'    }'#13#10'  end;'#13
  +#10'end;'#13#10#13#10'function TMethodsClass.mmiGetTableDataArray(TableName:'
  +'String;SkipHeader:Boolean):T2DStringArray;'#13#10'var'#13#10'  arr:T2DStrin'
  +'gArray;'#13#10'begin'#13#10'  setlength(arr,0);'#13#10'  asm'#13#10'    var'
  +' myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,TableNa'
  +'me,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myNode!=null)&'
  +'&(myNode.NodeType==''TXTable''))'#13#10'    {'#13#10'      arr = myNode.Get'
  +'CellsAsArray(SkipHeader);'#13#10'    }'#13#10'  end;'#13#10'  result:=arr;'
  +#13#10'end;'#13#10#13#10'procedure TMethodsClass.mmiDoEvent(EventType,NodeId'
  +',myValue:String);'#13#10'begin'#13#10'  // timeout here basically (eg.) bec'
  +'ause TreeNodeClick opens the tree node on a timeout, and we want to see'#13
  +#10'  // those changes on screen before continuing.'#13#10'  asm'#13#10'    '
  +'myTimeout(pas.Events.handleEvent,5,''handleEvent'',0,null,EventType,NodeId,'
  +'pas.InterfaceTypes.EventsNameSpace,myValue);'#13#10'  end;'#13#10'end;'#13
  +#10#13#10'procedure TMethodsClass.mmiMoveComponent(nodeId:string;NewParentId'
  +':string);'#13#10'begin'#13#10'  asm'#13#10'  pas.XObjectInsp.OIMoveItem(nod'
  +'eId,pas.InterfaceTypes.EventsNameSpace,NewParentId);'#13#10'  end;'#13#10'e'
  +'nd;'#13#10'procedure TMethodsClass.mmiCopyComponent(nodeId,NewParentId,NewN'
  +'ame:string);'#13#10'begin'#13#10'  asm'#13#10'  pas.XObjectInsp.OICopyToNew'
  +'Parent(nodeId,pas.InterfaceTypes.EventsNameSpace,NewParentId,NewName);'#13
  +#10'  end;'#13#10'end;'#13#10'function TMethodsClass.mmiDeleteComponent(node'
  +'Id:string;ShowNotFoundMsg:Boolean=true;ShowConfirm:Boolean=true):Boolean;'
  +#13#10'var'#13#10'  Deleted:Boolean;'#13#10'begin'#13#10'  asm'#13#10'  Dele'
  +'ted=pas.XObjectInsp.OIDeleteItem(nodeId,pas.InterfaceTypes.EventsNameSpace,'
  +'ShowNotFoundMsg,ShowConfirm);'#13#10'  end;'#13#10'  result:=Deleted;'#13#10
  +'end;'#13#10'procedure TMethodsClass.mmiDeleteSelectedTreeNode(TreeName:stri'
  +'ng);'#13#10'begin'#13#10'  asm'#13#10'  var myNode=pas.NodeUtils.FindDataNo'
  +'deById(pas.NodeUtils.SystemNodeTree,TreeName,pas.InterfaceTypes.EventsNameS'
  +'pace,true);'#13#10'  if ((myNode!=null)&&(myNode.NodeType==''TXTree'')) {'
  +#13#10'    myNode.DeleteSelectedNode();'#13#10'    }'#13#10'  end;'#13#10'en'
  +'d;'#13#10'procedure TMethodsClass.mmiSetGPUParamNumValue(GPUName,pName:Stri'
  +'ng;pValue:TNumArray);'#13#10'begin'#13#10'  asm'#13#10'  //alert(''mmiSetGP'
  +'UParamNumValue ''+GPUName+'' ''+pName);'#13#10'    var myNode=pas.NodeUtils'
  +'.FindDataNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.E'
  +'ventsNameSpace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TX'
  +'GPUCanvas'')) {'#13#10'      //alert(''calling SetParamNumValue ''+pName+'''
  +' ''+pValue);'#13#10'      myNode.SetParamNumValue(pName,pValue,true);'#13#10
  +'    }'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiSetGPUPar'
  +'am2DNumValue(GPUName,pName:String;pValue:T2DNumArray);'#13#10'begin'#13#10
  +'  asm'#13#10'  //alert(''mmiSetGPUParam2DNumValue ''+GPUName+'' ''+pName);'
  +#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNod'
  +'eTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myN'
  +'ode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      myNode.SetPa'
  +'ram2DNumValue(pName,pValue,true);'#13#10'    }'#13#10'  end;'#13#10'end;'#13
  +#10'procedure TMethodsClass.mmiSetGPUConstIntValue(GPUName,pName:String;pVal'
  +'ue:integer);'#13#10'begin'#13#10'asm'#13#10'//alert(''mmiSetGPUConstIntValu'
  +'e ''+GPUName+'' ''+pName);'#13#10'  var myNode=pas.NodeUtils.FindDataNodeBy'
  +'Id(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,'
  ,'true);'#13#10'  if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'
  +#13#10'    myNode.SetConstIntValue(pName,pValue);'#13#10'  }'#13#10'end;'#13
  +#10'end;'#13#10'function TMethodsClass.mmiGetGPUConstIntValue(GPUName,pName:'
  +'String):integer;'#13#10'var'#13#10'  cval:integer;'#13#10'begin'#13#10'  cv'
  +'al:=0;'#13#10'  asm'#13#10'  //alert(''mmiSetGPUConstIntValue ''+GPUName+'''
  +' ''+pName);'#13#10'  var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtil'
  +'s.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10' '
  +' if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'    cval='
  +'myNode.GetConstIntValue(pName);'#13#10'  }'#13#10'  end;'#13#10'  result:=c'
  +'val;'#13#10'end;'#13#10'function TMethodsClass.mmiGetGPUParamNumValue(GPUNa'
  +'me,pName:String):TNumArray;'#13#10'var'#13#10'  pval:TNumArray;'#13#10'begi'
  +'n'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.Nod'
  +'eUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13
  +#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'   '
  +'   pval=myNode.GetParamNumValue(pName);'#13#10'    }'#13#10'  end;'#13#10' '
  +' result:=pval;'#13#10'end;'#13#10'function TMethodsClass.mmiGetGPUParam2DNu'
  +'mValue(GPUName,pName:String):T2DNumArray;'#13#10'var'#13#10'  pval:T2DNumAr'
  +'ray;'#13#10'begin'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindData'
  +'NodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsName'
  +'Space,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'
  +''')) {'#13#10'      pval=myNode.GetParam2DNumValue(pName);'#13#10'    }'#13
  +#10'  end;'#13#10'  result:=pval;'#13#10'end;'#13#10#13#10'procedure TMethod'
  +'sClass.mmiStartMain(e:TEventStatus);'#13#10'begin'#13#10'  // eg. after the'
  +' async function in an event ''Init'' section is complete, fire off'#13#10' '
  +' // the event handler again to process the ''Main'' section.'#13#10'  asm'
  +#13#10'    //console.log(this.EventType+'' ''+this.NodeId);'#13#10'    //con'
  +'sole.log(this);'#13#10'    var evt = e.EventType;'#13#10'    var nid = e.No'
  +'deId;'#13#10'    var ns = e.NameSpace;'#13#10'    var eob = e;'#13#10'    s'
  +'etTimeout(function(){pas.Events.handleEvent(eob,'#13#10'                   '
  +'          evt,'#13#10'                             nid,'#13#10'            '
  +'                 ns,'#13#10'                             '''','''');  }, 10'
  +'0);'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiShowBusy(e:'
  +'TEventStatus);'#13#10'begin'#13#10'  // ShowBusy is an async function (requ'
  +'ired for browser use), so it must be coded in the'#13#10'  // ''Init'' sect'
  +'ion of an event handler.'#13#10'  asm'#13#10'    {'#13#10'      console.log'
  +'(''ShowBusy'');'#13#10'      if (e!=null)'#13#10'      {'#13#10'        con'
  +'sole.log(''  e not null'');'#13#10'        if (e.InitRunning==false) {'#13
  +#10'          alert(''Warning: ShowBusy must be called from the "Init" secti'
  +'on of an event handler'');'#13#10'          }'#13#10'        console.log('''
  +'  adding async proc'');'#13#10'        e.AsyncProcsRunning.Add(''ShowBusy'''
  +');'#13#10'        var ob=document.getElementById(''Grey99'');'#13#10'      '
  +'  if (ob==null) {'#13#10'          console.log(''  creating Grey99'');'#13
  +#10'          pas.HTMLUtils.ShowGreyOverlay(''UIRoot'',''Grey99'',''Please W'
  +'ait...'');'#13#10'        }'#13#10'        else  console.log(''  Grey99 alr'
  +'eady exists'');'#13#10'      }'#13#10'      else'#13#10'      {'#13#10'    '
  +'    alert(''ShowBusy must be called with parameter "e"'');'#13#10'      }'
  +#13#10'    }'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiHid'
  +'eBusy;'#13#10'begin'#13#10'  asm'#13#10'    pas.HTMLUtils.DeleteGreyOverlay'
  +'(''Grey99'');'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiP'
  +'rocessMessages;'#13#10'begin'#13#10'  asm'#13#10'    //!!!!'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'function TMethodsClass.mmiUserSystemAsString():Stri'
  +'ng;'#13#10'var'#13#10'  SystemString:String;'#13#10'begin'#13#10'  asm'#13
  +#10'  SystemString=pas.XObjectInsp.BuildSystemString(false);'#13#10'  end;'
  +#13#10'  result:=SystemString;'#13#10'end;'#13#10#13#10'procedure TMethodsCl'
  +'ass.mmiLoadUserSystemString(SystemString:String);'#13#10'begin'#13#10'  asm'
  +#13#10'    pas.NodeUtils.StartingUp=false;'#13#10'    pas.XObjectInsp.DoSyst'
  +'emLoad(SystemString,'''');'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure'
  +' TMethodsClass.mmiConsoleLog(txt:String);'#13#10'begin'#13#10'  asm'#13#10
  +'    console.log(txt);'#13#10'  end;'#13#10'end;'#13#10#13#10'function TMeth'
  +'odsClass.mmiArray2DToString(arr:T2DNumArray):String;'#13#10'var'#13#10'  st'
  +'r:String;'#13#10'begin'#13#10'  asm'#13#10'    str=pas.StringUtils.Num2dArr'
  +'ayToString(arr);'#13#10'  end;'#13#10'  result:=str;'#13#10'end;'#13#10#13
  +#10'function TMethodsClass.mmiGetGPUPixelArray(GPUName:String):T3DNumArray;'
  +#13#10'var'#13#10'  pxval:T3DNumArray;'#13#10'begin'#13#10'  pxval:=nil;'#13
  ,#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils'
  +'.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'  '
  +'  if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      px'
  +'val=pas.XGPUCanvas.GetOutputArrayValue(GPUName);'#13#10'    }'#13#10'  end;'
  +#13#10'  result:=pxval;'#13#10'end;'#13#10#13#10'function TMethodsClass.mmiG'
  +'etGPUPixelArrayAsString(GPUName:String):String;'#13#10'var'#13#10'  pxval:S'
  +'tring;'#13#10'begin'#13#10'  pxval:='''';'#13#10'  asm'#13#10'    var myNod'
  +'e=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.I'
  +'nterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myNode!=null)&&(myNode'
  +'.NodeType==''TXGPUCanvas'')) {'#13#10'      pxval=pas.XGPUCanvas.GetOutputA'
  +'rrayString(GPUName);'#13#10'    }'#13#10'  end;'#13#10'  result:=pxval;'#13
  +#10'end;'#13#10#13#10'function TMethodsClass.mmiGetGPUStageArray(GPUName:Str'
  +'ing):T3DNumArray;'#13#10'var'#13#10'  pxval:T3DNumArray;'#13#10'begin'#13#10
  +'  pxval:=nil;'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNode'
  +'ById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpac'
  +'e,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas''))'
  +' {'#13#10'      pxval=pas.XGPUCanvas.GetStageArrayValue(GPUName);'#13#10'  '
  +'  }'#13#10'  end;'#13#10'  result:=pxval;'#13#10'end;'#13#10#13#10'function'
  +' TMethodsClass.mmiGetGPUStageArrayAsString(GPUName:String):String;'#13#10'v'
  +'ar'#13#10'  pxval:String;'#13#10'begin'#13#10'  pxval:='''';'#13#10'  asm'
  +#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNod'
  +'eTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myN'
  +'ode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      pxval=pas.XG'
  +'PUCanvas.GetStageArrayString(GPUName);'#13#10'    }'#13#10'  end;'#13#10'  '
  +'result:=pxval;'#13#10'end;'#13#10'function TMethodsClass.mmiGetGPUInitStage'
  +'Array(GPUName:String):T3DNumArray;'#13#10'var'#13#10'  pxval:T3DNumArray;'
  +#13#10'begin'#13#10'  pxval:=nil;'#13#10'  asm'#13#10'    var myNode=pas.Nod'
  +'eUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceT'
  +'ypes.EventsNameSpace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType'
  +'==''TXGPUCanvas'')) {'#13#10'      pxval=pas.XGPUCanvas.GetInitStageArrayVa'
  +'lue(GPUName);'#13#10'    }'#13#10'  end;'#13#10'  result:=pxval;'#13#10'end'
  +';'#13#10'procedure TMethodsClass.mmiDebugStart;'#13#10'begin'#13#10'  asm'
  +#13#10'    debugger;'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClas'
  +'s.mmiRunPython(str:String);'#13#10'begin'#13#10'  asm'#13#10'    pyodide.ru'
  +'nPython(str);'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiS'
  +'etImageSource(nm,str:String);'#13#10'begin'#13#10'  asm'#13#10'    var ob=d'
  +'ocument.getElementById(nm+"Contents");'#13#10'    if (ob!=null) {'#13#10'  '
  +'    ob.src=str;'#13#10'    }'#13#10'  end;'#13#10'end;'#13#10#13#10'procedu'
  +'re TMethodsClass.mmiPyodideLoadPackage(nm:String);'#13#10'begin'#13#10'  as'
  +'m'#13#10'    try {'#13#10'      pyodide.loadPackage(nm).then(() => {'#13#10
  +'        if (nm in pyodide.loadedPackages) {console.log(nm+" is now availabl'
  +'e"); }'#13#10'        else {alert(''Pyodide failed to load package ''+nm+'''
  +' please check console for details'');}'#13#10'      }).catch(err => alert(e'
  +'rr.message+'' in PyodideLoadPackage ''+nm));'#13#10'    } catch(err) { aler'
  +'t(err.message+''  in PyodideLoadPackage ''+nm);'#13#10'           }'#13#10
  +'  end;'#13#10'end;'#13#10'function TMethodsClass.mmiPyodidePackageLoaded(nm'
  +':String):Boolean;'#13#10'var'#13#10'  found:Boolean;'#13#10'begin'#13#10'  '
  +'found:=false;'#13#10'  asm'#13#10'    if (nm in pyodide.loadedPackages) { f'
  +'ound=true; }'#13#10'  end;'#13#10'  result:=found;'#13#10'end;'#13#10#13#10
  +'function TMethodsClass.mmiDSFetchRow(e:TEventStatus;DSName:String;DSKeyValu'
  +'es:String):Boolean;'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  e'
  +'.AsyncProcsRunning.Add(''DSFetchRow'');'#13#10'  asm'#13#10'    // DSKeyVal'
  +'ues is a string delimited by '';'' - one value per key field'#13#10'    var'
  +' keyvalues = DSKeyValues.split('';'');'#13#10'    var keynodes = pas.XDataM'
  +'odel.DMGetKeyFields(DSName);'#13#10'    if (keyvalues.length == keynodes.le'
  +'ngth) {'#13#10'      //console.log(''mmiDSFetchRow. keyvalues='');'#13#10' '
  +'     //console.log(keyvalues);'#13#10'      if (keyvalues.length>0) {'#13#10
  +'        ok=pas.XDataModel.DSGetIndexedRecordAsObject(DSName,''DSFetchRow'','
  +'keyvalues,e);'#13#10'        }'#13#10'    }'#13#10'    else ok=false;'#13#10
  +'  end;'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'function TMethodsClass'
  +'.mmiDSAppendRow(e:TEventStatus;DSName:String;recObject:TObject):Boolean;'#13
  +#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  ok:=true;'#13#10'  e.Asyn'
  +'cProcsRunning.Add(''DSAppendRow'');'#13#10'  asm'#13#10'    ok=pas.XDataMod'
  +'el.DSAppendRecordFromObject(DSName,''DSAppendRow'',recObject,e);'#13#10'  e'
  ,'nd;'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'function TMethodsClass.mm'
  +'iDSDeleteRow(e:TEventStatus;DSName:String;DSKeyValues:String):Boolean;'#13
  +#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  e.AsyncProcsRunning.Add('
  +'''DSDeleteRow'');'#13#10'  asm'#13#10'    // DSKeyValues is a string delimi'
  +'ted by '';'' - one value per key field'#13#10'    var keyvalues = DSKeyValu'
  +'es.split('';'');'#13#10'    var keynodes = pas.XDataModel.DMGetKeyFields(DS'
  +'Name);'#13#10'    if (keyvalues.length == keynodes.length) {'#13#10'      c'
  +'onsole.log(''mmiDSDeleteRow. keyvalues='');'#13#10'      console.log(keyval'
  +'ues);'#13#10'      if (keyvalues.length>0) {'#13#10'        ok=pas.XDataMod'
  +'el.DSDeleteARow(e,DSName,''DSDeleteRow'',keyvalues);'#13#10'        }'#13#10
  +'    }'#13#10'    else ok=false;'#13#10'  end;'#13#10'  result:=ok;'#13#10'e'
  +'nd;'#13#10#13#10'function TMethodsClass.mmiDSDeleteAllRows(e:TEventStatus;D'
  +'SName:String):Boolean;'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10
  +'  ok:=true;'#13#10'  e.AsyncProcsRunning.Add(''DSDeleteAllRows'');'#13#10' '
  +' asm'#13#10'    console.log(''mmiDSDeleteAllRows. '');'#13#10'    ok=pas.XD'
  +'ataModel.DSEmptyDataset(e,DSName,''DSDeleteAllRows'');'#13#10'  end;'#13#10
  +'  result:=ok;'#13#10'end;'#13#10#13#10#13#10#13#10'(*function TMethodsClass'
  +'.mmiDSDatasetToString(e:TEventStatus;dsName:String):Boolean;'#13#10'var'#13
  +#10'  ok:Boolean;'#13#10'begin'#13#10'  asm'#13#10'    ok=pas.XDataModel.DSD'
  +'ataToStringAsync(e,dsName);'#13#10'  end;'#13#10'  result:=ok;'#13#10'end;'
  +#13#10'*)'#13#10#13#10'begin'#13#10'  EventsNameSpace:='''';'#13#10'  SetInt'
  +'erfaceContext;'#13#10'  {$endif}'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('interfacetypesdll','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InterfaceTypesDll;'#13
  +#10'(*'#13#10'   Interface declarations.'#13#10'   For inclusion inside the '
  +'dynamically created dll (fpc compiler), providing functions available in us'
  +'er event code'#13#10'   (also see units CompileUserCode and DllInterface).'
  +#13#10' *)'#13#10'{$mode objfpc}{$H+}'#13#10'{$INTERFACES CORBA}'#13#10'inte'
  +'rface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, EventsInterface'#13#10
  +'  ;'#13#10#13#10'{$ifdef Dll}'#13#10'type'#13#10'Tshowmessage=procedure(msg'
  +':String) of object;                                                        '
  +'stdcall;'#13#10'Tsetpropertyvalue=procedure(nodeName:String;propName:String'
  +';newValue:String) of object;              stdcall;'#13#10'Tsetpropertyvalue'
  +'Indexed=procedure(nodeName:String;propName:String;newValue:TStringArray;x,y'
  +':integer) of object;   stdcall;'#13#10'Tconfirm=function(TextMessage:string'
  +'):boolean of object;                                             stdcall;'
  +#13#10'Tgetpropertyvalue=function(nodeName:String;propName:String):string  o'
  +'f object;                        stdcall;'#13#10'Tprompt=function(TextMessa'
  +'ge,promptString:string):string of object;                                  '
  +'stdcall;'#13#10'Tshowxform=procedure(XFormID:String; modal:Boolean) of obje'
  +'ct;                                       stdcall;'#13#10'Tclosexform=proce'
  +'dure(XFormID:String) of object;                                            '
  +'         stdcall;'#13#10'TCopyToClip=procedure(str:String) of object;      '
  +'                                                   stdcall;'#13#10'TCopyFro'
  +'mClip=function(e:TEventStatus):String of object;                           '
  +'                  stdcall;'#13#10'TLoadTableFromExcelCopy=procedure(TableNa'
  +'me,CopiedString:String) of object;                         stdcall;'#13#10
  +'TGetTableDataForExcel=function(TableName:String):String of object          '
  +'                         stdcall;'#13#10'TLoadTableFromNumArray=procedure(T'
  +'ableName:String;NumArray:T2DNumArray) of object;                  stdcall;'
  +#13#10'TLoadTableFromStringArray=procedure(TableName:String;StrArray:T2DStri'
  +'ngArray) of object;                  stdcall;'#13#10'TGetTableDataArray=fun'
  +'ction(TableName:String;SkipHeader:Boolean):T2DStringArray of object;       '
  +'stdcall;'#13#10'TDoEvent=procedure(EventType,NodeId,myValue:String) of obje'
  +'ct;                                      stdcall;'#13#10'TMoveComponent=pro'
  +'cedure(nodeId:string;NewParentId:string) of object;                        '
  +'        stdcall;'#13#10'TCopyComponent=procedure(nodeId,NewParentId,NewName'
  +':string) of object;                                stdcall;'#13#10'TDeleteC'
  +'omponent=function(nodeId:string;ShowNotFoundMsg:Boolean=true;ShowConfirm:Bo'
  +'olean=true):Boolean of object;             stdcall;'#13#10'TDeleteSelectedT'
  +'reeNode=procedure(TreeName:string) of object;             stdcall;'#13#10'T'
  +'GetGPUParamNumValue=function(GPUName,pName:String):TNumArray of object;    '
  +'                            stdcall;'#13#10'TGetGPUParam2DNumValue=function'
  +'(GPUName,pName:String):T2DNumArray of object;                          stdc'
  +'all;'#13#10'TGetGPUConstIntValue=function(GPUName,pName:String):integer of '
  +'object;                                stdcall;'#13#10'TSetGPUParamNumValue'
  +'=procedure(GPUName,pName:String;pValue:TNumArray) of object;               '
  +'         stdcall;'#13#10'TSetGPUParam2DNumValue=procedure(GPUName,pName:Str'
  +'ing;pValue:T2DNumArray) of object;                        stdcall;'#13#10'T'
  +'SetGPUConstIntValue=procedure(GPUName,pName:String;pValue:integer) of objec'
  +'t;                        stdcall;'#13#10'TStartMain=procedure(e:TEventStat'
  +'us) of object;                        stdcall;'#13#10'TShowBusy=procedure(e'
  +':TEventStatus) of object;                        stdcall;'#13#10'THideBusy='
  +'procedure of object;                        stdcall;'#13#10'TProcessMessage'
  +'s=procedure of object;                        stdcall;'#13#10'TUserSystemAs'
  +'String=function():String of object; stdcall;'#13#10'TLoadUserSystemString=p'
  +'rocedure(SystemString:String) of object; stdcall;'#13#10'TConsoleLog=proced'
  +'ure(txt:String) of object; stdcall;'#13#10'TArray2DToString=function(arr:T2'
  +'DNumArray):String of object;                                 stdcall;'#13#10
  +'TGetGPUPixelArray=function(GPUName:String):T3DNumArray of object;          '
  +'                      stdcall;'#13#10'TGetGPUPixelArrayAsString=function(GP'
  +'UName:String):String of object;                                stdcall;'#13
  ,#10'TGetGPUStageArray=function(GPUName:String):T3DNumArray of object;       '
  +'                         stdcall;'#13#10'TGetGPUStageArrayAsString=function'
  +'(GPUName:String):String of object;                                stdcall;'
  +#13#10'TGetGPUInitStageArray=function(GPUName:String):T3DNumArray of object;'
  +'                                stdcall;'#13#10'TDebugStart=procedure of ob'
  +'ject; stdcall;'#13#10'TRunPython=procedure(str:String) of object; stdcall;'
  +#13#10'TSetImageSource=procedure(nm,str:String) of object; stdcall;'#13#10'T'
  +'WobbleCEF=procedure(nm:String)of object;    stdcall;'#13#10'TPyodideLoadPac'
  +'kage=procedure(nm:String) of object;  stdcall;'#13#10'TPyodidePackageLoaded'
  +'=function(nm:String):Boolean of object;  stdcall;'#13#10'TDSFetchRow=functi'
  +'on(e:TEventStatus;DSName:String;DSKeyValues:String):Boolean of object;  std'
  +'call;'#13#10'TDSAppendRow=function(e:TEventStatus;DSName:String;recObject:T'
  +'Object):Boolean of object; stdcall;'#13#10'TDSDeleteRow=function(e:TEventSt'
  +'atus;DSName:String;DSKeyValues:String):Boolean of object; stdcall;'#13#10'T'
  +'DSDeleteAllRows=function(e:TEventStatus;DSName:String):Boolean of object; s'
  +'tdcall;'#13#10#13#10'//TDSDatasetToString=function(e:TEventStatus;dsName:St'
  +'ring):Boolean of object; stdcall;'#13#10#13#10'type'#13#10'IMyMethodInterfa'
  +'ce = interface(IInterface)'#13#10'    procedure mmiSetEventsNameSpace(NameS'
  +'pace:String);  stdcall;'#13#10'    procedure mmiShowMessage(msg:String); st'
  +'dcall;'#13#10'    procedure mmiShowXForm(XFormID:String; modal:Boolean);  s'
  +'tdcall;'#13#10'    procedure mmiCloseXForm(XFormID:String);  stdcall;'#13#10
  +'    procedure mmiSetPropertyValue(nodeName:String;propName:String;newValue:'
  +'String);  stdcall;'#13#10'    procedure mmiSetPropertyValueIndexed(nodeName'
  +':String;propName:String;newValue:TStringArray; x,y:integer);  stdcall;'#13
  +#10'    function mmiGetPropertyValue(nodeName:String;propName:String):string'
  +';  stdcall;'#13#10'    Function mmiconfirm(TextMessage:string):boolean;  st'
  +'dcall;'#13#10'    Function mmiprompt(TextMessage,promptString:string):strin'
  +'g;  stdcall;'#13#10'    procedure mmiCopyToClip(str:String);  stdcall;'#13
  +#10'    function mmiCopyFromClip(e:TEventStatus):String;  stdcall;'#13#10'  '
  +'  procedure mmiLoadTableFromExcelCopy(TableName,CopiedString:String); stdca'
  +'ll;'#13#10'    function mmiGetTableDataForExcel(TableName:String):String;  '
  +'stdcall;'#13#10'    procedure mmiLoadTableFromNumArray(TableName:String;Num'
  +'Array:T2DNumArray); stdcall;'#13#10'    procedure mmiLoadTableFromStringArr'
  +'ay(TableName:String;StrArray:T2DStringArray); stdcall;'#13#10'    function '
  +'mmiGetTableDataArray(TableName:String;SkipHeader:Boolean):T2DStringArray; s'
  +'tdcall;'#13#10'    procedure mmiDoEvent(EventType,NodeId,myValue:String);  '
  +' stdcall;'#13#10'    procedure mmiMoveComponent(nodeId:string;NewParentId:s'
  +'tring);  stdcall;'#13#10'    procedure mmiCopyComponent(nodeId,NewParentId,'
  +'NewName:string);  stdcall;'#13#10'    function mmiDeleteComponent(nodeId:st'
  +'ring;ShowNotFoundMsg:Boolean=true;ShowConfirm:Boolean=true):Boolean;  stdca'
  +'ll;'#13#10'    procedure mmiDeleteSelectedTreeNode(TreeName:string);    std'
  +'call;'#13#10'    function mmiGetGPUParamNumValue(GPUName,pName:String):TNum'
  +'Array;  stdcall;'#13#10'    function mmiGetGPUParam2DNumValue(GPUName,pName'
  +':String):T2DNumArray;  stdcall;'#13#10'    function mmiGetGPUConstIntValue('
  +'GPUName,pName:String):integer;  stdcall;'#13#10'    procedure mmiSetGPUPara'
  +'mNumValue(GPUName,pName:String;pValue:TNumArray);  stdcall;'#13#10'    proc'
  +'edure mmiSetGPUParam2DNumValue(GPUName,pName:String;pValue:T2DNumArray);  s'
  +'tdcall;'#13#10'    procedure mmiSetGPUConstIntValue(GPUName,pName:String;pV'
  +'alue:integer);  stdcall;'#13#10'    procedure mmiStartMain(e:TEventStatus);'
  +' stdcall;'#13#10'    procedure mmiShowBusy(e:TEventStatus); stdcall;'#13#10
  +'    procedure mmiHideBusy; stdcall;'#13#10'    procedure mmiProcessMessages'
  +'; stdcall;'#13#10'    function mmiUserSystemAsString():String; stdcall;'#13
  +#10'    procedure mmiLoadUserSystemString(SystemString:String); stdcall;'#13
  +#10'    procedure mmiConsoleLog(txt:String);  stdcall;'#13#10'    function m'
  +'miArray2DToString(arr:T2DNumArray):String;         stdcall;'#13#10'    func'
  +'tion mmiGetGPUPixelArray(GPUName:String):T3DNumArray;                      '
  +'          stdcall;'#13#10'    function mmiGetGPUPixelArrayAsString(GPUName:'
  +'String):String;                             stdcall;'#13#10'    function mm'
  +'iGetGPUStageArray(GPUName:String):T3DNumArray;                             '
  +'   stdcall;'#13#10'    function mmiGetGPUStageArrayAsString(GPUName:String)'
  +':String;                             stdcall;'#13#10'    function mmiGetGPU'
  +'InitStageArray(GPUName:String):T3DNumArray;                                '
  +'stdcall;'#13#10'    procedure mmiDebugStart; stdcall;'#13#10'    procedure '
  +'mmiRunPython(str:String); stdcall;'#13#10'    procedure mmiSetImageSource(n'
  ,'m,str:String); stdcall;'#13#10'    procedure mmiWobbleCEF(nm:String);    st'
  +'dcall;'#13#10'    procedure mmiPyodideLoadPackage(nm:String);  stdcall;'#13
  +#10'    function mmiPyodidePackageLoaded(nm:String):Boolean; stdcall;'#13#10
  +'    function mmiDSFetchRow(e:TEventStatus;DSName:String;DSKeyValues:String)'
  +':Boolean;  stdcall;'#13#10'    function mmiDSAppendRow(e:TEventStatus;DSNam'
  +'e:String;recObject:TObject):Boolean; stdcall;'#13#10'    function mmiDSDele'
  +'teRow(e:TEventStatus;DSName:String;DSKeyValues:String):Boolean; stdcall;'#13
  +#10'    function mmiDSDeleteAllRows(e:TEventStatus;DSName:String):Boolean; s'
  +'tdcall;'#13#10'//    function mmiDSDatasetToString(e:TEventStatus;dsName:St'
  +'ring):Boolean; stdcall;'#13#10'end;'#13#10#13#10#13#10'var AppMethods : IMy'
  +'MethodInterface;'#13#10#13#10'var'#13#10'showmessage:Tshowmessage;'#13#10's'
  +'howxform:Tshowxform;'#13#10'closexform:Tclosexform;'#13#10'confirm:Tconfirm'
  +';'#13#10'prompt:Tprompt;'#13#10'setpropertyvalue:Tsetpropertyvalue;'#13#10
  +'setpropertyvalueindexed:Tsetpropertyvalueindexed;'#13#10'getpropertyvalue:T'
  +'getpropertyvalue;'#13#10'copytoclip:TCopyToClip;'#13#10'copyfromclip:TCopyF'
  +'romClip;'#13#10'LoadTableFromExcelCopy:TLoadTableFromExcelCopy;'#13#10'GetT'
  +'ableDataForExcel:TGetTableDataForExcel;'#13#10'LoadTableFromNumArray:TLoadT'
  +'ableFromNumArray;'#13#10'LoadTableFromStringArray:TLoadTableFromStringArray'
  +';'#13#10'GetTableDataArray:TGetTableDataArray;'#13#10'doevent:TDoEvent;'#13
  +#10'movecomponent:TMoveComponent;'#13#10'copycomponent:TCopyComponent;'#13#10
  +'deleteselectedtreenode:TDeleteSelectedTreeNode;'#13#10'deletecomponent:TDel'
  +'eteComponent;'#13#10'getgpuparamnumvalue:TGetGPUParamNumValue;'#13#10'getgp'
  +'uparam2dnumvalue:TGetGPUParam2DNumValue;'#13#10'getgpuconstintvalue:TGetGPU'
  +'ConstIntValue;'#13#10'setgpuparamnumvalue:TSetGPUParamNumValue;'#13#10'setg'
  +'puparam2Dnumvalue:TSetGPUParam2DNumValue;'#13#10'setgpuconstintvalue:TSetGP'
  +'UConstIntValue;'#13#10'startmain:TStartMain;'#13#10'showbusy:TShowBusy;'#13
  +#10'hidebusy:THideBusy;'#13#10'ProcessMessages:TProcessMessages;'#13#10'User'
  +'SystemAsString:TUserSystemAsString;'#13#10'LoadUserSystemString:TLoadUserSy'
  +'stemString;'#13#10'ConsoleLog:TConsoleLog;'#13#10'Array2DToString:TArray2DT'
  +'oString;'#13#10'GetGPUPixelArray:TGetGPUPixelArray;'#13#10'GetGPUPixelArray'
  +'AsString:TGetGPUPixelArrayAsString;'#13#10'GetGPUStageArray:TGetGPUStageArr'
  +'ay;'#13#10'GetGPUStageArrayAsString:TGetGPUStageArrayAsString;'#13#10'GetGP'
  +'UInitStageArray:TGetGPUInitStageArray;'#13#10'DebugStart:TDebugStart;'#13#10
  +'RunPython:TRunPython;'#13#10'SetImageSource:TSetImageSource;'#13#10'WobbleC'
  +'EF:TWobbleCEF;'#13#10'PyodideLoadPackage:TPyodideLoadPackage;'#13#10'Pyodid'
  +'ePackageLoaded:TPyodidePackageLoaded;'#13#10'DSFetchRow:TDSFetchRow;'#13#10
  +'DSAppendRow:TDSAppendRow;'#13#10'DSDeleteRow:TDSDeleteRow;'#13#10'DSDeleteA'
  +'llRows:TDSDeleteAllRows;'#13#10#13#10'//DSDatasetToString:TDSDatasetToStrin'
  +'g;'#13#10#13#10#13#10'procedure SetDllContext(mmi : IMyMethodInterface); st'
  +'dcall;'#13#10'{$endif}'#13#10#13#10#13#10'implementation'#13#10#13#10'{$ifd'
  +'ef Dll}'#13#10'procedure SetDllContext(mmi : IMyMethodInterface); stdcall;'
  +#13#10'var'#13#10'  dummy:String;'#13#10'begin'#13#10'  // Map Appmethods on'
  +'to the interface object passed in'#13#10'  AppMethods := mmi;'#13#10#13#10
  +'  showmessage:=@AppMethods.mmishowmessage;'#13#10'  showxform:=@appmethods.'
  +'mmishowxform;'#13#10'  closexform:=@appmethods.mmiclosexform;'#13#10'  setp'
  +'ropertyvalue:=@AppMethods.mmisetpropertyvalue;'#13#10'  setpropertyvalueind'
  +'exed:=@AppMethods.mmisetpropertyvalueindexed;'#13#10'  getpropertyvalue:=@A'
  +'ppMethods.mmigetpropertyvalue;'#13#10'  confirm:=@AppMethods.mmiconfirm;'#13
  +#10'  prompt:=@AppMethods.mmiprompt;'#13#10'  copytoclip:=@AppMethods.mmiCop'
  +'yToClip;'#13#10'  copyfromclip:=@AppMethods.mmiCopyFromClip;'#13#10'  LoadT'
  +'ableFromExcelCopy:=@AppMethods.mmiLoadTableFromExcelCopy;'#13#10'  GetTable'
  +'DataForExcel:=@AppMethods.mmiGetTableDataForExcel;'#13#10'  LoadTableFromNu'
  +'mArray:=@AppMethods.mmiLoadTableFromNumArray;'#13#10'  LoadTableFromStringA'
  +'rray:=@AppMethods.mmiLoadTableFromStringArray;'#13#10'  GetTableDataArray:='
  +'@AppMethods.mmiGetTableDataArray;'#13#10'  doevent:=@appmethods.mmiDoEvent;'
  +#13#10'  movecomponent:=@appmethods.mmiMoveComponent;'#13#10'  copycomponent'
  +':=@appmethods.mmiCopyComponent;'#13#10'  deletecomponent:=@appmethods.mmiDe'
  +'leteComponent;'#13#10'  deleteselectedtreenode:=@appmethods.mmiDeleteSelect'
  +'edTreeNode;'#13#10'  getgpuparamnumvalue:=@appmethods.mmiGetGPUParamNumValu'
  +'e;'#13#10'  getgpuparam2dnumvalue:=@appmethods.mmiGetGPUParam2DNumValue;'#13
  +#10'  getgpuconstintvalue:=@appmethods.mmiGetGPUConstIntValue;'#13#10'  setg'
  +'puparamnumvalue:=@appmethods.mmiSetGPUParamNumValue;'#13#10'  setgpuparam2D'
  +'numvalue:=@appmethods.mmiSetGPUParam2DNumValue;'#13#10'  setgpuconstintvalu'
  +'e:=@appmethods.mmiSetGPUConstIntValue;'#13#10'  startmain:=@appmethods.mmiS'
  ,'tartMain;'#13#10'  showbusy:=@appmethods.mmiShowBusy;'#13#10'  hidebusy:=@a'
  +'ppmethods.mmiHideBusy;'#13#10'  ProcessMessages:=@appmethods.mmiProcessMess'
  +'ages;'#13#10'  UserSystemAsString:=@appmethods.mmiUserSystemAsString;'#13#10
  +'  LoadUserSystemString:=@appmethods.mmiLoadUserSystemString;'#13#10'  Conso'
  +'leLog:=@appmethods.mmiConsoleLog;'#13#10'  Array2DToString:=@appmethods.mmi'
  +'Array2DToString;'#13#10'  GetGPUPixelArray:=@appmethods.mmiGetGPUPixelArray'
  +';'#13#10'  GetGPUPixelArrayAsString:=@appmethods.mmiGetGPUPixelArrayAsStrin'
  +'g;'#13#10'  GetGPUStageArray:=@appmethods.mmiGetGPUStageArray;'#13#10'  Get'
  +'GPUStageArrayAsString:=@appmethods.mmiGetGPUStageArrayAsString;'#13#10'  Ge'
  +'tGPUInitStageArray:=@appmethods.mmiGetGPUInitStageArray;'#13#10'  DebugStar'
  +'t:=@appmethods.mmiDebugStart;'#13#10'  RunPython:=@appmethods.mmiRunPython;'
  +#13#10'  SetImageSource:=@appmethods.mmiSetImageSource;'#13#10'  WobbleCEF:='
  +'@appmethods.mmiWobbleCEF;'#13#10'  PyodideLoadPackage:=@appmethods.mmiPyodi'
  +'deLoadPackage;'#13#10'  PyodidePackageLoaded:=@appmethods.mmiPyodidePackage'
  +'Loaded;'#13#10'  DSFetchRow:=@appmethods.mmiDSFetchRow;'#13#10'  DSAppendRo'
  +'w:=@appmethods.mmiDSAppendRow;'#13#10'  DSDeleteRow:=@appmethods.mmiDSDelet'
  +'eRow;'#13#10'  DSDeleteAllRows:=@appmethods.mmiDSDeleteAllRows;'#13#10'//  '
  +'DSDatasetToString:=@appmethods.mmiDSDatasetToString;'#13#10#13#10'end;'#13
  +#10'{$endif}'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('aboutunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit AboutUnit;'#13#10'{$i'
  +'fndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'inte'
  +'rface'#13#10#13#10'uses'#13#10'Classes, SysUtils, StringUtils, NodeUtils, X'
  +'Form,'#13#10'{$ifndef JScript}'#13#10'Forms, Controls, Dialogs,LazsUtils,Ut'
  +'ilsJSCompile,pas2jscompiler,'#13#10'{$ifdef Chromium}'#13#10'uCEFApplicatio'
  +'n,'#13#10'{$endif}'#13#10'{$else}'#13#10'WebTranspilerUtils,HTMLUtils,'#13
  +#10'{$endif}'#13#10'PyXUtils,WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13
  +#10'XLabel, XEditBox;'#13#10#13#10'type'#13#10#13#10'  { TAboutXIDEForm }'#13
  +#10#13#10'  TAboutXIDEForm = class(TXForm)'#13#10'    AboutFormXVBox1: TXVBo'
  +'x;'#13#10'    AboutFormXMemo1: TXMemo;'#13#10'    {$ifndef JScript}'#13#10
  +'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResize('
  +'Sender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13#10'  '
  +'  {$endif}'#13#10'    procedure BuildText;'#13#10'  private'#13#10#13#10'  '
  +'public'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  AboutXIDEForm: TAboutX'
  +'IDEForm;'#13#10'  AboutFormRoot:TDataNode;'#13#10#13#10'implementation'#13
  +#10#13#10'{$R *.lfm}'#13#10#13#10#13#10#13#10'{ TAboutXIDEForm }'#13#10#13#10
  +'{$ifndef JScript}'#13#10'procedure TAboutXIDEForm.FormCreate(Sender: TObjec'
  +'t);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'  AboutFormR'
  +'oot:=FindDataNodeById(myNode,''AboutFormXVBox1'','''',true);'#13#10#13#10' '
  +' BuildText;'#13#10#13#10'end;'#13#10#13#10'procedure TAboutXIDEForm.FormRes'
  +'ize(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(self, AboutFormXVB'
  +'ox1);'#13#10'end;'#13#10#13#10'procedure TAboutXIDEForm.FormShow(Sender: TO'
  +'bject);'#13#10'begin'#13#10'  BuildText;'#13#10'end;'#13#10'{$endif}'#13#10
  +'procedure TAboutXIDEForm.BuildText;'#13#10'var'#13#10'  AboutText:String;'
  +#13#10'  str:string;'#13#10'  vs:String;'#13#10'  {$ifndef JScript}'#13#10' '
  +' MyCompilerObj :TMyCompilerObj;'#13#10'  {$endif}'#13#10'begin'#13#10'  Abo'
  +'utText :='#13#10'     ''              A simple "Browser First" IDE for Pasc'
  +'al and Python '' + LineEnding'#13#10'     +'' '' + LineEnding'#13#10'     +'
  +'''XIDE is a combined Client Side Run Time Library and RAD IDE intended to a'
  +'llow Pascal and/or Python development in the browser with the minimum of in'
  +'stallation '''#13#10'     +''overhead or learning curve while also being as'
  +' platform independent as possible. It is targeted at Prototyping, Small Gro'
  +'up Collaboration and Agile Line of '''#13#10'     +''Business projects on a'
  +'ny platform that is supported by Chrome or Electron, or Lazarus (and the Ch'
  +'rome Embedded Framework). It is not intended for the development of general'
  +'-purpose '' + LineEnding'#13#10'     +''public facing web sites.'' + LineEn'
  +'ding'#13#10'     +'' '' + LineEnding'#13#10'     +''        Version <<<XIDE'
  +'>>> for Chrome'' + LineEnding'#13#10'     +''        Date 13/04/2020'' + Li'
  +'neEnding'#13#10'     +''        Created with'' + LineEnding'#13#10'     +'''
  +'            ..............Lazarus    <<<LAZ>>>'' + LineEnding'#13#10'     +'
  +'''            ..............FPC        <<<FPC>>>'' + LineEnding'#13#10'    '
  +' +''            ..............Pas2JS     <<<Pas2JS>>>'' + LineEnding'#13#10
  +'     {$ifndef JScript}'#13#10'     {$ifdef Chromium}'#13#10'     +''       '
  +'     ..............CEF library <<<CEF>>>'' + LineEnding'#13#10'     {$endif'
  +'}'#13#10'     {$endif}'#13#10'     {$ifdef Python}'#13#10'     {$ifndef JSc'
  +'ript}'#13#10'     +''            ..............Python <<<Python>>>'' + Line'
  +'Ending'#13#10'     {$else}'#13#10'     +''            ..............Pyodide'
  +'     <<<Pyodide>>>'' + LineEnding'#13#10'     {$endif}'#13#10'     {$endif}'
  +#13#10'     +''        Copyright(c) Steve Wright all rights reserved'' + Lin'
  +'eEnding'#13#10'     +''        License: GPL'' + LineEnding'#13#10'     +'' '
  +'                                                              '' + LineEndi'
  +'ng'#13#10'     +''Third Party Libraries and Tools included in the run time'
  +''' + LineEnding'#13#10'     +''            Pas2JS (http://wiki.freepascal.o'
  +'rg/pas2js)  - GPL/LGPL Licence'' + LineEnding'#13#10'     +''            GP'
  +'UJS  (https://github.com/gpujs/gpu.rocks) - MIT Licence'' + LineEnding'#13
  +#10'     +''            Pell   (https://github.com/jaredreich/pell) - MIT Li'
  +'cence'' + LineEnding'#13#10'     +''            CEF4Delphi  (https://github'
  +'.com/salvadordf/CEF4Delphi)    - Lesser GNU General Public License'' + Line'
  +'Ending'#13#10'     +''            Python4Delphi (https://github.com/pyscrip'
  ,'ter/python4delphi) - MIT Licence'' + LineEnding'#13#10'     +''            '
  +'pyodide (https://github.com/iodide-project/pyodide)  - Mozilla Public Licen'
  +'se 2.0'' + LineEnding'#13#10'     +''              + support for running py'
  +'odide offline from: '' + LineEnding'#13#10'     +''                (https:/'
  +'/github.com/iodide-project/pyodide/pull/606)  '' + LineEnding'#13#10'     +'
  +''''' + LineEnding'#13#10'     +''This program is free software: you can red'
  +'istribute it and/or modify'' + LineEnding'#13#10'     +''    it under the t'
  +'erms of the GNU General Public License as published by'' + LineEnding'#13#10
  +'     +''    the Free Software Foundation, either version 3 of the License, '
  +'or'' + LineEnding'#13#10'     +''    any later version. See <https://www.gn'
  +'u.org/licenses/>'' + LineEnding'#13#10'     +'''' + LineEnding'#13#10'     '
  +'+''    The program is distributed in the hope that it will be useful,'' + L'
  +'ineEnding'#13#10'     +''    but WITHOUT ANY WARRANTY; without even the imp'
  +'lied warranty of'' + LineEnding'#13#10'     +''    MERCHANTABILITY or FITNE'
  +'SS FOR A PARTICULAR PURPOSE.  See the'' + LineEnding'#13#10'     +''    GNU'
  +' General Public License for more details.'' + LineEnding'#13#10' ;'#13#10#13
  +#10#13#10'  str:=AboutText;'#13#10'  str:=myStringReplace(str,''<<<XIDE>>>'''
  +',''0.2.beta'',1,-1);'#13#10'  str:=myStringReplace(str,''<<<LAZ>>>'',''2.1.'
  +'0'',1,-1);'#13#10'  str:=myStringReplace(str,''<<<FPC>>>'',''3.3.1'',1,-1);'
  +#13#10#13#10'  {$ifndef JScript}'#13#10'  // get version of pas2js'#13#10'  '
  +'MyCompilerObj :=TMyCompilerObj.Create;'#13#10'  MyCompilerObj.Compiler:=TPa'
  +'s2jsCompiler.Create;'#13#10'  vs:=MyCompilerObj.Compiler.GetVersion(false);'
  +#13#10'  str:=myStringReplace(str,''<<<Pas2JS>>>'',vs,1,-1);'#13#10'  MyComp'
  +'ilerObj.Compiler.Free;'#13#10'  MyCompilerObj.Free;'#13#10'  {$else}'#13#10
  +'  vs:=MyWebCompiler.Compiler.GetVersion(false);'#13#10'  str:=myStringRepla'
  +'ce(str,''<<<Pas2JS>>>'',vs,1,-1);'#13#10'  {$endif}'#13#10#13#10'  {$ifndef'
  +' JScript}'#13#10'  {$ifdef Chromium}'#13#10'  // get version of cef library'
  +#13#10'  str:=myStringReplace(str,''<<<CEF>>>'',GlobalCEFApp.LibCefVersion,1'
  +',-1);'#13#10'  //showmessage(''CEF Library version ''+GlobalCEFApp.LibCefVe'
  +'rsion);'#13#10'  {$endif}'#13#10'  {$endif}'#13#10'  {$ifdef Python}'#13#10
  +'  str:=myStringReplace(str,''<<<Python>>>'',PyXUtils.PythonVersion,1,-1);'
  +#13#10'  str:=myStringReplace(str,''<<<Pyodide>>>'',''(basvandertol:runlocal'
  +')'',1,-1);'#13#10'  //!!!! (version of pyodide???)'#13#10'  {$endif}'#13#10
  +#13#10'  AboutFormXMemo1.ItemValue:=str;'#13#10'end;'#13#10#13#10'begin'#13
  +#10'end.'#13#10#13#10
]);
LazarusResources.Add('xidehelpunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit XIDEHelpUnit;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'i'
  +'nterface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUti'
  +'ls, XForm,'#13#10'  {$ifndef JScript}'#13#10'  Forms, Controls, Dialogs,Laz'
  +'sUtils, Events, {framView,}'#13#10'  {$else}'#13#10'  HTMLUtils,'#13#10'  {'
  +'$endif}'#13#10'  WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13#10'  XLabe'
  +'l, XEditBox, XHTMLText, XScrollBox, XHTMLEditor;'#13#10#13#10'type'#13#10#13
  +#10'  { TXIDEHelpForm }'#13#10#13#10'  TXIDEHelpForm = class(TXForm)'#13#10
  +'    HelpFormVBox1: TXVBox;'#13#10'    HelpHTMLText: TXHTMLText;'#13#10'    '
  +'{$ifndef JScript}'#13#10'    procedure FormActivate(Sender: TObject);'#13#10
  +'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResize('
  +'Sender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13#10'//'
  +'    procedure LoadNewText(Data: PtrInt);'#13#10'    {$endif}'#13#10'  priva'
  +'te'#13#10#13#10'  public'#13#10'     procedure InitialiseonShow;'#13#10'  e'
  +'nd;'#13#10#13#10#13#10'var'#13#10'  XIDEHelpForm: TXIDEHelpForm;'#13#10'  H'
  +'elpFormRoot:TDataNode;'#13#10#13#10'implementation'#13#10#13#10'{$R *.lfm}'
  +#13#10#13#10'const BaseHtml ='#13#10'//''<h1 style="text-align: center;"><u>'
  +'XIDE Overview</u></h1><h2 style="text-align: center;">&nbsp;(A simple "Brow'
  +'ser-First" IDE for Pascal and Python)</h2><h2>Purpose</h2><p>XIDE is a comb'
  +'ined Client Side Run Time Library and RAD IDE intended to allow Pascal and/'
  +'or Python development in the browser with the minimum of installation overh'
  +'ead or learning curve while also being as platform independent as possible.'
  +' It is targeted at Prototyping, Small Group Collaboration and Agile Line of'
  +' Business projects on any platform that is supported by Chrome or Electron,'
  +' or Lazarus (and the Chrome Embedded Framework).&nbsp; It is not intended f'
  +'or the development of general-purpose public facing web sites.</p><h2>Insta'
  +'llation</h2><p>In the browser, XIDE for Chrome is a single page static HTML'
  +' page with no dependencies. so installation is just a matter of loading tha'
  +'t initial web page. All subsequent computation and data storage is done cli'
  +'ent side. This single page web app&nbsp; combines the currently selected us'
  +'er project, as well as the RTL and IDE Code so any user project can be depl'
  +'oyed with the IDE disabled (for end users) or enabled (for collaborators) a'
  +'s required.</p><p>Python in XIDE is based on the Mozilla Pyodide project wh'
  +'ich brings a full data science stack to the browser, such as NumPy, Pandas '
  +'and Matplotlib.&nbsp;</p><p>If using a snapshot of XIDE on the desktop (i.e'
  +'. XIDE.exe), you need to&nbsp; install local copies of Free Pascal and Pyth'
  +'on following the relevant instructions on their web sites. Then using the X'
  +'IDE.exe main menu "Settings" option set the path to the home directories fo'
  +'r the fpc compiler. Alternatively to rebuild XIDE from source, see&nbsp;&nb'
  +'sp;<a href="https://github.com/Steve--W/XIDE">https://github.com/Steve--W/X'
  +'IDE.</a>&nbsp;</p><h2>Functionality</h2><p>XIDE is designed to bring the po'
  +'wer of Free Pascal (Pas2JS) and the convenience of&nbsp; Rapid Application '
  +'Development (RAD) to the browser. It&nbsp; is a "Browser First" approach wh'
  +'ich also delivers cross platform capability by replicating browser function'
  +'ality on the desktop in native code. This allows the user to exploit the gr'
  +'eater efficiency of compiled native code compared to interpreted browser en'
  +'vironments as required. It also allows a single code base to support multip'
  +'le different target environments for different user circumstances or differ'
  +'ent stages in a project.&nbsp;</p><p>The Python option in XIDE adds broader'
  +' "Data Science" capabilities to the environment and&nbsp; allows the more i'
  +'nteractive exploratory approach of Python to be exploited as required. See&'
  +'nbsp;&nbsp;<a href="https://hacks.mozilla.org/2019/04/pyodide-bringing-the-'
  +'scientific-python-stack-to-the-browser/">https://hacks.mozilla.org/2019/04/'
  +'pyodide-bringing-the-scientific-python-stack-to-the-browser/</a></p><h2>Uni'
  +'fied User Interface</h2><p>The browser supports a number of different stand'
  +'ards as part of its user interface. These include HTML, CSS, SVG&nbsp; to c'
  +'over page layout, style editing, and vector graphics respectively. Normally'
  +' these all require their own conventions to be used when accessed directly '
  +'from the browser and/or JavaScript. XIDE unifies the user''''s access to th'
  ,'ese different browser capabilities using a standardised Object Inspector / '
  +'Drag and Drop approach for them all. For HTML and SVG this should appear se'
  +'amless to the user with all the SVG containers and components accessed in a'
  +'n identical manner to HTML so requiring no further explanation than provide'
  +'d below for basic screen layout and editing.&nbsp;</p><h2>CSS Functionality'
  +'</h2><p>CSS functionality is provided by supporting a style design tree in '
  +'addition to the Code and UI design trees described below. As with the UI de'
  +'sign tree, Style resources (new design rules, targets, properties and rule '
  +'types ) are dragged from a resources tree and dropped on the relevant node '
  +'of the style tree. The style tree also supports logical grouping of targets'
  +' using "AND" and "OR" nodes.&nbsp; This speeds up and simplifies the CSS sy'
  +'ntax generation considerably compared to direct text entry.</p><p></p><h2>D'
  +'esigning a User Interface</h2><h3><b>Resource and Instance trees</b></h3><p'
  +'>XIDE uses a very simple paradigm. Essentially, it consists of three elemen'
  +'ts.</p><p></p><ol><li>&nbsp;A resources tree, showing the available widgets'
  +' (visual and non visual)</li><li>&nbsp;A system design tree and object prop'
  +'erty inspector/editor</li><li>&nbsp;A layout panel showing a WYSIWYG versio'
  +'n of the current page design.</li></ol><p></p> <p>The UI is built by pastin'
  +'g nodes from the resource tree to the system design tree. Each node has obj'
  +'ect properties defined by a name/value pairs that can be edited using the o'
  +'bject inspector or referenced and or updated by run time code. Events are a'
  +'lso available on each widget so that Pascal code can be attached to them us'
  +'ing the built in code editor and compiler. Python scripts can also be calle'
  +'d from these event handlers.</p><h3><b>Available Widgets</b></h3><p>The wid'
  +'gets listed in the resource tree include both UI and non visual components '
  +'(the latter can be added to the root node of the UI design tree).&nbsp;</p>'
  +'<h3><b>Responsive Design</b></h3><p>XIDE supports a simple Responsive Desig'
  +'n layout paradigm which consists of a Main page, Tab controls and Popups to'
  +' define the constituent pages in a UI design. Horizontal and Vertical layou'
  +'t boxes (together with associated alignment properties) are then nested wit'
  +'hin these pages to control the final layout of components on the page.</p><'
  +'h3><b>Writing Application Code</b></h3><p>XIDE uses an event driven model w'
  +'here event handlers can be attached to pre-defined events triggered by obje'
  +'cts in the user interface. These procedures can be inspected and/or edited '
  +'by using the object inspector to navigate to the required UI object then pr'
  +'essing the ellipsis button to the right of the required event in its events'
  +' tab. This creates an entry for that event handler under the "Event Handler'
  +'s" node in the code design tree. So once a handler has been added it can th'
  +'en also be navigated to by selecting it in the code designer and pressing t'
  +'he edit button.&nbsp;</p><h3><b>Pascal Syntax</b></h3><p>The Pascal syntax '
  +'recognised by XIDE&nbsp;is that used by the Pas2JS variant of Free Pascal. '
  +'(<a href="http://wiki.freepascal.org/pas2js">http://wiki.freepascal.org/pas'
  +'2js</a>). A detailed description of the supported syntax can be found here.'
  +' (<a href="http://wiki.freepascal.org/pas2js#RTL">http://wiki.freepascal.or'
  +'g/pas2js#RTL</a>)</p><h3><b>Unit Structure</b></h3><p>In addition to the ev'
  +'ent handler nodes, shared code can be written by adding units directly to t'
  +'he code design tree as "Pascal Units" or "Python Scripts".&nbsp;&nbsp;</p><'
  +'p>Functions and procedures&nbsp; in the code nodes can be amended or delete'
  +'d by selecting the node on the code design tree and pressing the "Edit" but'
  +'ton which will bring up the code editor screen as previously described for&'
  +'nbsp; the event handler code. After a Pascal unit has been compiled for the'
  +' first time in a session, all the procedures and functions declared in it a'
  +'re displayed as its child nodes in the code design tree. Selecting one of t'
  +'hese nodes and pressing the edit button below will navigate directly to tha'
  +'t function. Alternatively, selecting a node and pressing "Code Search" will'
  +' list all references to that function or procedure allowing you to navigate'
  +' directly to the most relevant reference.</p><h3><b>Python&nbsp;</b></h3><p'
  +'>The Python syntax used is version 3.8.&nbsp;</p><p>Python does not have a '
  +'unit structure like Pascal, however blocks of Python code can be added to t'
  +'he Code Designer tree in the same way as Pascal units. The difference is th'
  +'at these will be run&nbsp; when entering run mode. They are executed in the'
  +' order they occur on the Code Designer tree and can contain initialisation,'
  +' declarations and / or&nbsp; any other valid executable Python Code.&nbsp;<'
  +'/p><p>To execute Python code elsewhere, such as in an event handler, then s'
  ,'imply invoke the "RunPython(<i>......</i>)" procedure with the relevant pyt'
  +'hon function call (or code) as a string parameter,</p><p>A console output b'
  +'ox is supplied so that Python errors and print statements can be viewed. On'
  +' the desktop, the copy of Python being used is the version installed on the'
  +' host machine, see the documentation for that system to review valid syntax'
  +', permissions etc. In the browser, the version of Python used is that suppo'
  +'rted by mozilla (see&nbsp;<a href="https://hacks.mozilla.org/2019/04/pyodid'
  +'e-bringing-the-scientific-python-stack-to-the-browser/">https://hacks.mozil'
  +'la.org/2019/04/pyodide-bringing-the-scientific-python-stack-to-the-browser/'
  +'</a>)</p><h3><b>Accessing user interface objects at run time</b></h3><p>XID'
  +'E is designed to be a cross platform rapid application development system. '
  +'In order to do this it uses a text based system description tree (The Syste'
  +'m Design or Instance Tree) to reflect the state of a users program at all t'
  +'imes. This is similar to the function of the Document Object Model (DOM) in'
  +' standard web applications. All object properties for nodes on this tree ca'
  +'n be accessed and updated using the supplied get and set calls (see below).'
  +'</p> <h3><b>Types of API Calls</b></h3><p>In XIDE design mode the instance '
  +'tree describing a users project can be inspected manually using the Object '
  +'Inspector. This allows the user to select any node on the tree and inspect '
  +'and/or modify its properties or event handlers as required. The XIDE&nbsp;A'
  +'PI allows the same actions to be available programmatically. The functions '
  +'available fall into the following types (and work in an identical manner in'
  +' both Pascal and Python) viz:-</p><p></p><ul><li>&nbsp;Dialog boxes</li><li'
  +'>&nbsp;Get and/or set a property value of a UI object</li><li>&nbsp;Save an'
  +'d load user selected data to the clipboard or local storage</li><li>&nbsp;C'
  +'opy or delete a UI component or move it to a new parent.</li><li>&nbsp;Show'
  +' or hide a popup form.</li><li>&nbsp;Show or hide a busy indicator.</li><li'
  +'>&nbsp;get and set GPU parameters&nbsp;</li></ul><p></p><p>The detailed syn'
  +'tax for these function calls is appended below. Note that unless explicitly'
  +' stated, all values are strings.</p><h3><b>Asynchronous Calls, Multi Thread'
  +'ing and Initialization functions</b></h3><p>Many web calls issue requests t'
  +'hat need to wait for a response from a web service, database or other remot'
  +'e service provider. Similarly, when starting another thread in parallel, th'
  +'e main thread will often need to wait for such child threads to return the '
  +'results of their work before it can proceed. XIDE&nbsp;allows main event ha'
  +'ndlers to specify a "initalisation"function. This is a block of code which '
  +'issues all such requests prior to running the main event code when they hav'
  +'e all finished executing. See below for the detail syntax of the available '
  +'calls.</p><p>Note however that all such asynchronous calls first parameter '
  +'is "e" the event context (automatically declared and populated by XIDE, beh'
  +'ind the scenes, for every XIDE&nbsp;event) from which they have been issued'
  +' so they know where to return without requiring the user to enter complex b'
  +'oilerplate code.</p><h2><b>List of&nbsp;XIDE&nbsp;specific API procedure an'
  +'d function calls</b></h2> <p></p><h3>General Functions</h3><ul><li>procedur'
  +'e SetPropertyValue(nodeName,propName,newValue:String);&nbsp;&nbsp;&nbsp; &n'
  +'bsp;<font color="#0000ff">set a component property (string value)&nbsp;&nbs'
  +'p;</font></li><li>function&nbsp; &nbsp;GetPropertyValue(nodeName,propName:S'
  +'tring);&nbsp;<font color="#0000ff">&nbsp; &nbsp;returns a component propert'
  +'y value (as string)&nbsp;</font></li><li>procedure SetPropertyValueIndexed('
  +'nodeName,propName:String;newValue:TStringArray; x,y:integer);&nbsp;&nbsp; &'
  +'nbsp;<font color="#0000ff">set a portion of a component array property</fon'
  +'t>&nbsp;&nbsp;</li><li>procedure CopyToClip(str:String);&nbsp;&nbsp;<font c'
  +'olor="#0000ff">&nbsp;copies the given string to the clipboard&nbsp;</font><'
  +'/li><li>function&nbsp; &nbsp;CopyFromClip(e:TEventStatus):String;&nbsp;&nbs'
  +'p;&nbsp;<font color="#0000ff">CopyFromClip is an async function (required f'
  +'or browser use), so it must be coded in the&nbsp;&nbsp;''''Init'''' section'
  +' of an event handler. The result here is a blank string.&nbsp;&nbsp;&nbsp;T'
  +'he clipboard string is held in e.ReturnString, which can be picked up in th'
  +'e&nbsp;&nbsp;&nbsp; &nbsp;''''Main'''' section of the event handler.</font>'
  +'</li><li>procedure ShowXForm(XFormID:String; modal:Boolean);&nbsp;&nbsp;<fo'
  +'nt color="#0000ff">&nbsp;opens a TXForm. [note:''''modal=false'''' currentl'
  +'y only effective on desktop]&nbsp;</font></li><li>procedure CloseXForm(XFor'
  +'mID:String);&nbsp;&nbsp;<font color="#0000ff">&nbsp;closes a TXForm.&nbsp;&'
  +'nbsp;</font></li><li>procedure DoEvent(EventType,NodeId,myValue:String);&nb'
  ,'sp;<font color="#0000ff"> executes the event handler defined for the given '
  +'event type and component.&nbsp;</font></li><li>procedure MoveComponent(node'
  +'Id:string;NewParentId:string);&nbsp;&nbsp;<font color="#0000ff">re-parents '
  +'the given UI component&nbsp;</font></li><li>procedure CopyComponent(nodeId,'
  +'NewParentId,NewName:string);&nbsp;<font color="#0000ff">copies the given UI'
  +' component and places the clone under the given parent&nbsp;</font></li><li'
  +'>function&nbsp; &nbsp;DeleteComponent(nodeId:string;ShowNotFoundMsg:Boolean'
  +'=true):Boolean;&nbsp;&nbsp; <font color="#0000ff">&nbsp;deletes the given U'
  +'I component. Returns false if not done.&nbsp;</font></li><li>function&nbsp;'
  +' &nbsp;UserSystemAsString():String;&nbsp; <font color="#0000ff">Returns the'
  +' string representation of the current user system (can be imported to XIDE '
  +'via System&gt;Load)&nbsp;&nbsp;</font></li><li>function&nbsp; &nbsp;LoadUse'
  +'rSystemString(SystemString:String);&nbsp;&nbsp;<font color="#0000ff">Import'
  +'s a new user system to the XIDE framework (can only be done in ''''Design'''
  +''' mode)&nbsp;</font></li><li>procedure ShowBusy(e:TEventStatus);&nbsp;&nbs'
  +'p;<font color="#0000ff">Shows the busy cursor&nbsp;ShowBusy is an async fun'
  +'ction (required for browser use), so it must be coded in the&nbsp; ''''Init'
  +''''' section of an event handler.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</font><'
  +'/li><li>procedure HideBusy;&nbsp; &nbsp;<font color="#0000ff">Hides the bus'
  +'y cursor&nbsp;</font>&nbsp;</li><li>procedure ProcessMessages;&nbsp; <font '
  +'color="#0000ff">&nbsp;Functional in Desktop execution only.&nbsp; Executes '
  +'a pascal Application.ProcessMessages statement.&nbsp;&nbsp;</font></li><li>'
  +'procedure DebugStart;&nbsp; &nbsp;<font color="#0000ff">Functional in Brows'
  +'er execution only.&nbsp; Executes a Javascript ''''debugger;'''' statement '
  +'- starts the native browser debug facility.&nbsp;&nbsp;</font></li><li>proc'
  +'edure RunPython(str:String);&nbsp;<font color="#0000ff">&nbsp;Executes the '
  +'given Python script&nbsp;</font></li><li>procedure PyodideLoadPackage(nm:St'
  +'ring);&nbsp;<font color="#0000ff">&nbsp;Functional in Browser execution onl'
  +'y.&nbsp; Loads the requested Pyodide/python package, so that it will be ava'
  +'ilable for import.&nbsp;</font></li><li>function PyodidePackageLoaded(nm:St'
  +'ring):Boolean;&nbsp;<font color="#0000ff">&nbsp;Functional in Browser execu'
  +'tion only.&nbsp; Returns true if the named package has been loaded into the'
  +' Pyodide environment.&nbsp;&nbsp;</font>&nbsp; &nbsp;</li></ul><div content'
  +'editable="true"><ul></ul><h3>Messages and Dialogs</h3><ul><li>procedure Sho'
  +'wMessage(msg:String);&nbsp; <font color="#0000ff">&nbsp;displays a popup al'
  +'ert&nbsp;</font></li><li>function&nbsp; &nbsp;Confirm(TextMessage:string):b'
  +'oolean;&nbsp;&nbsp;<font color="#0000ff">displays a confirmation alert; ret'
  +'urns true/false&nbsp;</font></li><li>function&nbsp; &nbsp;Prompt(TextMessag'
  +'e,promptString:string):string;&nbsp;&nbsp;&nbsp;<font color="#0000ff">displ'
  +'ays an input box; returns user-entered string&nbsp;</font></li><li>procedur'
  +'e ConsoleLog(txt:String);&nbsp; <font color="#0000ff">Writes a debug messag'
  +'e to the console log&nbsp;&nbsp;</font></li></ul><ul></ul><h3>TXTable Funct'
  +'ions</h3><ul><li>procedure&nbsp; LoadTableFromExcelCopy(TableName,CopiedStr'
  +'ing:String);&nbsp;&nbsp;<font color="#0000ff">Populate the given TXTable co'
  +'mponent with a string in Excel format (eg. as copied from a spreadsheet)&nb'
  +'sp;&nbsp;</font></li><li>procedure&nbsp; LoadTableFromNumArray(TableName,Nu'
  +'mArray:T2DNumArray);&nbsp;&nbsp;<font color="#0000ff">Populate the given TX'
  +'Table component from a 2D numeric array&nbsp;&nbsp;</font></li><li>function'
  +'&nbsp; &nbsp;GetTableDataArray(TableName:String;SkipHeader:Boolean):T2DStri'
  +'ngArray;&nbsp;&nbsp;<font color="#0000ff">&nbsp;Fetch the cells from the gi'
  +'ven TXTable component as a 2D string array&nbsp;&nbsp;</font></li><li>funct'
  +'ion&nbsp; &nbsp;Array2DToString(arr:T2DNumArray):String;&nbsp; <font color='
  +'"#0000ff">&nbsp;Convert numeric 2D array to string form eg. [[...],...,[...'
  +']]&nbsp;&nbsp;</font></li></ul><ul></ul><h3>TXGPUCanvas Functions</h3><ul><'
  +'li>function&nbsp; &nbsp;GetGPUParamNumValue(GPUName,pName:String):TNumArray'
  +';&nbsp;&nbsp;<font color="#0000ff">For the given TXGPUCanvas component, ret'
  +'urns the value of the named numeric parameter as an array&nbsp;</font></li>'
  +'<li>function&nbsp; &nbsp;GetGPUConstIntValue(GPUName,pName:String):integer;'
  +'&nbsp; <font color="#0000ff">&nbsp;For the given TXGPUCanvas component, ret'
  +'urns the value of the named integer parameter&nbsp;</font></li><li>procedur'
  +'e SetGPUParamNumValue(GPUName,pName:String;pValue:TNumArray);&nbsp;&nbsp;<f'
  +'ont color="#0000ff">For the given TXGPUCanvas component, sets the value of '
  +'the named numeric parameter as a 1-D array&nbsp;</font></li><li>procedure S'
  +'etGPUParam2DNumValue(GPUName,pName:String;pValue:T2DNumArray);&nbsp; &nbsp;'
  ,'<font color="#0000ff">For the given TXGPUCanvas component, sets the value o'
  +'f the named numeric parameter as a 2-D array&nbsp;</font></li><li>procedure'
  +' SetGPUConstIntValue(GPUName,pName:String;pValue:integer);&nbsp; &nbsp; <fo'
  +'nt color="#0000ff">For the given TXGPUCanvas component, sets the value of t'
  +'he named integer parameter&nbsp;</font></li><li>function&nbsp; &nbsp;GetGPU'
  +'PixelArray(GPUName:String):T3DNumArray;&nbsp;&nbsp;<font color="#0000ff">&n'
  +'bsp;Fetch the current Pixel array for the given TXGPUCanvas component&nbsp;'
  +'&nbsp;</font></li><li>function&nbsp; &nbsp;GetGPUPixelArrayAsString(GPUName'
  +':String):String;&nbsp;&nbsp;<font color="#0000ff">Fetch the current Pixel a'
  +'rray in string format for the given TXGPUCanvas component&nbsp;</font>&nbsp'
  +';</li><li>function&nbsp; &nbsp;GetGPUStageArray(GPUName:String):T3DNumArray'
  +';&nbsp;&nbsp;&nbsp;<font color="#0000ff"> Fetch the stage array (resulting '
  +'from the non-graphical kernel stack) for the given </font>TXGPUCanvas compo'
  +'nent&nbsp;&nbsp;</li><li>function&nbsp; &nbsp;GetGPUStageArrayAsString(GPUN'
  +'ame:String):String;&nbsp; &nbsp;<font color="#0000ff">Fetch the stage array'
  +' in string format for the given TXGPUCanvas component&nbsp;&nbsp;</font></l'
  +'i></ul><ul></ul><ul></ul><ul></ul><ul></ul><ul></ul><ul></ul><ul></ul><ul><'
  +'/ul><h3>&nbsp;Python Only</h3><ul><li>function&nbsp; ShowPythonPlot(ImgName'
  +',fig)<font color="#0000ff">&nbsp; In the given TXImage component, displays '
  +'the contents of fig (a matplotlib figure)&nbsp;</font></li></ul><h2>Composi'
  +'te Components</h2><p>XIDE can be used to build reusable ''''widgets'''' by '
  +'creating a system with a set of XIDE elements and associated events, and th'
  +'en encapsulating that system. The encapsulated system is saved to local sto'
  +'rage, and will appear in the Resources tree as a Composite component, which'
  +' can then be pasted into other systems the user is building.</p><h3>To Crea'
  +'te a Composite Component</h3><p></p><ol><li>Clear the system.</li><li>Build'
  +' your widget in the normal way (for example, a table, with a copy and a pas'
  +'te button, and click events coded).</li><li>Test the system.</li><li>In des'
  +'ign mode, select System&gt;Encapsulate on the main menu.&nbsp; Provide a na'
  +'me for the composite component (eg. "TableWithCopyPaste").</li><li>In the R'
  +'esources Tree, under ''''Composites'''', your new widget should now be list'
  +'ed.</li></ol><p></p><h3>To Use a Composite Component</h3><p></p><ol><li>Bui'
  +'ld a new system in the normal way.</li><li>Select a composite component in '
  +'the Resources Tree, and paste to the system in the normal way.&nbsp;</li></'
  +'ol><p></p><p>The composite component will be listed in the Design Tree, but'
  +' without its constituent components - only the enclosing element will be sh'
  +'own. The composite component has two non-editable properties to note:</p><p'
  +'></p><ul><li>&nbsp; ''''CompositeType'''', which shows the name with which '
  +'the composite was originally created.</li><li>&nbsp; ''''SourceString'''', '
  +'which contains the definition of the sub-elements within the composite, for'
  +' system use.</li></ul><p></p><h3>To Edit a Composite Component</h3><p></p><'
  +'ol><li>Clear the system.</li><li>Select the composite resource in the Resou'
  +'rce Tree, and press ''''Load''''. This will load the composite as a system '
  +'in design mode.</li><li>When your update is completed, save the composite a'
  +'gain using System&gt;Encapsulate on the main menu.</li></ol><p></p><p>NOTE:'
  +' This will not update any instantiated copies of your composite.&nbsp; To u'
  +'pdate instantiated copies, load the system(s) containing them, then delete '
  +'and re-paste the composite.</p><h3>To Pass Data Into a Composite Component<'
  +'/h3><p>By default, events within a composite element have no view of the co'
  +'ntaining system, and so cannot obtain data from it. So while building a com'
  +'posite component, you can include a Composite Interface element (TXComposit'
  +'eIntf in the Resources Tree, under Non-Visual components).</p><p></p><ol><l'
  +'i>Paste a composite interface element under the UIRootNode in the design tr'
  +'ee.&nbsp;</li><li>In the object inspector Properties tab, press the ''''Add'
  +''''' button.&nbsp; This will create a new property for the interface.&nbsp;'
  +'&nbsp;</li><li>On the popup screen, enter the property name.</li><li>Use th'
  +'e ''''Type'''' selector to specify whether the property is ''''Input'''' or'
  +' ''''Output''''. Select ''''Input''''.</li><li>Enter some brief text to exp'
  +'lain to a user of your composite what the purpose of this property is.</li>'
  +'<li>Press ''''Done''''.</li></ol><p></p><p>The new property is now listed i'
  +'n the properties list for the interface, and can be accessed from event cod'
  +'e within the composite. Encapsulate the composite component, and then paste'
  +' it into a test system. Note that the object inspector for the instantiated'
  +' composite component has a tab page "Interface", in which your interface pr'
  ,'operty is listed. An input property is editable here, or can be populated p'
  +'rogrammatically at run time.</p><h3>To Get Data Out of a Composite Componen'
  +'t</h3><p>Events in the enclosing system have no view of the sub-elements wi'
  +'thin a composite, and so cannot obtain property values directly.&nbsp; For '
  +'this purpose an ''''output'''' property is needed. As in the section above,'
  +' while editing the composite component, add an interface property, and set '
  +'its type to ''''Output''''. When your composite is pasted into a containing'
  +' system, the output property is listed in the Interface tab, but cannot be&'
  +'nbsp; edited there.&nbsp; It is the responsibility of events within the com'
  +'posite to set the property value.&nbsp;&nbsp;</p><h3>To add a callable Meth'
  +'od to a Composite Component</h3><p>While editing your composite system in d'
  +'esign mode, select your interface component (TXCompositeIntf) in the design'
  +' tree.</p><p></p><ol><li>On the ''''Events'''' tab, press ''''Add'''' to cr'
  +'eate a new method.</li><li>On the popup screen, enter the name of the metho'
  +'d, and its type (select ''''Read-Only'''').</li><li>Enter some brief text t'
  +'o explain to a user of your composite what the purpose of this method is.</'
  +'li><li>Press ''''Done''''.</li></ol><p></p><p>The new method is now listed '
  +'in the events list for the interface. Encapsulate the composite component, '
  +'and then paste it into a test system. Note that the object inspector for th'
  +'e instantiated composite component has your method listed under ''''Events'
  +''''', but cannot be edited here. The enclosing system can execute the metho'
  +'d using the ''''DoEvent'''' built-in.</p><h3>To add an editable Event Handl'
  +'er to a Composite Component</h3><p>While editing your composite system in d'
  +'esign mode, select your interface component (TXCompositeIntf) in the design'
  +' tree.</p><p></p><ol><li>On the ''''Events'''' tab, press ''''Add'''' to cr'
  +'eate a new method.</li><li>On the popup screen, enter the name of the metho'
  +'d, and its type (select ''''Editable'''').</li><li>Enter some brief text to'
  +' explain to a user of your composite what event within the composite will e'
  +'xecute it.</li><li>Press ''''Done''''.</li></ol><p></p><p>The new event han'
  +'dler is now listed in the events list for the interface, but code cannot be'
  +' added here. The composite system can execute the method using the ''''DoEv'
  +'ent'''' built-in, for example on closing a form, or on changing a data tabl'
  +'e. Encapsulate the composite component, and then paste it into a test syste'
  +'m. Note that the object inspector for the instantiated composite component '
  +'has your event handler listed under ''''Events'''', and can be edited here,'
  +' so that the user of the composite component can create their own handler.<'
  +'/p><h2><b>Project Development and Deployment</b></h2><p>During the developm'
  +'ent phase of a project XIDE&nbsp;will usually be loaded in design mode wher'
  +'e you can edit the user interface design and the code behind it. On startup'
  +' on the desktop, the IDE re-loads the project you were last working on. On '
  +'the browser, it can be set to revert to the original state every time the a'
  +'pp is started or to reload from the previous session.</p><p>Existing projec'
  +'ts can be loaded from a previously saved system in local storage, or from t'
  +'he clipboard. Clearing the current system will start a new project. At the '
  +'end of the design phase, you will sometimes want to deploy the developed HT'
  +'ML app to end users without allowing access to the IDE. In this case, selec'
  +'t the "System / Deploy" option from the main menu and this will generate a '
  +'self contained HTML page implementing your application and the run time env'
  +'ironment needed to execute it, but with the interactive IDE features disabl'
  +'ed. You can now load this to a server of your choice, or email directly to '
  +'your end user so they can run it from their file system.&nbsp;</p><p>Altern'
  +'atively, if you wish to give them access to inspect and perhaps contribute '
  +'to, or modify, the app, then distribute the blank XIDE app for their prefer'
  +'red platform&nbsp; and use the "System / Save" option to generate a project'
  +' definition file that they can load into it using the "System / Load" optio'
  +'n on the main menu.&nbsp;</p><h2><b>Debugging</b></h2><p>When testing Pasca'
  +'l code you have written using XIDE, the PAS2JS compiler error messages will'
  +' flag any source code syntax problems. If you click on one of these error m'
  +'essages this will position the cursor at the relevant character position in'
  +' the line of code in the XIDE&nbsp;code editor. Run time errors will someti'
  +'mes be trapped by error handlers built in to XIDE&nbsp;and generate a helpf'
  +'ul error message. If this is not sufficient to uniquely identify the cause '
  +'of the problem then "ctrl shift J" in Chrome will bring up the built in dev'
  +'eloper console which will hopefully provide the additional information you '
  ,'need to track down the problem. Alternatively, a break point can be set in '
  +'the code by inserting a "DebugStart;" instruction that will start the nativ'
  +'e browser debug facility at that point.</p><h2>Implementation, Extensibilit'
  +'y and Licensing</h2><p>XIDE is implemented using the Pas2JS dialect of the '
  +'Object Pascal programming language. This is because it is efficient, easy t'
  +'o learn, and is available on a wide range of processor architectures.&nbsp;'
  +'</p><p>Sometimes, as projects go through their life cycle, new more special'
  +'ist requirements emerge. At this point the XIDE framework can be extended u'
  +'sing project or platform specific custom components developed in Lazarus.&n'
  +'bsp;</p><p>XIDE is an open source project distributed using the same licenc'
  +'e as Lazarus (GPL) Source code is available from GitHub&nbsp; see <a href="'
  +'https://github.com/Steve--W/XIDE">here</a> for the IDE and&nbsp;<a href="ht'
  +'tps://github.com/Steve--W/XComponents">here</a> for the components used to '
  +'build it. (see <font color="#0000ff">https://github.com/Steve--W/XIDE</font'
  +'> and<font color="#0000ff"> https://github.com/Steve--W/XComponents</font> '
  +'respectively)</p><h2>Development Roadmap</h2><p>I have developed XIDE&nbsp;'
  +' to support my ongoing academic research projects. I have made the project '
  +'open source in case it should prove useful to anyone else. In particular, I'
  +' hope its browser first approach, low installation overhead and easy learni'
  +'ng curve will help to introduce the&nbsp; joys of Free Pascal and Lazarus t'
  +'o a wider audience.<br></p><p>Those aspects of XIDE and XComponents that I '
  +'use regularly are "tried and tested". Some aspects that are used less often'
  +' may have more bugs, and there are many aspects where it would be great to '
  +'add new or improved features but where I do not have the bandwidth to addre'
  +'ss at the moment. If&nbsp; anyone wants to help out with any improvement to'
  +' XIDE then their contribution will be most welcome.</p><p>(Some topics that'
  +' spring to mind, from a long list of potential improvements, are:-&nbsp; Br'
  +'oadening XIDE browser support beyond the Chrome compatible set, XIDE integr'
  +'ation with Lazarus, improving the wrapper for GPUJS or adding a drag and dr'
  +'op utility for constructing MatPlotLib data visualisations to make these Py'
  +'thon libraries easily accessible to the Pascal community. )</p><h2>Compatib'
  +'ility</h2><p>In desktop mode, XIDE is designed to run on platforms supporte'
  +'d by&nbsp; Lazarus, and optionally, the&nbsp; Chromium Embedded Framework a'
  +'nd&nbsp; Python (i.e. most desktop platforms). If CEF or Python is not avai'
  +'lable then XIDE can still run but will then not support their specialist fe'
  +'atures.&nbsp; Alternatively, Electron or Cordova and Crosswalk can be used '
  +'to provide a hybrid implementation of XIDE. This gives full Web connectivit'
  +'y and CSS on a wide range of platforms but with a trade off in terms of siz'
  +'e, speed and security.</p><p>In browser mode XIDE is targeting closed user '
  +'groups (where the browser can be specified) so it is only tested on recent '
  +'versions of Chrome but it may also work on other browsers which use a Chrom'
  +'e engine. (e.g. the latest version of Microsoft Edge)&nbsp;</p><p>Note that'
  +' the Style Designer is only available on the Browser versions as it depends'
  +' on CSS functionality.</p><h2>Motivation for including a GPU capability in '
  +'XIDE</h2><p>XIDE provides a thin wrapper for GPUJS (See https://gpu.rocks/)'
  +' which generates GPU code from JavaScript. This produces WebGL code as it i'
  +'s widely supported "out of the box"&nbsp; in most browsers and on most proc'
  +'essor/GPU combinations. This minimises the&nbsp; installation and configura'
  +'tion needed in order to get GPU code running on a new system. As such it is'
  +' a good way to start learning about the possibilities (and perhaps more imp'
  +'ortantly the limitations) of programming for a massively parallel platform.'
  +'&nbsp;</p><p>One of the weaknesses of this approach is the frustrating inab'
  +'ility to optimise code or diagnose bugs in the GPU kernels except by exhaus'
  +'tive trial and error.&nbsp; So for any serious GPU programming it is well w'
  +'orth investing the time in getting to grips with the (admittedly intimidati'
  +'ng) learning curve needed to master tools like OpenCL or Cuda and the assoc'
  +'iated tool stacks. Having said that, for simple "embarrassingly parallel" e'
  +'xamples, or where there is a need to build simple GPU code into more genera'
  +'l purpose or widely shared apps, the GPUJS approach can be very helpful.</p'
  +'><h2>The XIDE GPUJS Wrapper</h2><p>The Pascal code for the GPU is accessed '
  +'as a property of a GPU Canvas component which has been dropped onto the Use'
  +'r Interface layout screen and/or as a node on the Code designer tree.&nbsp;'
  +' The Pascal GPU code editor follows the same edit/compile cycle as for user'
  +' code in the rest of the system. The differences are that this is code for '
  ,'blocks of threads in parallel. The code describes a single instruction mult'
  +'iple data (SIMD) approach where all the threads run the same code with thre'
  +'ad specific code referencing "this.thread.x" , "this.thread.y" and "this.th'
  +'read.z" to reflect their position in the block of threads. Parameter names '
  +'are declared using a Paramlist property of the GPU canvas component and the'
  +'ir transfer and run time execution is controlled by system calls described '
  +'below. (N.B. parameters need to be passed as arrays so even scalar paramete'
  +'rs passed into the code need to be referenced as follows "myParam[0]" )<br>'
  +'</p><p>The Pascal GPU code can daisy chain kernels. (Set the TXGPUCanvas pr'
  +'operty NumKernels&gt;0) For each kernel in the chain its return value must '
  +'be set to "MyValue". The next kernel in the chain can then read all the thr'
  +'ead return values from the previous kernel by reading from "MyArray".The in'
  +'itial "MyArray" passed to the first kernel in the chain is set as a propert'
  +'y ("InitStageData") of the GPU canvas and can have any x,y,z sizes as chose'
  +'n by the user. The final&nbsp; &nbsp;kernel is the graphics display kernel '
  +'where you set the r,g,b values as usual. The calculated data input to the g'
  +'raphics display kernel can also be accessed using either the "GetGPUStageAr'
  +'ray" or "GetGPUStageArrayAsString" instructions;</p><p>Maths functions avai'
  +'lable in the GPU code are as follows:-</p><p></p><ul><li>abs(a) sign(a) tru'
  +'nc(a) ceil(a) max(a,b) min(a,b)</li><li>sin(a) cos(a) arcsin(a) arccos(a) a'
  +'rctan(a,b)</li><li>sqrt(a) power(a,b) ln(a) log10(a) log2(a)&nbsp;</li></ul'
  +'><h2>Limitations of coding for the GPU&nbsp;</h2><p>When coding in Pascal f'
  +'or the GPU, you should be aware that there are fundamental limitations on t'
  +'he constructs available. In particular:-</p><p></p><ul><li>All parameters p'
  +'assed into the GPU&nbsp; are real arrays (scalar parameters are real arrays'
  +' of length one)<br></li><li>You can read from but not write to any of these'
  +' array parameters</li><li>You cannot declare a local array</li><li>Each thr'
  +'ead returns a single real value</li><li>You cannot communicate with any oth'
  +'er thread (except by synchronising the results in a new kernel)</li><li>You'
  +' cannot use a Boolean type (use 0 or 1 instead)</li><li>You cannot use "var'
  +'" parameters in a function call</li><li>All function parameters must be a s'
  +'imple type</li><li>Nested function declarations do not follow normal (Pasca'
  +'l) scope rules</li><li>Loops are unrolled so you MUST SET the "<span style='
  +'"font-family: Verdana, Arial, sans-serif; font-size: 12px; white-space: now'
  +'rap;">MaxIterations"</span>&nbsp;parameter at a high enough value to reflec'
  +'t your algorithm''''s requirements</li><li>The number of threads in each ke'
  +'rnel are given by the KernelXDims, KernelYDims and Kernel ZDims properties '
  +'of the GPU Canvas and these MUST BE SET either manually or programatically '
  +'before activating the GPU.</li><li>The GPU is a Single Instruction Multiple'
  +' Data machine so branching in a thread does not jump over the code in the p'
  +'ath not taken,&nbsp; it idles in order to allow other threads to execute th'
  +'e code in that path if need be.&nbsp;</li><li>Debugging on the GPU is "prim'
  +'itive" the only way to do it when running on the hardware is to write out i'
  +'ntermediate results&nbsp; to the thread output value for selected threads w'
  +'hich you dedicate to providing diagnostic output.&nbsp;</li></ul><p><br></p'
  +'><p><br></p><p></p>'';'#13#10'//''<h1 style="text-align: center;"><u>XIDE H'
  +'elp</u></h1><h2 style="text-align: center;">&nbsp;(A simple "Browser-First"'
  +' IDE for Pascal and Python)</h2><h2>Contents</h2><p>Overview</p><p></p><ul>'
  +'<li><a href="#Purpose">Purpose</a></li><li><a href="#Installation">Installa'
  +'tion</a></li><li><a href="#Functionality">Functionality</a></li><li><a href'
  +'="#UnifiedUserInterface(HTML,CSS,SVG)">Unified User Interface (HTML,CSS,SVG'
  +')</a></li><li><a href="#TheStyleDesigner">The Style Designer</a></li><li><a'
  +' href="#CompositeComponents">Composite Components</a></li><li><a href="#GPU'
  +'Capability">GPU Capability</a></li><li><a href="#ProjectDevelopmentandDeplo'
  +'yment">Project Development and Deployment</a></li><li><a href="#Debugging">'
  +'Debugging</a></li><li><a href="#ImplementationExtensibilityandLicencing">Im'
  +'plementation, Extensibility and Licencing</a></li><li><a href="#Development'
  +'Roadmap">Development Roadmap</a></li><li><a href="#Compatibility">Compatibi'
  +'lity</a></li></ul><p></p><p></p><p>User Interface</p><ul><li><a href="#Desi'
  +'gningaUserinterface">Designing a Userinterface</a></li><li><a href="#Resour'
  +'ceandInstanceTrees">Resource and InstanceTrees</a></li><li><a href="#Availa'
  +'bleWidgets">Available Widgets</a></li><li><a href="#ResponsiveDesign">Respo'
  +'nsive Design</a></li><li><a href="#WritingApplicationCode">Writing Applicat'
  +'ion Code</a></li><li><a href="#PascalSyntax">Pascal Syntax</a></li><li><a h'
  ,'ref="#Python">Python</a></li></ul><p></p><p>Application Programming Interfa'
  +'ce</p><p></p><ul><li><a href="#AccessingUserinterfaceObjectsatRunTime">Acce'
  +'ssing User interface Objects at Run Time</a></li><li><a href="#TypesofAPICa'
  +'lls">Types of API Calls</a></li><li><a href="#AsynchronousCallsMultithreadi'
  +'ngandInitialisationfunctions">Asynchronous Calls,Multithreading and Initial'
  +'isation functions</a></li><li><a href="#ListofXIDEspecificAPIprocedureandfu'
  +'nctioncalls">List of XIDE specific API procedure and function calls</a></li'
  +'><li><a href="#Generalfunctions">General functions</a></li><li><a href="#Me'
  +'ssagesandDialogs">Messages and Dialogs</a></li><li><a href="#TXTablefunctio'
  +'ns">TXTable functions</a></li><li><a href="#TXGPUCanvasfunctions">TXGPU Can'
  +'vas functions</a></li><li><a href="#PythonOnly">Python Only functions</a></'
  +'li></ul><p></p><p>Encapsulation</p><ul><li><a href="#TocreateacompositeComp'
  +'onent">To create a composite Component</a></li><li><a href="#Touseacomposit'
  +'eComponent">To use a composite Component</a></li><li><a href="#Toeditacompo'
  +'siteComponent">To edit a composite Component</a></li><li><a href="#Topassda'
  +'taintoacompositeComponent">To pass data in to a composite Component</a></li'
  +'><li><a href="#TogetdataoutofacompositeComponent">To get data out of a comp'
  +'osite Component</a></li><li><a href="#ToaddacallablemethodtoacompositeCompo'
  +'nent">To add a callable method to a composite Component</a></li><li><a href'
  +'="#ToaddaneditableeventhandlertoacompositeComponent">To add an editable eve'
  +'nt handler to&nbsp; a composite Component</a></li></ul><p>GPU&nbsp;<br></p>'
  +'<ul><li><a href="#TheXIDEGPUJSWrapper">The XIDE GPUJS Wrapper</a></li><li><'
  +'a href="#MathsfunctionsavailableintheGPU">Maths functions available in the '
  +'GPU</a></li><li><a href="#LimitationsofcodingfortheGPU">Limitations of codi'
  +'ng for the GPU</a></li></ul><p></p><p></p><p>&nbsp;&nbsp;</p><p></p><hr id='
  +'"null"><h2><p></p></h2><h2><p><a id="Purpose">Purpose</a><br></p></h2><p>XI'
  +'DE is a combined Client Side Run Time Library and RAD IDE intended to allow'
  +' Pascal and/or Python development in the browser with the minimum of instal'
  +'lation overhead or learning curve while also being as platform independent '
  +'as possible. It is targeted at Prototyping, Small Group Collaboration and A'
  +'gile Line of Business projects on any platform that is supported by Chrome '
  +'or Electron, or Lazarus (and the Chrome Embedded Framework).&nbsp; It is no'
  +'t intended for the development of general-purpose public facing web sites.<'
  +'/p><h2><a id="Installation">Installation</a><br></h2><p>In the browser, XID'
  +'E for Chrome is a single page static HTML page with no dependencies. so ins'
  +'tallation is just a matter of loading that initial web page. All subsequent'
  +' computation and data storage is done client side. This single page web app'
  +'&nbsp; combines the currently selected user project, as well as the RTL and'
  +' IDE Code so any user project can be deployed with the IDE disabled (for en'
  +'d users) or enabled (for collaborators) as required.</p><p>Python in XIDE i'
  +'s based on the Mozilla Pyodide project which brings a full data science sta'
  +'ck to the browser, such as NumPy, Pandas and Matplotlib.&nbsp;</p><p>If usi'
  +'ng a snapshot of XIDE on the desktop (i.e. XIDE.exe), you need to&nbsp; ins'
  +'tall local copies of Free Pascal and Python following the relevant instruct'
  +'ions on their web sites. Then using the XIDE.exe main menu "Settings" optio'
  +'n set the path to the home directories for the fpc compiler. Alternatively '
  +'to rebuild XIDE from source, see&nbsp;&nbsp;<a href="https://github.com/Ste'
  +'ve--W/XIDE">https://github.com/Steve--W/XIDE.</a>&nbsp;</p><h2><a id="Funct'
  +'ionality">Functionality</a><br></h2><p>XIDE is designed to bring the power '
  +'of Free Pascal (Pas2JS) and the convenience of&nbsp; Rapid Application Deve'
  +'lopment (RAD) to the browser. It&nbsp; is a "Browser First" approach which '
  +'also delivers cross platform capability by replicating browser functionalit'
  +'y on the desktop in native code. This allows the user to exploit the greate'
  +'r efficiency of compiled native code compared to interpreted browser enviro'
  +'nments as required. It also allows a single code base to support multiple d'
  +'ifferent target environments for different user circumstances or different '
  +'stages in a project.&nbsp;</p><p>The Python option in XIDE adds broader "Da'
  +'ta Science" capabilities to the environment and&nbsp; allows the more inter'
  +'active exploratory approach of Python to be exploited as required. See&nbsp'
  +';&nbsp;<a href="https://hacks.mozilla.org/2019/04/pyodide-bringing-the-scie'
  +'ntific-python-stack-to-the-browser/">https://hacks.mozilla.org/2019/04/pyod'
  +'ide-bringing-the-scientific-python-stack-to-the-browser/</a></p><h2><a id="'
  +'UnifiedUserInterface(HTML,CSS,SVG)">Unified User Interface (HTML,CSS,SVG)</'
  +'a><br></h2><p>The browser supports a number of different standards as part '
  ,'of its user interface. These include HTML, CSS, SVG&nbsp; to cover page lay'
  +'out, style editing, and vector graphics respectively. Normally these all re'
  +'quire their own conventions to be used when accessed directly from the brow'
  +'ser and/or JavaScript. XIDE unifies the user''''s access to these different'
  +' browser capabilities using a standardised Object Inspector / Drag and Drop'
  +' approach for them all. For HTML and SVG this should appear seamless to the'
  +' user with all the SVG containers and components accessed in an identical m'
  +'anner to HTML so requiring no further explanation than provided below for b'
  +'asic screen layout and editing.&nbsp;</p><h2><a id="TheStyleDesigner">The S'
  +'tyle Designer</a><br></h2><p>CSS functionality is provided by supporting a '
  +'style design tree in addition to the Code and UI design trees described bel'
  +'ow. As with the UI design tree, Style resources (new design rules, targets,'
  +' properties and rule types ) are dragged from a resources tree and dropped '
  +'on the relevant node of the style tree. The style tree also supports logica'
  +'l grouping of targets using "AND" and "OR" nodes.&nbsp; This speeds up and '
  +'simplifies the CSS syntax generation considerably compared to direct text e'
  +'ntry.</p><h2><a id="CompositeComponents">Composite Components</a><br></h2><'
  +'p>XIDE can be used to build reusable "widgets" by creating a system with a '
  +'set of XIDE elements and associated events, and then encapsulating that sys'
  +'tem. The encapsulated system is saved to local storage, and will appear in '
  +'the Resources tree as a Composite component, which can then be pasted into '
  +'other systems the user is building.</p><h2><a id="GPUCapability">GPU Capabi'
  +'lity</a><br></h2><p>XIDE provides a thin wrapper for GPUJS (See https://gpu'
  +'.rocks/) which generates GPU code from JavaScript. This produces WebGL code'
  +' as it is widely supported "out of the box"&nbsp; in most browsers and on m'
  +'ost processor/GPU combinations. This minimises the&nbsp; installation and c'
  +'onfiguration needed in order to get GPU code running on a new system. As su'
  +'ch it is a good way to start learning about the possibilities (and perhaps '
  +'more importantly the limitations) of programming for a massively parallel p'
  +'latform.&nbsp;</p><p>One of the weaknesses of this approach is the frustrat'
  +'ing inability to optimise code or diagnose bugs in the GPU kernels except b'
  +'y exhaustive trial and error.&nbsp; So for any serious GPU programming it i'
  +'s well worth investing the time in getting to grips with the (admittedly in'
  +'timidating) learning curve needed to master tools like OpenCL or Cuda and t'
  +'he associated tool stacks. Having said that, for simple "embarrassingly par'
  +'allel" examples, or where there is a need to build simple GPU code into mor'
  +'e general purpose or widely shared apps, the GPUJS approach can be very hel'
  +'pful.</p><h2><a id="ProjectDevelopmentandDeployment">Project Development an'
  +'d Deployment</a><br></h2><p>During the development phase of a project XIDE&'
  +'nbsp;will usually be loaded in design mode where you can edit the user inte'
  +'rface design and the code behind it. On startup on the desktop, the IDE re-'
  +'loads the project you were last working on. On the browser, it can be set t'
  +'o revert to the original state every time the app is started or to reload f'
  +'rom the previous session.</p><p>Existing projects can be loaded from a prev'
  +'iously saved system in local storage, or from the clipboard. Clearing the c'
  +'urrent system will start a new project. At the end of the design phase, you'
  +' will sometimes want to deploy the developed HTML app to end users without '
  +'allowing access to the IDE. In this case, select the "System / Deploy" opti'
  +'on from the main menu and this will generate a self contained HTML page imp'
  +'lementing your application and the run time environment needed to execute i'
  +'t, but with the interactive IDE features disabled. You can now load this to'
  +' a server of your choice, or email directly to your end user so they can ru'
  +'n it from their file system.&nbsp;</p><p>Alternatively, if you wish to give'
  +' them access to inspect and perhaps contribute to, or modify, the app, then'
  +' distribute the blank XIDE app for their preferred platform&nbsp; and use t'
  +'he "System / Save" option to generate a project definition file that they c'
  +'an load into it using the "System / Load" option on the main menu.&nbsp;</p'
  +'><h2><a id="Debugging">Debugging</a><br></h2><p>When testing Pascal code yo'
  +'u have written using XIDE, the PAS2JS compiler error messages will flag any'
  +' source code syntax problems. If you click on one of these error messages t'
  +'his will position the cursor at the relevant character position in the line'
  +' of code in the XIDE&nbsp;code editor. Run time errors will sometimes be tr'
  +'apped by error handlers built in to XIDE&nbsp;and generate a helpful error '
  +'message. If this is not sufficient to uniquely identify the cause of the pr'
  ,'oblem then "ctrl shift J" in Chrome will bring up the built in developer co'
  +'nsole which will hopefully provide the additional information you need to t'
  +'rack down the problem. Alternatively, a break point can be set in the code '
  +'by inserting a "DebugStart;" instruction that will start the native browser'
  +' debug facility at that point.</p><h2><a id="ImplementationExtensibilityand'
  +'Licencing">Implementation, Extensibility and Licensing</a><br></h2><p>XIDE '
  +'is implemented using the Pas2JS dialect of the Object Pascal programming la'
  +'nguage. This is because it is efficient, easy to learn, and is available on'
  +' a wide range of processor architectures.&nbsp;</p><p>Sometimes, as project'
  +'s go through their life cycle, new more specialist requirements emerge. At '
  +'this point the XIDE framework can be extended using project or platform spe'
  +'cific custom components developed in Lazarus.&nbsp;</p><p>XIDE is an open s'
  +'ource project distributed using the same licence as Lazarus (GPL) Source co'
  +'de is available from GitHub&nbsp; see&nbsp;<a href="https://github.com/Stev'
  +'e--W/XIDE">here</a>&nbsp;for the IDE and&nbsp;<a href="https://github.com/S'
  +'teve--W/XComponents">here</a>&nbsp;for the components used to build it. (se'
  +'e&nbsp;<font color="#0000ff">https://github.com/Steve--W/XIDE</font>&nbsp;a'
  +'nd<font color="#0000ff">&nbsp;https://github.com/Steve--W/XComponents</font'
  +'>&nbsp;respectively)</p><h2><a id="DevelopmentRoadmap">Development Roadmap<'
  +'/a><br></h2><p>I have developed XIDE&nbsp; to support my ongoing academic r'
  +'esearch projects. I have made the project open source in case it should pro'
  +'ve useful to anyone else. In particular, I hope its browser first approach,'
  +' low installation overhead and easy learning curve will help to introduce t'
  +'he&nbsp; joys of Free Pascal and Lazarus to a wider audience.<br></p><p>Tho'
  +'se aspects of XIDE and XComponents that I use regularly are "tried and test'
  +'ed". Some aspects that are used less often may have more bugs, and there ar'
  +'e many aspects where it would be great to add new or improved features but '
  +'where I do not have the bandwidth to address at the moment. If&nbsp; anyone'
  +' wants to help out with any improvement to XIDE then their contribution wil'
  +'l be most welcome.</p><p>(Some topics that spring to mind, from a long list'
  +' of potential improvements, are:-&nbsp; Broadening XIDE browser support bey'
  +'ond the Chrome compatible set, XIDE integration with Lazarus, improving the'
  +' wrapper for GPUJS or adding a drag and drop utility for constructing MatPl'
  +'otLib data visualisations to make these Python libraries easily accessible '
  +'to the Pascal community. )</p><h2><a id="Compatibility">Compatibility</a><b'
  +'r></h2><p>In desktop mode, XIDE is designed to run on platforms supported b'
  +'y&nbsp; Lazarus, and optionally, the&nbsp; Chromium Embedded Framework and&'
  +'nbsp; Python (i.e. most desktop platforms). If CEF or Python is not availab'
  +'le then XIDE can still run but will then not support their specialist featu'
  +'res.&nbsp; Alternatively, Electron or Cordova and Crosswalk can be used to '
  +'provide a hybrid implementation of XIDE. This gives full Web connectivity a'
  +'nd CSS on a wide range of platforms but with a trade off in terms of size, '
  +'speed and security.</p><p>In browser mode XIDE is targeting closed user gro'
  +'ups (where the browser can be specified) so it is only tested on recent ver'
  +'sions of Chrome but it may also work on other browsers which use a Chrome e'
  +'ngine. (e.g. the latest version of Microsoft Edge)&nbsp;</p><p>Note that Th'
  +'eStyleDesigner is only available on the Browser versions as it depends on C'
  +'SS functionality.</p><p><br></p><hr id="null"><p></p><h2><a id="DesigningaU'
  +'serinterface">Designing a User interface</a><br></h2><h3><a id="Resourceand'
  +'InstanceTrees">Resource and Instance Trees</a><br></h3><p>XIDE uses a very '
  +'simple paradigm. Essentially, it consists of three elements.</p><p></p><ol>'
  +'<li>&nbsp;A resources tree, showing the AvailableWidgets (visual and non vi'
  +'sual)</li><li>&nbsp;A system design tree and object property inspector/edit'
  +'or</li><li>&nbsp;A layout panel showing a WYSIWYG version of the current pa'
  +'ge design.</li></ol><p></p> <p>The UI is built by pasting nodes from the re'
  +'source tree to the system design tree. Each node has object properties defi'
  +'ned by a name/value pairs that can be edited using the object inspector or '
  +'referenced and or updated by run time code. Events are also available on ea'
  +'ch widget so that Pascal code can be attached to them using the built in co'
  +'de editor and compiler. Python scripts can also be called from these event '
  +'handlers.</p><h3><a id="AvailableWidgets">Available Widgets</a><br></h3><p>'
  +'The widgets listed in the resource tree include both UI and non visual comp'
  +'onents (the latter can be added to the root node of the UI design tree).&nb'
  +'sp;</p><h3><a id="ResponsiveDesign">Responsive Design</a><br></h3><p>XIDE s'
  ,'upports a simple ResponsiveDesign layout paradigm which consists of a Main '
  +'page, Tab controls and Popups to define the constituent pages in a UI desig'
  +'n. Horizontal and Vertical layout boxes (together with associated alignment'
  +' properties) are then nested within these pages to control the final layout'
  +' of components on the page.</p><h3><a id="WritingApplicationCode">Writing A'
  +'pplication Code</a><br></h3><p>XIDE uses an event driven model where event '
  +'handlers can be attached to pre-defined events triggered by objects in the '
  +'user interface. These procedures can be inspected and/or edited by using th'
  +'e object inspector to navigate to the required UI object then pressing the '
  +'ellipsis button to the right of the required event in its events tab. This '
  +'creates an entry for that event handler under the "Event Handlers" node in '
  +'the code design tree. So once a handler has been added it can then also be '
  +'navigated to by selecting it in the code designer and pressing the edit but'
  +'ton.&nbsp;</p><h3><a id="PascalSyntax">Pascal Syntax</a><br></h3><p>The Pas'
  +'calSyntax recognised by XIDE&nbsp;is that used by the Pas2JS variant of Fre'
  +'e Pascal. (<a href="http://wiki.freepascal.org/pas2js">http://wiki.freepasc'
  +'al.org/pas2js</a>). A detailed description of the supported syntax can be f'
  +'ound here. (<a href="http://wiki.freepascal.org/pas2js#RTL">http://wiki.fre'
  +'epascal.org/pas2js#RTL</a>)</p><h3><a id="UnitStructure">Unit Structure</a>'
  +'<br></h3><p>In addition to the event handler nodes, shared code can be writ'
  +'ten by adding units directly to the code design tree as "Pascal Units" or "'
  +'Python Scripts".&nbsp;&nbsp;</p><p>Functions and procedures&nbsp; in the co'
  +'de nodes can be amended or deleted by selecting the node on the code design'
  +' tree and pressing the "Edit" button which will bring up the code editor sc'
  +'reen as previously described for&nbsp; the event handler code. After a Pasc'
  +'al unit has been compiled for the first time in a session, all the procedur'
  +'es and functions declared in it are displayed as its child nodes in the cod'
  +'e design tree. Selecting one of these nodes and pressing the edit button be'
  +'low will navigate directly to that function. Alternatively, selecting a nod'
  +'e and pressing "Code Search" will list all references to that function or p'
  +'rocedure allowing you to navigate directly to the most relevant reference.<'
  +'/p><h3><a id="Python">Python</a><br></h3><p>The Python syntax used is versi'
  +'on 3.8.&nbsp;</p><p>Python does not have a unit structure like Pascal, howe'
  +'ver blocks of Python code can be added to the Code Designer tree in the sam'
  +'e way as Pascal units. The difference is that these will be run&nbsp; when '
  +'entering run mode. They are executed in the order they occur on the Code De'
  +'signer tree and can contain initialisation, declarations and / or&nbsp; any'
  +' other valid executable Python Code.&nbsp;</p><p>To execute Python code els'
  +'ewhere, such as in an event handler, then simply invoke the "RunPython(<i>.'
  +'.....</i>)" procedure with the relevant python function call (or code) as a'
  +' string parameter,</p><p>A console output box is supplied so that Python er'
  +'rors and print statements can be viewed. On the desktop, the copy of Python'
  +' being used is the version installed on the host machine, see the documenta'
  +'tion for that system to review valid syntax, permissions etc. In the browse'
  +'r, the version of Python used is that supported by mozilla (see&nbsp;<a hre'
  +'f="https://hacks.mozilla.org/2019/04/pyodide-bringing-the-scientific-python'
  +'-stack-to-the-browser/">https://hacks.mozilla.org/2019/04/pyodide-bringing-'
  +'the-scientific-python-stack-to-the-browser/</a>)</p><p><br></p><hr id="null'
  +'"><h3><a id="AccessingUserinterfaceObjectsatRunTime">Accessing User interfa'
  +'ce Objects at Run Time</a><br></h3><p>XIDE is designed to be a cross platfo'
  +'rm rapid application development system. In order to do this it uses a text'
  +' based system description tree (The System Design or Instance Tree) to refl'
  +'ect the state of a users program at all times. This is similar to the funct'
  +'ion of the Document Object Model (DOM) in standard web applications. All ob'
  +'ject properties for nodes on this tree can be accessed and updated using th'
  +'e supplied get and set calls (see below).</p> <h3><a id="TypesofAPICalls">T'
  +'ypes of API Calls</a><br></h3><p>In XIDE design mode the instance tree desc'
  +'ribing a users project can be inspected manually using the Object Inspector'
  +'. This allows the user to select any node on the tree and inspect and/or mo'
  +'dify its properties or event handlers as required. The XIDE&nbsp;API allows'
  +' the same actions to be available programmatically. The functions available'
  +' fall into the following types (and work in an identical manner in both Pas'
  +'cal and Python) viz:-</p><p></p><ul><li>&nbsp;Dialog boxes</li><li>&nbsp;Ge'
  +'t and/or set a property value of a UI object</li><li>&nbsp;Save and load us'
  ,'er selected data to the clipboard or local storage</li><li>&nbsp;Copy or de'
  +'lete a UI component or move it to a new parent.</li><li>&nbsp;Show or hide '
  +'a popup form.</li><li>&nbsp;Show or hide a busy indicator.</li><li>&nbsp;ge'
  +'t and set GPU parameters&nbsp;</li></ul><p></p><p>The detailed syntax for t'
  +'hese function calls is appended below. Note that unless explicitly stated, '
  +'all values are strings.</p><h3><a id="AsynchronousCallsMultiThreadingandIni'
  +'tializationfunctions">Asynchronous Calls, Multi Threading and Initializatio'
  +'n functions</a><br></h3><p>Many web calls issue requests that need to wait '
  +'for a response from a web service, database or other remote service provide'
  +'r. Similarly, when starting another thread in parallel, the main thread wil'
  +'l often need to wait for such child threads to return the results of their '
  +'work before it can proceed. XIDE&nbsp;allows main event handlers to specify'
  +' a "initalisation"function. This is a block of code which issues all such r'
  +'equests prior to running the main event code when they have all finished ex'
  +'ecuting. See below for the detail syntax of the available calls.</p><p>Note'
  +' however that all such asynchronous calls first parameter is "e" the event '
  +'context (automatically declared and populated by XIDE, behind the scenes, f'
  +'or every XIDE&nbsp;event) from which they have been issued so they know whe'
  +'re to return without requiring the user to enter complex boilerplate code.<'
  +'/p><h2><a id="ListofXIDEspecificAPIprocedureandfunctioncalls">List of XIDE '
  +'specific API procedure and function calls</a><br></h2> <p></p><h3><a id="Ge'
  +'neralfunctions">General functions</a><br></h3><ul><li>procedure SetProperty'
  +'Value(nodeName,propName,newValue:String);&nbsp;&nbsp;&nbsp; &nbsp;<font col'
  +'or="#0000ff">set a component property (string value)&nbsp;&nbsp;</font></li'
  +'><li>function&nbsp; &nbsp;GetPropertyValue(nodeName,propName:String);&nbsp;'
  +'<font color="#0000ff">&nbsp; &nbsp;returns a component property value (as s'
  +'tring)&nbsp;</font></li><li>procedure SetPropertyValueIndexed(nodeName,prop'
  +'Name:String;newValue:TStringArray; x,y:integer);&nbsp;&nbsp; &nbsp;<font co'
  +'lor="#0000ff">set a portion of a component array property</font>&nbsp;&nbsp'
  +';</li><li>procedure CopyToClip(str:String);&nbsp;&nbsp;<font color="#0000ff'
  +'">&nbsp;copies the given string to the clipboard&nbsp;</font></li><li>funct'
  +'ion&nbsp; &nbsp;CopyFromClip(e:TEventStatus):String;&nbsp;&nbsp;&nbsp;<font'
  +' color="#0000ff">CopyFromClip is an async function (required for browser us'
  +'e), so it must be coded in the&nbsp;&nbsp;"Init" section of an event handle'
  +'r. The result here is a blank string.&nbsp;&nbsp;&nbsp;The clipboard string'
  +' is held in e.ReturnString, which can be picked up in the&nbsp;&nbsp;&nbsp;'
  +' &nbsp;"Main" section of the event handler.</font></li><li>procedure ShowXF'
  +'orm(XFormID:String; modal:Boolean);&nbsp;&nbsp;<font color="#0000ff">&nbsp;'
  +'opens a TXForm. [note:"modal=false" currently only effective on desktop]&nb'
  +'sp;</font></li><li>procedure CloseXForm(XFormID:String);&nbsp;&nbsp;<font c'
  +'olor="#0000ff">&nbsp;closes a TXForm.&nbsp;&nbsp;</font></li><li>procedure '
  +'DoEvent(EventType,NodeId,myValue:String);&nbsp;<font color="#0000ff"> execu'
  +'tes the event handler defined for the given event type and component.&nbsp;'
  +'</font></li><li>procedure MoveComponent(nodeId:string;NewParentId:string);&'
  +'nbsp;&nbsp;<font color="#0000ff">re-parents the given UI component&nbsp;</f'
  +'ont></li><li>procedure CopyComponent(nodeId,NewParentId,NewName:string);&nb'
  +'sp;<font color="#0000ff">copies the given UI component and places the clone'
  +' under the given parent&nbsp;</font></li><li>function&nbsp; &nbsp;DeleteCom'
  +'ponent(nodeId:string;ShowNotFoundMsg:Boolean=true):Boolean;&nbsp;&nbsp; <fo'
  +'nt color="#0000ff">&nbsp;deletes the given UI component. Returns false if n'
  +'ot done.&nbsp;</font></li><li>function&nbsp; &nbsp;UserSystemAsString():Str'
  +'ing;&nbsp; <font color="#0000ff">Returns the string representation of the c'
  +'urrent user system (can be imported to XIDE via System&gt;Load)&nbsp;&nbsp;'
  +'</font></li><li>function&nbsp; &nbsp;LoadUserSystemString(SystemString:Stri'
  +'ng);&nbsp;&nbsp;<font color="#0000ff">Imports a new user system to the XIDE'
  +' framework (can only be done in "Design" mode)&nbsp;</font></li><li>procedu'
  +'re ShowBusy(e:TEventStatus);&nbsp;&nbsp;<font color="#0000ff">Shows the bus'
  +'y cursor&nbsp;ShowBusy is an async function (required for browser use), so '
  +'it must be coded in the&nbsp; "Init" section of an event handler.&nbsp; &nb'
  +'sp; &nbsp; &nbsp; &nbsp;</font></li><li>procedure HideBusy;&nbsp; &nbsp;<fo'
  +'nt color="#0000ff">Hides the busy cursor&nbsp;</font>&nbsp;</li><li>procedu'
  +'re ProcessMessages;&nbsp; <font color="#0000ff">&nbsp;Functional in Desktop'
  +' execution only.&nbsp; Executes a pascal Application.ProcessMessages statem'
  +'ent.&nbsp;&nbsp;</font></li><li>procedure DebugStart;&nbsp; &nbsp;<font col'
  ,'or="#0000ff">Functional in Browser execution only.&nbsp; Executes a Javascr'
  +'ipt "debugger;" statement - starts the native browser debug facility.&nbsp;'
  +'&nbsp;</font></li><li>procedure RunPython(str:String);&nbsp;<font color="#0'
  +'000ff">&nbsp;Executes the given Python script&nbsp;</font></li><li>procedur'
  +'e PyodideLoadPackage(nm:String);&nbsp;<font color="#0000ff">&nbsp;Functiona'
  +'l in Browser execution only.&nbsp; Loads the requested Pyodide/python packa'
  +'ge, so that it will be available for import.&nbsp;</font></li><li>function '
  +'PyodidePackageLoaded(nm:String):Boolean;&nbsp;<font color="#0000ff">&nbsp;F'
  +'unctional in Browser execution only.&nbsp; Returns true if the named packag'
  +'e has been loaded into the Pyodide environment.&nbsp;&nbsp;</font>&nbsp; &n'
  +'bsp;</li></ul><div contenteditable="true"><ul></ul><h3><a id="MessagesandDi'
  +'alogs">Messages and Dialogs</a><br></h3><ul><li>procedure ShowMessage(msg:S'
  +'tring);&nbsp; <font color="#0000ff">&nbsp;displays a popup alert&nbsp;</fon'
  +'t></li><li>function&nbsp; &nbsp;Confirm(TextMessage:string):boolean;&nbsp;&'
  +'nbsp;<font color="#0000ff">displays a confirmation alert; returns true/fals'
  +'e&nbsp;</font></li><li>function&nbsp; &nbsp;Prompt(TextMessage,promptString'
  +':string):string;&nbsp;&nbsp;&nbsp;<font color="#0000ff">displays an input b'
  +'ox; returns user-entered string&nbsp;</font></li><li>procedure ConsoleLog(t'
  +'xt:String);&nbsp; <font color="#0000ff">Writes a debug message to the conso'
  +'le log&nbsp;&nbsp;</font></li></ul><ul></ul><h3><a id="TXTablefunctions">TX'
  +'Table functions</a><br></h3><ul><li>procedure&nbsp; LoadTableFromExcelCopy('
  +'TableName,CopiedString:String);&nbsp;&nbsp;<font color="#0000ff">Populate t'
  +'he given TXTable component with a string in Excel format (eg. as copied fro'
  +'m a spreadsheet)&nbsp;&nbsp;</font></li><li>procedure&nbsp; LoadTableFromNu'
  +'mArray(TableName,NumArray:T2DNumArray);&nbsp;&nbsp;<font color="#0000ff">Po'
  +'pulate the given TXTable component from a 2D numeric array&nbsp;&nbsp;</fon'
  +'t></li><li>function&nbsp; &nbsp;GetTableDataArray(TableName:String;SkipHead'
  +'er:Boolean):T2DStringArray;&nbsp;&nbsp;<font color="#0000ff">&nbsp;Fetch th'
  +'e cells from the given TXTable component as a 2D string array&nbsp;&nbsp;</'
  +'font></li><li>function&nbsp; &nbsp;Array2DToString(arr:T2DNumArray):String;'
  +'&nbsp; <font color="#0000ff">&nbsp;Convert numeric 2D array to string form '
  +'eg. [[...],...,[...]]&nbsp;&nbsp;</font></li></ul><ul></ul><h3><a id="TXGPU'
  +'Canvasfunctions">TXGPU Canvas functions</a><br></h3><ul><li>function&nbsp; '
  +'&nbsp;GetGPUParamNumValue(GPUName,pName:String):TNumArray;&nbsp;&nbsp;<font'
  +' color="#0000ff">For the given TXGPUCanvas component, returns the value of '
  +'the named numeric parameter as an array&nbsp;</font></li><li>function&nbsp;'
  +' &nbsp;GetGPUConstIntValue(GPUName,pName:String):integer;&nbsp; <font color'
  +'="#0000ff">&nbsp;For the given TXGPUCanvas component, returns the value of '
  +'the named integer parameter&nbsp;</font></li><li>procedure SetGPUParamNumVa'
  +'lue(GPUName,pName:String;pValue:TNumArray);&nbsp;&nbsp;<font color="#0000ff'
  +'">For the given TXGPUCanvas component, sets the value of the named numeric '
  +'parameter as a 1-D array&nbsp;</font></li><li>procedure SetGPUParam2DNumVal'
  +'ue(GPUName,pName:String;pValue:T2DNumArray);&nbsp; &nbsp;<font color="#0000'
  +'ff">For the given TXGPUCanvas component, sets the value of the named numeri'
  +'c parameter as a 2-D array&nbsp;</font></li><li>procedure SetGPUConstIntVal'
  +'ue(GPUName,pName:String;pValue:integer);&nbsp; &nbsp; <font color="#0000ff"'
  +'>For the given TXGPUCanvas component, sets the value of the named integer p'
  +'arameter&nbsp;</font></li><li>function&nbsp; &nbsp;GetGPUPixelArray(GPUName'
  +':String):T3DNumArray;&nbsp;&nbsp;<font color="#0000ff">&nbsp;Fetch the curr'
  +'ent Pixel array for the given TXGPUCanvas component&nbsp;&nbsp;</font></li>'
  +'<li>function&nbsp; &nbsp;GetGPUPixelArrayAsString(GPUName:String):String;&n'
  +'bsp;&nbsp;<font color="#0000ff">Fetch the current Pixel array in string for'
  +'mat for the given TXGPUCanvas component&nbsp;</font>&nbsp;</li><li>function'
  +'&nbsp; &nbsp;GetGPUStageArray(GPUName:String):T3DNumArray;&nbsp;&nbsp;&nbsp'
  +';<font color="#0000ff"> Fetch the stage array (resulting from the non-graph'
  +'ical kernel stack) for the given </font>TXGPUCanvas component&nbsp;&nbsp;</'
  +'li><li>function&nbsp; &nbsp;GetGPUStageArrayAsString(GPUName:String):String'
  +';&nbsp; &nbsp;<font color="#0000ff">Fetch the stage array in string format '
  +'for the given TXGPUCanvas component&nbsp;&nbsp;</font></li></ul><ul></ul><u'
  +'l></ul><ul></ul><ul></ul><ul></ul><ul></ul><ul></ul><ul></ul><h3><a id="Pyt'
  +'honOnly">Python Only</a><br></h3><ul><li>function&nbsp; ShowPythonPlot(ImgN'
  +'ame,fig)<font color="#0000ff">&nbsp; In the given TXImage component, displa'
  +'ys the contents of fig (a matplotlib figure)&nbsp;</font></li></ul><hr id="'
  +'null"><h2><a id="TocreateacompositeComponent">To create a composite Compone'
  ,'nt</a><br></h2><p></p><ol><li>Clear the system.</li><li>Build your widget i'
  +'n the normal way (for example, a table, with a copy and a paste button, and'
  +' click events coded).</li><li>Test the system.</li><li>In design mode, sele'
  +'ct System&gt;Encapsulate on the main menu.&nbsp; Provide a name for the com'
  +'posite component (eg. "TableWithCopyPaste").</li><li>In the Resources Tree,'
  +' under "Composites", your new widget should now be listed.</li></ol><p></p>'
  +'<h3><a id="TouseacompositeComponent">To use a composite Component</a><br></'
  +'h3><p></p><ol><li>Build a new system in the normal way.</li><li>Select a co'
  +'mposite component in the Resources Tree, and paste to the system in the nor'
  +'mal way.&nbsp;</li></ol><p></p><p>The composite component will be listed in'
  +' the Design Tree, but without its constituent components - only the enclosi'
  +'ng element will be shown. The composite component has two non-editable prop'
  +'erties to note:</p><p></p><ul><li>&nbsp; "CompositeType", which shows the n'
  +'ame with which the composite was originally created.</li><li>&nbsp; "Source'
  +'String", which contains the definition of the sub-elements within the compo'
  +'site, for system use.</li></ul><p></p><h3><a id="ToeditacompositeComponent"'
  +'>To edit a composite Component</a><br></h3><p></p><ol><li>Clear the system.'
  +'</li><li>Select the composite resource in the Resource Tree, and press "Loa'
  +'d". This will load the composite as a system in design mode.</li><li>When y'
  +'our update is completed, save the composite again using System&gt;Encapsula'
  +'te on the main menu.</li></ol><p></p><p>NOTE: This will not update any inst'
  +'antiated copies of your composite.&nbsp; To update instantiated copies, loa'
  +'d the system(s) containing them, then delete and re-paste the composite.</p'
  +'><h3><a id="TopassdataintoacompositeComponent">To pass data into a composit'
  +'e Component</a><br></h3><p>By default, events within a composite element ha'
  +'ve no view of the containing system, and so cannot obtain data from it. So '
  +'while building a composite component, you can include a Composite Interface'
  +' element (TXCompositeIntf in the Resources Tree, under Non-Visual component'
  +'s).</p><p></p><ol><li>Paste a composite interface element under the UIRootN'
  +'ode in the design tree.&nbsp;</li><li>In the object inspector Properties ta'
  +'b, press the "Add" button.&nbsp; This will create a new property for the in'
  +'terface.&nbsp;&nbsp;</li><li>On the popup screen, enter the property name.<'
  +'/li><li>Use the "Type" selector to specify whether the property is "Input" '
  +'or "Output". Select "Input".</li><li>Enter some brief text to explain to a '
  +'user of your composite what the purpose of this property is.</li><li>Press '
  +'"Done".</li></ol><p></p><p>The new property is now listed in the properties'
  +' list for the interface, and can be accessed from event code within the com'
  +'posite. Encapsulate the composite component, and then paste it into a test '
  +'system. Note that the object inspector for the instantiated composite compo'
  +'nent has a tab page "Interface", in which your interface property is listed'
  +'. An input property is editable here, or can be populated programmatically '
  +'at run time.</p><h3><a id="TogetdataoutofacompositeComponent">To get data o'
  +'ut of a composite Component</a><br></h3><p>Events in the enclosing system h'
  +'ave no view of the sub-elements within a composite, and so cannot obtain pr'
  +'operty values directly.&nbsp; For this purpose an "output" property is need'
  +'ed. As in the section above, while editing the composite component, add an '
  +'interface property, and set its type to "Output". When your composite is pa'
  +'sted into a containing system, the output property is listed in the Interfa'
  +'ce tab, but cannot be&nbsp; edited there.&nbsp; It is the responsibility of'
  +' events within the composite to set the property value.&nbsp;&nbsp;</p><h3>'
  +'<a id="ToaddacallablemethodtoacompositeComponent">To add a callable method '
  +'to a composite Component</a><br></h3><p>While editing your composite system'
  +' in design mode, select your interface component (TXCompositeIntf) in the d'
  +'esign tree.</p><p></p><ol><li>On the "Events" tab, press "Add" to create a '
  +'new method.</li><li>On the popup screen, enter the name of the method, and '
  +'its type (select "Read-Only").</li><li>Enter some brief text to explain to '
  +'a user of your composite what the purpose of this method is.</li><li>Press '
  +'"Done".</li></ol><p></p><p>The new method is now listed in the events list '
  +'for the interface. Encapsulate the composite component, and then paste it i'
  +'nto a test system. Note that the object inspector for the instantiated comp'
  +'osite component has your method listed under "Events", but cannot be edited'
  +' here. The enclosing system can execute the method using the "DoEvent" buil'
  +'t-in.</p><h3><a id="ToaddaneditableEventHandlertoaCompositeComponent">To ad'
  +'d an editable Event Handler to a Composite Component</a><br></h3><p>While e'
  ,'diting your composite system in design mode, select your interface componen'
  +'t (TXCompositeIntf) in the design tree.</p><p></p><ol><li>On the "Events" t'
  +'ab, press "Add" to create a new method.</li><li>On the popup screen, enter '
  +'the name of the method, and its type (select "Editable").</li><li>Enter som'
  +'e brief text to explain to a user of your composite what event within the c'
  +'omposite will execute it.</li><li>Press "Done".</li></ol><p></p><p>The new '
  +'event handler is now listed in the events list for the interface, but code '
  +'cannot be added here. The composite system can execute the method using the'
  +' "DoEvent" built-in, for example on closing a form, or on changing a data t'
  +'able. Encapsulate the composite component, and then paste it into a test sy'
  +'stem. Note that the object inspector for the instantiated composite compone'
  +'nt has your event handler listed under "Events", and can be edited here, so'
  +' that the user of the composite component can create their own handler.</p>'
  +'<p><br></p><hr id="null"><h2></h2><h2><a id="TheXIDEGPUJSWrapper">The XIDE '
  +'GPUJS Wrapper</a><br></h2><p>The Pascal code for the GPU is accessed as a p'
  +'roperty of a GPU Canvas component which has been dropped onto the User Inte'
  +'rface layout screen and/or as a node on the Code designer tree.&nbsp; The P'
  +'ascal GPU code editor follows the same edit/compile cycle as for user code '
  +'in the rest of the system. The differences are that this is code for blocks'
  +' of threads in parallel. The code describes a single instruction multiple d'
  +'ata (SIMD) approach where all the threads run the same code with thread spe'
  +'cific code referencing "this.thread.x" , "this.thread.y" and "this.thread.z'
  +'" to reflect their position in the block of threads. Parameter names are de'
  +'clared using a Paramlist property of the GPU canvas component and their tra'
  +'nsfer and run time execution is controlled by system calls described below.'
  +' (N.B. parameters need to be passed as arrays so even scalar parameters pas'
  +'sed into the code need to be referenced as follows "myParam[0]" )<br></p><p'
  +'>The Pascal GPU code can daisy chain kernels. (Set the TXGPUCanvas property'
  +' NumKernels&gt;0) For each kernel in the chain its return value must be set'
  +' to "MyValue". The next kernel in the chain can then read all the thread re'
  +'turn values from the previous kernel by reading from "MyArray".The initial '
  +'"MyArray" passed to the first kernel in the chain is set as a property ("In'
  +'itStageData") of the GPU canvas and can have any x,y,z sizes as chosen by t'
  +'he user. The final&nbsp; &nbsp;kernel is the graphics display kernel where '
  +'you set the r,g,b values as usual. The calculated data input to the graphic'
  +'s display kernel can also be accessed using either the "GetGPUStageArray" o'
  +'r "GetGPUStageArrayAsString" instructions;</p><h2><a id="Mathsfunctionsavai'
  +'lableintheGPU">Maths functions available in the GPU&nbsp;</a>&nbsp;code are'
  +' as follows:-</h2><p></p><ul><li>abs(a) sign(a) trunc(a) ceil(a) max(a,b) m'
  +'in(a,b)</li><li>sin(a) cos(a) arcsin(a) arccos(a) arctan(a,b)</li><li>sqrt('
  +'a) power(a,b) ln(a) log10(a) log2(a)&nbsp;</li></ul><h2><a id="Limitationso'
  +'fcodingfortheGPU">Limitations of coding for the GPU</a><br></h2><p>When cod'
  +'ing in Pascal for the GPU, you should be aware that there are fundamental l'
  +'imitations on the constructs available. In particular:-</p><p></p><ul><li>A'
  +'ll parameters passed into the GPU&nbsp; are real arrays (scalar parameters '
  +'are real arrays of length one)<br></li><li>You can read from but not write '
  +'to any of these array parameters</li><li>You cannot declare a local array</'
  +'li><li>Each thread returns a single real value</li><li>You cannot communica'
  +'te with any other thread (except by synchronising the results in a new kern'
  +'el)</li><li>You cannot use a Boolean type (use 0 or 1 instead)</li><li>You '
  +'cannot use "var" parameters in a function call</li><li>All function paramet'
  +'ers must be a simple type</li><li>Nested function declarations do not follo'
  +'w normal (Pascal) scope rules</li><li>Loops are unrolled so you MUST SET th'
  +'e "<span style="font-family: Verdana, Arial, sans-serif; font-size: 12px; w'
  +'hite-space: nowrap;">MaxIterations"</span>&nbsp;parameter at a high enough '
  +'value to reflect your algorithm''''s requirements</li><li>The number of thr'
  +'eads in each kernel are given by the KernelXDims, KernelYDims and Kernel ZD'
  +'ims properties of the GPU Canvas and these MUST BE SET either manually or p'
  +'rogramatically before activating the GPU.</li><li>The GPU is a Single Instr'
  +'uction Multiple Data machine so branching in a thread does not jump over th'
  +'e code in the path not taken,&nbsp; it idles in order to allow other thread'
  +'s to execute the code in that path if need be.&nbsp;</li><li>Debugging on t'
  +'he GPU is "primitive" the only way to do it when running on the hardware is'
  +' to write out intermediate results&nbsp; to the thread output value for sel'
  ,'ected threads which you dedicate to providing diagnostic output.&nbsp;</li>'
  +'</ul><p><br></p><p><br></p><p></p>'';'#13#10'''<h1 style="text-align: cente'
  +'r;"><u>XIDE Help</u></h1><h2 style="text-align: center;">&nbsp;(A simple "B'
  +'rowser-First" IDE for Pascal and Python)</h2><h2>Contents</h2><p>Overview</'
  +'p><p></p><ul><li><a href="#Purpose">Purpose</a></li><li><a href="#Installat'
  +'ion">Installation</a></li><li><a href="#Functionality">Functionality</a></l'
  +'i><li><a href="#UnifiedUserInterface(HTML,CSS,SVG)">Unified User Interface '
  +'(HTML,CSS,SVG)</a></li><li><a href="#TheStyleDesigner">The Style Designer</'
  +'a></li><li><a href="#CompositeComponents">Composite Components</a></li><li>'
  +'<a href="#GPUCapability">GPU Capability</a></li><li><a href="#ProjectDevelo'
  +'pmentandDeployment">Project Development and Deployment</a></li><li><a href='
  +'"#Debugging">Debugging</a></li><li><a href="#ImplementationExtensibilityand'
  +'Licencing">Implementation, Extensibility and Licencing</a></li><li><a href='
  +'"#DevelopmentRoadmap">Development Roadmap</a></li><li><a href="#Compatibili'
  +'ty">Compatibility</a></li></ul><p></p><p></p><p>User Interface</p><ul><li><'
  +'a href="#DesigningaUserinterface">Designing a Userinterface</a></li><li><a '
  +'href="#ResourceandInstanceTrees">Resource and InstanceTrees</a></li><li><a '
  +'href="#AvailableWidgets">Available Widgets</a></li><li><a href="#Responsive'
  +'Design">Responsive Design</a></li><li><a href="#WritingApplicationCode">Wri'
  +'ting Application Code</a></li><li><a href="#PascalSyntax">Pascal Syntax</a>'
  +'</li><li><a href="#Python">Python</a></li></ul><p></p><p>Application Progra'
  +'mming Interface</p><p></p><ul><li><a href="#AccessingUserinterfaceObjectsat'
  +'RunTime">Accessing User interface Objects at Run Time</a></li><li><a href="'
  +'#TypesofAPICalls">Types of API Calls</a></li><li><a href="#AsynchronousCall'
  +'sMultithreadingandInitialisationfunctions">Asynchronous Calls,Multithreadin'
  +'g and Initialisation functions</a></li><li><a href="#ListofXIDEspecificAPIp'
  +'rocedureandfunctioncalls">List of XIDE specific API procedure and function '
  +'calls</a></li><li><a href="#Generalfunctions">General functions</a></li><li'
  +'><a href="#MessagesandDialogs">Messages and Dialogs</a></li><li><a href="#T'
  +'XTablefunctions">TXTable functions</a></li><li><a href="#TXGPUCanvasfunctio'
  +'ns">TXGPU Canvas functions</a></li><li><a href="#PythonOnly">Python Only fu'
  +'nctions</a></li></ul><p></p><p>Encapsulation</p><ul><li><a href="#Tocreatea'
  +'compositeComponent">To create a composite Component</a></li><li><a href="#T'
  +'ouseacompositeComponent">To use a composite Component</a></li><li><a href="'
  +'#ToeditacompositeComponent">To edit a composite Component</a></li><li><a hr'
  +'ef="#TopassdataintoacompositeComponent">To pass data in to a composite Comp'
  +'onent</a></li><li><a href="#TogetdataoutofacompositeComponent">To get data '
  +'out of a composite Component</a></li><li><a href="#Toaddacallablemethodtoac'
  +'ompositeComponent">To add a callable method to a composite Component</a></l'
  +'i><li><a href="#ToaddaneditableeventhandlertoacompositeComponent">To add an'
  +' editable event handler to&nbsp; a composite Component</a></li></ul><p>GPU&'
  +'nbsp;<br></p><ul><li><a href="#TheXIDEGPUJSWrapper">The XIDE GPUJS Wrapper<'
  +'/a></li><li><a href="#MathsfunctionsavailableintheGPU">Maths functions avai'
  +'lable in the GPU</a></li><li><a href="#LimitationsofcodingfortheGPU">Limita'
  +'tions of coding for the GPU</a></li></ul><p></p><p></p><p>&nbsp;&nbsp;</p><'
  +'p></p><hr id="null"><h2><p></p></h2><h2><p><a id="Purpose">Purpose</a><br><'
  +'/p></h2><p>XIDE is a combined Client Side Run Time Library and RAD IDE inte'
  +'nded to allow Pascal and/or Python development in the browser with the mini'
  +'mum of installation overhead or learning curve while also being as platform'
  +' independent as possible. It is targeted at Prototyping, Small Group Collab'
  +'oration and Agile Line of Business projects on any platform that is support'
  +'ed by Chrome or Electron, or Lazarus (and the Chrome Embedded Framework).&n'
  +'bsp; It is not intended for the development of general-purpose public facin'
  +'g web sites.</p><h2><a id="Installation">Installation</a><br></h2><p>In the'
  +' browser, XIDE for Chrome is a single page static HTML page with no depende'
  +'ncies. so installation is just a matter of loading that initial web page. A'
  +'ll subsequent computation and data storage is done client side. This single'
  +' page web app&nbsp; combines the currently selected user project, as well a'
  +'s the RTL and IDE Code so any user project can be deployed with the IDE dis'
  +'abled (for end users) or enabled (for collaborators) as required.</p><p>Pyt'
  +'hon in XIDE is based on the Mozilla Pyodide project which brings a full dat'
  +'a science stack to the browser, such as NumPy, Pandas and Matplotlib.&nbsp;'
  +'</p><p>If using a snapshot of XIDE on the desktop (i.e. XIDE.exe), you need'
  +' to&nbsp; install local copies of Free Pascal and Python following the rele'
  ,'vant instructions on their web sites. Then using the XIDE.exe main menu "Se'
  +'ttings" option set the path to the home directories for the fpc compiler. A'
  +'lternatively to rebuild XIDE from source, see&nbsp;&nbsp;<a href="https://g'
  +'ithub.com/Steve--W/XIDE">https://github.com/Steve--W/XIDE.</a>&nbsp;</p><h2'
  +'><a id="Functionality">Functionality</a><br></h2><p>XIDE is designed to bri'
  +'ng the power of Free Pascal (Pas2JS) and the convenience of&nbsp; Rapid App'
  +'lication Development (RAD) to the browser. It&nbsp; is a "Browser First" ap'
  +'proach which also delivers cross platform capability by replicating browser'
  +' functionality on the desktop in native code. This allows the user to explo'
  +'it the greater efficiency of compiled native code compared to interpreted b'
  +'rowser environments as required. It also allows a single code base to suppo'
  +'rt multiple different target environments for different user circumstances '
  +'or different stages in a project.&nbsp;</p><p>The Python option in XIDE add'
  +'s broader "Data Science" capabilities to the environment and&nbsp; allows t'
  +'he more interactive exploratory approach of Python to be exploited as requi'
  +'red. See&nbsp;&nbsp;<a href="https://hacks.mozilla.org/2019/04/pyodide-brin'
  +'ging-the-scientific-python-stack-to-the-browser/">https://hacks.mozilla.org'
  +'/2019/04/pyodide-bringing-the-scientific-python-stack-to-the-browser/</a></'
  +'p><h2><a id="UnifiedUserInterface(HTML,CSS,SVG)">Unified User Interface (HT'
  +'ML,CSS,SVG)</a><br></h2><p>The browser supports a number of different stand'
  +'ards as part of its user interface. These include HTML, CSS, SVG&nbsp; to c'
  +'over page layout, style editing, and vector graphics respectively. Normally'
  +' these all require their own conventions to be used when accessed directly '
  +'from the browser and/or JavaScript. XIDE unifies the user''''s access to th'
  +'ese different browser capabilities using a standardised Object Inspector / '
  +'Drag and Drop approach for them all. For HTML and SVG this should appear se'
  +'amless to the user with all the SVG containers and components accessed in a'
  +'n identical manner to HTML so requiring no further explanation than provide'
  +'d below for basic screen layout and editing.&nbsp;</p><h2><a id="TheStyleDe'
  +'signer">The Style Designer</a><br></h2><p>CSS functionality is provided by '
  +'supporting a style design tree in addition to the Code and UI design trees '
  +'described below. As with the UI design tree, Style resources (new design ru'
  +'les, targets, properties and rule types ) are dragged from a resources tree'
  +' and dropped on the relevant node of the style tree. The style tree also su'
  +'pports logical grouping of targets using "AND" and "OR" nodes.&nbsp; This s'
  +'peeds up and simplifies the CSS syntax generation considerably compared to '
  +'direct text entry.</p><h2><a id="CompositeComponents">Composite Components<'
  +'/a><br></h2><p>XIDE can be used to build reusable "widgets" by creating a s'
  +'ystem with a set of XIDE elements and associated events, and then encapsula'
  +'ting that system. The encapsulated system is saved to local storage, and wi'
  +'ll appear in the Resources tree as a Composite component, which can then be'
  +' pasted into other systems the user is building.</p><h2><a id="GPUCapabilit'
  +'y">GPU Capability</a><br></h2><p>XIDE provides a thin wrapper for GPUJS (Se'
  +'e https://gpu.rocks/) which generates GPU code from JavaScript. This produc'
  +'es WebGL code as it is widely supported "out of the box"&nbsp; in most brow'
  +'sers and on most processor/GPU combinations. This minimises the&nbsp; insta'
  +'llation and configuration needed in order to get GPU code running on a new '
  +'system. As such it is a good way to start learning about the possibilities '
  +'(and perhaps more importantly the limitations) of programming for a massive'
  +'ly parallel platform.&nbsp;</p><p>One of the weaknesses of this approach is'
  +' the frustrating inability to optimise code or diagnose bugs in the GPU ker'
  +'nels except by exhaustive trial and error.&nbsp; So for any serious GPU pro'
  +'gramming it is well worth investing the time in getting to grips with the ('
  +'admittedly intimidating) learning curve needed to master tools like OpenCL '
  +'or Cuda and the associated tool stacks. Having said that, for simple "embar'
  +'rassingly parallel" examples, or where there is a need to build simple GPU '
  +'code into more general purpose or widely shared apps, the GPUJS approach ca'
  +'n be very helpful.</p><h2><a id="ProjectDevelopmentandDeployment">Project D'
  +'evelopment and Deployment</a><br></h2><p>During the development phase of a '
  +'project XIDE&nbsp;will usually be loaded in design mode where you can edit '
  +'the user interface design and the code behind it. On startup on the desktop'
  +', the IDE re-loads the project you were last working on. On the browser, it'
  +' can be set to revert to the original state every time the app is started o'
  +'r to reload from the previous session.</p><p>Existing projects can be loade'
  ,'d from a previously saved system in local storage, or from the clipboard. C'
  +'learing the current system will start a new project. At the end of the desi'
  +'gn phase, you will sometimes want to deploy the developed HTML app to end u'
  +'sers without allowing access to the IDE. In this case, select the "System /'
  +' Deploy" option from the main menu and this will generate a self contained '
  +'HTML page implementing your application and the run time environment needed'
  +' to execute it, but with the interactive IDE features disabled. You can now'
  +' load this to a server of your choice, or email directly to your end user s'
  +'o they can run it from their file system.&nbsp;</p><p>Alternatively, if you'
  +' wish to give them access to inspect and perhaps contribute to, or modify, '
  +'the app, then distribute the blank XIDE app for their preferred platform&nb'
  +'sp; and use the "System / Save" option to generate a project definition fil'
  +'e that they can load into it using the "System / Load" option on the main m'
  +'enu.&nbsp;</p><h2><a id="Debugging">Debugging</a><br></h2><p>When testing P'
  +'ascal code you have written using XIDE, the PAS2JS compiler error messages '
  +'will flag any source code syntax problems. If you click on one of these err'
  +'or messages this will position the cursor at the relevant character positio'
  +'n in the line of code in the XIDE&nbsp;code editor. Run time errors will so'
  +'metimes be trapped by error handlers built in to XIDE&nbsp;and generate a h'
  +'elpful error message. If this is not sufficient to uniquely identify the ca'
  +'use of the problem then "ctrl shift J" in Chrome will bring up the built in'
  +' developer console which will hopefully provide the additional information '
  +'you need to track down the problem. Alternatively, a break point can be set'
  +' in the code by inserting a "DebugStart;" instruction that will start the n'
  +'ative browser debug facility at that point.</p><h2><a id="ImplementationExt'
  +'ensibilityandLicencing">Implementation, Extensibility and Licensing</a><br>'
  +'</h2><p>XIDE is implemented using the Pas2JS dialect of the Object Pascal p'
  +'rogramming language. This is because it is efficient, easy to learn, and is'
  +' available on a wide range of processor architectures.&nbsp;</p><p>Sometime'
  +'s, as projects go through their life cycle, new more specialist requirement'
  +'s emerge. At this point the XIDE framework can be extended using project or'
  +' platform specific custom components developed in Lazarus.&nbsp;</p><p>XIDE'
  +' is an open source project distributed using the same licence as Lazarus (G'
  +'PL) Source code is available from GitHub&nbsp; see&nbsp;<a href="https://gi'
  +'thub.com/Steve--W/XIDE">here</a>&nbsp;for the IDE and&nbsp;<a href="https:/'
  +'/github.com/Steve--W/XComponents">here</a>&nbsp;for the components used to '
  +'build it. (see&nbsp;<font color="#0000ff">https://github.com/Steve--W/XIDE<'
  +'/font>&nbsp;and<font color="#0000ff">&nbsp;https://github.com/Steve--W/XCom'
  +'ponents</font>&nbsp;respectively)</p><h2><a id="DevelopmentRoadmap">Develop'
  +'ment Roadmap</a><br></h2><p>I have developed XIDE&nbsp; to support my ongoi'
  +'ng academic research projects. I have made the project open source in case '
  +'it should prove useful to anyone else. In particular, I hope its browser fi'
  +'rst approach, low installation overhead and easy learning curve will help t'
  +'o introduce the&nbsp; joys of Free Pascal and Lazarus to a wider audience.<'
  +'br></p><p>Those aspects of XIDE and XComponents that I use regularly are "t'
  +'ried and tested". Some aspects that are used less often may have more bugs,'
  +' and there are many aspects where it would be great to add new or improved '
  +'features but where I do not have the bandwidth to address at the moment. If'
  +'&nbsp; anyone wants to help out with any improvement to XIDE then their con'
  +'tribution will be most welcome.</p><p>(Some topics that spring to mind, fro'
  +'m a long list of potential improvements, are:-&nbsp; Broadening XIDE browse'
  +'r support beyond the Chrome compatible set, XIDE integration with Lazarus, '
  +'improving the wrapper for GPUJS or adding a drag and drop utility for const'
  +'ructing MatPlotLib data visualisations to make these Python libraries easil'
  +'y accessible to the Pascal community. )</p><h2><a id="Compatibility">Compat'
  +'ibility</a><br></h2><p>In desktop mode, XIDE is designed to run on platform'
  +'s supported by&nbsp; Lazarus, and optionally, the&nbsp; Chromium Embedded F'
  +'ramework and&nbsp; Python (i.e. most desktop platforms). If CEF or Python i'
  +'s not available then XIDE can still run but will then not support their spe'
  +'cialist features.&nbsp; Alternatively, Electron or Cordova and Crosswalk ca'
  +'n be used to provide a hybrid implementation of XIDE. This gives full Web c'
  +'onnectivity and CSS on a wide range of platforms but with a trade off in te'
  +'rms of size, speed and security.</p><p>In browser mode XIDE is targeting cl'
  +'osed user groups (where the browser can be specified) so it is only tested '
  ,'on recent versions of Chrome but it may also work on other browsers which u'
  +'se a Chrome engine. (e.g. the latest version of Microsoft Edge)&nbsp;</p><p'
  +'>Note that TheStyleDesigner is only available on the Browser versions as it'
  +' depends on CSS functionality.</p><p><br></p><hr id="null"><p></p><h2><a id'
  +'="DesigningaUserinterface">Designing a User interface</a><br></h2><h3><a id'
  +'="ResourceandInstanceTrees">Resource and Instance Trees</a><br></h3><p>XIDE'
  +' uses a very simple paradigm. Essentially, it consists of three elements.</'
  +'p><p></p><ol><li>&nbsp;A resources tree, showing the AvailableWidgets (visu'
  +'al and non visual)</li><li>&nbsp;A system design tree and object property i'
  +'nspector/editor</li><li>&nbsp;A layout panel showing a WYSIWYG version of t'
  +'he current page design.</li></ol><p></p> <p>The UI is built by pasting node'
  +'s from the resource tree to the system design tree. Each node has object pr'
  +'operties defined by a name/value pairs that can be edited using the object '
  +'inspector or referenced and or updated by run time code. Events are also av'
  +'ailable on each widget so that Pascal code can be attached to them using th'
  +'e built in code editor and compiler. Python scripts can also be called from'
  +' these event handlers.</p><h3><a id="AvailableWidgets">Available Widgets</a'
  +'><br></h3><p>The widgets listed in the resource tree include both UI and no'
  +'n visual components (the latter can be added to the root node of the UI des'
  +'ign tree).&nbsp;</p><h3><a id="ResponsiveDesign">Responsive Design</a><br><'
  +'/h3><p>XIDE supports a simple ResponsiveDesign layout paradigm which consis'
  +'ts of a Main page, Tab controls and Popups to define the constituent pages '
  +'in a UI design. Horizontal and Vertical layout boxes (together with associa'
  +'ted alignment properties) are then nested within these pages to control the'
  +' final layout of components on the page.</p><h3><a id="WritingApplicationCo'
  +'de">Writing Application Code</a><br></h3><p>XIDE uses an event driven model'
  +' where event handlers can be attached to pre-defined events triggered by ob'
  +'jects in the user interface. These procedures can be inspected and/or edite'
  +'d by using the object inspector to navigate to the required UI object then '
  +'pressing the ellipsis button to the right of the required event in its even'
  +'ts tab. This creates an entry for that event handler under the "Event Handl'
  +'ers" node in the code design tree. So once a handler has been added it can '
  +'then also be navigated to by selecting it in the code designer and pressing'
  +' the edit button.&nbsp;</p><h3><a id="PascalSyntax">Pascal Syntax</a><br></'
  +'h3><p>The PascalSyntax recognised by XIDE&nbsp;is that used by the Pas2JS v'
  +'ariant of Free Pascal. (<a href="http://wiki.freepascal.org/pas2js">http://'
  +'wiki.freepascal.org/pas2js</a>). A detailed description of the supported sy'
  +'ntax can be found here. (<a href="http://wiki.freepascal.org/pas2js#RTL">ht'
  +'tp://wiki.freepascal.org/pas2js#RTL</a>)</p><h3><a id="UnitStructure">Unit '
  +'Structure</a><br></h3><p>In addition to the event handler nodes, shared cod'
  +'e can be written by adding units directly to the code design tree as "Pasca'
  +'l Units" or "Python Scripts".&nbsp;&nbsp;</p><p>Functions and procedures&nb'
  +'sp; in the code nodes can be amended or deleted by selecting the node on th'
  +'e code design tree and pressing the "Edit" button which will bring up the c'
  +'ode editor screen as previously described for&nbsp; the event handler code.'
  +' After a Pascal unit has been compiled for the first time in a session, all'
  +' the procedures and functions declared in it are displayed as its child nod'
  +'es in the code design tree. Selecting one of these nodes and pressing the e'
  +'dit button below will navigate directly to that function. Alternatively, se'
  +'lecting a node and pressing "Code Search" will list all references to that '
  +'function or procedure allowing you to navigate directly to the most relevan'
  +'t reference.</p><h3><a id="Python">Python</a><br></h3><p>The Python syntax '
  +'used is version 3.8.&nbsp;</p><p>Python does not have a unit structure like'
  +' Pascal, however blocks of Python code can be added to the Code Designer tr'
  +'ee in the same way as Pascal units. The difference is that these will be ru'
  +'n&nbsp; when entering run mode. They are executed in the order they occur o'
  +'n the Code Designer tree and can contain initialisation, declarations and /'
  +' or&nbsp; any other valid executable Python Code.&nbsp;</p><p>To execute Py'
  +'thon code elsewhere, such as in an event handler, then simply invoke the "R'
  +'unPython(<i>......</i>)" procedure with the relevant python function call ('
  +'or code) as a string parameter,</p><p>A console output box is supplied so t'
  +'hat Python errors and print statements can be viewed. On the desktop, the c'
  +'opy of Python being used is the version installed on the host machine, see '
  +'the documentation for that system to review valid syntax, permissions etc. '
  ,'In the browser, the version of Python used is that supported by mozilla (se'
  +'e&nbsp;<a href="https://hacks.mozilla.org/2019/04/pyodide-bringing-the-scie'
  +'ntific-python-stack-to-the-browser/">https://hacks.mozilla.org/2019/04/pyod'
  +'ide-bringing-the-scientific-python-stack-to-the-browser/</a>)</p><p><b>Java'
  +'script</b></p><div style="color: rgb(29, 34, 40); font-family: &quot;times '
  +'new roman&quot;, &quot;new york&quot;, times, serif;">XIDE allows JavaScrip'
  +'t code to be embedded as an ASM block in your pascal code. It can also&nbsp'
  +'; use external JavaScript packages if you create a Pascal import unit for t'
  +'hem. This process can be simplified by using the Typescript library of&nbsp'
  +'; popular Javascript APIs. This is called definitely typed. (https://github'
  +'.com/DefinitelyTyped/DefinitelyTyped) and covers thousands of JavaScript li'
  +'braries.</div><div style="color: rgb(29, 34, 40); font-family: &quot;times '
  +'new roman&quot;, &quot;new york&quot;, times, serif;"><br></div><div style='
  +'"color: rgb(29, 34, 40); font-family: &quot;times new roman&quot;, &quot;ne'
  +'w york&quot;, times, serif;">The Pas2JS team have created a CGI tool (https'
  +'://www.freepascal.org/~michael/pas2js-demos/ts2pas/)&nbsp; available online'
  +' which allows you to type the name of a Javascript library you are interest'
  +'ed in.. If it is in DefinitelyTyped, then the name will appear in the list.'
  +' Selecting the correct file and pressing "Go" will convert the file for you'
  +' into a ready-made Pascal import unit. This is still being refined, but sho'
  +'uld work with most of the libraries in DefinitelyTyped. Fingers crossed, th'
  +'e libraries you are interested in are among them!</div><div style="color: r'
  +'gb(29, 34, 40); font-family: &quot;times new roman&quot;, &quot;new york&qu'
  +'ot;, times, serif; font-size: 13px;">.<br></div><hr id="null"><h3><a id="Ac'
  +'cessingUserinterfaceObjectsatRunTime">Accessing User interface Objects at R'
  +'un Time</a><br></h3><p>XIDE is designed to be a cross platform rapid applic'
  +'ation development system. In order to do this it uses a text based system d'
  +'escription tree (The System Design or Instance Tree) to reflect the state o'
  +'f a users program at all times. This is similar to the function of the Docu'
  +'ment Object Model (DOM) in standard web applications. All object properties'
  +' for nodes on this tree can be accessed and updated using the supplied get '
  +'and set calls (see below).</p> <h3><a id="TypesofAPICalls">Types of API Cal'
  +'ls</a><br></h3><p>In XIDE design mode the instance tree describing a users '
  +'project can be inspected manually using the Object Inspector. This allows t'
  +'he user to select any node on the tree and inspect and/or modify its proper'
  +'ties or event handlers as required. The XIDE&nbsp;API allows the same actio'
  +'ns to be available programmatically. The functions available fall into the '
  +'following types (and work in an identical manner in both Pascal and Python)'
  +' viz:-</p><p></p><ul><li>&nbsp;Dialog boxes</li><li>&nbsp;Get and/or set a '
  +'property value of a UI object</li><li>&nbsp;Save and load user selected dat'
  +'a to the clipboard or local storage</li><li>&nbsp;Copy or delete a UI compo'
  +'nent or move it to a new parent.</li><li>&nbsp;Show or hide a popup form.</'
  +'li><li>&nbsp;Show or hide a busy indicator.</li><li>&nbsp;get and set GPU p'
  +'arameters&nbsp;</li></ul><p></p><p>The detailed syntax for these function c'
  +'alls is appended below. Note that unless explicitly stated, all values are '
  +'strings.</p><h3><a id="AsynchronousCallsMultiThreadingandInitializationfunc'
  +'tions">Asynchronous Calls, Multi Threading and Initialization functions</a>'
  +'<br></h3><p>Many web calls issue requests that need to wait for a response '
  +'from a web service, database or other remote service provider. Similarly, w'
  +'hen starting another thread in parallel, the main thread will often need to'
  +' wait for such child threads to return the results of their work before it '
  +'can proceed. XIDE&nbsp;allows main event handlers to specify a "initalisati'
  +'on"function. This is a block of code which issues all such requests prior t'
  +'o running the main event code when they have all finished executing. See be'
  +'low for the detail syntax of the available calls.</p><p>Note however that a'
  +'ll such asynchronous calls first parameter is "e" the event context (automa'
  +'tically declared and populated by XIDE, behind the scenes, for every XIDE&n'
  +'bsp;event) from which they have been issued so they know where to return wi'
  +'thout requiring the user to enter complex boilerplate code.</p><h2><a id="L'
  +'istofXIDEspecificAPIprocedureandfunctioncalls">List of XIDE specific API pr'
  +'ocedure and function calls</a><br></h2> <p></p><h3><a id="Generalfunctions"'
  +'>General functions</a><br></h3><ul><li>procedure SetPropertyValue(nodeName,'
  +'propName,newValue:String);&nbsp;&nbsp;&nbsp; &nbsp;<font color="#0000ff">se'
  +'t a component property (string value)&nbsp;&nbsp;</font></li><li>function&n'
  ,'bsp; &nbsp;GetPropertyValue(nodeName,propName:String);&nbsp;<font color="#0'
  +'000ff">&nbsp; &nbsp;returns a component property value (as string)&nbsp;</f'
  +'ont></li><li>procedure SetPropertyValueIndexed(nodeName,propName:String;new'
  +'Value:TStringArray; x,y:integer);&nbsp;&nbsp; &nbsp;<font color="#0000ff">s'
  +'et a portion of a component array property</font>&nbsp;&nbsp;</li><li>proce'
  +'dure CopyToClip(str:String);&nbsp;&nbsp;<font color="#0000ff">&nbsp;copies '
  +'the given string to the clipboard&nbsp;</font></li><li>function&nbsp; &nbsp'
  +';CopyFromClip(e:TEventStatus):String;&nbsp;&nbsp;&nbsp;<font color="#0000ff'
  +'">CopyFromClip is an async function (required for browser use), so it must '
  +'be coded in the&nbsp;&nbsp;"Init" section of an event handler. The result h'
  +'ere is a blank string.&nbsp;&nbsp;&nbsp;The clipboard string is held in e.R'
  +'eturnString, which can be picked up in the&nbsp;&nbsp;&nbsp; &nbsp;"Main" s'
  +'ection of the event handler.</font></li><li>procedure ShowXForm(XFormID:Str'
  +'ing; modal:Boolean);&nbsp;&nbsp;<font color="#0000ff">&nbsp;opens a TXForm.'
  +' [note:"modal=false" currently only effective on desktop]&nbsp;</font></li>'
  +'<li>procedure CloseXForm(XFormID:String);&nbsp;&nbsp;<font color="#0000ff">'
  +'&nbsp;closes a TXForm.&nbsp;&nbsp;</font></li><li>procedure DoEvent(EventTy'
  +'pe,NodeId,myValue:String);&nbsp;<font color="#0000ff"> executes the event h'
  +'andler defined for the given event type and component.&nbsp;</font></li><li'
  +'>procedure MoveComponent(nodeId:string;NewParentId:string);&nbsp;&nbsp;<fon'
  +'t color="#0000ff">re-parents the given UI component&nbsp;</font></li><li>pr'
  +'ocedure CopyComponent(nodeId,NewParentId,NewName:string);&nbsp;<font color='
  +'"#0000ff">copies the given UI component and places the clone under the give'
  +'n parent&nbsp;</font></li><li>function&nbsp; &nbsp;DeleteComponent(nodeId:s'
  +'tring;ShowNotFoundMsg:Boolean=true):Boolean;&nbsp;&nbsp; <font color="#0000'
  +'ff">&nbsp;deletes the given UI component. Returns false if not done.&nbsp;<'
  +'/font></li><li>function&nbsp; &nbsp;UserSystemAsString():String;&nbsp; <fon'
  +'t color="#0000ff">Returns the string representation of the current user sys'
  +'tem (can be imported to XIDE via System&gt;Load)&nbsp;&nbsp;</font></li><li'
  +'>function&nbsp; &nbsp;LoadUserSystemString(SystemString:String);&nbsp;&nbsp'
  +';<font color="#0000ff">Imports a new user system to the XIDE framework (can'
  +' only be done in "Design" mode)&nbsp;</font></li><li>procedure ShowBusy(e:T'
  +'EventStatus);&nbsp;&nbsp;<font color="#0000ff">Shows the busy cursor&nbsp;S'
  +'howBusy is an async function (required for browser use), so it must be code'
  +'d in the&nbsp; "Init" section of an event handler.&nbsp; &nbsp; &nbsp; &nbs'
  +'p; &nbsp;</font></li><li>procedure HideBusy;&nbsp; &nbsp;<font color="#0000'
  +'ff">Hides the busy cursor&nbsp;</font>&nbsp;</li><li>procedure ProcessMessa'
  +'ges;&nbsp; <font color="#0000ff">&nbsp;Functional in Desktop execution only'
  +'.&nbsp; Executes a pascal Application.ProcessMessages statement.&nbsp;&nbsp'
  +';</font></li><li>procedure DebugStart;&nbsp; &nbsp;<font color="#0000ff">Fu'
  +'nctional in Browser execution only.&nbsp; Executes a Javascript "debugger;"'
  +' statement - starts the native browser debug facility.&nbsp;&nbsp;</font></'
  +'li><li>procedure RunPython(str:String);&nbsp;<font color="#0000ff">&nbsp;Ex'
  +'ecutes the given Python script&nbsp;</font></li><li>procedure PyodideLoadPa'
  +'ckage(nm:String);&nbsp;<font color="#0000ff">&nbsp;Functional in Browser ex'
  +'ecution only.&nbsp; Loads the requested Pyodide/python package, so that it '
  +'will be available for import.&nbsp;</font></li><li>function PyodidePackageL'
  +'oaded(nm:String):Boolean;&nbsp;<font color="#0000ff">&nbsp;Functional in Br'
  +'owser execution only.&nbsp; Returns true if the named package has been load'
  +'ed into the Pyodide environment.&nbsp;&nbsp;</font>&nbsp; &nbsp;</li></ul><'
  +'div contenteditable="true"><ul></ul><h3><a id="MessagesandDialogs">Messages'
  +' and Dialogs</a><br></h3><ul><li>procedure ShowMessage(msg:String);&nbsp; <'
  +'font color="#0000ff">&nbsp;displays a popup alert&nbsp;</font></li><li>func'
  +'tion&nbsp; &nbsp;Confirm(TextMessage:string):boolean;&nbsp;&nbsp;<font colo'
  +'r="#0000ff">displays a confirmation alert; returns true/false&nbsp;</font><'
  +'/li><li>function&nbsp; &nbsp;Prompt(TextMessage,promptString:string):string'
  +';&nbsp;&nbsp;&nbsp;<font color="#0000ff">displays an input box; returns use'
  +'r-entered string&nbsp;</font></li><li>procedure ConsoleLog(txt:String);&nbs'
  +'p; <font color="#0000ff">Writes a debug message to the console log&nbsp;&nb'
  +'sp;</font></li></ul><ul></ul><h3><a id="TXTablefunctions">TXTable functions'
  +'</a><br></h3><ul><li>procedure&nbsp; LoadTableFromExcelCopy(TableName,Copie'
  +'dString:String);&nbsp;&nbsp;<font color="#0000ff">Populate the given TXTabl'
  +'e component with a string in Excel format (eg. as copied from a spreadsheet'
  +')&nbsp;&nbsp;</font></li><li>procedure&nbsp; LoadTableFromNumArray(TableNam'
  ,'e,NumArray:T2DNumArray);&nbsp;&nbsp;<font color="#0000ff">Populate the give'
  +'n TXTable component from a 2D numeric array&nbsp;&nbsp;</font></li><li>func'
  +'tion&nbsp; &nbsp;GetTableDataArray(TableName:String;SkipHeader:Boolean):T2D'
  +'StringArray;&nbsp;&nbsp;<font color="#0000ff">&nbsp;Fetch the cells from th'
  +'e given TXTable component as a 2D string array&nbsp;&nbsp;</font></li><li>f'
  +'unction&nbsp; &nbsp;Array2DToString(arr:T2DNumArray):String;&nbsp; <font co'
  +'lor="#0000ff">&nbsp;Convert numeric 2D array to string form eg. [[...],...,'
  +'[...]]&nbsp;&nbsp;</font></li></ul><ul></ul><h3><a id="TXGPUCanvasfunctions'
  +'">TXGPU Canvas functions</a><br></h3><ul><li>function&nbsp; &nbsp;GetGPUPar'
  +'amNumValue(GPUName,pName:String):TNumArray;&nbsp;&nbsp;<font color="#0000ff'
  +'">For the given TXGPUCanvas component, returns the value of the named numer'
  +'ic parameter as an array&nbsp;</font></li><li>function&nbsp; &nbsp;GetGPUCo'
  +'nstIntValue(GPUName,pName:String):integer;&nbsp; <font color="#0000ff">&nbs'
  +'p;For the given TXGPUCanvas component, returns the value of the named integ'
  +'er parameter&nbsp;</font></li><li>procedure SetGPUParamNumValue(GPUName,pNa'
  +'me:String;pValue:TNumArray);&nbsp;&nbsp;<font color="#0000ff">For the given'
  +' TXGPUCanvas component, sets the value of the named numeric parameter as a '
  +'1-D array&nbsp;</font></li><li>procedure SetGPUParam2DNumValue(GPUName,pNam'
  +'e:String;pValue:T2DNumArray);&nbsp; &nbsp;<font color="#0000ff">For the giv'
  +'en TXGPUCanvas component, sets the value of the named numeric parameter as '
  +'a 2-D array&nbsp;</font></li><li>procedure SetGPUConstIntValue(GPUName,pNam'
  +'e:String;pValue:integer);&nbsp; &nbsp; <font color="#0000ff">For the given '
  +'TXGPUCanvas component, sets the value of the named integer parameter&nbsp;<'
  +'/font></li><li>function&nbsp; &nbsp;GetGPUPixelArray(GPUName:String):T3DNum'
  +'Array;&nbsp;&nbsp;<font color="#0000ff">&nbsp;Fetch the current Pixel array'
  +' for the given TXGPUCanvas component&nbsp;&nbsp;</font></li><li>function&nb'
  +'sp; &nbsp;GetGPUPixelArrayAsString(GPUName:String):String;&nbsp;&nbsp;<font'
  +' color="#0000ff">Fetch the current Pixel array in string format for the giv'
  +'en TXGPUCanvas component&nbsp;</font>&nbsp;</li><li>function&nbsp; &nbsp;Ge'
  +'tGPUStageArray(GPUName:String):T3DNumArray;&nbsp;&nbsp;&nbsp;<font color="#'
  +'0000ff"> Fetch the stage array (resulting from the non-graphical kernel sta'
  +'ck) for the given </font>TXGPUCanvas component&nbsp;&nbsp;</li><li>function'
  +'&nbsp; &nbsp;GetGPUStageArrayAsString(GPUName:String):String;&nbsp; &nbsp;<'
  +'font color="#0000ff">Fetch the stage array in string format for the given T'
  +'XGPUCanvas component&nbsp;&nbsp;</font></li></ul><ul></ul><ul></ul><ul></ul'
  +'><ul></ul><ul></ul><ul></ul><ul></ul><ul></ul><h3><a id="PythonOnly">Python'
  +' Only</a><br></h3><ul><li>function&nbsp; ShowPythonPlot(ImgName,fig)<font c'
  +'olor="#0000ff">&nbsp; In the given TXImage component, displays the contents'
  +' of fig (a matplotlib figure)&nbsp;</font></li></ul><hr id="null"><h2><a id'
  +'="TocreateacompositeComponent">To create a composite Component</a><br></h2>'
  +'<p></p><ol><li>Clear the system.</li><li>Build your widget in the normal wa'
  +'y (for example, a table, with a copy and a paste button, and click events c'
  +'oded).</li><li>Test the system.</li><li>In design mode, select System&gt;En'
  +'capsulate on the main menu.&nbsp; Provide a name for the composite componen'
  +'t (eg. "TableWithCopyPaste").</li><li>In the Resources Tree, under "Composi'
  +'tes", your new widget should now be listed.</li></ol><p></p><h3><a id="Tous'
  +'eacompositeComponent">To use a composite Component</a><br></h3><p></p><ol><'
  +'li>Build a new system in the normal way.</li><li>Select a composite compone'
  +'nt in the Resources Tree, and paste to the system in the normal way.&nbsp;<'
  +'/li></ol><p></p><p>The composite component will be listed in the Design Tre'
  +'e, but without its constituent components - only the enclosing element will'
  +' be shown. The composite component has two non-editable properties to note:'
  +'</p><p></p><ul><li>&nbsp; "CompositeType", which shows the name with which '
  +'the composite was originally created.</li><li>&nbsp; "SourceString", which '
  +'contains the definition of the sub-elements within the composite, for syste'
  +'m use.</li></ul><p></p><h3><a id="ToeditacompositeComponent">To edit a comp'
  +'osite Component</a><br></h3><p></p><ol><li>Clear the system.</li><li>Select'
  +' the composite resource in the Resource Tree, and press "Load". This will l'
  +'oad the composite as a system in design mode.</li><li>When your update is c'
  +'ompleted, save the composite again using System&gt;Encapsulate on the main '
  +'menu.</li></ol><p></p><p>NOTE: This will not update any instantiated copies'
  +' of your composite.&nbsp; To update instantiated copies, load the system(s)'
  +' containing them, then delete and re-paste the composite.</p><h3><a id="Top'
  +'assdataintoacompositeComponent">To pass data into a composite Component</a>'
  ,'<br></h3><p>By default, events within a composite element have no view of t'
  +'he containing system, and so cannot obtain data from it. So while building '
  +'a composite component, you can include a Composite Interface element (TXCom'
  +'positeIntf in the Resources Tree, under Non-Visual components).</p><p></p><'
  +'ol><li>Paste a composite interface element under the UIRootNode in the desi'
  +'gn tree.&nbsp;</li><li>In the object inspector Properties tab, press the "A'
  +'dd" button.&nbsp; This will create a new property for the interface.&nbsp;&'
  +'nbsp;</li><li>On the popup screen, enter the property name.</li><li>Use the'
  +' "Type" selector to specify whether the property is "Input" or "Output". Se'
  +'lect "Input".</li><li>Enter some brief text to explain to a user of your co'
  +'mposite what the purpose of this property is.</li><li>Press "Done".</li></o'
  +'l><p></p><p>The new property is now listed in the properties list for the i'
  +'nterface, and can be accessed from event code within the composite. Encapsu'
  +'late the composite component, and then paste it into a test system. Note th'
  +'at the object inspector for the instantiated composite component has a tab '
  +'page "Interface", in which your interface property is listed. An input prop'
  +'erty is editable here, or can be populated programmatically at run time.</p'
  +'><h3><a id="TogetdataoutofacompositeComponent">To get data out of a composi'
  +'te Component</a><br></h3><p>Events in the enclosing system have no view of '
  +'the sub-elements within a composite, and so cannot obtain property values d'
  +'irectly.&nbsp; For this purpose an "output" property is needed. As in the s'
  +'ection above, while editing the composite component, add an interface prope'
  +'rty, and set its type to "Output". When your composite is pasted into a con'
  +'taining system, the output property is listed in the Interface tab, but can'
  +'not be&nbsp; edited there.&nbsp; It is the responsibility of events within '
  +'the composite to set the property value.&nbsp;&nbsp;</p><h3><a id="Toaddaca'
  +'llablemethodtoacompositeComponent">To add a callable method to a composite '
  +'Component</a><br></h3><p>While editing your composite system in design mode'
  +', select your interface component (TXCompositeIntf) in the design tree.</p>'
  +'<p></p><ol><li>On the "Events" tab, press "Add" to create a new method.</li'
  +'><li>On the popup screen, enter the name of the method, and its type (selec'
  +'t "Read-Only").</li><li>Enter some brief text to explain to a user of your '
  +'composite what the purpose of this method is.</li><li>Press "Done".</li></o'
  +'l><p></p><p>The new method is now listed in the events list for the interfa'
  +'ce. Encapsulate the composite component, and then paste it into a test syst'
  +'em. Note that the object inspector for the instantiated composite component'
  +' has your method listed under "Events", but cannot be edited here. The encl'
  +'osing system can execute the method using the "DoEvent" built-in.</p><h3><a'
  +' id="ToaddaneditableEventHandlertoaCompositeComponent">To add an editable E'
  +'vent Handler to a Composite Component</a><br></h3><p>While editing your com'
  +'posite system in design mode, select your interface component (TXCompositeI'
  +'ntf) in the design tree.</p><p></p><ol><li>On the "Events" tab, press "Add"'
  +' to create a new method.</li><li>On the popup screen, enter the name of the'
  +' method, and its type (select "Editable").</li><li>Enter some brief text to'
  +' explain to a user of your composite what event within the composite will e'
  +'xecute it.</li><li>Press "Done".</li></ol><p></p><p>The new event handler i'
  +'s now listed in the events list for the interface, but code cannot be added'
  +' here. The composite system can execute the method using the "DoEvent" buil'
  +'t-in, for example on closing a form, or on changing a data table. Encapsula'
  +'te the composite component, and then paste it into a test system. Note that'
  +' the object inspector for the instantiated composite component has your eve'
  +'nt handler listed under "Events", and can be edited here, so that the user '
  +'of the composite component can create their own handler.</p><p><br></p><hr '
  +'id="null"><h2></h2><h2><a id="TheXIDEGPUJSWrapper">The XIDE GPUJS Wrapper</'
  +'a><br></h2><p>The Pascal code for the GPU is accessed as a property of a GP'
  +'U Canvas component which has been dropped onto the User Interface layout sc'
  +'reen and/or as a node on the Code designer tree.&nbsp; The Pascal GPU code '
  +'editor follows the same edit/compile cycle as for user code in the rest of '
  +'the system. The differences are that this is code for blocks of threads in '
  +'parallel. The code describes a single instruction multiple data (SIMD) appr'
  +'oach where all the threads run the same code with thread specific code refe'
  +'rencing "this.thread.x" , "this.thread.y" and "this.thread.z" to reflect th'
  +'eir position in the block of threads. Parameter names are declared using a '
  +'Paramlist property of the GPU canvas component and their transfer and run t'
  ,'ime execution is controlled by system calls described below. (N.B. paramete'
  +'rs need to be passed as arrays so even scalar parameters passed into the co'
  +'de need to be referenced as follows "myParam[0]" )<br></p><p>The Pascal GPU'
  +' code can daisy chain kernels. (Set the TXGPUCanvas property NumKernels&gt;'
  +'0) For each kernel in the chain its return value must be set to "MyValue". '
  +'The next kernel in the chain can then read all the thread return values fro'
  +'m the previous kernel by reading from "MyArray".The initial "MyArray" passe'
  +'d to the first kernel in the chain is set as a property ("InitStageData") o'
  +'f the GPU canvas and can have any x,y,z sizes as chosen by the user. The fi'
  +'nal&nbsp; &nbsp;kernel is the graphics display kernel where you set the r,g'
  +',b values as usual. The calculated data input to the graphics display kerne'
  +'l can also be accessed using either the "GetGPUStageArray" or "GetGPUStageA'
  +'rrayAsString" instructions;</p><h2><a id="MathsfunctionsavailableintheGPU">'
  +'Maths functions available in the GPU&nbsp;</a>&nbsp;code are as follows:-</'
  +'h2><p></p><ul><li>abs(a) sign(a) trunc(a) ceil(a) max(a,b) min(a,b)</li><li'
  +'>sin(a) cos(a) arcsin(a) arccos(a) arctan(a,b)</li><li>sqrt(a) power(a,b) l'
  +'n(a) log10(a) log2(a)&nbsp;</li></ul><h2><a id="LimitationsofcodingfortheGP'
  +'U">Limitations of coding for the GPU</a><br></h2><p>When coding in Pascal f'
  +'or the GPU, you should be aware that there are fundamental limitations on t'
  +'he constructs available. In particular:-</p><p></p><ul><li>All parameters p'
  +'assed into the GPU&nbsp; are real arrays (scalar parameters are real arrays'
  +' of length one)<br></li><li>You can read from but not write to any of these'
  +' array parameters</li><li>You cannot declare a local array</li><li>Each thr'
  +'ead returns a single real value</li><li>You cannot communicate with any oth'
  +'er thread (except by synchronising the results in a new kernel)</li><li>You'
  +' cannot use a Boolean type (use 0 or 1 instead)</li><li>You cannot use "var'
  +'" parameters in a function call</li><li>All function parameters must be a s'
  +'imple type</li><li>Nested function declarations do not follow normal (Pasca'
  +'l) scope rules</li><li>Loops are unrolled so you MUST SET the "<span style='
  +'"font-family: Verdana, Arial, sans-serif; font-size: 12px; white-space: now'
  +'rap;">MaxIterations"</span>&nbsp;parameter at a high enough value to reflec'
  +'t your algorithm''''s requirements</li><li>The number of threads in each ke'
  +'rnel are given by the KernelXDims, KernelYDims and Kernel ZDims properties '
  +'of the GPU Canvas and these MUST BE SET either manually or programatically '
  +'before activating the GPU.</li><li>The GPU is a Single Instruction Multiple'
  +' Data machine so branching in a thread does not jump over the code in the p'
  +'ath not taken,&nbsp; it idles in order to allow other threads to execute th'
  +'e code in that path if need be.&nbsp;</li><li>Debugging on the GPU is "prim'
  +'itive" the only way to do it when running on the hardware is to write out i'
  +'ntermediate results&nbsp; to the thread output value for selected threads w'
  +'hich you dedicate to providing diagnostic output.&nbsp;</li></ul><p><br></p'
  +'><p><br></p><p></p>'';'#13#10#13#10#13#10#13#10'{ TXIDEHelpForm }'#13#10#13
  +#10'{$ifndef JScript}'#13#10'procedure TXIDEHelpForm.FormCreate(Sender: TObj'
  +'ect);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'  HelpForm'
  +'Root:=FindDataNodeById(myNode,''HelpFormVBox1'','''',true);'#13#10#13#10'  '
  +'HelpHTMLText.SourceText:=BaseHTML;'#13#10#13#10'end;'#13#10#13#10'procedure'
  +' TXIDEHelpForm.FormActivate(Sender: TObject);'#13#10'begin'#13#10'end;'#13
  +#10#13#10'procedure TXIDEHelpForm.FormResize(Sender: TObject);'#13#10'begin'
  +#13#10'  DoFormResize(self, HelpFormVBox1);'#13#10'end;'#13#10#13#10'procedu'
  +'re TXIDEHelpForm.FormShow(Sender: TObject);'#13#10'begin'#13#10'  HelpHTMLT'
  +'ext.SourceText:=HelpHTMLText.SourceText;'#13#10'end;'#13#10'{$endif}'#13#10
  +#13#10#13#10'procedure TXIDEHelpForm.InitialiseonShow;'#13#10'begin'#13#10' '
  +' self.Top:=100;'#13#10'  self.Left:=150;'#13#10'  {$ifdef JScript}'#13#10' '
  +' // reset overview text AFTER the popup is rendered, otherwise actual heigh'
  +'t and width return 0'#13#10'  asm'#13#10'    var ob=this.HelpHTMLText;'#13
  +#10'    setTimeout(function(){pas.XHTMLText.ResetHTMLText(ob.NodeName,ob.Nam'
  +'eSpace); }, 200);'#13#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'end.'#13#10#13#10
]);
LazarusResources.Add('savedsystems','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit SavedSystems;'#13#10
  +#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13
  +#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, Nod'
  +'eUtils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, Grap'
  +'hics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, TypInfo, LazIDE'
  +'Intf,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'#13#10'  '
  +'{$else}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  XScrollBox, XVBox, X'
  +'HBox, XTree, XMemo, XTabControl, XButton, XLabel,'#13#10'  XEditBox, XCheck'
  +'Box, XHyperLink, XRadioBtns, XForm, XComboBox,'#13#10'  EventsInterface, XO'
  +'bjectInsp, XDataModel ;'#13#10#13#10'type'#13#10#13#10'  { TSavedSystemsFor'
  +'m }'#13#10#13#10'  TSavedSystemsForm = class(TXForm)'#13#10'    SavedSystem'
  +'sList: TXTree;'#13#10'    SavedSystemsVBox: TXVBox;'#13#10'    SavedSystems'
  +'Load: TXButton;'#13#10'    SavedSystemsBtns: TXHBox;'#13#10'    SavedSystem'
  +'sCancel: TXButton;'#13#10'    SavedSystemsDelete: TXButton;'#13#10'    Save'
  +'dSystemsSortBtn: TXButton;'#13#10'    {$ifndef JScript}'#13#10'    procedur'
  +'e FormCreate(Sender: TObject);'#13#10'    procedure FormResize(Sender: TObj'
  +'ect);'#13#10'    {$endif}'#13#10'    procedure PopulateFilesList(NamesList:'
  +'TStringList);'#13#10'    procedure SavedSystemsCancelHandleButtonClick(e: T'
  +'EventStatus;'#13#10'      nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'    procedure SavedSystemsDeleteHandleButtonClick(e: TEventStatus;'#13#10' '
  +'     nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure SavedSy'
  +'stemsLoadHandleButtonClick(e: TEventStatus;'#13#10'      nodeID: AnsiString'
  +'; myValue: AnsiString);'#13#10'    procedure SavedSystemsSortBtnHandleButto'
  +'nClick(e: TEventStatus; nodeID: AnsiString;'#13#10'      myValue: AnsiStrin'
  +'g);'#13#10#13#10'  public'#13#10'    procedure Initialise;'#13#10#13#10'  e'
  +'nd;'#13#10#13#10'var'#13#10'  SavedSystemsForm: TSavedSystemsForm;'#13#10'/'
  +'/  TopComponent:TControl;'#13#10#13#10'implementation'#13#10#13#10'{$R *.lf'
  +'m}'#13#10#13#10'{$ifndef JScript}'#13#10'//procedure TSavedSystemsForm.Form'
  +'Create(Sender: TObject);'#13#10'//begin'#13#10'//  myNode:=DoXFormCreated(s'
  +'elf);'#13#10'//end;'#13#10'//'#13#10'//procedure TSavedSystemsForm.FormResi'
  +'ze(Sender: TObject);'#13#10'//begin'#13#10'//  DoFormResize(self, SavedSyst'
  +'emsVBox);'#13#10'//end;'#13#10'//'#13#10#13#10'procedure TSavedSystemsForm.'
  +'FormCreate(Sender: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(s'
  +'elf);'#13#10'end;'#13#10#13#10'procedure TSavedSystemsForm.FormResize(Sende'
  +'r: TObject);'#13#10'begin'#13#10'  DoFormResize(self, SavedSystemsVBox);'#13
  +#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure TSavedSystemsForm.Save'
  +'dSystemsCancelHandleButtonClick('#13#10'  e: TEventStatus; nodeID: AnsiStri'
  +'ng; myValue: AnsiString);'#13#10'begin'#13#10'  TXForm(self).Showing:=''No'
  +''';'#13#10'end;'#13#10#13#10'function RemoveDate(NodeString:String):String;'
  +#13#10'var'#13#10'  i,j:integer;'#13#10'begin'#13#10'  i:=FoundString(NodeSt'
  +'ring,''      '');'#13#10'  if i>1 then'#13#10'  begin'#13#10'    for j:=1 t'
  +'o i-1 do'#13#10'      result:=result+NodeString[j];'#13#10'  end'#13#10'  e'
  +'lse'#13#10'    result:=NodeString;'#13#10'end;'#13#10#13#10'procedure TSave'
  +'dSystemsForm.SavedSystemsDeleteHandleButtonClick('#13#10'  e: TEventStatus;'
  +' nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  SysName,SysP'
  +'ath:String;'#13#10'begin'#13#10'  // Get SysName from the currently selecte'
  +'d item in SavedSystemsList'#13#10'  SysName:=RemoveDate(SavedSystemsList.Se'
  +'lectedNodeText);'#13#10'  SysPath:=SysName;'#13#10'  if SysName<>'''' then'
  +#13#10'  begin'#13#10'    if XIDEConfirm(''OK to delete stored system ''+Sys'
  +'Name+''?'') then'#13#10'    begin'#13#10'      {$ifndef JScript}'#13#10'   '
  +'   SysPath:=''SavedSystems/''+SysName;'#13#10'      {$endif}'#13#10'      C'
  +'learLocalStore( SysPath+''.xide'');'#13#10'      if SysName <> UIRootNode.G'
  +'etAttribute(''SystemName'',false).AttribValue then'#13#10'        DeleteLoc'
  +'alDB(SysName,true);'#13#10'      Initialise;'#13#10'    end;'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'procedure TSavedSystemsForm.SavedSystemsLoadHandleB'
  +'uttonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStrin'
  +'g);'#13#10'var'#13#10'  SysName:String;'#13#10'begin'#13#10'  // Get SysNam'
  +'e from the currently selected item in SavedSystemsList'#13#10'  SysName:=Re'
  +'moveDate(SavedSystemsList.SelectedNodeText);'#13#10'  if SysName<>'''' then'
  ,#13#10'  begin'#13#10'    OILoadSavedSystem(SysName);'#13#10'    TXForm(self'
  +').Showing:=''No'';'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TSavedS'
  +'ystemsForm.SavedSystemsSortBtnHandleButtonClick(e: TEventStatus;'#13#10'  n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'NamesList:TStrin'
  +'gList;'#13#10'begin'#13#10'  NamesList:=TStringList.Create;'#13#10'  if Sav'
  +'edSystemsSortBtn.Caption = ''Sort by Name'' then'#13#10'  begin'#13#10'    '
  +'// sort by name'#13#10'    DiscoverSavedFiles(''xide'',NamesList, ''Name'')'
  +';'#13#10'    SavedSystemsSortBtn.Caption := ''Sort by Date'';'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'    // sort by date'#13#10'    DiscoverS'
  +'avedFiles(''xide'',NamesList, ''Time'');'#13#10'    SavedSystemsSortBtn.Cap'
  +'tion := ''Sort by Name'';'#13#10'  end;'#13#10'  PopulateFilesList(NamesLis'
  +'t);'#13#10'end;'#13#10#13#10'procedure TSavedSystemsForm.PopulateFilesList('
  +'NamesList:TStringList);'#13#10'var'#13#10'TreeString:String;'#13#10'i:integ'
  +'er;'#13#10'begin'#13#10'  //Example Tree String = ''["myTreeName",["AAAAAA"'
  +',"BBBBB"],"CCCCC","DDDDDD",["EEEEE","FFFFF"],"GGGGG"]'';'#13#10'    TreeStr'
  +'ing:=''["Saved Systems"'';'#13#10#13#10'    for i:=0 to NamesList.count-1 d'
  +'o'#13#10'    begin'#13#10'      if NamesList[i]<>'''' then'#13#10'        T'
  +'reeString:=TreeString + '',"'' + NamesList[i] + ''"'';'#13#10'    end;'#13
  +#10'    TreeString:=TreeString + '']'';'#13#10'    SavedSystemsList.TreeData'
  +':=TreeString;'#13#10'end;'#13#10#13#10'procedure TSavedSystemsForm.Initiali'
  +'se;'#13#10'var'#13#10'  NamesList:TStringList;'#13#10'begin'#13#10'  // pop'
  +'ulate SavedSystemsList from stored data'#13#10'  NamesList:=TStringList.Cre'
  +'ate;'#13#10'  NamesList.Clear;'#13#10'  DiscoverSavedSystems(NamesList);'#13
  +#10'  PopulateFilesList(NamesList);'#13#10#13#10#13#10'  NamesList.Free;'#13
  +#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('stylesutils','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit StylesUtils;'#13#10#13
  +#10'{$ifdef Dll}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'int'
  +'erface'#13#10'uses Classes, Sysutils, StringUtils, NodeUtils, EventsInterfa'
  +'ce'#13#10' {$ifndef JScript}'#13#10' , Dialogs//,XTree'#13#10' {$else}'#13
  +#10' ,Math, contnrs, dateutils, rtlconsts, strutils, types, typinfo,'#13#10
  +' XTree, XComboBox, InterfaceTypes'#13#10' {$endif}'#13#10' ;'#13#10#13#10'/'
  +'/ Priority has four levels'#13#10'//   1) !important external rule'#13#10'/'
  +'/   2) !important internal rule'#13#10'//   3)  normal    external rule'#13
  +#10'//   4)  normal    internal rule'#13#10'// where user style rules are ge'
  +'nerated in an external style sheet and author style rules are inline'#13#10
  +#13#10'//Expanding logical functions using Domorgan''s law'#13#10'//   or...'
  +'.......   A, B, C {}'#13#10'//   and.........   ABC {}'#13#10'//   nor.....'
  +'....  :not(A):not(B):not(C) {}'#13#10'//   nand........  :not(A), :not(B), '
  +':not(C) {}'#13#10#13#10'// <sup>.....</sup>  and  <sub>.....</sub> tags def'
  +'ine superscript and subscript text - it is not done in style markup'#13#10
  +' procedure InitStyleTreeDisplay;'#13#10' Procedure SetCSSNodeTypes;'#13#10
  +' Procedure SetStyleOptions;'#13#10' procedure InitialiseStyleDesigner;'#13
  +#10' Procedure SetCSSEditorStyles;'#13#10' procedure  UpdateOrCreateStyleShe'
  +'et(StyleText,myStyleSheetTitle:string;pos:integer);'#13#10#13#10#13#10'{$if'
  +'ndef JScript}'#13#10'{$else}'#13#10#13#10'Var'#13#10'  DropTarget:string;'
  +#13#10'  PreviousDropTarget:string;'#13#10#13#10'//  SelectedStyleSheetNodeP'
  +'ointer:TStyleTreeNode ;'#13#10'  InlineCSSText,ExternalCSSText:string;'#13
  +#10'  StyleRootNode:TDataNode;'#13#10#13#10'  // these procedures are called'
  +' from the button event handlers'#13#10'  Function PasteSelectedStyleResourc'
  +'es(AllowDrop:Boolean;HoverOver:String;mute:Boolean;ValueObject:TNodeEventVa'
  +'lue):boolean;// this paste the selected style rescource to the style instan'
  +'ce tree'#13#10'  Procedure ValidateStyleTree;'#13#10'  Procedure DeleteStyl'
  +'eNode;'#13#10'  Procedure PopulateStyleEditor(editInsteadOfDropDown:boolean'
  +');'#13#10'  Procedure GenerateStyleSheets;'#13#10'  Procedure RefreshStyleS'
  +'heet(InternalStyleText,ExternalStyleText:string);'#13#10'  Function NotSyst'
  +'emClassName(TestString:String):Boolean;'#13#10'  procedure  RemoveStyleShee'
  +'t(myStyleSheetTitle:string);'#13#10#13#10#13#10'  // these are forward decl'
  +'arations'#13#10'  procedure InitialiseStyleResources;'#13#10'  Function Get'
  +'TypeFromString(instring:string):string;'#13#10'  function GetOptionType(SNo'
  +'deType:String):String;'#13#10'  function GetQualifierValue(instring:String)'
  +':string;'#13#10'  Procedure UpdateNodeQualifierField;'#13#10#13#10'{$endif}'
  +#13#10#13#10'var'#13#10'  StylesNode:TDataNode;'#13#10#13#10#13#10'implement'
  +'ation'#13#10'uses XObjectInsp;'#13#10#13#10'type'#13#10#13#10'  TCSSTreeNod'
  +'es = (All,Priority,Group,StyleResources,StyleSheet,StyleRule,StyleTargets,T'
  +'argetGrouping,_And_,_Or_,Not_And_,Not_Or_,TargetTypes,WidgetType,Numeric,TX'
  +'ProgressBar,TXNumericSlider,TXNumberSpinner,Text,TXLabel,TXHyperlink,TXEdit'
  +'Box,TXMemo,TXTable,Selectors,TXButton,TXCheckBox,TXRadioBtns,TXComboBox,TXT'
  +'ree,TXDatePicker,TXColorPicker,TXMainMenu,TXMenuItem,LayoutWidgets,TXHBox,T'
  +'XVBox,TXGroupBox,TXScrollBox,TXTabControl,TXTabSheet,TXForm,Identifier,Clas'
  +'sName,WidgetID,Relationship,ChildrenOf,DescendentsOf,SiblingsOf,State,Hover'
  +',Visited,Focused,StyleProperties,Widget,WidgetCorners,WidgetPadding,WidgetM'
  +'argin,WidgetBorder,WidgetBackground,Font,FontFamily,FontSize,FontColor,Font'
  +'BackgroundColor,FontWeight,FontStyle,TextDecor,Transformations,Rotate,Scale'
  +',Skew,States,Selectable,Cursor,Visibility,Effects,Transition,Filter,NotFoun'
  +'d);'#13#10#13#10'  TCSSTermList = Array of TStringList;'#13#10#13#10'var'#13
  +#10'  StyleOptions:Array of TStringList;'#13#10'  CSSTermList:TCSSTermList;'
  +#13#10#13#10'var'#13#10'  AllowChildren            : Set of TCSSTreeNodes;'
  +#13#10'  StyleSheetNodes          : Set of TCSSTreeNodes;'#13#10'  StyleRule'
  +'Nodes           : Set of TCSSTreeNodes;'#13#10'  ClassificationNodes      :'
  +' Set of TCSSTreeNodes;'#13#10'  TargetGroupingNodes      : Set of TCSSTreeN'
  +'odes;'#13#10'  RelationshipNodes        : Set of TCSSTreeNodes;'#13#10'  St'
  +'yletargetNodes         : Set of TCSSTreeNodes;'#13#10'  StylePropertyNodes '
  +'      : Set of TCSSTreeNodes;'#13#10'  EditableTargetNodes      : Set of TC'
  +'SSTreeNodes;'#13#10'  TargetNodesWithOptions   : Set of TCSSTreeNodes;'#13
  ,#10'  StyleRuleSelectors       : Set of TCSSTreeNodes;'#13#10#13#10'{$ifndef'
  +' JScript}'#13#10#13#10'{$else}'#13#10#13#10'Procedure Watch(instring:string'
  +');'#13#10'begin'#13#10'  setpropertyvalue(''WatchBox'',''ItemValue'',instri'
  +'ng)'#13#10'end;'#13#10#13#10#13#10'  Function GetTypeFromString(instring:st'
  +'ring):string;'#13#10'  var Namestringstart:integer;'#13#10'  begin'#13#10' '
  +'   //showmessage(''GetTypeFromString <''+instring+''<'');'#13#10'    instri'
  +'ng:=trim(instring);'#13#10'    //showmessage(''GetTypeFromString 2'');'#13
  +#10'    if      (LeftStr(instring,5) = ''(And)''   ) then GetTypeFromString:'
  +'=LeftStr(instring,5)'#13#10'    else if (LeftStr(instring,4) = ''(Or)''    '
  +') then GetTypeFromString:=LeftStr(instring,4)'#13#10'    else if (LeftStr(i'
  +'nstring,8) = ''Not(And)'') then GetTypeFromString:=LeftStr(instring,8)'#13
  +#10'    else if (LeftStr(instring,7) = ''Not(Or)'' ) then GetTypeFromString:'
  +'=LeftStr(instring,7)'#13#10'    else'#13#10'    begin'#13#10'      Namestri'
  +'ngstart:=Pos(''.'',instring);'#13#10'      if Namestringstart>0 then GetTyp'
  +'eFromString:=LeftStr(instring,Namestringstart-1)'#13#10'      else GetTypeF'
  +'romString:=instring ;'#13#10'    end;'#13#10'  end;'#13#10#13#10'Function s'
  +'tripOutQualifierInfo(instring:string):string;'#13#10'var outstr:string;'#13
  +#10'Qualifierstringstart,Qualifierstringend:integer;'#13#10'begin'#13#10'   '
  +' outstr:=instring;'#13#10'    if not(    (LeftStr(instring,5) = ''(And)''  '
  +' )'#13#10'            or (LeftStr(instring,4) = ''(Or)''    )'#13#10'      '
  +'      or (LeftStr(instring,8) = ''Not(And)'')'#13#10'            or (LeftSt'
  +'r(instring,7) = ''Not(Or)'' ) )'#13#10'    then'#13#10'    begin'#13#10'   '
  +'   Qualifierstringstart:=Pos(''('',instring);'#13#10'      Qualifierstringe'
  +'nd:=Pos('')'',instring);'#13#10'      if  ((Qualifierstringend-Qualifierstr'
  +'ingstart)>0)'#13#10'      then'#13#10'      begin'#13#10'        outstr:=Le'
  +'ftStr(instring,Qualifierstringstart-2)+Rightstr(instring,length(instring)-Q'
  +'ualifierstringend);'#13#10'      end;'#13#10'    end;'#13#10'    stripOutQu'
  +'alifierInfo:=outstr;'#13#10' end;'#13#10#13#10'Function GetName1(instring:s'
  +'tring):string;'#13#10'var outstr:string;'#13#10'markerPos:integer;'#13#10'b'
  +'egin'#13#10'    outstr:=instring;'#13#10'    markerPos:=RPos(''.'',instring'
  +');'#13#10'    outstr:=Rightstr(instring,length(instring)-markerPos+1);'#13
  +#10'    //showmessage(''GetName1 found ''+outstr+'' from ''+instring);'#13#10
  +'    GetName1:=outstr;'#13#10' end;'#13#10#13#10'function GetQualifierValue('
  +'instring:String):string;'#13#10'var'#13#10'  slist:TStringList;'#13#10'  i:'
  +'integer;'#13#10'  markerPos1, markerPos2:integer;'#13#10'  str:String;'#13
  +#10'begin'#13#10'  slist:=TStringList.Create;'#13#10'  slist.StrictDelimiter'
  +':=true;'#13#10'  slist.Delimiter:=''.'';'#13#10'  slist.LineBreak:=''.'';'
  +#13#10'  slist.SkipLastLineBreak:=true;'#13#10'  slist.Text:=instring;'#13#10
  +#13#10'  // if the list has only 2 elements, then those are the type, and th'
  +'e name.'#13#10'  // otherwise, the first element is the type, and the last '
  +'is the name.'#13#10'  // the ''middle'' elements concatenate back together '
  +'to give the qualifier string.'#13#10#13#10'  // NEW: 2 elements should now '
  +'be type.value.  (there is no name)'#13#10#13#10'  str:='''';'#13#10'  if sl'
  +'ist.count>2 then'#13#10'  begin'#13#10'    // old data...there was a ''name'
  +'''. Remove it.'#13#10'    str:=slist.Text;'#13#10'    if str[length(str)]<>'
  +''')'' then'#13#10'      slist.Delete(slist.count-1);'#13#10'  end;'#13#10' '
  +' if slist.count>=2 then'#13#10'  begin'#13#10'    slist.Delete(0);'#13#10' '
  +'   str:=slist.Text;'#13#10'    //asm console.log(''str=>''+str+''<''); end;'
  +#13#10'    if (length(str)>0) then'#13#10'    begin'#13#10'      // remove t'
  +'railing delimiter (.)'#13#10'      if str[length(str)]=''.'' then'#13#10'  '
  +'      Delete(str,length(str),1);'#13#10'      // remove parentheses around '
  +'the qualifier value'#13#10'      if str[1]=''('' then'#13#10'        Delete'
  +'(str,1,1);'#13#10'      if str[length(str)]='')'' then'#13#10'        Delet'
  +'e(str,length(str),1);'#13#10'    end;'#13#10#13#10'  end;'#13#10#13#10'  re'
  +'sult:=str;'#13#10#13#10'  slist.Free;'#13#10'end;'#13#10#13#10#13#10'Proced'
  +'ure RefreshStyleSheet(InternalStyleText,ExternalStyleText:string);'#13#10'v'
  +'ar indirectExternalStyleText:string;'#13#10'begin'#13#10'    if (length(tri'
  +'m(InternalStyleText))>0) then'#13#10'      UpdateOrCreateStyleSheet(Interna'
  +'lStyleText,''myInternalStyleSheet'',-1)'#13#10'    else'#13#10'      Remove'
  +'StyleSheet(''myInternalStyleSheet'');'#13#10'    if (length(trim(ExternalSt'
  +'yleText))>0)'#13#10'    then'#13#10'    begin'#13#10'      RemoveStyleSheet'
  +'(''myExternalStyleSheet'');'#13#10'      asm'#13#10'      var link = docume'
  +'nt.createElement(''link'');'#13#10'      link.id=''myExternalStyleSheet'';'
  +#13#10'      link.rel = ''stylesheet'';'#13#10'      link.href = ''data:text'
  ,'/css;charset=UTF-8,'' + encodeURIComponent(ExternalStyleText);'#13#10'     '
  +' document.getElementsByTagName(''head'')[0].appendChild(link);'#13#10'     '
  +' end;'#13#10'    end'#13#10'    else'#13#10'      RemoveStyleSheet(''myExte'
  +'rnalStyleSheet'');'#13#10'end;'#13#10#13#10'Procedure DeleteStyleNode;'#13
  +#10'var SelectedNodeId, ParentNodeId, NodeText, SNodeType:string;'#13#10'beg'
  +'in'#13#10'  SelectedNodeId:=XTree.TXTree(StylesNode).SelectedNodeId;'#13#10
  +'  ParentNodeId:=XTree.TXTree(StylesNode).GetParentOfNode(SelectedNodeId);'
  +#13#10'  NodeText:=XTree.TXTree(StylesNode).SelectedNodeText;'#13#10'  SNode'
  +'Type:=GetTypeFromString(NodeText);'#13#10'  if (SNodeType=''StyleTargets'')'
  +#13#10'  or (SNodeType=''StyleProperties'')'#13#10'  or (SNodeType=''Priorit'
  +'y'')'#13#10'  or (SNodeType=''State'')'#13#10'  or (SNodeType=''Group'')'#13
  +#10'  or (SNodeType=''StyleSheet'')'#13#10'  then'#13#10'    showmessage(''T'
  +'his node cannot be deleted'')'#13#10'  else'#13#10'  begin'#13#10'    // us'
  +'e DeleteSelectedNode to remove the visible tree node, and rebuild TreeData'
  +#13#10'    XTree.TXTree(StylesNode).DeleteSelectedNode;'#13#10'    if Parent'
  +'NodeId<>'''' then'#13#10'      XTree.TXTree(StylesNode).selectedNodeId:=Par'
  +'entNodeId;'#13#10#13#10'    PopulateStyleEditor(false);'#13#10'  end;'#13#10
  +'end;'#13#10#13#10#13#10'  Procedure ValidateStyleTree;'#13#10'  begin'#13#10
  +'//https://www.w3.org/TR/CSS22/selector.html'#13#10#13#10'    // check all l'
  +'ogical groups and relationship nodes have at least one child.'#13#10'    //'
  +' check that classnames and ID values exist in the system.'#13#10'    // tra'
  +'nsition can only work with targets of hover, selected, and visited.'#13#10
  +'    // check that there is at least one style target and one style property'
  +'.'#13#10'    // check that relationship qualifiers only have one child'#13
  +#10'    // :matches() cannot be nested   :-webkit-any(a, b)'#13#10'//The ID '
  +'selector.......................    #ID'#13#10'//The Class Selector.........'
  +'............   .ClassName'#13#10'//type and class......................... '
  +'  Div.Classname'#13#10'//"or" group.............................   #ID , .C'
  +'lassname  , Div.Classname'#13#10'//"and" group............................ '
  +'  a . b'#13#10'//parentheses............................   : matches()     '
  +'n.b. cannot be nested   :-webkit-any(a, b)'#13#10'// logical inverse.......'
  +'................   :not()  nb cannot be nested and only takes a simple sele'
  +'ctor'#13#10#13#10'//  A . B = B . A'#13#10'//  A + B = B + A'#13#10#13#10'/'
  +'/  A(B + C)        =  A.B + A.C      // OR node child of an AND node'#13#10
  +'//  (A + B).(A + C) =  A + B . C      // OR node child of an AND node (term'
  +' in common)'#13#10'//  A(B.C)          =  A . B . C      // AND node child '
  +'of an AND node'#13#10'//  A + (B + C)     =  A + B + C      // OR node chil'
  +'d of an OR node'#13#10'//  A + (B.C)       =  A.B + A.C      // AND node ch'
  +'ild of an OR  node'#13#10#13#10'//  A . 0       = 0'#13#10'//  A . not(A)  '
  +'= 0'#13#10'//  A + not(A)  = 1'#13#10'//  A + 1       = 1'#13#10'//  A + 0 '
  +'      = A'#13#10'//  A . 1       = A'#13#10'//  A + A       = A'#13#10'//  '
  +'A . A       = A'#13#10'//  A + (A.B)   = A'#13#10'//  A(A + B)    = A'#13#10
  +'//  not(not(A)) = A'#13#10#13#10'//  not(A+B)    = not(A) . not(B)'#13#10'/'
  +'/  not(A.B)    = not(A) + not(B)'#13#10#13#10'//a:hover MUST come after a:l'
  +'ink and a:visited in the CSS definition in order to be effective! a:active '
  +'MUST come after a:hover in the CSS definition in order to be effective! Pse'
  +'udo-class names are not case-sensitive.'#13#10#13#10#13#10'end;'#13#10#13#10
  +#13#10'  Function getqualifierdefault(SelectedStyleSheetNodeType:string):str'
  +'ing;'#13#10'  var i:integer;'#13#10'      temp:string;'#13#10'      tempstr'
  +'inglist:tstringlist;'#13#10'  begin'#13#10'     temp:='''';'#13#10'     for'
  +' i:= 0 to length( StyleOptions)-1 do'#13#10'     begin'#13#10'       tempst'
  +'ringlist:=StyleOptions[i];'#13#10'       if SelectedStyleSheetNodeType=temp'
  +'stringlist[0]'#13#10'       then temp:=tempstringlist[3];'#13#10'     end;'
  +#13#10'     getqualifierdefault:=temp;'#13#10'  end;'#13#10#13#10'  Function'
  +' getqualifierType(SelectedStyleSheetNodeType:string):string;'#13#10'  var i'
  +':integer;'#13#10'      temp:string;'#13#10'      tempstringlist:tstringlist'
  +';'#13#10'  begin'#13#10'     temp:='''';'#13#10'     for i:= 0 to length( S'
  +'tyleOptions)-1 do'#13#10'     begin'#13#10'       tempstringlist:=StyleOpti'
  +'ons[i];'#13#10'       if SelectedStyleSheetNodeType=tempstringlist[0]'#13#10
  +'       then'#13#10'       begin'#13#10'         temp:=tempstringlist[2];'#13
  +#10'         //showmessage(''found ''+temp+'' in SelectedStyleSheetNodeType'
  +''');'#13#10'       end;'#13#10'     end;'#13#10'      getqualifiertype:=tem'
  +'p;'#13#10'  end;'#13#10#13#10'function NotSystemClassName(TestString:String'
  +'):Boolean;'#13#10'begin'#13#10'    if ((TestString<>''modal-background'')'
  ,#13#10'        and(TestString<>''modal-content'')'#13#10'        and(TestStr'
  +'ing<>''vbox'')'#13#10'        and(TestString<>''vboxNoStretch'')'#13#10'   '
  +'     and(TestString<>''vboxNoFlex'')'#13#10'        and(TestString<>''hbox'
  +''')'#13#10'        and(TestString<>''hboxNoStretch'')'#13#10'        and(Te'
  +'stString<>''AlignmentCentre'')'#13#10'        and(TestString<>''AlignmentRi'
  +'ght'')'#13#10'        and(TestString<>''AlignmentLeft'')'#13#10'        and'
  +'(TestString<>''AlignmentLeftContainer'')'#13#10'        and(TestString<>''A'
  +'lignmentTop'')'#13#10'        and(TestString<>''AlignmentBottom'')'#13#10' '
  +'       and(TestString<>''menu'')'#13#10'        and(TestString<>''menuItem'
  +''')'#13#10'        and(TestString<>''menuBar'')'#13#10'        and(TestStri'
  +'ng<>''highlight-border'')'#13#10'        and(TestString<>''normal-border'')'
  +#13#10'        and(TestString<>''no-border'')'#13#10'        and(TestString<'
  +'>''textAreaBorder'')'#13#10'        and(TestString<>''TabPage'')'#13#10'   '
  +'     and(TestString<>''TabButton'')'#13#10'        and(TestString<>''TabBut'
  +'tonDiv'')'#13#10'        and(TestString<>''hasChildren'')'#13#10'        an'
  +'d(TestString<>''noChildren'')'#13#10'        and(TestString<>''widgetinner'
  +'''))'#13#10'     then NotSystemClassName:=true'#13#10'     else NotSystemCl'
  +'assName:=false;'#13#10'end;'#13#10#13#10#13#10'Function ResourceNodeSetIDOf'
  +'(Snodename:string;quiet:boolean):TCSSTreeNodes;'#13#10'var nodeID:TCssTreeN'
  +'odes;'#13#10'begin'#13#10'  nodeID :=NotFound;'#13#10'  if  Snodename<>'''''
  +' then'#13#10'  begin'#13#10'    if Snodename =''Priority'' then nodeID :=Pr'
  +'iority'#13#10'    else if Snodename =''State'' then nodeID :=State'#13#10' '
  +'   else if Snodename =''Group'' then nodeID :=Group'#13#10'    else if Snod'
  +'ename =''StyleResources'' then nodeID := StyleResources'#13#10'    else if '
  +'Snodename =''StyleSheet'' then nodeID := StyleSheet'#13#10'    else if Snod'
  +'ename =''StyleRule'' then nodeID := StyleRule'#13#10'    else if Snodename '
  +'=''StyleTargets'' then nodeID := StyleTargets'#13#10'    else if Snodename '
  +'=''TargetGrouping'' then nodeID := TargetGrouping'#13#10'    else if Snoden'
  +'ame =''(And)'' then nodeID := _And_'#13#10'    else if Snodename =''(Or)'' '
  +'then nodeID := _Or_'#13#10'    else if Snodename =''Not(And)'' then nodeID '
  +':= Not_And_'#13#10'    else if Snodename =''Not(Or)'' then nodeID := Not_Or'
  +'_'#13#10'    else if Snodename =''TargetTypes'' then nodeID := TargetTypes'
  +#13#10'    else if Snodename =''WidgetType'' then nodeID := WidgetType'#13#10
  +'    else if Snodename =''Numeric'' then nodeID := Numeric'#13#10'    else i'
  +'f Snodename =''TXProgressBar'' then nodeID := TXProgressBar'#13#10'    else'
  +' if Snodename =''TXNumericSlider'' then nodeID := TXNumericSlider'#13#10'  '
  +'  else if Snodename =''TXNumberSpinner'' then nodeID := TXNumberSpinner'#13
  +#10'    else if Snodename =''Text'' then nodeID := Text'#13#10'    else if S'
  +'nodename =''TXLabel'' then nodeID := TXLabel'#13#10'    else if Snodename ='
  +'''TXHyperlink'' then nodeID := TXHyperlink'#13#10'    else if Snodename ='''
  +'TXEditBox'' then nodeID := TXEditBox'#13#10'    else if Snodename =''TXMemo'
  +''' then nodeID := TXMemo'#13#10'    else if Snodename =''TXTable'' then nod'
  +'eID := TXTable'#13#10'    else if Snodename =''Selectors'' then nodeID := S'
  +'electors'#13#10'    else if Snodename =''TXButton'' then nodeID := TXButton'
  +#13#10'    else if Snodename =''All'' then nodeID := All'#13#10'    else if '
  +'Snodename =''TXCheckBox'' then nodeID := TXCheckBox'#13#10'    else if Snod'
  +'ename =''TXRadioBtns'' then nodeID := TXRadioBtns'#13#10'    else if Snoden'
  +'ame =''TXComboBox'' then nodeID := TXComboBox'#13#10'    else if Snodename '
  +'=''TXTree'' then nodeID := TXTree'#13#10'    else if Snodename =''TXDatePic'
  +'ker'' then nodeID := TXDatePicker'#13#10'    else if Snodename =''TXColorPi'
  +'cker'' then nodeID := TXColorPicker'#13#10'    else if Snodename =''TXMainM'
  +'enu'' then nodeID := TXMainMenu'#13#10'    else if Snodename =''TXMenuItem'
  +''' then nodeID := TXMenuItem'#13#10'    else if Snodename =''LayoutWidgets'
  +''' then nodeID := LayoutWidgets'#13#10'    else if Snodename =''TXHBox'' th'
  +'en nodeID := TXHBox'#13#10'    else if Snodename =''TXVBox'' then nodeID :='
  +' TXVBox'#13#10'    else if Snodename =''TXGroupBox'' then nodeID := TXGroup'
  +'Box'#13#10'    else if Snodename =''TXScrollBox'' then nodeID := TXScrollBo'
  +'x'#13#10'    else if Snodename =''TXTabControl'' then nodeID := TXTabContro'
  +'l'#13#10'    else if Snodename =''TXTabSheet'' then nodeID := TXTabSheet'#13
  +#10'    else if Snodename =''TXForm'' then nodeID := TXForm'#13#10'    else '
  +'if Snodename =''Identifier'' then nodeID := Identifier'#13#10'    else if S'
  +'nodename =''ClassName'' then nodeID := ClassName'#13#10'    else if Snodena'
  +'me =''WidgetID'' then nodeID := WidgetID'#13#10'    else if Snodename =''Re'
  +'lationship'' then nodeID := Relationship'#13#10'    else if Snodename =''Ch'
  ,'ildrenOf'' then nodeID := ChildrenOf'#13#10'    else if Snodename =''Descen'
  +'dentsOf'' then nodeID := DescendentsOf'#13#10'    else if Snodename =''Sibl'
  +'ingsOf'' then nodeID := SiblingsOf'#13#10'    else if Snodename =''State'' '
  +'then nodeID := State'#13#10'    else if Snodename =''Hover'' then nodeID :='
  +' Hover'#13#10'    else if Snodename =''Visited'' then nodeID := Visited'#13
  +#10'    else if Snodename =''Focused'' then nodeID := Focused'#13#10'    els'
  +'e if Snodename =''StyleProperties'' then nodeID := StyleProperties'#13#10' '
  +'   else if Snodename =''Widget'' then nodeID := Widget'#13#10'    else if S'
  +'nodename =''WidgetCorners'' then nodeID := WidgetCorners'#13#10'    else if'
  +' Snodename =''WidgetPadding'' then nodeID := WidgetPadding'#13#10'    else '
  +'if Snodename =''WidgetMargin'' then nodeID := WidgetMargin'#13#10'    else '
  +'if Snodename =''WidgetBorder'' then nodeID := WidgetBorder'#13#10'    else '
  +'if Snodename =''WidgetBackground'' then nodeID := WidgetBackground'#13#10' '
  +'   else if Snodename =''Font'' then nodeID := Font'#13#10'    else if Snode'
  +'name =''FontFamily'' then nodeID := FontFamily'#13#10'    else if Snodename'
  +' =''FontSize'' then nodeID := FontSize'#13#10'    else if Snodename =''Font'
  +'Color'' then nodeID := FontColor'#13#10'    else if Snodename =''FontBackgr'
  +'oundColor'' then nodeID := FontBackgroundColor'#13#10'    else if Snodename'
  +' =''FontWeight'' then nodeID := FontWeight'#13#10'    else if Snodename ='''
  +'FontStyle'' then nodeID := FontStyle'#13#10'    else if Snodename =''TextDe'
  +'cor'' then nodeID := TextDecor'#13#10'    else if Snodename =''Transformati'
  +'ons'' then nodeID := Transformations'#13#10'    else if Snodename =''Rotate'
  +''' then nodeID := Rotate'#13#10'    else if Snodename =''Scale'' then nodeI'
  +'D := Scale'#13#10'    else if Snodename =''Skew'' then nodeID := Skew'#13#10
  +'    else if Snodename =''States'' then nodeID := States'#13#10'    else if '
  +'Snodename =''Selectable'' then nodeID := Selectable'#13#10'    else if Snod'
  +'ename =''Cursor'' then nodeID := Cursor'#13#10'    else if Snodename =''Vis'
  +'ibility'' then nodeID := Visibility'#13#10'    else if Snodename =''Effects'
  +''' then nodeID := Effects'#13#10'    else if Snodename =''Transition'' then'
  +' nodeID := Transition'#13#10'    else if Snodename =''Filter'' then nodeID '
  +':= Filter'#13#10'    else if (quiet = false) then showmessage(''node name >'
  +'''+Snodename+''< not found'');'#13#10'  end;'#13#10'  ResourceNodeSetIDOf:='
  +' nodeID;'#13#10'end;'#13#10#13#10#13#10'  Procedure LocalShowMessage( var D'
  +'ropAllowed:boolean;mute:boolean;mymessage:string);'#13#10'  begin'#13#10'  '
  +'  DropAllowed :=false;'#13#10'    if mute=false'#13#10'    then ShowMessage'
  +'(mymessage)'#13#10'    else watch(mymessage);'#13#10'  end;'#13#10#13#10#13
  +#10#13#10'  Function PasteSelectedStyleResources(AllowDrop:Boolean;HoverOver'
  +':String;mute:Boolean;ValueObject:TNodeEventValue):boolean;'#13#10'  //if mu'
  +'te=true then nodes are not added or alerts sent to the user it just tests i'
  +'f it is ok to drop on this node'#13#10'  var'#13#10'    SelectedStyleSheetN'
  +'odeText,SelectedStyleSheetNodeId:string;'#13#10'    SNodeType,RNodeType:str'
  +'ing;'#13#10'      Qualifier,RuleNodeId,NewNodeId,ANodeId:String;'#13#10'   '
  +'   DropIsAllowed:boolean;'#13#10'  begin'#13#10'      DropIsAllowed:=true;'
  +#13#10'      RNodeType:=GetTypeFromString(trim(getPropertyValue(''StyleResou'
  +'rces'',''SelectedNodeText'')));'#13#10'      //if AllowDrop then showmessag'
  +'e(''RNodeType=''+RNodeType);'#13#10'      asm'#13#10'        SelectedStyleS'
  +'heetNodeId=ValueObject.myNode.id;'#13#10'        //if (AllowDrop==true) {al'
  +'ert(''SelectedStyleSheetNodeId=''+SelectedStyleSheetNodeId);}'#13#10'      '
  +'  var ob=document.getElementById(ValueObject.myNode.id);'#13#10'        if '
  +'(ob!=null) {'#13#10'          // make sure the nodeid is the ''DETAILS'' el'
  +'ement'#13#10'          if (ob.tagName==''SUMMARY'') {'#13#10'            va'
  +'r summ=ob;'#13#10'            SelectedStyleSheetNodeId=summ.parentNode.id;}'
  +#13#10'          else summ=ob.getElementsByTagName(''SUMMARY'')[0];'#13#10' '
  +'         }'#13#10'          else {alert(''SelectedStyleSheetNodeId ''+Selec'
  +'tedStyleSheetNodeId+'' not found''); }'#13#10#13#10'        SelectedStyleSh'
  +'eetNodeText=summ.innerHTML;'#13#10'      end;'#13#10#13#10'      SNodeType:'
  +'=GetTypeFromString(SelectedStyleSheetNodeText);'#13#10'      SelectedStyleS'
  +'heetNodeText:=stripOutQualifierInfo(SelectedStyleSheetNodeText);'#13#10'   '
  +'   //if AllowDrop then showmessage(''>''+RNodeType +''<    >''+SNodeType+'''
  +'<'');'#13#10'      //EditAttributeValue(''WatchBox'','''',''ItemValue'',''>'
  +'''+RNodeType +''<    >''+SNodeType+''<'');'#13#10'      //result:=false;'#13
  +#10'      //EXIT;'#13#10#13#10'      if not(ResourceNodeSetIDOf(SNodeType,fa'
  +'lse )  in AllowChildren ) then'#13#10'        LocalShowMessage( DropIsAllow'
  +'ed,mute,''This style tree node cannot have children'')'#13#10'      else if'
  ,' SNodeType =''Priority'' then'#13#10'        LocalShowMessage( DropIsAllowe'
  +'d,mute,''Priority options can be edited, but cannot have children'')'#13#10
  +'      else if SNodeType ='''' then'#13#10'        LocalShowMessage( DropIsA'
  +'llowed,mute,''Select a Style resource before pasting'')'#13#10'      else i'
  +'f SNodeType ='''' then'#13#10'        LocalShowMessage( DropIsAllowed,mute,'
  +'''Select a StyleSheet node before pasting'')'#13#10'      else if (SNodeTyp'
  +'e =''StyleProperties'')'#13#10'      then'#13#10'      begin'#13#10'       '
  +'   if  (ResourceNodeSetIDOf(RNodeType,false) in StylePropertyNodes )'#13#10
  +'          then'#13#10'          begin'#13#10'             if (AllowDrop =tr'
  +'ue) then'#13#10'               //!! assumes the selected node is the parent'
  +#13#10'               NewNodeId:=XTree.TXTree(StylesNode).InsertNewChildNode'
  +'(RNodeType+''.''+''(''+getqualifierdefault(RNodeType)+'')'');'#13#10'      '
  +'    end'#13#10'          else LocalShowMessage( DropIsAllowed,mute,''Only S'
  +'tyle property types can be added to a set of style property nodes. (selecte'
  +'d type is ''+RNodeType+'')'');'#13#10'      end'#13#10'      else'#13#10'  '
  +'    begin'#13#10'        if (SNodeType =''StyleRule'') then'#13#10'        '
  +'  LocalShowMessage( DropIsAllowed,mute,''You can only add the the propertie'
  +'s and targets of a style rule - not to the style rule itself'')'#13#10'    '
  +'    else if (SNodeType =''StyleSheet'')'#13#10'        then'#13#10'        '
  +'begin'#13#10'          if (RNodeType <>''StyleRule'') then'#13#10'         '
  +'   LocalShowMessage( DropIsAllowed,mute,''Only a StyleRule can be added to '
  +'the StyleSheet node'')'#13#10'          else'#13#10'          begin'#13#10
  +'            Qualifier:='' '';//prompt( ''Please name this Style Rule :-'', '
  +'DateTimeToStr(Now));'#13#10'            if (AllowDrop =true) then'#13#10'  '
  +'          begin'#13#10'              //!! assumes root node has been select'
  +'ed'#13#10'              NewNodeId:=XTree.TXTree(StylesNode).InsertNewChildN'
  +'ode(''StyleRule'');'#13#10'              //now need to select this node'#13
  +#10'              //TXTree(StylesNode).SelectedNodeId:=NewNodeId+''Summary'''
  +';'#13#10'              XTree.TXTree(StylesNode).SelectedNodeId:=NewNodeId;'
  +#13#10'              // and insert the standard set of child nodes'#13#10'  '
  +'            XTree.TXTree(StylesNode).InsertNewChildNode(''StyleTargets'');'
  +#13#10'              XTree.TXTree(StylesNode).InsertNewChildNode(''StyleProp'
  +'erties'');'#13#10'              ANodeId:=XTree.TXTree(StylesNode).InsertNew'
  +'ChildNode(''Priority.(''+getqualifierdefault(''Priority'')+'')'');'#13#10' '
  +'             XTree.TXTree(StylesNode).InsertNewChildNode(''State.(''+getqua'
  +'lifierdefault(''State'')+'')'');'#13#10'              XTree.TXTree(StylesNo'
  +'de).InsertNewChildNode(''Group.(''+getqualifierdefault(''Group'')+'')'');'
  +#13#10'            end;'#13#10'          end;'#13#10'        end'#13#10'    '
  +'    else'#13#10'        begin'#13#10'          //showmessage(''SelectedStyl'
  +'eSheetNodeId=''+SelectedStyleSheetNodeId);'#13#10'          //showmessage('
  +'''num children is ''+inttostr(length(XTree.TXTree(StylesNode).GetChildNodes'
  +'(SelectedStyleSheetNodeId))));'#13#10'        if (SNodeType =''StyleTargets'
  +''')'#13#10'        and (length(XTree.TXTree(StylesNode).GetChildNodes(Selec'
  +'tedStyleSheetNodeId)) > 0)'#13#10'        then'#13#10'          LocalShowMe'
  +'ssage( DropIsAllowed,mute,''To add more than one target use a Logical group'
  +' node (e.g. (And)) then add them as children to it'')'#13#10'        else'
  +#13#10'        begin'#13#10'           if ( (ResourceNodeSetIDOf(RNodeType,f'
  +'alse) in TargetGroupingNodes)'#13#10'           or (ResourceNodeSetIDOf(RNo'
  +'deType,false) in StyletargetNodes)'#13#10'           or (ResourceNodeSetIDO'
  +'f(RNodeType,false) in RelationshipNodes))'#13#10'           then'#13#10'   '
  +'        begin'#13#10'             if (ResourceNodeSetIDOf(RNodeType,false) '
  +'in EditableTargetNodes)'#13#10'             or (ResourceNodeSetIDOf(RNodeTy'
  +'pe,false) in TargetNodesWithOptions)'#13#10'             then'#13#10'      '
  +'       begin'#13#10'               if (AllowDrop =true) then'#13#10'       '
  +'        begin'#13#10'                 NewNodeId:=XTree.TXTree(StylesNode).I'
  +'nsertNewChildNode(RNodeType+''.''+''(''+getqualifierdefault(RNodeType)+'')'
  +''');'#13#10'               end;'#13#10'             end'#13#10'            '
  +' else'#13#10'             begin'#13#10'               if (AllowDrop =true) '
  +'then'#13#10'               begin'#13#10'                 NewNodeId:=XTree.T'
  +'XTree(StylesNode).InsertNewChildNode(RNodeType);'#13#10'               end;'
  +#13#10'             end;'#13#10'            end'#13#10'           else Local'
  +'ShowMessage( DropIsAllowed,mute,''Only Style target types (or logical group'
  +' or relationship nodes) can be added to a style targets node'');'#13#10'   '
  +'     end;'#13#10'        end;'#13#10'      end;'#13#10#13#10'      if (Allo'
  ,'wDrop=true)'#13#10'      and (NewNodeId<>'''') then'#13#10'      begin'#13
  +#10'        XTree.TXTree(StylesNode).SelectedNodeId:=NewNodeId;'#13#10'     '
  +'   PopulateStyleEditor(false);'#13#10'      end;'#13#10#13#10'      DropTar'
  +'get:=SNodeType;'#13#10'      if DropIsAllowed then watch('' '');'#13#10'   '
  +'   result:=DropIsAllowed;'#13#10'  end;'#13#10#13#10'function GetOptionType'
  +'(SNodeType:String):String;'#13#10'var'#13#10'  i:integer;'#13#10'  tempstri'
  +'nglist:tstringlist;'#13#10'begin'#13#10'  result:='''';'#13#10'  for i:= 0 '
  +'to length( StyleOptions)-1 do'#13#10'  begin'#13#10'    tempstringlist:=Sty'
  +'leOptions[i];'#13#10'    if SNodeType=tempstringlist[0]'#13#10'    then'#13
  +#10'    begin'#13#10'       result := tempstringlist[2];'#13#10'    end;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'  Procedure UpdateNodeQualifierField;'#13
  +#10'  var  SelectedStyleSheetNodeText,SelectedStyleSheetNodeType,CurrentOpti'
  +'onValue,CurrentOptionType:string;'#13#10'       itemIndex,i,j:integer;'#13
  +#10'       nodeid,s:String;'#13#10'       MyCombo:TDataNode;'#13#10'  begin'
  +#13#10'    // get the node type and text string'#13#10'    SelectedStyleShee'
  +'tNodeText:=trim(getPropertyValue(''StyleSheet'',''SelectedNodeText''));'#13
  +#10'    SelectedStyleSheetNodeType:=GetTypeFromString(SelectedStyleSheetNode'
  +'Text);'#13#10'    CurrentOptionType:=GetOptionType(SelectedStyleSheetNodeTy'
  +'pe);'#13#10'    if SelectedStyleSheetNodeType<>'''' then'#13#10'    begin'
  +#13#10'      s:=GetPropertyValue(''StyleNodeQualifier'',''IsVisible'');'#13
  +#10'      if getPropertyValue(''StyleNodeQualifier'',''IsVisible'') = ''True'
  +''''#13#10'      then'#13#10'      begin'#13#10'         MyCombo:=FindDataNo'
  +'deById(SystemNodeTree,''StyleNodeQualifier'','''',true);'#13#10'         Cu'
  +'rrentOptionValue := XComboBox.TXComboBox(MyCombo).ItemValue;       //getPro'
  +'pertyValue(''StyleNodeQualifier'',''ItemValue'');'#13#10'      end'#13#10' '
  +'     else'#13#10'      begin'#13#10'        CurrentOptionValue := trim(getP'
  +'ropertyValue(''QualifierEditBox'',''ItemValue''));'#13#10'        if ((Sele'
  +'ctedStyleSheetNodeType=''ClassName'') or (SelectedStyleSheetNodeType=''Widg'
  +'etID'')) then'#13#10'        begin'#13#10'          while ((FoundString(Cur'
  +'rentOptionValue,'' '')>0)'#13#10'             or (FoundString(CurrentOption'
  +'Value,''.'')>0)) do'#13#10'             begin'#13#10'               showmes'
  +'sage(''Please enter ''+SelectedStyleSheetNodeType+'' without spaces or "." '
  +'characters'');'#13#10'               CurrentOptionValue:= XIDEPrompt(''Ente'
  +'r ''+SelectedStyleSheetNodeType,CurrentOptionValue);'#13#10'               '
  +'setPropertyValue(''QualifierEditBox'',''ItemValue'',CurrentOptionValue);'#13
  +#10'             end;'#13#10'        end;'#13#10'      end;'#13#10'      if '
  +' (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in StylePropertyNod'
  +'es ) then'#13#10'        SelectedStyleSheetNodeText := SelectedStyleSheetNo'
  +'deType+''.(''+CurrentOptionValue+'')'''#13#10'      else'#13#10'        Sel'
  +'ectedStyleSheetNodeText := SelectedStyleSheetNodeType+''.(''+CurrentOptionV'
  +'alue+'')'';'#13#10'      nodeid:=XTree.TXTree(StylesNode).SelectedNodeId;'
  +#13#10'      //showmessage(''nodeid=''+nodeid+'' new text = ''+ SelectedStyl'
  +'eSheetNodeText);'#13#10'      XTree.TXTree(StylesNode).SetNodeText(nodeid,S'
  +'electedStyleSheetNodeText);'#13#10'      XTree.TXTree(StylesNode).SelectedN'
  +'odeId:=nodeid;'#13#10'    end;'#13#10'    setPropertyValue(''StyleTreeApply'
  +'Btn'',''IsVisible'',''false'');'#13#10'  end;'#13#10#13#10'Procedure Popula'
  +'teStyleEditor(editInsteadOfDropDown:boolean);'#13#10'var  SelectedStyleShee'
  +'tNodeText,SelectedStyleSheetNodeType,CurrentOptionValue:string;'#13#10'    '
  +' nodeid:String;'#13#10'     CurrentOptionIndex,i,j:integer;'#13#10'     opt'
  +'ionstring:string;'#13#10'     tempstringlist:tstringlist;'#13#10'begin'#13
  +#10'  // get the node type and text string'#13#10'  SelectedStyleSheetNodeTe'
  +'xt:=trim(getPropertyValue(''StyleSheet'',''SelectedNodeText''));'#13#10'  n'
  +'odeid:=XTree.TXTree(StylesNode).SelectedNodeId;'#13#10'  //showmessage(''Po'
  +'pulateStyleEditor ''+nodeid);'#13#10'  if (nodeid<>'''') then'#13#10'  begi'
  +'n'#13#10'  SelectedStyleSheetNodeType:=GetTypeFromString(SelectedStyleSheet'
  +'NodeText);'#13#10'  CurrentOptionValue:=GetQualifierValue(SelectedStyleShee'
  +'tNodeText);'#13#10'  //showmessage(''PopulateStyleEditor ''+nodeid+'' type='
  +'''+SelectedStyleSheetNodeType+'' qual=''+CurrentOptionValue);'#13#10'  if ('
  +'(ResourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in StylePropertyNode'
  +'s)// to edit colors, line widths etc. using the drop down options'#13#10'  '
  +'    or (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in  TargetNod'
  +'esWithOptions)'#13#10'      or (ResourceNodeSetIDOf(SelectedStyleSheetNodeT'
  +'ype,false)in StyleRuleSelectors))'#13#10'  and (editInsteadOfDropDown = fal'
  +'se)'#13#10'  then'#13#10'  begin'#13#10'     CurrentOptionIndex:=0;'#13#10
  ,'     optionstring:='''';'#13#10'     // get option list for this resource t'
  +'ype and set current option values" e.g.....["Option 1","Option 2","Option 3'
  +'"]'#13#10'     for i:= 0 to length( StyleOptions)-1 do'#13#10'     begin'#13
  +#10'       tempstringlist:=StyleOptions[i];'#13#10'       if trim(SelectedSt'
  +'yleSheetNodeType)=trim(tempstringlist[0])'#13#10'       then'#13#10'       '
  +'begin'#13#10'         setPropertyValue(''StyleNodeQualifier'',''Hint'',temp'
  +'stringlist[1]);'#13#10'         for j:=3 to tempstringlist.count-1'#13#10' '
  +'        do'#13#10'         begin;'#13#10'            //showmessage(''>''+te'
  +'mpstringlist[j]+''<>''+CurrentOptionValue+''<'');'#13#10'            if tri'
  +'m(tempstringlist[j]) = trim(CurrentOptionValue )'#13#10'            then  C'
  +'urrentOptionIndex:=j-3;'#13#10'         end;'#13#10'         optionstring:='
  +'''["''+tempstringlist[3]+''"'';'#13#10'         for j:=4 to tempstringlist.'
  +'count-1 do'#13#10'         begin'#13#10'           optionstring:=optionstri'
  +'ng+'',"''+tempstringlist[j]+''"'';'#13#10'         end;'#13#10'         opt'
  +'ionstring:=optionstring+'']'';'#13#10'  //       setPropertyValue(''OptionE'
  +'ditorLabel'',''IsVisible'',''true'');'#13#10'       end;'#13#10'     end;'
  +#13#10'      // make StyleNodeQualifier drop down list visible and hide the '
  +'edit box'#13#10'     setPropertyValue(''QualifierEditBox'',''IsVisible'','''
  +'false'');'#13#10'     setPropertyValue(''StyleNodeQualifier'',''IsVisible'''
  +',''true'');'#13#10'     setPropertyValue(''StyleNodeQualifier'',''OptionLis'
  +'t'',optionstring);'#13#10'     setPropertyValue(''StyleNodeQualifier'',''It'
  +'emIndex'',inttostr(CurrentOptionIndex));'#13#10'     setPropertyValue(''Sty'
  +'leTreeEditBtn'',''IsVisible'',''true'');'#13#10'     setPropertyValue(''Sty'
  +'leTreeApplyBtn'',''IsVisible'',''false'');'#13#10'  end'#13#10'  else'#13#10
  +'  // Editing.......................'#13#10'  if ((ResourceNodeSetIDOf(Selec'
  +'tedStyleSheetNodeType,false) in StylePropertyNodes)and (editInsteadOfDropDo'
  +'wn = true)) // to manually edit the css string instead of using the drop do'
  +'wns'#13#10'  or (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in E'
  +'ditableTargetNodes)// to edit class and widget ids'#13#10'  or (ResourceNod'
  +'eSetIDOf(SelectedStyleSheetNodeType,false) in StyleRuleNodes)// to edit the'
  +' style rule name'#13#10'  then'#13#10'  begin'#13#10'     // make StyleNode'
  +'Qualifier drop down list not visible and show the edit box'#13#10'    //sho'
  +'wmessage(''CurrentOptionValue=''+CurrentOptionValue);'#13#10'     setProper'
  +'tyValue(''QualifierEditBox'',''IsVisible'',''true'');'#13#10'     setProper'
  +'tyValue(''StyleNodeQualifier'',''IsVisible'',''false'');'#13#10'     setPro'
  +'pertyValue(''QualifierEditBox'',''ItemValue'',CurrentOptionValue);'#13#10' '
  +'    setPropertyValue(''StyleTreeEditBtn'',''IsVisible'',''true'');'#13#10' '
  +'    setPropertyValue(''StyleTreeApplyBtn'',''IsVisible'',''true'');'#13#10
  +'  end'#13#10'  else'#13#10'  begin'#13#10'     setPropertyValue(''StyleTree'
  +'EditBtn'',''IsVisible'',''false'');'#13#10'     setPropertyValue(''StyleTre'
  +'eApplyBtn'',''IsVisible'',''true'');'#13#10'     setPropertyValue(''Qualifi'
  +'erEditBox'',''ItemValue'',CurrentOptionValue);'#13#10'     setPropertyValue'
  +'(''QualifierEditBox'',''IsVisible'',''true'');'#13#10'     setPropertyValue'
  +'(''StyleNodeQualifier'',''IsVisible'',''false'');'#13#10'  end;'#13#10'  en'
  +'d'#13#10'  else'#13#10'  begin'#13#10'     // there is no tree node selecte'
  +'d'#13#10'    setPropertyValue(''StyleNodeQualifier'',''OptionList'',''[]'')'
  +';'#13#10'    setPropertyValue(''StyleTreeEditBtn'',''IsVisible'',''false'')'
  +';'#13#10'    setPropertyValue(''StyleTreeApplyBtn'',''IsVisible'',''false'''
  +');'#13#10'    setPropertyValue(''QualifierEditBox'',''ItemValue'','' '');'
  +#13#10'    setPropertyValue(''QualifierEditBox'',''IsVisible'',''false'');'
  +#13#10'    setPropertyValue(''StyleNodeQualifier'',''IsVisible'',''false'');'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'//  A(B + C)        =  A.B + A.C     '
  +' // OR node child of an AND node'#13#10'//  (A + B).(A + C) =  A + B . C   '
  +'   // OR node child of an AND node (term in common)'#13#10'//  A(B.C)      '
  +'    =  A . B . C      // AND node child of an AND node'#13#10'//  A + (B + '
  +'C)     =  A + B + C      // OR node child of an OR node'#13#10'//  A + (B.C'
  +')       =  A.B + A.C      // AND node child of an OR  node'#13#10'//Expandi'
  +'ng logical functions using Domorgan''s law'#13#10'//   or..........   A, B,'
  +' C {}'#13#10'//   and.........   ABC {}'#13#10'//   nor.........  :not(A):n'
  +'ot(B):not(C) {}'#13#10'//   nand........  :not(A), :not(B), :not(C) {}'#13
  +#10#13#10'Function GetStyleProperties(PropertiesNodeId,StylePriority:String)'
  +':string;'#13#10'var i,numchildren:integer;'#13#10'    CurrentPropertyString'
  +',CSSText:string;'#13#10'    props:TStringArray;'#13#10'Begin'#13#10'  CSSTe'
  +'xt:= '''';'#13#10'  // style properties are the children of this node.'#13
  ,#10'  props:=XTree.TXTree(StylesNode).GetChildNodes(PropertiesNodeId);'#13#10
  +'  asm'#13#10'    for (var i=0; i<props.length; i++) {'#13#10'      var prop'
  +'id=props[i];'#13#10'      //console.log(''propid=''+propid);'#13#10'      v'
  +'ar ob=document.getElementById(propid+''Summary'');'#13#10'      if (ob!=nul'
  +'l) {'#13#10'        var txt=ob.innerHTML;   }'#13#10'      //console.log('''
  +'txt=''+txt);'#13#10'      var qt=pas.StylesUtils.GetOptionType(pas.StylesUt'
  +'ils.GetTypeFromString(txt));'#13#10'      var qv=pas.StylesUtils.GetQualifi'
  +'erValue(txt);'#13#10'      //console.log(''qt=''+qt+'' qv=''+qv);'#13#10'  '
  +'    CSSText=CSSText + qt + qv ;'#13#10#13#10'      if ((StylePriority == '''
  +'1;'') || (StylePriority==''2;''))'#13#10'      {'#13#10'        // delete t'
  +'railing spaces'#13#10'        CSSText=CSSText.trim();'#13#10'        //remo'
  +'ve the final ; character'#13#10'        if (CSSText[CSSText.length-1]=='';'
  +''') {CSSText=CSSText.substring(0,CSSText.length-1);}'#13#10'        // make'
  +' it important'#13#10'        CSSText=CSSText+'' !important;'''#13#10'      '
  +' }'#13#10#13#10'      }'#13#10'  end;'#13#10'  //asm console.log(''props='''
  +'+CSSText); end;'#13#10'  result:=CSSText;'#13#10'end;'#13#10#13#10'Function'
  +' GetStylePriority(CurrentNode:String):string;'#13#10'  Begin'#13#10'    Get'
  +'StylePriority:='' Priority '';'#13#10'  end;'#13#10#13#10'function MakeATer'
  +'mStringList:TStringList;'#13#10'var'#13#10'  newStringList:TStringList;'#13
  +#10'begin'#13#10'  newStringList := TStringList.Create;'#13#10'  newStringLi'
  +'st.Delimiter := ''.'';'#13#10'  newStringList.StrictDelimiter := True;'#13
  +#10'  newStringList.duplicates:=dupAccept;'#13#10'  newStringList.Sorted := '
  +'False;'#13#10'  newStringList.SkipLastLineBreak:=true;'#13#10'  newStringLi'
  +'st.Linebreak:='''';'#13#10'  result:=newStringList;'#13#10'end;'#13#10#13#10
  +'  Function  mergeTermLists2(SNodeType:String;list1,list2:TCSSTermList;inver'
  +'t:boolean):TCSSTermList;'#13#10'  var i,j,k,n,m:integer;'#13#10'      newOu'
  +'tlist:TCSSTermList;'#13#10'  begin'#13#10'    if ( (LeftStr(SNodeType,5) = '
  +'''(And)'') and (invert=false))'#13#10'    or ((LeftStr(SNodeType,7) = ''Not'
  +'(Or)'' )and (invert=true))'#13#10'     // (a+b).(c+d)  =>  a.c + a.d  + b.c'
  +' + b.d'#13#10'    then'#13#10'    begin'#13#10'      Setlength(newOutlist,0'
  +');'#13#10'      For i:= 0 to length(list1)-1 do'#13#10'      begin'#13#10' '
  +'       for j:= 0 to length(list2)-1 do'#13#10'        begin'#13#10'        '
  +'  k:=length(newOutlist);'#13#10'          Setlength(newOutlist, k+1);'#13#10
  +'          newOutlist[ k] := MakeATermStringList;'#13#10'          for n:= 0'
  +' to list1[i].count-1 do newOutlist[ k].add(list1[i][n]);'#13#10'          f'
  +'or m:= 0 to list2[j].count-1 do newOutlist[ k].add(list2[j][m]);'#13#10'   '
  +'     end;'#13#10'      end;'#13#10'    end'#13#10'    else'#13#10'    if (('
  +'LeftStr(SNodeType,4) = ''(Or)'')  and (invert=false))'#13#10'    or  ((Left'
  +'Str(SNodeType,8) = ''Not(And)'')and (invert=true))'#13#10'    then'#13#10' '
  +'   begin'#13#10'     // (a+b)+(c+d)  =>  a + b + c + d'#13#10'     Setlengt'
  +'h(newOutlist,0);'#13#10'     For i:= 0 to length(list1)-1 do'#13#10'      b'
  +'egin'#13#10'        k:=length(newOutlist);'#13#10'        Setlength(newOutl'
  +'ist, k+1);'#13#10'        newOutlist[ k] := MakeATermStringList;'#13#10'   '
  +'     newOutlist[ k].assign(list1[i]);'#13#10'      end;'#13#10'      for j:'
  +'= 0 to length(list2)-1 do'#13#10'      begin'#13#10'        k:=length(newOu'
  +'tlist);'#13#10'        Setlength(newOutlist, k+1);'#13#10'        newOutlis'
  +'t[ k] := MakeATermStringList;'#13#10'        newOutlist[ k].assign(list2[j]'
  +');'#13#10'      end;'#13#10'    end;'#13#10'    mergeTermLists2:=newOutlist'
  +';'#13#10'  end;'#13#10#13#10'  Function FlattenSubTree2(CurrentNodeId:Strin'
  +'g;invert:boolean):TCSSTermList;'#13#10'  var i, j, numchildren:integer;'#13
  +#10'      nodestring, SNodeType, SQualifier, str :string;'#13#10'      child'
  +'nodes:TStringArray;'#13#10'      OutList1,OutList2:TCSSTermList;'#13#10'  b'
  +'egin'#13#10'    //showmessage(''FlattenSubTree2 ''+CurrentNodeId);'#13#10' '
  +'   childnodes:=XTree.TXTree(StylesNode).GetChildNodes(CurrentNodeId);'#13#10
  +'    SNodeType:=GetTypeFromString(XTree.TXTree(StylesNode).TextOfNode(Curren'
  +'tNodeId));'#13#10'    numchildren:= length(childnodes);'#13#10'    if numch'
  +'ildren = 0 then'#13#10'    begin'#13#10'      //showmessage(''targets ''+Cu'
  +'rrentNodeId+'' no children'');'#13#10'      Setlength(OutList1,1);'#13#10' '
  +'     OutList1[0] := MakeATermStringList;'#13#10'      //showmessage(''type='
  +'''+SNodeType);'#13#10'      SQualifier:=GetQualifierValue(XTree.TXTree(Styl'
  +'esNode).TextOfNode(CurrentNodeId));'#13#10'      //showmessage(''qual=''+SQ'
  +'ualifier);'#13#10'      if (SNodeType=''ClassName'')or(SNodeType=''WidgetID'
  +''')'#13#10'      then nodestring :=SQualifier'#13#10'      else nodestring '
  +':=SNodeType;'#13#10'      nodestring:=''.''+nodestring;'#13#10'      if inv'
  ,'ert = false'#13#10'      then OutList1[0].Add(nodestring )'#13#10'      els'
  +'e OutList1[0].Add('':not(''+nodestring +'')'')'#13#10'    end'#13#10'    el'
  +'se'#13#10'    begin'#13#10'     // showmessage(''haschildren.  SNodeType='''
  +'+SNodeType);'#13#10'      if ((LeftStr(SNodeType,8) = ''Not(And)''))'#13#10
  +'      or ((LeftStr(SNodeType,7) = ''Not(Or)'' ))'#13#10'      then'#13#10' '
  +'     begin'#13#10'        if invert=true then invert:=false else invert:=tr'
  +'ue;'#13#10'      end;'#13#10'      OutList1:= FlattenSubTree2(childnodes[0]'
  +',invert);'#13#10'      if numchildren >1 then'#13#10'      for i := 1 to  n'
  +'umchildren - 1'#13#10'      do'#13#10'      begin'#13#10'        OutList2:='
  +' FlattenSubTree2(childnodes[i],invert);'#13#10'        OutList1:=mergeTermL'
  +'ists2(SNodeType,OutList1,OutList2,invert);'#13#10'//        str:='''';'#13
  +#10'//        for j:=0 to length(OutList1)-1 do str:=str+OutList1[j].Text;'
  +#13#10'//        showmessage(''i=''+inttostr(i)+'' OutList1=''+str+''<'');'
  +#13#10'      end;'#13#10'    end;'#13#10'    result:=outlist1;'#13#10'  end;'
  +#13#10#13#10'  Function AdjustTargetString(TargetString:string):string;'#13
  +#10'  var teststring:string;'#13#10'  begin'#13#10'    teststring:=stringrep'
  +'lace(TargetString,''"'','''',[rfReplaceAll]);  // delete double quotes'#13
  +#10'    teststring:=rightstr(teststring,length(teststring)-1); // delete lea'
  +'ding full stop'#13#10'    if TargetString = ''"All"'' then   TargetString:='
  +' ''*'';'#13#10'    AdjustTargetString:=TargetString;'#13#10'  end;'#13#10#13
  +#10'Function GetStyleTargets(CurrentNode:String):string;'#13#10'var CSSTermL'
  +'ist:TCSSTermList;'#13#10'    CSSText,tmp:string;'#13#10'    i,numterms:inte'
  +'ger;'#13#10'Begin'#13#10'  setlength(CSSTermList,0);'#13#10'  CSSTermList:='
  +'FlattenSubTree2(CurrentNode,false);'#13#10#13#10'  numterms:=length(CSSTerm'
  +'List) ;'#13#10'  if numterms >0 then'#13#10'  begin'#13#10'    tmp:=CSSTerm'
  +'List[0].Text;'#13#10'    //asm console.log(''CSSTermList[0] ''+tmp); end;'
  +#13#10'    CSSText:=  AdjustTargetString(CSSTermList[0].Text);'#13#10'    fo'
  +'r i:=1 to numterms-1 do'#13#10'    begin'#13#10'      tmp:=CSSTermList[i].T'
  +'ext;'#13#10'      //asm console.log(''CSSTermList[i] ''+tmp); end;'#13#10' '
  +'     CSSText:=CSSText+'' , ''+AdjustTargetString(CSSTermList[i].Text);'#13
  +#10'    end;'#13#10'  end;'#13#10'  result:=stringreplace(CSSText,''"'','''''
  +',[rfReplaceAll]);'#13#10'end;'#13#10#13#10#13#10'Function GenerateStyleRule'
  +'(RuleNodeId:String):string;'#13#10'var i:integer;'#13#10'    Stylepriority,'
  +'StyleState,StyleTargets,StyleProperties,StyleGroup,TargetString:String;'#13
  +#10'    ruleNodes:TStringArray;'#13#10'    str:string;'#13#10'    TopNode:TD'
  +'ataNode;'#13#10'begin'#13#10#13#10#13#10'  setlength(ruleNodes,0);'#13#10' '
  +' ruleNodes:=XTree.TXTree(StylesNode).GetChildNodes(RuleNodeId);'#13#10#13#10
  +'  StyleTargets:=GetStyleTargets(ruleNodes[0]);'#13#10'  Stylepriority:=trim'
  +'(GetQualifierValue(XTree.TXTree(StylesNode).TextOfNode(RuleNodes[2])));'#13
  +#10'  StyleProperties:=GetStyleProperties(ruleNodes[1],Stylepriority);'#13#10
  +'  StyleState:=trim(GetQualifierValue(XTree.TXTree(StylesNode).TextOfNode(Ru'
  +'leNodes[3])));'#13#10'  StyleGroup:=trim(GetQualifierValue(XTree.TXTree(Sty'
  +'lesNode).TextOfNode(RuleNodes[4])));'#13#10#13#10#13#10'  StyleTargets:='' '
  +':-webkit-any(''+StyleTargets+'').UI'';'#13#10#13#10'  if styleState<>''Norm'
  +'al;'' then StyleTargets:=StyleTargets+StyleState;'#13#10'  if StyleGroup<>'
  +'''Self;'''#13#10'  then'#13#10'  begin'#13#10'    if StyleGroup =''Siblings'
  +'Of;'' then StyleTargets:=StyleTargets+''~*'' ;'#13#10'    if StyleGroup ='''
  +'ChildrenOf;'' then StyleTargets:=StyleTargets+''>*'' ;'#13#10'    if StyleG'
  +'roup =''DescendentsOf;'' then StyleTargets:=StyleTargets+ '' *'' ;'#13#10' '
  +' end;'#13#10#13#10'  TargetString:=''#UIRootContents''+StyleTargets;'#13#10
  +'  //!!!! other forms.....!!!!'#13#10'  // now look for other XForms'#13#10
  +'  TopNode:=FindDataNodeById(SystemNodeTree,SystemRootName,'''',true);'#13#10
  +'  for i:=0 to length(TopNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    if '
  +'(TopNode.ChildNodes[i].NodeType=''TXForm'')'#13#10'    and (TopNode.NodeNam'
  +'e<>''CodeEditForm'')'#13#10'    and (TopNode.NodeName<>''PasteDialog'')'#13
  +#10'    and (TopNode.ChildNodes[i].IsDynamic)'#13#10'    and (TopNode.ChildN'
  +'odes[i].NameSpace='''')'#13#10'    then'#13#10'    begin'#13#10'      Targe'
  +'tString:=TargetString + '' ,#''+TopNode.ChildNodes[i].NodeName+StyleTargets'
  +';'#13#10'    end;'#13#10'  end;'#13#10#13#10'  if (Stylepriority = ''1;'') '
  +'or (Stylepriority=''3;'')'#13#10'  then'#13#10'    ExternalCSSText:=Externa'
  +'lCSSText+TargetString+'' {''+ StyleProperties +''}'''#13#10'  else'#13#10' '
  +'   InlineCSSText:=InlineCSSText+TargetString+'' {''+ StyleProperties +''} '
  +''';'#13#10#13#10#13#10'end;'#13#10#13#10'  Procedure GenerateStyleSheets;'
  +#13#10'  var CSSText,CurrentRule,PriorityOneStyleRules,PriorityTwoStyleRules'
  ,',PriorityThreeStyleRules,PriorityFourStyleRules:string;'#13#10'      i, num'
  +'children:integer;'#13#10'      rules:TStringArray;'#13#10'  begin'#13#10'  '
  +'  //!!!! change this use JSON parser on the underlying treedata????'#13#10
  +#13#10'    PriorityOneStyleRules:='''';'#13#10'    PriorityTwoStyleRules:='''
  +''';'#13#10'    PriorityThreeStyleRules:='''';'#13#10'    PriorityFourStyleR'
  +'ules:='''';'#13#10'    InlineCSSText:= '''';'#13#10'    ExternalCSSText:= '
  +''''';'#13#10#13#10'    setlength(rules,0);'#13#10'   // rules:=XTree.TXTree'
  +'(StylesNode).GetChildNodes(''StyleSheetContentsScrollNode'');'#13#10'    ru'
  +'les:=XTree.TXTree(StylesNode).GetChildNodes(''StyleSheetNode0'');'#13#10#13
  +#10'    numchildren:= length(rules);'#13#10'    if numchildren >0 then'#13#10
  +'    for i := 0 to  numchildren - 1'#13#10'    do'#13#10'    begin'#13#10'  '
  +'    GenerateStyleRule(rules[i]);'#13#10'      //GenerateStyleRule generates'
  +' the text in  InlineCSSText and  ExternalCSSText'#13#10'    end;'#13#10#13
  +#10'//asm console.log(''CSSi: ''+pas.StylesUtils.InlineCSSText); end;'#13#10
  +'//asm console.log(''CSSe: ''+pas.StylesUtils.ExternalCSSText); end;'#13#10
  +'    setPropertyValue(''GeneratedStyleSheetText'',''ItemValue'',InlineCSSTex'
  +'t + LineEnding + ExternalCSSText);'#13#10' //   setPropertyValue(''External'
  +'CssText'',''ItemValue'',ExternalCSSText);'#13#10'    RefreshStyleSheet(Inli'
  +'neCSSText,ExternalCSSText);'#13#10'  end;'#13#10#13#10'procedure Initialise'
  +'StyleResources;'#13#10'begin'#13#10'  EditAttributeValue(''StyleResources'''
  +','''',''TreeData'',''["StyleResources","StyleRule",'' +'#13#10'            '
  +'        ''["StyleTargets",["TargetTypes",'' +'#13#10'                    '''
  +'["WidgetType",["All"],["Numeric","TXProgressBar","TXNumericSlider","TXNumbe'
  +'rSpinner"],'' +'#13#10'                    ''["Text","TXLabel","TXHyperlink'
  +'","TXEditBox","TXMemo","TXTable"],'' +'#13#10'                    ''["Selec'
  +'tors","TXButton","TXCheckBox","TXRadioBtns","TXComboBox","TXTree","TXDatePi'
  +'cker","TXColorPicker","TXMainMenu","TXMenuItem"],'' +'#13#10'              '
  +'      ''["LayoutWidgets","TXHBox","TXVBox","TXGroupBox","TXScrollBox","TXTa'
  +'bControl","TXTabSheet","TXForm"]],'' +'#13#10'                    ''["Ident'
  +'ifier","ClassName","WidgetID"]],'' +'#13#10'                    ''["TargetG'
  +'rouping","(And)","(Or)","Not(And)","Not(Or)"]],'' +'#13#10'                '
  +'    ''["StyleProperties",["Widget","WidgetPadding","WidgetBorder","WidgetCo'
  +'rners","WidgetMargin","WidgetBackground"],'' +'#13#10'                    '
  +'''["Font","FontFamily","FontSize","FontColor","FontBackgroundColor","FontWe'
  +'ight","FontStyle","TextDecor"],'' +'#13#10'                    ''["Transfor'
  +'mations","Rotate","Scale","Skew"],["States","Selectable","Cursor","Visibili'
  +'ty"],'' +'#13#10'                    ''["Effects","Transition","Filter"]]]'
  +''');'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure  UpdateOrCrea'
  +'teStyleSheet(StyleText,myStyleSheetTitle:string;pos:integer);'#13#10'//http'
  +'s://www.w3.org/wiki/Dynamic_style_-_manipulating_CSS_with_JavaScript'#13#10
  +'begin'#13#10'  {$ifdef JScript}'#13#10'  asm'#13#10'    var foundCSSSheet;'
  +#13#10'    foundCSSSheet = false;'#13#10'    var x = document.getElementById'
  +'(myStyleSheetTitle);'#13#10'    if (x!=null) {x.innerHTML = StyleText;}'#13
  +#10'    else'#13#10'    {'#13#10'      var myStyleSheet = document.createEle'
  +'ment(''style'');'#13#10'      myStyleSheet.id=myStyleSheetTitle;'#13#10'   '
  +'   myStyleSheet.innerHTML = StyleText;'#13#10'      if (pos<0) {'#13#10'   '
  +'     document.head.appendChild(myStyleSheet); }'#13#10'      else {'#13#10
  +'        document.head.prepend(myStyleSheet); }'#13#10'    }'#13#10'  end;'
  +#13#10'  {$endif}'#13#10'end;'#13#10' procedure  RemoveStyleSheet(myStyleShe'
  +'etTitle:string);'#13#10' begin'#13#10'   {$ifdef JScript}'#13#10'   asm'#13
  +#10'     var x = document.getElementById(myStyleSheetTitle);'#13#10'     if '
  +'(x!=null) {x.parentNode.removeChild(x);}'#13#10'   end;'#13#10'   {$endif}'
  +#13#10' end;'#13#10#13#10'Function GetIdsOrClassNames(GetIDs:Boolean):TStrin'
  +'gList;'#13#10'var'#13#10'   list:TStringList;'#13#10'   TopNode:TdataNode;'
  +#13#10'   i:integer;'#13#10'   function DrillDown(StartNode:TdataNode; GetID'
  +'s:Boolean):TStringList;'#13#10'   var'#13#10'     theList,cList:TStringList'
  +';'#13#10'     classes,tmp:String;'#13#10'     c:integer;'#13#10'   begin'#13
  +#10'     theList:=TStringList.Create;'#13#10'     theList.Sorted:=true;'#13
  +#10'     theList.Duplicates := dupIgnore;'#13#10'     if StartNode.IsDynamic'
  +' then'#13#10'       if GetIds then'#13#10'       begin'#13#10'         theL'
  +'ist.Add(StartNode.NameSpace+StartNode.nodeName);'#13#10'       end'#13#10' '
  +'      else'#13#10'       begin'#13#10'         if StartNode.HasAttribute('''
  +'HTMLClasses'') then'#13#10'         begin'#13#10'           classes:=StartN'
  +'ode.GetAttribute(''HTMLClasses'',false).AttribValue;'#13#10'           if c'
  ,'lasses<>'''' then'#13#10'           begin'#13#10'             cList:=TStrin'
  +'gList.Create;'#13#10'             cList.StrictDelimiter:=true;'#13#10'     '
  +'        cList.Delimiter:='' '';'#13#10'             cList.LineBreak:='' '';'
  +#13#10'             cList.Text:=classes;'#13#10'             cList.Sorted :='
  +' True;'#13#10'             cList.Duplicates := dupIgnore;'#13#10'          '
  +'   for c := clist.count - 1 downto 0 do'#13#10'             begin'#13#10'  '
  +'             if Trim(clist[c]) = '''' then'#13#10'                 clist.De'
  +'lete(c);'#13#10'             end;'#13#10'             theList.AddStrings(cL'
  +'ist);'#13#10'             cList.Free;'#13#10'             //tmp:=theList.Te'
  +'xt;'#13#10'             //tmp:=cList.Text;'#13#10'           end;'#13#10'  '
  +'       end;'#13#10'       end;'#13#10#13#10'     for c:=0 to length(StartNo'
  +'de.childnodes)-1 do'#13#10'     begin'#13#10'       theList.AddStrings(Dril'
  +'lDown(StartNode.childnodes[c],GetIDs));'#13#10'     end;'#13#10'     result'
  +':=theList;'#13#10'   end;'#13#10'begin'#13#10'  ClearInspectors;'#13#10'  l'
  +'ist := DrillDown( MainFormProjectRoot, GetIDs);'#13#10'  list.StrictDelimit'
  +'er:=true;'#13#10'  list.Delimiter:=''|'';'#13#10'  list.LineBreak:=''|'';'
  +#13#10'  list.SkipLastLineBreak:=true;'#13#10'  // now look for other XForms'
  +#13#10'  TopNode:=FindDataNodeById(SystemNodeTree,SystemRootName,'''',true);'
  +#13#10'  for i:=0 to length(TopNode.ChildNodes)-1 do'#13#10'  begin'#13#10' '
  +'   if (TopNode.ChildNodes[i].NodeType=''TXForm'')'#13#10'    and (TopNode.N'
  +'odeName<>''CodeEditForm'')'#13#10'    and (TopNode.NodeName<>''PasteDialog'
  +''')'#13#10'    and (TopNode.ChildNodes[i].IsDynamic)'#13#10'    then'#13#10
  +'    begin'#13#10'      list.AddStrings(DrillDown(TopNode.ChildNodes[i],GetI'
  +'Ds));'#13#10'    end;'#13#10'  end;'#13#10'  result:=list;'#13#10'end;'#13
  +#10#13#10#13#10'Procedure SetCSSEditorStyles;'#13#10'var WhiteSpaceRule:stri'
  +'ng;'#13#10'begin'#13#10'  WhiteSpaceRule:=''.noChildren,.hasChildren { whit'
  +'e-space: pre;}'';'#13#10'  // spoof:= ''.noChildren,.hasChildren { white-sp'
  +'ace: normal;}'';'#13#10'  //indirectWhiteSpaceRule:=''@import url("data:tex'
  +'t/css;charset=utf-8,''+WhiteSpaceRule +''") '';'#13#10'  //UpdateOrCreateSt'
  +'yleSheet('' '',''CSSEditorStyles'');'#13#10'  //UpdateOrCreateStyleSheet(sp'
  +'oof,''CSSEditorStyles1'');'#13#10'  UpdateOrCreateStyleSheet(WhiteSpaceRule'
  +',''CSSEditorStyles'',-1);'#13#10#13#10'end;'#13#10#13#10'Procedure AddToOpt'
  +'ionList(instring:string);'#13#10'var numOptionTypes:integer;'#13#10'begin'
  +#13#10'  numOptionTypes:=length(StyleOptions);'#13#10'  setlength(StyleOptio'
  +'ns,numOptionTypes+1);'#13#10'  StyleOptions[numOptionTypes] := TStringList.'
  +'Create();'#13#10'  StyleOptions[numOptionTypes].Delimiter := ''|'';'#13#10
  +'  StyleOptions[numOptionTypes].StrictDelimiter := True;'#13#10'  StyleOptio'
  +'ns[numOptionTypes].Sorted := False;'#13#10'  StyleOptions[numOptionTypes].D'
  +'elimitedText:=instring;'#13#10'  // the first element is the style type'#13
  +#10'  // the second element is the hint to be added to the editor popup'#13
  +#10'  // the third option is the property designator for CSS'#13#10'  // fol'
  +'lowing items are the options for that style type'#13#10'  // an item descri'
  +'bed as "FreeFormatEdit" means the user simply types the string value with n'
  +'o other checking'#13#10'end;'#13#10#13#10'Procedure SetStyleOptions;'#13#10
  +'var'#13#10'  theList:TStringList;'#13#10'  begin'#13#10'     setlength(Styl'
  +'eOptions,0);'#13#10' //    AddToOptionList( ''ClassName|hint|FreeFormatEdit'
  +'|Class Name Not Set'');'#13#10' //    AddToOptionList( ''WidgetID|hint|Free'
  +'FormatEdit|Widget ID not set'');'#13#10'    theList:=GetIdsOrClassNames(fal'
  +'se);'#13#10'    AddToOptionList( ''ClassName||class|''+ theList.Text);'#13
  +#10'    theList:=GetIdsOrClassNames(true);'#13#10'    AddToOptionList( ''Wid'
  +'getID||id|''+ theList.Text);'#13#10' //   theList.Free;'#13#10'    //showme'
  +'ssage( ''WidgetID||id''+ GetIdsOrClassNames(true));'#13#10#13#10'    AddToO'
  +'ptionList(''Priority|StylePriorityare:-1)!important in external file 2)!imp'
  +'ortant inline 3)inline 4)external file |priority:|4;|3;|2;|1;'');'#13#10'  '
  +'  AddToOptionList(''State||State:|Normal;|:focus|:hover'');'#13#10'    AddT'
  +'oOptionList(''Group||Relationship:|Self;|SiblingsOf;|ChildrenOf;|Descendent'
  +'sOf;'');'#13#10#13#10'    AddToOptionList(''FontFamily|Asubsetofwebsafefont'
  +'s|font-family:|CourierNew,Courier,monospace;|Arial,Helvetica,sans-serif;|Ti'
  +'mesNewRoman,Times,serif;|inherit;'');'#13#10'    AddToOptionList(''FontSize'
  +'||font-size:|xx-small;|x-small;|small;|medium;|large;|x-large;|xx-large;|in'
  +'herit;'');'#13#10'    AddToOptionList(''FontColor||color:|white;|silver;|gr'
  +'ay;|black;|red;|maroon;|yellow;|olive;|lime;|green;|aqua;|teal;|blue;|navy;'
  +'|fuchsia;|purple;|inherit;'');'#13#10'    AddToOptionList(''FontBackgroundC'
  +'olor||background-color:|white;|silver;|gray;|black;|red;|maroon;|yellow;|ol'
  ,'ive;|lime;|green;|aqua;|teal;|blue;|navy;|fuchsia;|purple;|inherit;'');'#13
  +#10'    AddToOptionList(''FontWeight||font-weight:|lighter;|normal;|bold;|bo'
  +'lder;|inherit;'');'#13#10'    AddToOptionList(''FontStyle||font-style:|norm'
  +'al;|italic;|oblique;|inherit;'');'#13#10'    AddToOptionList(''TextDecor||t'
  +'ext-decoration:|line-through;|underline;|overline;'');'#13#10#13#10'    Add'
  +'ToOptionList( ''WidgetBorder|a selection of border colors and thicknesses| '
  +'border: |0.1em red solid;|0.3em red solid;|0.5em red solid;|0.1em green sol'
  +'id;|0.3em green solid;|0.5em green solid;|0.1em blue solid;|0.3em blue soli'
  +'d;|0.5em blue solid;|0.1em black solid;|0.3em black solid;|0.5em black soli'
  +'d;|0.1em white solid;|0.3em white solid;|0.5em white solid;|inherit; '') ;'
  +#13#10'    // margin is the space around the widget'#13#10'    AddToOptionLi'
  +'st( ''WidgetMargin|Some options for the width of the margin between the wid'
  +'get and its border| margin: | 0.1em; | 0.3em; | 0.5em ; |  0.7em; |  0.9em;'
  +' | inherit; '') ;'#13#10'    // padding is the space around the widget and '
  +'inside the border'#13#10'    AddToOptionList( ''WidgetPadding|Some options '
  +'for the width of the padding between widget border and other components|pad'
  +'ding:|0.1em;|0.3em;|0.5em;|0.7em;|0.9em;|inherit;'');'#13#10'    AddToOptio'
  +'nList( ''WidgetCorners|choose one of the first four options to have one cor'
  +'ner rounded or the finally one to round them all |border-radius:|20px 0 0 0'
  +';|0 20px 0 0;|0 0 20px0 ;|0 0 0 20px;|20px 20px 20px 20px;|inherit;'') ;'#13
  +#10'    AddToOptionList(''WidgetBackground||background-color:|white;|silver;'
  +'|gray;|black;|red;|maroon;|yellow;|olive;|lime;|green;|aqua;|teal;|blue;|na'
  +'vy;|fuchsia;|purple;|inherit;'');'#13#10#13#10'    AddToOptionList(''Scale|'
  +'|transform:|scale(0.5);|scale(0.7);|scale(1.0);|scale(1.3);|scale(1.6);|sca'
  +'le(2.0);|inherit;'');'#13#10'    AddToOptionList(''Rotate||transform:|rotat'
  +'e(45deg);|rotate(90deg);|rotate(135deg);|rotate(180deg);|rotate(225deg);|ro'
  +'tate(270deg);|rotate(315deg);|inherit;'');'#13#10'    AddToOptionList( ''Sk'
  +'ew|  |transform:| skew(10deg 10deg);|skew(5deg 5deg);|skew(5deg 15deg);|ske'
  +'w(15deg 5deg);|inherit;'') ;'#13#10#13#10'    AddToOptionList(''Cursor||cur'
  +'sor:|default;|pointer;|crosshair;|move;|text;|wait;|progress;|help;|n-resiz'
  +'e;|ne-resize;|e-resize;|se-resize;|inherit;'');'#13#10'    AddToOptionList('
  +'''Visibility||visibility:|visible;|hidden;|inherit;'');'#13#10'    AddToOpt'
  +'ionList( ''Selectable|>all< selects text with one click instead of a double'
  +' click|user-select: |auto;|none;|text;|all;|inherit;'');//all selects text '
  +'with one click intstead of a doubleclick'#13#10#13#10'    AddToOptionList( '
  +'''Transition| |transition:|1s linear;|1s ease; |0.5s linear;|0.5s ease;|1.5'
  +'s linear;|1.5s ease;| inherit;'') ;'#13#10'    AddToOptionList(''Filter||fi'
  +'lter:|none|blur(3px);|brightness(0.5);|contrast(2);|grayscale(0.5);|hue-rot'
  +'ate(180deg);|opacity(0.5);|saturate(1.5);|sepia(1);|inherit;'');'#13#10#13
  +#10'  end;'#13#10#13#10#13#10'Procedure SetCSSNodeTypes;'#13#10'begin'#13#10
  +'  AllowChildren          :=[ StyleSheet, StyleTargets, StyleProperties,_And'
  +'_,_Or_,Not_And_,Not_Or_];'#13#10'  StyleSheetNodes        :=[StyleSheet];'
  +#13#10'  StyleRuleNodes         :=[StyleRule];'#13#10'  ClassificationNodes '
  +'   :=[Identifier,StyleResources,TargetGrouping,TargetTypes,WidgetType,Numer'
  +'ic,Text,Selectors,LayoutWidgets,Relationship,State,StyleProperties,Widget,F'
  +'ont,Transformations,States,Effects];'#13#10'  TargetGroupingNodes    :=[_An'
  +'d_,_Or_,Not_And_,Not_Or_];'#13#10'  RelationshipNodes      :=[ChildrenOf,De'
  +'scendentsOf,SiblingsOf];'#13#10'  StylePropertyNodes     :=[WidgetCorners,W'
  +'idgetPadding,WidgetMargin,WidgetBorder,WidgetBackground,FontFamily,FontSize'
  +',FontColor,FontBackgroundColor,FontWeight,FontStyle,TextDecor,Rotate,Scale,'
  +'Skew,Selectable,Cursor,Visibility,Transition,Filter];'#13#10'  StyletargetN'
  +'odes       :=[All,TXProgressBar,TXNumericSlider,TXNumberSpinner,TXLabel,TXH'
  +'yperlink,TXEditBox,TXMemo,TXTable,TXButton,TXCheckBox,TXRadioBtns,TXComboBo'
  +'x,TXTree,TXDatePicker,TXColorPicker,TXMainMenu,TXMenuItem,TXHBox,TXVBox,TXG'
  +'roupBox,TXScrollBox,TXTabControl,TXTabSheet,TXForm,ClassName,WidgetID,Hover'
  +',Visited,Focused];'#13#10'  TargetNodesWithOptions :=[ClassName,WidgetID];'
  +#13#10'  EditableTargetNodes    :=[];'#13#10'  StyleRuleSelectors     :=[Pri'
  +'ority,State,Group];'#13#10#13#10'end;'#13#10#13#10'procedure InitStyleTreeD'
  +'isplay;'#13#10' begin'#13#10'//   str:=RecursivelyGenerateTheTreeDescriptio'
  +'nString(StyleTree);'#13#10'   EditAttributeValue(''StyleSheet'','''', ''Tre'
  +'eData'' ,''["StyleSheet"]'');'#13#10' end;'#13#10#13#10' procedure Initiali'
  +'seStyleDesigner;'#13#10' begin'#13#10'   Setlength(StyleOptions,0);'#13#10
  +'   Setlength(CSSTermList,1);'#13#10'   CSSTermList[0] := TStringList.Create'
  +';'#13#10'   CSSTermList[0].Add(''*'');'#13#10'   SetCSSNodeTypes;'#13#10'  '
  ,' SetStyleOptions;'#13#10'   SetCSSEditorStyles;'#13#10'   EditAttributeValu'
  +'e(''QualifierEditBox'','''',''IsVisible'',''false'');'#13#10'   EditAttribu'
  +'teValue(''StyleNodeQualifier'','''',''IsVisible'',''false'');'#13#10'   Edi'
  +'tAttributeValue(''StyleTreeEditBtn'','''',''IsVisible'',''false'');'#13#10
  +'   EditAttributeValue(''StyleTreeApplyBtn'','''',''IsVisible'',''false'');'
  +#13#10'   InitStyleTreeDisplay;'#13#10#13#10'   StylesNode:=FindDataNodeById'
  +'(systemnodetree,''StyleSheet'','''',true);'#13#10#13#10' end;'#13#10#13#10
  +'end.'#13#10#13#10#13#10
]);
LazarusResources.Add('pyxutils','PAS',[
  'unit PyXUtils;'#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'interface'#13#10
  +#13#10'{$ifndef Python}'#13#10'var'#13#10'  PythonCodeExists:Boolean;'#13#10
  +'implementation'#13#10'end.'#13#10'{$else}'#13#10'uses'#13#10'  Classes, Sys'
  +'Utils, StringUtils,'#13#10'  {$ifndef JScript}'#13#10'  Math, Dialogs, Form'
  +'s, StdCtrls, variants,'#13#10'  PythonEngine, PythonGUIInputOutput,'#13#10
  +'  DllInterface,'#13#10'  {$endif}'#13#10'  NodeUtils, XMemo, EventsInterfac'
  +'e;'#13#10#13#10'var'#13#10'  //PythonLibDir,'#13#10'  PythonVersion:String;'
  +#13#10'  PythonCodeExists:Boolean;'#13#10'  PyScriptsExecuted:Boolean;'#13#10
  +#13#10'{$ifndef JScript}'#13#10'function PyodideScript:TStringList;'#13#10'p'
  +'rocedure SetupPyEngine(PyLibDir,PyVersion:String);'#13#10'procedure DoPy_In'
  +'itEngine;'#13#10'{$endif}'#13#10'procedure BuildXarray(XArrName:String;dims'
  +',mults:TStringArray;dflt:String);'#13#10'procedure PyExeString(cmds: string'
  +');'#13#10'procedure RunInitialScript;'#13#10'procedure RedirectPyLog(MemoNa'
  +'me:String);'#13#10'function BuildPackageList:TStringArray;'#13#10'procedure'
  +' UpdateMemo(Data:String);'#13#10'procedure UpdatepyLoadedFuncs(sss:String);'
  +#13#10#13#10'//const'#13#10'//  cPyLibraryWindows = ''C:\Python-for-Lazarus-'
  +'master\python4lazarus\Runtime\python38.dll'';'#13#10'//  cPyLibraryLinux = '
  +'''libpython3.8m.so.1.0'';'#13#10'//  cPyLibraryMac = ''/Library/Frameworks/'
  +'Python.framework/Versions/3.8/lib/libpython3.8.dylib'';'#13#10'//  cPyZipWi'
  +'ndows = ''python38.zip'';'#13#10'{$ifndef JScript}'#13#10'type'#13#10'  TMy'
  +'PyEvents = class(TObject)'#13#10'    procedure PyVarExtGetData(Sender: TObj'
  +'ect; var Data: PPyObject);'#13#10'    procedure PyVarExtSetData(Sender: TOb'
  +'ject; Data: PPyObject);'#13#10'    procedure PyVarEExtGetData(Sender: TObje'
  +'ct; var Data: PPyObject);'#13#10'    procedure PyVarEExtSetData(Sender: TOb'
  +'ject; Data: PPyObject);'#13#10'    procedure PyIOSent(Sender: TObject; cons'
  +'t Data:AnsiString);'#13#10'    procedure PyIOSentUni(Sender: TObject; const'
  +' Data: UnicodeString);'#13#10'  end;'#13#10'  TArgs=Array of Variant;'#13#10
  +'var'#13#10'  PythonEngine1:TPythonEngine;'#13#10'  PythonIO:TPythonGUIInput'
  +'Output;'#13#10'  PyInterfaceVar:TPythonDelphiVar;'#13#10'  PyInterfaceE:TPy'
  +'thonDelphiVar;'#13#10'  PyEvents:TMyPyEvents;'#13#10'{$else}'#13#10'var'#13
  +#10'  PyPkTest:integer;'#13#10'{$endif}'#13#10'type'#13#10'  TPyUnitFunc = r'
  +'ecord'#13#10'    PyUnitName : String;'#13#10'    PyFuncName : String;'#13#10
  +'  end;'#13#10'  TPyUnitFuncs = array of TPyUnitFunc;'#13#10#13#10'var'#13#10
  +'  PyMemoComponent:TXmemo;'#13#10'  pyLoadedFuncs:TStringList;'#13#10'  pyUn'
  +'itFuncs:TPyUnitFuncs;'#13#10#13#10'implementation'#13#10'uses XIDEMain,XDat'
  +'aModel,XObjectInsp;'#13#10#13#10'function BuildPackageList:TStringArray;'#13
  +#10'var'#13#10'  pypaks:TStringList;'#13#10'  pknames:TStringArray;'#13#10' '
  +' numpaks,i,j:integer;'#13#10'  pypkstr:String;'#13#10'begin'#13#10'  pypkst'
  +'r:=UIRootNode.GetAttribute(''PythonPackages'',true).AttribValue;'#13#10'  p'
  +'ypaks := TStringList.Create;'#13#10'  pypaks.LineBreak:='';'';'#13#10'  pyp'
  +'aks.SkipLastLineBreak:=true;'#13#10'  pypaks.Text:=pypkstr;'#13#10'  // de-'
  +'duplicate the list'#13#10'  for i:=pypaks.count-1 downto 0 do'#13#10'    fo'
  +'r j:=pypaks.count-1 downto 0 do'#13#10'      if (j<>i) and (pypaks[j]=pypak'
  +'s[i]) then'#13#10'        pypaks[j]:='''';'#13#10'  for i:=pypaks.count-1 d'
  +'ownto 0 do'#13#10'    if pypaks[i]='''' then'#13#10'      pypaks.Delete(i);'
  +#13#10'  numpaks:=pypaks.Count;'#13#10'  setlength(pknames,numpaks);'#13#10
  +'  for i:=0 to numpaks-1 do'#13#10'    pknames[i]:=pypaks[i];'#13#10'  resul'
  +'t:=pknames;'#13#10'end;'#13#10#13#10'procedure UpdateMemo(Data:String);'#13
  +#10'var'#13#10'  oldval,nm:string;'#13#10'begin'#13#10'  if (PyMemoComponent'
  +'<>nil)'#13#10'  and (assigned(PyMemoComponent)) then'#13#10'  begin'#13#10
  +'    {$ifndef JScript}'#13#10'    oldval:=PyMemoComponent.myNode.GetAttribut'
  +'e(''ItemValue'',false).AttribValue;'#13#10'    PyMemoComponent.ItemValue:=o'
  +'ldval+LineEnding+Data;'#13#10'    {$else}'#13#10'    nm:=PyMemoComponent.my'
  +'Node.NodeName;'#13#10'    if (nm<>'''') and (nm<>''XMemo1'') then'#13#10'  '
  +'  begin'#13#10'    asm'#13#10'      console.log(''file to memo ''+nm);'#13
  +#10'      pyodide.runPython(''FileToMemo("''+nm+''")'');'#13#10'    end;'#13
  +#10'    end;'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10'{$if'
  +'ndef JScript}'#13#10'var'#13#10'  glbPyObj,glbPyObjE:PPyObject;'#13#10#13#10
  +#13#10'function Arr2dstoVarArray(arr2ds:T2DStringArray):Variant;'#13#10'var'
  +#13#10'  varr:Variant;'#13#10'  i,j:integer;'#13#10'begin'#13#10'  if Length'
  +'(arr2ds) > 0 then'#13#10'  begin'#13#10'    varr:=VarArrayCreate([0, Length'
  +'(arr2ds) - 1, 0, length(arr2ds[0])-1], varVariant);'#13#10'    for i:=0 to '
  +'length(arr2ds)-1 do'#13#10'    begin'#13#10'      for j:=0 to length(arr2ds'
  +'[0])-1 do'#13#10'      begin'#13#10'        VarArrayPut(varr,arr2ds[i,j],[i'
  ,',j]);'#13#10'        //varr[i,j]:=arr2ds[i,j];'#13#10'      end;'#13#10'   '
  +' end;'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    //varr:=[];'#13
  +#10'    varr:=VarArrayCreate([0, 0, 0, 0], varVariant);'#13#10'  end;'#13#10
  +'  result:=varr;'#13#10'end;'#13#10'function Arr3dntoVarArray(arr3dn:T3DNumA'
  +'rray):Variant;'#13#10'var'#13#10'  varr:Variant;'#13#10'  i,j,k:integer;'#13
  +#10'begin'#13#10'  if length(arr3dn)=0 then'#13#10'    varr:=VarArrayCreate('
  +'[0, 0, 0, 0, 0, 0], varVariant)'#13#10'  else'#13#10'  begin'#13#10'    var'
  +'r:=VarArrayCreate([0, Length(arr3dn)-1, 0, length(arr3dn[0])-1, 0, length(a'
  +'rr3dn[0,0])-1], varVariant);'#13#10'    for i:=0 to length(arr3dn)-1 do'#13
  +#10'    begin'#13#10'      for j:=0 to length(arr3dn[0])-1 do'#13#10'      b'
  +'egin'#13#10'        for k:=0 to length(arr3dn[0,0])-1 do'#13#10'        beg'
  +'in'#13#10'          VarArrayPut(varr,arr3dn[i,j,k],[i,j,k]);'#13#10'       '
  +' end;'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'  result:=varr'
  +';'#13#10'end;'#13#10'function ConvertArrayOfVariantTo2DNumArray(varr:TArgs)'
  +':T2dNumArray;'#13#10'var'#13#10'  arr:T2DNumArray;'#13#10'  v:Variant;'#13
  +#10'  varri:TArgs;'#13#10'  i,j,l:integer;'#13#10'begin'#13#10'  setlength(a'
  +'rr,length(varr));'#13#10'  for i:=0 to length(arr)-1 do'#13#10'  begin'#13
  +#10'    varri:=varr[i];'#13#10'    l:=length(varri);'#13#10'    setlength(ar'
  +'r[i],l);'#13#10'    for j:=0 to l-1 do'#13#10'    begin'#13#10'      v:=var'
  +'ri[j];'#13#10'      if v<>null then'#13#10'      try'#13#10'      arr[i,j]:'
  +'=Double(v);'#13#10'      except'#13#10'        on exception do'#13#10'     '
  +'     arr[i,j]:=-999;'#13#10'      end'#13#10'      else'#13#10'        arr['
  +'i,j]:=-999;'#13#10'    end;'#13#10'  end;'#13#10'  result:=arr;'#13#10'end;'
  +#13#10'function ConvertArrayOfVariantTo1DNumArray(varr:TArgs):TNumArray;'#13
  +#10'var'#13#10'  arr:TNumArray;'#13#10'  v:Variant;'#13#10'  varri:TArgs;'#13
  +#10'  i,l:integer;'#13#10'begin'#13#10'  setlength(arr,length(varr));'#13#10
  +'  for i:=0 to length(varr)-1 do'#13#10'  begin'#13#10'    v:=varr[i];'#13#10
  +'    if v<>null then'#13#10'      try'#13#10'       arr[i]:=Double(v);'#13#10
  +'      except'#13#10'        on exception do'#13#10'          arr[i]:=-999;'
  +#13#10'      end'#13#10'    else'#13#10'      arr[i]:=-999;'#13#10'  end;'#13
  +#10'  result:=arr;'#13#10'end;'#13#10'function ConvertArrayOfVariantTo2DStri'
  +'ngArray(varr:TArgs):T2dStringArray;'#13#10'var'#13#10'  arr:T2DStringArray;'
  +#13#10'  v:Variant;'#13#10'  varri:TArgs;'#13#10'  i,j,l:integer;'#13#10'beg'
  +'in'#13#10'  setlength(arr,length(varr));'#13#10'  for i:=0 to length(arr)-1'
  +' do'#13#10'  begin'#13#10'    varri:=varr[i];'#13#10'    l:=length(varri);'
  +#13#10'    setlength(arr[i],l);'#13#10'    for j:=0 to l-1 do'#13#10'    beg'
  +'in'#13#10'      v:=varri[j];'#13#10'      if v<>null then'#13#10'      try'
  +#13#10'      arr[i,j]:=v;'#13#10'      except'#13#10'        on exception do'
  +#13#10'          arr[i,j]:='''';'#13#10'      end'#13#10'      else'#13#10' '
  +'       arr[i,j]:='''';'#13#10'    end;'#13#10'  end;'#13#10'  result:=arr;'
  +#13#10'end;'#13#10#13#10'function RunInterfaceFunc(e:TEventStatus;fname:Stri'
  +'ng;fnArgs:TArgs):Variant;'#13#10'var'#13#10'  v:Variant;'#13#10'//  str:str'
  +'ing;'#13#10'  bool:Boolean;'#13#10'  arr2ds:T2DStringArray;'#13#10'  arr2dn'
  +':T2DNumArray;'#13#10'  arr3dn:T3DNumArray;'#13#10'  arr1dn:TNumArray;'#13#10
  +'  i:integer;'#13#10'  aov:Array of Variant;'#13#10'begin'#13#10'  if fname='
  +'''ShowMessage'' then'#13#10'    mmo.mmiShowMessage(fnArgs[0])'#13#10'  else'
  +' if fname=''ShowXForm'' then'#13#10'    mmo.mmiShowXForm(fnArgs[0], myStrTo'
  +'Bool(fnArgs[1]))'#13#10'  else if fname=''CloseXForm'' then'#13#10'    mmo.'
  +'mmiCloseXForm(fnArgs[0])'#13#10'  else if fname=''GetPropertyValue'' then'
  +#13#10'  begin'#13#10'    v:=mmo.mmiGetPropertyValue(fnArgs[0], fnArgs[1]);'
  +#13#10'  end'#13#10'  else if fname=''SetPropertyValue'' then'#13#10'  begin'
  +#13#10'    mmo.mmiSetPropertyValue(fnArgs[0], fnArgs[1], fnArgs[2]);'#13#10
  +'  end'#13#10'  else if fname=''Confirm'' then'#13#10'  begin'#13#10'    boo'
  +'l:=mmo.mmiconfirm(fnArgs[0]);'#13#10'    v:=bool;'#13#10'  end'#13#10'  els'
  +'e if fname=''Prompt'' then'#13#10'  begin'#13#10'    v:=mmo.mmiPrompt(fnArg'
  +'s[0], fnArgs[1]);'#13#10'  end'#13#10'  else if fname=''CopyToClip'' then'
  +#13#10'  begin'#13#10'    mmo.mmiCopyToClip(fnArgs[0]);'#13#10'  end'#13#10
  +'  else if fname=''CopyFromClip'' then'#13#10'  begin'#13#10'    v:=mmo.mmiC'
  +'opyFromClip(e);'#13#10'  end'#13#10'  else if fname=''LoadTableFromExcelCop'
  +'y'' then'#13#10'  begin'#13#10'    mmo.mmiLoadTableFromExcelCopy(fnArgs[0],'
  +' fnArgs[1]);'#13#10'  end'#13#10'  else if fname=''GetTableDataForExcel'' t'
  +'hen'#13#10'  begin'#13#10'    v:=mmo.mmiGetTableDataForExcel(fnArgs[0]);'#13
  +#10'  end'#13#10'  else if fname=''LoadTableFromNumArray'' then'#13#10'  beg'
  +'in'#13#10'    //fnargs[1] is an array of variant, but needs to be a T2DNumA'
  ,'rray???? !!!!'#13#10'    arr2dn:=ConvertArrayOfVariantTo2DNumArray(fnargs[1'
  +']);'#13#10'    mmo.mmiLoadTableFromNumArray(fnArgs[0], arr2dn);'#13#10'  en'
  +'d'#13#10'  else if fname=''LoadTableFromStringArray'' then'#13#10'  begin'
  +#13#10'    //fnargs[1] is an array of variant, but needs to be a T2DNumArray'
  +'???? !!!!'#13#10'    arr2ds:=ConvertArrayOfVariantTo2DStringArray(fnargs[1]'
  +');'#13#10'    mmo.mmiLoadTableFromStringArray(fnArgs[0], arr2ds);'#13#10'  '
  +'end'#13#10'  else if fname=''GetTableDataArray'' then'#13#10'  begin'#13#10
  +'    arr2ds:=mmo.mmiGetTableDataArray(fnArgs[0], fnargs[1]);'#13#10'    v:=A'
  +'rr2dstoVarArray(arr2ds);'#13#10'  end'#13#10'  else if fname=''DoEvent'' th'
  +'en'#13#10'    mmo.mmiDoEvent(fnArgs[0], fnArgs[1], fnArgs[2])'#13#10'  else'
  +' if fname=''MoveComponent'' then'#13#10'    mmo.mmiMoveComponent(fnArgs[0],'
  +' fnArgs[1])'#13#10'  else if fname=''CopyComponent'' then'#13#10'    mmo.mm'
  +'iCopyComponent(fnArgs[0], fnArgs[1], fnArgs[2])'#13#10'  else if fname=''De'
  +'leteComponent'' then'#13#10'  begin'#13#10'    bool:=mmo.mmiDeleteComponent'
  +'(fnArgs[0], fnargs[1], fnargs[2]);'#13#10'    v:=bool;'#13#10'  end'#13#10
  +'  else if fname=''DeleteSelectedTreeNode'' then'#13#10'  begin'#13#10'    m'
  +'mo.mmiDeleteSelectedTreeNode(fnArgs[0]);'#13#10'  end'#13#10'  else if fnam'
  +'e=''GetGPUParamNumValue'' then'#13#10'  begin'#13#10'    arr1dn:=mmo.mmiGet'
  +'GPUParamNumValue(fnArgs[0], fnArgs[1]);'#13#10'    v:=arr1dn;'#13#10'  end'
  +#13#10'  else if fname=''GetGPUParam2DNumValue'' then'#13#10'  begin'#13#10
  +'    arr2dn:=mmo.mmiGetGPUParam2DNumValue(fnArgs[0], fnArgs[1]);'#13#10'    '
  +'v:=arr2dn;'#13#10'  end'#13#10'  else if fname=''GetGPUConstIntValue'' then'
  +#13#10'  begin'#13#10'    i:=mmo.mmiGetGPUConstIntValue(fnArgs[0], fnArgs[1]'
  +');'#13#10'    v:=i;'#13#10'  end'#13#10'  else if fname=''SetGPUParamNumVal'
  +'ue'' then'#13#10'  begin'#13#10'    arr1dn:=ConvertArrayOfVariantTo1DNumArr'
  +'ay(fnargs[2]);'#13#10#13#10'    mmo.mmiSetGPUParamNumValue(fnArgs[0], fnArg'
  +'s[1], arr1dn)'#13#10'  end'#13#10'  else if fname=''SetGPUParam2DNumValue'''
  +' then'#13#10'  begin'#13#10'    arr2dn:=ConvertArrayOfVariantTo2DNumArray(f'
  +'nargs[2]);'#13#10'    mmo.mmiSetGPUParam2DNumValue(fnArgs[0], fnArgs[1], ar'
  +'r2dn)'#13#10'  end'#13#10'  else if fname=''SetGPUConstIntValue'' then'#13
  +#10'    mmo.mmiSetGPUConstIntValue(fnArgs[0], fnArgs[1], fnargs[2])'#13#10' '
  +' else if fname=''StartMain'' then'#13#10'    mmo.mmiStartMain(e)'#13#10'  e'
  +'lse if fname=''ShowBusy'' then'#13#10'    mmo.mmiShowBusy(e)'#13#10'  else '
  +'if fname=''HideBusy'' then'#13#10'    mmo.mmiHideBusy'#13#10'  else if fnam'
  +'e=''ProcessMessages'' then'#13#10'    mmo.mmiProcessMessages'#13#10'  else '
  +'if fname=''UserSystemAsString'' then'#13#10'    v:=mmo.mmiUserSystemAsStrin'
  +'g()'#13#10'  else if fname=''LoadUserSystemString'' then'#13#10'    mmo.mmi'
  +'LoadUserSystemString(fnArgs[0])'#13#10'  else if fname=''ConsoleLog'' then'
  +#13#10'    mmo.mmiConsoleLog(fnArgs[0])'#13#10'  else if fname=''Array2DToSt'
  +'ring'' then'#13#10'    v:=mmo.mmiArray2DToString(fnargs[0])'#13#10'  else i'
  +'f fname=''GetGPUPixelArray'' then'#13#10'  begin'#13#10'    arr3dn:=mmo.mmi'
  +'GetGPUPixelArray(fnArgs[0]);'#13#10'    v:=Arr3dntoVarArray(arr3dn);'#13#10
  +'  end'#13#10'  else if fname=''GetGPUPixelArrayAsString'' then'#13#10'    v'
  +':=mmo.mmiGetGPUPixelArrayAsString(fnArgs[0])'#13#10'  else if fname=''GetGP'
  +'UStageArray'' then'#13#10'  begin'#13#10'    arr3dn:=mmo.mmiGetGPUStageArra'
  +'y(fnArgs[0]);'#13#10'    v:=Arr3dntoVarArray(arr3dn);'#13#10'  end'#13#10' '
  +' else if fname=''GetGPUInitStageArray'' then'#13#10'  begin'#13#10'    arr3'
  +'dn:=mmo.mmiGetGPUInitStageArray(fnArgs[0]);'#13#10'    v:=Arr3dntoVarArray('
  +'arr3dn);'#13#10'  end'#13#10'  else if fname=''GetGPUStageArrayAsString'' t'
  +'hen'#13#10'    v:=mmo.mmiGetGPUStageArrayAsString(fnArgs[0])'#13#10'  else '
  +'if fname=''RedirectPyLog'' then'#13#10'    RedirectPyLog(fnArgs[0])'#13#10
  +'  else if fname=''BuildXArrays'' then'#13#10'    BuildXArrays(fnArgs[0])'#13
  +#10'  else if fname=''DebugStart'' then'#13#10'    mmo.mmiDebugStart'#13#10
  +'  else if fname=''UpdatepyLoadedFuncs'' then'#13#10'    UpdatepyLoadedFuncs'
  +'(fnArgs[0]);'#13#10#13#10'  result:=v;'#13#10'end;'#13#10#13#10'procedure T'
  +'MyPyEvents.PyVarExtGetData(Sender: TObject; var Data: PPyObject);'#13#10'be'
  +'gin'#13#10'with PythonEngine1 do'#13#10' begin'#13#10'   Data := glbPyObj;'
  +#13#10'   Py_XIncRef(Data); // This is very important'#13#10' end;'#13#10'en'
  +'d;'#13#10'procedure TMyPyEvents.PyVarExtSetData(Sender: TObject; Data: PPyO'
  +'bject);'#13#10'var'#13#10'  PKeyObj,PArgsObj,PRsltObj,POb:PPyObject;'#13#10
  +'  fname:string;'#13#10'  fnArgs:Array of Variant;'#13#10' // myargs:TString'
  +'List;'#13#10'  i:integer;'#13#10'  v:Variant;'#13#10'  t:TVarType;'#13#10' '
  +' e:TeventStatus;'#13#10'begin'#13#10'with PythonEngine1 do'#13#10' begin'#13
  +#10'  Py_XDecRef(glbPyObj); // This is very important'#13#10'  glbPyObj := D'
  ,'ata;'#13#10'  Py_XIncRef(glbPyObj); // This is very important'#13#10'  //sh'
  +'owmessage(''ExtSetData done'');'#13#10#13#10'  // glbPyObj acts as a messag'
  +'e from python....instruction to execute a pascal function'#13#10'  // extra'
  +'ct the fields from the message'#13#10'  // IMPORTANTLY....the Python script'
  +' has paused while this step is done....yay!'#13#10'  PKeyObj := PythonEngin'
  +'e1.PyObject_GetAttrString(glbPyObj, ''fname'');'#13#10'  fname:=PythonEngin'
  +'e1.PyObjectAsString(PKeyObj);'#13#10'  PRsltObj := PythonEngine1.PyObject_G'
  +'etAttrString(glbPyObj, ''rslt'');'#13#10'  v:=PythonEngine1.PyObjectAsVaria'
  +'nt(PRsltObj);'#13#10'  //PArgsObj := PythonEngine1.PyObject_GetItem(glbPyOb'
  +'j, PythonEngine1.VariantAsPyObject(''args''));'#13#10#13#10'  PArgsObj := P'
  +'ythonEngine1.PyObject_GetAttrString(glbPyObj,''args'');'#13#10'  //PythonEn'
  +'gine1.PyTupleToStrings(PArgsObj,myargs);'#13#10#13#10'  // args is a set of'
  +' variants'#13#10'  setlength(fnArgs,PythonEngine1.PyTuple_Size(PArgsObj));'
  +#13#10'  for i:=0 to length(fnArgs)-1 do'#13#10'  begin'#13#10'   POb:=Pytho'
  +'nEngine1.PyTuple_GetItem(PArgsObj,i);'#13#10'   fnArgs[i]:=PythonEngine1.Py'
  +'ObjectAsVariant(POb);'#13#10'  end;'#13#10#13#10'  t:=varType(v);'#13#10'  '
  +'e:=glbEvent;       // slightly dodgy.. this is reset at start of new event'
  +#13#10'  if (fname<>''xxx'')'#13#10'  and (varType(v) = 8)  // string'#13#10
  +'  and (v=''xxx'') then    // avoid re-triggering when return value has been'
  +' set'#13#10'  begin'#13#10'    //showmessage(''from python. fname=''+fname)'
  +';'#13#10'    // run the requested function'#13#10'    v:=RunInterfaceFunc(e'
  +',fname,fnArgs);'#13#10'    // pass the current e values to Python'#13#10'  '
  +'  if (e<>nil) then'#13#10'    begin'#13#10'      PythonEngine1.PyObject_Set'
  +'AttrString(glbPyObjE,''EventType'',PythonEngine1.VariantAsPyObject(UTF8Deco'
  +'de(e.EventType)));'#13#10'      PythonEngine1.PyObject_SetAttrString(glbPyO'
  +'bjE,''NodeId'',PythonEngine1.VariantAsPyObject(UTF8Decode(e.NodeId)));'#13
  +#10'      PythonEngine1.PyObject_SetAttrString(glbPyObjE,''NameSpace'',Pytho'
  +'nEngine1.VariantAsPyObject(UTF8Decode(e.NameSpace)));'#13#10'      PythonEn'
  +'gine1.PyObject_SetAttrString(glbPyObjE,''ReturnString'',PythonEngine1.Varia'
  +'ntAsPyObject(UTF8Decode(e.ReturnString)));'#13#10'      PyInterfaceE.ValueO'
  +'bject:=glbPyObjE;'#13#10'    end;'#13#10'    // send the function result ba'
  +'ck to Python'#13#10'    //PRsltObj:=PythonEngine1.PyString_FromString(PChar'
  +'(str));'#13#10'    PRsltObj:=PythonEngine1.VariantAsPyObject(v);'#13#10'   '
  +' PythonEngine1.PyObject_SetAttrString(glbPyObj,''rslt'',PRsltObj);'#13#10' '
  +'   PyInterfaceVar.ValueObject:=glbPyObj;'#13#10'  end;'#13#10'  //myargs.fr'
  +'ee;'#13#10' end;'#13#10'end;'#13#10#13#10'procedure TMyPyEvents.PyVarEExtGe'
  +'tData(Sender: TObject; var Data: PPyObject);'#13#10'begin'#13#10'with Pytho'
  +'nEngine1 do'#13#10' begin'#13#10'   Data := glbPyObjE;'#13#10'   Py_XIncRef'
  +'(Data); // This is very important'#13#10' end;'#13#10'end;'#13#10'procedure'
  +' TMyPyEvents.PyVarEExtSetData(Sender: TObject; Data: PPyObject);'#13#10'beg'
  +'in'#13#10'with PythonEngine1 do'#13#10'  begin'#13#10'    Py_XDecRef(glbPyO'
  +'bjE); // This is very important'#13#10'    glbPyObjE := Data;'#13#10'    Py'
  +'_XIncRef(glbPyObjE); // This is very important'#13#10'  end;'#13#10'end;'#13
  +#10#13#10'procedure TMyPyEvents.PyIOSent(Sender: TObject; const Data:AnsiStr'
  +'ing);'#13#10'begin'#13#10'  UpdateMemo(Data);'#13#10'end;'#13#10#13#10'proc'
  +'edure TMyPyEvents.PyIOSentUni(Sender: TObject;  const Data: UnicodeString);'
  +#13#10'begin'#13#10'  UpdateMemo(UTF8Decode(Data));'#13#10'end;'#13#10#13#10
  +'procedure DoPy_InitEngine;'#13#10'var'#13#10'  ok:boolean;'#13#10'begin'#13
  +#10'  if Assigned(PythonEngine1) then'#13#10'  begin'#13#10'    // Engine al'
  +'ready exists,'#13#10'    // clear out any previously-declared python vars, '
  +'functions etc...'#13#10'    PythonEngine1.ExecString(''for name in dir(): '
  +'''+LineEnding+'#13#10'                             ''  if not name.startswi'
  +'th(''''_'''')''+'#13#10'                                '' and not name=='''
  +'''PyInterfaceVar''''''+'#13#10'                                '' and not n'
  +'ame==''''PyInterfaceE'''':''+LineEnding+'#13#10'                           '
  +'  ''    del globals()[name]''+LineEnding);'#13#10'  end'#13#10'  else'#13#10
  +'  begin'#13#10'    ok:=true;'#13#10'    // First time in, Create python eng'
  +'ine and interfaces...'#13#10#13#10'    PythonEngine1:=TPythonEngine.Create('
  +'nil);'#13#10'    PythonEngine1.Name:=''PythonEngine1'';'#13#10'    PythonEn'
  +'gine1.PyFlags:=[pfUseClassExceptionsFlag];'#13#10'    PythonEngine1.Redirec'
  +'tIO:=true;'#13#10'    PythonEngine1.IO:=PythonIO;'#13#10#13#10'    PythonEn'
  +'gine1.UseLastKnownVersion:=true;     // use the Python version installed on'
  +' the machine'#13#10'    PythonEngine1.AutoLoad:=false;'#13#10'    try'#13#10
  +'    PythonEngine1.LoadDll;'#13#10'    except'#13#10'      on E: Exception d'
  ,'o'#13#10'      begin'#13#10'        showmessage(''Please ensure Python is i'
  +'nstalled, or remove the -dPython compiler directive to run without Python'''
  +');'#13#10'        ok:=false;'#13#10'      end;'#13#10'    end;'#13#10#13#10
  +'    if ok then'#13#10'    begin'#13#10'      PythonVersion:=PythonEngine1.R'
  +'egVersion;'#13#10#13#10'      // create interface objects for communication'
  +' to/from Pascal code'#13#10'      PyInterfaceVar:=TPythonDelphiVar.Create(n'
  +'il);'#13#10'      PyInterfaceVar.Name:=''PyInterfaceVar'';'#13#10'      PyI'
  +'nterfaceVar.VarName:=''PyInterfaceVar'';'#13#10'      PyInterfaceVar.Module'
  +':=''__main__'';'#13#10'      PyInterfaceVar.Engine:=PythonEngine1;'#13#10' '
  +'     PyInterfaceVar.OnExtGetData:=@PyEvents.PyVarExtGetData;'#13#10'      P'
  +'yInterfaceVar.OnExtSetData:=@PyEvents.PyVarExtSetData;'#13#10'      PyInter'
  +'faceVar.Initialize;'#13#10#13#10'      PyInterfaceE:=TPythonDelphiVar.Creat'
  +'e(nil);'#13#10'      PyInterfaceE.Name:=''PyInterfaceE'';'#13#10'      PyIn'
  +'terfaceE.VarName:=''PyInterfaceE'';'#13#10'      PyInterfaceE.Module:=''__m'
  +'ain__'';'#13#10'      PyInterfaceE.Engine:=PythonEngine1;'#13#10'      PyIn'
  +'terfaceE.OnExtGetData:=@PyEvents.PyVarEExtGetData;'#13#10'      PyInterface'
  +'E.OnExtSetData:=@PyEvents.PyVarEExtSetData;'#13#10'      PyInterfaceE.Initi'
  +'alize;'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure Set'
  +'upPyEngine(PyLibDir,PyVersion:String);'#13#10'begin'#13#10'  //PythonLibDir'
  +':=PyLibDir;'#13#10'  //PythonVersion:=PyVersion;'#13#10'  PythonIO:=TPython'
  +'GUIInputOutput.Create(nil);'#13#10'  PyEvents:=TMyPyEvents.Create;'#13#10' '
  +' PythonIO.OnSendData:=@PyEvents.PyIOSent;'#13#10'  PythonIO.OnSendUniData:='
  +'@PyEvents.PyIOSentUni;'#13#10'  // create and start the python engine'#13#10
  +'  DoPy_InitEngine;'#13#10'end;'#13#10#13#10#13#10'function PyodideScript:TS'
  +'tringList;'#13#10'var'#13#10'  script:TStringList;'#13#10'  pknames:TString'
  +'Array;'#13#10'  i,j,numpakstoload:integer;'#13#10'  mystr:String;'#13#10'be'
  +'gin'#13#10'  CheckForPythonCode;'#13#10#13#10'  pknames:=BuildPackageList;'
  +#13#10'  numpakstoload:=2+length(pknames);'#13#10#13#10'  script:=TStringLis'
  +'t.Create;'#13#10'  script.add(''<script type="application/javascript" >'');'
  +#13#10'  script.add(''var realalert=window.alert;'');'#13#10'  script.add('''
  +'window.alert=function(msg){'');'#13#10'  script.add(''  console.log(msg);'''
  +');'#13#10'  script.add(''  if (msg.toLowerCase().includes("memory access ou'
  +'t of bounds")) {window.alert=realalert;}'');'#13#10'  script.add(''  else {'
  +'realalert(msg);}'');'#13#10'  script.add(''  return true;'');'#13#10'  scri'
  +'pt.add(''};'');'#13#10'  script.add(''</script> '');'#13#10#13#10'  // Load'
  +' the pyodide script from the web; if unavailable try loading from pyodide_l'
  +'ocal...'#13#10'  script.add(''<script src="https://cdn.jsdelivr.net/pyodide'
  +'/v0.18.1/full/pyodide.js"></script>'');'#13#10'  script.add(''<script type='
  +'"application/javascript" >'');'#13#10'  script.add(''var pyodideReady = 0;'
  +''');'#13#10'  script.add(''var PyodideOffline = false;'');'#13#10'  script.'
  +'add(''var readyForRunMode = false;'');'#13#10'  script.add(''var pystatdiv='
  +'document.createElement("div")'');'#13#10'  //script.add(''    window.langua'
  +'gePluginUrl = "https://pyodide-cdn2.iodide.io/v0.15.0/full/";'');'#13#10'  '
  +'if not PythonCodeExists then'#13#10'  begin'#13#10'    // no need for user '
  +'to wait for Pyodide to finish loading on startup if there''s no Python in t'
  +'he system...'#13#10'    script.add(''console.log("No Python scripts found i'
  +'n this system")'');'#13#10'    script.add(''readyForRunMode = true;'');'#13
  +#10'  end;'#13#10'  script.add(''function CreatePystatdiv() {'');'#13#10'  /'
  +'/ create a div to display Python load status'#13#10'  script.add(''  pystat'
  +'div.id="PyLoadStatus"'');'#13#10'  script.add(''  pystatdiv.innerHTML="Pyth'
  +'on Loading..."'');'#13#10'  script.add(''  pystatdiv.style.height="30px"'')'
  +';'#13#10'  script.add(''  pystatdiv.style.width="250px"'');'#13#10'  script'
  +'.add(''  pystatdiv.style.right=0'');'#13#10'  script.add(''  pystatdiv.styl'
  +'e.top=0'');'#13#10'  script.add(''  pystatdiv.style.zIndex=999'');'#13#10' '
  +' script.add(''  pystatdiv.style.position="absolute"'');'#13#10'  script.add'
  +'(''  pystatdiv.style.backgroundColor="red"'');'#13#10'  script.add(''  pyst'
  +'atdiv.style.color="white"'');'#13#10'  script.add(''  document.getElementsB'
  +'yTagName("body")[0].prepend(pystatdiv);'');'#13#10'  script.add(''}'');'#13
  +#10'  script.add(''function HidePystatdiv() {'');'#13#10'  script.add(''  py'
  +'statdiv.style.display="none";'');'#13#10'  script.add(''  readyForRunMode ='
  +' true;'');'#13#10'  script.add(''}'');'#13#10'  script.add(''function ShowP'
  +'ystatdiv() {'');'#13#10'  script.add(''  pystatdiv.style.display="block";'''
  +');'#13#10'  script.add(''  pystatdiv.style.backgroundColor="red"'');'#13#10
  +'  script.add(''  pystatdiv.style.color="white"'');'#13#10'  script.add(''  '
  ,'pystatdiv.innerHTML="Python Loading..."'');'#13#10'  script.add(''}'');'#13
  +#10'  script.add(''function SetPystatdiv(txt,bg,col,ok) {'');'#13#10'  scrip'
  +'t.add(''  pystatdiv.style.display="block";'');'#13#10'  script.add(''  pyst'
  +'atdiv.innerHTML=txt'');'#13#10'  script.add(''  pystatdiv.style.backgroundC'
  +'olor=bg'');'#13#10'  script.add(''  pystatdiv.style.color=col'');'#13#10'  '
  +'script.add(''  readyForRunMode = ok;'');'#13#10'  script.add(''}'');'#13#10
  +#13#10#13#10'  script.add(''var localErrDone = false;'');'#13#10'  script.ad'
  +'d(''var pysrc2=document.createElement("script")'');'#13#10'  script.add(''v'
  +'ar pysrc3=document.createElement("script")'');'#13#10'  script.add(''var py'
  +'odide'');'#13#10'  script.add(''pysrc2.setAttribute("type","application/jav'
  +'ascript")'');'#13#10'  script.add(''pysrc3.setAttribute("type","application'
  +'/javascript")'');'#13#10#13#10'  script.add(''let otherloadedPackages = new'
  +' Array();'');'#13#10'  //script.add(''document.getElementsByTagName("head")'
  +'[0].prepend(pywebsrc)'');'#13#10'  //script.add(''pysrc1.setAttribute("src"'
  +',"https://pyodide-cdn2.iodide.io/v0.15.0/full/pyodide.js");'');'#13#10'  //'
  +'script.add(''pywebsrc.setAttribute("src","https://cdn.jsdelivr.net/pyodide/'
  +'v0.18.1/full/pyodide.js");'');'#13#10'  script.add(''</script> '');'#13#10
  +#13#10'  script.add(''<script type="application/javascript" >'');'#13#10'  s'
  +'cript.add(''function pysrcLoaded() { '');'#13#10'  script.add(''    // pyod'
  +'ide is now ready to use...load some packages...  '' );'#13#10'  script.add('
  +'''    console.log("python: "+pyodide.runPython("import sys\nsys.version"));'
  +''' );'#13#10'//  script.add(''    CreatePystatdiv() '');'#13#10'  script.ad'
  +'d(''    loadPyPkg0("setuptools",''+inttostr(numpakstoload)+'',doAllFinalIni'
  +'ts);'');'#13#10'  script.add(''    loadPyPkg0("micropip",''+inttostr(numpak'
  +'stoload)+'',doAllFinalInits);'');'#13#10'  script.add(''    pyodide.runPyth'
  +'on(''''from js import pas'''');'');'#13#10'  script.add('' } '');'#13#10#13
  +#10'  script.add(''async function loadpyodidefromweb(){'');'#13#10'  script.'
  +'add(''    console.log("try web pyodide load...");'');'#13#10'  script.add('
  +'''    try {'');'#13#10'  script.add(''      pyodide = await loadPyodide({ i'
  +'ndexURL : "https://cdn.jsdelivr.net/pyodide/v0.18.1/full/" })'');'#13#10'  '
  +'script.add(''      if (pyodide) {'');'#13#10'  script.add(''        pysrcLo'
  +'aded();}'');'#13#10'  script.add(''      else {'');'#13#10'  script.add('' '
  +'       await loadpyodidelocal();'');    // this calls pysrcLoaded'#13#10'  '
  +'script.add(''      }'');'#13#10'  script.add(''    } catch(err) {'');'#13#10
  +'  script.add(''        console.log(err.message);'');'#13#10'  script.add('''
  +'        await loadpyodidelocal();'');    // this calls pysrcLoaded'#13#10' '
  +' script.add(''    }'');'#13#10'  script.add(''}'');'#13#10#13#10'  //  full'
  +' example of offline pyodide at....'#13#10'  //https://github.com/basvandert'
  +'ol/pyodide/releases/download/localpyodide-v0.1/localpyodide.zip'#13#10'  sc'
  +'ript.add(''function noLocalPyodide(){'');'#13#10'  script.add(''  if (local'
  +'ErrDone==false) {'');'#13#10'  script.add(''    console.log("cannot load lo'
  +'cal pyodide - Python will be unavailable"); '');'#13#10'  script.add(''    '
  +'console.log("To work with Pyodide offline, create a folder ./pyodide_local"'
  +'); '');'#13#10'  script.add(''    console.log("   This folder must contain '
  +'pyodide files, such as provided from:"); '');'#13#10'  script.add(''    con'
  +'sole.log("      https://github.com/basvandertol/pyodide/releases/download/l'
  +'ocalpyodide-v0.1/localpyodide.zip");'');'#13#10'//  script.add(''    consol'
  +'e.log("      https://github.com/iodide-project/pyodide/releases/download/0.'
  +'14.3/pyodide-build-0.14.3.tar.bz2");'');'#13#10'//  script.add(''    consol'
  +'e.log("      https://github.com/iodide-project/pyodide/releases/download/0.'
  +'18.1/pyodide-build-0.18.1.tar.bz2");'');'#13#10'//  script.add(''    consol'
  +'e.log("   and also include the file loadlocal.js, which can be found at:");'
  +''');'#13#10'//  script.add(''    console.log("      https://github.com/iodi'
  +'de-project/pyodide/tree/6a2dd522f1eb4143f2630deae0a1fa9555546dfe/runlocal")'
  +';'');'#13#10'//  script.add(''    console.log("   Alternatively there is a '
  +'pyodide_local folder containing minimum required files provided at:");'');'
  +#13#10'//  script.add(''    console.log("      https://github.com/Steve--W/X'
  +'IDE");'');'#13#10'  script.add(''    localErrDone = true;'');'#13#10'  scri'
  +'pt.add(''    alert("cannot load pyodide - Python will be unavailable. See c'
  +'onsole for messages."); '');'#13#10'  script.add(''    setTimeout(HidePysta'
  +'tdiv, 20); '');'#13#10'  script.add(''}} '');'#13#10#13#10'  script.add(''p'
  +'ysrc2.onerror = function (){'');'#13#10'  script.add(''              noLoca'
  +'lPyodide(); '');'#13#10'  script.add(''            }'');'#13#10'  script.ad'
  +'d(''pysrc3.onerror = function (){'');'#13#10'  script.add(''              n'
  ,'oLocalPyodide(); '');'#13#10'  script.add(''            }'');'#13#10#13#10
  +'  script.add(''async function loadpyodidelocal(){ '');'#13#10'  script.add('
  +'''  SetPystatdiv( "Loading Pyodide Local","red","white",false); '');'#13#10
  +'  script.add(''  console.log("try local pyodide load..."); '');'#13#10'  sc'
  +'ript.add(''  console.log("do languagePluginUrl...."); '');'#13#10'  script.'
  +'add(''  window.languagePluginUrl = "./pyodide_local/";'');'#13#10'  script.'
  +'add(''  pysrc2.setAttribute("src", "pyodide_local/loadlocal.js");'');'#13#10
  +'  script.add(''  pysrc2.async = false;'');'#13#10'  script.add(''  document'
  +'.getElementsByTagName("head")[0].prepend(pysrc2);'');'#13#10'  script.add('
  +'''  pysrc3.setAttribute("src", "pyodide_local/pyodide.js");'');'#13#10'  sc'
  +'ript.add(''  pysrc3.async = false;'');'#13#10'  script.add(''  pysrc2.after'
  +'(pysrc3); '');'#13#10'  script.add(''  pysrc3.addEventListener("load", asyn'
  +'c function() { '');'#13#10'  script.add(''  console.log("do await thing....'
  +'"); '');'#13#10'  script.add(''  await (async () => {  '');'#13#10'  script'
  +'.add(''    console.log("language plugin thing...."); '');'#13#10'  script.a'
  +'dd(''    await languagePluginLoader; '');'#13#10'  script.add(''      if (p'
  +'yodide) {'');'#13#10'  script.add(''        console.log("done loadpyodidelo'
  +'cal. calling pysrcLoaded");'');'#13#10'  script.add(''        PyodideOfflin'
  +'e=true; '');'#13#10'  script.add(''        pysrcLoaded();}'');'#13#10'  scr'
  +'ipt.add(''      else {noLocalPyodide();}'');'#13#10'  script.add(''})();'')'
  +';'#13#10'script.add(''  }); '');'#13#10'script.add(''}'');'#13#10#13#10#13
  +#10'  script.add(''CreatePystatdiv() '');'#13#10'  script.add(''loadpyodidef'
  +'romweb(); '');'#13#10'  script.add(''</script>'');'#13#10#13#10'  script.ad'
  +'d(''<script type="text/javascript" > '');'#13#10'  //script.add(''pywebsrc.'
  +'onerror = function (){'');'#13#10'  //script.add(''              console.lo'
  +'g("web load failed");'');'#13#10'  //script.add(''              loadpyodide'
  +'local();'');'#13#10'  //script.add(''            } '');'#13#10#13#10'  scri'
  +'pt.add(''</script>'');'#13#10#13#10'  script.add(''<script type="text/javas'
  +'cript" > '');'#13#10'  script.add(''function DoFinalInits(){'');'#13#10'  /'
  +'/script.add(''  readyForRunMode = true;'');'#13#10'  script.add(''  if (myD'
  +'eployedMode!="FromLaz") { '');'#13#10'  // script.add(''  alert("python DoF'
  +'inalInits - checking for saved system now"); '');'#13#10'  script.add(''   '
  +' var ok=pas.XObjectInsp.CheckForSavedSystemOnLoad();'');'#13#10'  script.ad'
  +'d(''  } '');'#13#10'  script.add(''  if (pas.XObjectInsp.RunningDeployedRun'
  +'time==true) {'');'#13#10'  script.add(''    pas.XObjectInsp.ContinueToggleT'
  +'oRunMode();  }'');'#13#10'  script.add(''  }'');'#13#10#13#10'  script.add('
  +'''function doContinueFunc(continueFunc) { '');'#13#10'  script.add(''    co'
  +'ntinueFunc();'');'#13#10'  script.add('' } '');'#13#10'  script.add(''funct'
  +'ion doAllFinalInits() { '');'#13#10'  script.add(''      DoFinalInits();'')'
  +';'#13#10'  script.add(''      pas.XIDEMain.StartupPython();'');'#13#10'  sc'
  +'ript.add('' } '');'#13#10'  script.add(''function checkReady(pkgName,numpak'
  +'s,continueFunc) { '');'#13#10'  script.add(''  console.log("pyodideReady="+'
  +'pyodideReady+" numpaks="+numpaks);'' );'#13#10'  script.add(''  if (pkgName'
  +'=="micropip") {'' );'#13#10'  script.add(''    loadPyPkgs(doAllFinalInits);'
  +''');'#13#10'  script.add(''  }'' );'#13#10'  script.add(''  if (pyodideRead'
  +'y==numpaks) {'');               // required packages all loaded'#13#10'  sc'
  +'ript.add(''      console.log(''''######### required packages loaded #######'
  +'###########'''');'');'#13#10'  script.add(''      doContinueFunc(continueFu'
  +'nc);'');'#13#10'  script.add(''      if (PyodideOffline) { '');'#13#10'  sc'
  +'ript.add(''        setTimeout(SetPystatdiv, 20, "Pyodide is Local","yellow"'
  +',"black",true);} '');'#13#10'  script.add(''      else { '');'#13#10'  scri'
  +'pt.add(''      setTimeout(HidePystatdiv, 20); } '');'#13#10'  script.add('''
  +'    };'');'#13#10'  script.add('' } '');'#13#10#13#10'  script.add(''functi'
  +'on testPyPkLoaded(pkgName) {'');'#13#10'  script.add(''var scrip=''''pas.Py'
  +'XUtils.PyPkTest=1;\n''''+'');'#13#10'  script.add(''''''try:\n''''+'');'#13
  +#10'  script.add(''''''  import ''''+pkgName+''''\n''''+'');'#13#10'  script'
  +'.add(''''''  print("no exceptions")\n''''+'');'#13#10'  script.add(''''''ex'
  +'cept ImportError as error:\n''''+'');'#13#10'  script.add(''''''  pas.PyXUt'
  +'ils.PyPkTest=0;\n''''+'');'#13#10'  script.add(''''''except Exception as ex'
  +'ception:\n''''+'');'#13#10'  script.add(''''''  pas.PyXUtils.PyPkTest=0;\n'
  +''''';'');'#13#10'  //script.add(''  console.log(scrip);'');'#13#10'  script'
  +'.add(''  pyodide.runPython(scrip);'');'#13#10'  script.add('' } '');'#13#10
  +'  //????''import pkgutil; print(1 if pkgutil.find_loader("module") else 0)'
  +''''#13#10'  //???? or... try:'#13#10'  //  import cow'#13#10'  //  print('''
  ,'\nModule was installed'')'#13#10'  //except ImportError:'#13#10'  //  print'
  +'(''\nThere was no such module installed'')"'#13#10'  script.add(''function '
  +'loadPyPkg0(pkgName,numpaks,continueFunc) { '');'#13#10'  script.add(''  if '
  +'((!(pkgName in pyodide.loadedPackages)) && (!(otherloadedPackages.includes('
  +'pkgName)))) {'');'#13#10'  script.add(''    try {'');'#13#10'  script.add('
  +'''      pyodide.loadPackage(pkgName).then(() => {'');'#13#10'  script.add('
  +'''      if (pkgName in pyodide.loadedPackages) {'');     // sadly, the pkg '
  +'name is now in this list, even if the load failed.'#13#10'  script.add(''  '
  +'      testPyPkLoaded(pkgName);'');'#13#10'  script.add(''        if (pas.Py'
  +'XUtils.PyPkTest==1) {'');'#13#10'  script.add(''          console.log(pkgNa'
  +'me+" is now available");'');'#13#10'  script.add(''          pyodideReady ='
  +' pyodideReady+1;'' );'#13#10'  script.add(''          checkReady(pkgName,nu'
  +'mpaks,continueFunc);'');'#13#10'  script.add(''        } '');'#13#10'  scri'
  +'pt.add(''        else {alert("Pyodide failed to load package " +pkgName+ " '
  +'- please check console for details");} '' );'#13#10'  script.add(''      } '
  +''');'#13#10'  script.add(''      else {'' );'#13#10'  script.add(''        '
  +'console.log("Pyodide failed to load package " +pkgName+ " - attempting with'
  +' micropip..."); '' );'#13#10'  script.add(''        if (PyodideOffline==fal'
  +'se) { '' );'#13#10'  script.add(''          pyodide.runPython("import micro'
  +'pip"); '' );'#13#10'  script.add(''          pyodide.runPythonAsync("await '
  +'micropip.install(''''"+pkgName+"'''')").then(() => {'');'#13#10'  script.ad'
  +'d(''            if (1==1) {'');'#13#10'  script.add(''              PkgLoad'
  +'ed(pkgName); '');'#13#10'  script.add(''              checkReady(pkgName,nu'
  +'mpaks,continueFunc);'');'#13#10'  script.add(''            }'');'#13#10'  s'
  +'cript.add(''          },() => {alert("Pyodide/micropip failed to load packa'
  +'ge " +pkgName+ " - please check console for details");});'');'#13#10'  scri'
  +'pt.add(''        }'');'#13#10'  script.add(''        else {alert("Pyodide i'
  +'s offline. Failed to load package " +pkgName+ " - please check console for '
  +'details");} '' );'#13#10'  script.add(''      }  '');'#13#10'  script.add('
  +'''    },() => {alert("Pyodide failed to load package " +pkgName+ " - please'
  +' check console for details");} );'');'#13#10'  script.add(''  }  '');'#13#10
  +'  script.add(''  catch(err) {alert("Pyodide failed to load package " +pkgNa'
  +'me+ " - please check console for details");}  '');'#13#10'  script.add('' }'
  +'} '');'#13#10#13#10'  script.add(''function PkgLoaded(pkgName) { '');'#13#10
  +'  script.add(''  pyodideReady = pyodideReady+1;'' );'#13#10'  script.add('''
  +'  console.log("pyodideReady="+pyodideReady);'' );'#13#10'  script.add(''  c'
  +'onsole.log(pkgName+" is now available");'');'#13#10'  script.add(''  otherl'
  +'oadedPackages.push(pkgName); '');'#13#10'  script.add(''  }'');'#13#10#13#10
  +'  script.add(''async function LoadNextPkg(pkgNames,i,continueFunc) { '');'
  +#13#10'  script.add(''  console.log("loadNextPackage ",i); '');'#13#10'  scr'
  +'ipt.add(''  var mystr=pkgNames[i]; '');'#13#10'  script.add(''  console.log'
  +'("Load Package "+mystr); '');'#13#10'  script.add(''  if (mystr=="xarray") '
  +'{mystr="xarray==0.19.0";} '');'#13#10'  script.add(''  if ((!(pkgNames[i] i'
  +'n pyodide.loadedPackages)) && (!(otherloadedPackages.includes(pkgNames[i]))'
  +')) {'');'#13#10'  script.add(''    if (PyodideOffline==false) { '');'#13#10
  +'  script.add(''      console.log("Need to load "+mystr); '');'#13#10'  scri'
  +'pt.add(''      pyodide.runPython("micropip.install(''''"+mystr+"'''')").the'
  +'n(() => {'');'#13#10'  script.add(''        console.log(mystr+" micropip re'
  +'turned ok");'');'#13#10'  script.add(''        testPyPkLoaded(pkgNames[i]);'
  +''');'#13#10'  script.add(''        if (pas.PyXUtils.PyPkTest==1) {'');'#13
  +#10'  script.add(''          PkgLoaded(pkgNames[i])'');'#13#10'  script.add('
  +'''          checkReady(pkgNames[i],pkgNames.length+2,continueFunc);'');'#13
  +#10'  script.add(''        }'');'#13#10'  script.add(''        else {alert("'
  +'Pyodide/micropip failed to load package " +pkgNames[i]+ " - please check co'
  +'nsole for details");} '' );'#13#10'  script.add(''        if (i<pkgNames.le'
  +'ngth-1) {'');'#13#10'  script.add(''          i=i+1;'');'#13#10'  script.ad'
  +'d(''          LoadNextPkg(pkgNames,i,continueFunc);'');'#13#10'  script.add'
  +'(''        }'');'#13#10'  script.add(''      },() => {alert("Pyodide/microp'
  +'ip failed to load package " +pkgNames[i]+ " - please check console for deta'
  +'ils");})'');'#13#10'  script.add(''    } '');'#13#10'  script.add(''    els'
  +'e {'');      // offline Pyodide.  micropip.install unavailable'#13#10'  scr'
  +'ipt.add(''      loadPyPkg0(pkgNames[i],pkgNames.length+2,continueFunc)'');'
  +#13#10'  script.add(''      if (i<pkgNames.length-1) {'');'#13#10'  script.a'
  +'dd(''        i=i+1;'');'#13#10'  script.add(''        LoadNextPkg(pkgNames,'
  ,'i,continueFunc); }'');'#13#10'  script.add(''      else { '');'#13#10'  scr'
  +'ipt.add(''        checkReady("",pkgNames.length+2,continueFunc);'');'#13#10
  +'  script.add(''      }'');'#13#10'  script.add(''    } '');'#13#10'  script'
  +'.add(''  } '');'#13#10'  script.add(''  else {'');'#13#10'  script.add(''  '
  +'  console.log(mystr + " already loaded. "); '');'#13#10'  script.add(''    '
  +'if (i<pkgNames.length-1) {'');'#13#10'  script.add(''      i=i+1;'');'#13#10
  +'  script.add(''      await LoadNextPkg(pkgNames,i,continueFunc);'');'#13#10
  +'  script.add(''      checkReady(pkgNames[i],pkgNames.length+2,continueFunc)'
  +';'');'#13#10'  script.add(''    }'');'#13#10'  script.add(''    else { '');'
  +#13#10'  script.add(''      checkReady("",pkgNames.length+2,continueFunc);'''
  +');'#13#10'  script.add(''    }'');'#13#10'  script.add(''  }}'');'#13#10#13
  +#10'  script.add(''async function loadPyPkgs(continueFunc) { '');'#13#10'  s'
  +'cript.add(''  console.log("loadPyPkgs"); '' );'#13#10'  script.add(''  pyod'
  +'ide.runPython("import micropip"); '' );'#13#10'    //???           //https:'
  +'//pypi.org/project/numpy/#files'#13#10'  //script.add(''  ShowPystatdiv()'''
  +');'#13#10'  script.add(''  SetPystatdiv("Loading Packages","red","white",fa'
  +'lse); '');'#13#10'  script.add(''  var pkNames=pas.PyXUtils.BuildPackageLis'
  +'t();'' );'#13#10'  script.add(''  if (pkNames.length>0) {await LoadNextPkg('
  +'pkNames,0,continueFunc);} '' );'#13#10'  script.add(''  else {checkReady(""'
  +',2,continueFunc);} '' );'#13#10'  script.add(''} '');'#13#10#13#10'  script'
  +'.add(''</script> '');'#13#10#13#10#13#10'  script.add(''<script> '');'#13#10
  +'  //script.add(''        window.addEventListener(''''DOMContentLoaded'''', '
  +'function() { '');'#13#10'  script.add(''        window.addEventListener('''
  +'''load'''', function() { '');'#13#10'  //script.add(''             language'
  +'PluginLoader.then(() => { pysrcLoaded();}); '');'#13#10'  script.add('''#9
  +'    });'');'#13#10'  script.add(''</script> '');'#13#10#13#10'  result:=scr'
  +'ipt;'#13#10'end;'#13#10#13#10'procedure RunInitialScript;'#13#10'var'#13#10
  +'  InitScript:TStringList;'#13#10'//  FPUExceptionMask:TFPUExceptionMask;'#13
  +#10'begin'#13#10#13#10'  if PyMemoComponent=nil then'#13#10'    PyMemoCompon'
  +'ent:=XIDEMain.XIDEForm.XMemo1;'#13#10'  SetExceptionMask([exInvalidOp, exDe'
  +'normalized, exZeroDivide, exOverflow, exUnderflow, exPrecision]);'#13#10'  '
  +'InitScript:=TStringList.Create;'#13#10'  // load the initialisation py scri'
  +'pt'#13#10'  // Sets up an internal library of XIDE Interface functions, ava'
  +'ilable to the user.'#13#10'  InitScript.Clear;'#13#10'  InitScript.add(''im'
  +'port sys'');'#13#10'  InitScript.add(''import json'');'#13#10'  InitScript.'
  +'add(''from inspect import getmembers, isfunction'');'#13#10'  InitScript.ad'
  +'d(''print(sys.version)'');'#13#10'  InitScript.add(''class MyMessage:'');'
  +#13#10'  InitScript.add(''  fname = ''''xxx'''''');'#13#10'  InitScript.add('
  +'''  args = (''''1'''',''''2'''',''''3'''')'');'#13#10'  InitScript.add(''  '
  +'rslt = ''''xxx'''''');'#13#10'  InitScript.add(''Xmsg = MyMessage()'');'#13
  +#10'  InitScript.add(''class eClass:'');'#13#10'  InitScript.add(''  EventTy'
  +'pe = '''''''''');'#13#10'  InitScript.add(''  NodeId = '''''''''');'#13#10
  +'  InitScript.add(''  NameSpace = '''''''''');'#13#10'  InitScript.add(''  R'
  +'eturnString = '''''''''');'#13#10'  InitScript.add(''e = eClass()'');'#13#10
  +'  InitScript.add(''PyInterfaceE.Value = e'');'#13#10'  InitScript.add('''')'
  +';'#13#10'  InitScript.add(''def RunXIDEFunc(fname,args):'');'#13#10'  InitS'
  +'cript.add(''  Xmsg.fname = fname'');'#13#10'  InitScript.add(''  Xmsg.args '
  +'= args''); // args is Tuple type'#13#10'  InitScript.add(''  Xmsg.rslt = '''
  +'''xxx'''''');'#13#10'  InitScript.add(''  PyInterfaceVar.Value = Xmsg'');'
  +#13#10'  InitScript.add(''  return Xmsg.rslt'');'#13#10'  InitScript.add(''d'
  +'ef GetPropertyValue(NodeName,PropName):'');'#13#10'  //InitScript.add(''  p'
  +'rint(''''GetPropertyValue(''''+NodeName+'''',''''+PropName+'''')'''')'');'
  +#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetPropertyValue'''',(Nod'
  +'eName,PropName)).decode(''''utf-8'''')'');'#13#10'//  InitScript.add(''  pr'
  +'int(msg.args[0]+'''' ''''+msg.args[1]+'''' = ''''+msg.rslt)'');'#13#10'  In'
  +'itScript.add(''def SetPropertyValue(NodeName,PropName,NewValue):'');'#13#10
  +'  InitScript.add(''  RunXIDEFunc(''''SetPropertyValue'''',(NodeName,PropNam'
  +'e,NewValue))'');'#13#10'  InitScript.add(''def ShowMessage(Messg):'');'#13
  +#10'  InitScript.add(''  RunXIDEFunc(''''ShowMessage'''',(Messg,0))'');'#13
  +#10'  InitScript.add(''def ShowXForm(XFormID,Modal):'');'#13#10'  InitScript'
  +'.add(''  RunXIDEFunc(''''ShowXForm'''',(XFormID,Modal))'');'#13#10'  InitSc'
  +'ript.add(''def CloseXForm(XFormID):'');'#13#10'  InitScript.add(''  RunXIDE'
  +'Func(''''CloseXForm'''',(XFormID,0))'');'#13#10'  InitScript.add(''def Copy'
  +'ToClip(str):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''CopyToClip'''''
  ,',(str,0))'');'#13#10'  InitScript.add(''def CopyFromClip(e):'');'#13#10'  I'
  +'nitScript.add(''  return RunXIDEFunc(''''CopyFromClip'''',(e,0))'');'#13#10
  +'  InitScript.add(''def LoadTableFromExcelCopy(TableName,CopiedString):'');'
  +#13#10'  InitScript.add(''  RunXIDEFunc(''''LoadTableFromExcelCopy'''',(Tabl'
  +'eName,CopiedString))'');'#13#10'  InitScript.add(''def GetTableDataForExcel'
  +'(TableName):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetTabl'
  +'eDataForExcel'''',(TableName,0)).decode(''''utf-8'''')'');'#13#10'  InitScr'
  +'ipt.add(''def LoadTableFromNumArray(TableName,NumArray):'');'#13#10'  InitS'
  +'cript.add(''  RunXIDEFunc(''''LoadTableFromNumArray'''',(TableName,NumArray'
  +'))'');'#13#10'  InitScript.add(''def LoadTableFromStringArray(TableName,Str'
  +'Array):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''LoadTableFromString'
  +'Array'''',(TableName,StrArray))'');'#13#10'  InitScript.add(''def GetTableD'
  +'ataArray(TableName,SkipHeader):'');'#13#10'  InitScript.add(''  return RunX'
  +'IDEFunc(''''GetTableDataArray'''',(TableName,SkipHeader))'');'#13#10'  Init'
  +'Script.add(''def DoEvent(EventType,NodeId,myValue):'');'#13#10'  InitScript'
  +'.add(''  RunXIDEFunc(''''DoEvent'''',(EventType,NodeId,myValue))'');'#13#10
  +'  InitScript.add(''def MoveComponent(NodeId,NewParentId):'');'#13#10'  Init'
  +'Script.add(''  RunXIDEFunc(''''MoveComponent'''',(NodeId,NewParentId))'');'
  +#13#10'  InitScript.add(''def CopyComponent(NodeId,NewParentId,NewName):'');'
  +#13#10'  InitScript.add(''  RunXIDEFunc(''''CopyComponent'''',(NodeId,NewPar'
  +'entId,NewName))'');'#13#10'  InitScript.add(''def DeleteComponent(NodeId,Sh'
  +'owNotFoundMsg,ShowConfirm):'');'#13#10'  InitScript.add(''  return RunXIDEF'
  +'unc(''''DeleteComponent'''',(NodeId,ShowNotFoundMsg,ShowConfirm))'');'#13#10
  +'  InitScript.add(''def DeleteSelectedTreeNode(TreeName):'');'#13#10'  InitS'
  +'cript.add(''  return RunXIDEFunc(''''DeleteSelectedTreeNode'''',(TreeName))'
  +''');'#13#10'  InitScript.add(''def GetGPUParamNumValue(GPUName,pName):'');'
  +#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetGPUParamNumValue'''',('
  +'GPUName,pName))'');'#13#10'  InitScript.add(''def GetGPUParam2DNumValue(GPU'
  +'Name,pName):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetGPUP'
  +'aram2DNumValue'''',(GPUName,pName))'');'#13#10'  InitScript.add(''def GetGP'
  +'UConstIntValue(GPUName,pName):'');'#13#10'  InitScript.add(''  return RunXI'
  +'DEFunc(''''GetGPUConstIntValue'''',(GPUName,pName))'');'#13#10'  InitScript'
  +'.add(''def SetGPUParamNumValue(GPUName,pName,pValue):'');'#13#10'  InitScri'
  +'pt.add(''  RunXIDEFunc(''''SetGPUParamNumValue'''',(GPUName,pName,pValue))'
  +''');'#13#10'  InitScript.add(''def SetGPUParam2DNumValue(GPUName,pName,pVal'
  +'ue):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''SetGPUParam2DNumValue'
  +''''',(GPUName,pName,pValue))'');'#13#10'  InitScript.add(''def SetGPUConstI'
  +'ntValue(GPUName,pName,pValue):'');'#13#10'  InitScript.add(''  RunXIDEFunc('
  +'''''SetGPUConstIntValue'''',(GPUName,pName,pValue))'');'#13#10'  InitScript'
  +'.add(''def StartMain(e):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''St'
  +'artMain'''',(e,0))'');'#13#10'  InitScript.add(''def ShowBusy(e):'');'#13#10
  +'  InitScript.add(''  RunXIDEFunc(''''ShowBusy'''',(e,0))'');'#13#10'  InitS'
  +'cript.add(''def HideBusy():'');'#13#10'  InitScript.add(''  RunXIDEFunc('''
  +'''HideBusy'''',(0,0))'');'#13#10'  InitScript.add(''def ProcessMessages():'
  +''');'#13#10'  InitScript.add(''  RunXIDEFunc(''''ProcessMessages'''',(0,0))'
  +''');'#13#10'  InitScript.add(''def UserSystemAsString():'');'#13#10'  InitS'
  +'cript.add(''  return RunXIDEFunc(''''UserSystemAsString'''',(0,0)).decode('
  +'''''utf-8'''')'');'#13#10'  InitScript.add(''def LoadUserSystemString(Syste'
  +'mString):'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''LoadUserSystemStr'
  +'ing'''',(SystemString,0))'');'#13#10'  InitScript.add(''def ConsoleLog(txt)'
  +':'');'#13#10'  InitScript.add(''  RunXIDEFunc(''''ConsoleLog'''',(txt,0))'''
  +');'#13#10'  InitScript.add(''def Array2DToString(arr):'');'#13#10'  InitScr'
  +'ipt.add(''  return RunXIDEFunc(''''Array2DToString'''',(arr,0)).decode('''''
  +'utf-8'''')'');'#13#10'  InitScript.add(''def GetGPUPixelArray(GPUName):'');'
  +#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetGPUPixelArray'''',(GPU'
  +'Name,0))'');'#13#10'  InitScript.add(''def GetGPUPixelArrayAsString(GPUName'
  +'):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetGPUPixelArrayA'
  +'sString'''',(GPUName,0))'');'#13#10'  InitScript.add(''def GetGPUStageArray'
  +'(GPUName):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''GetGPUSta'
  +'geArray'''',(GPUName,0))'');'#13#10'  InitScript.add(''def GetGPUStageArray'
  +'AsString(GPUName):'');'#13#10'  InitScript.add(''  return RunXIDEFunc(''''G'
  +'etGPUStageArrayAsString'''',(GPUName,0))'');'#13#10'  InitScript.add(''def '
  +'GetGPUInitStageArray(GPUName):'');'#13#10'  InitScript.add(''  return RunXI'
  +'DEFunc(''''GetGPUInitStageArray'''',(GPUName,0))'');'#13#10'  InitScript.ad'
  ,'d(''def ShowPythonPlot(ImgName,fig):'');            //!!!! do this with str'
  +'ing var instead of file ????'#13#10'  InitScript.add(''  fig.savefig(ImgNam'
  +'e+''''.png'''')'');'#13#10'  InitScript.add(''  SetPropertyValue(ImgName,'''
  +'''Source'''',ImgName+''''.png'''')'');'#13#10'  InitScript.add(''def Conver'
  +'tNumpyArrayToJSON(npArray):'');'#13#10'  InitScript.add(''  return json.dum'
  +'ps(npArray.tolist())'');'#13#10'  InitScript.add(''def SetPyConsole(nm):'')'
  +';'#13#10'  InitScript.add(''  RunXIDEFunc(''''RedirectPyLog'''',(nm,))'');'
  +#13#10'  InitScript.add(''def ResetXArrays(DefaultDims):'');'#13#10'  InitSc'
  +'ript.add(''  RunXIDEFunc(''''BuildXArrays'''',(DefaultDims,))'');'#13#10#13
  +#10'  InitScript.add(''def UpdatepyLoadedFuncs(sss):'');'#13#10'  InitScript'
  +'.add(''  RunXIDEFunc(''''UpdatepyLoadedFuncs'''',(sss,))'');'#13#10#13#10' '
  +' InitScript.add(''print(''''Python Engine Initialised'''')'');'#13#10#13#10
  +'  // execute the initialisation py script  (creates MyMessage python class '
  +'and object)'#13#10'  PythonEngine1.ExecStrings( InitScript );'#13#10'  Init'
  +'Script.Free;'#13#10#13#10'end;'#13#10'{$else}'#13#10'procedure RunInitialSc'
  +'ript;'#13#10'var'#13#10'  InitScript:TStringList;'#13#10'  txt:String;'#13
  +#10'begin'#13#10'asm'#13#10'console.log(''......................RunInitialSc'
  +'ript'');'#13#10'end;'#13#10'  // remove any previously-declared python vars'
  +', functions etc'#13#10'  txt:=''for name in dir(): ''+LineEnding+'#13#10'  '
  +'     ''  if not name.startswith(''''_''''):''+LineEnding+'#13#10'       '' '
  +'   del globals()[name]''+LineEnding;'#13#10'  asm'#13#10'  pyodide.runPytho'
  +'n(txt);'#13#10'  end;'#13#10#13#10'  InitScript:=TStringList.Create;'#13#10
  +'  // load the initialisation py script'#13#10'  // Sets up an internal libr'
  +'ary of XIDE Interface functions, available to the user.'#13#10'  InitScript'
  +'.Clear;'#13#10'  InitScript.add(''import sys'');'#13#10'  InitScript.add('''
  +'sys.stdout=sys.__stdout__''); //normal stdout'#13#10#13#10'  InitScript.add'
  +'(''print("Initialising Pyodide Python environment...")'');'#13#10#13#10'  I'
  +'nitScript.add(''class eClass:'');'#13#10'  InitScript.add(''  EventType = '
  +''''''''''');'#13#10'  InitScript.add(''  NodeId = '''''''''');'#13#10'  Ini'
  +'tScript.add(''  NameSpace = '''''''''');'#13#10'  InitScript.add(''  Return'
  +'String = '''''''''');'#13#10'  InitScript.add(''e = eClass()'');'#13#10'  I'
  +'nitScript.add('''');'#13#10'  InitScript.add(''from js import pas'');'#13#10
  +'  InitScript.add(''import io'');'#13#10'  InitScript.add(''import base64'')'
  +';'#13#10'  InitScript.add(''import json'');'#13#10'  InitScript.add(''def F'
  +'ileToMemo(nm):'');'#13#10'  InitScript.add(''  try:'');'#13#10'  InitScript'
  +'.add(''    sys.stdout.flush()'');'#13#10'  InitScript.add(''    f = open("p'
  +'ystdout.txt","r")'');'#13#10'  InitScript.add(''    contents = f.read()'');'
  +#13#10'  //InitScript.add(''    SetPropertyValue(nm,"ItemValue","kkkkkk")'')'
  +';'#13#10'  InitScript.add(''    ConsoleLog(">"+contents+"<")'');'#13#10'  I'
  +'nitScript.add(''    SetPropertyValue(nm,"ItemValue",str(contents))'');'#13
  +#10'  InitScript.add(''  except FileNotFoundError:'');'#13#10'  InitScript.a'
  +'dd(''    print("no stdout file for "+nm)'');'#13#10#13#10#13#10'  InitScrip'
  +'t.add(''def GetPropertyValue(NodeName,PropName):'');'#13#10'  InitScript.ad'
  +'d(''  return pas.InterfaceTypes.GetPropertyValue(NodeName,PropName)'');'#13
  +#10'  InitScript.add(''def SetPropertyValue(NodeName,PropName,NewValue):'');'
  +#13#10'  InitScript.add(''  pas.InterfaceTypes.SetPropertyValue(NodeName,Pro'
  +'pName,NewValue)'');'#13#10'  InitScript.add(''def ShowMessage(Messg):'');'
  +#13#10'  InitScript.add(''  pas.InterfaceTypes.ShowMessage(Messg)'');'#13#10
  +'  InitScript.add(''def ShowXForm(XFormID,Modal):'');'#13#10'  InitScript.ad'
  +'d(''  pas.InterfaceTypes.ShowXForm(XFormID,Modal)'');'#13#10'  InitScript.a'
  +'dd(''def CloseXForm(XFormID):'');'#13#10'  InitScript.add(''  pas.Interface'
  +'Types.CloseXForm(XFormID)'');'#13#10'  InitScript.add(''def CopyToClip(str)'
  +':'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.CopyToClip(str)'');'#13
  +#10'  InitScript.add(''def CopyFromClip(e):'');'#13#10'  InitScript.add(''  '
  +'return pas.InterfaceTypes.CopyFromClip(e)'');'#13#10'  InitScript.add(''def'
  +' LoadTableFromExcelCopy(TableName,CopiedString):'');'#13#10'  InitScript.ad'
  +'d(''  pas.InterfaceTypes.LoadTableFromExcelCopy(TableName,CopiedString)'');'
  +#13#10'  InitScript.add(''def GetTableDataForExcel(TableName):'');'#13#10'  '
  +'InitScript.add(''  return pas.InterfaceTypes.GetTableDataForExcel(TableName'
  +')'');'#13#10'  InitScript.add(''def LoadTableFromNumArray(TableName,NumArra'
  +'y):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.LoadTableFromNumArra'
  +'y(TableName,NumArray)'');'#13#10'  InitScript.add(''def LoadTableFromString'
  +'Array(TableName,StrArray):'');'#13#10'  InitScript.add(''  sss = ConvertNum'
  +'pyArrayToJSON(np.asarray(StrArray))'');'#13#10'  InitScript.add(''  SetProp'
  ,'ertyValue(TableName,"TableData",sss)'');'#13#10'//  InitScript.add(''  pas.'
  +'InterfaceTypes.LoadTableFromStringArray(TableName,StrArray)'');  //doesn''t'
  +' work in browser/Pyodide'#13#10'  InitScript.add(''def GetTableDataArray(Ta'
  +'bleName,SkipHeader):'');'#13#10'  InitScript.add(''  arr = eval(pas.Interfa'
  +'ceTypes.GetPropertyValue(TableName,''''TableData''''))'');'#13#10'  InitScr'
  +'ipt.add(''  if ((len(arr)>0) and (SkipHeader==True)):'');'#13#10'  InitScri'
  +'pt.add(''    hdr = arr.pop(0)'');'#13#10'  InitScript.add(''  return arr'')'
  +';'#13#10'  InitScript.add(''def DoEvent(EventType,NodeId,myValue):'');'#13
  +#10'  InitScript.add(''  pas.InterfaceTypes.DoEvent(EventType,NodeId,myValue'
  +')'');'#13#10'  InitScript.add(''def MoveComponent(NodeId,NewParentId):'');'
  +#13#10'  InitScript.add(''  pas.InterfaceTypes.MoveComponent(NodeId,NewParen'
  +'tId)'');'#13#10'  InitScript.add(''def CopyComponent(NodeId,NewParentId,New'
  +'Name):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.CopyComponent(Nod'
  +'eId,NewParentId,NewName)'');'#13#10'  InitScript.add(''def DeleteComponent('
  +'NodeId,ShowNotFoundMsg,ShowConfirm):'');'#13#10'  InitScript.add(''  return'
  +' pas.InterfaceTypes.DeleteComponent(NodeId,ShowNotFoundMsg,ShowConfirm)'');'
  +#13#10'  InitScript.add(''def DeleteSelectedTreeNode(TreeName):'');'#13#10' '
  +' InitScript.add(''  pas.InterfaceTypes.DeleteSelectedTreeNode(TreeName)'');'
  +#13#10'  InitScript.add(''def GetGPUParamNumValue(GPUName,pName):'');'#13#10
  +'  InitScript.add(''  return pas.InterfaceTypes.GetGPUParamNumValue(GPUName,'
  +'pName)'');'#13#10'  InitScript.add(''def GetGPUParam2DNumValue(GPUName,pNam'
  +'e):'');'#13#10'  InitScript.add(''  return pas.InterfaceTypes.GetGPUParam2D'
  +'NumValue(GPUName,pName)'');'#13#10'  InitScript.add(''def GetGPUConstIntVal'
  +'ue(GPUName,pName):'');'#13#10'  InitScript.add(''  return pas.InterfaceType'
  +'s.GetGPUConstIntValue(GPUName,pName)'');'#13#10'  InitScript.add(''def SetG'
  +'PUParamNumValue(GPUName,pName,pValue):'');'#13#10'  InitScript.add(''  pas.'
  +'InterfaceTypes.SetGPUParamNumValue(GPUName,pName,pValue)'');'#13#10'  InitS'
  +'cript.add(''def SetGPUParam2DNumValue(GPUName,pName,pValue):'');'#13#10'  I'
  +'nitScript.add(''  pas.InterfaceTypes.SetGPUParam2DNumValue(GPUName,pName,pV'
  +'alue)'');'#13#10'  InitScript.add(''def SetGPUConstIntValue(GPUName,pName,p'
  +'Value):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.SetGPUConstIntVa'
  +'lue(GPUName,pName,pValue)'');'#13#10'  InitScript.add(''def StartMain(e):'''
  +');'#13#10'  InitScript.add(''  pas.InterfaceTypes.StartMain(e)'');'#13#10' '
  +' InitScript.add(''def ShowBusy(e):'');'#13#10'  InitScript.add(''  pas.Inte'
  +'rfaceTypes.ShowBusy(e)'');'#13#10'  InitScript.add(''def HideBusy():'');'#13
  +#10'  InitScript.add(''  pas.InterfaceTypes.HideBusy()'');'#13#10'  InitScri'
  +'pt.add(''def ProcessMessages():'');'#13#10'  InitScript.add(''  pas.Interfa'
  +'ceTypes.ProcessMessages()'');'#13#10'  InitScript.add(''def UserSystemAsStr'
  +'ing():'');'#13#10'  InitScript.add(''  return pas.InterfaceTypes.UserSystem'
  +'AsString()'');'#13#10'  InitScript.add(''def LoadUserSystemString(SystemStr'
  +'ing):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.LoadUserSystemStri'
  +'ng(SystemString)'');'#13#10'  InitScript.add(''def ConsoleLog(txt):'');'#13
  +#10'  InitScript.add(''  pas.InterfaceTypes.ConsoleLog(txt)'');'#13#10'  Ini'
  +'tScript.add(''def Array2DToString(arr):'');'#13#10'  InitScript.add(''  ret'
  +'urn pas.InterfaceTypes.Array2DToString(arr)'');'#13#10'  InitScript.add(''d'
  +'ef GetGPUPixelArray(GPUName):'');'#13#10'  InitScript.add(''  return pas.In'
  +'terfaceTypes.GetGPUPixelArray(GPUName)'');'#13#10'  InitScript.add(''def Ge'
  +'tGPUPixelArrayAsString(GPUName):'');'#13#10'  InitScript.add(''  return pas'
  +'.InterfaceTypes.GetGPUPixelArrayAsString(GPUName)'');'#13#10'  InitScript.a'
  +'dd(''def GetGPUStageArray(GPUName):'');'#13#10'  InitScript.add(''  return '
  +'pas.InterfaceTypes.GetGPUStageArray(GPUName)'');'#13#10'  InitScript.add('''
  +'def GetGPUStageArrayAsString(GPUName):'');'#13#10'  InitScript.add(''  retu'
  +'rn pas.InterfaceTypes.GetGPUStageArrayAsString(GPUName)'');'#13#10'  InitSc'
  +'ript.add(''def GetGPUInitStageArray(GPUName):'');'#13#10'  InitScript.add('
  +'''  return pas.InterfaceTypes.GetGPUSInittageArray(GPUName)'');'#13#10'  In'
  +'itScript.add(''def ShowPythonPlot(ImgName,fig):'');'#13#10'  InitScript.add'
  +'(''  buf = io.BytesIO()'');'#13#10'  InitScript.add(''  fig.savefig(buf, fo'
  +'rmat=''''png'''')'');'#13#10'  InitScript.add(''  buf.seek(0)'');'#13#10'  '
  +'InitScript.add(''  img_str = ''''data:image/png;base64,'''' + base64.b64enc'
  +'ode(buf.read()).decode(''''UTF-8'''')'');'#13#10'  InitScript.add(''  pas.I'
  +'nterfaceTypes.SetImageSource(ImgName,img_str)'');'#13#10'  InitScript.add('
  +'''def ConvertNumpyArrayToJSON(npArray):'');'#13#10'  InitScript.add(''  ret'
  +'urn json.dumps(npArray.tolist())'');'#13#10'  InitScript.add(''def PyodideL'
  +'oadPackage(nm):'');'#13#10'  InitScript.add(''  pas.InterfaceTypes.PyodideL'
  ,'oadPackage(nm)'');'#13#10'  InitScript.add(''def PyodidePackageLoaded(nm):'
  +''');'#13#10'  InitScript.add(''  return pas.InterfaceTypes.PyodidePackageLo'
  +'aded(nm)'');'#13#10'  InitScript.add(''def SetPyConsole(nm):'');'#13#10'  I'
  +'nitScript.add(''  pas.PyXUtils.RedirectPyLog(nm)'');'#13#10'  InitScript.ad'
  +'d(''def ResetXArrays(DefaultDims):'');'#13#10'  InitScript.add(''  pas.XDat'
  +'aModel.BuildXArrays(DefaultDims)'');'#13#10'  InitScript.add(''def Updatepy'
  +'LoadedFuncs(sss):'');'#13#10'  InitScript.add(''  pas.PyXUtils.UpdatepyLoad'
  +'edFuncs(sss)'');'#13#10#13#10'  InitScript.add(''print("Initialising Python'
  +' done.")'');'#13#10#13#10#13#10'  InitScript.add(''_print = print '');'#13
  +#10'  InitScript.add(''def print(*args, **kw): '');'#13#10'  InitScript.add('
  +'''  _print(*args, **kw) '');'#13#10'  InitScript.add(''  pas.PyXUtils.Updat'
  +'eMemo("") '');'#13#10'  InitScript.add(''def print1(*args, **kw): '');'#13
  +#10'  InitScript.add(''  _print(*args, **kw) '');'#13#10#13#10#13#10'  InitS'
  +'cript.add(''def ListFunctions(TempDict):'');'#13#10'  InitScript.add(''  fu'
  +'nctions = []'');'#13#10'  InitScript.add(''  for key, value in TempDict.ite'
  +'ms():'');'#13#10'  InitScript.add(''     if callable(value) : functions.app'
  +'end(key)'');'#13#10'  InitScript.add(''  return(functions)'');'#13#10'  Ini'
  +'tScript.add(''TempDict = locals().copy()'');'#13#10'  InitScript.add(''Init'
  +'ialFunctions =  ListFunctions(TempDict)'');'#13#10#13#10'  // execute the i'
  +'nitialisation py script'#13#10'  txt:=InitScript.Text;'#13#10'  asm'#13#10
  +'  console.log(''RUN InitScript..............'');'#13#10'  pyodide.runPython'
  +'(txt);'#13#10'  end;'#13#10'  InitScript.Free;'#13#10'end;'#13#10'{$endif}'
  +#13#10#13#10'procedure PyExeString(cmds: string);'#13#10'var'#13#10'  s: TSt'
  +'ringList;'#13#10'begin'#13#10'  s := TStringList.create;'#13#10'  try'#13#10
  +'    s.text := cmds;'#13#10'    {$ifndef JScript}'#13#10'    try'#13#10'    '
  +'  PythonEngine1.ExecStrings( s );'#13#10'    except'#13#10'      on E: Exce'
  +'ption do'#13#10'        raise;'#13#10'    end;'#13#10'    {$else}'#13#10'  '
  +'  asm'#13#10'    pyodide.runPython(cmds);'#13#10'    end;'#13#10'    {$endi'
  +'f}'#13#10'  finally'#13#10'    s.free;'#13#10'  end;'#13#10'end;'#13#10#13
  +#10'procedure RedirectPyLog(MemoName:String);'#13#10'var'#13#10'  MemoNode:T'
  +'dataNode;'#13#10'begin'#13#10'  MemoNode:=NodeUtils.FindDataNodeById(UIRoot'
  +'Node,MemoName,'''',false);'#13#10'  {$ifndef JScript}'#13#10'  if (MemoNode'
  +'<>nil)'#13#10'  and (MemoNode.ScreenObject is TXMemo) then'#13#10'    PyMem'
  +'oComponent:=TXMemo(MemoNode.ScreenObject);'#13#10'  {$else}'#13#10'  if (Me'
  +'moNode<>nil)'#13#10'  and (MemoNode.NodeType=''TXMemo'') then'#13#10'  begi'
  +'n'#13#10'    PyMemoComponent:=TXMemo(MemoNode);'#13#10'    asm'#13#10'     '
  +' console.log(''redirecting Python output to ''+MemoNode.NodeName);'#13#10' '
  +'     pyodide.runPython(''sys.stdout.close()'');'#13#10'      pyodide.runPyt'
  +'hon(''sys.stdout = open("pystdout.txt", "w")'');'#13#10'    end;'#13#10'  e'
  +'nd'#13#10'  else'#13#10'  begin'#13#10'    asm'#13#10'      console.log(''r'
  +'everting Python output to standard'');'#13#10'      pyodide.runPython(''sys'
  +'.stdout.close()'');'#13#10'      pyodide.runPython(''sys.stdout=sys.__stdou'
  +'t__''); //revert to normal'#13#10'    end;'#13#10'  end;'#13#10'  {$endif}'
  +#13#10'end;'#13#10#13#10'procedure BuildXarray(XArrName:String;dims,mults:TS'
  +'tringArray;dflt:String);'#13#10'var'#13#10'  s: TStringList;'#13#10'  i,m:i'
  +'nteger;'#13#10'  smults:String;'#13#10'begin'#13#10'//#Example = xr.DataArr'
  +'ay(np.empty((X1_Num,X2_Num,Y_Num,1,NumXVars,)),  dims={"X1_Num":X1_Num,"X2_'
  +'Num":X2_Num,"Y_Num":Y_Num,"one":1,"NumXVars":NumXVars})'#13#10#13#10'  s :='
  +' TStringList.create;'#13#10'  s.Add(''import numpy as np'');'#13#10'  s.Add'
  +'(''import xarray as xr'');'#13#10'  s.Add(''dimsdict={}'');'#13#10#13#10'  '
  +'// build the dimensions dictionary for this XArray'#13#10'  smults:='''';'
  +#13#10'  for i:=0 to length(dims)-1 do'#13#10'  begin'#13#10'    //dimsdict['
  +'dimname] =  nnn'#13#10'    s.Add(''dimsdict["''+dims[i]+''"]=''+mults[i]);'
  +#13#10'    smults:=smults+mults[i]+'','';'#13#10'  end;'#13#10'  //  build t'
  +'he XArray'#13#10'  s.Add(''print(''''''+XArrName+'' = xr.DataArray(np.empty'
  +'((''+smults+'')), dims='''',dimsdict,'''')''+'''''')'');'#13#10'  s.add(XAr'
  +'rName+'' = xr.DataArray(np.empty((''+smults+'')), dims=dimsdict)'');'#13#10
  +'  if dflt<>'''' then'#13#10'    s.add(XArrName+'' = xr.full_like(''+XArrNam'
  +'e+'',''+dflt+'')'');'#13#10'  s.Add(''print(''+XArrName+'')'');'#13#10#13#10
  +'  PyExeString( s.text);'#13#10'  s.free;'#13#10'end;'#13#10#13#10'procedure'
  +' UpdatepyLoadedFuncs(sss:String);'#13#10'// sss is a JSON string....load in'
  +'to a stringlist'#13#10'var'#13#10'  i:integer;'#13#10'  bits:TStringList;'
  +#13#10'begin'#13#10'  pyLoadedFuncs:=StringUtils.JSONStringToStringList(sss)'
  +';'#13#10'  SetLength(pyUnitFuncs,0);'#13#10'  bits:=TStringList.Create;'#13
  ,#10'  for i:=0 to pyLoadedFuncs.count-1 do'#13#10'  begin'#13#10'    bits:=s'
  +'tringsplit(pyLoadedFuncs[i],'','');'#13#10'    if bits.count=2 then'#13#10
  +'    begin'#13#10'      SetLength(pyUnitFuncs,Length(pyUnitFuncs)+1);'#13#10
  +'      pyUnitFuncs[Length(pyUnitFuncs)-1].PyUnitName := bits[0];'#13#10'    '
  +'  pyUnitFuncs[Length(pyUnitFuncs)-1].PyFuncName := bits[1];'#13#10'    end;'
  +#13#10'  end;'#13#10'  RebuildCodeTree;'#13#10#13#10'end;'#13#10#13#10'//var'
  +'.decode(''utf-8'') ... might be of use'#13#10#13#10'end.'#13#10'{$endif}'#13
  +#10#13#10
]);
LazarusResources.Add('xidesettings','PAS',[
  'unit XIDESettings;'#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'interface'
  +#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUtils,'#13#10
  +'  {$ifndef JScript}'#13#10'  LazsUtils,'#13#10'  {$endif}'#13#10'  CompileU'
  +'serCode, XObjectInsp, XVBox, XMemo, XForm, XEditBox, XComboBox,'#13#10'  XB'
  +'utton, EventsInterface, XCheckBox;'#13#10#13#10'type'#13#10#13#10'  { TXIDE'
  +'SettingsForm }'#13#10#13#10'  TXIDESettingsForm = class(TXForm)'#13#10'    '
  +'DeployModeCombo: TXComboBox;'#13#10'    ResourcesPosCombo: TXComboBox;'#13
  +#10'    SettingsDoneButton: TXButton;'#13#10'    XsettingsVBox: TXVBox;'#13
  +#10'    FPCLocationEditBox: TXEditBox;'#13#10'    {$ifndef JScript}'#13#10' '
  +'   procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResize(S'
  +'ender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13#10'   '
  +' {$endif}'#13#10'    procedure InitialiseOnShow;'#13#10'    procedure Close'
  +'Settings;'#13#10'    procedure SettingsDoneButtonHandleButtonClick(e: TEven'
  +'tStatus;'#13#10'      nodeID: AnsiString; myValue: AnsiString);'#13#10'  pr'
  +'ivate'#13#10#13#10'  public'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  X'
  +'IDESettingsForm: TXIDESettingsForm;'#13#10#13#10'implementation'#13#10#13#10
  +'{$R *.lfm}'#13#10#13#10'{ TXIDESettingsForm }'#13#10#13#10'{$ifndef JScript'
  +'}'#13#10'procedure TXIDESettingsForm.FormCreate(Sender: TObject);'#13#10'be'
  +'gin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'end;'#13#10#13#10'procedu'
  +'re TXIDESettingsForm.FormResize(Sender: TObject);'#13#10'begin'#13#10'  DoF'
  +'ormResize(self, XsettingsVBox);'#13#10'end;'#13#10#13#10'procedure TXIDESet'
  +'tingsForm.FormShow(Sender: TObject);'#13#10'begin'#13#10'end;'#13#10#13#10
  +'{$endif}'#13#10#13#10'procedure TXIDESettingsForm.CloseSettings;'#13#10'var'
  +#13#10'  Lines:TStringList;'#13#10'  NewPath:String;'#13#10'begin'#13#10'  U'
  +'IRootNode.SetAttributeValue(''ShowResources'',ResourcesPosCombo.ItemValue);'
  +#13#10'  if DesignMode then'#13#10'    RedisplayResourceTree;'#13#10'  UIRoo'
  +'tNode.SetAttributeValue(''DeploymentMode'',DeployModeCombo.ItemValue);'#13
  +#10#13#10'  {$ifndef JScript}'#13#10'  NewPath := FPCLocationEditBox.ItemVal'
  +'ue;'#13#10'  if NewPath<>'''' then'#13#10'  begin'#13#10'    ConfigFPCPath '
  +':= NewPath;'#13#10'    Lines:=TStringList.Create;'#13#10'    Lines.Add(Conf'
  +'igFPCPath);'#13#10'    Lines.SaveToFile(''XIDERunSettings.dta'');'#13#10'  '
  +'  Lines.Free;'#13#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'proc'
  +'edure TXIDESettingsForm.SettingsDoneButtonHandleButtonClick('#13#10'  e: TE'
  +'ventStatus; nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10' '
  +' CloseXForm(''XIDESettingsForm'');'#13#10'  CloseSettings;'#13#10'end;'#13
  +#10#13#10'procedure TXIDESettingsForm.InitialiseOnShow;'#13#10'begin'#13#10
  +'  ResourcesPosCombo.ItemValue:=UIRootNode.GetAttribute(''ShowResources'',tr'
  +'ue).AttribValue;'#13#10'  DeployModeCombo.ItemValue:=UIRootNode.GetAttribut'
  +'e(''DeploymentMode'',true).AttribValue;'#13#10'  {$ifndef JScript}'#13#10' '
  +' FPCLocationEditBox.ItemValue:=ConfigFPCPath;'#13#10'  {$else}'#13#10'  FPC'
  +'LocationEditBox.IsVisible:=false;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'end.'#13#10#13#10
]);
LazarusResources.Add('IntfParamUnit','PAS',[
  'unit intfparamunit;'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+'
  +'}'#13#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'Classes, '
  +'SysUtils, StringUtils, NodeUtils, XForm,'#13#10'{$ifndef JScript}'#13#10'Fo'
  +'rms, Controls, Dialogs, StdCtrls, LazsUtils,'#13#10'{$else}'#13#10'HTMLUtil'
  +'s,'#13#10'{$endif}'#13#10'WrapperPanel, EventsInterface, XVBox, XHBox, XMem'
  +'o, XButton,'#13#10'XLabel, XEditBox, XComboBox,XCompositeIntf;'#13#10#13#10
  +'type'#13#10#13#10'  { TIntfParamForm }'#13#10#13#10'  TIntfParamForm = clas'
  +'s(TXForm)'#13#10'    IntfParamName: TXEditBox;'#13#10'    IntfParamVBox: TX'
  +'VBox;'#13#10'    IntfParamType: TXComboBox;'#13#10'    IntfParamDoneButton:'
  +' TXButton;'#13#10'    IntfParamHint: TXEditBox;'#13#10'    {$ifndef JScript'
  +'}'#13#10'    procedure FormCreate(Sender: TObject);'#13#10'    {$endif}'#13
  +#10'    procedure IntfParamDoneButtonHandleButtonClick(e: TEventStatus; node'
  +'ID: AnsiString;'#13#10'      myValue: AnsiString);'#13#10'  private'#13#10
  +#13#10'  public'#13#10#13#10'  end;'#13#10#13#10'procedure ClearForm;'#13#10
  +#13#10'var'#13#10'  IntfParamForm: TIntfParamForm;'#13#10'  InterfaceElement'
  +' : TXCompositeIntf;'#13#10'  AttribToEdit:TNodeAttribute;'#13#10#13#10'impl'
  +'ementation'#13#10'uses XObjectInsp;'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{ '
  +'TIntfParamForm }'#13#10#13#10#13#10'procedure TIntfParamForm.IntfParamDoneB'
  +'uttonHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValu'
  +'e: AnsiString);'#13#10'var'#13#10'  ok,ro:Boolean;'#13#10'  NewName:String;'
  +#13#10'begin'#13#10'  if AttribToEdit=nil then'#13#10'  begin'#13#10'    // '
  +'Create new attribute'#13#10'    NewName:=self.IntfParamName.ItemValue;'#13
  +#10'    // check valid name string'#13#10'    if NameStringIsValid(NewName) '
  +'then'#13#10'    begin'#13#10'      ok:=true;'#13#10'      // Is the propert'
  +'y named uniquely?'#13#10'      if (NewName<>'''') then'#13#10'      begin'
  +#13#10'        if (InterfaceElement.PropertyNameIsUnique(NewName)) then'#13
  +#10'        begin'#13#10'          ro:=(self.IntfParamType.ItemValue=''Input'
  +''');'#13#10'          InterfaceElement.myNode.AddAttribute(NewName,''String'
  +''','''',ro);'#13#10'          RefreshObjectInspectorLater(ObjectInspectorSe'
  +'lectedNavTreeNode);'#13#10'          TXForm(self).Showing:=''No'';'#13#10' '
  +'       end'#13#10'        else'#13#10'        begin'#13#10'          ok:=fa'
  +'lse;'#13#10'          showmessage(NewName+'' already exists'');'#13#10'    '
  +'    end;'#13#10'      end;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10
  +'  begin'#13#10'    // edit existing attribute'#13#10'    TXForm(self).Showi'
  +'ng:=''No'';'#13#10'    AttribToEdit.AttribHint := IntfParamHint.ItemValue;'
  +#13#10'    RefreshObjectInspectorLater(ObjectInspectorSelectedNavTreeNode);'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'procedure ClearForm;'#13#10'begin'#13
  +#10'  IntfParamForm.IntfParamName.ItemValue:='''';'#13#10'  IntfParamForm.In'
  +'tfParamType.ItemIndex:=0;'#13#10'  IntfParamForm.IntfParamHint.ItemValue:='
  +''''';'#13#10'  AttribToEdit:=nil;'#13#10'  IntfParamForm.IntfParamName.read'
  +'Only:=false;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TI'
  +'ntfParamForm.FormCreate(Sender: TObject);'#13#10'begin'#13#10'  myNode:=DoX'
  +'FormCreated(self);'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'end.'#13
  +#10#13#10
]);
LazarusResources.Add('IntfEventUnit','PAS',[
  'unit IntfEventUnit;'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+'
  +'}'#13#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'Classes, '
  +'SysUtils, StringUtils, NodeUtils, XForm,'#13#10'{$ifndef JScript}'#13#10'Fo'
  +'rms, Controls, Dialogs, StdCtrls, LazsUtils,'#13#10'{$else}'#13#10'HTMLUtil'
  +'s,'#13#10'{$endif}'#13#10'WrapperPanel, EventsInterface, XVBox, XHBox, XMem'
  +'o, XButton,'#13#10'XLabel, XEditBox, XComboBox,XCompositeIntf;'#13#10#13#10
  +'type'#13#10#13#10'  { TIntfEventForm }'#13#10#13#10'  TIntfEventForm = clas'
  +'s(TXForm)'#13#10'    IntfEventDoneBtn: TXButton;'#13#10'    IntfEventType: '
  +'TXComboBox;'#13#10'    IntfEventName: TXEditBox;'#13#10'    IntfEventVBox: '
  +'TXVBox;'#13#10'    IntfEventHint: TXEditBox;'#13#10'    {$ifndef JScript}'
  +#13#10'    procedure FormCreate(Sender: TObject);'#13#10'    {$endif}'#13#10
  +'    procedure IntfEventDoneBtnHandleButtonClick(e: TEventStatus;'#13#10'   '
  +'   nodeID: AnsiString; myValue: AnsiString);'#13#10'  private'#13#10#13#10
  +'  public'#13#10#13#10'  end;'#13#10#13#10'procedure ClearForm;'#13#10#13#10
  +'var'#13#10'  IntfEventForm: TIntfEventForm;'#13#10'  InterfaceElement : TXC'
  +'ompositeIntf;'#13#10'  EventToEdit:TEventHandlerRec;'#13#10#13#10'implement'
  +'ation'#13#10'uses XObjectInsp;'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{ TIntf'
  +'EventForm }'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TIntfEventForm.'
  +'FormCreate(Sender: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(s'
  +'elf);'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure TIntfEventForm.Int'
  +'fEventDoneBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString'
  +'; myValue: AnsiString);'#13#10'var'#13#10'  ok,IsReadOnly:Boolean;'#13#10' '
  +' NewName:String;'#13#10'begin'#13#10'  if EventToEdit=nil then'#13#10'  beg'
  +'in'#13#10'    // creating a new interface event'#13#10'    NewName:=self.In'
  +'tfEventName.ItemValue;'#13#10'    // check valid name string'#13#10'    if '
  +'NameStringIsValid(NewName) then'#13#10'    begin'#13#10'      ok:=true;'#13
  +#10'      // Is the event named uniquely?'#13#10'      if (NewName<>'''') th'
  +'en'#13#10'      begin'#13#10'        if (InterfaceElement.EventNameIsUnique'
  +'(NewName)) then'#13#10'        begin'#13#10'          IsReadOnly:=(self.Int'
  +'fEventType.ItemValue=''Read-Only'');'#13#10'          InterfaceElement.myNo'
  +'de.AddEvent(NewName,'''','''',IsReadOnly,IntfEventHint.ItemValue);'#13#10' '
  +'         TXForm(self).Showing:=''No'';'#13#10'          RefreshObjectInspec'
  +'torLater(ObjectInspectorSelectedNavTreeNode);'#13#10'        end'#13#10'   '
  +'     else'#13#10'        begin'#13#10'          ok:=false;'#13#10'         '
  +' showmessage(NewName+'' already exists'');'#13#10'        end;'#13#10'     '
  +' end;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    '
  +'// editing an event that already exists...'#13#10'    TXForm(self).Showing:'
  +'=''No'';'#13#10'    EventToEdit.EventHint := IntfEventHint.ItemValue;'#13#10
  +'    RefreshObjectInspectorLater(ObjectInspectorSelectedNavTreeNode);'#13#10
  +'  end;'#13#10'end;'#13#10#13#10#13#10'procedure ClearForm;'#13#10'begin'#13
  +#10'  IntfEventForm.IntfEventName.ItemValue:='''';'#13#10'  IntfEventForm.In'
  +'tfEventType.ItemIndex:=0;'#13#10'  IntfEventForm.IntfEventHint.ItemValue:='
  +''''';'#13#10'  EventToEdit:=nil;'#13#10'  IntfEventForm.IntfEventName.readO'
  +'nly:=false;'#13#10'  //IntfEventForm.IntfEventType.IsEnabled???'#13#10'end;'
  +#13#10#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('XDataModel','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10#13#10'      Handle a data model tree'
  +#13#10'      Functions to generate classes in Pascal  (which can translate t'
  +'o JS)'#13#10'      Functions to add data to and fetch data from datasets.'
  +#13#10#13#10'      !!!! a fundamental issue here is node names.  All must be'
  +' unique, so we cannot'#13#10'      for example have class A with an attribu'
  +'te named ''key1'', and then have'#13#10'      class B also with a ''key1'' '
  +'attribute...!!!! tbd'#13#10#13#10'      more TBD...'#13#10'      (Desktop).'
  +'..Filenames.  Need either a separate directory per system (DB), or a prefix'
  +' for the Dataset file names.'#13#10'      (Browser)...Not a problem, as the'
  +' local database is named for the system.'#13#10#13#10'      Sort out what h'
  +'appens when system name is changed (eg save-as)'#13#10#13#10' *)'#13#10#13
  +#10'unit XDataModel;'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H'
  +'+}'#13#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'  Classe'
  +'s, SysUtils, TypInfo, Stringutils, StrUtils, NodeUtils, Events,'#13#10'{$if'
  +'ndef JScript}'#13#10'  Variants, LazsUtils, FileUtil, LazFileUtils,'#13#10
  +'  Controls, ComCtrls, ExtCtrls, Dialogs,Forms,DB,memds,bufdataset,DBGrids,'
  +#13#10'{$else}'#13#10'  HTMLUtils, pas2jswebcompiler,'#13#10'{$endif}'#13#10
  +'  webTranspilerUtils,CompileUserCode,WrapperPanel,'#13#10'  XHBox, XVBox, X'
  +'Code,'#13#10'  XTree,  XButton, XScrollBox, XEditBox, XCheckBox, XComboBox,'
  +' XTabControl,'#13#10'  XForm, XTable, XMemo, XMenu, CodeEditor, EventsInter'
  +'face;'#13#10#13#10'type'#13#10'  TClassFieldDef = record'#13#10'    FieldNa'
  +'me:String;'#13#10'    FieldType:String;'#13#10'    DfltValue:String;'#13#10
  +'  end;'#13#10'  TClassFieldDefs=array of TClassFieldDef;'#13#10'type'#13#10
  +'    TRefKey = record'#13#10'      RefKeyName:String;'#13#10'      RefKeyTyp'
  +'e:String;'#13#10'    end;'#13#10'    TRefKeys = Array of TRefKey;'#13#10#13
  +#10'const'#13#10'  DMAttribsScrollboxName:string = ''DMAttribsScrollbox'';'
  +#13#10#13#10'var'#13#10'  DMSelectedDataTreeNode :TDataNode;'#13#10'  DMChan'
  +'ged,DSBuilt:Boolean;'#13#10#13#10'procedure InitDMTree;'#13#10'procedure Re'
  +'buildDMTree;'#13#10'procedure RebuildDMTreeLater;'#13#10'procedure DMDataTr'
  +'eeNodeChange(e:TEventStatus;nodeId,NameSpace:string;myValue:string);'#13#10
  +'procedure DMAddElement(AddType:String='''');'#13#10'procedure DMDeleteEleme'
  +'nt;'#13#10'procedure ConstructPascalDM(RunMode:String;PascalCode:TStringLis'
  +'t);'#13#10'procedure DoSelectDataTreeNode(CurrentNode:TDataNode; refresh:bo'
  +'olean);'#13#10'procedure DMClearSelection;'#13#10'procedure ShowDMOpCodeEdi'
  +'tor(targetNode:TDataNode;BtnNodeId:String);'#13#10'procedure DMMoveSiblingU'
  +'pDown(UpDown:String);'#13#10'function DMGetClassFields(DMClassName:String):'
  +'TClassFieldDefs;'#13#10'function DMGetKeyFields(ClassName:String):TNodesArr'
  +'ay;'#13#10'function DMRefKeys(refAttribNode:TDataNode):TRefKeys;'#13#10'pro'
  +'cedure DMAttribsCrosscheck(NodeName:String);'#13#10#13#10'function BuildLoc'
  +'alDB(iterationNum:integer; callbackFunc:TObject=nil):Boolean;'#13#10'proced'
  +'ure CloseLocalDB;'#13#10'procedure SaveLocalDB;'#13#10'procedure DeleteLoca'
  +'lDB(DBName:String;ask:Boolean;CallbackFunc:TObject=nil);'#13#10'procedure D'
  +'BSaveAs(oldname,newname:String);'#13#10'function AllDataClassNames(RootName'
  +':String):TStringList;'#13#10'function DSAppendRecordFromObject(DSName,Async'
  +'ProcName:String;recObject:TObject;ReturnEvent:TEventStatus):Boolean;'#13#10
  +'function DSEmptyDataset(ReturnEvent:TEventStatus;DSName,AsyncProcName:Strin'
  +'g):Boolean;'#13#10'function DMTreeNodeHint(TreeLabelStr:String):String;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'type'#13#10'  // record type for queued a'
  +'sync functions'#13#10'  TDMQueueRec = record'#13#10'    QDummy: string;'#13
  +#10'  end;'#13#10'  PDMQueueRec = ^TDMQueueRec;'#13#10'  TDMProcs = class(TO'
  +'bject)'#13#10'    procedure RebuildTheTreeAndInspector(dummy:PtrInt);'#13#10
  +'  end;'#13#10'var'#13#10'  DMProcs:TDMProcs;'#13#10'type TVarArray = array '
  +'of variant;'#13#10'function GetDataset(DSName:String;var idx:integer;showEr'
  +'ror:Boolean=true):TBufDataset;'#13#10'procedure DSDataToFile(DSName,prefix:'
  +'String);'#13#10'procedure DSLoadFromSaved(DSName:String;oldds,newds:TBufDat'
  +'aset);'#13#10'function DSGetIndexedRecordAsObject(DSName,AsyncProcName,keyn'
  +'ames:String;keyvalues:TVarArray;recObject:TObject;ReturnEvent:TEventStatus)'
  +':Boolean;'#13#10'function DSSetRecordFromObject(DSName:String;recObject:TOb'
  +'ject):Boolean;'#13#10'function DSDeleteARow(ReturnEvent:TEventStatus;DSName'
  ,',AsyncProcName,keynames:String;DSKeyValues:TVarArray):Boolean;'#13#10'{$els'
  +'e}'#13#10'function DSGetIndexedRecordAsObject(DSName,AsyncProcName:String;k'
  +'eyvalues:TStringArray;ReturnEvent:TEventStatus):Boolean;'#13#10'function DS'
  +'DeleteARow(ReturnEvent:TEventStatus;DSName,AsyncProcName:String;DSKeyValues'
  +':TStringArray):Boolean;'#13#10'procedure DSAddAllRows(DSName:String;allrows'
  +',newstore:TObject);'#13#10'procedure DSCopyData(DSName:String;oldstore,news'
  +'tore:TObject);'#13#10'procedure DSCopyDataFromOldDB(DSName:String;oldstore:'
  +'TObject);'#13#10'procedure IndexedDBOpenWithVersion(DBName:String;vnum:inte'
  +'ger;dsnames:TStringArray;callbackFunc:TObject);'#13#10'{$endif}'#13#10'{$if'
  +'def Python}'#13#10'procedure BuildXArrays(DefaultDims:Boolean);'#13#10'{$en'
  +'dif}'#13#10#13#10#13#10'implementation'#13#10'uses XIDEMain,XObjectInsp,PyX'
  +'Utils'#13#10'{$ifndef JScript}'#13#10', XDBTable ,DllInterface'#13#10'{$end'
  +'if}'#13#10';'#13#10'const DMAttribTypes:Array[0..3] of string = (''String'''
  +',''Integer'',''Float'',''Boolean'');'#13#10#13#10'var'#13#10'  DMClassDefau'
  +'ltAttribs:TDefaultAttributesArray;'#13#10'  DMContainsDefaultAttribs:TDefau'
  +'ltAttributesArray;'#13#10'  DMRefDefaultAttribs:TDefaultAttributesArray;'#13
  +#10'  DMAttribDefaultAttribs:TDefaultAttributesArray;'#13#10'  DMOpDefaultAt'
  +'tribs:TDefaultAttributesArray;'#13#10'  DMParamDefaultAttribs:TDefaultAttri'
  +'butesArray;'#13#10#13#10'{$ifndef JScript}'#13#10'  BufDatasets:Array of TB'
  +'ufDataset;'#13#10'  LocalDBPath:String;'#13#10'{$endif}'#13#10'  dsnames:TS'
  +'tringArray;'#13#10#13#10#13#10'procedure ClearAllDMNodes(StartNode:TDataNod'
  +'e);'#13#10'var'#13#10'  i:integer;'#13#10'begin'#13#10'  for i:=length(Star'
  +'tNode.ChildNodes)-1 downto 0 do'#13#10'  begin'#13#10'    ClearAllDMNodes(S'
  +'tartNode.ChildNodes[i]);'#13#10'    DeleteNode(StartNode,StartNode.ChildNod'
  +'es[i]);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure InitDMTree;'#13#10
  +'begin'#13#10'  ClearAllDMNodes(DMRoot);'#13#10'end;'#13#10#13#10'function D'
  +'MNameIsValid(myNode,ParentNode:TDataNode;NewName: String):Boolean;'#13#10'v'
  +'ar'#13#10'  chkNode:TdataNode;'#13#10'  i:integer;'#13#10'  ok:Boolean;'#13
  +#10'begin'#13#10'  ok:=true;'#13#10'  i:=1;'#13#10'  // additional checks'#13
  +#10'  //   - package names must be unique'#13#10'  //   - class names must b'
  +'e unique across the system (as they may become dataset names)'#13#10'  //  '
  +' - attribute names must be unique in the class'#13#10'  if (myNode.NodeType'
  +' = ''DMClass'') then'#13#10'    chkNode:=FindDataNodeById(DMRoot,NewName,'''
  +''',false)'#13#10'  else'#13#10'    chkNode:=FindDataNodeById(ParentNode,New'
  +'Name,'''',false);'#13#10'  if (chkNode<>nil) and (chkNode<>myNode) then'#13
  +#10'  begin'#13#10'    showmessage(''Name ''+NewName+'' is not unique'');'#13
  +#10'    ok:=false;'#13#10'  end;'#13#10'  result:=ok;'#13#10'end;'#13#10#13
  +#10'function CreateNewDMNode(NodeParent:TDataNode;NodeType,NodeName:String):'
  +'TDataNode;'#13#10'var'#13#10'  newNode:TDataNode;'#13#10'begin'#13#10'  New'
  +'Node:=TDataNode.Create(''DM'',NodeName,'''',NodeType,true);'#13#10'  NewNod'
  +'e.MyForm:=TForm(MainForm);'#13#10#13#10'  if NodeType = ''DMClass'' then'#13
  +#10'  begin'#13#10'    AddDefaultAttribs(nil,NewNode,DMClassDefaultAttribs);'
  +#13#10'  end'#13#10'  else if NodeType = ''DMAttrib'' then'#13#10'  begin'#13
  +#10'    AddDefaultAttribs(nil,NewNode,DMAttribDefaultAttribs);'#13#10'  end;'
  +#13#10'  DMChanged:=true;'#13#10#13#10'  AddChildToParentNode(NodeParent,New'
  +'Node,-1);'#13#10'  result:=NewNode;'#13#10'end;'#13#10#13#10'procedure Refr'
  +'eshDMInspector(CurrentNode:TDataNode);'#13#10'var AttributePrefix:string;'
  +#13#10'  i:integer;'#13#10'  DataNode,WidgetNode:TDataNode;'#13#10'  myAttri'
  +'bs:TNodeAttributesArray;'#13#10'  s:boolean;'#13#10'  BoxName,AttribValue:S'
  +'tring;'#13#10'  MyWidget:TObject;'#13#10'begin'#13#10'  s:=SuppressEvents;'
  +#13#10'  SuppressEvents:=true;'#13#10#13#10'  if (CurrentNode<>nil)  then'#13
  +#10'  begin'#13#10#13#10'      AttributePrefix:=''DM''+AttributeEditorNameDe'
  +'limiter+CurrentNode.NodeName;'#13#10'      myAttribs:=CurrentNode.NodeAttri'
  +'butes;'#13#10#13#10'      for i:=0 to length(myAttribs)-1 do'#13#10'      b'
  +'egin'#13#10'        //exclude Suppressed properties that user shouldn''t se'
  +'e'#13#10'        if (FindSuppressedProperty(CurrentNode.NodeType,CurrentNod'
  +'e.NodeAttributes[i].AttribName)<0)'#13#10'        and (CurrentNode.NodeAttr'
  +'ibutes[i].AttribName<>''ParentName'')'#13#10'        and ((CurrentNode.Node'
  +'Attributes[i].AttribName<>''MakeXArrays'') or (CurrentNode.NodeName<>''Dime'
  +'nsions''))'#13#10'        then'#13#10'        begin'#13#10'          BoxNam'
  +'e:=AttributePrefix+AttributeEditorNameDelimiter'#13#10'                    '
  +'+CurrentNode.NodeAttributes[i].AttribName+AttributeEditorNameDelimiter'#13
  +#10'                    +IntToStr(i+2);'#13#10'          AttribValue:=Curren'
  +'tNode.NodeAttributes[i].AttribValue;'#13#10'          WidgetNode:=FindDataN'
  ,'odeById(DMAttribsNode,BoxName,'''',false);'#13#10'          if WidgetNode<>'
  +'nil then'#13#10'          begin'#13#10'            MyWidget:=WidgetNode.Scr'
  +'eenObject;'#13#10#13#10'            if (CurrentNode.NodeAttributes[i].Attri'
  +'bType = ''Boolean'')'#13#10'            and (myWidget is TXCheckBox) then'
  +#13#10'            begin'#13#10'               TXCheckBox(myWidget).Checked:'
  +'=myStrtoBool(AttribValue);'#13#10'            end'#13#10'            else i'
  +'f (myWidget is TXComboBox) then'#13#10'            begin'#13#10'           '
  +'   TXComboBox(myWidget).ItemValue:=AttribValue;'#13#10'            end'#13
  +#10'            else if (myWidget is TXEditBox) then'#13#10'            begi'
  +'n'#13#10'              TXEditBox(myWidget).ItemValue:=AttribValue;'#13#10' '
  +'           end;'#13#10'          end;'#13#10'       end;'#13#10'     end;'
  +#13#10#13#10'  end;'#13#10#13#10'  SuppressEvents:=s;'#13#10'end;'#13#10#13
  +#10'function DMFindClassOwners(ClassName:String):TNodesArray;'#13#10'var'#13
  +#10'  allrefs:TNodesArray;'#13#10'  resultSet:TNodesArray;'#13#10'  i,j:inte'
  +'ger;'#13#10'begin'#13#10'  setlength(resultSet,0);'#13#10'  allRefs:=FindNo'
  +'desOfType(DMRoot,''DMContains'');'#13#10'  j:=0;'#13#10'  for i:=0 to lengt'
  +'h(allRefs)-1 do'#13#10'  begin'#13#10'    if allRefs[i].GetAttribute(''Clas'
  +'s'',false).AttribValue = ClassName then'#13#10'    begin'#13#10'      setle'
  +'ngth(resultSet,j+1);'#13#10'      resultSet[j]:=allRefs[i];'#13#10'      j:'
  +'=j+1;'#13#10'    end;'#13#10'  end;'#13#10'  result:=resultSet;'#13#10'end;'
  +#13#10#13#10'procedure DMFindClassOwnerHierarchy(ClassName:String; var resul'
  +'tset:TNodesArray; var ownerkeys:TStringArray);'#13#10'var'#13#10'  allrefs,'
  +'keys:TNodesArray;'#13#10'  i,j:integer;'#13#10'begin'#13#10'  allRefs:=Find'
  +'NodesOfType(DMRoot,''DMContains'');'#13#10'  j:=length(resultset);'#13#10' '
  +' for i:=0 to length(allRefs)-1 do'#13#10'  begin'#13#10'    if allRefs[i].G'
  +'etAttribute(''Class'',false).AttribValue = ClassName then'#13#10'    begin'
  +#13#10'      setlength(resultSet,j+1);'#13#10'      setlength(ownerkeys,j+1)'
  +';'#13#10'      resultSet[j]:=allRefs[i];'#13#10'      keys:=DMGetKeyFields('
  +'allRefs[i].NodeParent.NodeName);'#13#10'      if length(keys)>0 then'#13#10
  +'      begin'#13#10'        ownerkeys[j]:=keys[0].NodeName;    //!!!! PROBLE'
  +'M IF ANY COMPOSITE KEYS'#13#10'      end'#13#10'      else'#13#10'      beg'
  +'in'#13#10'        ownerkeys[j]:= ''1'';     // missing key'#13#10'        s'
  +'howmessage(''Warning - Class ''+allRefs[i].NodeParent.NodeName+'' has no pr'
  +'imary key attribute defined'');'#13#10'      end;'#13#10'      j:=j+1;'#13
  +#10'      DMFindClassOwnerHierarchy(allRefs[i].NodeParent.NodeName,resultset'
  +',ownerkeys);'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'(*funct'
  +'ion DMOwnerKeys(ClassNode:TDataNode):TStringArray;'#13#10'var'#13#10'  Cont'
  +'ainedBy,keys:TNodesArray;'#13#10'  i,j:integer;'#13#10'  keynames:TStringAr'
  +'ray;'#13#10'begin'#13#10'  ContainedBy:=DMFindClassOwners(ClassNode.NodeNam'
  +'e);'#13#10'  setlength(keynames,0);'#13#10'  j:=0;'#13#10'  for i:=0 to len'
  +'gth(ContainedBy)-1 do'#13#10'  begin'#13#10'    // this linkage must refere'
  +'nce the primary key of the ''parent'' class'#13#10'    keys:=DMGetKeyFields'
  +'(ContainedBy[i].NodeParent.NodeName);'#13#10'    if length(keys)>0 then'#13
  +#10'    begin'#13#10'      for j:=0 to length(keys)-1 do'#13#10'      begin'
  +#13#10'        setlength(keynames,length(keynames)+1);'#13#10'        keynam'
  +'es[length(keynames)-1]:= keys[j].NodeName;'#13#10'      end;'#13#10'    end'
  +#13#10'    else'#13#10'    begin'#13#10'      setlength(keynames,1);'#13#10
  +'      keynames[0]:= ''1'';     // missing key'#13#10'      showmessage(''Wa'
  +'rning - Class ''+ContainedBy[i].NodeParent.NodeName+'' has no primary key a'
  +'ttribute defined'');'#13#10'    end;'#13#10'  end;'#13#10'  result:=keyname'
  +'s;'#13#10'end;'#13#10'*)'#13#10'function DMNodeText(CurrentItem:TDataNode):'
  +'String;'#13#10'var'#13#10'  NodeStr:String;'#13#10'  ownerkeys:TStringArray'
  +';'#13#10'  i:integer;'#13#10'  keys:TNodesArray;'#13#10'begin'#13#10'  Node'
  +'Str:='''';'#13#10'  setlength(ownerkeys,0);'#13#10'  if CurrentItem.NodeTyp'
  +'e=''DMContains'' then'#13#10'    NodeStr:=CurrentItem.NodeType+''(''+Curren'
  +'tItem.NodeName+'') - ''+CurrentItem.GetAttribute(''Class'',true).AttribValu'
  +'e'#13#10'  else if CurrentItem.NodeType=''DMRef'' then'#13#10'    NodeStr:='
  +'CurrentItem.NodeType+''(''+CurrentItem.NodeName+'') - ''+CurrentItem.GetAtt'
  +'ribute(''Class'',true).AttribValue'#13#10'  else if CurrentItem.NodeType='''
  +'DMAttrib'' then'#13#10'  begin'#13#10'    if myStrToBool(CurrentItem.GetAtt'
  +'ribute(''IsId'',true).AttribValue) = True then'#13#10'      NodeStr:=Curren'
  +'tItem.NodeType+''(''+CurrentItem.NodeName+'') *'''#13#10'    else'#13#10'  '
  +'    NodeStr:=CurrentItem.NodeType+''(''+CurrentItem.NodeName+'')'';'#13#10
  +'  end'#13#10'  else if CurrentItem.NodeType=''DMClass'' then'#13#10'  begin'
  ,#13#10'    NodeStr:=CurrentItem.NodeType+''(''+CurrentItem.NodeName+'')'';'
  +#13#10'    //ownerkeys:=DMOwnerKeys(CurrentItem);'#13#10'    DMFindClassOwne'
  +'rHierarchy(CurrentItem.NodeName,keys,ownerkeys);'#13#10'    for i:=0 to len'
  +'gth(ownerkeys)-1 do'#13#10'      NodeStr:=NodeStr+'' *'';'#13#10'  end'#13
  +#10'  else'#13#10'    NodeStr:=CurrentItem.NodeType+''(''+CurrentItem.NodeNa'
  +'me+'')'';'#13#10'  result:=NodeStr;'#13#10'end;'#13#10#13#10'function GetDM'
  +'TreeTextHierarchy(StartNode,TopRootNode:TDataNode):String;'#13#10'var'#13#10
  +'  ParentNode:TDataNode;'#13#10'  treeText:String;'#13#10'begin'#13#10'  tre'
  +'eText:=DMNodeText(StartNode);'#13#10'  ParentNode:=StartNode.NodeParent;'#13
  +#10'  while (ParentNode<>nil) and (ParentNode<>TopRootNode.NodeParent) do'#13
  +#10'  begin'#13#10'    treeText:=DMNodeText(ParentNode)+''/''+treeText;'#13
  +#10'    ParentNode:=ParentNode.NodeParent;'#13#10'  end;'#13#10'  result:=tr'
  +'eeText;'#13#10'end;'#13#10#13#10'procedure DoSelectDataTreeNode(CurrentNode'
  +':TDataNode; refresh:boolean);'#13#10'var'#13#10'  mynodeText:string;'#13#10
  +'  okToContinue:Boolean;'#13#10'  ContainedClassOptions, RefClassOptions, Al'
  +'lTypes, AllDims:Array of String;'#13#10'  parentNode:TDataNode;'#13#10'  Cl'
  +'assNode,DimsParent:TDataNode;'#13#10'  ClassNodes,DimNodes:TNodesArray;'#13
  +#10'  i,j:integer;'#13#10#13#10'  procedure SetMultHints(thisNode:TDataNode)'
  +';'#13#10'  begin'#13#10'    thisNode.GetAttribute(''Multiplicity'',false).A'
  +'ttribHint:=''default = 1, Integer value,  or paramname'';'#13#10'  end;'#13
  +#10#13#10'begin'#13#10'  if CurrentNode.NameSpace<>'''' then'#13#10'    EXIT'
  +';'#13#10#13#10'  okToContinue:=true;'#13#10'  {$ifdef JScript}'#13#10'  asm'
  +#13#10'    var ob=document.getElementById(''Grey1'');'#13#10'    if (ob!=nul'
  +'l) {'#13#10'      if (ob.style.display!=''none'') {'#13#10'        okToCont'
  +'inue=false;'#13#10'      }'#13#10'    }'#13#10'  end;'#13#10'  if length(Op'
  +'enXForms)>0 then'#13#10'    okToContinue:=false;'#13#10'  {$endif}'#13#10#13
  +#10'   //!!  in the data tree, node texts are NOT all unique, so need the pa'
  +'rent-path here.'#13#10'  if (DesignMode) and (okToContinue) then'#13#10'  b'
  +'egin'#13#10#13#10'     //mynodeText := CurrentNode.NodeType+''(''+CurrentNo'
  +'de.Nodename+'')'';'#13#10'     TreeInFocus := DMRoot;'#13#10#13#10'     {$i'
  +'fndef JScript}'#13#10'     mynodetext := GetDMTreeTextHierarchy(CurrentNode'
  +',DMRoot);'#13#10'     TXTree(DataTreeComponent.ScreenObject).SelectTreeNode'
  +'ByPath(mynodeText); // (Windows) this selects the node in the datatree comp'
  +'onent, if changed.'#13#10'     {$endif}'#13#10#13#10'     // set the option'
  +'s for the ClassRef ''Class'' attribute, and also OP ReturnType and Param Pa'
  +'ramtype...'#13#10'     SetLength(ContainedClassOptions,0);'#13#10'     SetL'
  +'ength(RefClassOptions,0);'#13#10'     SetLength(AllDims,0);'#13#10'     //P'
  +'ackageNode:=FindAncestorByType(CurrentNode,''DMPkg'',false);'#13#10'     //'
  +'if (PackageNode<>nil)'#13#10'     if ((CurrentNode.NodeType = ''DMContains'
  +''')'#13#10'       or (CurrentNode.NodeType = ''DMRef'')'#13#10'       or (C'
  +'urrentNode.NodeType = ''DMAttrib'')'#13#10'       or (CurrentNode.NodeType '
  +'= ''DMParam'')'#13#10'       or (CurrentNode.NodeType = ''DMOp''))'#13#10' '
  +'    then'#13#10'     begin'#13#10'       if (CurrentNode.NodeType = ''DMCon'
  +'tains'')'#13#10'       or (CurrentNode.NodeType = ''DMAttrib'') then'#13#10
  +'       begin'#13#10'         DeleteAttribOptions(''DMAttrib'',''Multiplicit'
  +'y'');'#13#10'         DeleteAttribOptions(''DMContains'',''Multiplicity'');'
  +#13#10'         SetMultHints(CurrentNode);'#13#10'         if (CurrentNode.N'
  +'odeType = ''DMContains'')'#13#10'         and (CurrentNode.NodeParent.GetAt'
  +'tribute(''MakeXArrays'',true).AttribValue=''True'')'#13#10'         then'#13
  +#10'         begin'#13#10'           DimsParent:=FindDataNodeById(DMRoot,''D'
  +'imensions'','''',true);'#13#10'           DimNodes:= FindNodesOfType(DimsPa'
  +'rent,''DMAttrib'');'#13#10'           setlength(AllDims,length(DimNodes));'
  +#13#10'           for i:=0 to length(DimNodes)-1 do'#13#10'           begin'
  +#13#10'             AllDims[i]:=DimNodes[i].NodeName;'#13#10'           end;'
  +#13#10'           AddAttribOptions(''DMContains'',''Multiplicity'',AllDims);'
  +#13#10'         end;'#13#10'       end;'#13#10#13#10'       if ((CurrentNode'
  +'.NodeType = ''DMContains'')'#13#10'       or (CurrentNode.NodeType = ''DMRe'
  +'f'')'#13#10'       or (CurrentNode.NodeType = ''DMParam'')'#13#10'         '
  +'or (CurrentNode.NodeType = ''DMOp''))'#13#10'       then'#13#10'       begi'
  +'n'#13#10'         AllTypes := [''String'',''Integer'',''Float'',''Boolean'''
  +'];'#13#10'         ClassNodes := FindNodesOfType(DMRoot,''DMClass'',false,'
  +''''');'#13#10'         ClassNode := FindAncestorByType(CurrentNode,''DMClas'
  +'s'',false);'#13#10'         SetLength(ContainedClassOptions,Length(ClassNod'
  +'es));'#13#10'         SetLength(RefClassOptions,Length(ClassNodes));'#13#10
  ,'         SetLength(AllTypes,Length(ClassNodes)+4);'#13#10'         j:=0;'#13
  +#10'         for i:=0 to length(ClassNodes)-1 do'#13#10'         begin'#13#10
  +'           if ClassNodes[i]<>ClassNode then'#13#10'           begin'#13#10
  +'             ContainedClassOptions[j]:=ClassNodes[i].NodeName;'#13#10'     '
  +'        RefClassOptions[j]:=ClassNodes[i].NodeName;'#13#10'             All'
  +'Types[j+4]:=ClassNodes[i].NodeName;'#13#10'             j:=j+1;'#13#10'    '
  +'       end;'#13#10'         end;'#13#10'         AddAttribOptions(''DMConta'
  +'ins'',''Class'',ContainedClassOptions);'#13#10'         AddAttribOptions('''
  +'DMRef'',''Class'',RefClassOptions);'#13#10'         AddAttribOptions(''DMOp'
  +''',''ReturnType'',AllTypes);'#13#10'         AddAttribOptions(''DMParam'','
  +'''ParamType'',AllTypes);'#13#10'       end;'#13#10'     end;'#13#10#13#10' '
  +'    if (DMSelectedDataTreeNode=nil)'#13#10'     or (DMSelectedDataTreeNode<'
  +'>CurrentNode) then'#13#10'     begin'#13#10'       //display the attributes'
  +' of the selected node in the object inspector'#13#10'       DMSelectedDataT'
  +'reeNode:=CurrentNode;'#13#10'       PopulateObjectInspector(CurrentNode);'
  +#13#10'       {$ifdef JScript}'#13#10'       mynodetext := GetTreeTextHierar'
  +'chyWithIndices(CurrentNode,DMRoot);'#13#10'       //asm console.log(''DoSel'
  +'ectDataTreeNode mynodetext=''+mynodeText); end;'#13#10'       //TXTree(Data'
  +'TreeComponent).SelectedNodeText:=mynodeText;   // (Browser) this selects th'
  +'e node in the navtree component, if changed.'#13#10'       TXTree(DataTreeC'
  +'omponent).SelectTreeNodeByPath(mynodeText);   // (Browser) this selects the'
  +' node in the navtree component, if changed.'#13#10'       {$endif}'#13#10#13
  +#10'     end'#13#10'     else  if (refresh) then'#13#10'     begin'#13#10'  '
  +'     // just refresh all the displayed property values'#13#10'        Refre'
  +'shDMInspector(CurrentNode);'#13#10'     end;'#13#10#13#10'     // sort out '
  +'the buttons'#13#10'     XIDEForm.DMTreeAddLabel.IsVisible:=false;'#13#10'  '
  +'   XIDEForm.DMTreeAddButton.IsVisible:=false;'#13#10'     XIDEForm.DMTreeAd'
  +'dContainsBtn.IsVisible:=false;'#13#10'     XIDEForm.DMTreeAddRefBtn.IsVisib'
  +'le:=false;'#13#10'     XIDEForm.DMTreeAddOpBtn.IsVisible:=false;'#13#10'   '
  +'  if  DMSelectedDataTreeNode = DMRoot then'#13#10'     begin'#13#10'       '
  +'XIDEForm.DMTreeAddLabel.IsVisible:=true;'#13#10'       XIDEForm.DMTreeAddBu'
  +'tton.IsVisible:=true;'#13#10'       XIDEForm.DMTreeAddButton.Caption:=''Cla'
  +'ss'';'#13#10'       XIDEForm.DMTreeAddButton.Hint:=''Add a class definition'
  +''';'#13#10'     end'#13#10'     else if  DMSelectedDataTreeNode.NodeType = '
  +'''DMClass'' then'#13#10'     begin'#13#10'       XIDEForm.DMTreeAddLabel.Is'
  +'Visible:=true;'#13#10'       XIDEForm.DMTreeAddButton.IsVisible:=true;'#13
  +#10'       XIDEForm.DMTreeAddButton.Caption:=''Attrib'';'#13#10'       XIDEF'
  +'orm.DMTreeAddButton.Hint:=''Add an attribute for this class'';'#13#10'     '
  +'  XIDEForm.DMTreeAddContainsBtn.IsVisible:=true;'#13#10'       XIDEForm.DMT'
  +'reeAddRefBtn.IsVisible:=true;'#13#10'       XIDEForm.DMTreeAddOpBtn.IsVisib'
  +'le:=true;'#13#10'     end'#13#10'     else if  DMSelectedDataTreeNode.NodeT'
  +'ype = ''DMOp'' then'#13#10'     begin'#13#10'       XIDEForm.DMTreeAddLabel'
  +'.IsVisible:=true;'#13#10'       XIDEForm.DMTreeAddButton.IsVisible:=true;'
  +#13#10'       XIDEForm.DMTreeAddButton.Caption:=''Param'';'#13#10'       XID'
  +'EForm.DMTreeAddButton.Hint:=''Add a parameter for this operation'';'#13#10
  +'     end;'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'procedure  SelectDat'
  +'aTreeNode(CurrentNode:TDataNode; refresh:boolean);'#13#10'begin'#13#10'  if'
  +' CurrentNode.NameSpace='''' then'#13#10'  begin'#13#10'    DMSelectedDataTr'
  +'eeNode:=nil;'#13#10'    {$ifndef JScript}'#13#10'    DoSelectDataTreeNode(C'
  +'urrentNode,refresh);'#13#10'    {$else}'#13#10'    asm'#13#10'    //console'
  +'.log(''SelectDataTreeNode calling DoSelectDataTreeNode with CurrentNode=''+'
  +'CurrentNode.NodeName);'#13#10'    myTimeout(pas.XDataModel.DoSelectDataTree'
  +'Node,5,''DoSelectDataTreeNode'',0,CurrentNode,refresh);'#13#10'    end;'#13
  +#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure DMClearSel'
  +'ection;'#13#10'begin'#13#10'  DMSelectedDataTreeNode:=nil;'#13#10'  XIDEFor'
  +'m.DMTreeAddLabel.IsVisible:=false;'#13#10'  XIDEForm.DMTreeAddButton.IsVisi'
  +'ble:=false;'#13#10'  XIDEForm.DMTreeAddContainsBtn.IsVisible:=false;'#13#10
  +'  XIDEForm.DMTreeAddRefBtn.IsVisible:=false;'#13#10'  XIDEForm.DMTreeAddOpB'
  +'tn.IsVisible:=false;'#13#10'end;'#13#10#13#10'Function ConstructDataTreeStr'
  +'ing(CurrentItem:TDataNode; level:Integer):String;'#13#10'// Recursive'#13#10
  +'var ArrayString:String;'#13#10'    i,j,numchildren:integer;'#13#10'begin'#13
  +#10'  // starts at DMRoot node'#13#10'  if CurrentItem<>nil then'#13#10'  be'
  +'gin'#13#10'    j:=0;'#13#10'    //showmessage(''Currentitem=''+CurrentItem.'
  +'NodeClass+'' ''+CurrentItem.NodeType+'' ''+CurrentItem.Nodename);'#13#10'  '
  ,'  numchildren:=length(CurrentItem.ChildNodes);'#13#10#13#10'    if level = '
  +'0 then ArrayString:='' '';'#13#10#13#10'    if level=0'#13#10'    then Arra'
  +'yString:=''['''#13#10'    else'#13#10'    begin'#13#10'      if (NumChildre'
  +'n>0) then'#13#10'        ArrayString:=ArrayString+'',['''#13#10'      else'
  +#13#10'        ArrayString:=ArrayString+'','';'#13#10'    end;'#13#10#13#10
  +'    ArrayString:=ArrayString+ ''"''+DMNodeText(CurrentItem)+''"'';'#13#10#13
  +#10'    for i:=0 to numchildren-1 do'#13#10'    begin'#13#10'      ArrayStri'
  +'ng:=ArrayString+ConstructDataTreeString(CurrentItem.ChildNodes[i],level+1);'
  +#13#10'    end;'#13#10#13#10'    if ( NumChildren>0)'#13#10'    or (level=0)'
  +'  then'#13#10'      ArrayString:=ArrayString+'']'';'#13#10'  end;'#13#10#13
  +#10'  result:= ArrayString;'#13#10'end;'#13#10#13#10'procedure RebuildDMTree'
  +';'#13#10'var'#13#10'  newtreestring:string;'#13#10'begin'#13#10'(*'#13#10'w'
  +'hat we want to see on the navigator is....'#13#10'DataRootNode'#13#10'   |'
  +#13#10'   Classes...'#13#10#13#10'*)'#13#10#13#10'  // construct string for '
  +'the data model tree'#13#10'  newtreestring:= ConstructDataTreeString(DMRoot'
  +',0);'#13#10'  {$ifndef JScript}'#13#10' // WriteToFile(''datatree.txt'',new'
  +'treestring);'#13#10'  TXTree(DataTreeComponent.ScreenObject).TreeData:=newt'
  +'reestring;'#13#10'  {$else}'#13#10'  TXTree(DataTreeComponent).TreeData:=ne'
  +'wtreestring;'#13#10'  {$endif}'#13#10'  if DMSelectedDataTreeNode<>nil then'
  +#13#10'  begin'#13#10'    SelectDataTreeNode(DMSelectedDataTreeNode,true);'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TD'
  +'MProcs.RebuildTheTreeAndInspector(dummy:PtrInt);'#13#10'begin'#13#10'  Rebu'
  +'ildDMTree;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure RebuildDMTree'
  +'Later;'#13#10'{$ifndef JScript}'#13#10'var'#13#10'  QueueRecToSend: PDMQueu'
  +'eRec;'#13#10'begin'#13#10'  New(QueueRecToSend);'#13#10'  Application.Queue'
  +'AsyncCall(@DMProcs.RebuildTheTreeAndInspector,PtrInt(QueueRecToSend)); // p'
  +'ut msg into queue that will be processed from the main thread after all oth'
  +'er messages'#13#10'{$else}'#13#10'begin'#13#10'  RebuildDMTree;'#13#10'{$en'
  +'dif}'#13#10'end;'#13#10#13#10'function TreeNodePathToNodesList(TreeNodePath'
  +':String):TNodesArray;'#13#10'var'#13#10'  DataNodes:TNodesArray;'#13#10'  i'
  +',j:integer;'#13#10'  p1:string;'#13#10'  TreeNodeId:string;'#13#10'  bits,b'
  +'its2:TStringList;'#13#10'begin'#13#10'  setlength(DataNodes,0);'#13#10'  //'
  +' split to levels by ''~/~'''#13#10'  bits:= stringSplit(TreeNodePath,''~/~'
  +''',false);'#13#10'  j:=0;'#13#10'  for i:=0 to bits.count-1 do'#13#10'  beg'
  +'in'#13#10'    //split to index and NodeText'#13#10'    bits2:=stringsplit(b'
  +'its[i],''~:~'',false);'#13#10'    if bits2.count>1 then'#13#10'    begin'#13
  +#10'      setlength(DataNodes,length(DataNodes)+1);'#13#10'      j:=length(D'
  +'ataNodes)-1;'#13#10'      TreeNodeId:=TreeLabelToID(bits2[1],''DataTree'',p'
  +'1);'#13#10'      if j=0 then'#13#10'        DataNodes[j]:=FindDataNodeById('
  +'DMRoot,TreeNodeId,'''',true)'#13#10'      else'#13#10'        DataNodes[j]:'
  +'=FindDataNodeById(DataNodes[j-1],TreeNodeId,'''',true);'#13#10'    end;'#13
  +#10'  end;'#13#10'  bits.Free;'#13#10'  bits2.Free;'#13#10'  result:=DataNod'
  +'es;'#13#10'end;'#13#10#13#10'procedure HandleDataTreeClickEvent(TreeNodePat'
  +'h:String);'#13#10'var'#13#10'  CurrentNode :TDataNode;'#13#10'  DataNodes:T'
  +'NodesArray;'#13#10'begin'#13#10'  DataNodes:= TreeNodePathToNodesList(TreeN'
  +'odePath);'#13#10#13#10'  CurrentNode:=DataNodes[length(DataNodes)-1];'#13#10
  +'  if CurrentNode=nil then'#13#10'    showmessage(''Cannot find node in XObj'
  +'ectInsp.HandleNavTreeClickEvent'')'#13#10'  else'#13#10'  begin'#13#10'    '
  +'SelectDataTreeNode(CurrentNode,false);'#13#10'  end;'#13#10#13#10'end;'#13
  +#10#13#10'function GetDMTreeHint(Context:TDataNode;SystemNodeName:String):St'
  +'ring;'#13#10'var'#13#10'SystemNode:TDataNode;'#13#10'ownerkeys:TStringArray'
  +';'#13#10'keys:TNodesArray;'#13#10'strg:String;'#13#10'i:integer;'#13#10'beg'
  +'in'#13#10'  result:='''';'#13#10'  SystemNode:=FindDataNodeById(Context,Sys'
  +'temNodeName,'''',false);'#13#10'  if SystemNode<>nil then'#13#10'  begin'#13
  +#10'    if SystemNode.NodeType=''DMClass'' then'#13#10'    begin'#13#10'    '
  +'  //ownerkeys:=DMOwnerKeys(SystemNode);'#13#10'      DMFindClassOwnerHierar'
  +'chy(SystemNodeName,keys,ownerkeys);'#13#10'      for i:=length(ownerkeys)-1'
  +' downto 0 do'#13#10'      begin'#13#10'        if i<length(ownerkeys)-1 the'
  +'n'#13#10'          strg:=strg+'';'';'#13#10'        strg:=strg+ownerkeys[i]'
  +';'#13#10'      end;'#13#10'      if strg<>'''' then'#13#10'        strg:='''
  +'Parent index:''+strg+''.  '';'#13#10'      strg:=strg+''index:'';'#13#10'  '
  +'    keys:=DMGetKeyFields(SystemNode.NodeName);'#13#10'      for i:=0 to len'
  +'gth(keys)-1 do'#13#10'      begin'#13#10'        if i>0 then'#13#10'       '
  +'   strg:=strg+'';'';'#13#10'        strg:=strg+keys[i].NodeName;'#13#10'   '
  ,'   end;'#13#10'      if  SystemNode.NodeName = ''Dimensions'' then'#13#10' '
  +'       strg:=strg + ''  This provides a set of dimension variables for use '
  +'in generating (Python) xarrays.'';'#13#10'      result:=strg;'#13#10'    en'
  +'d'#13#10'    else if SystemNode.NodeType=''DMAttrib'' then'#13#10'    begin'
  +#13#10'      if SystemNode.NodeParent.GetAttribute(''MakeXArrays'',false).At'
  +'tribValue=''True'' then'#13#10'      begin'#13#10'        strg:=''xarray:  '
  +'''+SystemNode.NodeParent.NodeName + ''_'' + SystemNode.NodeName;'#13#10'   '
  +'   end'#13#10'      else'#13#10'        strg:=SystemNode.GetAttribute(''Ann'
  +'otation'',true).AttribValue;'#13#10'      result:=strg;'#13#10'    end;'#13
  +#10#13#10'  end;'#13#10'end;'#13#10#13#10'function DMTreeNodeHint(TreeLabelS'
  +'tr:String):String;'#13#10'var'#13#10'   SystemNodeName,p1:string;'#13#10'be'
  +'gin'#13#10'  SystemNodeName:=TreeLabelToID( TreeLabelStr,''DataTree'',p1); '
  +'  //!! may not be unique?'#13#10'  result := GetDMTreeHint(DMRoot,SystemNod'
  +'eName);'#13#10'end;'#13#10#13#10'procedure DMDataTreeNodeChange(e:TEventSta'
  +'tus;nodeId,NameSpace:string;myValue:string);'#13#10'var'#13#10'  myTree:TXT'
  +'ree;'#13#10'  sPath:String;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10
  +'  myTree:=TXTree(DataTreeComponent.ScreenObject);'#13#10'  {$else}'#13#10' '
  +' myTree:=TXTree(DataTreeComponent);'#13#10'  {$endif}'#13#10'  sPath:=myTre'
  +'e.SelectedTextPath;'#13#10#13#10'  HandleDataTreeClickEvent(sPath);'#13#10
  +'end;'#13#10#13#10'procedure DeleteDMItem(SelectedNode:TDataNode);'#13#10'be'
  +'gin'#13#10'  if  (SelectedNode=nil) then'#13#10'      ShowMessage(''Select '
  +'an item on the Data Model Tree before calling this action'')'#13#10'  else'
  +#13#10'  begin'#13#10'    if (SelectedNode.NodeName=''DMRoot'')'#13#10'    t'
  +'hen'#13#10'      ShowMessage(''Cannot remove the root node'')'#13#10'    el'
  +'se'#13#10'    begin'#13#10'      DeleteNode(SelectedNode.NodeParent,Selecte'
  +'dNode);'#13#10'      DMChanged:=true;'#13#10'      if DesignMode then'#13#10
  +'      begin'#13#10'        {$ifdef JScript}'#13#10'        if not RunningDe'
  +'ployedRuntime then'#13#10'        {$endif}'#13#10'        SaveSystemData;'
  +#13#10'        RebuildDMTree;'#13#10'      end;'#13#10'    end;'#13#10'  end'
  +';'#13#10'end;'#13#10#13#10#13#10'function AddNewDMElement(DMDestinationNode'
  +':TDataNode;AddType:String=''''):boolean;'#13#10'var'#13#10'   ParentNode,Ne'
  +'wNode:TDataNode;'#13#10'   TreePos:integer;'#13#10'   ok,TargetIsContainer:'
  +'Boolean;'#13#10'   NewName,NewType:String;'#13#10'   DfltAttribs:TDefaultAt'
  +'tributesArray;'#13#10'begin'#13#10'  ok:=false;'#13#10'  setlength(DfltAttr'
  +'ibs,0);'#13#10#13#10'  if (DMDestinationNode<>nil) then'#13#10'  begin'#13
  +#10'    if DMDestinationNode=DMRoot then'#13#10'    begin'#13#10'      if Ad'
  +'dType='''' then'#13#10'      begin'#13#10'        NewType:=''DMClass'';'#13
  +#10'        DfltAttribs:=DMClassDefaultAttribs;'#13#10'      end'#13#10'    '
  +'  else'#13#10'      begin'#13#10'        NewType:=AddType;'#13#10'      end'
  +';'#13#10#13#10'    end'#13#10'    else if DMDestinationNode.NodeType=''DMCl'
  +'ass'' then'#13#10'    begin'#13#10'      if AddType='''' then'#13#10'      '
  +'begin'#13#10'        NewType:=''DMAttrib'';'#13#10'      end'#13#10'      e'
  +'lse'#13#10'      begin'#13#10'        NewType:=AddType;'#13#10'      end;'
  +#13#10'      if NewType=''DMAttrib'' then'#13#10'        DfltAttribs:=DMAttr'
  +'ibDefaultAttribs'#13#10'      else if NewType=''DMContains'' then'#13#10'  '
  +'      DfltAttribs:=DMContainsDefaultAttribs'#13#10'      else if NewType='''
  +'DMRef'' then'#13#10'        DfltAttribs:=DMRefDefaultAttribs'#13#10'      e'
  +'lse if NewType=''DMOp'' then'#13#10'        DfltAttribs:=DMOpDefaultAttribs'
  +';'#13#10'    end'#13#10'    else if DMDestinationNode.NodeType=''DMOp'' the'
  +'n'#13#10'    begin'#13#10'      NewType:=''DMParam'';'#13#10'      DfltAttr'
  +'ibs:=DMParamDefaultAttribs;'#13#10'    end'#13#10'    else'#13#10'    begin'
  +#13#10'      NewType:=''DMAttrib'';'#13#10'      DfltAttribs:=DMAttribDefaul'
  +'tAttribs;'#13#10'    end;'#13#10#13#10'    NewNode:=CreateNewDMNode(nil,New'
  +'Type,'''');'#13#10#13#10'    // Is the destination node a container (paste '
  +'new child) or not (paste sibling)'#13#10'    if (DMDestinationNode = DMRoot'
  +')'#13#10'    //or (DMDestinationNode.NodeType=''DMPkg'')'#13#10'    or (DMD'
  +'estinationNode.NodeType=''DMClass'')'#13#10'    or (DMDestinationNode.NodeT'
  +'ype=''DMOp'') then'#13#10'      TargetIsContainer:=true'#13#10'    else'#13
  +#10'      TargetIsContainer:=false;'#13#10#13#10'    if TargetIsContainer = '
  +'true then'#13#10'    begin'#13#10'      //ShowMessage(''paste under contain'
  +'er'');'#13#10'      ParentNode:=DMDestinationNode;'#13#10'      TreePos:=-1'
  +';'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      // ShowMessa'
  +'ge(''paste as sibling'');'#13#10'      ParentNode:=DMDestinationNode.NodePa'
  +'rent;'#13#10'      TreePos:=ParentNode.GetChildIndex(DMDestinationNode);'#13
  ,#10'    end;'#13#10#13#10'    if CanAddChildToParent(ParentNode,NewNode) the'
  +'n'#13#10'    begin'#13#10'      // Dialog for name entry'#13#10'      NewNa'
  +'me:=GetValidItemName(''Enter name for new ''+NewType,'''');'#13#10'      ok'
  +':=false;'#13#10'      // Is the new node named uniquely?'#13#10'      if (N'
  +'ewName<>'''') and (DMNameIsValid(NewNode,ParentNode,NewName)) then'#13#10' '
  +'     begin'#13#10'        NewNode.NodeName:=NewName;'#13#10'        AddDefa'
  +'ultAttribs(nil,NewNode,DfltAttribs);'#13#10'        AddChildToParentNode(Pa'
  +'rentNode,NewNode,TreePos);'#13#10'        ok:=true;'#13#10'      end;'#13#10
  +'    end;'#13#10'    if ok then'#13#10'      DMChanged:=true;'#13#10'  end;'
  +#13#10'  if ok then'#13#10'    //SelectDataTreeNode(NewNode,false)'#13#10'  '
  +'  DMSelectedDataTreeNode := NewNode'#13#10'  else'#13#10'    if NewNode<>ni'
  +'l then'#13#10'      NewNode.DeleteMe;'#13#10'  result:=ok;'#13#10'end;'#13
  +#10#13#10'procedure DMAddElement(AddType:String='''');'#13#10'var'#13#10'  o'
  +'k:boolean;'#13#10'begin'#13#10'  if DMSelectedDataTreeNode<>nil then'#13#10
  +'  begin'#13#10'    ok:=AddNewDMElement(DMSelectedDataTreeNode,AddType);'#13
  +#10'    RebuildDMTree;'#13#10'  end'#13#10'  else'#13#10'    showmessage(''P'
  +'lease select a DataModel node first'');'#13#10'end;'#13#10#13#10'procedure '
  +'DMDeleteElement;'#13#10'begin'#13#10'  if DMSelectedDataTreeNode<>nil then'
  +#13#10'  begin'#13#10'    if XIDEConfirm(''OK to delete element ''+DMSelecte'
  +'dDataTreeNode.NodeName+''?'') then'#13#10'      DeleteDMItem(DMSelectedData'
  +'TreeNode);'#13#10'  end;'#13#10'end;'#13#10#13#10'function DMGetKeyFields(C'
  +'lassName:String):TNodesArray;'#13#10'var'#13#10'  classnode:TDataNode;'#13
  +#10'  i:integer;'#13#10'  keyattribs:TNodesArray;'#13#10'begin'#13#10'  setl'
  +'ength(keyattribs,0);'#13#10'  classNode:=FindDataNodeById(DMRoot,ClassName,'
  +''''',true);'#13#10'  if (classNode<>nil) and (classNode.NodeType=''DMClass'
  +''') then'#13#10'  begin'#13#10'    for i:=0 to length(classNode.ChildNodes)'
  +'-1 do'#13#10'    begin'#13#10'       if (classNode.ChildNodes[i].NodeType='
  +'''DMAttrib'')'#13#10'       and (myStrToBool(classNode.ChildNodes[i].GetAtt'
  +'ribute(''IsId'',false).AttribValue) = True) then'#13#10'       begin'#13#10
  +'         setlength(keyattribs,length(keyattribs)+1);'#13#10'         //keyf'
  +'ields[length(keyfields)-1] := classNode.ChildNodes[i].NodeName;'#13#10'    '
  +'     keyattribs[length(keyattribs)-1] := classNode.ChildNodes[i];'#13#10'  '
  +'     end;'#13#10'    end;'#13#10'  end;'#13#10'  result:=keyattribs;'#13#10
  +'end;'#13#10#13#10'procedure DMAttribsCrosscheck(nodeName:String);'#13#10'va'
  +'r'#13#10'  checkNode:TDataNode;'#13#10'  i,d:integer;'#13#10'  f:double;'#13
  +#10'  tst,oldval:string;'#13#10'  ok:boolean;'#13#10'begin'#13#10'  checkNod'
  +'e:=FindDataNodeByid(DMRoot,nodeName,'''',true);'#13#10'  if checkNode<>nil '
  +'then'#13#10'  begin'#13#10'    for i:=0 to length(checkNode.NodeAttributes)'
  +'-1 do'#13#10'    begin'#13#10'      if checkNode.NodeAttributes[i].AttribNa'
  +'me = ''AttribType'' then'#13#10'      begin'#13#10'        oldval:=checkNod'
  +'e.GetAttribute(''DefaultValue'',true).AttribValue;'#13#10'        if checkN'
  +'ode.NodeAttributes[i].AttribValue = ''String'' then'#13#10'        begin'#13
  +#10'          tst:=checkNode.GetAttribute(''StringLength'',true).AttribValue'
  +';'#13#10'          if checkNode.GetAttribute(''StringLength'',true).AttribV'
  +'alue = '''' then'#13#10'            checkNode.SetAttributeValue(''StringLen'
  +'gth'',''20'');'#13#10'        end'#13#10'        else if checkNode.NodeAttr'
  +'ibutes[i].AttribValue = ''Boolean'' then'#13#10'        begin'#13#10'      '
  +'    checkNode.SetAttributeValue(''StringLength'','''');'#13#10'          if'
  +' (oldval <> ''True'')'#13#10'          and (oldval <> ''False'') then'#13#10
  +'            checkNode.SetAttributeValue(''DefaultValue'',''False'');'#13#10
  +'        end'#13#10'        else if checkNode.NodeAttributes[i].AttribValue '
  +'= ''Integer'' then'#13#10'        begin'#13#10'          checkNode.SetAttri'
  +'buteValue(''StringLength'','''');'#13#10'          ok:=TryStrToInt(oldval,d'
  +');'#13#10'          if not ok then'#13#10'          begin'#13#10'          '
  +'  // old value is not an integer'#13#10'            checkNode.SetAttributeV'
  +'alue(''DefaultValue'',''0'');'#13#10'          end;'#13#10'//          try'
  +#13#10'//            d:=strtoint(oldval);'#13#10'//          except'#13#10'/'
  +'/            on e:exception do'#13#10'//            begin'#13#10'//        '
  +'      // old value is not an integer'#13#10'//              checkNode.SetAt'
  +'tributeValue(''DefaultValue'',''0'');'#13#10'//            end;'#13#10'//  '
  +'        end;'#13#10#13#10'        end'#13#10'        else'#13#10'        be'
  +'gin'#13#10'          checkNode.SetAttributeValue(''StringLength'','''');'#13
  +#10'          try'#13#10'            f:=strtofloat(oldval);'#13#10'         '
  +' except'#13#10'            on e:exception do'#13#10'            begin'#13#10
  ,'              // old value is not a number'#13#10'              checkNode.S'
  +'etAttributeValue(''DefaultValue'',''0'');'#13#10'            end;'#13#10'  '
  +'        end;'#13#10'        end;'#13#10'      end;'#13#10'    end;'#13#10' '
  +' end;'#13#10'end;'#13#10#13#10'function DMRefKeys(refAttribNode:TDataNode):'
  +'TRefKeys;'#13#10'var'#13#10'  refClassName:String;'#13#10'  j:integer;'#13
  +#10'  keys:TNodesArray;'#13#10'  refkeys:TRefKeys;'#13#10'begin'#13#10'  // '
  +'find the id field(s) of the referenced class'#13#10'  refClassName:=refAttr'
  +'ibNode.GetAttribute(''Class'',false).AttribValue;'#13#10'  keys:=DMGetKeyFi'
  +'elds(refClassName);'#13#10'  setlength(refkeys,length(keys));'#13#10'  for '
  +'j:=0 to length(keys)-1 do'#13#10'  begin'#13#10'    refkeys[j].RefKeyName:='
  +'refAttribNode.NodeName+''_''+keys[j].NodeName;'#13#10'    refkeys[j].RefKey'
  +'Type:=keys[j].GetAttribute(''AttribType'',false).AttribValue;'#13#10'  end;'
  +#13#10'  result:=refkeys;'#13#10'end;'#13#10#13#10'procedure GatherAttribs1('
  +'ClassNode:TDataNode;UnitCode:TStringList);'#13#10'// generates list of priv'
  +'ate fields f...'#13#10'var'#13#10'  i,j:integer;'#13#10'  attribLine:String'
  +';'#13#10'  ContainedBy,keys:TNodesArray;'#13#10#13#10'  procedure AddField('
  +'AttribNode:TdataNode);'#13#10'  begin'#13#10'    attribLine:=''    f''+Attr'
  +'ibNode.NodeName+'':'';'#13#10'    attribLine:=attribLine + AttribNode.GetAt'
  +'tribute(''AttribType'',false).AttribValue+'';'';'#13#10'    UnitCode.Add(at'
  +'tribLine);'#13#10'  end;'#13#10'  procedure AddRefField(AttribNode:TdataNod'
  +'e);'#13#10'  var'#13#10'    j:integer;'#13#10'    refkeys:TRefKeys;'#13#10
  +'  begin'#13#10'    // find the id field(s) of the referenced class'#13#10' '
  +'   refkeys:=DMRefKeys(AttribNode);'#13#10'    for j:=0 to length(refkeys)-1'
  +' do'#13#10'    begin'#13#10'      attribLine:=''    f''+refkeys[j].RefKeyNa'
  +'me+'':'';'#13#10'      attribLine:=attribLine + refkeys[j].RefKeyType+'';'''
  +';'#13#10'      UnitCode.Add(attribLine);'#13#10'    end;'#13#10'  end;'#13
  +#10#13#10'begin'#13#10'  for i:=0 to length(ClassNode.ChildNodes)-1 do'#13#10
  +'  begin'#13#10'    if (ClassNode.ChildNodes[i].NodeType = ''DMAttrib'') the'
  +'n'#13#10'    begin'#13#10'      AddField(ClassNode.ChildNodes[i]);'#13#10' '
  +'   end;'#13#10'    if (ClassNode.ChildNodes[i].NodeType = ''DMRef'') then'
  +#13#10'    begin'#13#10'      AddRefField(ClassNode.ChildNodes[i]);'#13#10' '
  +'   end;'#13#10'  end;'#13#10#13#10'  // for every ''contains'' reference to'
  +' this class from other classes, create a pointer field (eg owner key linkag'
  +'e)'#13#10'  ContainedBy:=DMFindClassOwners(ClassNode.NodeName);'#13#10'  fo'
  +'r i:=0 to length(ContainedBy)-1 do'#13#10'  begin'#13#10'    // this linkag'
  +'e must reference the primary key of the ''parent'' class'#13#10'    keys:=D'
  +'MGetKeyFields(ContainedBy[i].NodeParent.NodeName);'#13#10'    for j:=0 to l'
  +'ength(keys)-1 do'#13#10'    begin'#13#10'      AddField( keys[j]);'#13#10' '
  +'   end;'#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'procedure GatherAttrib'
  +'s2(ClassNode:TDataNode;UnitCode:TStringList);'#13#10'// generates:'#13#10'/'
  +'/  <name>:<type>;'#13#10'//  <name>:array of <type>;  ////removed this'#13
  +#10'var'#13#10'  i,j:integer;'#13#10'  ContainedBy,keys:TNodesArray;'#13#10
  +#13#10'  procedure AddProperty(AttribNode:TdataNode);'#13#10'  var'#13#10'  '
  +'{mult1,} attribLine, attrtype:String;'#13#10'  begin'#13#10'    //mult1:=Cl'
  +'assNode.ChildNodes[i].GetAttribute(''Multiplicity'',true).AttribValue;'#13
  +#10'    attribLine:=''    property ''+AttribNode.NodeName+'':'';'#13#10'    '
  +'//if (mult1 = ''1'') or (mult1 = ''0'') or (mult1 = '''') then'#13#10'     '
  +' attribLine:=attribLine;'#13#10'    //else'#13#10'    //  attribLine:=attri'
  +'bLine + ''array of '';             //!!!! do we want this ?????'#13#10'    '
  +'attrtype:=AttribNode.GetAttribute(''AttribType'',false).AttribValue;'#13#10
  +'    attribLine:=attribLine + attrtype +'' read f''+AttribNode.NodeName+'' w'
  +'rite f''+AttribNode.NodeName+'';'';'#13#10'    UnitCode.Add(attribLine);'#13
  +#10'  end;'#13#10'  procedure AddRefProperty(AttribNode:TdataNode);'#13#10' '
  +' var'#13#10'    refkeys:TRefKeys;'#13#10'    j:integer;'#13#10'    attribLi'
  +'ne:String;'#13#10'  begin'#13#10'    refkeys:=DMRefKeys(AttribNode);'#13#10
  +'    for j:=0 to length(refkeys)-1 do'#13#10'    begin'#13#10'      attribLi'
  +'ne:=''    property ''+refkeys[j].RefKeyName+'':'';'#13#10'      attribLine:'
  +'=attribLine + refkeys[j].RefKeyType +'' read f''+refkeys[j].RefKeyName+'' w'
  +'rite f''+refkeys[j].RefKeyName+'';'';'#13#10'      UnitCode.Add(attribLine)'
  +';'#13#10'    end;'#13#10'  end;'#13#10#13#10'begin'#13#10'  for i:=0 to len'
  +'gth(ClassNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    if (ClassNode.Chil'
  +'dNodes[i].NodeType = ''DMAttrib'') then'#13#10'    begin'#13#10'      Addpr'
  +'operty(ClassNode.ChildNodes[i]);'#13#10'    end;'#13#10'    if (ClassNode.C'
  +'hildNodes[i].NodeType = ''DMRef'') then'#13#10'    begin'#13#10'      AddRe'
  ,'fProperty(ClassNode.ChildNodes[i]);'#13#10'    end;'#13#10'  end;'#13#10#13
  +#10'  // for every reference to this class from other classes, create a poin'
  +'ter field (eg owner key linkage)'#13#10'  ContainedBy:=DMFindClassOwners(Cl'
  +'assNode.NodeName);'#13#10'  for i:=0 to length(ContainedBy)-1 do'#13#10'  b'
  +'egin'#13#10'    // this linkage must reference the primary key of the ''par'
  +'ent'' class'#13#10'    keys:=DMGetKeyFields(ContainedBy[i].NodeParent.NodeN'
  +'ame);'#13#10'    for j:=0 to length(keys)-1 do'#13#10'    begin'#13#10'    '
  +'  AddProperty( keys[j]);'#13#10'    end;'#13#10'  end;'#13#10#13#10'end;'#13
  +#10#13#10'procedure GatherOps(Compiler:TObject;ClassNode:TDataNode;DoCode:Bo'
  +'olean;UnitCode:TStringList);'#13#10'// generates:'#13#10'//  function <name'
  +'>(...params...):<returntype>;'#13#10'var'#13#10'  i,j:integer;'#13#10'  thi'
  +'sOp:TDataNode;'#13#10'  rtype, opline, opCode, dflt:String;'#13#10'  IncCod'
  +'e:TStringList;'#13#10'begin'#13#10'  if DoCode then'#13#10'  begin'#13#10' '
  +'   UnitCode.Add(''constructor ''+ClassNode.NodeName+''.Create;'');'#13#10' '
  +'   UnitCode.Add(''begin'');'#13#10'    UnitCode.Add(''end;'');'#13#10'  end'
  +';'#13#10'  IncCode:=TStringList.Create;'#13#10'  for i:=0 to length(ClassNo'
  +'de.ChildNodes)-1 do'#13#10'  begin'#13#10'    IncCode.Clear;'#13#10'    if '
  +'ClassNode.ChildNodes[i].NodeType = ''DMOp'' then'#13#10'    begin'#13#10'  '
  +'    thisOp:=ClassNode.ChildNodes[i];'#13#10'      dflt:=DfltOpCode;'#13#10
  +'      opCode:=thisOp.GetAttribute(''Code'',true).AttribValue;'#13#10'      '
  +'if (trim(opCode)<>'''')'#13#10'      and (opCode<>Dflt) then'#13#10'      b'
  +'egin'#13#10'        rtype:=thisOp.GetAttribute(''ReturnType'',true).AttribV'
  +'alue;'#13#10'        if rtype='''' then rtype:=''String'';'#13#10'        i'
  +'f doCode then'#13#10'          opLine:=''function ''+ClassNode.NodeName + '
  +'''.'' + thisOp.NodeName+''('''#13#10'        else'#13#10'          opLine:='
  +'''    function ''+thisOp.NodeName+''('';'#13#10'        for j:=0 to length('
  +'thisOp.ChildNodes)-1 do'#13#10'          if thisOp.ChildNodes[j].NodeType='
  +'''DMParam'' then'#13#10'          begin'#13#10'            if j>0 then'#13
  +#10'              opLine:=opLine+'';'';'#13#10'            opLine:=opLine+th'
  +'isOp.ChildNodes[j].NodeName+'':''+thisOp.ChildNodes[j].GetAttribute(''Param'
  +'Type'',false).AttribValue;'#13#10'          end;'#13#10'        opLine:=opL'
  +'ine + ''):''+rtype+'';'';'#13#10'        if not doCode then'#13#10'        '
  +'  UnitCode.Add(opLine)'#13#10'        else'#13#10'        begin'#13#10'    '
  +'      IncCode.Add(opLine);'#13#10'          IncCode.Add(opCode);'#13#10'   '
  +'       WriteIncFile(Compiler,thisOp.NodeName, '''',''tempinc/'', UnitCode, '
  +'IncCode);'#13#10'        end;'#13#10'      end;'#13#10'    end;'#13#10'  en'
  +'d;'#13#10'  FreeAndNil(IncCode);'#13#10'end;'#13#10#13#10'procedure GatherC'
  +'lasses(RootNode:TDataNode;UnitCode:TStringList);'#13#10'var'#13#10'  i:inte'
  +'ger;'#13#10'begin'#13#10#13#10'  for i:=0 to length(RootNode.ChildNodes)-1 '
  +'do'#13#10'    if RootNode.ChildNodes[i].NodeType = ''DMClass'' then'#13#10
  +'    begin'#13#10'      UnitCode.Add(''  type ''+RootNode.ChildNodes[i].Node'
  +'Name+''=class(TPersistent)'');'#13#10'      UnitCode.Add(''    private'');'
  +#13#10'      GatherAttribs1(RootNode.ChildNodes[i],UnitCode);'#13#10'      U'
  +'nitCode.Add(''    public'');'#13#10'      UnitCode.Add(''      constructor '
  +'Create;'');'#13#10'      GatherOps(nil,RootNode.ChildNodes[i],false,UnitCod'
  +'e);'#13#10'      UnitCode.Add(''    published'');'#13#10'      GatherAttrib'
  +'s2(RootNode.ChildNodes[i],UnitCode);'#13#10'      UnitCode.Add(''  end;'');'
  +#13#10'    end;'#13#10'end;'#13#10#13#10'procedure GatherClassesReg(RootNode'
  +':TDataNode;UnitCode:TStringList);'#13#10'var'#13#10'  i:integer;'#13#10'beg'
  +'in'#13#10'  for i:=0 to length(RootNode.ChildNodes)-1 do'#13#10'    if Root'
  +'Node.ChildNodes[i].NodeType = ''DMClass'' then'#13#10'    begin'#13#10'    '
  +' // UnitCode.Add(''       RegisterClass(''+PackageNode.ChildNodes[i].NodeNa'
  +'me+'');'');'#13#10'    end;'#13#10'end;'#13#10#13#10'procedure GatherOpsCod'
  +'e(Compiler:TObject;RootNode:TDataNode;UnitCode:TStringList);'#13#10'var'#13
  +#10'  i:integer;'#13#10'begin'#13#10#13#10'  for i:=0 to length(RootNode.Chi'
  +'ldNodes)-1 do'#13#10'    if RootNode.ChildNodes[i].NodeType = ''DMClass'' t'
  +'hen'#13#10'    begin'#13#10'      GatherOps(Compiler,RootNode.ChildNodes[i]'
  +',true,UnitCode);'#13#10'    end;'#13#10'end;'#13#10#13#10'procedure Constru'
  +'ctPascalDM(RunMode:String;PascalCode:TStringList);'#13#10'// Create pascal '
  +'code to declare the model classes'#13#10'//    unit DMRoot;'#13#10'//    in'
  +'terface'#13#10'//      ...'#13#10'//      <class definitions>'#13#10'//    '
  +'  ...'#13#10'//    implementation'#13#10'//    end.'#13#10'var'#13#10'  Uni'
  +'tCode:TStringList;'#13#10'begin'#13#10'  UnitCode:=TStringList.Create;'#13
  +#10'      UnitCode.Clear;'#13#10'      UnitCode.Add(''unit DMRoot;'');'#13#10
  ,'      UnitCode.Add(''{$ifdef Dll}'');'#13#10'      UnitCode.Add(''{$mode ob'
  +'jfpc}{$H+}{$R+}'');'#13#10'      UnitCode.Add(''{$endif}'');'#13#10'      U'
  +'nitCode.Add(''interface'');'#13#10'      UnitCode.Add(''uses Classes, SysUt'
  +'ils, Math, contnrs, dateutils,'');'#13#10'      UnitCode.Add(''  rtlconsts,'
  +' strutils, types, typinfo, EventsInterface'');'#13#10'      if RunMode=''La'
  +'zDll'' then'#13#10'        UnitCode.Add(''  ,InterfaceTypesDll;'')'#13#10' '
  +'     else'#13#10'      begin'#13#10'        UnitCode.Add(''  ,InterfaceType'
  +'s;'');'#13#10'      end;'#13#10#13#10'      GatherClasses(DMRoot,UnitCode);'
  +#13#10'      UnitCode.Add(''implementation'');'#13#10'      {$ifndef JScript'
  +'}'#13#10'      GatherOpsCode(nil,DMRoot,UnitCode);'#13#10'      {$else}'#13
  +#10'      GatherOpsCode(MyWebCompiler.Compiler,DMRoot,UnitCode);'#13#10'    '
  +'  {$endif}'#13#10'      UnitCode.Add(''begin'');'#13#10'      GatherClasses'
  +'Reg(DMRoot,UnitCode);'#13#10'      UnitCode.Add(''end.'');'#13#10#13#10'   '
  +'   {$ifndef JScript}'#13#10'      // save the generated pas file'#13#10'   '
  +'   SysUtils.DeleteFile(''tempinc/DMRoot.pas'');'#13#10'      UnitCode.SaveT'
  +'oFile(''tempinc/DMRoot.pas'');'#13#10'      {$else}'#13#10'      TPas2JSWeb'
  +'Compiler(MyWebCompiler.Compiler).WebFS.SetFileContent(''DMRoot.pas'',UnitCo'
  +'de.Text);'#13#10'      {$endif}'#13#10'      // add this unit to the uses l'
  +'ist in the main module'#13#10'      PascalCode.Add('',DMRoot'');'#13#10'// '
  +' WriteToLocalStore(''DMtest.pas'',PascalCode.text);'#13#10'    FreeAndNil(U'
  +'nitCode);'#13#10'end;'#13#10#13#10'procedure ShowDMOpCodeEditor(targetNode:'
  +'TDataNode;BtnNodeId:String);'#13#10'var'#13#10'  EditBoxName, OpCode:String'
  +';'#13#10'begin'#13#10'  // pop up the syntax editor.'#13#10'  if BtnNodeId<'
  +'>'''' then'#13#10'  begin'#13#10'    // remove the ''Btn'' suffix'#13#10'  '
  +'  EditBoxName:=Copy(BtnNodeId,1,length(BtnNodeId)-3);'#13#10'    OIEditBox:'
  +'=FindDataNodeById(UIRootNode,EditBoxName,'''',true);'#13#10'  end'#13#10'  '
  +'else'#13#10'  begin'#13#10'    OIEditBox:=nil;'#13#10'  end;'#13#10'  OpCod'
  +'e := targetNode.GetAttribute(''Code'',true).AttribValue;'#13#10'  if Trim(O'
  +'pCode)='''' then'#13#10'    // provide a template op function'#13#10'    Op'
  +'Code:= DfltOpCode;'#13#10#13#10'  CodeEditForm.CodeEdit.ItemValue := OpCode'
  +';'#13#10'  CodeEditForm.CodeEditInit.ItemValue := '''';'#13#10#13#10'  Code'
  +'EditForm.CodeEdit.MessageLines:='''';'#13#10'  CodeEditForm.CodeEditInit.Me'
  +'ssageLines:='''';'#13#10#13#10'  CodeEditForm.Mode:=''DMOpCode'';'#13#10'  '
  +'CodeEditForm.CodeEditMainTabs.TabIndex:=0;'#13#10'  CodeEditForm.Initialise'
  +'OnShow(''DM Operation'',targetNode.NodeName,'''');'#13#10'  ShowXForm(''Cod'
  +'eEditForm'',true);'#13#10'end;'#13#10#13#10'procedure DMMoveSiblingUpDown(U'
  +'pDown:String);'#13#10'var'#13#10'  thisNode, myParent:TdataNode;'#13#10'  c'
  +',n,i:integer;'#13#10'begin'#13#10'  thisNode:=DMSelectedDataTreeNode;'#13#10
  +'  if thisNode<>nil then'#13#10'  begin'#13#10'    myParent:=FindParentOfNod'
  +'e(DMRoot,thisNode);'#13#10'    if myParent<>nil then'#13#10'    begin'#13#10
  +'      for i:=0 to length(myParent.ChildNodes)-1 do'#13#10'      begin'#13#10
  +'        if myParent.ChildNodes[i]=thisNode then'#13#10'          c:=i;'#13
  +#10'      end;'#13#10'      if UpDown=''Up'' then'#13#10'        if c>0 then'
  +' n:=c-1'#13#10'        else n:=-1;'#13#10'      if UpDown=''Down'' then'#13
  +#10'        if c<length(myParent.ChildNodes)-1 then'#13#10'          n:=c+1'
  +#13#10'        else'#13#10'          n:=-1;'#13#10'      if n>-1 then'#13#10
  +'      begin'#13#10'        myParent.RemoveChildNode(thisNode);'#13#10'     '
  +'   AddChildToParentNode(myParent,thisNode,n);'#13#10'      end;'#13#10'    '
  +'end;'#13#10'    RebuildDMTree;'#13#10'  end;'#13#10'end;'#13#10#13#10'funct'
  +'ion ClassIsContained(RootNode:TDataNode;className:String):Boolean;'#13#10'v'
  +'ar i,j:integer;'#13#10'  classNode:TDataNode;'#13#10'  ref:String;'#13#10' '
  +' isref:Boolean;'#13#10'begin'#13#10'  isref:=false;'#13#10'  for i:=0 to le'
  +'ngth(RootNode.ChildNodes)-1 do'#13#10'    if RootNode.ChildNodes[i].NodeNam'
  +'e<>className then'#13#10'    begin'#13#10'      classNode := RootNode.Child'
  +'Nodes[i];'#13#10'      for j:=0 to length(classNode.ChildNodes)-1 do'#13#10
  +'        if classNode.ChildNodes[j].NodeType = ''DMContains'' then'#13#10'  '
  +'      begin'#13#10'          ref:=classNode.ChildNodes[j].GetAttribute(''Cl'
  +'ass'',false).AttribValue;'#13#10'          if ref = className then'#13#10' '
  +'           isref:=true;'#13#10'        end;'#13#10'    end;'#13#10'  result'
  +':=isref;'#13#10'end;'#13#10#13#10'function AllDataClassNames(RootName:Strin'
  +'g):TStringList;'#13#10'var'#13#10'  i,j:integer;'#13#10'  classes:TStringLi'
  +'st;'#13#10'  RootNode,classNode:TDataNode;'#13#10'  className:String;'#13#10
  +'begin'#13#10'  classes := TStringList.Create;'#13#10'  RootNode:=FindDataNo'
  +'deById(DMRoot,RootName,'''',true);'#13#10'  if RootNode<>nil then'#13#10'  '
  ,'begin'#13#10'    for i:=0 to length(RootNode.ChildNodes)-1 do'#13#10'    be'
  +'gin'#13#10'      if RootNode.ChildNodes[i].NodeType = ''DMClass'' then'#13
  +#10'        if myStrToBool(RootNode.ChildNodes[i].GetAttribute(''MakeDataset'
  +''',true).AttribValue) = true then'#13#10'        begin'#13#10'          cla'
  +'ssNode := RootNode.ChildNodes[i];'#13#10'          className := classNode.N'
  +'odeName;'#13#10'          classes.Add(className);'#13#10'        end;'#13#10
  +'    end;'#13#10'  end;'#13#10'  result:=classes;'#13#10'end;'#13#10#13#10'f'
  +'unction DMGetClassFields(DMClassName:String):TClassFieldDefs;'#13#10'var'#13
  +#10'  cflds:TClassFieldDefs;'#13#10'  i:integer;'#13#10'  DMFielddef:TClassF'
  +'ieldDef;'#13#10'  DMClassNode:TDataNode;'#13#10'begin'#13#10'  SetLength(cf'
  +'lds,0);'#13#10'  DMClassNode := FindDataNodeById(dmroot,DMClassName,'''',tr'
  +'ue);'#13#10'  if DMClassNode<>nil then'#13#10'  begin'#13#10'    for i:=0 t'
  +'o length(DMClassNode.ChildNodes)-1 do'#13#10'    begin'#13#10'      if (DMC'
  +'lassNode.ChildNodes[i].NodeType=''DMAttrib'') then'#13#10'      begin'#13#10
  +'        Setlength(cflds,length(cflds)+1);'#13#10'        cflds[length(cflds'
  +')-1].FieldName := DMClassNode.ChildNodes[i].NodeName;'#13#10'        cflds['
  +'length(cflds)-1].FieldType := DMClassNode.ChildNodes[i].GetAttribute(''Attr'
  +'ibType'',false).AttribValue;'#13#10'        cflds[length(cflds)-1].DfltValu'
  +'e := DMClassNode.ChildNodes[i].GetAttribute(''DefaultValue'',false).AttribV'
  +'alue;'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'  result:=cfld'
  +'s;'#13#10'end;'#13#10#13#10#13#10#13#10'{$ifndef JScript}'#13#10'function G'
  +'etDataset(DSName:String;var idx:integer;showError:Boolean=true):TBufDataset'
  +';'#13#10'var'#13#10'  i:integer;'#13#10'begin'#13#10'  result:=nil;'#13#10
  +'  idx:=-1;'#13#10'  for i:=0 to length(BufDatasets)-1 do'#13#10'  begin'#13
  +#10'    if BufDatasets[i].Name = DSName then'#13#10'    begin'#13#10'      r'
  +'esult:=BufDatasets[i];'#13#10'      idx:=i;'#13#10'    end;'#13#10'  end;'
  +#13#10'  if (showError) and (result=nil) then'#13#10'    showmessage(''Canno'
  +'t find Dataset ''+DSName); //....nb. this pauses the thread and allows queu'
  +'ed events to happen'#13#10'end;'#13#10'function DSSetObjPropValue(ds:TBufDa'
  +'taset;fd:TFieldDef;recObject:TObject;f:TField):Boolean;'#13#10'begin'#13#10
  +'  result:=true;'#13#10'  if fd.DataType = ftString then'#13#10'    SetStrPr'
  +'op(recObject,fd.Name,f.AsString)'#13#10'  else if fd.DataType = ftFloat the'
  +'n'#13#10'    SetFloatProp(recObject,fd.Name,f.AsFloat)'#13#10'  else if fd.'
  +'DataType = ftInteger then'#13#10'    SetOrdProp(recObject,fd.Name,f.AsInteg'
  +'er)'#13#10'  else if fd.DataType = ftBoolean then'#13#10'    SetBooleanProp'
  +'erty(recObject,fd.Name,f.AsBoolean);'#13#10'end;'#13#10'function DSGetCurre'
  +'ntRecordAsObject(DSName:String;recObject:TObject):Boolean;'#13#10'var'#13#10
  +'  i,oldidx:integer;'#13#10'  fn:String;'#13#10'  ds:TBufDataset;'#13#10'  o'
  +'k:Boolean;'#13#10'begin'#13#10'  result:=true;'#13#10'  ds:=GetDataset(DSNa'
  +'me,oldidx);'#13#10'  if (ds <> nil) and (recObject<>nil) then'#13#10'  begi'
  +'n'#13#10'    ok:=true;'#13#10'    for i:=0 to ds.FieldCount-1 do'#13#10'   '
  +' if ok then'#13#10'    begin'#13#10'      fn:=ds.FieldDefs[i].Name;'#13#10
  +'      ok:= DSSetObjPropValue(ds,ds.FieldDefs[i],recObject,ds.Fields[i]);'#13
  +#10'    end'#13#10'    else'#13#10'    begin'#13#10'      showmessage(''Fail'
  +'ed to get field ''+fn+'' from the data store'');'#13#10'      result:=false'
  +';'#13#10'      EXIT;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'  be'
  +'gin'#13#10'    result:=false;'#13#10'  end;'#13#10'end;'#13#10'{$endif}'#13
  +#10#13#10'{$ifndef JScript}'#13#10'function DSGetIndexedRecordAsObject(DSNam'
  +'e,AsyncProcName,keynames:String;keyvalues:TVarArray;recObject:TObject;Retur'
  +'nEvent:TEventStatus):Boolean;'#13#10'var'#13#10'  ok:Boolean;'#13#10'  ds:T'
  +'BufDataset;'#13#10'  i:integer;'#13#10'begin'#13#10'  ok:=true;'#13#10'  ds'
  +':=GetDataset(DSName,i);'#13#10'  if (ds <> nil) then'#13#10'  begin'#13#10
  +'    // emulate the JS IndexedDB pattern here.... table has a predefined ''k'
  +'ey'' which is a set of fields; value is a list of values...'#13#10'    // I'
  +'n the TBufDataset in desktop mode, the Locate function wants the name(s) of'
  +' predefined indexes, with a corresponding set of values.'#13#10'    // Here'
  +',we want to return a single record using a single ''primary key'' value.'#13
  +#10'    //ok:=ds.Locate(idxname,idxvalue,[]);    //(loCaseInsensitive, loPar'
  +'tialKey);'#13#10'    //ok:=ds.Locate(DSName+''Idx'',VarArrayOf(keyvalues),['
  +']);    //(loCaseInsensitive, loPartialKey);'#13#10'    ok:=ds.Locate(keynam'
  +'es,VarArrayOf(keyvalues),[]);    //(loCaseInsensitive, loPartialKey);'#13#10
  +'    //ok:=ds.Locate(''c1key;s1attr1'',VarArrayOf([''rec 2'',''99'']),[]);  '
  +'  //(loCaseInsensitive, loPartialKey);'#13#10'    if ok then'#13#10'    beg'
  +'in'#13#10'      ok:= DSGetCurrentRecordAsObject(DSName,recObject);'#13#10' '
  ,'     if ok then'#13#10'      begin'#13#10'        SetLength(ReturnEvent.Asy'
  +'ncReturnObject,length(ReturnEvent.AsyncReturnObject)+1);'#13#10'        Ret'
  +'urnEvent.AsyncReturnObject[length(ReturnEvent.AsyncReturnObject)-1]:=recObj'
  +'ect;'#13#10'      end;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'  '
  +'  ok:=false;'#13#10'  DSReturnToEvent(ReturnEvent,AsyncProcName);'#13#10'{$'
  +'else}'#13#10'function DSGetIndexedRecordAsObject(DSName,AsyncProcName:Strin'
  +'g;keyvalues:TStringArray;ReturnEvent:TEventStatus):Boolean;'#13#10'// this '
  +'function is asynchronous.  The data object that is returned on success will'
  +' be picked'#13#10'// up in an event handler ''Main'' section, in the e.Asyn'
  +'cReturnObject property.'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10
  +'  ok:=true;'#13#10'  asm'#13#10'  console.log(''looking for key ''+keyvalue'
  +'s+'' in ''+DSName);'#13#10'  var transaction = db.transaction([DSName],''re'
  +'adonly'');'#13#10'  // report on the success of the transaction completing,'
  +' when everything is done'#13#10'  transaction.oncomplete = function(event) '
  +'{'#13#10'    console.log(''Transaction completed.'');'#13#10'    pas.Interf'
  +'aceTypes.DSReturnToEvent(ReturnEvent,AsyncProcName);'#13#10'  };'#13#10#13
  +#10'  transaction.onerror = function(event) {'#13#10'    console.log(''Trans'
  +'action not opened due to error: '' + event.target.error);'#13#10'  };'#13#10
  +#13#10'  var objectStore = transaction.objectStore(DSName);'#13#10'  var req'
  +'uest = objectStore.get(keyvalues);    //primary key is an array of values ('
  +'for the ''IsId'' attributes)'#13#10#13#10'  request.onerror = function(even'
  +'t) {'#13#10'    // Handle errors!'#13#10'    console.log(''Error in DSGetIn'
  +'dexedRecordAsObject '',event.target.error);'#13#10'  };'#13#10'  request.on'
  +'success = function(event) {'#13#10'    var i=ReturnEvent.AsyncReturnObject.'
  +'length;'#13#10'    ReturnEvent.AsyncReturnObject.push(ReturnEvent.ValueObje'
  +'ct);'#13#10'    // Do something with the request.result...'#13#10'    if (r'
  +'equest.result) {'#13#10'      //console.log("found record" );'#13#10'      '
  +'//console.log(request.result);'#13#10'      //......... returnobject has to'
  +' be the original class type...'#13#10'      var value;'#13#10'      Object.'
  +'keys(request.result).forEach(function(key) {'#13#10'        value = request'
  +'.result[key];'#13#10'        //console.log(''key=''+key+'' value=''+value);'
  +#13#10'        ReturnEvent.AsyncReturnObject[i][''f''+key] = value;'#13#10' '
  +'     });'#13#10'      //console.log(''returning...'',i);'#13#10'      //con'
  +'sole.log(ReturnEvent.AsyncReturnObject[i]);'#13#10#13#10'    }'#13#10'    e'
  +'lse {'#13#10'      if (ReturnEvent) {ReturnEvent.AsyncReturnObject[i]=null;'
  +'}'#13#10'      console.log(''record with key ''+keyvalues+'' not found in '
  +'''+DSName);'#13#10'    }'#13#10'   };'#13#10'  end;'#13#10'{$endif}'#13#10
  +'  result:=ok;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'function DS'
  +'DeleteARow(ReturnEvent:TEventStatus;DSName,AsyncProcName,keynames:String;DS'
  +'KeyValues:TVarArray):Boolean;'#13#10'var'#13#10'  ok:Boolean;'#13#10'  ds:T'
  +'BufDataset;'#13#10'  i:integer;'#13#10'begin'#13#10'  ok:=true;'#13#10'  ds'
  +':=GetDataset(DSName,i);'#13#10'  if (ds <> nil) then'#13#10'  begin'#13#10
  +'    // emulate the JS IndexedDB pattern here.... table has a predefined ''k'
  +'ey'' which is a set of fields; value is a list of values...'#13#10'    // I'
  +'n the TBufDataset in desktop mode, the Locate function wants the name(s) of'
  +' predefined indexes, with a corresponding set of values.'#13#10'    // Here'
  +',we want to return a single record using a single ''primary key'' value.'#13
  +#10'    ok:=ds.Locate(keynames,VarArrayOf(DSKeyValues),[]);    //(loCaseInse'
  +'nsitive, loPartialKey);'#13#10'    if ok then'#13#10'    begin'#13#10'     '
  +' ds.Delete;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    ok:=false'
  +';'#13#10'  DSReturnToEvent(ReturnEvent,AsyncProcName);'#13#10'end;'#13#10'{'
  +'$else}'#13#10'function DSDeleteARow(ReturnEvent:TEventStatus;DSName,AsyncPr'
  +'ocName:String;DSKeyValues:TStringArray):Boolean;'#13#10'var'#13#10'  ok:Boo'
  +'lean;'#13#10'begin'#13#10'  ok:=true;'#13#10'  asm'#13#10'  console.log(''D'
  +'SDeleteARow looking for key '',DSKeyValues,'' in ''+DSName);'#13#10'  var t'
  +'ransaction = db.transaction([DSName],''readwrite'');'#13#10'  // report on '
  +'the success of the transaction completing, when everything is done'#13#10' '
  +' transaction.oncomplete = function(event) {'#13#10'    console.log(''DSDele'
  +'teARow Transaction completed.'');'#13#10'    pas.InterfaceTypes.DSReturnToE'
  +'vent(ReturnEvent,AsyncProcName);'#13#10'  };'#13#10#13#10'  transaction.one'
  +'rror = function(event) {'#13#10'    console.log(''Transaction not opened du'
  +'e to error: '' + event.target.error);'#13#10'  };'#13#10#13#10'  var object'
  +'Store = transaction.objectStore(DSName);'#13#10'  var request = objectStore'
  +'.delete(DSKeyValues);    //primary key is an array of values (for the ''IsI'
  ,'d'' attributes)'#13#10#13#10'  request.onerror = function(event) {'#13#10' '
  +'   console.log(''Error in DSDeleteARow '',event.target.error);'#13#10'  };'
  +#13#10'  request.onsuccess = function(event) {'#13#10'    console.log(''reco'
  +'rd deleted'');'#13#10'   };'#13#10'  end;'#13#10'  result:=ok;'#13#10'end;'
  +#13#10'{$endif}'#13#10#13#10'function DSAppendRecordFromObject(DSName,AsyncP'
  +'rocName:String;recObject:TObject;ReturnEvent:TEventStatus):Boolean;'#13#10
  +'var'#13#10'  ok:Boolean;'#13#10'  DMClassNode:TDataNode;'#13#10'{$ifndef JS'
  +'cript}'#13#10'  ds:TBufDataset;'#13#10'  i:integer;'#13#10'begin'#13#10'  /'
  +'/XIDEMain.XIDEForm.XMemo1.ItemValue:=XIDEMain.XIDEForm.XMemo1.ItemValue+Lin'
  +'eEnding+DSName+'' DSAppendRecordFromObject'';'#13#10'  ok:=true;'#13#10'  d'
  +'s:=GetDataset(DSName,i);'#13#10'  if (ds <> nil) then'#13#10'  begin'#13#10
  +'    try'#13#10#13#10'      ds.AppendRecord([]);       // empty record appen'
  +'ded to dataset'#13#10'      DSSetRecordFromObject(DSName,recObject);'#13#10
  +'    except'#13#10'      on e:exception do'#13#10'      begin'#13#10'       '
  +' showmessage(''failed to append row to Dataset ''+DSName+'' ''+E.Message);'
  +#13#10'        ok:=false;'#13#10'      end;'#13#10'    end;'#13#10'  end'#13
  +#10'  else'#13#10'  begin'#13#10'    ok:=false;'#13#10'  end;'#13#10'  DSRet'
  +'urnToEvent(ReturnEvent,AsyncProcName);'#13#10'{$else}'#13#10#13#10'begin'#13
  +#10'  ok:=true;'#13#10#13#10'    // find the data model description for this'
  +' dsName'#13#10'    DMClassNode := findDataNodeById(dmroot,DSName,'''',true)'
  +';'#13#10'    if (DMClassNode=nil) then'#13#10'    begin'#13#10'      showme'
  +'ssage(''Cannot find Data Model description for classname ''+DSName);'#13#10
  +'      EXIT;'#13#10'    end;'#13#10#13#10'    asm'#13#10'    // open a read/'
  +'write db transaction, ready for adding the data'#13#10'    console.log(''op'
  +'ening readwrite transaction for ''+DSName);'#13#10'    var transaction = db'
  +'.transaction([DSName], "readwrite");    // can be more datasets here in the'
  +' array'#13#10#13#10'    // report on the success of the transaction complet'
  +'ing, when everything is done'#13#10'    transaction.oncomplete = function(e'
  +'vent) {'#13#10'      console.log(''DSAppendRecordFromObject readwrite trans'
  +'action for ''+DSName+'' completed.'');'#13#10'      pas.InterfaceTypes.DSRe'
  +'turnToEvent(ReturnEvent,AsyncProcName);'#13#10'    };'#13#10#13#10'    tran'
  +'saction.onerror = function(event) {'#13#10'      console.log(''DSAppendReco'
  +'rdFromObject Transaction not opened due to error. '',event.target.error);'
  +#13#10'      pas.InterfaceTypes.DSReturnToEvent(ReturnEvent,AsyncProcName);'
  +#13#10'    };'#13#10#13#10'    // create an object store on the transaction'
  +#13#10'    var objectStore = transaction.objectStore(DSName);'#13#10#13#10' '
  +'   // Make a JS object (DSItem) from the supplied class'#13#10'    var DSIt'
  +'em = {};'#13#10'    for (var i=0; i<rtl.length(DMClassNode.ChildNodes); i++'
  +') {'#13#10'      if (DMClassNode.ChildNodes[i].NodeType==''DMAttrib'') {'#13
  +#10'        var cmd = ''DSItem.''+DMClassNode.ChildNodes[i].NodeName+'' = re'
  +'cObject.f''+DMClassNode.ChildNodes[i].NodeName+'';'';'#13#10'        //cons'
  +'ole.log(cmd);'#13#10'        eval(cmd)'#13#10'      }'#13#10'      if (DMCl'
  +'assNode.ChildNodes[i].NodeType==''DMRef'') {'#13#10'        var keys = pas.'
  +'XDataModel.DMRefKeys(DMClassNode.ChildNodes[i]);'#13#10'        for (var j='
  +'0; j<keys.length; j++) {'#13#10'          var cmd = ''DSItem.''+keys[j].Ref'
  +'KeyName+'' = recObject.f''+keys[j].RefKeyName+'';'';'#13#10'          //con'
  +'sole.log(cmd);'#13#10'          eval(cmd)'#13#10'        }'#13#10'      }'
  +#13#10'    }'#13#10#13#10'    // Make a request to add our DSItem object to '
  +'the object store'#13#10'    //console.log(''Adding: ''+DSItem.toString());'
  +#13#10'    //console.log(''key: ''+DSItem.c1att1);'#13#10'    var objectStor'
  +'eRequest = objectStore.add(DSItem);'#13#10#13#10'    objectStoreRequest.ons'
  +'uccess = function(event) {'#13#10'      // report the success of our reques'
  +'t'#13#10'      console.log(''DSAppendRecordFromObject Add request successfu'
  +'l.'');'#13#10'    };'#13#10'    objectStoreRequest.onerror = function(event'
  +') {'#13#10'      // do something else if it didn''t work....'#13#10'      c'
  +'onsole.log(''DSAppendRecordFromObject Add request failed. '',event.target.e'
  +'rror);'#13#10'    };'#13#10'    end;'#13#10'{$endif}'#13#10'  result:=ok;'
  +#13#10'end;'#13#10#13#10#13#10'procedure DoFilter(DSName:String;keyNames:TSt'
  +'ringArray;keysLow,keysHigh:TStringArray;callbackfunc:TObject=nil);'#13#10'{'
  +'$ifndef JScript}'#13#10'var'#13#10'  ds:TBufDataset;'#13#10'  i,numrecs:int'
  +'eger;'#13#10'  //returnedRows:???array of records????'#13#10'  ok:Boolean;'
  +#13#10'  filterText:String;'#13#10'{$endif}'#13#10'begin'#13#10'  {$ifdef JS'
  +'cript}'#13#10'  asm'#13#10'    var returnedRows = [];'#13#10'    var keyRan'
  +'geValue = IDBKeyRange.bound(keysLow, keysHigh);     //upper and lower bound'
  ,'s'#13#10'    const transaction = db.transaction([DSName], ''readonly'');'#13
  +#10'    const theStore = transaction.objectStore(DSName);'#13#10'    const c'
  +'ursorRequest = theStore.openCursor(keyRangeValue);'#13#10'    cursorRequest'
  +'.onsuccess = e => {'#13#10'      const cursor = e.target.result;'#13#10'   '
  +'   if (cursor) {'#13#10'            //if (cursor.value.vendor === ''GE'') {'
  +'    //....further filtering???'#13#10'              returnedRows.push(curso'
  +'r.value);'#13#10'            }'#13#10'            cursor.continue();'#13#10
  +'      }'#13#10'      else {'#13#10'        callbackfunc(returnedRows);'#13
  +#10'      }'#13#10'    }'#13#10'    (*............composite keys example....'
  +'.'#13#10'    index.openCursor([lowX, lowY], [highX, highY]).onsuccess = fun'
  +'ction(e) {'#13#10'    var cursor = e.target.result;'#13#10'    if (!cursor)'
  +' return; // done!'#13#10#13#10'    var x = cursor.key[0], y = cursor.key[1]'
  +';'#13#10'    // assert(lowX <= x && x <= highX);'#13#10'    if (y < lowY) {'
  +#13#10'        cursor.continue([x, lowY]);'#13#10'    } else if (y > highY) '
  +'{'#13#10'        cursor.continue([x + 1, lowY]);'#13#10'    } else {'#13#10
  +'        processRecord(cursor.value); // we got one!'#13#10'        const up'
  +'dateRequest = cursor.update(cursor.value);'#13#10'        cursor.continue()'
  +';'#13#10'    }'#13#10'    };'#13#10'      *)'#13#10'  end;'#13#10'  {$else}'
  +#13#10'  ok:=true;'#13#10'  ds:=GetDataset(DSName,i);'#13#10'  if (ds <> nil'
  +') then'#13#10'  begin'#13#10'  /// build filtertext from the keys parameter'
  +'s'#13#10'    filterText:=''('';'#13#10'    for i:=0 to length(keyNames)-1 d'
  +'o'#13#10'    begin'#13#10'      filterText := filterText + ''('' + keyNames'
  +'[i] + ''>='''''' + keysLow[i] + '''''')'';'#13#10'      filterText := filte'
  +'rText + '' and ('' + keyNames[i] + ''<='''''' + keysHigh[i] + '''''')'';'#13
  +#10'    end;'#13#10'    filterText:=filterText + '')'';'#13#10#13#10'    ds.'
  +'Filter:=filterText;        // also see filteroptions'#13#10'    ds.Filtered'
  +':=true;'#13#10'    try'#13#10'        numrecs := 0;'#13#10'        ds.disab'
  +'lecontrols;'#13#10'        ds.first;'#13#10'        while not ds.eof do'#13
  +#10'        begin'#13#10'           numrecs := numrecs + 1;'#13#10'         '
  +'  //add to returnedRows???'#13#10'           ds.next'#13#10'        end;'#13
  +#10'        showmessage(''filtered count ''+inttostr(numrecs));'#13#10'     '
  +' finally'#13#10'        ds.enablecontrols;'#13#10'      end;'#13#10'  end;'
  +#13#10'  (*'#13#10'  function DSApplyFilter(DSName:String; filterText:String'
  +'):Boolean;'#13#10'  var'#13#10'    ds:TBufDataset;'#13#10'    i:integer;'#13
  +#10'    ok:Boolean;'#13#10'  begin'#13#10'    ok:=true;'#13#10'    ds:=GetDa'
  +'taset(DSName,i);'#13#10'    if (ds <> nil) then'#13#10'    begin'#13#10'   '
  +'   ds.Filter:=filterText;        // also see filteroptions'#13#10'      ds.'
  +'Filtered:=true;'#13#10'    end;'#13#10'  end;'#13#10'  *)'#13#10'  {$endif}'
  +#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'function DSFieldType(Attri'
  +'bNode:TDataNode):TFieldType;'#13#10'var'#13#10'  ft:TFieldType;'#13#10'  DM'
  +'Type,mult:String;  //(''String'',''Integer'',''Float'',''Boolean'');'#13#10
  +'  makeds:Boolean;'#13#10'begin'#13#10'  DMType:=AttribNode.GetAttribute(''A'
  +'ttribType'',false).AttribValue;'#13#10'  mult:=AttribNode.GetAttribute(''Mu'
  +'ltiplicity'',false).AttribValue;'#13#10'  makeds:=MyStrToBool(AttribNode.No'
  +'deParent.GetAttribute(''MakeDataset'',false).AttribValue);'#13#10'  if ((mu'
  +'lt=''1'') or (mult=''0'') or (mult=''''))'#13#10'  or (makeds) then'#13#10
  +'  begin'#13#10'    if (DMType = ''String'') then ft:=ftString'#13#10'    el'
  +'se if (DMType = ''Integer'') then ft:=ftInteger'#13#10'    else if (DMType '
  +'= ''Float'') then ft:=ftFloat'#13#10'    else if (DMType = ''Boolean'') the'
  +'n ft:=ftBoolean;'#13#10'  end;'#13#10'  result:=ft;'#13#10'end;'#13#10#13#10
  +'function DSSetFieldValue(ds:TBufDataset;fd:TFieldDef;recObject:TObject):Boo'
  +'lean;'#13#10'var'#13#10'  v:variant;'#13#10'begin'#13#10'  result:=true;'#13
  +#10'  v:=GetPropValue(recObject,fd.Name);'#13#10'  ds.Edit;'#13#10'  ds.Fiel'
  +'dByName(fd.Name).Value:=v;'#13#10'end;'#13#10#13#10'function DSSetRecordFro'
  +'mObject(ds:TBufDataset;recObject:TObject):Boolean;'#13#10'var'#13#10'  i:in'
  +'teger;'#13#10'  fn:String;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  resul'
  +'t:=true;'#13#10'    ok:=true;'#13#10'    ds.Edit;'#13#10'    for i:=0 to ds'
  +'.FieldCount-1 do'#13#10'    if ok then'#13#10'    begin'#13#10'      fn:=ds'
  +'.FieldDefs[i].Name;'#13#10'      //ok:= DSSetObjPropValue(ds,ds.FieldDefs[i'
  +'],recObject,ds.Fields[i]);'#13#10'      //XIDEMain.XIDEForm.XMemo1.ItemValu'
  +'e:=XIDEMain.XIDEForm.XMemo1.ItemValue+LineEnding+ds.Name+'' DSSetRecordFrom'
  +'Object'';'#13#10'      ok:= DSSetFieldValue(ds,ds.FieldDefs[i],recObject);'
  +#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      showmessage(''F'
  +'ailed to get field ''+fn+'' from the data store '');'#13#10'      result:=f'
  ,'alse;'#13#10'      EXIT;'#13#10'    end;'#13#10'    ds.Post;'#13#10#13#10'e'
  +'nd;'#13#10'function DSSetRecordFromObject(DSName:String;recObject:TObject):'
  +'Boolean;'#13#10'var'#13#10'  ds:TBufDataset;'#13#10'  i:integer;'#13#10'beg'
  +'in'#13#10'  result:=true;'#13#10'  ds:=GetDataset(DSName,i);'#13#10'  if (d'
  +'s <> nil) then'#13#10'  begin'#13#10'    result:=DSSetRecordFromObject(ds,r'
  +'ecObject);'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    result:=fal'
  +'se;'#13#10'  end;'#13#10'end;'#13#10#13#10'function DSInsertRecordFromObjec'
  +'t(DSName:String;recObject:TObject):Boolean;'#13#10'var'#13#10'  ok:Boolean;'
  +#13#10'  ds:TBufDataset;'#13#10'  i:integer;'#13#10'begin'#13#10'  ok:=true;'
  +#13#10'  ds:=GetDataset(DSName,i);'#13#10'  if (ds <> nil) then'#13#10'  beg'
  +'in'#13#10'    try'#13#10'      //BufDatasets[0].InsertRecord([''1'',''2''])'
  +';'#13#10'      ds.InsertRecord([]);        // empty record inserted at curr'
  +'ent cursor location'#13#10'      DSSetRecordFromObject(DSName,recObject);'
  +#13#10'    except'#13#10'      on e:exception do'#13#10'      begin'#13#10' '
  +'       showmessage(''failed to insert row into Dataset ''+DSName+'' ''+E.Me'
  +'ssage);'#13#10'        ok:=false;'#13#10'      end;'#13#10'    end;'#13#10
  +'  end'#13#10'  else'#13#10'  begin'#13#10'    ok:=false;'#13#10'  end;'#13
  +#10'  result:=ok;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'{$ifndef JScript}'
  +#13#10'procedure DeleteDataset(DSName:String);'#13#10'var'#13#10'  i:integer'
  +';'#13#10'  found:boolean;'#13#10'  ds:TBufDataset;'#13#10'begin'#13#10'  fo'
  +'und:=false;'#13#10'  for i:=0 to length(BufDatasets)-1 do'#13#10'  begin'#13
  +#10'    if BufDatasets[i].Name = DSName then'#13#10'    begin'#13#10'      f'
  +'ound:=true;'#13#10'      ds:=BufDatasets[i];'#13#10'    end'#13#10'    else'
  +#13#10'      if found then'#13#10'        BufDatasets[i-1]:=BufDatasets[i];'
  +#13#10'  end;'#13#10'  if found then'#13#10'    setLength(BufDatasets,length'
  +'(BufDatasets)-1);'#13#10'  ds.Delete;'#13#10'end;'#13#10#13#10'function Cre'
  +'ateNewDS(DSName:String):TBufDataset;'#13#10'var'#13#10'  ds:TBufDataset;'#13
  +#10'  pk{,mult}:string;'#13#10'  classnode:TDataNode;'#13#10'  i,j:integer;'
  +#13#10'  ContainedBy,keys:TNodesArray;'#13#10#13#10'  procedure AddFieldDef('
  +'AttribNode:TdataNode);'#13#10'  var'#13#10'    fn:String;'#13#10'    f:TFie'
  +'ld;'#13#10'    ft:TFieldType;'#13#10'    slen:integer;'#13#10'  begin'#13#10
  +'    fn:=AttribNode.NodeName;'#13#10'    try'#13#10'    f:=ds.FieldByName(fn'
  +');'#13#10'    except'#13#10'      on E:Exception do'#13#10'      begin'#13
  +#10'        ft:=DSFieldType(AttribNode);'#13#10'        if ft=ftString then'
  +#13#10'        begin'#13#10'          slen:=StrToInt(AttribNode.GetAttribute'
  +'(''StringLength'',true).AttribValue);'#13#10'          ds.FieldDefs.Add(Att'
  +'ribNode.NodeName,ft,slen);'#13#10'        end'#13#10'        else'#13#10'  '
  +'        ds.FieldDefs.Add(AttribNode.NodeName,ft);'#13#10'      end;'#13#10
  +'    end;'#13#10'  end;'#13#10'  procedure AddRefFieldDef(AttribNode:TdataNo'
  +'de);'#13#10'  var'#13#10'    refClassName,fn:String;'#13#10'    keys:TNodes'
  +'Array;'#13#10'    j:integer;'#13#10'    f:TField;'#13#10'    ft:TFieldType;'
  +#13#10'    slen:integer;'#13#10'  begin'#13#10'    // find the id field(s) o'
  +'f the referenced class'#13#10'    refClassName:=AttribNode.GetAttribute(''C'
  +'lass'',false).AttribValue;'#13#10'    keys:=DMGetKeyFields(refClassName);'
  +#13#10'    for j:=0 to length(keys)-1 do'#13#10'    begin'#13#10'      fn:=A'
  +'ttribNode.NodeName+''_''+keys[j].NodeName;'#13#10'      try'#13#10'      f:'
  +'=ds.FieldByName(fn);'#13#10'      except'#13#10'        on E:Exception do'
  +#13#10'        begin'#13#10'          ft:=DSFieldType(keys[j]);'#13#10'     '
  +'     if ft=ftString then'#13#10'          begin'#13#10'            slen:=St'
  +'rToInt(keys[j].GetAttribute(''StringLength'',true).AttribValue);'#13#10'   '
  +'         ds.FieldDefs.Add(fn,ft,slen);'#13#10'          end'#13#10'        '
  +'  else'#13#10'            ds.FieldDefs.Add(fn,ft);'#13#10'        end;'#13
  +#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'begin'#13#10'  ds := TBu'
  +'fDataSet.Create(nil);'#13#10'  ds.Name := DSName;'#13#10'  pk:='''';'#13#10
  +'  classnode:=FindDataNodeById(DMRoot,DSName,'''',true);'#13#10'  for j:=0 t'
  +'o length(classnode.ChildNodes)-1 do'#13#10'  begin'#13#10'    if classnode.'
  +'ChildNodes[j].NodeType = ''DMAttrib'' then'#13#10'    begin'#13#10'      //'
  +'mult:=classnode.ChildNodes[j].GetAttribute(''Multiplicity'',false).AttribVa'
  +'lue;'#13#10'      //if (mult=''1'') or (mult=''0'') or (mult='''') then'#13
  +#10'      begin'#13#10'        AddFieldDef( classnode.ChildNodes[j]);'#13#10
  +'        // Add an index for the ''IsId'' field... (composite primary key) ?'
  +'??? enforce uniqueness ????'#13#10'        if myStrToBool(classnode.ChildNo'
  +'des[j].GetAttribute(''IsId'',true).AttribValue) = True then'#13#10'        '
  +'begin'#13#10'          if pk<>'''' then pk:=pk+'';'';'#13#10'          pk:='
  ,'pk+classnode.ChildNodes[j].NodeName;'#13#10'        end;'#13#10'      end;'
  +#13#10'    end;'#13#10'    if classnode.ChildNodes[j].NodeType = ''DMRef'' t'
  +'hen'#13#10'    begin'#13#10'      AddRefFieldDef( classnode.ChildNodes[j]);'
  +#13#10'    end;'#13#10'  end;'#13#10#13#10'  // for every ''contains'' refer'
  +'ence to this class from other classes, create a pointer field (eg owner key'
  +' linkage)'#13#10'  ContainedBy:=DMFindClassOwners(ClassNode.NodeName);'#13
  +#10'  for i:=0 to length(ContainedBy)-1 do'#13#10'  begin'#13#10'    // this'
  +' linkage must reference the primary key of the ''parent'' class'#13#10'    '
  +'keys:=DMGetKeyFields(ContainedBy[i].NodeParent.NodeName);'#13#10'    for j:'
  +'=0 to length(keys)-1 do'#13#10'    begin'#13#10'      AddFieldDef( keys[j])'
  +';'#13#10'    end;'#13#10'  end;'#13#10#13#10'  ds.IndexDefs.Add(classnode.N'
  +'odeName+''Idx'',pk,[ixCaseInsensitive,ixUnique]);   //!!!! ixUnique not wor'
  +'king.'#13#10'  //???? other indexes ??'#13#10'  ds.CreateDataset;'#13#10'  '
  +'result:=ds;'#13#10'end;'#13#10#13#10'procedure RefreshDBGrids;'#13#10'var'
  +#13#10'  allgrids:TNodesArray;'#13#10'  i:integer;'#13#10'begin'#13#10'  XDB'
  +'Table.ProjectBufDatasets:=BufDatasets;'#13#10'  allgrids:=FindNodesOfType(U'
  +'IRootNode,''TXDBTable'');'#13#10'  for i:=0 to length(allgrids)-1 do'#13#10
  +'  begin'#13#10'    TXDBTable(allgrids[i].ScreenObject).DSName := TXDBTable('
  +'allgrids[i].ScreenObject).DSName;'#13#10'  end;'#13#10'end;'#13#10#13#10'{$'
  +'endif}'#13#10#13#10'{$ifdef JScript}'#13#10'procedure DSAddAllRows(DSName:S'
  +'tring;allrows,newstore:TObject);'#13#10'begin'#13#10'  asm'#13#10'    // co'
  +'py data from oldstore to newstore, field-by-field, to ensure correspondence'
  +' with the'#13#10'    // latest data model.'#13#10'    var classFieldNodes ='
  +' pas.XDataModel.DMGetClassFields(DSName);'#13#10'    allrows.forEach(data ='
  +'> {'#13#10'      var dsobject = {};'#13#10'      classFieldNodes.forEach(fl'
  +'dNode => {'#13#10'        if (data[fldNode.FieldName]) {'#13#10'          d'
  +'sobject[fldNode.FieldName] = data[fldNode.FieldName]; }'#13#10'        else'
  +' {'#13#10'          if (fldNode.FieldType == ''Integer'') {dsobject[fldNode'
  +'.FieldName] = parseInt(fldNode.DfltValue);}'#13#10'          else if (fldNo'
  +'de.FieldType == ''Float'') {dsobject[fldNode.FieldName] = parseFloat(fldNod'
  +'e.DfltValue);}'#13#10'          else {dsobject[fldNode.FieldName] = fldNode'
  +'.DfltValue }'#13#10'          }'#13#10'        });'#13#10'      console.log'
  +'(''Add '',dsobject);'#13#10'      try {'#13#10'        let request = newsto'
  +'re.add(dsobject);        //// fails....transaction no longer active'#13#10
  +'        request.onsuccess = function(event) {'#13#10'          console.log('
  +'''Add row done'');'#13#10'          };'#13#10'        request.onerror = fun'
  +'ction(event) {'#13#10'          console.log(''Add row failed. '',event.targ'
  +'et.error);'#13#10'          };'#13#10'      } catch(err) {console.log(err.m'
  +'essage); }'#13#10'    });'#13#10'  end;'#13#10'end;'#13#10'procedure DSCopy'
  +'Data(DSName:String;oldstore,newstore:TObject);'#13#10'begin'#13#10'  asm'#13
  +#10'    console.log(''DSCopyData ''+DSName);'#13#10'    //console.log(oldsto'
  +'re);'#13#10'    //console.log(newstore);'#13#10'    try {'#13#10'      var '
  +'allRecords = oldstore.getAll();'#13#10'    } catch(err) {console.log(err.me'
  +'ssage); }'#13#10#13#10'    allRecords.onerror = function() {'#13#10'      c'
  +'onsole.log(''DSCopyData getAll failed. '',event.target.error);'#13#10'    }'
  +#13#10'    allRecords.onsuccess = function() {'#13#10'      console.log(''DS'
  +'CopyData allRecords success. '',event.target.result);'#13#10#13#10'      pa'
  +'s.XDataModel.DSAddAllRows(DSName,event.target.result,newstore);'#13#10' // '
  +'    event.target.result.forEach(data => {'#13#10' //       var dsobject = {'
  +'};'#13#10' //       classFieldNodes.forEach(fldNode => {'#13#10' //        '
  +' if (data[fldNode.FieldName]) {'#13#10' //           dsobject[fldNode.Field'
  +'Name] = data[fldNode.FieldName]; }'#13#10' //         else {'#13#10' //    '
  +'       if (fldNode.FieldType == ''Integer'') {dsobject[fldNode.FieldName] ='
  +' parseInt(fldNode.DfltValue);}'#13#10' //           else if (fldNode.FieldT'
  +'ype == ''Float'') {dsobject[fldNode.FieldName] = parseFloat(fldNode.DfltVal'
  +'ue);}'#13#10' //           else {dsobject[fldNode.FieldName] = fldNode.Dflt'
  +'Value }'#13#10' //           }'#13#10' //         });'#13#10' //       cons'
  +'ole.log(''Add '',dsobject);'#13#10' //       try {'#13#10' //         let r'
  +'equest = newstore.add(dsobject);        //// fails....transaction no longer'
  +' active'#13#10' //       } catch(err) {console.log(err.message); }'#13#10' '
  +'//       request.onsuccess = function(event) {'#13#10' //         console.l'
  +'og(''Add row done'');'#13#10' //         };'#13#10' //       request.onerro'
  +'r = function(event) {'#13#10' //         console.log(''Add row failed. '',e'
  +'vent.target.error);'#13#10' //         };'#13#10' //     });'#13#10'    }'
  ,#13#10'  end;'#13#10'end;'#13#10'procedure DSCopyDataFromOldDB(DSName:String'
  +';oldstore:TObject);'#13#10'begin'#13#10'  asm'#13#10'    console.log(''DSCo'
  +'pyDataFromOldDB ''+DSName);'#13#10'    try {'#13#10'      var allRecords = '
  +'oldstore.getAll();'#13#10'    } catch(err) {console.log(err.message); }'#13
  +#10#13#10'    allRecords.onerror = function() {'#13#10'      console.log(''D'
  +'SCopyDataFromOldDB getAll failed. '',event.target.error);'#13#10'    }'#13
  +#10'    allRecords.onsuccess = function() {'#13#10'      console.log(''DSCop'
  +'yDataFromOldDB allRecords success. '',event.target.result);'#13#10#13#10#13
  +#10'      var txNew = db.transaction([DSName], "readwrite");'#13#10'      tx'
  +'New.onerror = function(event) {'#13#10'        console.log(''DSCopyDataFrom'
  +'OldDB txNew failed: '', txNew.error );'#13#10'      };'#13#10'      var new'
  +'store = txNew.objectStore(DSName);'#13#10'      console.log(''newstore '',n'
  +'ewstore);'#13#10#13#10'      pas.XDataModel.DSAddAllRows(DSName,event.targe'
  +'t.result,newstore);'#13#10'    }'#13#10'  end;'#13#10'end;'#13#10#13#10'pro'
  +'cedure IndexedDBOpenWithVersion(DBName:String;vnum:integer;dsnames:TStringA'
  +'rray;callbackFunc:TObject);'#13#10'begin'#13#10'  asm'#13#10'    function D'
  +'SSaveOldData(dsnames,tx) {'#13#10'      try {'#13#10'      console.log(''DS'
  +'SaveOldData '',dsnames);'#13#10'      console.log(''Saving existing Indexed'
  +'DB data '');'#13#10#13#10'      for (var i=0; i<rtl.length(dsnames); i++) {'
  +#13#10'        try {'#13#10'          var objectStore = tx.objectStore(dsnam'
  +'es[i]);'#13#10'          try {'#13#10'            var existingsavedstore = '
  +'tx.objectStore(''DSSave_''+dsnames[i]);'#13#10'            db.deleteObjectS'
  +'tore(''DSSave_''+dsnames[i]);'#13#10'            }'#13#10'          catch(e'
  +') {'#13#10'            // nothing to delete'#13#10'          }'#13#10'     '
  +'     objectStore.name = ''DSSave_''+ objectStore.name;'#13#10'          } c'
  +'atch(err) { console.log(err.message+''  in DSSaveOldData ''); }'#13#10'    '
  +'    }'#13#10#13#10'      } catch(err) { alert(err.message+''  in DSSaveOldD'
  +'ata ''); }'#13#10'    }'#13#10#13#10'    function CreateObjectStores(dsname'
  +'s,request) {'#13#10'    // Create objectStores for the defined classes'#13
  +#10'    var objectStore;'#13#10'    var storename;'#13#10'    console.log('''
  +'CreateObjectStores. num of defined classes = '',rtl.length(dsnames));'#13#10
  +'    for (var i=0; i<rtl.length(dsnames); i++) {'#13#10'      storename = ds'
  +'names[i];'#13#10#13#10'      var classnode = pas.NodeUtils.FindDataNodeById'
  +'(pas.NodeUtils.DMRoot,storename,'''',true);'#13#10'      try {'#13#10'     '
  +'   objectStore = request.transaction.objectStore(storename);'#13#10'       '
  +' console.log(''deleting old objectStore ''+storename);'#13#10'        // si'
  +'nce there was a version change, we have already saved the old data in this '
  +'store to a string.'#13#10'        // The action here therefore is to delete'
  +' this objectstore, then recreate, and populate from the string.'#13#10'    '
  +'    db.deleteObjectStore(storename);'#13#10'      }'#13#10'      catch(e) {'
  +'//nothing to delete'#13#10'      }'#13#10#13#10'      console.log(''creatin'
  +'g new objectStore ''+storename);'#13#10'      // primary key info....'#13#10
  +'      var pk=[];'#13#10'      for (var j=0; j<rtl.length(classnode.ChildNod'
  +'es); j++) {'#13#10'        if (classnode.ChildNodes[j].HasAttribute(''IsId'
  +''')) {'#13#10'          var idattr = classnode.ChildNodes[j].GetAttribute('
  +'''IsId'',true).AttribValue.toUpperCase();'#13#10'          if (idattr == '''
  +'TRUE'') {'#13#10'            pk.push(classnode.ChildNodes[j].NodeName );'#13
  +#10'            }'#13#10'        }'#13#10'      }'#13#10'      console.log('
  +'''  keyPath is ''+pk);'#13#10'      objectStore = db.createObjectStore(stor'
  +'ename,{keyPath:pk});'#13#10#13#10'      // if there is saved data for this '
  +'store, then re-insert it here....'#13#10'      try {'#13#10'        var sav'
  +'edStore = request.transaction.objectStore(''DSSave_''+storename);'#13#10'  '
  +'      // copy back the saved data into the new objectstore'#13#10'        p'
  +'as.XDataModel.DSCopyData(storename,savedStore,objectStore);'#13#10'      } '
  +'catch(err) { console.log(''No saved data for objectstore ''+storename); }'
  +#13#10#13#10'      // ...more indexes????'#13#10'      //objectStore.createI'
  +'ndex("hours", "hours", { unique: false });'#13#10'    }'#13#10#13#10'    db'
  +'.onversionchange = function(event) {'#13#10'      //note.innerHTML += ''<li'
  +'>a database change has occurred; you should refresh this'#13#10'      //   '
  +'                browser window, or close it down and use the other open ver'
  +'sion of'#13#10'      //                   this application, wherever it exi'
  +'sts.</li>'';'#13#10'      alert("a database change has occurred; you should'
  +' refresh this browser window, or close it down and use the other open versi'
  +'on of this application, wherever it exists.");'#13#10'      };'#13#10'    }'
  ,#13#10#13#10'    console.log(''openWithVersion opening ''+DBName);'#13#10'  '
  +'  var request = window.indexedDB.open(DBName, vnum);  //version number cann'
  +'ot be zero, and has to go UP.'#13#10'    request.onerror = function(event) '
  +'{'#13#10'        console.log("Database "+DBName+" Open request failed"+" "+'
  +'event.target.error);'#13#10'        alert("Warning: Local Database "+DBName'
  +'+" Open request failed"+" "+event.target.error);'#13#10'        callbackFun'
  +'c(false);     // continue to run mode.'#13#10'        };'#13#10'    request'
  +'.onsuccess = function(event) {'#13#10'        // db has opened at the reque'
  +'sted version number.'#13#10'        console.log("Local IndexedDB Database "'
  +'+DBName+" Open OK");'#13#10'        db = event.target.result;'#13#10'      '
  +'  callbackFunc(true);'#13#10'        };'#13#10'    request.onblocked = func'
  +'tion(event) {'#13#10'        console.log(''db open request blocked...'');'
  +#13#10'        //event.target.result.close();'#13#10'        }'#13#10'    re'
  +'quest.onupgradeneeded = function(event) {'#13#10'        // this event happ'
  +'ens when the version number passed in is higher than the version number'#13
  +#10'        // found on the existing database, OR if there is no database ye'
  +'t.'#13#10'        db = event.target.result;'#13#10'        console.log("onu'
  +'pgradeneeded event.  db version is "+db.version);'#13#10'        console.lo'
  +'g("DB Old Version: " + event.oldVersion);'#13#10'        console.log("DB Ne'
  +'w Version: " + event.newVersion);'#13#10#13#10'        DSSaveOldData(dsname'
  +'s,event.target.transaction);'#13#10'        CreateObjectStores(dsnames,even'
  +'t.target);'#13#10'        }'#13#10'  end;'#13#10'end;'#13#10#13#10'{$endif}'
  +#13#10#13#10'function BuildLocalDB(iterationNum:integer; callbackFunc:TObjec'
  +'t=nil):Boolean;'#13#10'// Called as part of the ''ToggleToRunMode'' process'
  +'es.'#13#10'// Classes have been specified by the user in the data model, an'
  +'d incorporated into the user''s compiled event code'#13#10'// as class type'
  +' definitions.'#13#10'// This procedure generates a local database store, co'
  +'ntaining a dataset for each class.'#13#10'//              (Browser - Indexe'
  +'dDB objectStore;  desktop - TBufDataset)'#13#10'//'#13#10'// tbd.......'#13
  +#10'//   make the data persist between design/run modes if there are no chan'
  +'ges to the data model.'#13#10'//   If the data model has been changed, what'
  +' do we do????????????'#13#10'//              - delete the whole database, a'
  +'nd rebuild?'#13#10'//              - find the changes, and ....what???'#13
  +#10'//                    - new attributes'#13#10'//                    - de'
  +'leted attributes'#13#10'//                    - changed attributes (type ch'
  +'ange, index status)'#13#10'//                    - new tables'#13#10'//    '
  +'                - deleted tables'#13#10'//                    - changes to '
  +'indexes'#13#10'//                    - changes to subclass relationships'#13
  +#10'//'#13#10'//'#13#10'var'#13#10'  ok:Boolean;'#13#10'  classes:TStringLis'
  +'t;'#13#10'  i,j:integer;'#13#10'  DBName:String;'#13#10'  classnode:TDataNo'
  +'de;'#13#10'  {$ifndef JScript}'#13#10'  recbuf:TRecordBuffer;'#13#10'  ft:T'
  +'FieldType;'#13#10'  pk:string;'#13#10'  oldDS:TBufDataset;'#13#10'  oldidx:'
  +'integer;'#13#10'  //LocalDBPath:String;'#13#10'  {$else}'#13#10'  lDSNames:'
  +'TStringArray;'#13#10'  {$endif}'#13#10'begin'#13#10'  ok:=true;'#13#10'  db'
  +'name:=UIRootNode.GetAttribute(''SystemName'',false).AttribValue;'#13#10#13
  +#10'  {$ifndef JScript}'#13#10'  LocalDBPath:=''SavedSystems/''+dbname;'#13
  +#10'  if not DirectoryExists(LocalDBPath) then'#13#10'    CreateDir(LocalDBP'
  +'ath);'#13#10'  {$endif}'#13#10#13#10'  classes:=AllDataClassNames(''DMRoot'
  +''');'#13#10#13#10'  setlength(dsnames,classes.count);'#13#10'  for i:=0 to '
  +'classes.Count-1 do'#13#10'    dsnames[i]:=classes[i];'#13#10'  if classes.c'
  +'ount=0 then'#13#10'  begin'#13#10'    result:=true;'#13#10'    {$ifdef JScr'
  +'ipt}'#13#10'    asm callbackFunc(ok); end;    // eg. continue to run mode'
  +#13#10'    {$endif}'#13#10'    EXIT;'#13#10'  end;'#13#10#13#10'  if DMChang'
  +'ed then    // user has made changes to the data model'#13#10'  begin'#13#10
  +'    iterationNum:=iterationNum+1;'#13#10'    UIRootNode.SetAttributeValue('
  +'''DBVersion'',IntToStr(iterationNum));'#13#10'  end;'#13#10#13#10'  {$ifnde'
  +'f JScript}'#13#10'  // build one dataset (type TBufDataset) for each class.'
  +#13#10'  // Create one field def (myobject) for the defined object type.'#13
  +#10'  // Handle changes to class definitions since the last build.'#13#10'  '
  +'for i:=0 to classes.count-1 do'#13#10'  begin'#13#10'    oldDS := GetDatase'
  +'t(classes[i],oldidx,false);'#13#10'    if (oldDS = nil) then'#13#10'    beg'
  +'in'#13#10'      // there may be saved data to load...'#13#10'      if (file'
  +'exists(LocalDBPath +''/''+classes[i])) then'#13#10'      begin'#13#10'     '
  +'   oldds := TBufDataset.Create(nil);'#13#10'        //oldds.LoadFromFile('''
  ,'Datasets/''+classes[i]);'#13#10'        oldds.LoadFromFile(LocalDBPath +''/'
  +'''+classes[i]);'#13#10'      end;'#13#10'      setlength(BufDatasets,length'
  +'(BufDatasets)+1);'#13#10'      BufDatasets[length(BufDatasets)-1] := Create'
  +'NewDS(classes[i]);'#13#10'      if oldds<>nil then'#13#10'        DSLoadFro'
  +'mSaved( classes[i],oldDS,BufDatasets[length(BufDatasets)-1]);'#13#10'    en'
  +'d'#13#10'    else'#13#10'    begin'#13#10'      oldDS.DisableControls;'#13
  +#10'      if (DMChanged=true) or (DSBuilt=false) then'#13#10'      begin'#13
  +#10'        // Dataset already exists, so check for DM changes.'#13#10'     '
  +'   // if the class definition has changed, then build a new empty dataset, '
  +'and try to load the old data.'#13#10#13#10'        // save the existing dat'
  +'a to a copy dataset'#13#10'        DSDataToFile(classes[i],''DSSave_'');'#13
  +#10#13#10'        // delete the old ds, and create the new one'#13#10'      '
  +'  BufDatasets[oldidx] := CreateNewDS(classes[i]);'#13#10#13#10'        DSLo'
  +'adFromSaved( classes[i],oldDS,BufDatasets[oldidx]);'#13#10'        oldDs.Fr'
  +'ee;'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'  // now check f'
  +'or existing datasets that are no longer in the DM, and delete them.'#13#10
  +'  if (DMChanged=true) or (DSBuilt=false) then'#13#10'  begin'#13#10'    for'
  +' i:=0 to length(BufDatasets)-1 do'#13#10'    begin'#13#10'      if classes.'
  +'IndexOf(BufDatasets[i].Name)<0 then'#13#10'      begin'#13#10'        showm'
  +'essage(''deleting dataset ''+BufDatasets[i].Name);'#13#10'        DeleteDat'
  +'aset(BufDatasets[i].Name);'#13#10'      end;'#13#10'    end;'#13#10'  end;'
  +#13#10#13#10'  //DoFilter(''myclass1'',[''c1att1''],[''rec 1''],[''rec 2''])'
  +';'#13#10'  RefreshDBGrids;'#13#10#13#10'  {$else}'#13#10'  lDSNames:=dsname'
  +'s;'#13#10'  // build one Object Store for each class.'#13#10'  // Handle ch'
  +'anges to class definitions since the last build.......'#13#10'  // Data is '
  +'saved as an IndexedDB.  This persists in the browser between sessions.'#13
  +#10'  asm'#13#10'    console.log(''DB iterationNum is ''+iterationNum);'#13
  +#10'    var useIterationNum=iterationNum;'#13#10'    var glbSavedData=[];'#13
  +#10#13#10'    if (!window.indexedDB) {'#13#10'      ok = false;'#13#10'     '
  +' console.log("Your browser doesn''t support IndexedDB. Data Model IndexedDB'
  +' instantiation will not be available.");'#13#10'      callbackFunc(ok);    '
  +' // eg. continue to run mode'#13#10'    }'#13#10#13#10'    if (ok) {'#13#10
  +'      // Let us open our database'#13#10'      console.log(''BuildLocalDB o'
  +'pening ''+DBName);'#13#10'      var request0 = window.indexedDB.open(DBName'
  +');  //no version number .... to discover current version'#13#10#13#10'     '
  +' request0.onerror = function(event) {'#13#10'        console.log("Database '
  +'"+DBName+" Open 0 request failed");'#13#10'        ok = false;'#13#10'     '
  +'   alert(''Failed to open the local database ''+DBName+'' ''+request0.error'
  +');'#13#10'        callbackFunc(ok);     // continue to run mode????'#13#10
  +'        };'#13#10#13#10'      request0.onsuccess = function(event) {'#13#10
  +'        db = event.target.result;'#13#10'        console.log("IndexedDB Dat'
  +'abase "+DBName+" Open OK.  Existing version is "+db.version);'#13#10'      '
  +'  if (db.version > iterationNum) {'#13#10'          useIterationNum = db.ve'
  +'rsion+1;'#13#10'          console.log(''resetting iteration number to ''+us'
  +'eIterationNum);'#13#10'          pas.NodeUtils.UIRootNode.SetAttributeValue'
  +'(''DBVersion'',useIterationNum.toString(),''Integer'',false);'#13#10'      '
  +'    }'#13#10'        db.close();'#13#10'        pas.XDataModel.IndexedDBOpe'
  +'nWithVersion(DBName,useIterationNum,lDSNames,callbackFunc);'#13#10'        '
  +'}'#13#10'      }'#13#10#13#10'    else {callbackFunc(ok);}     // eg. conti'
  +'nue to run mode'#13#10#13#10'  end;'#13#10'  {$endif}'#13#10#13#10'  DSBuil'
  +'t:=true;'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'procedure CloseLocal'
  +'DB;'#13#10'var'#13#10'  dbname:String;'#13#10'  i:integer;'#13#10'begin'#13
  +#10'  dbname:=UIRootNode.GetAttribute(''SystemName'',false).AttribValue;'#13
  +#10'  {$ifndef JSCript}'#13#10'  {$else}'#13#10'  asm'#13#10'    if (db) {'
  +#13#10'      console.log(''CloseLocalDB closing db'');'#13#10'      db.close'
  +'();'#13#10'      }'#13#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'procedure SaveLocalDB;'#13#10'var'#13#10'  dbname:String;'#13#10'  i:intege'
  +'r;'#13#10'begin'#13#10'  dbname:=UIRootNode.GetAttribute(''SystemName'',fal'
  +'se).AttribValue;'#13#10'  {$ifndef JSCript}'#13#10'  for i:=0 to length(Buf'
  +'Datasets)-1 do'#13#10'    DSDataToFile(BufDatasets[i].Name,'''');'#13#10'  '
  +'{$else}'#13#10'  {$endif}'#13#10'end;'#13#10#13#10#13#10'{$ifndef JSCript}'
  +#13#10'procedure DSDataToFile(DSName,prefix:String);'#13#10'var'#13#10'  ds:'
  +'TBufDataset;'#13#10'  i:integer;'#13#10'begin'#13#10'  ds:=GetDataset(DSNam'
  +'e,i,true);'#13#10'  if (ds <> nil) then'#13#10'  begin'#13#10'    ds.Name:='
  ,'prefix+DSName;'#13#10'    //ds.SaveToFile(ProjectDirectory + ''/Datasets/'''
  +'+prefix+DSName);'#13#10'    ds.SaveToFile(ProjectDirectory + LocalDBPath +'
  +'''/''+prefix+DSName);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure DSLo'
  +'adFromSaved(DSName:String;oldds,newds:TBufDataset);'#13#10'var'#13#10'  old'
  +'field:TField;'#13#10'  i:integer;'#13#10'  fn:string;'#13#10'begin'#13#10' '
  +' if (oldds <> nil) then'#13#10'  begin'#13#10'    if (newds <> nil) then'#13
  +#10'    begin'#13#10'      // have to traverse every row....'#13#10'      ol'
  +'dds.First;'#13#10'      while not oldds.EOF do'#13#10'      begin'#13#10'  '
  +'      newds.AppendRecord([]);       // empty record appended to dataset'#13
  +#10'        newds.Edit;'#13#10'        for i:=0 to newds.FieldCount-1 do'#13
  +#10'        begin'#13#10'          fn:=newds.FieldDefs[i].Name;'#13#10'     '
  +'     try'#13#10'          oldfield:=oldds.FieldByName(fn);'#13#10'         '
  +' if oldfield<>nil then'#13#10'            newds.Fields[i].Value:=oldfield.V'
  +'alue;'#13#10'          except'#13#10'          end;'#13#10'        end;'#13
  +#10'        oldds.Next;'#13#10'      end;'#13#10#13#10'    end;'#13#10'  end'
  +';'#13#10'end;'#13#10'{$else}'#13#10'{$endif}'#13#10#13#10'{$ifndef JScript}'
  +#13#10'procedure EmptyBufDataSet(BufDb:TBufDataSet);'#13#10'var'#13#10'  Old'
  +'FieldDefs : TFieldDefs;'#13#10'begin'#13#10'  OldFieldDefs := TFielddefs.Cr'
  +'eate(nil);'#13#10'  OldFieldDefs.Assign(BufDb.FieldDefs);'#13#10'  BufDB.Di'
  +'sableControls;'#13#10'  BufDb.Close;'#13#10'  BufDb.Clear;'#13#10'  BufDb.F'
  +'ieldDefs.Assign(OldFieldDefs);'#13#10'  BufDb.CreateDataset;'#13#10'  BufDb'
  +'.Open;'#13#10'  OldFieldDefs.Free;'#13#10'end;'#13#10'{$else}'#13#10#13#10
  +'{$endif}'#13#10'function DSEmptyDataset(ReturnEvent:TeventStatus;DSName,Asy'
  +'ncProcName:String):Boolean;'#13#10'var'#13#10'  ok:Boolean;'#13#10'  i:inte'
  +'ger;'#13#10'  {$ifndef JScript}'#13#10'  ds:TBufDataset;'#13#10'  {$endif}'
  +#13#10'begin'#13#10'  ok:=true;'#13#10'  {$ifndef JScript}'#13#10'  ds:=GetD'
  +'ataset(DSName,i);'#13#10'  if ds<>nil then'#13#10'    EmptyBufDataSet(ds)'
  +#13#10'  else'#13#10'    ok:=false;'#13#10'  DSReturnToEvent(ReturnEvent,Asy'
  +'ncProcName);'#13#10'  {$else}'#13#10'  asm'#13#10'    // open a read/write '
  +'db transaction, ready for clearing the data'#13#10'    var transaction = db'
  +'.transaction([DSName], "readwrite");'#13#10#13#10'    // report on the succ'
  +'ess of the transaction completing, when everything is done'#13#10'    trans'
  +'action.oncomplete = function(event) {'#13#10'      pas.InterfaceTypes.DSRet'
  +'urnToEvent(ReturnEvent,AsyncProcName);'#13#10'    };'#13#10#13#10'    trans'
  +'action.onerror = function(event) {'#13#10'      console.log(''DSEmptyDatase'
  +'t failed: '', transaction.error );'#13#10'    };'#13#10#13#10'    var objec'
  +'tStore = transaction.objectStore(DSName);'#13#10#13#10'    // Make a reques'
  +'t to clear all the data out of the object store'#13#10'    var objectStoreR'
  +'equest = objectStore.clear();'#13#10#13#10'    objectStoreRequest.onsuccess'
  +' = function(event) {'#13#10'      // report the success of our request'#13
  +#10'      console.log(''DSEmptyDataset Request successful.'');'#13#10'    };'
  +#13#10'  end;'#13#10'  {$endif}'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10
  +'procedure DeleteLocalDB(DBName:String;ask:Boolean;CallbackFunc:TObject=nil)'
  +';'#13#10'{$ifndef JSCript}'#13#10'var'#13#10'  i:integer;'#13#10'  ok:Boole'
  +'an;'#13#10'{$endif}'#13#10'begin'#13#10'  {$ifndef JSCript}'#13#10'  for i:'
  +'=0 to length(BufDatasets)-1 do'#13#10'  begin'#13#10'    BufDatasets[i].Des'
  +'troy;'#13#10'  end;'#13#10'  setlength(BufDatasets,0);'#13#10'  // delete t'
  +'he local file folder as well'#13#10'  ok:=true;'#13#10'  if DirectoryExists'
  +'(''SavedSystems/''+DBName) then'#13#10'  begin'#13#10'    if ask then'#13#10
  +'      ok := XIDEConfirm(''OK to delete stored datasets for system ''+DBName'
  +'+''?'');'#13#10'    if ok then'#13#10'    begin'#13#10'      ok:=DeleteDire'
  +'ctory(''SavedSystems/''+DBName,True);'#13#10'      if ok then'#13#10'      '
  +'begin'#13#10'        ok:=RemoveDirUTF8(''SavedSystems/''+DBName);'#13#10'  '
  +'    end;'#13#10'    end;'#13#10'  end;'#13#10'  {$else}'#13#10'  asm'#13#10
  +'    console.log(''DeleteLocalDB opening ''+DBName);'#13#10'    var ok=true;'
  +#13#10#13#10'    var request0 = window.indexedDB.open(DBName);  //no version'
  +' number .... to discover if DB exists'#13#10#13#10'    request0.onerror = f'
  +'unction(event) {'#13#10'      console.log("Database "+DBName+" DeleteLocalD'
  +'B Open request failed "+request0.error);'#13#10'      ok = false;'#13#10'  '
  +'    alert(''Failed to open the local database ''+DBName+'' ''+request0.erro'
  +'r);'#13#10'      // continue to callback function'#13#10'      CallbackFunc'
  +'(false);'#13#10'      };'#13#10#13#10'    request0.onsuccess = function(eve'
  +'nt) {'#13#10'      db = event.target.result;'#13#10'      console.log("Inde'
  +'xedDB Database "+DBName+" Open OK.  Existing version is "+db.version);'#13
  ,#10'      db.close();'#13#10'      if (ask) {'#13#10'        ok = (window.co'
  +'nfirm("OK to delete local IndexedDB database "+DBName+"?"))};'#13#10'      '
  +'if (ok) {'#13#10#13#10'        var DBDeleteRequest = window.indexedDB.delet'
  +'eDatabase(DBName);'#13#10#13#10'        DBDeleteRequest.onerror = function('
  +'event) {'#13#10'          console.log("Error deleting database.");'#13#10' '
  +'       };'#13#10#13#10'        DBDeleteRequest.onsuccess = function(event) '
  +'{'#13#10'          console.log("Database "+DBName+" deleted successfully");'
  +#13#10'          db = null;'#13#10'          //console.log(event.result); //'
  +' should be undefined'#13#10'          CallbackFunc(true);'#13#10'        };'
  +#13#10'      }'#13#10'      else {CallbackFunc(true); }'#13#10'   //   }'#13
  +#10'    db.onversionchange = function () { console.log(''DBDeleteIfExists on'
  +'versionchange closing ''+DBName); db.close(); };'#13#10'    }'#13#10#13#10
  +'  end;'#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure DBSaveAs('
  +'oldname,newname:String);'#13#10'var'#13#10'  ok:Boolean;'#13#10'  {$ifndef '
  +'JSCript}'#13#10'  s:TSearchRec;'#13#10'  {$else}'#13#10'  lDSNames:TStringA'
  +'rray;'#13#10'  {$endif}'#13#10'begin'#13#10'  {$ifndef JSCript}'#13#10'  ok'
  +':=true;'#13#10'  if DirectoryExists(''SavedSystems/''+oldname) then'#13#10
  +'  begin'#13#10'    if not DirectoryExists(''SavedSystems/''+newname) then'
  +#13#10'      CreateDir(''SavedSystems/''+newname);'#13#10'    if FindFirst('
  +'''SavedSystems/''+oldname+''/*'',faAnyFile,s)=0 then'#13#10'    begin'#13#10
  +'      repeat'#13#10'        if (s.Name <> ''.'') and (s.Name <> ''..'') the'
  +'n'#13#10'          CopyFile(''SavedSystems/''+oldname+''/''+s.Name,''SavedS'
  +'ystems/''+newname+''/''+s.Name);'#13#10'      until FindNext(s)<>0;'#13#10
  +'      FindClose(s);'#13#10'    end;'#13#10'  end;'#13#10'  {$else}'#13#10' '
  +' lDSNames:=dsnames;'#13#10'  asm'#13#10'    var olddb;'#13#10#13#10'    fun'
  +'ction NewDBCreated(ok) {'#13#10'      if ((ok)&&(olddb)) {'#13#10'        c'
  +'onsole.log(''NewDBCreated '',newname);'#13#10'        // open a transaction'
  +' on olddb'#13#10'        var txOld = olddb.transaction(lDSNames, "readonly"'
  +');'#13#10'        txOld.onerror = function(event) {'#13#10'          consol'
  +'e.log(''txOld failed: '', txOld.error );'#13#10'        };'#13#10'        /'
  +'/ copy every (existing) old objectstore to the new db   //'#13#10'        f'
  +'or (var i=0; i<rtl.length(lDSNames); i++) {'#13#10'          try {'#13#10' '
  +'           var oldobjectStore = txOld.objectStore(lDSNames[i]);'#13#10'    '
  +'        if (oldobjectStore) {'#13#10'              try {'#13#10'           '
  +'     pas.XDataModel.DSCopyDataFromOldDB(lDSNames[i],oldobjectStore);'#13#10
  +'                }'#13#10'              catch(e) {'#13#10'                //'
  +' nothing to copy'#13#10'              }'#13#10'            }'#13#10'       '
  +'   }'#13#10'          catch(e) {console.log(e.message); }'#13#10'        }'
  +#13#10'      }'#13#10'    }'#13#10'    function DBSaveAs_DeleteDone(ok) {'#13
  +#10'        //if oldname db exists, copy all to new.'#13#10'        console.'
  +'log(''DBSaveAs opening ''+oldname);'#13#10#13#10'        var olddbrequest ='
  +' window.indexedDB.open(oldname);  //no version number .... to discover curr'
  +'ent version'#13#10#13#10'        olddbrequest.onerror = function(event) {'
  +#13#10'          console.log("Database "+oldname+" Open request failed");'#13
  +#10'          };'#13#10#13#10'        olddbrequest.onsuccess = function(even'
  +'t) {'#13#10'          olddb = event.target.result;'#13#10'          // crea'
  +'te newdb, keeping the old version number'#13#10'          pas.XDataModel.Bu'
  +'ildLocalDB(olddb.version,NewDBCreated);'#13#10'          }'#13#10'    }'#13
  +#10'    //delete newname db if already exists'#13#10'    pas.XDataModel.Dele'
  +'teLocalDB(newname,false,DBSaveAs_DeleteDone);'#13#10'  end;'#13#10'  {$endi'
  +'f}'#13#10'end;'#13#10#13#10'{$ifdef Python}'#13#10'procedure BuildXArrays(D'
  +'efaultDims:Boolean);'#13#10'var'#13#10'  i,j,k:integer;'#13#10'  classNode,'
  +'refnode:TDataNode;'#13#10'  className,IdName,ArrayName,smult,dflt:String;'
  +#13#10'  ownerlist:TNodesArray;'#13#10'  keynames,keynames2,mults,glbDims,gl'
  +'bDimVals:TStringArray;'#13#10'  bits:TStringList;'#13#10'  ok:Boolean;'#13
  +#10'begin'#13#10'  // first look for a list of dimensions'#13#10'  setlength'
  +'(glbDims,0);'#13#10'  setlength(glbDimVals,0);'#13#10'  {$ifdef JScript}asm'
  +' console.log(''1''); end; {$endif}'#13#10'  j:=0;'#13#10'  for i:=0 to leng'
  +'th(DMRoot.ChildNodes)-1 do'#13#10'  begin'#13#10'    if (DMRoot.ChildNodes['
  +'i].NodeType = ''DMClass'')'#13#10'    and (DMRoot.ChildNodes[i].NodeName = '
  +'''Dimensions'') then'#13#10'    begin'#13#10'      classnode:=DMRoot.ChildN'
  +'odes[i];'#13#10'      for j:=0 to length(classNode.ChildNodes)-1 do'#13#10
  +'      begin'#13#10'        if  classNode.ChildNodes[j].NodeType = ''DMAttri'
  +'b'' then'#13#10'        begin'#13#10'          setlength(glbDims,length(glb'
  ,'Dims)+1);'#13#10'          setlength(glbDimVals,length(glbDimVals)+1);'#13
  +#10'          glbDims[j]:=classNode.ChildNodes[j].NodeName;'#13#10'         '
  +' glbDimVals[j]:=classNode.ChildNodes[j].GetAttribute(''DefaultValue'',false'
  +').AttribValue;'#13#10'          PyExeString(''print(''''dimension ''+glbDim'
  +'s[j]+'' default=''+glbDimVals[j]+'''''')'');'#13#10#13#10'          ok:=Try'
  +'StrToInt(glbDimVals[j],k);'#13#10'          if not ok then'#13#10'         '
  +' begin'#13#10'            PyExeString(''print(''''''+glbDims[j]+''=1'''')'''
  +');'#13#10'            glbDimVals[j]:=''1'';'#13#10'          end;'#13#10#13
  +#10'          if DefaultDims = false then'#13#10'            PyExeString(''i'
  +'f ''''''+glbDims[j]+'''''' not in globals():'' + glbDims[j]+''=''+glbDimVal'
  +'s[j] + LineEnding +'#13#10'                        ''else: print(''''''+glb'
  +'Dims[j]+'' current='''',''+glbDims[j]+'')'')'#13#10'          else'#13#10' '
  +'           PyExeString(glbDims[j]+''=''+glbDimVals[j]);'#13#10'          Py'
  +'ExeString(''print(''''''+glbDims[j]+'''''',''+glbDims[j]+'')'');'#13#10'   '
  +'     end;'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'{$ifdef JS'
  +'cript}asm console.log(''2''); end; {$endif}'#13#10#13#10'  ////!!!!!! no go'
  +'od if classes have composite primary keys !!!!'#13#10'  for i:=0 to length('
  +'DMRoot.ChildNodes)-1 do'#13#10'  begin'#13#10'    if DMRoot.ChildNodes[i].N'
  +'odeType = ''DMClass'' then'#13#10'      if myStrToBool(DMRoot.ChildNodes[i]'
  +'.GetAttribute(''MakeXArrays'',true).AttribValue) = true then'#13#10'      b'
  +'egin'#13#10'        classNode := DMRoot.ChildNodes[i];'#13#10'        class'
  +'Name := classNode.NodeName;'#13#10'        IdName:=className+''_Id'';     /'
  +'/ sensible default??'#13#10'        for j:=0 to length(classNode.ChildNodes'
  +')-1 do'#13#10'        begin'#13#10'          if  classNode.ChildNodes[j].No'
  +'deType = ''DMAttrib'' then'#13#10'            // !!!! expecting only one pr'
  +'imary key attribute here'#13#10'            if myStrToBool(classNode.ChildN'
  +'odes[j].GetAttribute(''IsId'',false).AttribValue) = true then'#13#10'      '
  +'      begin'#13#10'              IdName:=classNode.ChildNodes[j].NodeName;'
  +#13#10'            end;'#13#10'        end;'#13#10#13#10'        setlength(o'
  +'wnerlist,0);'#13#10'        setlength(keynames,0);'#13#10'        DMFindCla'
  +'ssOwnerHierarchy(className,ownerlist,keynames);   // hierarchy of ''DMConta'
  +'ins'' parent nodes'#13#10'        setlength(mults,length(ownerlist));'#13#10
  +'        for j:=0 to length(ownerlist)-1 do'#13#10'        begin'#13#10'    '
  +'      smult:=trim(ownerlist[length(ownerlist)-j-1].GetAttribute(''Multiplic'
  +'ity'',true).AttribValue);'#13#10'          // for xarrays, should be the na'
  +'me of a declared dimension'#13#10'          if smult<>'''' then'#13#10'    '
  +'        mults[j]:=smult'#13#10'          else'#13#10'            mults[j]:='
  +'''1'';'#13#10'        end;'#13#10'        // keynames - reverse order'#13#10
  +'        setlength(keynames2,length(keynames));'#13#10'        for j:=0 to l'
  +'ength(keynames)-1 do       /// a,b,c,d => d,c,b,a'#13#10'          keynames'
  +'2[j]:=keynames[length(keynames)-j-1];'#13#10'        // if >1 level, drop t'
  +'he first one'#13#10'        if length(keynames2)>1 then'#13#10'          fo'
  +'r j:=0 to length(keynames2)-2 do     // => c,b,a,a'#13#10'            keyna'
  +'mes2[j]:=keynames2[j+1];'#13#10'        // add one for the current class'#13
  +#10'        if length(keynames2)>0 then'#13#10'          keynames2[length(ke'
  +'ynames2)-1]:=IdName;   // => c,b,a,me'#13#10#13#10'        if length(mults)'
  +'>0 then'#13#10'        begin'#13#10'        // make an XArray for each DMAt'
  +'trib element in this class'#13#10'        // keynames and mults must be sam'
  +'e length'#13#10'        if length(keynames2)<>length(mults) then'#13#10'   '
  +'       showMessage(''Warning: Cannot reconcile dimensions for class ''+clas'
  +'sName+'' - XArrays not created'')'#13#10'        else'#13#10'          for '
  +'j:=0 to length(classNode.ChildNodes)-1 do'#13#10'          begin'#13#10'   '
  +'         if  classNode.ChildNodes[j].NodeType = ''DMAttrib'' then'#13#10'  '
  +'            //if myStrToBool(classNode.ChildNodes[j].GetAttribute(''IsId'','
  +'false).AttribValue) = false then     //why??'#13#10'              begin'#13
  +#10'                ArrayName := className + ''_'' + classNode.ChildNodes[j]'
  +'.NodeName;'#13#10'                dflt:=classNode.ChildNodes[j].GetAttribut'
  +'e(''DefaultValue'',false).AttribValue;'#13#10'                //PyXUtils.Bu'
  +'ildXarray(ArrayName,keynames2,mults,dflt);'#13#10'                PyXUtils.'
  +'BuildXarray(ArrayName,mults,mults,dflt);'#13#10'              end;'#13#10' '
  +'         end;'#13#10'        end;'#13#10'      end;'#13#10'  end;'#13#10'{$'
  +'ifdef JScript}asm console.log(''3''); end; {$endif}'#13#10'end;'#13#10'{$en'
  +'dif}'#13#10#13#10#13#10#13#10#13#10'begin'#13#10'  DMSelectedDataTreeNode:='
  +'nil;'#13#10'  DMChanged:=false;'#13#10'  DSBuilt:=false;'#13#10'  {$ifndef '
  ,'JSCript}'#13#10'  setlength(BufDatasets,0);'#13#10'  XDBTable.ProjectBufDat'
  +'asets:=BufDatasets;'#13#10'  DMProcs:=TDMProcs.Create;'#13#10'  {$endif}'#13
  +#10#13#10'  //AddDefaultAttribute(DMPkgDefaultAttribs,''Annotation'',''Strin'
  +'g'','''','''',false,true);'#13#10'  //AddDefaultsToTable(''DMPkg'',DMPkgDef'
  +'aultAttribs);'#13#10#13#10'  // DMClass .....class definitions'#13#10'  Add'
  +'DefaultAttribute(DMClassDefaultAttribs,''Annotation'',''String'','''','''','
  +'false,true);'#13#10'  AddDefaultAttribute(DMClassDefaultAttribs,''MakeDatas'
  +'et'',''Boolean'',''False'',''At run mode, generate a local dataset for this'
  +' class.'',false,true);'#13#10'  AddDefaultAttribute(DMClassDefaultAttribs,'
  +'''MakeXArrays'',''Boolean'',''False'',''(Python only): generate XArrays for'
  +' attributes in this class.'',false,true);'#13#10'  AddDefaultsToTable(''DMC'
  +'lass'',DMClassDefaultAttribs);'#13#10#13#10'  // Classes have child attribu'
  +'tes'#13#10'  // Classes have child classes (equivalent ECore ''containment'
  +''' references)'#13#10'  // Classes have child operations'#13#10'  // Operat'
  +'ions have child parameters'#13#10#13#10'  // DMContains ..... ''contained'''
  +' class reference'#13#10'  AddDefaultAttribute(DMContainsDefaultAttribs,''An'
  +'notation'',''String'','''','''',false,true);'#13#10'  AddDefaultAttribute(D'
  +'MContainsDefaultAttribs,''Class'',''String'','''','''',false,true);'#13#10
  +'  //AddDefaultAttribute(DMContainsDefaultAttribs,''IsContained'',''Boolean'
  +''',''True'',''True if this is a contained reference'',false,true);'#13#10' '
  +' AddDefaultAttribute(DMContainsDefaultAttribs,''Multiplicity'',''String'','
  +'''0'',''default = 0, Integer,  or paramname'',false,true);'#13#10'  AddDefa'
  +'ultsToTable(''DMContains'',DMContainsDefaultAttribs);'#13#10#13#10'  // DMR'
  +'ef ..... un-contained class reference'#13#10'  AddDefaultAttribute(DMRefDef'
  +'aultAttribs,''Annotation'',''String'','''','''',false,true);'#13#10'  AddDe'
  +'faultAttribute(DMRefDefaultAttribs,''Class'',''String'','''','''',false,tru'
  +'e);'#13#10'  AddDefaultsToTable(''DMRef'',DMRefDefaultAttribs);'#13#10#13#10
  +'  // DMAttrib .....'#13#10'  AddDefaultAttribute(DMAttribDefaultAttribs,''A'
  +'nnotation'',''String'','''','''',false,true);'#13#10'  AddDefaultAttribute('
  +'DMAttribDefaultAttribs,''IsId'',''Boolean'',''False'',''Marks this field as'
  +' the identifier for this record type (indexed). A class may have multiple i'
  +'d attributes, making up a composite key.'',false,true);'#13#10'  AddDefault'
  +'Attribute(DMAttribDefaultAttribs,''AttribType'',''String'',''String'','''','
  +'false,true);'#13#10'  AddDefaultAttribute(DMAttribDefaultAttribs,''DefaultV'
  +'alue'',''String'','''','''',false,true);'#13#10'  AddDefaultAttribute(DMAtt'
  +'ribDefaultAttribs,''Multiplicity'',''String'',''1'',''default = 1, Integer,'
  +'  or paramname'',false,true);'#13#10'  AddDefaultAttribute(DMAttribDefaultA'
  +'ttribs,''StringLength'',''Integer'',''20'',''Where type is String AND the c'
  +'lass attribute "MakeDataset" is true, sets the maximum string length in the'
  +' generated dataset.'',false,true);'#13#10'  AddDefaultsToTable(''DMAttrib'''
  +',DMAttribDefaultAttribs);'#13#10'  AddAttribOptions(''DMAttrib'',''AttribTy'
  +'pe'',DMAttribTypes);'#13#10'  // can an attribute contain an operation?????'
  +'???  In ecore, ops are only in the class !!!! could define attrib and op as'
  +' a pair? !!!!'#13#10'  //    eg. Calc<AttribName> (....parameters...)  { ..'
  +'.. code using parameters, returns a value ....}'#13#10#13#10'  // DMOp ....'
  +'.'#13#10'  AddDefaultAttribute(DMOpDefaultAttribs,''ReturnType'',''String'''
  +',''String'','''',false,true);'#13#10'  AddDefaultAttribute(DMOpDefaultAttri'
  +'bs,''Code'',''String'','''','''',false,true);'#13#10'  AddDefaultsToTable('
  +'''DMOp'',DMOpDefaultAttribs);'#13#10'  AddAttribOptions(''DMOp'',''ReturnTy'
  +'pe'',DMAttribTypes); //!!!! return type may be a class'#13#10#13#10'  // DM'
  +'Param .....'#13#10'  AddDefaultAttribute(DMParamDefaultAttribs,''ParamType'
  +''',''String'',''String'','''',false,true);'#13#10'  AddDefaultsToTable(''DM'
  +'Param'',DMParamDefaultAttribs);'#13#10'  AddAttribOptions(''DMParam'',''Par'
  +'amType'',DMAttribTypes); //!!!! param type may be a class'#13#10#13#10#13#10
  +'end.'#13#10#13#10#13#10#13#10#13#10#13#10
]);
