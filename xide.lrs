LazarusResources.Add('webtranspilerutils','PAS',[
  'unit WebTranspilerUtils;'#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'inter'
  +'face'#13#10#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils,XCode'
  +#13#10'  {$ifndef JScript}'#13#10'  ,dialogs'#13#10'  {$else}'#13#10'  ,webf'
  +'ilecache, pas2jswebcompiler'#13#10'  {$endif}'#13#10'  ;'#13#10#13#10'{$ifd'
  +'ef JScript}'#13#10'type'#13#10'TWebCompilerObj = Class(TObject)'#13#10'Priv'
  +'ate'#13#10'  FCompiler : TPas2JSWebCompiler;'#13#10'  FCodeEditor:TXCode;'
  +#13#10'  procedure OnUnitLoaded(Sender: TObject; aFileName: String; aError: '
  +'string);'#13#10'Protected'#13#10'Public'#13#10'  procedure DoLog(Sender: TO'
  +'bject; const Msg: String);'#13#10'  Constructor Create;'#13#10'  property m'
  +'yCodeEditor:TXCode read FCodeEditor write FCodeEditor;'#13#10'  property Co'
  +'mpiler:TPas2JSWebCompiler read FCompiler write FCompiler;'#13#10'end;'#13#10
  +#13#10'procedure LoadRTLFilesForPas2JS(lWebFS : TPas2JSWebFS);    //TWebComp'
  +'ilerObj);'#13#10#13#10'var MyWebCompiler:TWebCompilerObj;'#13#10'{$endif}'
  +#13#10#13#10'procedure WriteIncFile(Compiler:TObject;IncName,EventType,IncPa'
  +'th:String;'#13#10'                       var MainCode:TStringList;IncCode:T'
  +'StringList);'#13#10'function LoadIncludeFile(Compiler:TObject;FileName,IncP'
  +'ath:String):TStringList;'#13#10#13#10'implementation'#13#10#13#10'procedure'
  +' WriteIncFile(Compiler:TObject;IncName,EventType,IncPath:String;'#13#10'   '
  +'                    var MainCode:TStringList;IncCode:TStringList);'#13#10'v'
  +'ar'#13#10'{$ifndef JScript}'#13#10'   TheStream:TFileStream;'#13#10'   {$en'
  +'dif}'#13#10'   FileName:string;'#13#10'begin'#13#10'  if EventType<>'''' th'
  +'en IncName:=IncName+''__''+EventType;'#13#10#13#10'  if length(IncName)<251'
  +' then'#13#10'  begin'#13#10#13#10'    {$ifndef JScript}'#13#10'    FileName'
  +':=IncPath+IncName+''.inc'';'#13#10#13#10'    try'#13#10'      TheStream:=TF'
  +'ileStream.Create(Filename,fmCreate or fmOpenRead or fmOpenWrite or fmShareD'
  +'enyNone);'#13#10'      IncCode.SaveToStream(TheStream);'#13#10'      TheStr'
  +'eam.Free;'#13#10'    except'#13#10'      showmessage(''Failed to create inc'
  +'lude file ''+FileName);'#13#10'    end;'#13#10'    {$else}'#13#10'    FileN'
  +'ame:=IncName+''.inc'';'#13#10'    // save the generated inc file'#13#10'   '
  +' TPas2JSWebCompiler(Compiler).WebFS.SetFileContent(FileName,IncCode.Text);'
  +#13#10'    {$endif}'#13#10#13#10'    MainCode.Add(''{$I ''+IncName+''.inc}'''
  +');'#13#10#13#10'  end'#13#10'  else'#13#10'    showmessage(''Unable to writ'
  +'e include file; name is too long. ''+IncName);'#13#10'end;'#13#10#13#10'fun'
  +'ction LoadIncludeFile(Compiler:TObject;FileName,IncPath:String):TStringList'
  +';'#13#10'var'#13#10'  tmp1:TStringList;'#13#10'  tmp:String;'#13#10'  {$ifn'
  +'def JScript}'#13#10'  TheStream:TFileStream;'#13#10'  {$endif}'#13#10'begin'
  +#13#10'  tmp1:=TStringList.Create;'#13#10'  {$ifndef JScript}'#13#10'  try'
  +#13#10'  // find and load the include file...'#13#10'  TheStream:=TFileStrea'
  +'m.Create(IncPath+FileName,fmOpenRead or fmShareDenyNone);'#13#10'  tmp1.Loa'
  +'dFromStream(TheStream);'#13#10'  TheStream.Free;'#13#10'  except'#13#10'   '
  +' try'#13#10'    // try once more with a .inc suffix (FPC keeps this, pas2js'
  +' doesn''t (!?).....'#13#10'    TheStream:=TFileStream.Create(IncPath+FileNa'
  +'me+''.inc'',fmOpenRead or fmShareDenyNone);'#13#10'    tmp1.LoadFromStream('
  +'TheStream);'#13#10'    FileName:=FileName+''.inc'';'#13#10'    TheStream.Fr'
  +'ee;'#13#10'    except'#13#10'      showmessage(''file ''+IncPath+FileName+'
  +''' not available'');'#13#10'      tmp1.Clear;'#13#10'    end;'#13#10'  end;'
  +#13#10'  {$else}'#13#10' // tmp:=MyWebCompiler.Compiler.WebFS.GetFileContent'
  +'(FileName);'#13#10'  tmp:=TPas2JSWebCompiler(Compiler).WebFS.GetFileContent'
  +'(FileName);'#13#10'  tmp1.Text:=tmp;'#13#10'  {$endif}'#13#10'  result:=tmp'
  +'1;'#13#10'end;'#13#10#13#10#13#10'{$ifdef JScript}'#13#10'constructor TWebC'
  +'ompilerObj.Create;'#13#10'begin'#13#10'  FCompiler:=TPas2JSWebCompiler.Crea'
  +'te;'#13#10'end;'#13#10#13#10'procedure TWebCompilerObj.DoLog(Sender: TObjec'
  +'t; const Msg: String);'#13#10'begin'#13#10'  if myCodeEditor<>nil then'#13
  +#10'    myCodeEditor.MessageLines:=myCodeEditor.MessageLines+LineEnding+Msg;'
  +#13#10'end;'#13#10'procedure TWebCompilerObj.OnUnitLoaded(Sender: TObject; a'
  +'FileName: String; aError: string);'#13#10'begin'#13#10'  if myCodeEditor<>n'
  +'il then'#13#10'    if aError='''' then'#13#10'      myCodeEditor.MessageLin'
  +'es:=myCodeEditor.MessageLines+LineEnding+''Loaded: ''+aFileName'#13#10'    '
  +'else'#13#10'      myCodeEditor.MessageLines:=myCodeEditor.MessageLines+Line'
  +'Ending+''Error Loading "''+aFileName+''": ''+AError;'#13#10'end;'#13#10#13
  +#10'procedure LoadRTLFilesForPas2JS(lWebFS : TPas2JSWebFS);  //Compiler:TPas'
  +'2JSWebCompiler);    //TWebCompilerObj);'#13#10'begin'#13#10'  asm'#13#10'  '
  +'  // minimal required rtl set....'#13#10'    //lWebFS.SetFileContent(''syst'
  +'em.pas'',pas.UtilsJSCompile.systempas);'#13#10'    //lWebFS.SetFileContent('
  ,'''sysutils.pas'',pas.UtilsJSCompile.sysutilspas);'#13#10'    //lWebFS.SetFi'
  +'leContent(''classes.pas'',pas.UtilsJSCompile.classespas);'#13#10'    //lWeb'
  +'FS.SetFileContent(''rtlconsts.pas'',pas.UtilsJSCompile.rtlconstspas);'#13#10
  +'    //lWebFS.SetFileContent(''js.pas'',pas.UtilsJSCompile.jspas);'#13#10'  '
  +'  //lWebFS.SetFileContent(''types.pas'',pas.UtilsJSCompile.typespas);'#13#10
  +#13#10'    // common rtl set  (Desktop (windows/linux) and pas2js) ....'#13
  +#10'    lWebFS.SetFileContent(''classes.pas'',pas.CompileUserCode.classespas'
  +');'#13#10'    lWebFS.SetFileContent(''contnrs.pas'',pas.CompileUserCode.con'
  +'tnrspas);'#13#10'    lWebFS.SetFileContent(''dateutils.pas'',pas.CompileUse'
  +'rCode.dateutilspas);'#13#10'    lWebFS.SetFileContent(''js.pas'',pas.Compil'
  +'eUserCode.jspas);'#13#10'    lWebFS.SetFileContent(''math.pas'',pas.Compile'
  +'UserCode.mathpas);'#13#10'    lWebFS.SetFileContent(''rtlconsts.pas'',pas.C'
  +'ompileUserCode.rtlconstspas);'#13#10'//    lWebFS.SetFileContent(''rtti.pas'
  +''',pas.CompileUserCode.rttipas);'#13#10'    lWebFS.SetFileContent(''strutil'
  +'s.pas'',pas.CompileUserCode.strutilspas);'#13#10'    lWebFS.SetFileContent('
  +'''system.pas'',pas.CompileUserCode.systempas);'#13#10'    lWebFS.SetFileCon'
  +'tent(''sysutils.pas'',pas.CompileUserCode.sysutilspas);'#13#10'    lWebFS.S'
  +'etFileContent(''types.pas'',pas.CompileUserCode.typespas);'#13#10'    lWebF'
  +'S.SetFileContent(''typinfo.pas'',pas.CompileUserCode.typinfopas);'#13#10#13
  +#10'  //  lWebFS.SetFileContent(''timer.pas'',pas.UtilsJSCompile.timerpas);'
  +#13#10'  //  lWebFS.SetFileContent(''nodejs.pas'',pas.UtilsJSCompile.nodejsp'
  +'as);'#13#10'  //  lWebFS.SetFileContent(''objpas.pas'',pas.UtilsJSCompile.o'
  +'bjpaspas);'#13#10'  //  lWebFS.SetFileContent(''libjquery.pas'',pas.UtilsJS'
  +'Compile.libjquerypas);'#13#10'  //  lWebFS.SetFileContent(''hotreloadclient'
  +'.pas'',pas.UtilsJSCompile.hotreloadclientpas);'#13#10'  //  lWebFS.SetFileC'
  +'ontent(''class2pas.pas'',pas.UtilsJSCompile.class2paspas);'#13#10'  //  lWe'
  +'bFS.SetFileContent(''browserconsole.pas'',pas.UtilsJSCompile.browserconsole'
  +'pas);'#13#10'  //  lWebFS.SetFileContent(''web.pas'',pas.UtilsJSCompile.web'
  +'pas);'#13#10'  //  lWebFS.SetFileContent(''webaudio.pas'',pas.UtilsJSCompil'
  +'e.webaudiopas);'#13#10'  //  lWebFS.SetFileContent(''webbluetooth.pas'',pas'
  +'.UtilsJSCompile.webbluetoothpas);'#13#10'  //  lWebFS.SetFileContent(''webg'
  +'l.pas'',pas.UtilsJSCompile.webglpas);'#13#10'  //  lWebFS.SetFileContent('''
  +'webrouter.pas'',pas.UtilsJSCompile.webrouterpas);'#13#10'  end;'#13#10'end;'
  +#13#10'{$endif}'#13#10#13#10'begin'#13#10'{$ifdef JScript}'#13#10'MyWebCompi'
  +'ler := TWebCompilerObj.Create;'#13#10'{$endif}'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('xthreads','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XComponents package.'#13#10#13#10'    This package is distribu'
  +'ted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY'
  +'; without even the implied warranty of'#13#10'    MERCHANTABILITY or FITNES'
  +'S FOR A PARTICULAR PURPOSE.'#13#10#13#10' *********************************'
  +'*************************************'#13#10' *)'#13#10'unit XThreads;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10
  +#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, Types,NodeUti'
  +'ls,StringUtils, Events, EventsInterface,'#13#10'  {$ifndef JScript}'#13#10
  +'  Forms, Controls, StdCtrls, LResources, Graphics, Dialogs, ExtCtrls, PropE'
  +'dits, RTTICtrls,'#13#10'  LazsUtils, Dynlibs,'#13#10'    {$if defined ( win'
  +'dows)}'#13#10'    windows,'#13#10'    {$endif}'#13#10'  {$Else}'#13#10'  HT'
  +'MLUtils,'#13#10'  {$endif}'#13#10'  WrapperPanel;'#13#10#13#10'type'#13#10
  +#13#10'  {$ifndef JScript}'#13#10'//  TFunctionParameter = function() : stri'
  +'ng;'#13#10#13#10'  TMyThread = class(TThread)'#13#10'    ThreadName:string;'
  +#13#10'    active:boolean;'#13#10'    myTXThreads:TComponent;'#13#10'    Ret'
  +'urnString:String;'#13#10'    procedure Execute; override;'#13#10'  end;'#13
  +#10'  {$else}'#13#10'  TMyThread = class(TObject)'#13#10'    ThreadName:stri'
  +'ng;'#13#10'    active:boolean;'#13#10'    myTXThreads:TObject;'#13#10'    T'
  +'hreadID:String;'#13#10'    ReturnString:String;'#13#10'    CurrentWorker:TO'
  +'bject;'#13#10'    procedure Execute(TheFunc:TObject);'#13#10'  end;'#13#10
  +'  {$endif}'#13#10#13#10'  {$ifndef JScript}'#13#10'  TXThreads = class(TCom'
  +'ponent)'#13#10'  {$Else}'#13#10'  TXThreads = class(TWrapperPanel)'#13#10' '
  +' {$endif}'#13#10'  private'#13#10'    {$ifndef JScript}'#13#10'    FmyNode:'
  +'TDataNode;'#13#10'    FmyControl:TControl;'#13#10'    {$endif}'#13#10#13#10
  +'  protected'#13#10'    FBeginThreads:TEventHandler;'#13#10'    FHandleRetur'
  +'n:TEventHandler;'#13#10'    FFinaliseThreads:TEventHandler;'#13#10'    FHan'
  +'dleThread1:TEventHandler;'#13#10'    FHandleThread2:TEventHandler;'#13#10' '
  +'   FHandleThread3:TEventHandler;'#13#10'    FHandleThread4:TEventHandler;'
  +#13#10'    {$ifndef JScript}'#13#10'    function GetName:string;'#13#10'    '
  +'procedure SetMyName(AValue:string);'#13#10'    {$endif}'#13#10'    function'
  +' GetActive:Boolean;'#13#10'    function GetMaxCopiesThread1:integer;'#13#10
  +'    function GetMaxCopiesThread2:integer;'#13#10'    function GetMaxCopiesT'
  +'hread3:integer;'#13#10'    function GetMaxCopiesThread4:integer;'#13#10'   '
  +' function GetThreadVarNums:String;'#13#10#13#10'    procedure SetActive(AVa'
  +'lue:Boolean);'#13#10'    procedure SetMaxCopiesThread1(AValue:integer);'#13
  +#10'    procedure SetMaxCopiesThread2(AValue:integer);'#13#10'    procedure '
  +'SetMaxCopiesThread3(AValue:integer);'#13#10'    procedure SetMaxCopiesThrea'
  +'d4(AValue:integer);'#13#10'    procedure SetThreadVarNums(AValue:String);'
  +#13#10#13#10'  public'#13#10'    ThreadCount :integer;'#13#10'    ThreadList'
  +':array of TMyThread;'#13#10'    {$ifndef JScript}'#13#10'    myEventTypes:T'
  +'StringList;'#13#10'    procedure DoConstructor(TheOwner:TComponent;IsDynami'
  +'c:Boolean);'#13#10'    function CreateWorkerThread(ThreadNameString:string)'
  +':TMyThread;'#13#10'    function getThreadName(ThreadID:LongInt):string;'#13
  +#10'    procedure DoneThread(Sender:TObject);'#13#10'    constructor Create('
  +'TheOwner: TComponent);  override;'#13#10'    constructor Create(TheOwner: T'
  +'Component;IsDynamic:Boolean);'#13#10'    procedure CreateSetOfThreads(Threa'
  +'dSetNum:integer);'#13#10'    {$else}'#13#10'    constructor Create(MyForm:T'
  +'Form;NodeName,NameSpace:String);'#13#10'    procedure MessageReturned(Threa'
  +'dID:String; edata:TObject);'#13#10'    procedure ErrorReturned(ThreadID:Str'
  +'ing);'#13#10'    function CreateWorkerThread(ThreadNameString:string; TheFu'
  +'nc:TObject):TMyThread;'#13#10'    procedure CreateSetOfThreads(ThreadSetNum'
  +':integer; TheFunc:TObject);'#13#10'    {$endif}'#13#10'    procedure StartM'
  +'yThreads;'#13#10'    procedure SetMyEventTypes;'#13#10#13#10'  published'#13
  +#10'    {$ifndef JScript}'#13#10'    property myControl:TControl read FmyCon'
  +'trol write FmyControl;'#13#10'    property Name: String read GetName write '
  +'SetMyName;'#13#10'    property myNode:TDataNode read FmyNode write FmyNode;'
  +#13#10'    {$endif}'#13#10#13#10'    property Active:Boolean read getActive '
  +'write setActive;'#13#10'    property MaxCopiesThread1:integer read GetMaxCo'
  +'piesThread1 write SetMaxCopiesThread1;'#13#10'    property MaxCopiesThread2'
  +':integer read GetMaxCopiesThread2 write SetMaxCopiesThread2;'#13#10'    pro'
  +'perty MaxCopiesThread3:integer read GetMaxCopiesThread3 write SetMaxCopiesT'
  +'hread3;'#13#10'    property MaxCopiesThread4:integer read GetMaxCopiesThrea'
  +'d4 write SetMaxCopiesThread4;'#13#10'    property ThreadVarNums:String read'
  ,' GetThreadVarNums write SetThreadVarNums;'#13#10#13#10'    // Events to be '
  +'visible in Lazarus IDE'#13#10'    property BeginThreads:TEventHandler read '
  +'FBeginThreads write FBeginThreads;'#13#10'    property HandleReturn:TEventH'
  +'andler read FHandleReturn write FHandleReturn;'#13#10'    property Finalise'
  +'Threads:TEventHandler read FFinaliseThreads write FFinaliseThreads;'#13#10
  +'    property HandleThread1: TEventHandler read FHandleThread1 write FHandle'
  +'Thread1;'#13#10'    property HandleThread2: TEventHandler read FHandleThrea'
  +'d2 write FHandleThread2;'#13#10'    property HandleThread3: TEventHandler r'
  +'ead FHandleThread3 write FHandleThread3;'#13#10'    property HandleThread4:'
  +' TEventHandler read FHandleThread4 write FHandleThread4;'#13#10#13#10'  end'
  +';'#13#10#13#10'//  {$ifndef JScript}'#13#10'//  procedure Register;'#13#10
  +'//  {$endif}'#13#10'  var'#13#10'    myDefaultAttribs:TDefaultAttributesArr'
  +'ay;'#13#10#13#10'implementation'#13#10#13#10'const MyNodeType=''TXThreads'''
  +';'#13#10#13#10'procedure TXThreads.SetMyEventTypes;'#13#10'begin'#13#10'  M'
  +'yEventTypes.Add(''BeginThreads'');'#13#10'  MyEventTypes.Add(''HandleReturn'
  +''');'#13#10'  MyEventTypes.Add(''FinaliseThreads'');'#13#10#13#10'  MyEvent'
  +'Types.Add(''Thread1'');'#13#10'  MyEventTypes.Add(''Thread2'');'#13#10'  My'
  +'EventTypes.Add(''Thread3'');'#13#10'  MyEventTypes.Add(''Thread4'');'#13#10
  +#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'//procedure Register;'#13
  +#10'//begin'#13#10'//  {$I Icons/XThreads.lrs}'#13#10'//  RegisterComponents'
  +'(''XComponents'',[TXThreads]);'#13#10'//'#13#10'//  RegisterPropertyEditor('
  +'TypeInfo(TControl), TXThreads, ''myControl'', THiddenPropertyEditor);'#13#10
  +'//  RegisterPropertyEditor(TypeInfo(Integer), TXThreads, ''Tag'', THiddenPr'
  +'opertyEditor);'#13#10'//end;'#13#10#13#10'function TXThreads.getThreadName('
  +'ThreadID:LongInt):string;'#13#10'var i:integer;'#13#10'    tempstr:string;'
  +#13#10'begin'#13#10'  tempstr:='''';'#13#10'  for  i := 0 to length(ThreadLi'
  +'st)-1 do'#13#10'  begin'#13#10'    if (ThreadID = ThreadList[i].ThreadID)'
  +#13#10'    then tempstr:= ThreadList[i].ThreadName;'#13#10'  end;'#13#10'  g'
  +'etThreadName:=tempstr;'#13#10'end;'#13#10#13#10'procedure TMyThread.Execute'
  +';'#13#10'var'#13#10'    e:TEventStatus;'#13#10'begin'#13#10'  e:=TEventStat'
  +'us.Create(ThreadName,TXThreads(self.myTXThreads).myNode.NodeName);'#13#10' '
  +' HandleEvent(e,ThreadName,TXThreads(self.myTXThreads).myNode.NodeName,TXThr'
  +'eads(self.myTXThreads).myNode.NameSpace,'''');'#13#10'  // pick up any retu'
  +'rnstring that may have been set in the user event code'#13#10'  self.Return'
  +'String:=e.ReturnString;'#13#10'end;'#13#10#13#10'procedure TXThreads.DoCons'
  +'tructor(TheOwner:TComponent;IsDynamic:Boolean);'#13#10'var'#13#10'  NewNode'
  +':TDataNode;'#13#10'begin'#13#10'    NewNode:=TDataNode.Create(''NV'',self.N'
  +'ame,'''',''TXThreads'',false);'#13#10'    NewNode.ScreenObject:=self;'#13#10
  +'    NewNode.MyForm:=TForm(TheOwner);'#13#10'    NewNode.IsDynamic:=IsDynami'
  +'c;'#13#10#13#10'    self.MyEventTypes:=TStringList.Create;'#13#10'    self.'
  +'SetMyEventTypes;'#13#10#13#10'    SetLength(NewNode.myEventHandlers,self.my'
  +'EventTypes.Count);'#13#10'    NewNode.myEventTypes:=self.myEventTypes;'#13
  +#10#13#10#13#10'    AddChildToParentNode(SystemNodetree,NewNode,-1);'#13#10
  +#13#10'    self.myNode:=NewNode;'#13#10#13#10'    ThreadCount:=0;'#13#10'   '
  +' setlength(ThreadList,0);'#13#10'end;'#13#10#13#10'constructor TXThreads.Cr'
  +'eate(TheOwner:TComponent);'#13#10'begin'#13#10'  inherited Create(TheOwner)'
  +';'#13#10'  DoConstructor(TheOwner,false);'#13#10'end;'#13#10#13#10'construc'
  +'tor TXThreads.Create(TheOwner:TComponent;IsDynamic:Boolean);'#13#10'begin'
  +#13#10'  inherited Create(TheOwner);'#13#10'  DoConstructor(TheOwner,IsDynam'
  +'ic);'#13#10'end;'#13#10#13#10'function TXThreads.GetName:string;'#13#10'var'
  +#13#10'  myname:string;'#13#10'begin'#13#10'  result:=inherited Name;'#13#10
  +'end;'#13#10#13#10'procedure TXThreads.SetMyName(AValue:string);'#13#10'begi'
  +'n'#13#10'  inherited Name:=AValue;'#13#10#13#10'  if myNode<>nil then'#13#10
  +'     myNode.NodeName:=AValue;'#13#10'end;'#13#10#13#10'function CreateWidge'
  +'t(ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position:integer;A'
  +'lignment:String):TDataNode;'#13#10'var'#13#10'  NewNode:TDataNode;'#13#10'b'
  +'egin'#13#10'  NewNode:=CreateDynamicLazWidget(''TXThreads'',ParentNode.MyFo'
  +'rm,ParentNode,ScreenObjectName,NameSpace,Alignment,position);'#13#10'  resu'
  +'lt:=NewNode;'#13#10'end;'#13#10#13#10'function TXThreads.CreateWorkerThread'
  +'(ThreadNameString:string):TMyThread;'#13#10'var NewThread:TMyThread;'#13#10
  +'begin'#13#10#13#10'  NewThread :=  TMyThread.Create(true);       //CreateSu'
  +'spended=true'#13#10'  NewThread.ThreadName:=ThreadNameString;'#13#10#13#10
  +'  NewThread.myTXThreads:=self;'#13#10'  NewThread.OnTerminate:=@self.DoneTh'
  +'read;'#13#10'  NewThread.FreeOnTerminate := true;'#13#10#13#10'  NewThread.'
  ,'active := true;'#13#10#13#10'  ThreadCount := ThreadCount + 1;'#13#10'  set'
  +'length(ThreadList,ThreadCount);'#13#10'  ThreadList[ThreadCount-1 ]:= NewTh'
  +'read;'#13#10'  NewThread.Start;'#13#10#13#10'  result:=NewThread;'#13#10'en'
  +'d;'#13#10#13#10'procedure TXThreads.CreateSetOfThreads(ThreadSetNum:integer'
  +');'#13#10'var'#13#10'  i,max:integer;'#13#10'begin'#13#10'  max:=strToInt(m'
  +'yNode.getAttribute(''MaxCopiesThread''+intToStr(ThreadSetNum),true).AttribV'
  +'alue);'#13#10'  for i:=0 to max-1 do'#13#10'  begin'#13#10'    CreateWorker'
  +'Thread(''Thread''+intToStr(ThreadSetNum));'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'procedure TXThreads.DoneThread(Sender:TObject);'#13#10'var'#13#10'  A'
  +'nyThreadsActive :boolean;'#13#10'  CurrentThreadindex,i:integer;'#13#10'  T'
  +'iD:integer;'#13#10'  ThreadName:string;'#13#10'  ReturnString: string;'#13
  +#10'begin'#13#10'  AnyThreadsActive := false;'#13#10'  TiD:=TMyThread(Sender'
  +').ThreadID;'#13#10'  ReturnString := TMyThread(Sender).ReturnString;'#13#10
  +'  ThreadName:=getThreadName(TiD);'#13#10#13#10'  TMyThread(Sender).active:='
  +'false;'#13#10#13#10'  for  i := 0 to length(ThreadList)-1 do'#13#10'  begin'
  +#13#10'    if (ThreadList[i]<>nil) and (ThreadList[i].active = true) then'#13
  +#10'      AnyThreadsActive := true;'#13#10'  end;'#13#10#13#10'  // Run any '
  +'user-supplied message handler'#13#10'  HandleEvent(''HandleReturn'',self.My'
  +'Node.NodeName,self.MyNode.NameSpace,ReturnString);'#13#10#13#10'  if (AnyTh'
  +'readsActive = false)'#13#10'  then'#13#10'  begin'#13#10'    self.Active:=f'
  +'alse;'#13#10'    // Run any user-supplied finalisation code'#13#10'    Hand'
  +'leEvent(''FinaliseThreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'''''
  +');'#13#10'    {$ifndef JScript}'#13#10'    Screen.Cursor:=crDefault;'#13#10
  +'    {$endif}'#13#10'    ThreadCount:=0;'#13#10'    setlength(ThreadList,0);'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TXThreads.StartMyThreads;'
  +#13#10'begin'#13#10'  if (self.HandleThread1<>nil) or (myNode.HasUserEventCo'
  +'de(''Thread1'')) then CreateSetOfThreads(1);'#13#10'  if (self.HandleThread'
  +'2<>nil) or (myNode.HasUserEventCode(''Thread2'')) then CreateSetOfThreads(2'
  +');'#13#10'  if (self.HandleThread3<>nil) or (myNode.HasUserEventCode(''Thre'
  +'ad3'')) then CreateSetOfThreads(3);'#13#10'  if (self.HandleThread4<>nil) o'
  +'r (myNode.HasUserEventCode(''Thread4'')) then CreateSetOfThreads(4);'#13#10
  +'end;'#13#10#13#10'{$else}'#13#10#13#10'constructor TXThreads.Create(MyForm:'
  +'TForm;NodeName,NameSpace:String);'#13#10'begin'#13#10'  inherited Create(No'
  +'deName,NameSpace);'#13#10'  self.NodeClass:=''NV'';'#13#10'  self.NodeType:'
  +'=''TXThreads'';'#13#10'  self.MyForm:=MyForm;'#13#10#13#10'  self.myNode.My'
  +'EventTypes:=TStringList.Create;'#13#10'  self.SetMyEventTypes;'#13#10'  sel'
  +'f.IsContainer:=false;'#13#10#13#10'  ThreadCount:=0;'#13#10'  setlength(Thr'
  +'eadList,0);'#13#10'end;'#13#10#13#10'function CreateThreadsWidget(MyNode, P'
  +'arentNode:TDataNode;ScreenObjectName,NameSpace:string;position:integer;Alig'
  +'nment:String):TDataNode;'#13#10'begin'#13#10'//showmessage(''Create TXThrea'
  +'ds widget'');'#13#10#13#10'MyNode.ScreenObject:=MyNode;'#13#10#13#10'Refres'
  +'hComponentProps(myNode);'#13#10#13#10'result:=myNode;'#13#10'end;'#13#10#13
  +#10'function CreateinterfaceObj(MyForm:TForm;NodeName,NameSpace:String):TObj'
  +'ect;'#13#10'begin'#13#10'  result:=TObject(TXThreads.Create(MyForm,NodeName'
  +',NameSpace));'#13#10'end;'#13#10#13#10'(*function TXThreads.getThreadName(T'
  +'hreadID:String):string;'#13#10'var i:integer;'#13#10'    tempstr:string;'#13
  +#10'begin'#13#10'  tempstr:='''';'#13#10'  for  i := 0 to length(ThreadList)'
  +'-1 do'#13#10'  begin'#13#10'    if (ThreadID = ThreadList[i].ThreadID)'#13
  +#10'    then tempstr:= ThreadList[i].ThreadName;'#13#10'  end;'#13#10'  getT'
  +'hreadName:=tempstr;'#13#10'end; *)'#13#10#13#10'procedure TXThreads.Message'
  +'Returned(ThreadID:String; edata:TObject);'#13#10'var'#13#10'  AnyThreadsAct'
  +'ive :boolean;'#13#10'  i:integer;'#13#10'  msg:String;'#13#10'begin'#13#10
  +'  asm'#13#10'  //  msgid =edata.id;'#13#10'    msg = edata.msg;'#13#10'  en'
  +'d;'#13#10'//    showmessage(ThreadID+'' MessageReturned ''+msgid+'' ''+msg)'
  +';'#13#10#13#10'    AnyThreadsActive := false;'#13#10#13#10'    for  i := 0 '
  +'to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if (ThreadList[i]<'
  +'>nil) and (ThreadList[i].ThreadID = ThreadID) then'#13#10'      begin'#13#10
  +'        ThreadList[i].Active := false;'#13#10'        ThreadList[i].ReturnS'
  +'tring:=msg;'#13#10'      end;'#13#10'    end;'#13#10#13#10'    for  i := 0 '
  +'to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if (ThreadList[i]<'
  +'>nil) and (ThreadList[i].active = true) then'#13#10'        AnyThreadsActiv'
  +'e := true;'#13#10'    end;'#13#10#13#10'    // Run any user-supplied messag'
  +'e handler'#13#10'    HandleEvent(''HandleReturn'',self.MyNode.NodeName,self'
  +'.MyNode.NameSpace,msg);'#13#10#13#10'    if (AnyThreadsActive = false)'#13
  ,#10'    then'#13#10'    begin'#13#10'      self.Active:=false;'#13#10'      '
  +'// Run any user-supplied finalisation code'#13#10'      HandleEvent(''Final'
  +'iseThreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'''');'#13#10#13#10
  +'      for  i := 0 to length(ThreadList)-1 do'#13#10'      begin'#13#10'    '
  +'    asm'#13#10'          //alert(''cleaning up'');'#13#10'          this.Th'
  +'readList[i].CurrentWorker.terminate();'#13#10'          this.ThreadList[i].'
  +'CurrentWorker = undefined;'#13#10'        end;'#13#10'      end;'#13#10#13
  +#10#13#10'      ThreadCount:=0;'#13#10'      setlength(ThreadList,0);'#13#10
  +'    end;'#13#10'end;'#13#10#13#10'procedure TXThreads.ErrorReturned(ThreadI'
  +'D:String);'#13#10'var'#13#10'  AnyThreadsActive :boolean;'#13#10'  CurrentT'
  +'hreadindex,i:integer;'#13#10'begin'#13#10'    //showmessage(ThreadID+'' Err'
  +'orReturned '');'#13#10#13#10'    AnyThreadsActive := false;'#13#10#13#10'  '
  +'  for  i := 0 to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if ('
  +'ThreadList[i]<>nil) and (ThreadList[i].ThreadID = ThreadID) then'#13#10'   '
  +'   begin'#13#10'        ThreadList[i].Active := false;'#13#10'        Threa'
  +'dList[i].ReturnString:='''';'#13#10'      end;'#13#10'    end;'#13#10#13#10
  +'    for  i := 0 to length(ThreadList)-1 do'#13#10'    begin'#13#10'      if'
  +' (ThreadList[i]<>nil) and (ThreadList[i].active = true) then'#13#10'       '
  +' AnyThreadsActive := true;'#13#10'    end;'#13#10#13#10'    if (AnyThreadsA'
  +'ctive = false)'#13#10'    then'#13#10'    begin'#13#10'      self.Active:=f'
  +'alse;'#13#10'      // Run any user-supplied finalisation code'#13#10'      '
  +'HandleEvent(''FinaliseThreads'',self.MyNode.NodeName,self.MyNode.NameSpace,'
  +''''');'#13#10#13#10'      for  i := 0 to length(ThreadList)-1 do'#13#10'   '
  +'   begin'#13#10'        asm'#13#10'          //alert(''cleaning up'');'#13
  +#10'          this.ThreadList[i].CurrentWorker.terminate();'#13#10'         '
  +' this.ThreadList[i].CurrentWorker = undefined;'#13#10'        end;'#13#10' '
  +'     end;'#13#10#13#10#13#10'      ThreadCount:=0;'#13#10'      setlength(T'
  +'hreadList,0);'#13#10'    end;'#13#10'end;'#13#10#13#10'(*'#13#10'----------'
  +'--------------------------------------------------'#13#10'Thread Code Struc'
  +'ture....'#13#10#13#10'var loce=null;       // e is object of type TEventSta'
  +'tus'#13#10#13#10'function EventFunc(e,nodeid,str) {'#13#10'...user code...'
  +#13#10'}'#13#10'function setupThread() {'#13#10'   // onmessage here will ha'
  +'ndle messages received into the worker thread from the main thread...'#13#10
  +'   onmessage = function(event) {'#13#10'                                 //'
  +'eg. {''cmd'': ''start'', ''msg'': ''Hi''}'#13#10'                          '
  +'       loce=event.data;'#13#10'                                 if (loce.Ev'
  +'entType) {'#13#10'                                   // Execute user event '
  +'function...'#13#10'                                   EventFunc(loce,loce.N'
  +'odeId,"");'#13#10'                                   // Notify main thread '
  +'we are done...'#13#10'                                   postMessage({"id":'
  +'loce.EventType , "msg":loce.ReturnString});'#13#10'                        '
  +'           }'#13#10'                               };'#13#10'}'#13#10'setup'
  +'Thread();'#13#10'----------------------------------------------------------'
  +#13#10'*)'#13#10#13#10#13#10#13#10'procedure TMyThread.Execute(TheFunc:TObje'
  +'ct);'#13#10'var'#13#10'  e:TEventStatus;'#13#10'begin'#13#10'  e:=TEventSta'
  +'tus.Create(self.ThreadID,TXThreads(self.myTXThreads).NodeName);'#13#10'  e.'
  +'NameSpace:=TXThreads(self.myTXThreads).NameSpace;'#13#10'asm'#13#10'{'#13#10
  +'  var msgFun = this.myTXThreads.MessageReturned;'#13#10'  msgFun = msgFun.b'
  +'ind(this.myTXThreads);'#13#10#13#10'  var errFun = this.myTXThreads.ErrorRe'
  +'turned;'#13#10'  errFun = errFun.bind(this.myTXThreads);'#13#10#13#10'  var'
  +' myNodeName = this.myTXThreads.NodeName;'#13#10'  var doFunc = TheFunc;'#13
  +#10#13#10'  var setupThreadFunc ='#13#10'  ''function setupThread() { \n'''
  +#13#10'  +''  // onmessage here will handle messages received into the worke'
  +'r thread from the main thread... \n'''#13#10'  +''  onmessage = function(ev'
  +'ent) { \n'''#13#10'  +''          var d=event.data; \n'''#13#10'  +''      '
  +'    if (d.type="EventStart") { \n'''#13#10'  +''            loce=d.evs; \n'
  +''''#13#10'  +''            if (loce.EventType) {\n'''#13#10'  +''          '
  +'    // Execute user event function... \n'''#13#10'  +''              EventF'
  +'unc(loce,loce.NodeId,"");  \n'''#13#10'  +''              // Notify main th'
  +'read we are done... \n'''#13#10'  +''              postMessage({"id":loce.E'
  +'ventType  ,"msg":loce.ReturnString}); \n'''#13#10'  +''            } \n'''
  +#13#10'  +''        }\n'''#13#10'  +''    }; \n'''#13#10'  +''};\n'';'#13#10
  +#13#10'  //alert(''Execute Thread ID=''+this.ThreadID);'#13#10'   // create '
  +'a URL containing the inlne JavaScript Code instead of loading from a file'
  ,#13#10'   // this can be shared across multiple threads'#13#10'   function g'
  +'etInlineJS(EventFn)'#13#10'   {'#13#10'       var FuncString = EventFn.toSt'
  +'ring();'#13#10'       FuncString=FuncString.replace("function", "function E'
  +'ventFunc")'#13#10#13#10'       FuncString = ''var loce = null; \n'''#13#10
  +'                    + FuncString +''; '''#13#10'                    + setup'
  +'ThreadFunc + ''; '''#13#10'                    + ''setupThread(); '';'#13#10
  +'       alert(FuncString);'#13#10'       var CodeBlob = new Blob([FuncString'
  +'], { type: "text/javascript" });'#13#10'       var returnBlob =  URL.create'
  +'ObjectURL(CodeBlob);'#13#10'       return returnBlob ;'#13#10'   };'#13#10
  +#13#10'   var localThreadID = this.ThreadID;'#13#10'   if(typeof(Worker) !=='
  +' "undefined")'#13#10'   {'#13#10'      if ((this.CurrentWorker==null)||(typ'
  +'eof(this.CurrentWorker) == "undefined"))'#13#10'      {'#13#10'         if '
  +'((TheFunc!=null)&&(TheFunc!=undefined)) {'#13#10'         this.CurrentWorke'
  +'r =  new Worker(getInlineJS(TheFunc));'#13#10#13#10'         // handle mess'
  +'ages received FROM worker...'#13#10'         this.CurrentWorker.onmessage ='
  +' function(event) { msgFun(localThreadID, event.data)};  // event.data has i'
  +'d and msg'#13#10'         // send message TO worker...'#13#10'         this'
  +'.CurrentWorker.postMessage({"Type":"EventStart", "evs":e});'#13#10#13#10'  '
  +'       this.CurrentWorker.onerror = function(event) {alert("Error: "+  even'
  +'t.message + "<-- in thread -->"+localThreadID+"<-- at Line " + event.lineno'
  +');'#13#10'                                                        errFun(lo'
  +'calThreadID);'#13#10'                                                      '
  +' };'#13#10'         }'#13#10'         else {alert(''Function for thread ''+'
  +'this.ThreadID+'' is undefined'');}'#13#10'      }'#13#10'      else { alert'
  +'("Error in TMyThread.Execute - CurrentWorker not null"); };'#13#10'   }'#13
  +#10'   else { alert("Sorry, your browser does not support Web Workers..."); '
  +'};'#13#10'}'#13#10';'#13#10'end;'#13#10'end;'#13#10#13#10#13#10'function TX'
  +'Threads.CreateWorkerThread(ThreadNameString:string; TheFunc:TObject):TMyThr'
  +'ead;'#13#10'var NewThread:TMyThread;'#13#10'begin'#13#10'  NewThread :=  TM'
  +'yThread.Create;'#13#10'  NewThread.ThreadName:=ThreadNameString;'#13#10'  N'
  +'ewThread.ThreadID:=ThreadNameString;'#13#10#13#10'  NewThread.myTXThreads:='
  +'self;'#13#10#13#10'  ThreadCount := ThreadCount + 1;'#13#10'  setlength(Thr'
  +'eadList,ThreadCount);'#13#10'  ThreadList[ThreadCount-1 ]:= NewThread;'#13
  +#10' // showmessage(''CreateWorkerThread ID=''+ThreadNameString+'' is on Thr'
  +'eadList at index ''+inttostr(ThreadCount-1));'#13#10' // showmessage(''leng'
  +'th(ThreadList) is ''+inttostr(length(ThreadList)));'#13#10#13#10#13#10'  Ne'
  +'wThread.Execute(TheFunc);   // this creates a Worker instance'#13#10#13#10
  +'  NewThread.active := true;'#13#10#13#10'  result:=NewThread;'#13#10'end;'
  +#13#10'procedure TXThreads.CreateSetOfThreads(ThreadSetNum:integer; TheFunc:'
  +'TObject);'#13#10'var'#13#10'  i,max:integer;'#13#10'begin'#13#10'  max:=str'
  +'ToInt(myNode.getAttribute(''MaxCopiesThread''+intToStr(ThreadSetNum),true).'
  +'AttribValue);'#13#10'  for i:=0 to max-1 do'#13#10'  begin'#13#10'    Creat'
  +'eWorkerThread(self.NodeName+''Thread''+intToStr(ThreadSetNum)+''_''+intToSt'
  +'r(i),TheFunc);'#13#10'  end;'#13#10'end;'#13#10'procedure TXThreads.StartMy'
  +'Threads;'#13#10'var'#13#10'  fn:TObject;'#13#10'begin'#13#10'  fn:=FindEven'
  +'tFunction(self.NameSpace,self.NodeName,''Thread1'',self,false);'#13#10'  if'
  +' (fn<>nil) then CreateSetOfThreads(1,fn);'#13#10'  fn:=FindEventFunction(se'
  +'lf.NameSpace,self.NodeName,''Thread2'',self,false);'#13#10'  if (fn<>nil) t'
  +'hen CreateSetOfThreads(2,fn);'#13#10'  fn:=FindEventFunction(self.NameSpace'
  +',self.NodeName,''Thread3'',self,false);'#13#10'  if (fn<>nil) then CreateSe'
  +'tOfThreads(3,fn);'#13#10'  fn:=FindEventFunction(self.NameSpace,self.NodeNa'
  +'me,''Thread4'',self,false);'#13#10'  if (fn<>nil) then CreateSetOfThreads(4'
  +',fn);'#13#10'end;'#13#10'{$endif}'#13#10#13#10#13#10'function TXThreads.Get'
  +'Active:Boolean;'#13#10'begin'#13#10'  result:=MyStrToBool(MyNode.getAttribu'
  +'te(''Active'',true).AttribValue);'#13#10'end;'#13#10#13#10'function TXThrea'
  +'ds.GetMaxCopiesThread1:integer;'#13#10'begin'#13#10'  result:=StrToInt(MyNo'
  +'de.getAttribute(''MaxCopiesThread1'',true).AttribValue);'#13#10'end;'#13#10
  +#13#10'function TXThreads.GetMaxCopiesThread2:integer;'#13#10'begin'#13#10' '
  +' result:=StrToInt(MyNode.getAttribute(''MaxCopiesThread2'',true).AttribValu'
  +'e);'#13#10'end;'#13#10#13#10'function TXThreads.GetMaxCopiesThread3:integer'
  +';'#13#10'begin'#13#10'  result:=StrToInt(MyNode.getAttribute(''MaxCopiesThr'
  +'ead3'',true).AttribValue);'#13#10'end;'#13#10#13#10'function TXThreads.GetM'
  +'axCopiesThread4:integer;'#13#10'begin'#13#10'  result:=StrToInt(MyNode.getA'
  +'ttribute(''MaxCopiesThread4'',true).AttribValue);'#13#10'end;'#13#10#13#10
  ,'function TXThreads.GetThreadVarNums:String;'#13#10'begin'#13#10'  result:=M'
  +'yNode.getAttribute(''ThreadVarNums'',true).AttribValue;'#13#10'end;'#13#10
  +#13#10#13#10'procedure TXThreads.SetActive(AValue:Boolean);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''Active'',myBoolToStr(AValue),''Boolean'');'
  +#13#10'  if (StartingUp=false) and (AValue=true) then'#13#10'  begin'#13#10
  +'    showmessage(''calling event beginthreads'');'#13#10'    HandleEvent(''B'
  +'eginThreads'',self.myNode.NodeName,self.myNode.NameSpace,'''');  // do any '
  +'user-initialisation'#13#10'    showmessage(''calling startmythreads'');'#13
  +#10'    self.StartMyThreads;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedur'
  +'e TXThreads.SetMaxCopiesThread1(AValue:integer);'#13#10'begin'#13#10'  myNo'
  +'de.SetAttributeValue(''MaxCopiesThread1'',IntToStr(AValue),''Integer'');'#13
  +#10'end;'#13#10#13#10'procedure TXThreads.SetMaxCopiesThread2(AValue:integer'
  +');'#13#10'begin'#13#10'  myNode.SetAttributeValue(''MaxCopiesThread2'',IntT'
  +'oStr(AValue),''Integer'');'#13#10'end;'#13#10#13#10'procedure TXThreads.Set'
  +'MaxCopiesThread3(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttribute'
  +'Value(''MaxCopiesThread3'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10
  +#13#10'procedure TXThreads.SetMaxCopiesThread4(AValue:integer);'#13#10'begin'
  +#13#10'  myNode.SetAttributeValue(''MaxCopiesThread4'',IntToStr(AValue),''In'
  +'teger'');'#13#10'end;'#13#10#13#10'procedure TXThreads.SetThreadVarNums(AVa'
  +'lue:String);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''ThreadVarNums'
  +''',AValue,''String'');'#13#10'end;'#13#10#13#10'begin'#13#10'  AddDefaultAt'
  +'tribute(myDefaultAttribs,''Active'',''Boolean'',''True'',''Set Active to st'
  +'art all threads'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''M'
  +'axCopiesThread1'',''Integer'',''0'',''Number of repeats for the Thread1 eve'
  +'nt code'',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxCopies'
  +'Thread2'',''Integer'',''0'',''Number of repeats for the Thread2 event code'
  +''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxCopiesThread3'
  +''',''Integer'',''0'',''Number of repeats for the Thread3 event code'',false'
  +');'#13#10'  AddDefaultAttribute(myDefaultAttribs,''MaxCopiesThread4'',''Int'
  +'eger'',''0'',''Number of repeats for the Thread4 event code'',false);'#13#10
  +'  AddDefaultAttribute(myDefaultAttribs,''ThreadVarNums'',''String'','''','''
  +'List of variable names (float numeric)'',false);'#13#10'  AddDefaultsToTabl'
  +'e(MyNodeType,myDefaultAttribs);'#13#10#13#10'  {$ifndef JScript}'#13#10'  C'
  +'lasses.RegisterClass(TXThreads);'#13#10'  AddNodeFuncLookup(MyNodeType,@Cre'
  +'ateWidget);'#13#10'  {$else}'#13#10'  AddNodeFuncLookup(MyNodeType,@Createi'
  +'nterfaceObj,@CreateThreadsWidget);'#13#10'  SuppressDesignerProperty(MyNode'
  +'Type,''Alignment'');'#13#10'  SuppressDesignerProperty(MyNodeType,''IsVisib'
  +'le'');'#13#10'  SuppressDesignerProperty(MyNodeType,''LabelPos'');'#13#10' '
  +' SuppressDesignerProperty(MyNodeType,''LabelText'');'#13#10'  SuppressDesig'
  +'nerProperty(MyNodeType,''Hint'');'#13#10'  {$endif}'#13#10'end.'#13#10
]);
LazarusResources.Add('xgpucanvas','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XGPUCanvas;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13
  +#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, SysUtils, TypInfo,'
  +' StringUtils, NodeUtils, XIFrame, Math,'#13#10'    UtilsJSCompile, XForm, X'
  +'Code, XButton, XVBox, XTabControl, XMemo, XComboBox, EventsInterface,'#13#10
  +'    WebTranspilerUtils,'#13#10'  {$ifndef JScript}'#13#10'    LResources, F'
  +'orms, Controls, StdCtrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls'
  +','#13#10'    LazsUtils, LCLIntf,'#13#10'    LCLType, gettext,'#13#10'    {$'
  +'ifdef Chromium}'#13#10'    uCEFChromium, uCEFInterfaces, uCEFTypes, uCEFPro'
  +'cessMessage, uCEFMiscFunctions,'#13#10'    cefXUtils,'#13#10'    {$endif}'
  +#13#10'  {$else}'#13#10'    webfilecache, pas2jswebcompiler,'#13#10'    HTML'
  +'Utils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events, XGPUEditor;'#13#10
  +#13#10#13#10'type TGPUNumParam = record'#13#10'  ParamName:String;'#13#10'  '
  +'ParamValue:TNumArray;'#13#10'  end;'#13#10'type TGPUNumParams = Array of TG'
  +'PUNumParam;'#13#10'type TGPUImgParam = record'#13#10'  ParamName:String;'#13
  +#10'  ParamValue:TImgArray;'#13#10'  end;'#13#10'type TGPUImgParams = Array '
  +'of TGPUImgParam;'#13#10'type TGPUIntConst = record'#13#10'  ConstName:Strin'
  +'g;'#13#10'  ConstValue:integer;'#13#10'  end;'#13#10'type TGPUIntConsts = A'
  +'rray of TGPUIntConst;'#13#10#13#10'type'#13#10'  TXGPUCanvas = class(TXIFra'
  +'me)'#13#10'  private'#13#10'    { Private declarations }'#13#10'    ParamNu'
  +'mArray:TGPUNumParams;'#13#10'    ParamImgArray:TGPUImgParams;'#13#10'    Co'
  +'nstIntArray:TGPUIntConsts;'#13#10'//    {$ifndef JScript}'#13#10'//    fHan'
  +'dleOnNewFrame:TEventHandler;'#13#10'//    {$endif}'#13#10#13#10'    functio'
  +'n GetAnimationCode:string;'#13#10'    function GetActive:Boolean;'#13#10'  '
  +'  function GetAnimated:Boolean;'#13#10'    function GetParamNumList:string;'
  +#13#10'    function GetConstIntList:string;'#13#10'    function GetParamImgL'
  +'ist:string;'#13#10'    function GetMaxIterations:integer;'#13#10'    functi'
  +'on GetStartIteration:integer;'#13#10'    function GetNumFrames:integer;'#13
  +#10'    function GetMaxFramesPerSec:integer;'#13#10'//    function GetFetchF'
  +'rameOutput:Boolean;'#13#10'//    function GetOutputArray:string;'#13#10'// '
  +'   function GetGPUStageArray:string;'#13#10'    function GetNumKernels:inte'
  +'ger;'#13#10'    function GetZDimension:integer;'#13#10#13#10'    procedure '
  +'SetAnimationCode(AValue:string);'#13#10'    procedure SetActive(AValue:Bool'
  +'ean);'#13#10'    procedure SetAnimated(AValue:Boolean);'#13#10'    procedur'
  +'e SetParamNumList(AValue:string);'#13#10'    procedure SetConstIntList(AVal'
  +'ue:string);'#13#10'    procedure SetParamImgList(AValue:string);'#13#10'   '
  +' procedure SetMaxIterations(AValue:integer);'#13#10'    procedure SetStartI'
  +'teration(AValue:integer);'#13#10'    procedure SetNumFrames(AValue:integer)'
  +';'#13#10'    procedure SetMaxFramesPerSec(AValue:integer);'#13#10'//    pro'
  +'cedure SetFetchFrameOutput(AValue:Boolean);'#13#10'//    procedure SetOutpu'
  +'tArray(AValue:string);'#13#10'//    procedure SetGPUStageArray(AValue:strin'
  +'g);'#13#10'    procedure SetNumKernels(AValue:integer);'#13#10'    procedur'
  +'e SetZDimension(AValue:integer);'#13#10#13#10'    procedure SetMyEventTypes'
  +';  override;'#13#10'    procedure SetPropertyDefaults;'#13#10'    procedure'
  +' StartMyGPU;'#13#10'    procedure StopMyGPU;'#13#10'    function BuildPasca'
  +'lAnimationUnit(Compiler:TObject):String;'#13#10'    function CompileGPUToJS'
  +'(var GPUJSOutput:String):Boolean;'#13#10'    function GPUJSCode(AnimCode:TS'
  +'tringList):String;'#13#10'    function GPUJSAnimationFooter:String;'#13#10
  +'    procedure setupGPUPage;'#13#10#13#10'    {$ifndef JScript}'#13#10'    p'
  +'rocedure DoGPUCanvasConstructor;'#13#10'    {$endif}'#13#10#13#10'  protect'
  +'ed'#13#10'    { Protected declarations }'#13#10'  public'#13#10'    { Publi'
  +'c declarations }'#13#10'    GeneratedHTML:String;'#13#10'    GPUStageArray:'
  +'T3DNumArray;            // output from main graphical kernel'#13#10'    GPU'
  +'OutputArray:T3DNumArray;            // output from non-graphical nested ker'
  +'nels'#13#10'    GPUStageString:String;'#13#10'    GPUOutputString:String;'
  +#13#10'    {$ifndef JScript}'#13#10'    constructor Create(TheOwner: TCompon'
  +'ent); override;'#13#10'    constructor Create(TheOwner: TComponent;IsDynami'
  +'c:Boolean); override;'#13#10'    destructor Destroy; override;'#13#10'    p'
  +'rocedure ReLoadURL; override;'#13#10'    {$ifdef Chromium}'#13#10'    proce'
  ,'dure HandleConsoleMessage(Sender: TObject; const browser: ICefBrowser; leve'
  +'l: TCefLogSeverity;'#13#10'                                   const message'
  +', source: ustring; line: Integer; out Result: Boolean) ;'#13#10'    procedu'
  +'re GPUProcessMessageReceived('#13#10'      Sender: TObject; const browser: '
  +'ICefBrowser;'#13#10'      const frame: ICefFrame; sourceProcess: TCefProces'
  +'sId;'#13#10'      const message: ICefProcessMessage; out Result: Boolean);'
  +#13#10'    {$endif}'#13#10'    {$else}'#13#10'    constructor Create(MyForm:'
  +'TForm;NodeName,NameSpace:String);  override;'#13#10'    {$endif}'#13#10'   '
  +' function FullParamList:String;'#13#10'    function FullXMLString:String;'
  +#13#10'    function GetParamNumValue(pName:String):TNumArray;'#13#10'    fun'
  +'ction GetConstIntValue(pName:String):integer;'#13#10'    function GetParamI'
  +'mgValue(pName:String):TImgArray;'#13#10'    procedure SetParamNumValue(pNam'
  +'e:String;pValue:TNumArray;ForwardToWidget:Boolean);'#13#10'    procedure Se'
  +'tConstIntValue(pName:String;pValue:integer);'#13#10'    procedure SetParamI'
  +'mgValue(pName:String;pValue:TImgArray;ForwardToWidget:Boolean);'#13#10'    '
  +'function CompileAnimCode:TStringList;'#13#10'    function FetchAllAnimCode:'
  +'TAnimCodeArray;'#13#10'    function BuildKernelList:String;'#13#10#13#10'pu'
  +'blished'#13#10'    { Published declarations }'#13#10#13#10'    // Propertie'
  +'s defined for this class...'#13#10'    property Active: Boolean read GetAct'
  +'ive write SetActive;'#13#10'    property Animated: Boolean read GetAnimated'
  +' write SetAnimated;'#13#10'    property AnimationCode: String read GetAnima'
  +'tionCode write SetAnimationCode;'#13#10'    property ParamNumList: String r'
  +'ead GetParamNumList write SetParamNumList;'#13#10'    property ConstIntList'
  +': String read GetConstIntList write SetConstIntList;'#13#10'    property Pa'
  +'ramImgList: String read GetParamImgList write SetParamImgList;'#13#10'    p'
  +'roperty MaxIterations: integer read GetMaxIterations write SetMaxIterations'
  +';'#13#10'    property StartIteration: integer read GetStartIteration write '
  +'SetStartIteration;'#13#10'    property NumFrames: integer read GetNumFrames'
  +' write SetNumFrames;'#13#10'    property MaxFramesPerSec: integer read GetM'
  +'axFramesPerSec write SetMaxFramesPerSec;'#13#10'//    property FetchFrameOu'
  +'tput: Boolean read GetFetchFrameOutput write SetFetchFrameOutput;'#13#10'//'
  +'    property OutputArray:String read GetOutputArray write SetOutputArray;'
  +#13#10'//    property GPUStageArray:String read GetGPUStageArray write SetGP'
  +'UStageArray;'#13#10'    property NumKernels:integer read GetNumKernels writ'
  +'e SetNumKernels;'#13#10'    property ZDimension:integer read GetZDimension '
  +'write SetZDimension;'#13#10#13#10'  end;'#13#10#13#10#13#10'procedure SetOu'
  +'tputArrayValue(NodeName:String;AValue:String);'#13#10'procedure SetStageArr'
  +'ayValue(NodeName:String;AValue:String);'#13#10'function GetOutputArrayValue'
  +'(NodeName:String):T3DNumArray;'#13#10'function GetOutputArrayString(NodeNam'
  +'e:String):String;'#13#10'function GetStageArrayValue(NodeName:String):T3DNu'
  +'mArray;'#13#10'function GetStageArrayString(NodeName:String):String;'#13#10
  +#13#10'var'#13#10'  gpujs:String;                 // contents of resource fi'
  +'le gpu.js'#13#10#13#10'implementation'#13#10#13#10'const MyNodeType=''TXGPU'
  +'Canvas'';'#13#10'var'#13#10'  myDefaultAttribs:TDefaultAttributesArray;'#13
  +#10#13#10'procedure TXGPUCanvas.SetMyEventTypes;'#13#10'begin'#13#10'  MyEve'
  +'ntTypes.Add(''Click'');'#13#10'  MyEventTypes.Add(''OnStart'');'#13#10' // '
  +'MyEventTypes.Add(''OnNewFrame'');'#13#10'end;'#13#10#13#10#13#10'function T'
  +'XGPUCanvas.BuildKernelList:String;'#13#10'var'#13#10'  OList:String;'#13#10
  +'  i:integer;'#13#10'begin'#13#10'  OList:=''["Graphical (Final)"'';'#13#10
  +'  for i:=0 to numKernels-1 do'#13#10'    OList:=OList+'',"Kernel ''+inttost'
  +'r(i+1)+''"'';'#13#10'  OList:=OList+'']'';'#13#10'  result:=OList;'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXGPUCanvas.SetPropertyDefaults;'#13#10'begin'#13
  +#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10#13#10'function CreateGPUCanva'
  +'sWidget(ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position:int'
  +'eger;Alignment:String):TDataNode;'#13#10'var'#13#10'  NewNode:TDataNode;'#13
  +#10'begin'#13#10'  NewNode:=CreateDynamicLazWidget(''TXGPUCanvas'',ParentNod'
  +'e.MyForm,ParentNode,ScreenObjectName,NameSpace,Alignment,position);'#13#10
  +'  result:=NewNode;'#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.DoGPUCanv'
  +'asConstructor;'#13#10'begin'#13#10'  {$ifdef Chromium}'#13#10'  myChromium.'
  +'OnConsoleMessage:=@self.HandleConsoleMessage;'#13#10'  myChromium.OnProcess'
  +'MessageReceived:=@self.GPUProcessMessageReceived;'#13#10'  {$endif}'#13#10
  +#13#10'  self.IsContainer:=false;'#13#10'  self.myNode.NodeType:=''TXGPUCanv'
  +'as'';'#13#10'  SetLength(ParamNumArray,0);'#13#10'  SetLength(self.GPUOutpu'
  +'tArray,0);'#13#10'  AddDefaultAttribs(self,self.myNode,mydefaultAttribs);'
  ,#13#10#13#10'  SetPropertyDefaults;'#13#10'end;'#13#10#13#10'constructor TXG'
  +'PUCanvas.Create(TheOwner:TComponent);'#13#10'begin'#13#10'  inherited Creat'
  +'e(TheOwner,false);'#13#10'  DoGPUCanvasConstructor;'#13#10'end;'#13#10#13#10
  +'constructor TXGPUCanvas.Create(TheOwner:TComponent;IsDynamic:Boolean);'#13
  +#10'begin'#13#10'  inherited Create(TheOwner,IsDynamic);'#13#10'  DoGPUCanva'
  +'sConstructor;'#13#10'end;'#13#10#13#10'destructor TXGPUCanvas.Destroy;'#13
  +#10'begin'#13#10'  if (not (csDesigning in componentState)) then'#13#10'  be'
  +'gin'#13#10'    if Active then'#13#10'    begin'#13#10'      self.StopMyGPU;'
  +#13#10'    end;'#13#10'    myControl.Free;'#13#10'  end;'#13#10'  inherited '
  +'Destroy;'#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.ReLoadURL;'#13#10'b'
  +'egin'#13#10'  if (self.SuspendRefresh)'#13#10'  {$ifndef JScript}'#13#10'  '
  +'or (GlobalSuppressFrameDisplay)'#13#10'  {$endif}'#13#10'  then'#13#10'    '
  +'EXIT;'#13#10#13#10'  if (StartingUp=false)'#13#10'  and (self.Active) then'
  +#13#10'    self.StartMyGPU;'#13#10'end;'#13#10#13#10'{$ifdef Chromium}'#13#10
  +#13#10'procedure TXGPUCanvas.HandleConsoleMessage(Sender: TObject; const bro'
  +'wser: ICefBrowser; level: TCefLogSeverity;'#13#10'                         '
  +'        const message, source: ustring; line: Integer; out Result: Boolean)'
  +' ;'#13#10'var'#13#10'  NewText:String;'#13#10'  MType:String;'#13#10'  Temp'
  +'Msg : ICefProcessMessage;'#13#10'begin'#13#10'  // A frame display has ende'
  +'d.'#13#10'  if (not (csDesigning in componentState))'#13#10'  and (not Star'
  +'tingUp)'#13#10'  and (self.myNode<>nil)'#13#10'  and (self.Active=true)'#13
  +#10'  and (browser<>nil)'#13#10'  and (myChromium<>nil)'#13#10'  and (FoundS'
  +'tring(message,self.myNode.NodeName)=1)'#13#10'  then'#13#10'  begin'#13#10
  +'    NewText:=message;'#13#10'    Delete(NewText,1,length(self.myNode.NodeNa'
  +'me));'#13#10'    MType:=NewText[1];'#13#10'    Delete(NewText,1,1);'#13#10
  +'    // converting the JSON string back to numeric array takes ages so just '
  +'storing the'#13#10'    // string for now.  Do the conversion when the array'
  +' is wanted.'#13#10'    // Send a cef message to fetch the new value of the '
  +'frame output array'#13#10'    // (Use the ArgumentList property if you need'
  +' to pass some parameters.)'#13#10'    TempMsg := TCefProcessMessageRef.New('
  +'''getGPUData'');'#13#10'    TempMsg.ArgumentList.SetString(0,self.myNode.No'
  +'deName);'#13#10#13#10'    myChromium.SendProcessMessage(PID_RENDERER, TempM'
  +'sg);'#13#10'  end;'#13#10'end;'#13#10'procedure TXGPUCanvas.GPUProcessMessa'
  +'geReceived('#13#10'  Sender: TObject; const browser: ICefBrowser;'#13#10'  '
  +'const frame: ICefFrame; sourceProcess: TCefProcessId;'#13#10'  const messag'
  +'e: ICefProcessMessage; out Result: Boolean);'#13#10'var'#13#10'  oText,sTex'
  +'t:String;'#13#10'  oarr,sarr:T3DNumArray;'#13#10'begin'#13#10'  case messag'
  +'e.Name of'#13#10'    ''sendGPUarrays'':'#13#10'    begin'#13#10'      //Cef'
  +'DebugLog(''TXGPUCanvas.GPUProcessMessageReceived.'');'#13#10'      oText :='
  +' message.ArgumentList.GetString(0);'#13#10'      sText := message.ArgumentL'
  +'ist.GetString(1);'#13#10'      //just set attribute here'#13#10'      //sel'
  +'f.myNode.SetAttributeValue(''SourceText'',NewText);'#13#10'      // convert'
  +' the array string to 3d numeric array'#13#10'     // EditAttributeValue(''X'
  +'Memo1'','''',''ItemValue'',NewText,false);'#13#10'     self.GPUOutputString'
  +':=oText;'#13#10'     self.GPUStageString:=sText;'#13#10'    end;'#13#10'  e'
  +'lse'#13#10'    inherited;'#13#10'  end;'#13#10'end;'#13#10'{$endif}'#13#10
  +#13#10#13#10#13#10'{$else} //JScript'#13#10#13#10'constructor TXGPUCanvas.Cr'
  +'eate(MyForm:TForm;NodeName,NameSpace:String);'#13#10'begin'#13#10'  inherit'
  +'ed Create(MyForm,NodeName,NameSpace);'#13#10'  self.NodeType:=''TXGPUCanvas'
  +''';'#13#10'  self.IsContainer:=false;'#13#10'  SetLength(ParamNumArray,0);'
  +#13#10#13#10'  SetNodePropDefaults(self,myDefaultAttribs);'#13#10'  SetPrope'
  +'rtyDefaults;'#13#10'end;'#13#10#13#10'function CreateGPUCanvasWidget(MyNode'
  +', ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position:integer;A'
  +'lignment:String):TDataNode;'#13#10'var'#13#10'  NewWidget:TXGPUCanvas;'#13
  +#10'  h,w:integer;'#13#10'  scr,GPUMessageHandler:String;'#13#10'begin'#13#10
  +'  DoCreateFrameWidget(MyNode, ParentNode,ScreenObjectName,position);'#13#10
  +'  NewWidget:=TXGPUCanvas(myNode);'#13#10#13#10'  asm'#13#10'    function GP'
  +'UOutputHandler(ev) {'#13#10'    if (ev.data.objid!=undefined) {'#13#10'    '
  +'  //console.log("handle GPU outbound message "+ev.data.objid+"  "+ev.data.m'
  +'type);'#13#10'      if (ev.data.mtype=="FrameOutput") {'#13#10'        //co'
  +'nsole.log("handle FrameOutput message "+ev.data.outputArray);'#13#10'      '
  +'  //console.log("handle FrameOutput message ");'#13#10'        try {'#13#10
  +'          pas.XGPUCanvas.SetOutputArrayValue(ev.data.objid,ev.data.outputAr'
  +'ray);'#13#10'            }catch(err){alert(err.message);'#13#10'        }'
  ,#13#10'      }'#13#10'      else if (ev.data.mtype=="StageOutput") {'#13#10
  +'         //console.log("handle StageOutput message "+ev.data.stageArray);'
  +#13#10'         //console.log("handle StageOutput message ");'#13#10'       '
  +'  try {'#13#10'           pas.XGPUCanvas.SetStageArrayValue(ev.data.objid,e'
  +'v.data.stageArray);'#13#10'             }catch(err){alert(err.message);'#13
  +#10'         }'#13#10'       }'#13#10'    }'#13#10'    }'#13#10'    var ob=d'
  +'ocument.getElementById(NameSpace+ScreenObjectName);'#13#10'    if (ob!=null'
  +') {'#13#10'      window.addEventListener("message", GPUOutputHandler);'#13
  +#10'    }'#13#10'  end;'#13#10#13#10#13#10'  RefreshComponentProps(myNode);'
  +#13#10#13#10'  // refresh the actual h/w attributes'#13#10'  h:=NewWidget.Ac'
  +'tualHeight;'#13#10'  w:=NewWidget.ActualWidth;'#13#10#13#10'  setlength(New'
  +'Widget.GPUOutputArray,0);'#13#10#13#10'  result:=myNode;'#13#10'end;'#13#10
  +#13#10#13#10'function CreateinterfaceObjGPU(MyForm:TForm;NodeName,NameSpace:'
  +'String):TObject;'#13#10'begin'#13#10'  result:=TObject(TXGPUCanvas.Create(M'
  +'yForm,NodeName,NameSpace));'#13#10'end;'#13#10#13#10#13#10'{$endif}'#13#10
  +'function TXGPUCanvas.GetAnimationCode:string;'#13#10'begin'#13#10'  result:'
  +'=myNode.getAttribute(''AnimationCode'',true).AttribValue;'#13#10'end;'#13#10
  +'function TXGPUCanvas.GetActive:Boolean;'#13#10'begin'#13#10'  result:=myStr'
  +'ToBool(myNode.getAttribute(''Active'',true).AttribValue);'#13#10'end;'#13#10
  +'function TXGPUCanvas.GetAnimated:Boolean;'#13#10'begin'#13#10'  result:=myS'
  +'trToBool(myNode.getAttribute(''Animated'',true).AttribValue);'#13#10'end;'
  +#13#10'//function TXGPUCanvas.GetFetchFrameOutput:Boolean;'#13#10'//begin'#13
  +#10'//  result:=myStrToBool(myNode.getAttribute(''FetchFrameOutput'',true).A'
  +'ttribValue);'#13#10'//end;'#13#10'function TXGPUCanvas.GetParamNumList:stri'
  +'ng;'#13#10'begin'#13#10'  result:=myNode.getAttribute(''ParamNumList'',true'
  +').AttribValue;'#13#10'end;'#13#10'function TXGPUCanvas.GetConstIntList:stri'
  +'ng;'#13#10'begin'#13#10'  result:=myNode.getAttribute(''ConstIntList'',true'
  +').AttribValue;'#13#10'end;'#13#10'function TXGPUCanvas.GetParamImgList:stri'
  +'ng;'#13#10'begin'#13#10'  result:=myNode.getAttribute(''ParamImgList'',true'
  +').AttribValue;'#13#10'end;'#13#10'function TXGPUCanvas.GetMaxIterations:int'
  +'eger;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAttribute(''MaxItera'
  +'tions'',true).AttribValue);'#13#10'end;'#13#10'function TXGPUCanvas.GetStar'
  +'tIteration:integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode.getAttrib'
  +'ute(''StartIteration'',true).AttribValue);'#13#10'end;'#13#10'function TXGP'
  +'UCanvas.GetNumFrames:integer;'#13#10'begin'#13#10'  result:=StrToInt(myNode'
  +'.getAttribute(''NumFrames'',true).AttribValue);'#13#10'end;'#13#10'function'
  +' TXGPUCanvas.GetMaxFramesPerSec:integer;'#13#10'begin'#13#10'  result:=StrT'
  +'oInt(myNode.getAttribute(''MaxFramesPerSec'',true).AttribValue);'#13#10'end'
  +';'#13#10'//function TXGPUCanvas.GetOutputArray:String;'#13#10'//begin'#13#10
  +'//  result:=myNode.getAttribute(''OutputArray'',true).AttribValue;'#13#10'/'
  +'/end;'#13#10'//function TXGPUCanvas.GetGPUStageArray:String;'#13#10'//begin'
  +#13#10'//  result:=myNode.getAttribute(''GPUStageArray'',true).AttribValue;'
  +#13#10'//end;'#13#10'function TXGPUCanvas.GetNumKernels:integer;'#13#10'begi'
  +'n'#13#10'  result:=StrToInt(myNode.getAttribute(''NumKernels'',true).Attrib'
  +'Value);'#13#10'end;'#13#10'function TXGPUCanvas.GetZDimension:integer;'#13
  +#10'begin'#13#10'  result:=StrToInt(myNode.getAttribute(''ZDimension'',true)'
  +'.AttribValue);'#13#10'end;'#13#10#13#10'function TXGPUCanvas.FullParamList:'
  +'String;'#13#10'var'#13#10'  plist:String;'#13#10'begin'#13#10'  plist:='''''
  +';'#13#10'  if self.ParamNumList<>'''' then plist:='',''+self.ParamNumList;'
  +#13#10' // if self.ParamIntList<>'''' then plist:=plist+'',''+self.ParamIntL'
  +'ist;'#13#10'  if self.ParamImgList<>'''' then plist:=plist+'',''+self.Param'
  +'ImgList;'#13#10'  result:=plist;'#13#10'end;'#13#10#13#10'function TXGPUCan'
  +'vas.GPUJSCode(AnimCode:TStringList):String;'#13#10'var'#13#10'  str,vstr,cm'
  +'a, plist, KName:String;'#13#10'  i,j,ZDim:integer;'#13#10'  vn:TNumArray;'
  +#13#10'  vi:TIntArray;'#13#10'  vb:TImgArray;'#13#10'  h,w,n:integer;'#13#10
  +'begin'#13#10'  //numKernels:=2;'#13#10'  if AnimCode.Count<1 then'#13#10'  '
  +'begin'#13#10'    showmessage(''Error: Unable to find any animation code blo'
  +'ck(s)'');'#13#10'    result:='''';'#13#10'    EXIT;'#13#10'  end;'#13#10'  '
  +'if AnimCode.Count<numKernels+1 then'#13#10'  begin'#13#10'    showmessage('
  +'''Error: Unable to find ''+inttostr(numKernels+1)+'' animation code blocks'
  +''');'#13#10'    result:='''';'#13#10'    EXIT;'#13#10'  end;'#13#10#13#10' '
  +' {$ifndef JScript}'#13#10'  h:=trunc(self.ActualHeight);'#13#10'  w:=trunc('
  +'self.ActualWidth);'#13#10'  //showmessage(''h=''+inttostr(h)+'' w=''+inttos'
  +'tr(w));'#13#10'  {$else}'#13#10'  asm'#13#10'    var ob=document.getElement'
  ,'ById(this.NameSpace+this.NodeName);'#13#10'    if (ob!=null) {'#13#10'     '
  +' var style = window.getComputedStyle(ob);'#13#10'      var hh = style.heigh'
  +'t;'#13#10'      h = parseInt(hh, 10);'#13#10'      var ww = style.width;'#13
  +#10'      w = parseInt(ww, 10);'#13#10'    }'#13#10'    else {h=301; w=301;}'
  +#13#10'    if (w==undefined) {w=302;}'#13#10'    if (h==undefined) {h=302;}'
  +#13#10'  end;'#13#10'  {$endif}'#13#10#13#10'  str:='#13#10'//  ''document.d'
  +'omain = "/abc"; '' + LineEnding'#13#10'  ''document.title = "''+myNode.Node'
  +'Name+'' ''+myNode.NodeType+''"; '' + LineEnding'#13#10'  +''/*/ -----------'
  +'------------------------- Initialise the GPU ------------------------------'
  +'---/*/ '' + LineEnding'#13#10'  +''     const ''+self.MyNode.NodeName+'' = '
  +'new GPU({mode: ''''gpu''''});   ''+LineEnding'#13#10'  +''     let running='
  +'true; ''+LineEnding;'#13#10'  str:= str + ''let outputArrayString = ''''[]'
  +''''';''+LineEnding;'#13#10#13#10'  str:= str + ''/*/ ----------------------'
  +'---------- Initialise Parameters List -------------------------/*/ '' + Lin'
  +'eEnding;'#13#10'  // Numeric parameters are 1-D arrays of values'#13#10'  f'
  +'or i:=0 to length(self.ParamNumArray)-1 do'#13#10'  begin'#13#10'    vn:=Pa'
  +'ramNumArray[i].ParamValue;'#13#10'    vstr:=''['';'#13#10'    for j:=0 to l'
  +'ength(vn)-1 do'#13#10'    begin'#13#10'      if j>0 then vstr:=vstr+'','';'
  +#13#10'      vstr:=vstr+floattostr(vn[j]);'#13#10'    end;'#13#10'    vstr:='
  +'vstr+'']'';'#13#10'    str:=str+''   let ''+ParamNumArray[i].ParamName+'' ='
  +' ''+vstr+'';'' +LineEnding;'#13#10'  end;'#13#10#13#10'  // Image parameter'
  +'s are 1-D arrays of values'#13#10'  for i:=0 to length(self.ParamImgArray)-'
  +'1 do'#13#10'  begin'#13#10'    vb:=ParamImgArray[i].ParamValue;'#13#10'    '
  +'vstr:=''['';'#13#10'    for j:=0 to length(vb)-1 do'#13#10'    begin'#13#10
  +'      if j>0 then vstr:=vstr+'','';'#13#10'      vstr:=vstr+vb[j];'#13#10' '
  +'   end;'#13#10'    vstr:=vstr+'']'';'#13#10'    str:=str+''   let ''+ParamI'
  +'mgArray[i].ParamName+'' = ''+vstr+'';'' +LineEnding;'#13#10'  end;'#13#10#13
  +#10#13#10'//  {$ifdef JScript}'#13#10'//  str:=str'#13#10'//  +''  function '
  +'PostMessageStageArray(objid, cval, stageArrayString) {''  + LineEnding'#13
  +#10'//  +''    window.parent.postMessage({"objid":objid,"mtype":"StageOutput'
  +'","stageArray":stageArrayString},"*"); '' + LineEnding;'#13#10'//  str:=str'
  +'+''}''+LineEnding;'#13#10'//  {$else}'#13#10'//  {$ifdef Chromium}'#13#10'/'
  +'/  //!! cef'#13#10'//  // cef.  write to console log to trigger a cef event'
  +'...'#13#10'//  str:=str'#13#10'//  +''  function PostMessageStageArray(obji'
  +'d, cval, stageArrayString) {''  + LineEnding'#13#10'////  +''   if (running'
  +') {console.log("''+myNode.NodeName+''S "+stageArrayString);}'' + LineEnding'
  +' ;'#13#10'//  +''   if (running) {console.log("''+myNode.NodeName+''S ");}'
  +''' + LineEnding ;'#13#10'//  str:=str+''}''+LineEnding;'#13#10'//  {$endif}'
  +#13#10'//  {$endif}'#13#10'//  if self.FetchFrameOutput = true then'#13#10'/'
  +'/  begin'#13#10'//    {$ifdef JScript}'#13#10'//    str:=str'#13#10'//    +'
  +'''  function PostMessageOutputArray(objid, cval) {''  + LineEnding'#13#10'/'
  +'/    +''    window.parent.postMessage({"objid":objid,"mtype":"FrameOutput",'
  +'"outputArray":outputArrayString},"*"); '' + LineEnding;'#13#10'//    str:=s'
  +'tr+''}''+LineEnding;'#13#10'//    {$else}'#13#10'//    {$ifdef Chromium}'#13
  +#10'    //!! cef'#13#10'    // cef.  write to console log to trigger a cef e'
  +'vent...'#13#10'    str:=str'#13#10'    +''function PostMessageOutputArray(o'
  +'bjid, cval) {''  + LineEnding'#13#10'    +''   var oa = document.getElement'
  +'ById("oarr");'' + LineEnding'#13#10'    +''   if (oa==null) {oa=document.cr'
  +'eateElement("DIV"); oa.id="oarr"; '' + LineEnding'#13#10'    +''     oa.sty'
  +'le.display="none";'' + LineEnding'#13#10'    +''     document.body.appendCh'
  +'ild(oa);}'' + LineEnding'#13#10'    +''   var sa = document.getElementById('
  +'"sarr");'' + LineEnding'#13#10'    +''   if (sa==null) {sa=document.createE'
  +'lement("DIV"); sa.id="sarr"; '' + LineEnding'#13#10'    +''     sa.style.di'
  +'splay="none";'' + LineEnding'#13#10'    +''     document.body.appendChild(s'
  +'a);}'' + LineEnding'#13#10'    +''   if (running) {oa.innerHTML=outputArray'
  +'String;'' + LineEnding'#13#10'    +''                 sa.innerHTML=JSON.str'
  +'ingify(stageArray);'' + LineEnding'#13#10'    {$ifndef JScript}'#13#10'    '
  +'{$ifdef Chromium}'#13#10'    +''                 console.log("''+myNode.Nod'
  +'eName+''O ");'' + LineEnding'#13#10'    {$endif}'#13#10'    {$else}'#13#10
  +'    +''    window.parent.postMessage({"objid":objid,"mtype":"FrameOutput","'
  +'outputArray":oa.innerHTML},"*"); '' + LineEnding;'#13#10'    if numKernels>'
  +'0 then'#13#10'      str:=str+''    window.parent.postMessage({"objid":objid'
  +',"mtype":"StageOutput","stageArray":sa.innerHTML},"*"); '' + LineEnding'#13
  +#10'    {$endif}'#13#10'    ;'#13#10'    str:=str+''} }''+LineEnding;'#13#10
  ,'//    {$endif}'#13#10'//    {$endif}'#13#10#13#10'//  end;'#13#10#13#10'  /'
  +'/ function GetTheArray - returns an array string - image of the canvas pixe'
  +'l colours [[r,g,b,a],....]'#13#10'  //     called from the FrameDone functi'
  +'on.'#13#10'//  if self.FetchFrameOutput=true then'#13#10'    str:=str+''  f'
  +'unction GetPixelArray(kernel) { '' + LineEnding'#13#10'    //+''return(kern'
  +'el.getPixels()); '' + LineEnding          // needs gpujs v2'#13#10#13#10'  '
  +'  +''const theImage = kernel.getCanvas();  '' + LineEnding'#13#10'    +''if'
  +' (theImage==null) {console.log("''+self.MyNode.NodeName+''BrowserCanvas is '
  +'null"); } '' + LineEnding'#13#10'    +''else { ''  + LineEnding'#13#10'    '
  +'//   +''  console.log(''''image height = ''''+theImage.height); '' + LineEn'
  +'ding'#13#10'    +''  tmpcanvas = document.createElement(''''canvas'''');  '
  +''' + LineEnding'#13#10'    +''  tmpcanvas.width=theImage.width;  '' + LineE'
  +'nding'#13#10'    +''  tmpcanvas.height=theImage.height;  '' + LineEnding'#13
  +#10'    +''  var ctx = tmpcanvas.getContext("2d");  '' + LineEnding'#13#10' '
  +'   +''  ctx.drawImage(theImage, 0, 0); '' + LineEnding'#13#10'    +''  if ('
  +'ctx==null) {console.log("Context is null"); } '' + LineEnding'#13#10'    +'
  +'''  else { ''  + LineEnding'#13#10'    +''    var  theImageData = ctx.getIm'
  +'ageData(0,0,theImage.width,theImage.height);'' + LineEnding'#13#10'    //  '
  +' +''    console.log("theImageData="+theImageData.data);'' + LineEnding'#13
  +#10'    //   +''    console.log("height="+theImage.height+" width="+theImage'
  +'.width+" length="+theImageData.data.length);'' + LineEnding'#13#10'    +'' '
  +'   var arrayString = "["; '' + LineEnding'#13#10'    +''    for (var h=0; h'
  +'<theImage.height; h++) '' + LineEnding'#13#10'    +''    {   '' + LineEndin'
  +'g'#13#10'    +''      if (h>0) { arrayString = arrayString + ","; }'' + Lin'
  +'eEnding'#13#10'    +''      var arrayString = arrayString + "["; '' + LineE'
  +'nding'#13#10'    +''      for (var w=0; w<theImage.width; w++) '' + LineEnd'
  +'ing'#13#10'    +''      {   '' + LineEnding'#13#10'    +''        // note t'
  +'he pixel colours cycle around in groups of four '' + LineEnding'#13#10'    '
  +'+''          var i=(h*theImage.width*4)+(w*4); '' + LineEnding'#13#10'    +'
  +'''          var red = theImageData.data[i];  '' + LineEnding'#13#10'    +'''
  +'          var green = theImageData.data[i+1]; '' + LineEnding'#13#10'    +'
  +'''          var blue = theImageData.data[i+2];  '' + LineEnding'#13#10'    '
  +'+''          var alpha = theImageData.data[i+3]; '' + LineEnding'#13#10'   '
  +' +''          if (w>0) { arrayString = arrayString + ","; }'' + LineEnding'
  +#13#10'    +''          arrayString = arrayString + "[" + red + "," + green '
  +'+ "," + blue + "," + alpha + "]";'' + LineEnding'#13#10'    +''      }   '''
  +' + LineEnding'#13#10'    +''      arrayString = arrayString + "]"; '' + Lin'
  +'eEnding'#13#10'    +''    }   '' + LineEnding'#13#10'    +''    tmpcanvas.r'
  +'emove(); '' + LineEnding'#13#10'    +''    arrayString = arrayString + "]";'
  +' '' + LineEnding'#13#10'    +''    return(arrayString); '' + LineEnding'#13
  +#10'    +''  }'' + LineEnding'#13#10'    +''  }'' + LineEnding'#13#10'    +'
  +'''}'';'#13#10#13#10#13#10'  plist:=self.FullParamList;'#13#10'  KName:=self'
  +'.MyNode.NodeName+''CanvasRenderFn'';'#13#10'  ZDim:=self.ZDimension;'#13#10
  +#13#10'  // Create the required set of non-graphical kernels.'#13#10'  // Al'
  +'l these kernels operate with the same set of parameters.'#13#10'  for n:=0 '
  +'to numKernels-1 do'#13#10'  begin'#13#10'    str:=str'#13#10'    +''     /*'
  +'/------------ start of create Kernel routine -------/*/ '' + LineEnding'#13
  +#10'    +''     const ''+KName+inttostr(n)+'' = ''+self.MyNode.NodeName+''.c'
  +'reateKernel(function(myArray,AnimationCounterValue''+plist'#13#10'    +'') '
  +'{ '' + LineEnding;'#13#10'    str:=str + ''var myValue=0.0;'' + LineEnding;'
  +#13#10'    str:=str + AnimCode[n+1];'#13#10'    str:=str + ''return myValue;'
  +''' + LineEnding;         // this goes into the relevant x,y position in out'
  +'putArray'#13#10'    str:= str'#13#10'    +''     })  ''+LineEnding'#13#10' '
  +'   +''  /*/------- end of create Kernel routine ---------------/*/ '' + Lin'
  +'eEnding'#13#10'    +''       .setOutput([''+intToStr(w)+'',''+ intToStr(h)+'
  +''',''+inttostr(ZDim)+'']) '' + LineEnding   // 3-D output'#13#10' //   +'' '
  +'      .setOutput([3,2])              '' + LineEnding'#13#10'    +''       .'
  +'setGraphical(false)                                         '' + LineEnding'
  +';'#13#10'    // integer parameters are loaded as constants'#13#10'    if le'
  +'ngth(self.ConstIntArray)>0 then'#13#10'    begin'#13#10'      str:=str'#13
  +#10'      +''       .setConstants({'';'#13#10'      for i:=0 to length(self.'
  +'ConstIntArray)-1 do'#13#10'      begin'#13#10'        if i>0 then str:=str+'
  +''', '';'#13#10'        str:=str'#13#10'        +self.ConstIntArray[i].Const'
  +'Name+'': ''+inttostr(self.ConstIntArray[i].ConstValue);'#13#10'      end;'
  ,#13#10'      str:=str'#13#10'      +''       }); '' + LineEnding;'#13#10'   '
  +' end;'#13#10#13#10'  end;'#13#10#13#10'//.......... Create a final Kernel ('
  +'Graphical) ..............'#13#10'str:=str'#13#10'+''     /*/------------ st'
  +'art of create Kernel routine -------/*/ '' + LineEnding'#13#10'+''     cons'
  +'t ''+KName+''G = ''+self.MyNode.NodeName+''.createKernel(function(myArray,A'
  +'nimationCounterValue''+plist'#13#10'+'') { '' + LineEnding'#13#10'+''      '
  +' var r = 0  ;      '' + LineEnding'#13#10'+''       var g = 0  ; /*/--inita'
  +'lise the default colour for the GPUCanvas pixel in r,g,b,a format --/*/  '''
  +' + LineEnding'#13#10'+''       var b = 0  ;   '' + LineEnding'#13#10'+''   '
  +'    var a = 1  ;  '' + LineEnding;'#13#10'str:=str + AnimCode[0];'#13#10'st'
  +'r:= str'#13#10'+''             this.color((r),(g),(b),(a));        '' + Lin'
  +'eEnding'#13#10'+''     })  ''+LineEnding'#13#10'+''  /*/------- end of crea'
  +'te Kernel routine ---------------/*/ '' + LineEnding'#13#10'+''       .setO'
  +'utput([''+intToStr(w)+'',''+ intToStr(h)+''])              '' + LineEnding'
  +#13#10'+''       .setLoopMaxIterations([''+IntToStr(self.MaxIterations)+''])'
  +'   '' + LineEnding'#13#10'+''       .setGraphical(true)                    '
  +'                     '' + LineEnding;'#13#10'// integer parameters are load'
  +'ed as constants'#13#10'if length(self.ConstIntArray)>0 then'#13#10'begin'#13
  +#10'  str:=str'#13#10'  +''       .setConstants({'';'#13#10'  for i:=0 to le'
  +'ngth(self.ConstIntArray)-1 do'#13#10'  begin'#13#10'    if i>0 then str:=st'
  +'r+'', '';'#13#10'    str:=str'#13#10'    +self.ConstIntArray[i].ConstName+'
  +''': ''+inttostr(self.ConstIntArray[i].ConstValue);'#13#10'  end;'#13#10'  s'
  +'tr:=str'#13#10'  +''       }); '' + LineEnding;'#13#10'end;'#13#10#13#10#13
  +#10'  str:=str'#13#10'  +''     /*/-------------------Run the nested Kernel '
  +'codes ----------------------/*/    '' + LineEnding'#13#10'  +''     let Ani'
  +'mationCounterValue=''+IntToStr(self.StartIteration)+''; ''                 '
  +'                        +LineEnding'#13#10'  +''     let AnimationCounterMa'
  +'x=''+IntToStr(self.MaxIterations)+''; ''                                   '
  +'      +LineEnding;'#13#10#13#10'//  str:=str'#13#10'//  +'' let dummyArray='
  +'[[0,1,2],[3,4,5]]; ''+LineEnding;'#13#10#13#10'//combineKernels(k,k,...,las'
  +'tKernel,combinedKernel)'#13#10'  if numKernels>0 then'#13#10'  begin'#13#10
  +'    str:=str'#13#10'    +''     const superKernel = ''+self.MyNode.NodeName'
  +'+''.combineKernels(''+LineEnding;'#13#10#13#10'    for n:=0 to numKernels-1'
  +' do'#13#10'    begin'#13#10'      str:=str'#13#10'      +''                '
  +'                     ''+KName+inttostr(n)'#13#10'      +'', '';'#13#10'    '
  +'  str:=str+LineEnding;'#13#10'    end;'#13#10'    str:=str'#13#10'      +'''
  +'                                     function(myArray,AnimationCounterValue'
  +'''+plist+'') {''+LineEnding'#13#10'      +''                               '
  +'       var rslt=''+LineEnding;'#13#10'    for n:=numKernels-1 downto 0 do'
  +#13#10'    begin'#13#10'      str:=str'#13#10'      +KName+inttostr(n)+''( '
  +'''+LineEnding;'#13#10'      if n=0 then'#13#10'        str:=str+''myArray,'
  +''';'#13#10'    end;'#13#10'    for n:=0 to numKernels-1 do'#13#10'    begin'
  +#13#10'      str:=str'#13#10'      +''AnimationCounterValue''+plist+'')''+Li'
  +'neEnding;'#13#10'      if n<numKernels-1 then'#13#10'        str:=str+'','''
  +#13#10'      else'#13#10'        str:=str+'';'';'#13#10'    end;'#13#10'    '
  +'str:=str'#13#10'//    +''                                                  '
  +'       AnimationCounterValue''+plist+'');''+LineEnding'#13#10'    +''      '
  +'return rslt;                                 });''+LineEnding;'#13#10'  end'
  +';'#13#10#13#10'  // Initialise the stageArray...   [array of array of real]'
  +#13#10'str:=str'#13#10'+''     let stageArray=[];   ''+LineEnding'#13#10'+'''
  +'     for (var z=0; z<''+inttostr(ZDim)+''; z++) {  ''+LineEnding'#13#10'+'''
  +'       var newZ=[];  ''+LineEnding'#13#10'+''       for (var i=0; i<''+intT'
  +'oStr(h)+''; i++)   ''+LineEnding'#13#10'+''       {  ''+LineEnding'#13#10'+'
  +'''         var newrow=[];  ''+LineEnding'#13#10'+''         for (var j=0; j'
  +'<''+intToStr(w)+''; j++) {  ''+LineEnding'#13#10'+''           newrow.push('
  +'0.0);  ''+LineEnding'#13#10'+''           }  ''+LineEnding'#13#10'+''      '
  +'   newZ.push(newrow);  ''+LineEnding'#13#10'+''       }  ''+LineEnding'#13
  +#10'+''       stageArray.push(newZ);  ''+LineEnding'#13#10'+''     }  ''+Lin'
  +'eEnding;'#13#10#13#10'  // Run the combined non-graphical kernels...'#13#10
  +'  if numKernels>0 then'#13#10'    str:=str'#13#10'    +''     stageArray = '
  +'superKernel(stageArray,AnimationCounterValue''+plist+'');  ''+LineEnding'#13
  +#10'//    +''     PostMessageStageArray("''+myNode.NodeName+''",AnimationCou'
  +'nterValue,JSON.stringify(stageArray));'' + LineEnding'#13#10'    ;'#13#10#13
  +#10'  str:=str'#13#10'  +''     /*/-------------------Run the Graphical Kern'
  ,'el code and place it on the web page----------------------/*/    '' + LineE'
  +'nding'#13#10'  +''     ''+KName+''G(stageArray,AnimationCounterValue''+plis'
  +'t+'');               '' + LineEnding;'#13#10'//  if self.FetchFrameOutput=t'
  +'rue then'#13#10'    str:=str'#13#10'    +''    outputArrayString = GetPixel'
  +'Array(''+self.MyNode.NodeName+''CanvasRenderFnG); '' + LineEnding'#13#10'  '
  +'  +''    PostMessageOutputArray("''+myNode.NodeName+''",AnimationCounterVal'
  +'ue);'' + LineEnding;'#13#10#13#10'  // Put the GPU bitmap on the page...'#13
  +#10'  str:=str'#13#10'  +''     var ''+self.MyNode.NodeName+''BrowserCanvas '
  +'= ''+self.MyNode.NodeName+''CanvasRenderFnG.getCanvas();  '' + LineEnding'
  +#13#10'//  +''     let ''+self.MyNode.NodeName+''BrowserCanvas = ''+self.MyN'
  +'ode.NodeName+''CanvasRenderFnG.canvas;  '' + LineEnding     // works in gpu'
  +'js v2'#13#10'  +''     ''+self.MyNode.NodeName+''BrowserCanvas.height = ''+'
  +'intToStr(h)+'';  '' + LineEnding'#13#10'  +''     document.getElementsByTag'
  +'Name("body")[0].appendChild(''+self.MyNode.NodeName+''BrowserCanvas);     '
  +''' + LineEnding ;'#13#10#13#10'  str:=str'#13#10'  +''  function GetMessage'
  +'(msg) {''  + LineEnding'#13#10'  +''    alert("msg="+msg);  ''  + LineEndin'
  +'g'#13#10'  +''}''  + LineEnding ;'#13#10#13#10'  str:=str'#13#10'  +''  fun'
  +'ction RunCode(theCode) {''  + LineEnding'#13#10'  +''    eval(theCode);  '''
  +'  + LineEnding'#13#10'  +''}''  + LineEnding ;'#13#10#13#10'  {$ifdef JScri'
  +'pt}'#13#10'//    // handle an inbound message of format:{"objid":<id>, "mty'
  +'pe":"SetParam", "pName":<pName>, "pValue":<pValue>}'#13#10'    str:=str'#13
  +#10'    +''  window.addEventListener("message", function(ev) { ''+Lineending'
  +#13#10'                + ''if (ev.data.objid!=undefined) { ''  +LineEnding'
  +#13#10'//                + ''  console.log("handle GPU inbound message "+ev.'
  +'data.objid+"  "+ev.data.mtype); ''+LineEnding'#13#10'                + ''  '
  +'if (ev.data.mtype=="SetNumParam") {    ''+lineEnding'#13#10'//             '
  +'    + ''  console.log(ev.data.pName+"=["+ev.data.pValue.toString()+"];"); '
  +'''+LineEnding'#13#10'                + ''    try {   ''+lineEnding'#13#10' '
  +'               + ''      eval(ev.data.pName+"=["+ev.data.pValue.toString()+'
  +'"];");  ''+lineEnding'#13#10'                + ''     }catch(err){alert(err'
  +'.message);}  ''+lineEnding'#13#10'                + ''  } ''+LineEnding'#13
  +#10'                + ''  if (ev.data.mtype=="execCode") {    ''+lineEnding'
  +#13#10'//                + ''  console.log("handle execCode message "+ev.dat'
  +'a.code); ''+LineEnding'#13#10'                + ''    try {   ''+lineEnding'
  +#13#10'                + ''      eval(ev.data.code);  ''+lineEnding'#13#10' '
  +'               + ''     }catch(err){alert(err.message);}  ''+lineEnding'#13
  +#10'                + ''  } ''+LineEnding'#13#10'                + ''} ''+li'
  +'neEnding'#13#10'              + ''} );''  +LineEnding;'#13#10'  {$endif}'#13
  +#10#13#10'//EditAttributeValue(''XMemo1'','''',''ItemValue'',str);        //'
  +'!!!! temporary for debugging'#13#10#13#10'result:=str;'#13#10#13#10#13#10#13
  +#10'end;'#13#10#13#10'procedure SetOutputArrayValue(NodeName:String;AValue:S'
  +'tring);'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'//  {$ifd'
  +'ef JScript}'#13#10'//  asm'#13#10'//  console.log(''SetOutputArrayValue ''+'
  +'NodeName+'' ''+AValue);'#13#10'//  //console.log(''SetOutputArrayValue ''+N'
  +'odeName);'#13#10'//  end;'#13#10'//  {$endif}'#13#10'  // set the property '
  +'value for the relevant XGPUCanvas object'#13#10'  myNode:=FindDataNodeById('
  +'SystemNodeTree,NodeName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  b'
  +'egin'#13#10'//    myNode.SetAttributeValue(''OutputArray'',AValue);'#13#10
  +'    {$ifndef JScript}'#13#10'    TXGPUCanvas(myNode.ScreenObject).GPUOutput'
  +'String:=AValue;'#13#10'    {$else}'#13#10'    TXGPUCanvas(myNode).GPUOutput'
  +'String:=AValue;'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10
  +'procedure SetStageArrayValue(NodeName:String;AValue:String);'#13#10'var'#13
  +#10'  myNode:TDataNode;'#13#10'begin'#13#10'  //{$ifdef JScript}'#13#10'  //'
  +'asm'#13#10'  //console.log(''SetStageArrayValue ''+NodeName+'' ''+AValue);'
  +#13#10'  //console.log(''SetStageArrayValue ''+NodeName);'#13#10'  //end;'#13
  +#10'  //{$endif}'#13#10'  // set the property value for the relevant XGPUCan'
  +'vas object'#13#10'  myNode:=FindDataNodeById(SystemNodeTree,NodeName,'''',t'
  +'rue);'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10'//    myNode.SetAt'
  +'tributeValue(''GPUStageArray'',AValue);'#13#10'    {$ifndef JScript}'#13#10
  +'    TXGPUCanvas(myNode.ScreenObject).GPUStageString:=AValue;'#13#10'    {$e'
  +'lse}'#13#10'    TXGPUCanvas(myNode).GPUStageString:=AValue;'#13#10'    {$en'
  +'dif}'#13#10'  end;'#13#10'end;'#13#10#13#10'function GetOutputArrayValue(No'
  +'deName:String):T3DNumArray;'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'be'
  +'gin'#13#10'  result:=nil;'#13#10'  myNode:=FindDataNodeById(SystemNodeTree,'
  ,'NodeName,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10'   '
  +' {$ifndef JScript}'#13#10'    {$ifdef Chromium}'#13#10'    TXGPUCanvas(myNo'
  +'de.ScreenObject).GPUOutputArray:=JSONStringTo3DNumArray(TXGPUCanvas(myNode.'
  +'ScreenObject).GPUOutputString);'#13#10'    result:=TXGPUCanvas(myNode.Scree'
  +'nObject).GPUOutputArray;'#13#10'    {$else}'#13#10'    TXGPUCanvas(myNode.S'
  +'creenObject).GPUOutputArray:=JSONStringTo3DNumArray(TXGPUCanvas(myNode.Scre'
  +'enObject).GPUOutputString);'#13#10'    result:=TXGPUCanvas(myNode.ScreenObj'
  +'ect).GPUOutputArray;'#13#10'    {$endif}'#13#10'    {$else}'#13#10'    TXGP'
  +'UCanvas(myNode.ScreenObject).GPUOutputArray:=JSONStringTo3DNumArray(TXGPUCa'
  +'nvas(myNode.ScreenObject).GPUOutputString);'#13#10'    result:=TXGPUCanvas('
  +'myNode).GPUOutputArray;'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'function GetOutputArrayString(NodeName:String):String;'#13#10'var'#13
  +#10'  myNode:TDataNode;'#13#10'begin'#13#10'  result:='''';'#13#10'  myNode:'
  +'=FindDataNodeById(SystemNodeTree,NodeName,'''',true);'#13#10'  if myNode<>n'
  +'il then'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'    {$ifdef Chro'
  +'mium}'#13#10'    result:=TXGPUCanvas(myNode.ScreenObject).GPUOutputString;'
  +#13#10'    {$else}'#13#10'    result:=TXGPUCanvas(myNode.ScreenObject).GPUOu'
  +'tputString;'#13#10'    {$endif}'#13#10'    {$else}'#13#10'    result:=TXGPU'
  +'Canvas(myNode).GPUOutputString;'#13#10'    {$endif}'#13#10'  end;'#13#10'en'
  +'d;'#13#10#13#10'function GetStageArrayValue(NodeName:String):T3DNumArray;'
  +#13#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'#13#10'  result:=nil;'#13
  +#10'  myNode:=FindDataNodeById(SystemNodeTree,NodeName,'''',true);'#13#10'  '
  +'if myNode<>nil then'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'    '
  +'{$ifdef Chromium}'#13#10'    TXGPUCanvas(myNode.ScreenObject).GPUStageArray'
  +':=JSONStringTo3DNumArray(TXGPUCanvas(myNode.ScreenObject).GPUStageString);'
  +#13#10'    result:=TXGPUCanvas(myNode.ScreenObject).GPUStageArray;'#13#10'  '
  +'  {$else}'#13#10'    TXGPUCanvas(myNode.ScreenObject).GPUStageArray:=JSONSt'
  +'ringTo3DNumArray(TXGPUCanvas(myNode.ScreenObject).GPUStageString);'#13#10' '
  +'   result:=TXGPUCanvas(myNode.ScreenObject).GPUStageArray;'#13#10'    {$end'
  +'if}'#13#10'    {$else}'#13#10'    TXGPUCanvas(myNode.ScreenObject).GPUStage'
  +'Array:=JSONStringTo3DNumArray(TXGPUCanvas(myNode.ScreenObject).GPUStageStri'
  +'ng);'#13#10'    result:=TXGPUCanvas(myNode).GPUStageArray;'#13#10'    {$end'
  +'if}'#13#10'  end;'#13#10'end;'#13#10#13#10'function GetStageArrayString(Nod'
  +'eName:String):String;'#13#10'var'#13#10'  myNode:TDataNode;'#13#10'begin'#13
  +#10'  result:='''';'#13#10'  myNode:=FindDataNodeById(SystemNodeTree,NodeNam'
  +'e,'''',true);'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10'    {$ifnd'
  +'ef JScript}'#13#10'    {$ifdef Chromium}'#13#10'    result:=TXGPUCanvas(myN'
  +'ode.ScreenObject).GPUStageString;'#13#10'    {$else}'#13#10'    result:=TXG'
  +'PUCanvas(myNode.ScreenObject).GPUStageString;'#13#10'    {$endif}'#13#10'  '
  +'  {$else}'#13#10'    result:=TXGPUCanvas(myNode).GPUStageString;'#13#10'   '
  +' {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10'function GetParam(NodeName'
  +':String; pindex:integer):Float;'#13#10'begin'#13#10'  showMessage(''GetPara'
  +'m'');'#13#10'  result:=0;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.GPU'
  +'JSAnimationFooter:String;'#13#10'// This code is added only if the ''Animat'
  +'ed'' property is true...'#13#10'var'#13#10'  str,cma,plist:String;'#13#10'b'
  +'egin'#13#10#13#10'  plist:=self.FullParamList;'#13#10#13#10'  str:=''/*/---'
  +'--------------- Now Animate the Graphics ----------------------------------'
  +'--------------/*/'' + LineEnding;'#13#10#13#10#13#10'// The FrameDone funct'
  +'ion is called after each animation frame is finished.'#13#10'// It is an as'
  +'ync function, so that inbound messages are picked up,'#13#10'// and we can '
  +'use postMessage, eg. for passing'#13#10'// values back out from the IFrame '
  +'into the project environment.'#13#10'  str:=str'#13#10'  +''  function Fram'
  +'eDone(kernel) {''  + LineEnding;'#13#10'//  if self.FetchFrameOutput=true t'
  +'hen'#13#10'//  begin'#13#10'    str:=str+''    if (running) {outputArrayStr'
  +'ing = GetPixelArray(kernel); '' + LineEnding'#13#10'            +''    Post'
  +'MessageOutputArray("''+myNode.NodeName+''",AnimationCounterValue);}'' + Lin'
  +'eEnding;'#13#10'//  end;'#13#10'  str:=str+''    return new Promise(resolve'
  +' => { ''  + LineEnding'#13#10'  +''  }); } ''+ LineEnding;'#13#10#13#10'   '
  +' str:=str'#13#10'   +''  async function DoFrame() {  ''  + LineEnding;'#13
  +#10'   if numKernels>0 then'#13#10'   str:=str'#13#10'   +''            stag'
  +'eArray=superKernel(stageArray,AnimationCounterValue''+plist+'');  ''+LineEn'
  +'ding'#13#10'//   +''            PostMessageStageArray("''+myNode.NodeName+'
  +'''",AnimationCounterValue,JSON.stringify(stageArray));'' + LineEnding'#13#10
  +'   ;'#13#10'   str:=str'#13#10'   +''           ''+self.MyNode.NodeName+''C'
  ,'anvasRenderFnG(stageArray,AnimationCounterValue''+plist+''); '' + LineEndin'
  +'g'#13#10'//   +''updateTheCanvas();  ''+LineEnding'#13#10'   +''           '
  +' AnimationCounterValue = AnimationCounterValue +1; ''  + LineEnding'#13#10
  +'   +''            if (AnimationCounterValue > AnimationCounterMax) {Animati'
  +'onCounterValue = 0};  ''  + LineEnding'#13#10'   +''            var xx = aw'
  +'ait FrameDone(''+self.MyNode.NodeName+''CanvasRenderFnG) ; ''  + LineEnding'
  +#13#10'   +''  } ''  + LineEnding;'#13#10#13#10'   str:=str'#13#10'   +''  v'
  +'ar AnimationFrameID;  ''  + LineEnding'#13#10'   +''  var GPUIntervalRunner'
  +';  ''  + LineEnding'#13#10'   +''  function animate(timestamp){  ''  + Line'
  +'Ending'#13#10'   +''    GPUIntervalRunner=setInterval(DoFrame, 1000/''+IntT'
  +'oStr(self.MaxFramesPerSec)+''); '' + LineEnding'#13#10'   +''    } ''  + Li'
  +'neEnding'#13#10'   +''  AnimationFrameID=requestAnimationFrame(animate) ; '
  +'''  + LineEnding;'#13#10#13#10'  result:=str;'#13#10'end;'#13#10#13#10'func'
  +'tion TXGPUCanvas.FetchAllAnimCode:TAnimCodeArray;'#13#10'var'#13#10'  allco'
  +'de:TAnimCodeArray;'#13#10'  bits:TStringList;'#13#10'  n:integer;'#13#10'  '
  +'RevisedAnimCode:String;'#13#10'begin'#13#10'  setlength(allcode,numKernels+'
  +'1);'#13#10'  bits:= stringsplit(self.AnimationCode,eventListdelimiter);'#13
  +#10#13#10'//  if bits.Count>numKernels+1 then'#13#10'//  begin'#13#10'//    '
  +'showmessage(''Warning: GPUCanvas ''+self.myNode.NodeName+'' expected ''+int'
  +'tostr(numKernels+1)+'' code blocks, found ''+inttostr(bits.count));'#13#10
  +'//    for n:=0 to bits.count-1 do'#13#10'//      showmessage(bits[n]);'#13
  +#10'//  end;'#13#10'  for n:=0 to bits.count-1 do'#13#10'  begin'#13#10'    '
  +'if length(allcode)<=n then'#13#10'      setlength(allcode,n+1);'#13#10'    '
  +'allcode[n]:=TStringList.Create;'#13#10'    allcode[n].Text:=bits[n];'#13#10
  +'  end;'#13#10'  // Add Empty code blocks for missing stages (number of code'
  +' blocks == numKernels+1)'#13#10'  for n:=bits.Count to numKernels do'#13#10
  +'  begin'#13#10'    allcode[n]:=TStringList.Create;'#13#10'    allcode[n].Te'
  +'xt:=''//Kernel ''+inttostr(n)+LineEnding'#13#10'      +''begin''+LineEnding'
  +#13#10'      +''end;''+LineEnding;'#13#10'  end;'#13#10'  for n:=0 to numKer'
  +'nels do'#13#10'  begin'#13#10'    if n>0 then RevisedAnimCode:=RevisedAnimC'
  +'ode + eventListdelimiter;'#13#10'    RevisedAnimCode:=RevisedAnimCode + all'
  +'code[n].Text;'#13#10'  end;'#13#10'  self.myNode.SetAttributeValue(''Animat'
  +'ionCode'',RevisedAnimCode);'#13#10'  result:=allcode;'#13#10'end;'#13#10#13
  +#10'function TXGPUCanvas.BuildPascalAnimationUnit(Compiler:TObject):String;'
  +#13#10'// Wrap the user-supplied code from the AnimationCode property in a u'
  +'nit, for compilation to JavaScript by pas2js.'#13#10'var'#13#10'  PascalHea'
  +'der:TStringList;'#13#10'  UserCodeParameterList:String;'#13#10'  AllAnimati'
  +'onCode:TAnimCodeArray;'#13#10'  TheAnimationCode:TStringList;'#13#10'  vstr'
  +':String;'#13#10'  v:TNumArray;'#13#10'  i,j,n:integer;'#13#10'begin'#13#10
  +'  PascalHeader:=TStringList.Create;'#13#10'  PascalHeader.Add('' unit GPUCo'
  +'de; '');'#13#10'  PascalHeader.Add(''interface'');'#13#10'  PascalHeader.Ad'
  +'d(''uses Classes, SysUtils, Math;'');'#13#10'  PascalHeader.Add('' type '')'
  +';'#13#10'  PascalHeader.Add(''     TNumArray = array of real;'');'#13#10' /'
  +'/ PascalHeader.Add(''     T3DNumArray = array of array of array of real;'')'
  +';'#13#10'  PascalHeader.Add(''     TImgArray = array of string;'');'#13#10
  +'  PascalHeader.Add(''     TConstantsRecord=record'');'#13#10'  for i:=0 to '
  +'length(self.ConstIntArray)-1 do'#13#10'  begin'#13#10'   PascalHeader.Add('
  +'''       const ''+self.ConstIntArray[i].ConstName+'':integer=''+inttostr(se'
  +'lf.ConstIntArray[i].ConstValue)+'';'');'#13#10'  end;'#13#10'  PascalHeader'
  +'.Add(''     end;'');'#13#10'  PascalHeader.Add(''     TXThread = record'#9
  +''');'#13#10'  PascalHeader.Add(''       x,y,z:integer;'#9''');'#13#10'  Pas'
  +'calHeader.Add(''     end;'#9''');'#13#10'  PascalHeader.Add(''     TGPUThre'
  +'ad = class'#9''');'#13#10'  PascalHeader.Add(''        thread:TXThread;'#9
  +''');'#13#10'  PascalHeader.Add(''        constants:TConstantsRecord;     '#9
  +''');'#13#10'  PascalHeader.Add(''        procedure color(r,g,b,a:real); vir'
  +'tual; abstract;'#9''');'#13#10'  PascalHeader.Add(''     end;'#9''');'#13#10
  +'  PascalHeader.Add(''     TFuncNotSupported = record'#9''');'#13#10'  Pasca'
  +'lHeader.Add(''          dummy:string; '#9''');'#13#10'  PascalHeader.Add('''
  +'     end;'#9''');'#13#10'  PascalHeader.Add(''   implementation'#9''');'#13
  +#10'   PascalHeader.Add(''   function chr(b:TFuncNotSupported):TFuncNotSuppo'
  +'rted;'#9''');'#13#10'  PascalHeader.Add(''   begin'#9''');'#13#10'  PascalH'
  +'eader.Add(''   end;'#9''');'#13#10'  PascalHeader.Add(''   function Ord(  X'
  +': TFuncNotSupported):TFuncNotSupported;'#9''');'#13#10'  PascalHeader.Add('
  +'''   begin'#9''');'#13#10'  PascalHeader.Add(''   end;'#9''');'#13#10'  Pas'
  ,'calHeader.Add(''   function pred( X: TFuncNotSupported):TFuncNotSupported;'
  +#9''');'#13#10'  PascalHeader.Add(''   begin'#9''');'#13#10'  PascalHeader.A'
  +'dd(''   end;'#9''');'#13#10'  PascalHeader.Add(''   function Succ( X: TFunc'
  +'NotSupported):TFuncNotSupported;'#9''');'#13#10'  PascalHeader.Add(''   beg'
  +'in'#9''');'#13#10'  PascalHeader.Add(''   end;'#9''');'#13#10'  PascalHeade'
  +'r.Add(''   function tan(d: TFuncNotSupported):TFuncNotSupported;'#9''');'#13
  +#10'  PascalHeader.Add(''   begin'#9''');'#13#10'  PascalHeader.Add(''   end'
  +';'#9''');'#13#10'  PascalHeader.Add(''   function sqr(d: TFuncNotSupported)'
  +':TFuncNotSupported;'#9''');'#13#10'  PascalHeader.Add(''   begin'#9''');'#13
  +#10'  PascalHeader.Add(''   end;'#9''');'#13#10'  PascalHeader.Add(''   '#9
  +''');'#13#10#13#10'  PascalHeader.Add(''// -------------- Declare Parameters'
  +' List (for compilation) ---------- '');'#13#10'  for i:=0 to length(self.Pa'
  +'ramNumArray)-1 do'#13#10'  begin'#13#10'    PascalHeader.Add(''   var ''+Pa'
  +'ramNumArray[i].ParamName+'':TNumArray;'');'#13#10'  end;'#13#10'  for i:=0 '
  +'to length(self.ParamImgArray)-1 do'#13#10'  begin'#13#10'    PascalHeader.A'
  +'dd(''   var ''+ParamImgArray[i].ParamName+'':TImgArray;'');'#13#10'  end;'
  +#13#10'  PascalHeader.Add(''   var  this:TGPUThread;'');'#13#10'  PascalHead'
  +'er.Add(''   type  T2DArray=Array of Array of real;'');'#13#10'  PascalHeade'
  +'r.Add(''   type  TmyArray=Array of T2DArray;'');'#13#10'  PascalHeader.Add('
  +'''   var  myArray:TMyArray;'');'#13#10'  PascalHeader.Add(''   var  myValue'
  +':real;'');'#13#10#13#10'  PascalHeader.Add(''   procedure PascalVersionOfGP'
  +'UCode(AnimationCounterValue:integer'');'#13#10'  if UserCodeParameterList<>'
  +''''' then'#13#10'    PascalHeader.Add('';''+UserCodeParameterList);'#13#10
  +'  PascalHeader.Add('');'#9''');'#13#10#13#10'  PascalHeader.Add('' var     '
  +'  r,g,b,a:real;'');'#13#10'//  PascalHeader.Add(''        kkkkk:integer;'')'
  +';'#13#10'  PascalHeader.Add(''        zzzzz1:integer;'') ;          // used'
  +' as position marker in resulting JS script'#13#10'  //.............. user c'
  +'ode block goes here .................'#13#10'  TheAnimationCode:=TStringLis'
  +'t.Create;'#13#10#13#10'  AllAnimationCode:=self.FetchAllAnimCode;'#13#10#13
  +#10' // TheAnimationCode.Text:=self.AnimationCode;'#13#10'  for n:=0 to leng'
  +'th(AllAnimationCode)-1 do'#13#10'  begin'#13#10'    if n=0 then'#13#10'    '
  +'  PascalHeader.Add(''var kkkkk''+inttostr(n)+'':integer;'')'#13#10'    else'
  +#13#10'      PascalHeader.Add(''procedure kkkkk''+inttostr(n)+'';'');'#13#10
  +'    TheAnimationCode.Text:=AllAnimationCode[n].Text;'#13#10'    WriteIncFil'
  +'e(Compiler,myNode.NodeName+''.''+inttostr(n),'''',''tempinc/'',PascalHeader'
  +',TheAnimationCode);'#13#10'  end;'#13#10'  //..............................'
  +'............................'#13#10'  PascalHeader.Add(''var zzzzz2:integer'
  +';'');              // used as position marker in resulting JS script'#13#10
  +#13#10#13#10'  PascalHeader.Add(''begin'');'#13#10'  PascalHeader.Add(''end.'
  +''');'#13#10#13#10'  //showmessage(PascalHeader.Text);'#13#10#13#10'  result'
  +':=PascalHeader.Text;'#13#10'end;'#13#10#13#10#13#10'function TXGPUCanvas.Co'
  +'mpileGPUToJS(var GPUJSOutput:String):Boolean;'#13#10'var'#13#10'  ProgPath,'
  +' PasFileName,ObjectFileName,ExeFileName:String;'#13#10'  UnitString:String;'
  +#13#10'  Res,ok:Boolean;'#13#10'  args:TStringList;'#13#10'  prog:TStringLis'
  +'t;'#13#10'  {$ifdef JScript}'#13#10'  lWebFS : TPas2JSWebFS;'#13#10'  {$end'
  +'if}'#13#10'begin'#13#10#13#10#13#10'  {$ifndef JScript}'#13#10'  UnitString'
  +':=BuildPascalAnimationUnit(nil);'#13#10#13#10'  ProgPath:=ExtractFilePath(A'
  +'pplication.ExeName)+''tempinc/'';'#13#10'  prog:=TStringList.Create;'#13#10
  +'  prog.Text:=UnitString;'#13#10#13#10'  // clean up from previous runs'#13
  +#10'  PASFileName:= self.myNode.NodeName+''.pas'';'#13#10'  DeleteFile(ProgP'
  +'ath+PASFileName);'#13#10'  ObjectFileName:= self.myNode.NodeName+''.o'';'#13
  +#10'  DeleteFile(ProgPath+ObjectFileName);'#13#10'  ExeFileName:= self.myNod'
  +'e.NodeName+''.js'';'#13#10'  DeleteFile(ProgPath+ExeFileName);'#13#10#13#10
  +' // GPUCodeEditor.ItemValue:=PascalCode.Text;'#13#10'  // save the text to '
  +'be compiled to the .pas file'#13#10'  prog.SaveToFile(ProgPath+PASFileName)'
  +';'#13#10'  prog.Free;'#13#10'  ok:=false;'#13#10#13#10'  GPUCodeEditor.Mess'
  +'ageLines:='''';'#13#10#13#10'  TranspileMyProgram(self.myNode.NodeName,Extr'
  +'actFilePath(Application.ExeName),''tempinc/'',GPUCodeEditor,true);'#13#10' '
  +' // and do checking for errors...'#13#10'  // if the JS file exists, run on'
  +' browser...'#13#10'  if FileExists(ExtractFilePath(Application.ExeName)+Exe'
  +'FileName) then'#13#10'  begin'#13#10'    ok:=true;'#13#10'    // and get th'
  +'e GPUJSOutput...'#13#10'    GPUJSOutput:=ReadFile(ExtractFilePath(Applicati'
  +'on.ExeName)+ExeFileName);'#13#10'//    EditAttributeValue(''XMemo1'',''Item'
  +'Value'',GPUJSOutput);        //!!!! temporary for debugging'#13#10'  end'#13
  ,#10'  else'#13#10'  begin'#13#10'    // GPU code failed to compile - show th'
  +'e editor with messages'#13#10'    GPUCodeEditor.ItemValue:=UnitString;'#13
  +#10'    GPUCodeEditor.MessagesHeight:=''30%'';'#13#10'    EditingGPUNode:=se'
  +'lf.myNode;'#13#10'    GPUEditorMode:=''Unit'';'#13#10'    GPUCodeEditor.Rea'
  +'dOnly:=true;'#13#10'    GPUComboBox.OptionList:=self.BuildKernelList;'#13#10
  +'    GPUComboBox.ItemIndex:=-1;'#13#10'    GPUComboBox.PriorIndex:=-1;'#13#10
  +'    GPUEditorForm.Showing:=''Modal'';'#13#10'  end;'#13#10#13#10'  {$else}'
  +#13#10'  //showmessage(''starting compile section...'');'#13#10'  //with MyW'
  +'ebCompiler do'#13#10'  begin'#13#10'    UnitString:=BuildPascalAnimationUni'
  +'t(MyWebCompiler.Compiler);'#13#10#13#10'    MyWebCompiler.MyCodeEditor:=GPU'
  +'CodeEditor;'#13#10'    MyWebCompiler.Compiler.Log.OnLog:=@MyWebCompiler.DoL'
  +'og;'#13#10'    MyWebCompiler.Compiler.WebFS.LoadBaseURL:='''';'#13#10#13#10
  +'    //showmessage(''FirstUnitName=''+FirstUnitName);'#13#10'    if MyWebCom'
  +'piler.MyCodeEditor<>nil then'#13#10'      MyWebCompiler.myCodeEditor.ItemVa'
  +'lue:=UnitString;'#13#10#13#10'    Res:=False;'#13#10#13#10'    // Load up t'
  +'he RTL sources that are required for the compilation...'#13#10'    lWebFS:='
  +'MyWebCompiler.Compiler.WebFS;'#13#10'    LoadRTLFilesForPas2JS(lWebFS);'#13
  +#10#13#10'    lWebFS.SetFileContent(self.NodeName+''.pas'',UnitString);'#13
  +#10'//    showmessage(''done main file save'');'#13#10'    args:=TStringList'
  +'.Create;'#13#10'    try'#13#10'      Args.Add(''-vwnhe'');'#13#10'      Arg'
  +'s.Add(''-O-'');           //  Disable optimizations'#13#10'      Args.Add('
  +'''-Jc'');           //  Write all JavaScript concatenated into the output f'
  +'ile'#13#10'      Args.Add(''-Jirtl.js-'');         //  Remove a JS file.'#13
  +#10'      Args.Add(''-dJScript'');'#13#10'      Args.Add(self.NodeName+''.pa'
  +'s'');'#13#10#13#10'      //................................................'
  +'........'#13#10'      MyWebCompiler.Compiler.Run('''','''',Args,True);'#13
  +#10'      Res:=MyWebCompiler.Compiler.ExitCode=0;'#13#10'      //...........'
  +'.............................................'#13#10#13#10'    finally'#13
  +#10'     Args.Free;'#13#10'    end;'#13#10#13#10'    //EditAttributeValue('''
  +'XMemo2'','''',''ItemValue'',UnitString);        //!!!! temporary for debugg'
  +'ing'#13#10#13#10'    if res=true then'#13#10'    begin'#13#10'      //showm'
  +'essage(''compiler all done'');'#13#10'      GPUJSOutput:=MyWebCompiler.Comp'
  +'iler.WebFS.GetFileContent(self.NodeName+''.js'');'#13#10'    end'#13#10'   '
  +' else'#13#10'    begin'#13#10'      // GPU code failed to compile - show th'
  +'e editor with messages'#13#10'      GPUCodeEditor.ItemValue:=UnitString;'#13
  +#10'      GPUCodeEditor.MessagesHeight:=''30%'';'#13#10'      EditingGPUNode'
  +':=self.myNode;'#13#10'      GPUCodeEditor.ReadOnly:=true;'#13#10'      GPUE'
  +'ditorMode:=''Unit'';'#13#10'      GPUComboBox.OptionList:=self.BuildKernelL'
  +'ist;'#13#10'      GPUComboBox.ItemIndex:=-1;'#13#10'      GPUComboBox.Prior'
  +'Index:=-1;'#13#10'      GPUEditorForm.Showing:=''Modal'';'#13#10'    end;'
  +#13#10'  end;'#13#10#13#10'  //EditAttributeValue(''XMemo1'','''',''ItemValu'
  +'e'',GPUJSOutput);        //!!!! temporary for debugging'#13#10#13#10'  ok:='
  +'res;'#13#10'  if res=true then'#13#10'  begin'#13#10'  end;'#13#10#13#10'//'
  +'  showmessage(''RunParser done.  Output=''+GPUJSOutput);'#13#10#13#10'  {$e'
  +'ndif}'#13#10#13#10'  prog.free;'#13#10#13#10'  //....decide if there are er'
  +'rors or not .......'#13#10'  //if ok=false then showmessage(''Compilation f'
  +'ailed'')'#13#10'  //else showmessage(''Compilation successful'');'#13#10'  '
  +'result:=ok;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.CompileAnimCode:T'
  +'StringList;'#13#10'var'#13#10'  Pas2jsOutput:String;'#13#10'  PasString,Pas'
  +'2JSRaw:String;'#13#10'  Pas2JSTrimmed:TstringList;'#13#10'  tmp:String;'#13
  +#10'  ok:Boolean;'#13#10'  tmpList:TStringList;'#13#10'  i,j:integer;'#13#10
  +'begin'#13#10'  PasString:=myNode.getAttribute(''AnimationCode'',true).Attri'
  +'bValue;'#13#10'  Pas2JSTrimmed:=TStringList.Create;'#13#10'  if PasString<>'
  +''''' then'#13#10'  begin'#13#10#13#10'    // Compile the Pascal code'#13#10
  +'    ok:=CompileGPUToJS(Pas2jsOutput);'#13#10#13#10'   // EditAttributeValue'
  +'(''XMemo1'','''',''ItemValue'',Pas2jsOutput,false);        //!!!! temporary'
  +' for debugging'#13#10'    if ok then'#13#10'    // Extract the bit of this '
  +'that we need to keep'#13#10'    begin'#13#10'      tmpList:=TStringList.Cre'
  +'ate;'#13#10'      tmpList.Text:=Pas2JSOutput;'#13#10'      // delete up to '
  +'the zzzzz1 line'#13#10'      while (tmpList.Count>0) and (FoundString(tmpLi'
  +'st[0],''zzzzz1'')<1) do'#13#10'         tmpList.Delete(0);'#13#10'//      s'
  +'howmessage(''after search for zzzzz1 ''+inttostr(tmpList.Count)+'' lines le'
  +'ft'');'#13#10'      if tmpList.Count>0 then'#13#10'      begin'#13#10'     '
  +'   // delete the zzzzz1 line'#13#10'        tmpList.Delete(0);'#13#10'     '
  ,'   // skip to the zzzzz2 line'#13#10'        i:=0;'#13#10'        while i<t'
  +'mpList.Count do'#13#10'        begin'#13#10'          if FoundString(tmpLis'
  +'t[i],''zzzzz2'')>0 then'#13#10'          begin'#13#10'//            showmes'
  +'sage(''found zzzzz2 at line ''+inttostr(i));'#13#10'            j:=i;'#13#10
  +'            tmpList[i-1]:='''';     // replace preceding ''};'' with ''}'''
  +#13#10'            i:=tmpList.Count;'#13#10'          end'#13#10'          e'
  +'lse'#13#10'          if (FoundString(tmpList[i],''kkkkk'')>0)'#13#10'      '
  +'    and (FoundString(tmpList[i],''function'')>0) then'#13#10'          begi'
  +'n'#13#10'            tmpList[i-1]:='''';    // remove the closing ''};'' - '
  +'will be added back later.'#13#10'           end;'#13#10'          i:=i+1;'
  +#13#10'        end;'#13#10'        // delete all after the zzzzz2 line'#13#10
  +'        while j<tmpList.Count do'#13#10'        begin'#13#10'           tmp'
  +'List.Delete(j);'#13#10'        end;'#13#10'      end;'#13#10'      // now, '
  +'tmplist has the set of kernel procs, plus the graphical final kernel.'#13#10
  +'      // These need separating.'#13#10#13#10'      Pas2JSRaw:=tmpList.Text;'
  +#13#10#13#10'      //showmessage(''raw=''+Pas2JSRaw);'#13#10#13#10'      // '
  +'Now filter out any qualifiers that may have been added by pas2js'#13#10'   '
  +'   // eg. parameter variable P1 will have translated to $impl.P1'#13#10'   '
  +'   // and also modify calls to some maths ffunctions...'#13#10'      Pas2JS'
  +'Raw := myStringReplace(Pas2JSRaw,''$impl.'','''',-1,-1);'#13#10'      Pas2J'
  +'SRaw := myStringReplace(Pas2JSRaw,''This.'',''this.'',-1,-1);'#13#10'      '
  +'Pas2JSRaw := myStringReplace(Pas2JSRaw,''pas.System.Trunc'',''Math.floor'','
  +'-1,-1);'#13#10'      Pas2JSRaw := myStringReplace(Pas2JSRaw,''pas.Math.Ceil'
  +''',''Math.ceil'',-1,-1);'#13#10'      Pas2JSRaw := myStringReplace(Pas2JSRa'
  +'w,''Math.log10'',''Math.log'',-1,-1);'#13#10#13#10#13#10'      // Look for '
  +'''for'' loops.  Insert ''var'' ahead of the loop variable.   eg. for (var i'
  +'=0; i<something; i++)'#13#10'      // NB. for loops MUST also be coded usin'
  +'g a constant as the comparison element.'#13#10'      Pas2JSRaw := myStringR'
  +'eplace(Pas2JSRaw,'' for ('','' for (var '',-1,-1);'#13#10'      Pas2JSRaw :'
  +'= myStringReplace(Pas2JSRaw,'' for (var var'','' for (var '',-1,-1);'#13#10
  +#13#10'      //!!!! check for GPU invalid chars (eg $) here and throw error?'
  +'???'#13#10'      // also refs to rtl.'#13#10#13#10'      // now separate th'
  +'e kernel procs...'#13#10'      //showmessage(Pas2JSRaw);'#13#10'      Pas2J'
  +'STrimmed:=TStringList.Create;'#13#10'      tmpList.Text:= Pas2JSRaw;'#13#10
  +'      j:=-1;'#13#10'      tmp:='''';'#13#10'      for i:=0 to tmpList.Count'
  +'-1 do'#13#10'      begin'#13#10'        if (FoundString(tmpList[i],''kkkkk'
  +''')>0) then'#13#10'        begin'#13#10'          if j>-1 then'#13#10'     '
  +'     begin'#13#10'            Pas2JSTrimmed.Add(tmp);'#13#10'          end;'
  +#13#10'          j:=j+1;'#13#10'          tmp:='''';'#13#10'        end'#13
  +#10'        else'#13#10'          tmp:=tmp+tmpList[i]+LineEnding;'#13#10'   '
  +'     if i=tmpList.Count-1 then'#13#10'          Pas2JSTrimmed.Add(tmp);'#13
  +#10'      end;'#13#10#13#10'      tmpList.Free;'#13#10'    end;'#13#10'  end'
  +';'#13#10#13#10'  result:=Pas2JSTrimmed;'#13#10'end;'#13#10#13#10'function T'
  +'XGPUCanvas.FullXMLString:String;'#13#10'var'#13#10'  Pas2JSTrimmed:TstringL'
  +'ist;   // one string per kernel'#13#10'  tmp:String;'#13#10'  FullString:St'
  +'ring;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  if not (csDesigning '
  +'in ComponentState) then'#13#10'  {$endif}'#13#10'  begin'#13#10'    Pas2JST'
  +'rimmed:=self.CompileAnimCode;'#13#10'    if Pas2JSTrimmed.Count<1 then'#13
  +#10'    begin'#13#10'      result:='''';'#13#10'      EXIT;'#13#10'    end;'
  +#13#10#13#10'    // and wrap it with the GPU JS...'#13#10'    tmp:= GPUJSCod'
  +'e(Pas2JSTrimmed);'#13#10'    FullString:= tmp;'#13#10'    if self.Animated '
  +'then'#13#10'      FullString:=FullString + GPUJSAnimationFooter;'#13#10#13
  +#10#13#10'    tmp:=UnSubstituteSpecials(gpujs);'#13#10#13#10'    FullString:'
  +'='#13#10'      ''<!DOCTYPE html>'' +  LineEnding'#13#10'      +''<html>'' +'
  +'  LineEnding'#13#10'      +''<body  style="margin:0px; font:normal 12px Ver'
  +'dana, Arial, sans-serif;">'' +  LineEnding'#13#10'      +''<script>''+tmp+'
  +'''</script>  '' +  LineEnding'#13#10'      +''<div  id="GPUCanvas" > ''+  L'
  +'ineEnding'#13#10'      +''<script>''+  LineEnding'#13#10'      +FullString '
  +'+  LineEnding'#13#10'      +''</script>'' +  LineEnding'#13#10'//      +''<'
  +'div id=oarr hidden> </textarea>'' + LineEnding'#13#10'      +''</div> ''+  '
  +'LineEnding'#13#10'      +''</body> '' +  LineEnding'#13#10'      +''</html>'
  +' ''+  LineEnding;'#13#10#13#10'//    EditAttributeValue(''XMemo1'','''',''I'
  +'temValue'',FullString,false);        //!!!! temporary for debugging'#13#10
  +'    self.GeneratedHTML:=FullString;'#13#10#13#10'  end;'#13#10'  result:=Fu'
  ,'llString;'#13#10'end;'#13#10#13#10#13#10'procedure TXGPUCanvas.setupGPUPage'
  +';'#13#10'var'#13#10'  GPUString:String;'#13#10'begin'#13#10'  // called fro'
  +'m StartMyGPU'#13#10'  GPUString:=self.FullXMLString;'#13#10'  self.HTMLSour'
  +'ce:= GPUString;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.GetParamNumVa'
  +'lue(pName:String):TNumArray;'#13#10'var'#13#10'  i:integer;'#13#10'  tmp:St'
  +'ring;'#13#10'  pval:TNumArray;'#13#10'begin'#13#10'  for i:=0 to length(Par'
  +'amNumArray)-1 do'#13#10'    if ParamNumArray[i].ParamName=pName then'#13#10
  +'    begin'#13#10'      pval:=ParamNumArray[i].ParamValue;'#13#10'    end;'
  +#13#10'  result:=pval;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.GetCons'
  +'tIntValue(pName:String):integer;'#13#10'var'#13#10'  i:integer;'#13#10'  tm'
  +'p:String;'#13#10'  pval:integer;'#13#10'begin'#13#10'  for i:=0 to length(C'
  +'onstIntArray)-1 do'#13#10'    if ConstIntArray[i].ConstName=pName then'#13
  +#10'    begin'#13#10'      pval:=ConstIntArray[i].ConstValue;'#13#10'    end'
  +';'#13#10'  result:=pval;'#13#10'end;'#13#10#13#10'function TXGPUCanvas.GetP'
  +'aramImgValue(pName:String):TImgArray;'#13#10'var'#13#10'  i:integer;'#13#10
  +'  tmp:String;'#13#10'  pval:TImgArray;'#13#10'begin'#13#10'  for i:=0 to le'
  +'ngth(ParamImgArray)-1 do'#13#10'    if ParamImgArray[i].ParamName=pName the'
  +'n'#13#10'    begin'#13#10'      pval:=ParamImgArray[i].ParamValue;'#13#10' '
  +'   end;'#13#10'  result:=pval;'#13#10'end;'#13#10#13#10'procedure TXGPUCanv'
  +'as.SetParamNumValue(pName:String;pValue:TNumArray;ForwardToWidget:Boolean);'
  +#13#10'var'#13#10'  i,j:integer;'#13#10'  tmp:String;'#13#10'  myurl:string;'
  +#13#10'begin'#13#10'  for i:=0 to length(ParamNumArray)-1 do'#13#10'    if u'
  +'ppercase(ParamNumArray[i].ParamName)=uppercase(pName) then'#13#10'    begin'
  +#13#10'      SetLength(ParamNumArray[i].ParamValue,length(pValue));'#13#10' '
  +'     for j:=0 to length(pValue)-1 do'#13#10'        ParamNumArray[i].ParamV'
  +'alue[j]:=pValue[j];'#13#10#13#10'      if (ForwardToWidget)'#13#10'      an'
  +'d (self.Active)'#13#10'      and (self.HTMLSource<>'''')'#13#10'      and ('
  +'self.HTMLSource<>''about:blank'') then'#13#10'      begin'#13#10'        {$'
  +'ifndef JScript}'#13#10'        {$ifdef Chromium}'#13#10'        myurl:= myC'
  +'hromium.Browser.MainFrame.GetURL();'#13#10'        if myurl<>''about:blank'
  +''' then'#13#10'        begin'#13#10'          tmp:=NumArrayToJSONString(pVa'
  +'lue);'#13#10'          tmp:=''RunCode("''+pName+''=''+tmp+'';")'';'#13#10' '
  +'         myChromium.Browser.MainFrame.ExecuteJavaScript(tmp, myurl, 0);'#13
  +#10'        end;'#13#10'        {$else}'#13#10'        //!!!! need to refres'
  +'h the GPU canvas display when it''s on a separate browser page....  ??'#13
  +#10'        myurl:='''';'#13#10'        {$endif}'#13#10'        {$else}'#13
  +#10'        asm'#13#10'          var ob=document.getElementById(this.NameSpa'
  +'ce+this.NodeName+''Contents'');'#13#10'          if (ob!=null) {'#13#10'   '
  +'         //alert(''found iframe. posting param message'');'#13#10'         '
  +'   ob.contentWindow.postMessage({"objid":this.NodeName, "mtype":"SetNumPara'
  +'m", "pName":pName, "pValue":pValue},"*");'#13#10'            }'#13#10'     '
  +'   end;'#13#10'        {$endif}'#13#10'      end;'#13#10#13#10'    end;'#13
  +#10'end;'#13#10#13#10'procedure TXGPUCanvas.SetConstIntValue(pName:String;pV'
  +'alue:integer);'#13#10'var'#13#10'  i:integer;'#13#10'  tmp:String;'#13#10' '
  +' myurl:string;'#13#10'begin'#13#10'  for i:=0 to length(ConstIntArray)-1 do'
  +#13#10'    if uppercase(ConstIntArray[i].ConstName)=uppercase(pName) then'#13
  +#10'    begin'#13#10'      ConstIntArray[i].ConstValue:=pValue;'#13#10#13#10
  +'    end;'#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.SetParamImgValue(pN'
  +'ame:String;pValue:TImgArray;ForwardToWidget:Boolean);'#13#10'var'#13#10'  i'
  +',j:integer;'#13#10'  tmp:String;'#13#10'  myurl:string;'#13#10'begin'#13#10
  +'  for i:=0 to length(ParamImgArray)-1 do'#13#10'    if uppercase(ParamImgAr'
  +'ray[i].ParamName)=uppercase(pName) then'#13#10'    begin'#13#10'      SetLe'
  +'ngth(ParamImgArray[i].ParamValue,length(pValue));'#13#10'      for j:=0 to '
  +'length(pValue)-1 do'#13#10'        ParamImgArray[i].ParamValue[j]:=pValue[j'
  +'];'#13#10'      //ParamImgArray[i].ParamValue:=pValue;        // causing er'
  +'rors...?'#13#10#13#10'      if (ForwardToWidget)'#13#10'      and (self.Act'
  +'ive)'#13#10'      and (self.HTMLSource<>'''')'#13#10'      and (self.HTMLSo'
  +'urce<>''about:blank'') then'#13#10'      begin'#13#10'        {$ifndef JScr'
  +'ipt}'#13#10'        {$ifdef Chromium}'#13#10'        myurl:= myChromium.Bro'
  +'wser.MainFrame.GetURL();'#13#10'        if myurl<>''about:blank'' then'#13
  +#10'        begin'#13#10'          tmp:=ImgArrayToJSONString(pValue);'#13#10
  +'          tmp:=''RunCode("''+pName+''=''+tmp+'';")'';'#13#10'          myCh'
  +'romium.Browser.MainFrame.ExecuteJavaScript(tmp, myurl, 0);'#13#10'        e'
  +'nd;'#13#10'        {$else}'#13#10'        //!!!!'#13#10'        {$endif}'#13
  ,#10'        //showmessage(''update img param: ''+tmp);'#13#10'        {$else'
  +'}'#13#10'        asm'#13#10'          var ob=document.getElementById(this.N'
  +'ameSpace+this.NodeName+''Contents'');'#13#10'          if (ob!=null) {'#13
  +#10'            //alert(''found iframe. posting param message'');'#13#10'   '
  +'         ob.contentWindow.postMessage({"objid":this.NodeName, "mtype":"SetI'
  +'mgParam", "pName":pName, "pValue":pValue},"*");'#13#10'            }'#13#10
  +'        end;'#13#10'        {$endif}'#13#10'      end;'#13#10'    end;'#13
  +#10'end;'#13#10#13#10'procedure TXGPUCanvas.SetAnimationCode(AValue:string);'
  +#13#10'var'#13#10'  GPUString:string;'#13#10'  FullString:String;'#13#10'beg'
  +'in'#13#10'  {$ifndef JScript}'#13#10'  if not (csDesigning in componentStat'
  +'e) then'#13#10'  {$endif}'#13#10'  begin'#13#10'    GPUString:=AValue;'#13
  +#10#13#10'    //showmessage(''Frame setXMLString ''+SVGString);'#13#10'    m'
  +'yNode.SetAttributeValue(''AnimationCode'',GPUString);'#13#10#13#10'    if ('
  +'self.Active=true)'#13#10'    and (not StartingUp) then'#13#10'    begin'#13
  +#10'      FullString:=self.FullXMLString;'#13#10'      myNode.SetAttributeVa'
  +'lue(''HTMLSource'',FullString);'#13#10'      showmessage(''SetAnimationCode'
  +' RedisplayFrame'');'#13#10'      RedisplayFrame;'#13#10#13#10'    end;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.StartMyGPU;'#13#10
  +'var'#13#10'  h,w:integer;'#13#10'begin'#13#10'  // refresh the actual h/w a'
  +'ttributes'#13#10'  h:=self.ActualHeight;'#13#10'  w:=self.ActualWidth;'#13
  +#10#13#10'  setlength(self.GPUOutputArray,0);'#13#10#13#10'  {$ifndef JScrip'
  +'t}'#13#10'  if not (csDesigning in componentState) then'#13#10'  {$endif}'
  +#13#10'  begin'#13#10'    HandleEvent(''OnStart'',self.myNode.NodeName,self.'
  +'myNode.NameSpace,'''');'#13#10'    SetupGPUPage;'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'procedure TXGPUCanvas.StopMyGPU;'#13#10'var'#13#10'  tmp,doJS,m'
  +'yurl:String;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  if not (csDes'
  +'igning in componentState) then'#13#10'  {$endif}'#13#10'  begin'#13#10'    '
  +'// stop the gpu loop'#13#10'    doJS:=''running=false; clearInterval(GPUInt'
  +'ervalRunner);'';'#13#10#13#10'    {$ifndef JScript}'#13#10'    {$ifdef Chro'
  +'mium}'#13#10'    if myChromium<>nil then'#13#10'      if myChromium.Browser'
  +'<>nil then'#13#10'      begin'#13#10'        myurl:= myChromium.Browser.Mai'
  +'nFrame.GetURL();'#13#10'        if myurl<>''about:blank'' then'#13#10'     '
  +'   begin'#13#10'          tmp:=''RunCode("''+doJS+''")'';'#13#10'          '
  +'myChromium.Browser.MainFrame.ExecuteJavaScript(tmp, myurl, 0);'#13#10'     '
  +'   end;'#13#10'      end;'#13#10'      // make a change to the HTMLSource t'
  +'ext, so that the GPU code will be fully rebuilt'#13#10'      // when/if the'
  +' GPU is re-started. (see SetupGPUPage and SetHTMLSource).'#13#10'      myNo'
  +'de.SetAttributeValue(''HTMLSource'',myNode.GetAttribute(''HTMLSource'',true'
  +').AttribValue + ''/**/'');'#13#10'    {$else}'#13#10'    //!!!!  external b'
  +'rowser'#13#10'    {$endif}'#13#10'    {$else}'#13#10'    asm'#13#10'    var'
  +' ob=document.getElementById(this.NameSpace+this.NodeName+''Contents'');'#13
  +#10'    if (ob!=null) {'#13#10'      ob.contentWindow.postMessage({"objid":t'
  +'his.NodeName, "mtype":"execCode", "code":doJS},"*");'#13#10'      }'#13#10
  +'    end;'#13#10'    self.HTMLSource:='''';   //about:blank??  clear the can'
  +'vas??'#13#10'    {$endif}'#13#10#13#10#13#10#13#10'  end;'#13#10'end;'#13#10
  +#13#10'//------------------------------- SetActive -------------------------'
  +'---'#13#10'// Setting the Active flag will build and run the GPU code insid'
  +'e the IFrame'#13#10'//-----------------------------------------------------'
  +'-----------------'#13#10'procedure TXGPUCanvas.SetActive(AValue:Boolean);'
  +#13#10'begin'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10'    myNode.S'
  +'etAttributeValue(''Active'',myBoolToStr(AValue),''Boolean'');'#13#10'    if'
  +' (StartingUp=false) and (AValue=true) then'#13#10'    begin'#13#10'      se'
  +'lf.StartMyGPU;'#13#10'    end'#13#10'    else'#13#10'      self.StopMyGPU;'
  +#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'procedure TXGPUCanvas.SetAnimat'
  +'ed(AValue:Boolean);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''Animat'
  +'ed'',myBoolToStr(AValue),''Boolean'');'#13#10'end;'#13#10'//procedure TXGPU'
  +'Canvas.SetFetchFrameOutput(AValue:Boolean);'#13#10'//begin'#13#10'//  myNod'
  +'e.SetAttributeValue(''FetchFrameOutput'',myBoolToStr(AValue),''Boolean'');'
  +#13#10'//end;'#13#10'procedure TXGPUCanvas.SetParamNumList(AValue:string);'
  +#13#10'var'#13#10'  pNames:TStringList;'#13#10'  i:integer;'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''ParamNumList'',AValue,''String'');'#13#10' '
  +' SetLength(ParamNumArray,0);'#13#10#13#10'  //use this comma-delimited list'
  +' to initialise ParamArray.'#13#10'  if AValue<>'''' then'#13#10'  begin'#13
  +#10'    pNames:=TStringList.Create;'#13#10'    pNames.StrictDelimiter:=true;'
  ,#13#10'    pNames.LineBreak:='','';'#13#10'    pNames.Text:=AValue;'#13#10' '
  +'   SetLength(ParamNumArray,pNames.Count);'#13#10'    for i:=0 to pNames.Cou'
  +'nt-1 do'#13#10'    begin'#13#10'      ParamNumArray[i].ParamName:=pNames[i]'
  +';'#13#10'      SetLength(ParamNumArray[i].ParamValue,1);'#13#10'      Param'
  +'NumArray[i].ParamValue[0]:=0;'#13#10'    end;'#13#10'    pNames.Free;'#13#10
  +'  end;'#13#10#13#10'end;'#13#10'procedure TXGPUCanvas.SetConstIntList(AValu'
  +'e:string);'#13#10'var'#13#10'  pNames:TStringList;'#13#10'  i:integer;'#13
  +#10'begin'#13#10'  myNode.SetAttributeValue(''ConstIntList'',AValue,''String'
  +''');'#13#10'  SetLength(ConstIntArray,0);'#13#10#13#10'  //use this comma-d'
  +'elimited list to initialise ParamArray.'#13#10'  if AValue<>'''' then'#13#10
  +'  begin'#13#10'    pNames:=TStringList.Create;'#13#10'    pNames.StrictDeli'
  +'miter:=true;'#13#10'    pNames.LineBreak:='','';'#13#10'    pNames.Text:=AV'
  +'alue;'#13#10'    SetLength(ConstIntArray,pNames.Count);'#13#10'    for i:=0'
  +' to pNames.Count-1 do'#13#10'    begin'#13#10'      ConstIntArray[i].ConstN'
  +'ame:=pNames[i];'#13#10'      ConstIntArray[i].ConstValue:=0;'#13#10'    end'
  +';'#13#10'    pNames.Free;'#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'proc'
  +'edure TXGPUCanvas.SetParamImgList(AValue:string);'#13#10'var'#13#10'  pName'
  +'s:TStringList;'#13#10'  i:integer;'#13#10'begin'#13#10'  myNode.SetAttribut'
  +'eValue(''ParamImgList'',AValue,''String'');'#13#10'  SetLength(ParamImgArra'
  +'y,0);'#13#10#13#10'  //use this comma-delimited list to initialise ParamArr'
  +'ay.'#13#10'  if AValue<>'''' then'#13#10'  begin'#13#10'    pNames:=TString'
  +'List.Create;'#13#10'    pNames.StrictDelimiter:=true;'#13#10'    pNames.Lin'
  +'eBreak:='','';'#13#10'    pNames.Text:=AValue;'#13#10#13#10'    SetLength(P'
  +'aramImgArray,pNames.Count);'#13#10'    for i:=0 to pNames.Count-1 do'#13#10
  +'    begin'#13#10'      ParamImgArray[i].ParamName:=pNames[i];'#13#10'      '
  +'SetLength(ParamImgArray[i].ParamValue,1);'#13#10'      //ParamImgArray[i].P'
  +'aramValue[0]:=0;       //!!!!?'#13#10'    end;'#13#10'    pNames.Free;'#13
  +#10'  end;'#13#10#13#10'end;'#13#10#13#10'procedure TXGPUCanvas.SetMaxIterat'
  +'ions(AValue:integer);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''MaxI'
  +'terations'',IntToStr(AValue),''Integer'');'#13#10'end;'#13#10'procedure TXG'
  +'PUCanvas.SetStartIteration(AValue:integer);'#13#10'begin'#13#10'  myNode.Se'
  +'tAttributeValue(''StartIteration'',IntToStr(AValue),''Integer'');'#13#10'en'
  +'d;'#13#10'procedure TXGPUCanvas.SetNumFrames(AValue:integer);'#13#10'begin'
  +#13#10'  myNode.SetAttributeValue(''NumFrames'',IntToStr(AValue),''Integer'''
  +');'#13#10'end;'#13#10'procedure TXGPUCanvas.SetMaxFramesPerSec(AValue:integ'
  +'er);'#13#10'begin'#13#10'  myNode.SetAttributeValue(''MaxFramesPerSec'',Int'
  +'ToStr(AValue),''Integer'');'#13#10'end;'#13#10'//procedure TXGPUCanvas.SetO'
  +'utputArray(AValue:String);'#13#10'//begin'#13#10'//  myNode.SetAttributeVal'
  +'ue(''OutputArray'',AValue,''String'');'#13#10'//end;'#13#10'//procedure TXG'
  +'PUCanvas.SetGPUStageArray(AValue:String);'#13#10'//begin'#13#10'//  myNode.'
  +'SetAttributeValue(''GPUStageArray'',AValue,''String'');'#13#10'//end;'#13#10
  +'procedure TXGPUCanvas.SetNumKernels(AValue:integer);'#13#10'begin'#13#10'  '
  +'myNode.SetAttributeValue(''NumKernels'',IntToStr(AValue),''Integer'');'#13
  +#10'end;'#13#10'procedure TXGPUCanvas.SetZDimension(AValue:integer);'#13#10
  +'begin'#13#10'  myNode.SetAttributeValue(''ZDimension'',IntToStr(AValue),''I'
  +'nteger'');'#13#10'end;'#13#10#13#10#13#10#13#10'begin'#13#10'  // this is t'
  +'he set of node attributes that each GPUCanvas instance will have (added to '
  +'the set inherited from TXIFrame).'#13#10'  AddWrapperDefaultAttribs(myDefau'
  +'ltAttribs);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''ActualHeight'','
  +'''Integer'','''','''',true,false);'#13#10'  AddDefaultAttribute(myDefaultAt'
  +'tribs,''ActualWidth'',''Integer'','''','''',true,false);'#13#10'  AddDefaul'
  +'tAttribute(myDefaultAttribs,''FrameWidth'',''String'',''300'','''',false);'
  +#13#10'  AddDefaultAttribute(myDefaultAttribs,''FrameHeight'',''String'',''3'
  +'00'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Border'','
  +'''Boolean'',''True'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAtt'
  +'ribs,''SpacingAround'',''Integer'',''0'','''',false);'#13#10'  AddDefaultAt'
  +'tribute(myDefaultAttribs,''LabelPos'',''String'',''Top'','''',false);'#13#10
  +'  AddDefaultAttribute(myDefaultAttribs,''LabelText'',''String'',''GPU Canva'
  +'s'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''HTMLSource'
  +''',''String'','''','''',false,false);'#13#10'  AddDefaultAttribute(myDefaul'
  +'tAttribs,''Active'',''Boolean'',''False'','''',false,false);'#13#10'  AddDe'
  +'faultAttribute(myDefaultAttribs,''Animated'',''Boolean'',''False'','''',fal'
  +'se);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''ParamNumList'',''Strin'
  +'g'','''','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Param'
  ,'ImgList'',''String'','''','''',false);'#13#10'  AddDefaultAttribute(myDefau'
  +'ltAttribs,''ConstIntList'',''String'','''','''',false);'#13#10'  AddDefault'
  +'Attribute(myDefaultAttribs,''MaxIterations'',''Integer'',''512'','''',false'
  +');'#13#10'  AddDefaultAttribute(myDefaultAttribs,''StartIteration'',''Integ'
  +'er'',''1'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Num'
  +'Frames'',''Integer'',''100'','''',false);'#13#10'  AddDefaultAttribute(myDe'
  +'faultAttribs,''MaxFramesPerSec'',''Integer'',''10'','''',false);'#13#10'// '
  +' AddDefaultAttribute(myDefaultAttribs,''FetchFrameOutput'',''Boolean'',''Fa'
  +'lse'','''',false);'#13#10'//  AddDefaultAttribute(myDefaultAttribs,''Output'
  +'Array'',''String'','''','''',true,false);'#13#10'//  AddDefaultAttribute(my'
  +'DefaultAttribs,''GPUStageArray'',''String'','''',''3-D array output from ne'
  +'sted non-graphical kernels'',true,false);'#13#10'  AddDefaultAttribute(myDe'
  +'faultAttribs,''AnimationCode'',''String'','''','''',false);'#13#10'  AddDef'
  +'aultAttribute(myDefaultAttribs,''NumKernels'',''Integer'',''0'',''Number of'
  +' nested non-graphical kernels'',false);'#13#10'  AddDefaultAttribute(myDefa'
  +'ultAttribs,''ZDimension'',''Integer'',''1'',''Number of z-planes in the sta'
  +'ge array handled by non-graphical kernels'',false);'#13#10'  AddDefaultsToT'
  +'able(MyNodeType,myDefaultAttribs);'#13#10#13#10'  AddAttribOptions(MyNodeTy'
  +'pe,''Alignment'',AlignmentOptions);'#13#10'  AddAttribOptions(MyNodeType,'''
  +'LabelPos'',LabelPosOptions);'#13#10'  {$IFndef JScript}'#13#10'  RegisterCl'
  +'ass(TXGPUCanvas);'#13#10'  AddNodeFuncLookup(MyNodeType,@CreateGPUCanvasWid'
  +'get);'#13#10'  {$else}'#13#10'  AddNodeFuncLookup(MyNodeType,@CreateInterfa'
  +'ceObjGPU,@CreateGPUCanvasWidget);'#13#10'  {$endif}'#13#10'  SuppressDesign'
  +'erProperty(MyNodeType,''ContainerHeight'');'#13#10'  SuppressDesignerProper'
  +'ty(MyNodeType,''ContainerWidth'');'#13#10'  SuppressDesignerProperty(MyNode'
  +'Type,''SuspendRefresh'');'#13#10'  SuppressDesignerProperty(MyNodeType,''Bg'
  +'Color'');'#13#10'  SuppressDesignerProperty(MyNodeType,''HTMLSource'');'#13
  +#10#13#10#13#10'end.'#13#10#13#10'///////// unused experiments ........ ////'
  +'//////////////////////'#13#10#13#10'// +''     const ''+self.MyNode.NodeNam'
  +'e+'' = new GPU({mode: ''''webgl''''});   ''+LineEnding;'#13#10' //const gpu'
  +' = new GPU({ mode: ''gpu'' });'#13#10'// +''     const ''+self.MyNode.NodeN'
  +'ame+'' = new GPU({mode: ''''cpu''''});   ''+LineEnding;'#13#10#13#10'(*'#13
  +#10'str:=str'#13#10'+''  ParamsAsString=function() { ''+LineEnding'#13#10'//'
  +' numeric parameters'#13#10'+''     var s="nums =["; ''+LineEnding;'#13#10'c'
  +'ma:=''""'';'#13#10'for i:=0 to length(self.ParamNumArray)-1 do'#13#10'begin'
  +#13#10'  str:=str+''s = s+''+cma+''+"["+''+ParamNumArray[i].ParamName+''.toS'
  +'tring()+"]";''+LineEnding ;       //eg. s = s+","+"["+p1.toString()+"]";'#13
  +#10'  cma:=''","'';'#13#10'end;'#13#10'str:=str+''    s=s+"]";''+LineEnding'
  +#13#10'// image parameters'#13#10'+''     s=s+" imgs =["; ''+LineEnding;'#13
  +#10'cma:=''""'';'#13#10'for i:=0 to length(self.ParamImgArray)-1 do'#13#10'b'
  +'egin'#13#10'  str:=str+''    s = s+''+cma+''+"["+''+ParamImgArray[i].ParamN'
  +'ame+''.toString()+"]";''+LineEnding ;       //eg. s = s+","+"["+p1.toString'
  +'()+"]";'#13#10'  cma:=''","'';'#13#10'end;'#13#10'str:=str+''    s=s+"]";'''
  +'+LineEnding;'#13#10#13#10'str:=str+''    return(s);''+LineEnding;'#13#10'st'
  +'r:=str+''}''+LineEnding;'#13#10'*)'#13#10#13#10'//  {$ifdef JScript}'#13#10
  +'//  str:=str'#13#10'//  +''  function PostParamMessages(objid) {''  + LineE'
  +'nding'#13#10'//  +''     var pv=[0]; ''  + LineEnding;'#13#10'//  for i:=0 '
  +'to length(self.ParamNumArray)-1 do'#13#10'//  begin'#13#10'//  str:=str'#13
  +#10'//  +''          pv=''+ParamNumArray[i].ParamName+'';''  + LineEnding'#13
  +#10'////   +''          alert("posting msg. pvalue="+pv);''  + LineEnding'#13
  +#10'//  +''          parent.postMessage({"objid":objid,"mtype":"FrameDone","'
  +'pName":"''+ParamNumArray[i].ParamName+''","pValue":pv},"*"); '' + LineEndin'
  +'g;'#13#10'//  end;'#13#10'//  //!!!! Add integers and images.....'#13#10'//'
  +'  str:=str+''}''+LineEnding;'#13#10'//  {$endif}'#13#10#13#10'//  +''  func'
  +'tion FetchParamValuesFromParent()  {'' +LineEnding'#13#10' // +''    consol'
  +'e.log("param 0 is "+parent.window.pas.XGPUCanvas.GetParam(''''''+myNode.Nod'
  +'eName+'''''',0)); ''+LineEnding'#13#10' // +''    console.log("param 0 is "'
  +'+parent.testnum); ''+LineEnding'#13#10'//  +''  }  ''+LineEnding;'#13#10#13
  +#10'//   {$ifndef JScript}'#13#10'//   // Desktop XIDE'#13#10'//   +''      '
  +'  var msg = ParamsAsString(); '' + LineEnding'#13#10'//  // +''        aler'
  +'t("changing title to:"+msg); '' + LineEnding'#13#10'//  // +''        docum'
  +'ent.title = "params ="+msg; '' + LineEnding'#13#10'//  {$ifdef Chromium}'#13
  +#10'//  // Desktop XIDE with CEF4'#13#10'//  +''           var ob=getcompone'
  +'nt("paramString"); '' + LineEnding'#13#10'//  +''           if (ob!=null) {'
  ,'ob.innerHTML=msg;} '' + LineEnding'#13#10'//  // change the document title '
  +'to trigger a cef titlechange event...'#13#10'//  +''           document.tit'
  +'le = "''+myNode.NodeName+'' "+AnimationCounterValue;''  + LineEnding'#13#10
  +'//  {$else}'#13#10'//  // Desktop XIDE - GPUCanvas running in external brow'
  +'ser page - using polling to get title changes'#13#10'//  {$endif}'#13#10'//'
  +'   {$else}'#13#10'//   // XIDE in Browser Environment'#13#10'//   //  +''  '
  +'    console.log("posting FrameDone message");''  + LineEnding'#13#10'//   /'
  +'/+''          PostParamMessages("''+self.MyNode.NodeName+''");''  +LineEndi'
  +'ng'#13#10'//   {$endif}'#13#10'//   +''    }); ''  + LineEnding'#13#10'//  '
  +' +''  } '' + LineEnding;'#13#10'//'#13#10#13#10'//  .... in DoFrame.....'#13
  +#10'//   {$ifdef JScript}'#13#10'//   +''            try {    ''  + LineEndi'
  +'ng'#13#10'//   +''              FetchParamValuesFromParent();  ''  + LineEn'
  +'ding'#13#10'//   +''            }catch(err){alert(err.message); clearInterv'
  +'al(AnimationFrameID);}  ''  + LineEnding'#13#10'//   {$endif}'#13#10#13#10
  +'// ....... JS Mode.....'#13#10'//procedure HandleGPUMessage(gpumsg:TGPUMess'
  +'age);'#13#10'//var'#13#10'//  ItemNode:TdataNode;'#13#10'//begin'#13#10'// '
  +' if (gpumsg.objid<>'''') then'#13#10'//  begin'#13#10'//    //showmessage('
  +'''HandleMessage XGPUCanvas: ''+gpumsg.objid+'' ''+gpumsg.mtype+'' ''+NumArr'
  +'ayToJSONString(gpumsg.pvalue));'#13#10'//     //this is a notification sent'
  +' out from within a GPU frame.'#13#10'//     ItemNode:=findDataNodeById(syst'
  +'emnodetree,gpumsg.objid,false);'#13#10'//     if ItemNode<>nil then'#13#10
  +'//     begin'#13#10'//       // set the ParamArray values from the message'
  +#13#10'//       TXGPUCanvas(ItemNode).SetParamNumValue(gpumsg.pName, gpumsg.'
  +'pValue,false);     //!!!! + int + img'#13#10'////      showmessage(TXGPUCan'
  +'vas(ItemNode).ParamNumArrayToString);'#13#10'//       handleEvent(''OnNewFr'
  +'ame'',ItemNode.NodeName, '''');'#13#10'//     end;'#13#10'//  end;'#13#10'/'
  +'/'#13#10'//end;'#13#10#13#10'(*'#13#10'function TXGPUCanvas.SetParamsFromMe'
  +'ssage(msg:String):TNumArray;'#13#10'// msg has format ''params =[[n,n,n],[n'
  +',n,n]....]'#13#10'//                ''ints =[[i,i,i],[i,i,i]....]'#13#10'//'
  +'                ''strs =[[s,s,s],[s,s,s]....]'''#13#10'var'#13#10'  numstr,'
  +'intstr,imgstr, str, lastbit:string;'#13#10'  n,i,s,j,k:integer;'#13#10'  se'
  +'ts:TStringList;'#13#10'  bits:TStringList;'#13#10'  bits2:TStringList;'#13
  +#10'begin'#13#10'  str:=msg;'#13#10'  n:=FoundString(msg,''nums ='');'#13#10
  +'  i:=FoundString(msg,''ints ='');'#13#10'  s:=FoundString(msg,''strs ='');'
  +#13#10'  if (n>0)'#13#10'  and (i>0)'#13#10'  and (s>0) then'#13#10'  begin'
  +#13#10'    imgstr:=str;'#13#10'    Delete(imgstr,1,s+5);'#13#10#13#10'    De'
  +'lete(str,s,length(str)-s);'#13#10'    intstr:=str;'#13#10'    Delete(intstr'
  +',1,i+5);'#13#10#13#10'    Delete(str,i,length(str)-i);'#13#10'    numstr:=s'
  +'tr;'#13#10'    Delete(numstr,1,i+5);'#13#10#13#10'    i:=FoundString(numstr'
  +',''['');'#13#10'    if i>0 then'#13#10'    begin'#13#10'      Delete(numstr'
  +',1,i+1);             //  ''n,n,n],[n,n,n]....]'''#13#10'      if numstr<>'''
  +''' then'#13#10'      begin'#13#10'        bits:=stringsplit(numstr,''],['')'
  +';  //  ''n,n,n /   n,n,n  / ....   ]]'''#13#10'        lastbit:=bits[bits.c'
  +'ount-1];'#13#10'        if length(lastbit)>1 then'#13#10'        begin'#13
  +#10'          Delete(lastbit,length(lastbit)-1,2);'#13#10'          bits[bit'
  +'s.count-1]:=lastbit;'#13#10'          for j:=0 to bits.count-1 do'#13#10'  '
  +'        begin'#13#10'            bits2:=stringsplit(bits[j],'','');'#13#10
  +'            for k:=0 to bits2.count-1 do'#13#10'              self.ParamNum'
  +'Array[j].ParamValue[k]:=StrToFloat(bits2[k]);'#13#10'          end;'#13#10
  +'        end;'#13#10'      end;'#13#10'    end;'#13#10#13#10'    i:=FoundStr'
  +'ing(imgstr,''['');'#13#10'    if i>0 then'#13#10'    begin'#13#10'      Del'
  +'ete(imgstr,1,i+1);             //  ''i,i,i],[i,i,i]....]'''#13#10'      if '
  +'imgstr<>'''' then'#13#10'      begin'#13#10'        bits:=stringsplit(imgst'
  +'r,''],['');  //  ''i,i,i /   i,i,i  / ....   ]]'''#13#10'        lastbit:=b'
  +'its[bits.count-1];'#13#10'        if length(lastbit)>1 then'#13#10'        '
  +'begin'#13#10'          Delete(lastbit,length(lastbit)-1,2);'#13#10'        '
  +'  bits[bits.count-1]:=lastbit;'#13#10'          for j:=0 to bits.count-1 do'
  +#13#10'          begin'#13#10'            bits2:=stringsplit(bits[j],'','');'
  +#13#10'            for k:=0 to bits2.count-1 do'#13#10'              self.Pa'
  +'ramImgArray[j].ParamValue[k]:='''';  //!!!! ??'#13#10'          end;'#13#10
  +'        end;'#13#10'      end;'#13#10'    end;'#13#10#13#10#13#10#13#10'  e'
  +'nd;'#13#10#13#10'end;'#13#10'*)'#13#10#13#10'//procedure TXGPUCanvas.Chromi'
  +'umProcessMessageReceived('#13#10'//  Sender: TObject; const Browser: ICefBr'
  +'owser;'#13#10'//  sourceProcess: TCefProcessId;'#13#10'//  const message: I'
  ,'CefProcessMessage; out Result: Boolean);'#13#10'//var'#13#10'//  ParamText:'
  +'String;'#13#10'//begin'#13#10'//  case message.Name of'#13#10'//    XGPUCAN'
  +'VAS_SEND_PARAMS:'#13#10'//    begin'#13#10'//      ParamText := message.Arg'
  +'umentList.GetString(0);'#13#10'//      SetParamsFromMessage(ParamText);'#13
  +#10'//    end'#13#10'//  else'#13#10'//    inherited;'#13#10'//  end;'#13#10
  +'//end;'#13#10'//'#13#10'(*'#13#10'procedure DOMVisitor_OnDocAvailable_TXGPU'
  +'Frame(const browser: ICefBrowser; const frame: ICefFrame; const document: I'
  +'CefDomDocument);'#13#10'var'#13#10'  msg: ICefProcessMessage;'#13#10'  txt:'
  +'String;'#13#10'begin'#13#10'  // CefDebugLog(''DOMVisitor_OnDocAvailable_TX'
  +'GPUFrame'', CEF_LOG_SEVERITY_INFO );'#13#10'  // Simple DOM searches'#13#10
  +'  //txt:=SimpleNodeSearch(document,''TXHTMLEditor'',''my_wysiwyg_editor'');'
  +#13#10'  txt:=''hello world'';'#13#10'  // Send back results to the browser '
  +'process'#13#10'  // Notice that the XHTMLEDITOR_SEND_TEXT message name need'
  +'s to be recognized in'#13#10'  // Chromium OnProcessMessageReceived method'
  +#13#10'  msg := TCefProcessMessageRef.New(''sendoutputarray'');'#13#10'  msg'
  +'.ArgumentList.SetString(0, txt);'#13#10'  frame.SendProcessMessage(PID_BROW'
  +'SER, msg);'#13#10'end; *)'#13#10'(*'#13#10'procedure GPU_OnProcessMessageRe'
  +'ceived(const browser       : ICefBrowser;'#13#10'                          '
  +'                      const frame       : ICefFrame;'#13#10'               '
  +'                                       sourceProcess : TCefProcessId;'#13#10
  +'                                                const message       : ICefP'
  +'rocessMessage;'#13#10'                                                var  '
  +' aHandled      : boolean);'#13#10'var'#13#10'  TempFrame   : ICefFrame;'#13
  +#10'  TempVisitor : TCefFastDomVisitor2;'#13#10'begin'#13#10'  // Handle mes'
  +'sages that are sent INTO this cef renderer'#13#10'  aHandled := False;'#13
  +#10'  if (browser <> nil) then'#13#10'    begin'#13#10'      //CefLog(''CEFX'
  +'Utils OnProcessMessageReceived. '', 1, CEF_LOG_SEVERITY_ERROR, message.name'
  +');'#13#10'      CefDebugLog(''CEFXUtils OnProcessMessageReceived. '');'#13
  +#10'      if (message.name = ''getoutputarray'')  then'#13#10'      begin'#13
  +#10'      TempFrame:=frame;'#13#10'      if TempFrame<>nil then'#13#10'     '
  +' begin'#13#10'        cefDebugLog(''VisitDom...'');'#13#10'        TempVisi'
  +'tor := TCefFastDomVisitor2.Create(browser, TempFrame, @DOMVisitor_OnDocAvai'
  +'lable_TXGPUFrame);'#13#10'        TempFrame.VisitDom(TempVisitor);'#13#10' '
  +'     end;'#13#10'        aHandled := True;'#13#10'      end;'#13#10'    end'
  +';'#13#10'end;'#13#10'*)'#13#10#13#10'(*'#13#10'// Handler for messages sent'
  +' OUT of the Cef browser'#13#10'procedure TXGPUCanvas.ChromiumProcessMessage'
  +'Received('#13#10'  Sender: TObject; const browser: ICefBrowser;'#13#10'  co'
  +'nst frame: ICefFrame; sourceProcess: TCefProcessId;'#13#10'  const message:'
  +' ICefProcessMessage; out Result: Boolean);'#13#10'var'#13#10'  NewText:Stri'
  +'ng;'#13#10'begin'#13#10'  case message.Name of'#13#10'    ''sendoutputarray'
  +''':'#13#10'    begin'#13#10'      NewText := message.ArgumentList.GetString'
  +'(0);'#13#10'      cefDebugLog(''message received'');'#13#10'      //EditAtt'
  +'ributeValue(''XMemo1'',''ItemValue'',NewText);'#13#10'      //just set attr'
  +'ibute here'#13#10'      self.myNode.SetAttributeValue(''OutputArray'',NewTe'
  +'xt);'#13#10'      //event here (eg) to refresh ob inspector'#13#10'      if'
  +' StartingUp=false then'#13#10'        CallHandleEventLater(''Change'',NewTe'
  +'xt,self.myControl);'#13#10#13#10'    end'#13#10'  else'#13#10'    inherited'
  +';'#13#10'  end;'#13#10'end;'#13#10'*)'#13#10'//function TXGPUCanvas.ParamNu'
  +'mArrayToString:String;    // (used for debugging)'#13#10'//var'#13#10'//  i'
  +',j:integer;'#13#10'//  str:String;'#13#10'//begin'#13#10'//  str:=''['';'#13
  +#10'//  for i:=0 to length(ParamNumArray)-1 do'#13#10'//  begin'#13#10'//   '
  +' if i>0 then str:=str+'','';'#13#10'//    str:=str+ParamNumArray[i].ParamNa'
  +'me+'':['';'#13#10'//    for j:=0 to length(ParamNumArray[i].ParamValue)-1 d'
  +'o'#13#10'//    begin'#13#10'//      if j>0 then str:=str+'','';'#13#10'//  '
  +'    str:=str+FloatToStr(ParamNumArray[i].ParamValue[j]);'#13#10'//    end;'
  +#13#10'//    str:=str+'']'';'#13#10'//  end;'#13#10'//  str:=str+'']'';'#13
  +#10'//  result:=str;'#13#10'//end;'#13#10#13#10'(*'#13#10'procedure TXGPUCan'
  +'vas.TitleChange(Sender: TObject;const cefBrowser:ICefBrowser;const NewTitle'
  +':UString) ;'#13#10'var'#13#10'  params:TStringList;'#13#10'  c:integer;'#13
  +#10'  NewText:String;'#13#10'  TempMsg : ICefProcessMessage;'#13#10#13#10'  '
  +'TempFrame   : ICefFrame;'#13#10'  TempVisitor : TCefFastDomVisitor2;'#13#10
  +'begin'#13#10'  // A frame display has ended.'#13#10'  if (not (csDesigning '
  +'in componentState))'#13#10'  and (not StartingUp)'#13#10'  and (self.myNode'
  +'<>nil)'#13#10'  and (cefBrowser<>nil)'#13#10'  and (myChromium<>nil)'#13#10
  ,'  and (FoundString(NewTitle,self.myNode.NodeName)=1)'#13#10'  then'#13#10' '
  +' begin'#13#10'    // Send a cef message to fetch the new value of the frame'
  +' output array'#13#10'    // (Use the ArgumentList property if you need to p'
  +'ass some parameters.)'#13#10'    TempMsg := TCefProcessMessageRef.New(''get'
  +'outputarray'');'#13#10'    //TempMsg.ArgumentList.SetStringValue(0,);'#13#10
  +'    myChromium.SendProcessMessage(PID_RENDERER, TempMsg);'#13#10'    cefDeb'
  +'ugLog(''TXGPUCanvas TitleChange ''+NewTitle);'#13#10#13#10'  end;'#13#10'en'
  +'d;'#13#10'*)'#13#10'(*'#13#10'  // !! Massive fudge here...'#13#10'  // Usi'
  +'ng the non-graphical kernels prior to running the graphical kernel always r'
  +'esults in the'#13#10'  // output canvas being square.  So, here we crop the'
  +' returned image to the expected dimensions'#13#10'  // before displaying it'
  +'.'#13#10'  str:=str'#13#10'+''  function updateTheCanvas() {''  + LineEndin'
  +'g'#13#10'+''  let ''+self.MyNode.NodeName+''BrowserCanvas = ''+self.MyNode.'
  +'NodeName+''CanvasRenderFnG.getCanvas();'' + LineEnding'#13#10'+''  let disp'
  +'layCanvas = document.getElementById("displayCanvas"); '' + LineEnding'#13#10
  +'+''  let ctx = displayCanvas.getContext("2d"); '' + LineEnding'#13#10'+''  '
  +'let ww=''+self.MyNode.NodeName+''BrowserCanvas.width; '' + LineEnding'#13#10
  +'+''  let hh=''+self.MyNode.NodeName+''BrowserCanvas.height; '' + LineEnding'
  +#13#10'+''  if (hh>''+inttostr(h)+'') { '' + LineEnding'#13#10'+''    ctx.dr'
  +'awImage(DepthPlotBrowserCanvas, 0, (hh-''+inttostr(h)+''),''+inttostr(w)+'''
  +',''+inttostr(h)+'',0,0,''+inttostr(w)+'',''+inttostr(h)+''); }'' + LineEndi'
  +'ng'#13#10'+''  else if (ww>''+inttostr(w)+'') { '' + LineEnding'#13#10'+'' '
  +'   ctx.drawImage(DepthPlotBrowserCanvas, (ww-''+inttostr(w)+''), 0,''+intto'
  +'str(w)+'',''+inttostr(h)+'',0,0,''+inttostr(w)+'',''+inttostr(h)+''); }'' +'
  +' LineEnding'#13#10'+''  else  { '' + LineEnding'#13#10'+''    ctx.drawImage'
  +'(DepthPlotBrowserCanvas, 0, 0); }'' + LineEnding'#13#10'+''  }''  + LineEnd'
  +'ing;'#13#10#13#10'  str:=str'#13#10'  +''  const displayCanvas = document.c'
  +'reateElement(''''canvas'''');  '' + LineEnding'#13#10'  +''  displayCanvas.'
  +'id = "displayCanvas";  '' + LineEnding'#13#10'  +''  displayCanvas.width='''
  +'+inttostr(w)+''; '' + LineEnding'#13#10'  +''  displayCanvas.height=''+intt'
  +'ostr(h)+''; '' + LineEnding'#13#10'  +''  document.getElementsByTagName("bo'
  +'dy")[0].appendChild(displayCanvas); '' + LineEnding'#13#10'  +''  updateThe'
  +'Canvas(); '' + LineEnding;'#13#10' *)'#13#10#13#10'(*'#13#10'str:=str'#13#10
  +'+''  function PostMessageOutputArray(objid, cval, outputArray) {''  + LineE'
  +'nding'#13#10'//    +''  var OutObj = new JSONObject();    ''  + LineEnding'
  +#13#10'//    +''  var jZ = new JSONArray();          ''  + LineEnding'#13#10
  +'//    +''  for (var z=0; z<outputArray.length; z++) { ''  + LineEnding'#13
  +#10'//    +''    var jY = new JSONArray();          ''  + LineEnding'#13#10
  +'//    +''    jZ.put(jY);                              ''  + LineEnding'#13
  +#10'//    +''    for (var y=0; y<outputArray[z].length; y++) { ''  + LineEnd'
  +'ing'#13#10'//    +''      var jX = new JSONArray();             ''  + LineE'
  +'nding'#13#10'//    +''      jY.put(jX);                                 '' '
  +' + LineEnding'#13#10'//    +''      for (var x=0; x<outputArray[y].length; '
  +'x++) { ''  + LineEnding'#13#10'//    +''        jX.put(outputArray[z][y][x]'
  +');              ''  + LineEnding'#13#10'//    +''      }   ''  + LineEnding'
  +#13#10'//    +''    }   ''  + LineEnding'#13#10'//    +''  }   ''  + LineEnd'
  +'ing'#13#10#13#10'//    +''   var mObj = new Object;    ''  + LineEnding'#13
  +#10'//    +''   mObj.Data = outputArray;  ''  + LineEnding'#13#10'//    +'' '
  +'  if (running) {console.log("''+myNode.NodeName+''O "+JSON.stringify(mObj))'
  +';}'' + LineEnding ;'#13#10#13#10'//    +''   if (running) {console.log("''+'
  +'myNode.NodeName+''S "+outputArray);}'' + LineEnding ;'#13#10'*)'#13#10#13#10
  +#13#10#13#10
]);
LazarusResources.Add('xgpueditor','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XGPUEditor;'
  +#13#10#13#10'{$mode objfpc}{$H+}'#13#10#13#10'interface'#13#10'uses'#13#10' '
  +'   Classes, SysUtils, TypInfo, StringUtils, NodeUtils, XIFrame, Math,'#13#10
  +'    UtilsJSCompile, XForm, XCode, XButton, XVBox, XTabControl, XMemo, XComb'
  +'oBox, EventsInterface,'#13#10'    WebTranspilerUtils,'#13#10'  {$ifndef JSc'
  +'ript}'#13#10'    LResources, Forms, Controls, StdCtrls, Graphics, Dialogs, '
  +'ExtCtrls, Propedits, RTTICtrls,'#13#10'    LazsUtils, LCLIntf,'#13#10'    L'
  +'CLType, gettext,'#13#10'    {$ifdef Chromium}'#13#10'    uCEFChromium, uCEF'
  +'Interfaces, uCEFTypes,'#13#10'    {$endif}'#13#10'  {$else}'#13#10'    webf'
  +'ilecache, pas2jswebcompiler,'#13#10'    HTMLUtils,'#13#10'  {$endif}'#13#10
  +'    WrapperPanel, Events;'#13#10#13#10'type TAnimCodeArray = Array of TStri'
  +'ngList;'#13#10'type  TGPUEventClass = class'#13#10'    procedure CloseCodeE'
  +'ditor(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    p'
  +'rocedure GPUCodeEditHandleClickMessage(e:TEventStatus;nodeID: AnsiString; m'
  +'yValue: AnsiString);'#13#10'    procedure LaunchGPUHTML(e:TEventStatus;node'
  +'ID: AnsiString; myValue: AnsiString);'#13#10'    procedure GPUComboBoxChang'
  +'e(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    proce'
  +'dure TabChange(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'    {$ifndef JScript}'#13#10'    procedure EditorResize(Sender: TObject)'
  +';'#13#10'    {$endif}'#13#10'  end;'#13#10#13#10'var'#13#10'  GPUEditorForm'
  +':TXForm;'#13#10'  GPUEditorTabControl:TXTabControl;'#13#10'  GPUCodeEditor:'
  +'TXCode;'#13#10'  GPUComboBox:TXComboBox;'#13#10'  GPUMemo:TXMemo;'#13#10'  '
  +'EditingGPUNode:TDataNode;'#13#10'  {$ifndef JScript}'#13#10'    GPUEditorTo'
  +'pControl:TWinControl;'#13#10'    {$endif}'#13#10'  GPUEditorMode:String;'#13
  +#10'  GPUEvents:TGPUEventClass;'#13#10#13#10'procedure CreateGPUEditForm;'#13
  +#10'procedure ShowGPUEditor(GPUNode:TDataNode);'#13#10'procedure ShowGPUKern'
  +'el(GPUNode:TDataNode;filename:string;targetLine:integer;CharPos:String);'#13
  +#10#13#10#13#10'implementation'#13#10'uses XGPUCanvas;'#13#10#13#10'procedur'
  +'e CreateGPUEditForm;'#13#10'var'#13#10'  FormNode,TabControlNode,TabPageNod'
  +'e1,TabPageNode2,EditorNode,VBNode,BtnNode:TDataNode;'#13#10'  MemoNode,VBNo'
  +'de2,BtnNode2,ComboNode:TDataNode;'#13#10'  DoneBtn,LaunchBtn:TXButton;'#13
  +#10'  VB,vb2:TXVBox;'#13#10'  tmp, Olist:String;'#13#10'begin'#13#10#13#10#13
  +#10'  // Create the popup form for editing the GPU animation code block...'
  +#13#10'  if GPUEditorForm=nil then'#13#10'  begin'#13#10'    {$ifndef JScrip'
  +'t}'#13#10'    GPUEditorForm:=TXForm.CreateNew(Application);'#13#10'    GPUE'
  +'ditorForm.Name:=''XGPUCodeEditorForm'';'#13#10'    FormNode:=CreateFormNode'
  +'(GPUEditorForm);'#13#10'    GPUEditorForm.BorderStyle:=bsSizeable;         '
  +'  // allows resizing'#13#10'    GPUEditorForm.OnResize:=@GPUEvents.EditorRe'
  +'size;'#13#10#13#10'    {$else}'#13#10'    FormNode:=AddDynamicWidget(''TXFo'
  +'rm'',nil,nil,''XGPUCodeEditorForm'','''',''Left'',-1);'#13#10'    GPUEditor'
  +'Form:=TXForm(FormNode);'#13#10'    GPUEditorForm.Name:=''XGPUCodeEditorForm'
  +''';'#13#10'    {$endif}'#13#10'    GPUEditorForm.Caption:=''XGPUCanvas Anim'
  +'ation Code Editor'';'#13#10'    GPUEditorForm.Top:=100;'#13#10'    GPUEdito'
  +'rForm.Left:=100;'#13#10'    GPUEditorForm.Height:=500;'#13#10'    GPUEditor'
  +'Form.Width:=900;'#13#10'    FormNode.IsDynamic:=false;'#13#10#13#10'    add'
  +'childtoparentnode(SystemNodeTree,FormNode,-1);   //!!!! check this doesn''t'
  +' upset things...don''t want these in a systemsave...'#13#10#13#10'    TabCo'
  +'ntrolNode:=AddDynamicWidget(''TXTabControl'',GPUEditorForm,FormNode,''XGPUT'
  +'abControl'','''',''Left'',-1);'#13#10'    TabControlNode.IsDynamic:=false;'
  +#13#10'    GPUEditorTabControl:=TXTabControl(TabControlNode.ScreenObject);'
  +#13#10'    GPUEditorTabControl.ContainerHeight:=''100%'';'#13#10'    GPUEdit'
  +'orTabControl.ContainerWidth:=''100%'';'#13#10'    TabControlNode.registerEv'
  +'ent(''Change'',@GPUEvents.TabChange);'#13#10#13#10'    TabPageNode1:=AddDyn'
  +'amicWidget(''TXTabSheet'',GPUEditorForm,TabControlNode,''XGPUTabSheet1'','''
  +''',''Left'',-1);'#13#10'    TabPageNode2:=AddDynamicWidget(''TXTabSheet'',G'
  +'PUEditorForm,TabControlNode,''XGPUTabSheet2'','''',''Left'',-1);'#13#10'   '
  +' TabPageNode1.IsDynamic:=false;'#13#10'    TabPageNode2.IsDynamic:=false;'
  +#13#10'    TXTabSheet(TabPageNode1.ScreenObject).Caption:=''GPU Kernel Code'
  +''';'#13#10'    TXTabSheet(TabPageNode2.ScreenObject).Caption:=''Generated H'
  ,'TML'';'#13#10'    TXTabControl(TabControlNode.ScreenObject).TabIndex:=0;'#13
  +#10#13#10'    VBNode:=AddDynamicWidget(''TXVBox'',GPUEditorForm,TabPageNode1'
  +',''XGPUVBox'','''',''Left'',-1);'#13#10'    VB:=TXVBox(VBNode.ScreenObject)'
  +';'#13#10'    VB.ContainerHeight:=''100%'';'#13#10'    VB.Border:=false;'#13
  +#10'    VBNode.IsDynamic:=false;'#13#10#13#10'    ComboNode:=AddDynamicWidge'
  +'t(''TXComboBox'',GPUEditorForm,VBNode,''XGPUComboBox'','''',''Left'',-1);'
  +#13#10'    GPUComboBox:=TXComboBox(ComboNode.ScreenObject);'#13#10'    GPUCo'
  +'mboBox.OptionList:=''["Graphical (Final)"]'';'#13#10'    GPUComboBox.ItemIn'
  +'dex:=0;'#13#10'    GPUComboBox.LabelPos:=''Left'';'#13#10'    GPUComboBox.L'
  +'abelText:=''Select Kernel Code to Edit'';'#13#10'    ComboNode.IsDynamic:=f'
  +'alse;'#13#10'    GPUComboBox.myNode.registerEvent(''Change'',@GPUEvents.GPU'
  +'ComboBoxChange);'#13#10#13#10'    EditorNode:=AddDynamicWidget(''TXCode'',G'
  +'PUEditorForm,VBNode,''XGPUCodeEditor'','''',''Left'',-1);'#13#10'    GPUCod'
  +'eEditor:=TXCode(EditorNode.ScreenObject);'#13#10'    GPUCodeEditor.Containe'
  +'rHeight:=''90%'';'#13#10'    GPUCodeEditor.ContainerWidth:=''100%'';'#13#10
  +'    GPUCodeEditor.MessagesHeight:=''30%'';'#13#10'    GPUCodeEditor.LabelTe'
  +'xt:='''';'#13#10'    GPUCodeEditor.myNode.registerEvent(''ClickMessage'',@G'
  +'PUEvents.GPUCodeEditHandleClickMessage);'#13#10'    EditorNode.IsDynamic:=f'
  +'alse;'#13#10#13#10'    BtnNode:=AddDynamicWidget(''TXButton'',GPUEditorForm'
  +',VBNode,''XGPUDoneBtn'','''',''Left'',-1);'#13#10'    DoneBtn:=TXButton(Btn'
  +'Node.ScreenObject);'#13#10'    DoneBtn.Caption:=''Done'';'#13#10'    DoneBt'
  +'n.myNode.registerEvent(''ButtonClick'',@GPUEvents.CloseCodeEditor);'#13#10
  +'    BtnNode.IsDynamic:=false;'#13#10#13#10'    VBNode2:=AddDynamicWidget('''
  +'TXVBox'',GPUEditorForm,TabPageNode2,''XGPUVBox2'','''',''Left'',-1);'#13#10
  +'    VB2:=TXVBox(VBNode2.ScreenObject);'#13#10'    VB2.ContainerHeight:=''10'
  +'0%'';'#13#10'    VB2.Border:=false;'#13#10'    VBNode2.IsDynamic:=false;'#13
  +#10#13#10'    MemoNode:=AddDynamicWidget(''TXMemo'',GPUEditorForm,VBNode2,'''
  +'XGPUHTMLMemo'','''',''Left'',-1);'#13#10'    GPUMemo:=TXMemo(MemoNode.Scree'
  +'nObject);'#13#10'    GPUMemo.MemoHeight:=''85%'';'#13#10'    GPUMemo.MemoWi'
  +'dth:=''100%'';'#13#10'    GPUMemo.LabelPos:=''Top'';'#13#10'    GPUMemo.Lab'
  +'elText:=''HTML generated at the last GPU activation'';'#13#10'    MemoNode.'
  +'IsDynamic:=false;'#13#10#13#10'    BtnNode2:=AddDynamicWidget(''TXButton'','
  +'GPUEditorForm,VBNode2,''XGPULaunchBtn'','''',''Left'',-1);'#13#10'    Launc'
  +'hBtn:=TXButton(BtnNode2.ScreenObject);'#13#10'    LaunchBtn.Caption:=''Laun'
  +'ch HTML in browser'';'#13#10'    LaunchBtn.myNode.registerEvent(''ButtonCli'
  +'ck'',@GPUEvents.LaunchGPUHTML);'#13#10'    LaunchBtn.Hint:=''Launch the gen'
  +'erated GPU HTML in a separate browser page to aid diagnostics'';'#13#10'   '
  +' BtnNode2.IsDynamic:=false;'#13#10#13#10'    {$ifndef JScript}'#13#10'    G'
  +'PUEditorTopControl:=GPUEditorTabControl;'#13#10'    {$endif}'#13#10#13#10' '
  +' end;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TGPUEvent'
  +'Class.EditorResize(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(TXF'
  +'orm(Sender), GPUEditorTopControl);'#13#10'end;'#13#10#13#10'{$endif}'#13#10
  +#13#10'procedure SaveThisCodeBlock(idx:integer);'#13#10'var'#13#10'  AllKern'
  +'els:TAnimCodeArray;'#13#10'  AllCode:String;'#13#10'  i:integer;'#13#10'beg'
  +'in'#13#10'  AllKernels:=TXGPUCanvas(EditingGPUNode.ScreenObject).FetchAllAn'
  +'imCode;'#13#10'//  for i:=0 to length(AllKernels)-1 do'#13#10'//    showmes'
  +'sage(''Existing ''+inttostr(i)+'': ''+AllKernels[i].Text);'#13#10'  // Re-c'
  +'oncatenate the kernel code blocks'#13#10'  for i:=0 to length(AllKernels)-1'
  +' do'#13#10'  begin'#13#10'    if i<>idx then'#13#10'      AllCode:=AllCode+'
  +'AllKernels[i].Text'#13#10'    else'#13#10'      AllCode:=AllCode+GPUCodeEdi'
  +'tor.ItemValue;'#13#10#13#10'    if i<length(AllKernels)-1 then'#13#10'     '
  +' AllCode:=AllCode+eventListdelimiter;'#13#10'  end;'#13#10'  EditAttributeV'
  +'alue(EditingGPUNode,''AnimationCode'',AllCode);'#13#10'//  AllKernels:=TXGP'
  +'UCanvas(EditingGPUNode.ScreenObject).FetchAllAnimCode;'#13#10'//  for i:=0 '
  +'to length(AllKernels)-1 do'#13#10'//    showmessage(''After Save ''+inttost'
  +'r(i)+'': ''+AllKernels[i].Text);'#13#10'end;'#13#10#13#10'procedure TGPUEve'
  +'ntClass.CloseCodeEditor(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'begin'#13#10'  // careful here... if the compile has failed th'
  +'e editor may be showing the whole gpu code unit,'#13#10'  // and not just t'
  +'he user code from the AnimationCode property.'#13#10'  TXGPUCanvas(EditingG'
  +'PUNode.ScreenObject).Active:=false;'#13#10#13#10'  GPUEditorForm.Showing:='
  +'''No'';'#13#10'  GPUMemo.ItemValue:='''';  //!! Lazarus bug? Can''t reopen '
  +'the form (crashes) if this is pre-populated with a long string.'#13#10#13#10
  +'  if GPUEditorMode=''Animation'' then'#13#10'  begin'#13#10'    // Update t'
  ,'he property value ...         !! BUT NOT IF THE WHOLE UNIT IS ON DISPLAY>>>'
  +'>>'#13#10'    SaveThisCodeBlock(GPUComboBox.ItemIndex);'#13#10'  end;'#13#10
  +'end;'#13#10#13#10'procedure TGPUEventClass.GPUCodeEditHandleClickMessage(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var linenumbe'
  +'r:integer;'#13#10'    SelectedLine,FileName,CharPos:string;'#13#10'    Foun'
  +'dLineNum:Boolean;'#13#10' //   tmp1:TStringList;'#13#10'    LineNum:String;'
  +#13#10'    Messages:TStringList;'#13#10'begin'#13#10'   //showmessage(''GPUC'
  +'odeEditHandleClickMessage ''+ nodeID + '' ''+myValue);'#13#10'  {$ifndef JS'
  +'cript}'#13#10'  linenumber:=GPUCodeEditor.TheMessages.CaretPos.Y;'#13#10'  '
  +'SelectedLine:= GPUCodeEditor.TheMessages.lines[linenumber];'#13#10'  GPUCod'
  +'eEditor.GetFileNameLineNumAndCharPos(FoundLineNum,SelectedLine, ''('',FileN'
  +'ame,LineNum,CharPos );'#13#10'  {$else}'#13#10'  // Find the message line t'
  +'hats been clicked on'#13#10'  try'#13#10'  linenumber:=StrToInt(myValue);'
  +#13#10'  except'#13#10'    On E : EConvertError do'#13#10'    EXIT;'#13#10' '
  +' end;'#13#10'  Messages:=TStringList.Create;'#13#10'  Messages.Text:=GPUCod'
  +'eEditor.MessageLines;'#13#10'  if linenumber>Messages.Count then'#13#10'   '
  +' EXIT;'#13#10'  SelectedLine:= Messages[linenumber-1];'#13#10'  Messages.Fr'
  +'ee;'#13#10#13#10'  // Find the indicated line number from the message'#13#10
  +'  GPUCodeEditor.GetFileNameLineNumAndCharPos(FoundLineNum,SelectedLine, ''('
  +''',FileName,LineNum,CharPos );'#13#10#13#10'  //showmessage(''FileName=''+F'
  +'ileName+'' Indicated Linenum is ''+linenum);'#13#10'  {$endif}'#13#10#13#10
  +'  //load the indicated code block into the code edit box'#13#10'  if trim(F'
  +'ileName)<>'''' then'#13#10'  begin'#13#10'    ShowGPUKernel(EditingGPUNode,'
  +'FileName,linenumber,CharPos);'#13#10'  end;'#13#10'end;'#13#10#13#10'proced'
  +'ure TGPUEventClass.LaunchGPUHTML(e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'var'#13#10'  myHTML:String;'#13#10'begin'#13#10'  if '
  +'GPUMemo.ItemValue<>'''' then'#13#10'  begin'#13#10'    myHTML:=GPUMemo.Item'
  +'Value;'#13#10'    TXGPUCanvas(EditingGPUNode.ScreenObject).LaunchHTML(''Dat'
  +'a'',myHTML,''GPU Diagnostic'');'#13#10'  end;'#13#10'end;'#13#10#13#10'proc'
  +'edure TGPUEventClass.TabChange(e:TEventStatus;nodeID: AnsiString; myValue: '
  +'AnsiString);'#13#10'begin'#13#10'  if GPUEditorTabControl.TabIndex=1 then'
  +#13#10'    GPUMemo.ItemValue:=TXGPUCanvas(EditingGPUNode.ScreenObject).Gener'
  +'atedHTML;'#13#10'end;'#13#10#13#10'procedure TGPUEventClass.GPUComboBoxChan'
  +'ge(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13
  +#10'  thisNode:TDataNode;'#13#10'  AllKernels:TAnimCodeArray;'#13#10'  i:int'
  +'eger;'#13#10'begin'#13#10'  // Select the given Kernel code for display in '
  +'the editor.'#13#10'  if (EditingGPUNode<>nil) then'#13#10'  begin'#13#10'  '
  +'  // Save the current code block.'#13#10'    //showmessage(''saving prior i'
  +'ndex ''+inttostr(GPUComboBox.PriorIndex));'#13#10'    if (GPUComboBox.Prior'
  +'Index>-1) then'#13#10'      SaveThisCodeBlock(GPUComboBox.PriorIndex);'#13
  +#10'    // Fetch the required code block'#13#10'    AllKernels:=TXGPUCanvas('
  +'EditingGPUNode.ScreenObject).FetchAllAnimCode;'#13#10'    GPUCodeEditor.Ite'
  +'mValue:=AllKernels[GPUComboBox.ItemIndex].Text;'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'procedure ShowGPUEditor(GPUNode:TDataNode);'#13#10'var'#13#10' '
  +' AllKernels:TAnimCodeArray;'#13#10'begin'#13#10'  // Edit the AnimationCode'
  +' in a TXGPUCanvas component using the dedicated popup editor...'#13#10'  //'
  +' the animation code may consist of several kernel procedures.'#13#10'  // T'
  +'hese are delimited by the EventListDelimiter string.'#13#10'  // The GPU Co'
  +'de Editor needs to show the first kernel proc.'#13#10'  AllKernels:=TXGPUCa'
  +'nvas(GPUNode.ScreenObject).FetchAllAnimCode;'#13#10'  //XGPUCanvas.GPUCodeE'
  +'ditor.ItemValue:=ObjectInspectorSelectedCodeTreeNode.GetAttribute(''Animati'
  +'onCode'',true).AttribValue;'#13#10'  GPUCodeEditor.ItemValue:=AllKernels[0]'
  +'.Text;'#13#10'  GPUCodeEditor.MessageLines:='''';'#13#10'  GPUCodeEditor.Me'
  +'ssagesHeight:=''1'';'#13#10'  //   GPUMemo.ItemValue:=TXGPUCanvas(ObjectIns'
  +'pectorSelectedCodeTreeNode.ScreenObject).GeneratedHTML;'#13#10'  //!! Lazar'
  +'us bug?     Have to populate GPUMemo later (eg. on tab change), otherwise t'
  +'he popup form crashes.'#13#10'  EditingGPUNode:=GPUNode;'#13#10'  GPUEditor'
  +'Mode:=''Animation'';'#13#10'  GPUComboBox.OptionList:=TXGPUCanvas(EditingGP'
  +'UNode.ScreenObject).BuildKernelList;'#13#10'  GPUComboBox.ItemIndex:=0;'#13
  +#10'  GPUComboBox.PriorIndex:=0;'#13#10'  XGPUEditor.GPUCodeEditor.ReadOnly:'
  +'=false;'#13#10'  GPUEditorForm.Showing:=''Modal'';'#13#10#13#10'end;'#13#10
  +#13#10'procedure ShowGPUKernel(GPUNode:TDataNode;filename:string;targetLine:'
  +'integer;CharPos:String);'#13#10'var'#13#10'  bits:TStringList;'#13#10'  tar'
  +'getKernel:integer;'#13#10'  AllKernels:TAnimCodeArray;'#13#10'  i:integer;'
  ,#13#10'  tmp:string;'#13#10'begin'#13#10'  if (GPUNode<>nil) then'#13#10'  b'
  +'egin'#13#10'    EditingGPUNode:=GPUNode;'#13#10'  end;'#13#10'  // FileName'
  +' is NodeName.num.AnimationCode  If num is zero, this is the final kernel, o'
  +'therwise one of the stage kernels.'#13#10'  // Set the comboBox to the rele'
  +'vant item.'#13#10'  bits:=stringsplit(FileName,EditingGPUNode.NodeName+''.'
  +''');'#13#10'  for i:=0 to bits.count-1 do'#13#10'  begin'#13#10'    tmp:=bi'
  +'ts[i];'#13#10'  end;'#13#10'  if (bits.Count=2)'#13#10'  and (bits[1]<>'''''
  +') then'#13#10'  begin'#13#10'    bits:=stringsplit(bits[1],''.'');'#13#10' '
  +'   targetKernel:=strtoint(bits[0]);'#13#10'    AllKernels:=TXGPUCanvas(Edit'
  +'ingGPUNode.ScreenObject).FetchAllAnimCode;'#13#10'    GPUComboBox.OptionLis'
  +'t:=TXGPUCanvas(EditingGPUNode.ScreenObject).BuildKernelList;'#13#10'    GPU'
  +'ComboBox.ItemIndex:=targetKernel;'#13#10'    GPUComboBox.PriorIndex:=target'
  +'Kernel;'#13#10'    GPUCodeEditor.ItemValue:=AllKernels[targetKernel].Text;'
  +#13#10#13#10'    GPUCodeEditor.ReadOnly:=false;'#13#10'    GPUEditorMode:='''
  +'Animation'';'#13#10#13#10'    {$ifndef JScript}'#13#10'    // set cursor po'
  +'sition'#13#10'    if (CharPos<>'''') then'#13#10'    begin'#13#10'      GPU'
  +'CodeEditor.GoToLineCharPos(targetLine,StrToInt(CharPos));'#13#10'    end;'
  +#13#10'    {$endif}'#13#10'    if (GPUEditorForm.Showing=''No'') then'#13#10
  +'    begin'#13#10'      GPUCodeEditor.MessageLines:='''';'#13#10'      GPUCo'
  +'deEditor.MessagesHeight:=''1'';'#13#10'      GPUEditorForm.Showing:=''Modal'
  +''';'#13#10'    end;'#13#10'    {$ifdef JScript}'#13#10'    // set cursor po'
  +'sition'#13#10'    if (CharPos<>'''') then'#13#10'    begin'#13#10'      GPU'
  +'CodeEditor.GoToLineCharPos(targetLine,StrToInt(CharPos));'#13#10'    end;'
  +#13#10'    {$endif}'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    sho'
  +'wmessage(''This code is not available for edit'');'#13#10'  end;'#13#10'  b'
  +'its.Free;'#13#10'end;'#13#10#13#10'begin'#13#10'  GPUEvents:=TGPUEventClass'
  +'.Create;'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('xcomposite','PAS',[
  '(*'#13#10'    Copyright (c) 2018  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDEComponents package.'#13#10#13#10'    This package is distr'
  +'ibuted in the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRA'
  +'NTY; without even the implied warranty of'#13#10'    MERCHANTABILITY or FIT'
  +'NESS FOR A PARTICULAR PURPOSE.'#13#10#13#10' ******************************'
  +'****************************************'#13#10' *)'#13#10'unit XComposite;'
  +#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13
  +#10#13#10'interface'#13#10#13#10'uses'#13#10'    Classes, SysUtils, TypInfo,'
  +' StringUtils, NodeUtils, XIFrame, Math,'#13#10'    UtilsJSCompile, XForm, X'
  +'Code, XButton, XVBox, XTabControl, XMemo, EventsInterface,'#13#10'    XComp'
  +'ositeIntf,'#13#10'  {$ifndef JScript}'#13#10'    LResources, Forms, Control'
  +'s, StdCtrls, Graphics, Dialogs, ExtCtrls, Propedits, RTTICtrls,'#13#10'    '
  +'LazsUtils, LCLIntf,'#13#10'    LCLType, gettext,'#13#10'  {$else}'#13#10'  '
  +'  HTMLUtils,'#13#10'  {$endif}'#13#10'    WrapperPanel, Events;'#13#10#13#10
  +#13#10'type'#13#10'  TXComposite = class(TWrapperPanel)'#13#10'  private'#13
  +#10'    { Private declarations }'#13#10'    function GetInheritColor:Boolean'
  +';'#13#10'    function GetCompositeType:String;'#13#10'    function GetSourc'
  +'eString:String;'#13#10#13#10'    procedure SetInheritColor(AValue:Boolean);'
  +#13#10'    procedure SetCompositeType(AValue:String);'#13#10'    procedure S'
  +'etSourceString(AValue:String);'#13#10#13#10'    procedure SetMyEventTypes;'
  +#13#10#13#10'  protected'#13#10'    { Protected declarations }'#13#10'  publ'
  +'ic'#13#10'    { Public declarations }'#13#10'    {$ifndef JScript}'#13#10' '
  +'   procedure DoCompositeConstructor(TheOwner:TComponent);'#13#10'    constr'
  +'uctor Create(TheOwner: TComponent); override;'#13#10'    constructor Create'
  +'(TheOwner: TComponent;IsDynamic:Boolean); override;'#13#10'    destructor D'
  +'estroy; override;'#13#10'    {$else}'#13#10'    constructor Create(MyForm:T'
  +'Form;NodeName,NameSpace:String);'#13#10'    {$endif}'#13#10#13#10'  publish'
  +'ed'#13#10'    { Published declarations }'#13#10#13#10'    // Properties def'
  +'ined for this class...'#13#10'    property InheritColor:Boolean read GetInh'
  +'eritColor write SetInheritColor;'#13#10'    property CompositeType:String r'
  +'ead GetCompositeType write SetCompositeType;'#13#10'    property SourceStri'
  +'ng:String read GetSourceString write SetSourceString;'#13#10'  end;'#13#10
  +#13#10'  procedure CompositePropertyChanged(myNode:TDataNode; propName:Strin'
  +'g);'#13#10#13#10'implementation'#13#10#13#10'const MyNodeType=''TXComposite'
  +''';'#13#10'var'#13#10'  myDefaultAttribs:TDefaultAttributesArray;'#13#10#13
  +#10'procedure TXComposite.SetMyEventTypes;'#13#10'begin'#13#10'  MyEventType'
  +'s.Add(''Click'');'#13#10'end;'#13#10#13#10#13#10#13#10'{$ifndef JScript}'#13
  +#10#13#10'function CreateCompositeWidget(ParentNode:TDataNode;ScreenObjectNa'
  +'me,NameSpace:string;position:integer;Alignment:String):TDataNode;'#13#10'va'
  +'r'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10'  NewNode:=CreateDynamicL'
  +'azWidget(''TXComposite'',ParentNode.MyForm,ParentNode,ScreenObjectName,Name'
  +'Space,Alignment,position);'#13#10'  result:=NewNode;'#13#10'end;'#13#10#13
  +#10'procedure TXComposite.DoCompositeConstructor(TheOwner:TComponent);'#13#10
  +'begin'#13#10'  Caption:='''';'#13#10'  Constraints.MinHeight:=20;'#13#10'  '
  +'Constraints.MinWidth:=20;'#13#10#13#10'  self.BorderSpacing.Around:=0;'#13
  +#10'  self.ParentColor:=false;'#13#10'  self.IsContainer:=false;'#13#10#13#10
  +'  self.SetMyEventTypes;'#13#10'  CreateComponentDataNode2(self,MyNodeType,m'
  +'yDefaultAttribs, self.myEventTypes, TheOwner,true);'#13#10#13#10'  AlignChi'
  +'ldrenVertical:=true;'#13#10'end;'#13#10#13#10'constructor TXComposite.Creat'
  +'e(TheOwner:TComponent);'#13#10'begin'#13#10'  inherited Create(TheOwner,fal'
  +'se);'#13#10'  DoCompositeConstructor(TheOwner);'#13#10'end;'#13#10#13#10'co'
  +'nstructor TXComposite.Create(TheOwner:TComponent;IsDynamic:Boolean);'#13#10
  +'begin'#13#10'  inherited Create(TheOwner,IsDynamic);'#13#10'  DoCompositeCo'
  +'nstructor(TheOwner);'#13#10'end;'#13#10#13#10'destructor TXComposite.Destro'
  +'y;'#13#10'begin'#13#10'  if (not (csDesigning in componentState)) then'#13
  +#10'  begin'#13#10'    myControl.Free;'#13#10'  end;'#13#10'  inherited Dest'
  +'roy;'#13#10'end;'#13#10#13#10'{$else} //JScript'#13#10#13#10'constructor TX'
  +'Composite.Create(MyForm:TForm;NodeName,NameSpace:String);'#13#10'begin'#13
  +#10'  inherited Create(NodeName,NameSpace);'#13#10'  self.NodeType:=''TXComp'
  +'osite'';'#13#10'  self.MyForm:=MyForm;'#13#10'  self.IsContainer:=false;'#13
  +#10#13#10'  self.SetMyEventTypes;'#13#10#13#10'  SetNodePropDefaults(self,my'
  +'DefaultAttribs);'#13#10#13#10'end;'#13#10#13#10'function CreateCompositeWid'
  +'get(MyNode, ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position'
  +':integer;Alignment:String):TDataNode;'#13#10'var'#13#10'  OnClickString:Str'
  ,'ing;'#13#10'begin'#13#10#13#10'  OnClickString:=''onclick="event.stopPropag'
  +'ation();pas.Events.handleEvent(null,''''Click'''',''''''+ScreenObjectName+'
  +''''''',''''''+NameSpace+'''''', '''''''');" '';'#13#10#13#10'  asm'#13#10' '
  +' try{'#13#10'      var wrapper = pas.HTMLUtils.CreateWrapperDiv(MyNode,Pare'
  +'ntNode,''UI'',ScreenObjectName,NameSpace,$impl.MyNodeType,position);'#13#10
  +#13#10'      var HTMLString='''';'#13#10'      var wrapperid = NameSpace+Scr'
  +'eenObjectName;'#13#10'      var MyObjectName=wrapperid+''Contents'';'#13#10
  +#13#10'      HTMLString = ''<div  id="''+MyObjectName+''" class="vboxNoStret'
  +'ch ''+NameSpace+ScreenObjectName+''" ''  +'#13#10'                     '' s'
  +'tyle="height:100%;width:100%; "'' +'#13#10'                     OnClickStri'
  +'ng +'#13#10'                     ''></div>  '';'#13#10#13#10'      var wrap'
  +'per=document.getElementById(wrapperid);'#13#10'      wrapper.insertAdjacent'
  +'HTML(''beforeend'', HTMLString);'#13#10#13#10'  }catch(err) { alert(err.mes'
  +'sage+''  in XVBox.CreateVHBox'');}'#13#10'  end;'#13#10'  MyNode.ScreenObje'
  +'ct:=MyNode;'#13#10#13#10'  RefreshComponentProps(myNode);'#13#10#13#10'  re'
  +'sult:=myNode;'#13#10'end;'#13#10#13#10#13#10'function CreateinterfaceObj(My'
  +'Form:TForm;NodeName,NameSpace:String):TObject;'#13#10'begin'#13#10'  result'
  +':=TObject(TXComposite.Create(MyForm,NodeName,NameSpace));'#13#10'end;'#13#10
  +#13#10'{$endif}'#13#10'function TXComposite.GetInheritColor:Boolean;'#13#10
  +'begin'#13#10'  result:=myStrToBool(myNode.GetAttribute(''InheritColor'',tru'
  +'e).AttribValue);'#13#10'end;'#13#10#13#10'procedure TXComposite.SetInheritC'
  +'olor(AValue:Boolean);'#13#10'var'#13#10'  clr:String;'#13#10'  parentNode:T'
  +'DataNode;'#13#10'begin'#13#10'  if myNode<>nil then'#13#10'  begin'#13#10' '
  +'   myNode.SetAttributeValue(''InheritColor'',myBoolToStr(AValue),''Boolean'
  +''');'#13#10'    parentNode:=FindParentOfNode(SystemNodeTree,myNode);'#13#10
  +'    if parentNode<>nil then'#13#10'    begin'#13#10'      if AValue=true th'
  +'en'#13#10'      begin'#13#10'        clr:= parentNode.GetAttribute(''BgColo'
  +'r'',true).AttribValue;'#13#10'        myNode.SetAttributeValue(''BgColor'','
  +'clr,''Color'');'#13#10'        {$ifndef JScript}'#13#10'        self.Parent'
  +'Color:=true;'#13#10'        {$else}'#13#10'        asm'#13#10'          var'
  +' ob = document.getElementById(this.NameSpace+this.NodeName);'#13#10'       '
  +'   if (ob!=null) {'#13#10'            if (AValue==true ) {'#13#10'         '
  +'      ob.style.backgroundColor=''inherit'';'#13#10'          } }'#13#10'   '
  +'     end;'#13#10'        {$endif}'#13#10'      end'#13#10'      else'#13#10
  +'      begin'#13#10'        clr:= myNode.GetAttribute(''BgColor'',true).Attr'
  +'ibValue;'#13#10'        {$ifndef JScript}'#13#10'        self.ParentColor:='
  +'false;'#13#10'        self.Color:=HexRGBToColor(clr);'#13#10'        {$else'
  +'}'#13#10'        asm'#13#10'          var ob = document.getElementById(this'
  +'.NameSpace+this.NodeName);'#13#10'          if (ob!=null) {'#13#10'        '
  +'    if (AValue==true ) {'#13#10'               ob.style.backgroundColor=clr'
  +';'#13#10'          } }'#13#10'        end;'#13#10'        {$endif}'#13#10' '
  +'     end;'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'function T'
  +'XComposite.GetCompositeType:String;'#13#10'begin'#13#10'  result:=MyNode.ge'
  +'tAttribute(''CompositeType'',true).AttribValue;'#13#10'end;'#13#10#13#10'fu'
  +'nction TXComposite.GetSourceString:String;'#13#10'begin'#13#10'  result:=My'
  +'Node.getAttribute(''SourceString'',true).AttribValue;'#13#10'end;'#13#10#13
  +#10'procedure TXComposite.SetCompositeType(AValue:String);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''CompositeType'',AValue);'#13#10'end;'#13#10
  +#13#10'procedure TXComposite.SetSourceString(AValue:String);'#13#10'begin'#13
  +#10'  myNode.SetAttributeValue(''SourceString'',AValue);'#13#10'end;'#13#10
  +#13#10#13#10'procedure CompositePropertyChanged(myNode:TDataNode; propName:S'
  +'tring);'#13#10'var'#13#10'  TargetNode:TDataNode;'#13#10'  newValue:String;'
  +#13#10'begin'#13#10'  if (myNode.NodeType=''TXCompositeIntf'')'#13#10'  or ('
  +'myNode.NodeType=''TXComposite'') then'#13#10'  begin'#13#10'    newValue:=m'
  +'yNode.GetAttribute(propName,false).AttribValue;'#13#10'    if (myNode.NameS'
  +'pace<>'''') then'#13#10'    begin'#13#10'       // Expose new property valu'
  +'e to the outside, for an interface definition'#13#10'       if myNode.NodeT'
  +'ype=''TXCompositeIntf'' then'#13#10'       begin'#13#10'          // find t'
  +'he composite container of this namespace'#13#10'          TargetNode:=FindC'
  +'ompositeContainer(myNode);'#13#10'          // set the equivalent property'
  +#13#10'          if TargetNode<>nil then'#13#10'            TargetNode.SetAt'
  +'tributeValue(propName,newValue);'#13#10'       end;'#13#10'    end'#13#10' '
  +'   else if myNode.NodeType=''TXComposite'' then'#13#10'    begin'#13#10'   '
  +'   // update the interface property within the namespace'#13#10'      Targe'
  ,'tNode := FindInterfaceNode(myNode,myNode.NodeName,PropName);'#13#10'      i'
  +'f TargetNode<>nil then'#13#10'         EditAttributeValue(TargetNode,propNa'
  +'me,newValue);'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'begin'
  +#13#10'  AddWrapperDefaultAttribs(myDefaultAttribs);'#13#10'  AddDefaultAttr'
  +'ibute(myDefaultAttribs,''ContainerWidth'',''String'','''','''',false);'#13
  +#10'  AddDefaultAttribute(myDefaultAttribs,''ContainerHeight'',''String'','''
  +''','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''Border'','''
  +'Boolean'',''True'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAttri'
  +'bs,''SpacingAround'',''Integer'',''0'','''',false);'#13#10'  AddDefaultAttr'
  +'ibute(myDefaultAttribs,''CompositeType'',''String'','''','''',true);'#13#10
  +'  AddDefaultAttribute(myDefaultAttribs,''BgColor'',''Color'',''#FFFFFF'','''
  +''',false);'#13#10'  AddDefaultAttribute(myDefaultAttribs,''InheritColor'','
  +'''Boolean'',''False'','''',false);'#13#10'  AddDefaultAttribute(myDefaultAt'
  +'tribs,''SourceString'',''String'','''','''',true);'#13#10'  AddDefaultsToTa'
  +'ble(MyNodeType,myDefaultAttribs);'#13#10#13#10'  AddAttribOptions(MyNodeTyp'
  +'e,''Alignment'',AlignmentOptions);'#13#10'  AddAttribOptions(MyNodeType,''L'
  +'abelPos'',LabelPosOptions);'#13#10'  {$IFndef JScript}'#13#10'  RegisterCla'
  +'ss(TXComposite);'#13#10'  AddNodeFuncLookup(MyNodeType,@CreateCompositeWidg'
  +'et);'#13#10'  {$else}'#13#10'  AddNodeFuncLookup(MyNodeType,@CreateInterfac'
  +'eObj,@CreateCompositeWidget);'#13#10'  {$endif}'#13#10#13#10#13#10'end.'#13
  +#10
]);
LazarusResources.Add('xcompositeintf','PAS',[
  'unit XCompositeIntf;'#13#10#13#10'//Non-visual component to provide dynamic '
  +'interface properties and events when encapsulating a system.'#13#10'// Also'
  +' see XComposite.pas.'#13#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$'
  +'H+}'#13#10'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'    Cla'
  +'sses, SysUtils, Types,NodeUtils,StringUtils,'#13#10'    {$ifndef JScript}'
  +#13#10'    Forms, Controls, StdCtrls, LResources, Graphics, Dialogs, ExtCtrl'
  +'s, PropEdits, RTTICtrls,'#13#10'    LazsUtils,'#13#10'    {$Else}'#13#10'  '
  +'  HTMLUtils,'#13#10'    {$endif}'#13#10'    WrapperPanel;'#13#10#13#10#13#10
  +'type'#13#10'    {$ifndef JScript}'#13#10'    TXCompositeIntf = class(TCompo'
  +'nent)'#13#10'    {$Else}'#13#10'    TXCompositeIntf = class(TWrapperPanel)'
  +#13#10'    {$endif}'#13#10'  private'#13#10'  {$ifndef JScript}'#13#10'  Fmy'
  +'Node:TDataNode;'#13#10'  FmyControl:TControl;'#13#10'  {$endif}'#13#10'    '
  +'{ Private declarations }'#13#10#13#10'    procedure SetMyEventTypes;'#13#10
  +#13#10'  protected'#13#10'    { Protected declarations }'#13#10'  {$ifndef J'
  +'Script}'#13#10'  function GetName:string;'#13#10'  procedure SetMyName(AVal'
  +'ue:string);'#13#10'  {$endif}'#13#10'  public'#13#10'    { Public declarati'
  +'ons }'#13#10'    {$ifndef JScript}'#13#10'    procedure DoConstructor(TheOw'
  +'ner:TComponent;IsDynamic:Boolean);'#13#10'    constructor Create(TheOwner: '
  +'TComponent); override;'#13#10'    constructor Create(TheOwner: TComponent;I'
  +'sDynamic:Boolean);'#13#10'    destructor Destroy; override;'#13#10'    {$el'
  +'se}'#13#10'    constructor Create(MyForm:TForm;NodeName,NameSpace:String);'
  +#13#10'    {$endif}'#13#10#13#10'    function PropertyNameIsUnique(NewName:S'
  +'tring):Boolean;'#13#10'    function EventNameIsUnique(NewName:String):Boole'
  +'an;'#13#10#13#10'  published'#13#10'    { Published declarations }'#13#10' '
  +'   {$ifndef JScript}'#13#10'    property myControl:TControl read FmyControl'
  +' write FmyControl;'#13#10'    property Name: String read GetName write SetM'
  +'yName;'#13#10'    property myNode:TDataNode read FmyNode write FmyNode;'#13
  +#10'    {$endif}'#13#10#13#10'    // Properties defined for this class...'#13
  +#10'  end;'#13#10#13#10#13#10'implementation'#13#10#13#10'var'#13#10'  myDef'
  +'aultAttribs:TDefaultAttributesArray;'#13#10#13#10'procedure TXCompositeIntf'
  +'.SetMyEventTypes;'#13#10'begin'#13#10'end;'#13#10#13#10'{$ifndef JScript}'
  +#13#10#13#10'procedure TXCompositeIntf.DoConstructor(TheOwner:TComponent;IsD'
  +'ynamic:Boolean);'#13#10'var'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10
  +#13#10'    NewNode:=TDataNode.Create(''NV'',self.Name,'''',''TXCompositeIntf'
  +''',false);'#13#10'    NewNode.ScreenObject:=self;'#13#10'    NewNode.MyEven'
  +'tTypes:=TStringList.Create;'#13#10'    SetLength(NewNode.myEventHandlers,0)'
  +';'#13#10'    NewNode.MyForm:=TForm(TheOwner);'#13#10'    NewNode.IsDynamic:'
  +'=IsDynamic;'#13#10'    self.myNode:=NewNode;'#13#10'    // temporarily set '
  +'as child of root node, so that name uniqueness checks can be done during de'
  +'sign'#13#10'    AddChildToParentNode(SystemNodetree,NewNode,-1);'#13#10#13
  +#10'    AddDefaultAttribs(self,NewNode,mydefaultAttribs);'#13#10#13#10'end;'
  +#13#10#13#10'constructor TXCompositeIntf.Create(TheOwner:TComponent);'#13#10
  +'begin'#13#10'  inherited Create(TheOwner);'#13#10'  DoConstructor(TheOwner,'
  +'false);'#13#10'end;'#13#10#13#10'constructor TXCompositeIntf.Create(TheOwne'
  +'r:TComponent;IsDynamic:Boolean);'#13#10'begin'#13#10'  inherited Create(The'
  +'Owner);'#13#10'  DoConstructor(TheOwner,IsDynamic);'#13#10'end;'#13#10#13#10
  +'destructor TXCompositeIntf.Destroy;'#13#10'begin'#13#10'  //ClearLocalStore'
  +'(KeyName);'#13#10'  inherited Destroy;'#13#10'end;'#13#10#13#10'function TX'
  +'CompositeIntf.GetName:string;'#13#10'var'#13#10'  myname:string;'#13#10'beg'
  +'in'#13#10'  result:=inherited Name;'#13#10'end;'#13#10#13#10'procedure TXCo'
  +'mpositeIntf.SetMyName(AValue:string);'#13#10'begin'#13#10'  inherited Name:'
  +'=AValue;'#13#10#13#10'  if  (csLoading in componentState) then'#13#10'    i'
  +'f myNode<>nil then'#13#10'      myNode.NodeName:=AValue;'#13#10'end;'#13#10
  +#13#10'function CreateIntf(ParentNode:TDataNode;ScreenObjectName,NameSpace:s'
  +'tring;position:integer;Alignment:String):TDataNode;'#13#10'var'#13#10'  New'
  +'Node:TDataNode;'#13#10'begin'#13#10'  NewNode:=CreateDynamicLazWidget(''TXC'
  +'ompositeIntf'',ParentNode.MyForm,ParentNode,ScreenObjectName,NameSpace,Alig'
  +'nment,position);'#13#10'  result:=NewNode;'#13#10'end;'#13#10#13#10'{$else}'
  +#13#10#13#10'constructor TXCompositeIntf.Create(MyForm:TForm;NodeName,NameSp'
  +'ace:String);'#13#10'begin'#13#10'  inherited Create(NodeName,NameSpace);'#13
  +#10'  self.NodeClass:=''NV'';'#13#10'  self.NodeType:=''TXCompositeIntf'';'
  +#13#10'  self.MyForm:=MyForm;'#13#10#13#10'  self.myNode.MyEventTypes:=TStri'
  +'ngList.Create;'#13#10'  self.IsContainer:=false;'#13#10'  SetNodePropDefaul'
  +'ts(self,myDefaultAttribs);'#13#10#13#10'end;'#13#10#13#10'function CreateIn'
  ,'tf(MyNode, ParentNode:TDataNode;ScreenObjectName,NameSpace:string;position:'
  +'integer;Alignment:String):TDataNode;'#13#10'begin'#13#10#13#10'MyNode.Scree'
  +'nObject:=MyNode;'#13#10#13#10'result:=myNode;'#13#10'end;'#13#10#13#10'func'
  +'tion CreateinterfaceObj(MyForm:TForm;NodeName,NameSpace:String):TObject;'#13
  +#10'begin'#13#10'  result:=TObject(TXCompositeIntf.Create(MyForm,NodeName,Na'
  +'meSpace));'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'function TXCompos'
  +'iteIntf.PropertyNameIsUnique(NewName:String):Boolean;'#13#10'var'#13#10'  i'
  +':integer;'#13#10'begin'#13#10'  result:=true;'#13#10'  for i:=0 to length(m'
  +'yNode.NodeAttributes)-1 do'#13#10'    if myNode.NodeAttributes[i].AttribNam'
  +'e=NewName then'#13#10'      result:=false;'#13#10'end;'#13#10#13#10'functio'
  +'n TXCompositeIntf.EventNameIsUnique(NewName:String):Boolean;'#13#10'var'#13
  +#10'  i:integer;'#13#10'begin'#13#10'  result:=true;'#13#10'  for i:=0 to my'
  +'Node.myEventTypes.Count-1 do'#13#10'    if myNode.myEventTypes[i]=NewName t'
  +'hen'#13#10'      result:=false;'#13#10'end;'#13#10#13#10'begin'#13#10'// th'
  +'is is the set of node attributes that each instance will have.'#13#10'//Add'
  +'DefaultAttribute(myDefaultAttribs,''KeyName'',''String'','''','''',false);'
  +#13#10'//AddDefaultAttribute(myDefaultAttribs,''DataValue'',''String'','''','
  +''''',false);'#13#10#13#10'{$ifndef JScript}'#13#10'RegisterClass(TXComposit'
  +'eIntf);'#13#10'AddNodeFuncLookup(''TXCompositeIntf'',@CreateIntf);'#13#10'{'
  +'$else}'#13#10'AddNodeFuncLookup(''TXCompositeIntf'',@CreateinterfaceObj,@Cr'
  +'eateIntf);'#13#10'SuppressDesignerProperty(''TXCompositeIntf'',''Alignment'
  +''');'#13#10'SuppressDesignerProperty(''TXCompositeIntf'',''IsVisible'');'#13
  +#10'SuppressDesignerProperty(''TXCompositeIntf'',''LabelPos'');'#13#10'Suppr'
  +'essDesignerProperty(''TXCompositeIntf'',''LabelText'');'#13#10'SuppressDesi'
  +'gnerProperty(''TXCompositeIntf'',''Hint'');'#13#10'{$endif}'#13#10'end.'#13
  +#10#13#10
]);
LazarusResources.Add('gpu','JS',[
  '/**'#13#10' * gpu.js'#13#10' * http://gpu.rocks/'#13#10' *'#13#10' * GPU Acc'
  +'elerated JavaScript'#13#10' *'#13#10' * @version 1.0.0-rc.10'#13#10' * @dat'
  +'e Sat Dec 23 2017 10:30:09 GMT-0500 (EST)'#13#10' *'#13#10' * @license MIT'
  +#13#10' * The MIT License'#13#10' *'#13#10' * Copyright (c) 2017 gpu.js Team'
  +#13#10' */'#13#10'"use strict";(function e(t,n,r){function s(o,u){if(!n[o]){'
  +'if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0)'
  +';if(i)return i(o,!0);var f=new Error("Cannot find module ''"+o+"''");throw '
  +'f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,'
  +'function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n'
  +'[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.lengt'
  +'h;o++)s(r[o]);return s})({1:[function(require,module,exports){'#13#10'''use'
  +' strict'';'#13#10#13#10'var _createClass = function () { function definePro'
  +'perties(target, props) { for (var i = 0; i < props.length; i++) { var descr'
  +'iptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; d'
  +'escriptor.configurable = true; if ("value" in descriptor) descriptor.writab'
  +'le = true; Object.defineProperty(target, descriptor.key, descriptor); } } r'
  +'eturn function (Constructor, protoProps, staticProps) { if (protoProps) def'
  +'ineProperties(Constructor.prototype, protoProps); if (staticProps) definePr'
  +'operties(Constructor, staticProps); return Constructor; }; }();'#13#10#13#10
  +'function _classCallCheck(instance, Constructor) { if (!(instance instanceof'
  +' Constructor)) { throw new TypeError("Cannot call a class as a function"); '
  +'} }'#13#10#13#10'function _possibleConstructorReturn(self, call) { if (!sel'
  +'f) { throw new ReferenceError("this hasn''t been initialised - super() hasn'
  +'''t been called"); } return call && (typeof call === "object" || typeof cal'
  +'l === "function") ? call : self; }'#13#10#13#10'function _inherits(subClass'
  +', superClass) { if (typeof superClass !== "function" && superClass !== null'
  +') { throw new TypeError("Super expression must either be null or a function'
  +', not " + typeof superClass); } subClass.prototype = Object.create(superCla'
  +'ss && superClass.prototype, { constructor: { value: subClass, enumerable: f'
  +'alse, writable: true, configurable: true } }); if (superClass) Object.setPr'
  +'ototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto_'
  +'_ = superClass; }'#13#10#13#10'var FunctionBuilderBase = require(''../funct'
  +'ion-builder-base'');'#13#10'var CPUFunctionNode = require(''./function-node'
  +''');'#13#10#13#10'module.exports = function (_FunctionBuilderBase) {'#13#10
  +'  _inherits(CPUFunctionBuilder, _FunctionBuilderBase);'#13#10#13#10'  funct'
  +'ion CPUFunctionBuilder() {'#13#10'    _classCallCheck(this, CPUFunctionBuil'
  +'der);'#13#10#13#10'    var _this = _possibleConstructorReturn(this, (CPUFun'
  +'ctionBuilder.__proto__ || Object.getPrototypeOf(CPUFunctionBuilder)).call(t'
  +'his));'#13#10#13#10'    _this.Node = CPUFunctionNode;'#13#10'    return _th'
  +'is;'#13#10'  }'#13#10#13#10'  _createClass(CPUFunctionBuilder, [{'#13#10'  '
  +'  key: ''polyfillStandardFunctions'','#13#10'    value: function polyfillSt'
  +'andardFunctions() {}'#13#10'  }]);'#13#10#13#10'  return CPUFunctionBuilder'
  +';'#13#10'}(FunctionBuilderBase);'#13#10'},{"../function-builder-base":6,"./'
  +'function-node":2}],2:[function(require,module,exports){'#13#10'''use strict'
  +''';'#13#10#13#10'var _createClass = function () { function defineProperties'
  +'(target, props) { for (var i = 0; i < props.length; i++) { var descriptor ='
  +' props[i]; descriptor.enumerable = descriptor.enumerable || false; descript'
  +'or.configurable = true; if ("value" in descriptor) descriptor.writable = tr'
  +'ue; Object.defineProperty(target, descriptor.key, descriptor); } } return f'
  +'unction (Constructor, protoProps, staticProps) { if (protoProps) defineProp'
  +'erties(Constructor.prototype, protoProps); if (staticProps) definePropertie'
  +'s(Constructor, staticProps); return Constructor; }; }();'#13#10#13#10'funct'
  +'ion _classCallCheck(instance, Constructor) { if (!(instance instanceof Cons'
  +'tructor)) { throw new TypeError("Cannot call a class as a function"); } }'
  +#13#10#13#10'function _possibleConstructorReturn(self, call) { if (!self) { '
  +'throw new ReferenceError("this hasn''t been initialised - super() hasn''t b'
  +'een called"); } return call && (typeof call === "object" || typeof call ==='
  +' "function") ? call : self; }'#13#10#13#10'function _inherits(subClass, sup'
  +'erClass) { if (typeof superClass !== "function" && superClass !== null) { t'
  +'hrow new TypeError("Super expression must either be null or a function, not'
  +' " + typeof superClass); } subClass.prototype = Object.create(superClass &&'
  +' superClass.prototype, { constructor: { value: subClass, enumerable: false,'
  +' writable: true, configurable: true } }); if (superClass) Object.setPrototy'
  +'peOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = s'
  ,'uperClass; }'#13#10#13#10'var BaseFunctionNode = require(''../function-node'
  +'-base'');'#13#10'var utils = require(''../../core/utils'');'#13#10#13#10'mo'
  +'dule.exports = function (_BaseFunctionNode) {'#13#10#9'_inherits(CPUFunctio'
  +'nNode, _BaseFunctionNode);'#13#10#13#10#9'function CPUFunctionNode() {'#13
  +#10#9#9'_classCallCheck(this, CPUFunctionNode);'#13#10#13#10#9#9'return _pos'
  +'sibleConstructorReturn(this, (CPUFunctionNode.__proto__ || Object.getProtot'
  +'ypeOf(CPUFunctionNode)).apply(this, arguments));'#13#10#9'}'#13#10#13#10#9
  +'_createClass(CPUFunctionNode, [{'#13#10#9#9'key: ''generate'','#13#10#9#9'v'
  +'alue: function generate() {'#13#10#9#9#9'if (this.debug) {'#13#10#9#9#9#9'c'
  +'onsole.log(this);'#13#10#9#9#9'}'#13#10#9#9#9'this.functionStringArray = th'
  +'is.astGeneric(this.getJsAST(), [], this);'#13#10#9#9#9'this.functionString '
  +'= this.functionStringArray.join('''').trim();'#13#10#9#9#9'return this.func'
  +'tionString;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''getFun'
  +'ctionPrototypeString'','#13#10#9#9'value: function getFunctionPrototypeStri'
  +'ng() {'#13#10#9#9#9'if (this.webGlFunctionPrototypeString) {'#13#10#9#9#9#9
  +'return this.webGlFunctionPrototypeString;'#13#10#9#9#9'}'#13#10#9#9#9'retur'
  +'n this.webGlFunctionPrototypeString = this.generate();'#13#10#9#9'}'#13#10
  +#13#10#13#10#9'}, {'#13#10#9#9'key: ''astGeneric'','#13#10#9#9'value: functi'
  +'on astGeneric(ast, retArr, funcParam) {'#13#10#9#9#9'if (ast === null) {'#13
  +#10#9#9#9#9'throw this.astErrorOutput(''NULL ast'', ast, funcParam);'#13#10#9
  +#9#9'} else {'#13#10#9#9#9#9'if (Array.isArray(ast)) {'#13#10#9#9#9#9#9'for '
  +'(var i = 0; i < ast.length; i++) {'#13#10#9#9#9#9#9#9'this.astGeneric(ast[i'
  +'], retArr, funcParam);'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9#9'return retArr;'
  +#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'switch (ast.type) {'#13#10#9#9#9#9#9'c'
  +'ase ''FunctionDeclaration'':'#13#10#9#9#9#9#9#9'return this.astFunctionDecl'
  +'aration(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''FunctionExpression'
  +''':'#13#10#9#9#9#9#9#9'return this.astFunctionExpression(ast, retArr, funcP'
  +'aram);'#13#10#9#9#9#9#9'case ''ReturnStatement'':'#13#10#9#9#9#9#9#9'return'
  +' this.astReturnStatement(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''L'
  +'iteral'':'#13#10#9#9#9#9#9#9'return this.astLiteral(ast, retArr, funcParam)'
  +';'#13#10#9#9#9#9#9'case ''BinaryExpression'':'#13#10#9#9#9#9#9#9'return thi'
  +'s.astBinaryExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''Iden'
  +'tifier'':'#13#10#9#9#9#9#9#9'return this.astIdentifierExpression(ast, retAr'
  +'r, funcParam);'#13#10#9#9#9#9#9'case ''AssignmentExpression'':'#13#10#9#9#9
  +#9#9#9'return this.astAssignmentExpression(ast, retArr, funcParam);'#13#10#9
  +#9#9#9#9'case ''ExpressionStatement'':'#13#10#9#9#9#9#9#9'return this.astExp'
  +'ressionStatement(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''EmptyStat'
  +'ement'':'#13#10#9#9#9#9#9#9'return this.astEmptyStatement(ast, retArr, func'
  +'Param);'#13#10#9#9#9#9#9'case ''BlockStatement'':'#13#10#9#9#9#9#9#9'return'
  +' this.astBlockStatement(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''If'
  +'Statement'':'#13#10#9#9#9#9#9#9'return this.astIfStatement(ast, retArr, fun'
  +'cParam);'#13#10#9#9#9#9#9'case ''BreakStatement'':'#13#10#9#9#9#9#9#9'retur'
  +'n this.astBreakStatement(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''C'
  +'ontinueStatement'':'#13#10#9#9#9#9#9#9'return this.astContinueStatement(ast'
  +', retArr, funcParam);'#13#10#9#9#9#9#9'case ''ForStatement'':'#13#10#9#9#9#9
  +#9#9'return this.astForStatement(ast, retArr, funcParam);'#13#10#9#9#9#9#9'c'
  +'ase ''WhileStatement'':'#13#10#9#9#9#9#9#9'return this.astWhileStatement(as'
  +'t, retArr, funcParam);'#13#10#9#9#9#9#9'case ''VariableDeclaration'':'#13#10
  +#9#9#9#9#9#9'return this.astVariableDeclaration(ast, retArr, funcParam);'#13
  +#10#9#9#9#9#9'case ''VariableDeclarator'':'#13#10#9#9#9#9#9#9'return this.as'
  +'tVariableDeclarator(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''ThisEx'
  +'pression'':'#13#10#9#9#9#9#9#9'return this.astThisExpression(ast, retArr, f'
  +'uncParam);'#13#10#9#9#9#9#9'case ''SequenceExpression'':'#13#10#9#9#9#9#9#9
  +'return this.astSequenceExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9
  +'case ''UnaryExpression'':'#13#10#9#9#9#9#9#9'return this.astUnaryExpression'
  +'(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''UpdateExpression'':'#13#10
  +#9#9#9#9#9#9'return this.astUpdateExpression(ast, retArr, funcParam);'#13#10
  +#9#9#9#9#9'case ''LogicalExpression'':'#13#10#9#9#9#9#9#9'return this.astLog'
  +'icalExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''MemberExpre'
  +'ssion'':'#13#10#9#9#9#9#9#9'return this.astMemberExpression(ast, retArr, fu'
  +'ncParam);'#13#10#9#9#9#9#9'case ''CallExpression'':'#13#10#9#9#9#9#9#9'retu'
  +'rn this.astCallExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case '''
  +'ArrayExpression'':'#13#10#9#9#9#9#9#9'return this.astArrayExpression(ast, r'
  +'etArr, funcParam);'#13#10#9#9#9#9#9'case ''DebuggerStatement'':'#13#10#9#9#9
  ,#9#9#9'return this.astDebuggerStatement(ast, retArr, funcParam);'#13#10#9#9#9
  +#9'}'#13#10#13#10#9#9#9#9'throw this.astErrorOutput(''Unknown ast type : '' '
  +'+ ast.type, ast, funcParam);'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10
  +#9'}, {'#13#10#9#9'key: ''astFunctionDeclaration'','#13#10#9#9'value: functi'
  +'on astFunctionDeclaration(ast, retArr, funcParam) {'#13#10#9#9#9'if (this.a'
  +'ddFunction) {'#13#10#9#9#9#9'this.addFunction(null, utils.getAstString(this'
  +'.jsFunctionString, ast));'#13#10#9#9#9'}'#13#10#9#9#9'return retArr;'#13#10
  +#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astFunctionExpression'','
  +#13#10#13#10#13#10#9#9'value: function astFunctionExpression(ast, retArr, fu'
  +'ncParam) {'#13#10#13#10#9#9#9'if (!funcParam.isRootKernel) {'#13#10#9#9#9#9
  +'retArr.push(''function'');'#13#10#9#9#9#9'funcParam.kernalAst = ast;'#13#10
  +#9#9#9#9'retArr.push('' '');'#13#10#9#9#9#9'retArr.push(funcParam.functionNa'
  +'me);'#13#10#9#9#9#9'retArr.push(''('');'#13#10#13#10#9#9#9#9'for (var i = 0'
  +'; i < funcParam.paramNames.length; ++i) {'#13#10#9#9#9#9#9'var paramName = '
  +'funcParam.paramNames[i];'#13#10#13#10#9#9#9#9#9'if (i > 0) {'#13#10#9#9#9#9
  +#9#9'retArr.push('', '');'#13#10#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9'retArr.p'
  +'ush('' '');'#13#10#9#9#9#9#9'retArr.push(''user_'');'#13#10#9#9#9#9#9'retAr'
  +'r.push(paramName);'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'retArr.push('') {\'
  +'n'');'#13#10#9#9#9'}'#13#10#13#10#9#9#9'for (var _i = 0; _i < ast.body.body'
  +'.length; ++_i) {'#13#10#9#9#9#9'this.astGeneric(ast.body.body[_i], retArr, '
  +'funcParam);'#13#10#9#9#9#9'retArr.push(''\n'');'#13#10#9#9#9'}'#13#10#13#10
  +#9#9#9'if (!funcParam.isRootKernel) {'#13#10#9#9#9#9'retArr.push(''}\n'');'
  +#13#10#9#9#9'}'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''astReturnStatement'','#13#10#9#9'value: function ast'
  +'ReturnStatement(ast, retArr, funcParam) {'#13#10#9#9#9'if (funcParam.isRoot'
  +'Kernel) {'#13#10#9#9#9#9'retArr.push(''kernelResult = '');'#13#10#9#9#9#9't'
  +'his.astGeneric(ast.argument, retArr, funcParam);'#13#10#9#9#9#9'retArr.push'
  +'('';'');'#13#10#9#9#9'} else if (funcParam.isSubKernel) {'#13#10#9#9#9#9're'
  +'tArr.push(funcParam.functionName + ''Result = '');'#13#10#9#9#9#9'this.astG'
  +'eneric(ast.argument, retArr, funcParam);'#13#10#9#9#9#9'retArr.push('';'');'
  +#13#10#9#9#9#9'retArr.push(''return '' + funcParam.functionName + ''Result;'
  +''');'#13#10#9#9#9'} else {'#13#10#9#9#9#9'retArr.push(''return '');'#13#10#9
  +#9#9#9'this.astGeneric(ast.argument, retArr, funcParam);'#13#10#9#9#9#9'retA'
  +'rr.push('';'');'#13#10#9#9#9'}'#13#10#13#10#13#10#9#9#9'return retArr;'#13
  +#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astLiteral'','#13#10#9
  +#9'value: function astLiteral(ast, retArr, funcParam) {'#13#10#13#10#9#9#9'i'
  +'f (isNaN(ast.value)) {'#13#10#9#9#9#9'throw this.astErrorOutput(''Non-numer'
  +'ic literal not supported : '' + ast.value, ast, funcParam);'#13#10#9#9#9'}'
  +#13#10#13#10#9#9#9'retArr.push(ast.value);'#13#10#13#10#9#9#9'return retArr;'
  +#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astBinaryExpression'
  +''','#13#10#9#9'value: function astBinaryExpression(ast, retArr, funcParam) '
  +'{'#13#10#9#9#9'retArr.push(''('');'#13#10#9#9#9'this.astGeneric(ast.left, r'
  +'etArr, funcParam);'#13#10#9#9#9'retArr.push(ast.operator);'#13#10#9#9#9'thi'
  +'s.astGeneric(ast.right, retArr, funcParam);'#13#10#9#9#9'retArr.push('')'')'
  +';'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10
  +#9#9'key: ''astIdentifierExpression'','#13#10#9#9'value: function astIdentif'
  +'ierExpression(idtNode, retArr, funcParam) {'#13#10#9#9#9'if (idtNode.type !'
  +'== ''Identifier'') {'#13#10#9#9#9#9'throw this.astErrorOutput(''IdentifierE'
  +'xpression - not an Identifier'', idtNode, funcParam);'#13#10#9#9#9'}'#13#10
  +#13#10#9#9#9'switch (idtNode.name) {'#13#10#9#9#9#9'case ''gpu_threadX'':'#13
  +#10#9#9#9#9#9'retArr.push(''threadId.x'');'#13#10#9#9#9#9#9'break;'#13#10#9#9
  +#9#9'case ''gpu_threadY'':'#13#10#9#9#9#9#9'retArr.push(''threadId.y'');'#13
  +#10#9#9#9#9#9'break;'#13#10#9#9#9#9'case ''gpu_threadZ'':'#13#10#9#9#9#9#9'r'
  +'etArr.push(''threadId.z'');'#13#10#9#9#9#9#9'break;'#13#10#9#9#9#9'case ''g'
  +'pu_outputX'':'#13#10#9#9#9#9#9'retArr.push(''uOutputDim.x'');'#13#10#9#9#9#9
  +#9'break;'#13#10#9#9#9#9'case ''gpu_outputY'':'#13#10#9#9#9#9#9'retArr.push('
  +'''uOutputDim.y'');'#13#10#9#9#9#9#9'break;'#13#10#9#9#9#9'case ''gpu_output'
  +'Z'':'#13#10#9#9#9#9#9'retArr.push(''uOutputDim.z'');'#13#10#9#9#9#9#9'break'
  +';'#13#10#9#9#9#9'default:'#13#10#9#9#9#9#9'if (this.constants && this.const'
  +'ants.hasOwnProperty(idtNode.name)) {'#13#10#9#9#9#9#9#9'retArr.push(''const'
  +'ants_'' + idtNode.name);'#13#10#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9'var u'
  +'serParamName = funcParam.getUserParamName(idtNode.name);'#13#10#9#9#9#9#9#9
  +'if (userParamName !== null) {'#13#10#9#9#9#9#9#9#9'retArr.push(''user_'' + '
  +'userParamName);'#13#10#9#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9#9'retArr.pus'
  ,'h(''user_'' + idtNode.name);'#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9'}'#13#10
  +#9#9#9'}'#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''astForStatement'','#13#10#9#9'value: function astFor'
  +'Statement(forNode, retArr, funcParam) {'#13#10#9#9#9'if (forNode.type !== '
  +'''ForStatement'') {'#13#10#9#9#9#9'throw this.astErrorOutput(''Invalid for '
  +'statment'', forNode, funcParam);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (forN'
  +'ode.test && forNode.test.type === ''BinaryExpression'') {'#13#10#9#9#9#9'if'
  +' ((forNode.test.right.type === ''Identifier'' || forNode.test.right.type =='
  +'= ''Literal'') && forNode.test.operator === ''<'' && this.isIdentifierConst'
  +'ant(forNode.test.right.name) === false) {'#13#10#13#10#9#9#9#9#9'if (!this.'
  +'loopMaxIterations) {'#13#10#9#9#9#9#9#9'console.warn(''Warning: loopMaxIter'
  +'ations is not set! Using default of 1000 which may result in unintended beh'
  +'avior.'');'#13#10#9#9#9#9#9#9'console.warn(''Set loopMaxIterations or use a'
  +' for loop of fixed length to silence this message.'');'#13#10#9#9#9#9#9'}'
  +#13#10#13#10#9#9#9#9#9'retArr.push(''for ('');'#13#10#9#9#9#9#9'this.astGene'
  +'ric(forNode.init, retArr, funcParam);'#13#10#9#9#9#9#9'if (retArr[retArr.le'
  +'ngth - 1] !== '';'') {'#13#10#9#9#9#9#9#9'retArr.push('';'');'#13#10#9#9#9#9
  +#9'}'#13#10#9#9#9#9#9'this.astGeneric(forNode.test.left, retArr, funcParam);'
  +#13#10#9#9#9#9#9'retArr.push(forNode.test.operator);'#13#10#9#9#9#9#9'retArr'
  +'.push(''LOOP_MAX'');'#13#10#9#9#9#9#9'retArr.push('';'');'#13#10#9#9#9#9#9
  +'this.astGeneric(forNode.update, retArr, funcParam);'#13#10#9#9#9#9#9'retArr'
  +'.push('')'');'#13#10#13#10#9#9#9#9#9'retArr.push(''{\n'');'#13#10#9#9#9#9#9
  +'retArr.push(''if ('');'#13#10#9#9#9#9#9'this.astGeneric(forNode.test.left, '
  +'retArr, funcParam);'#13#10#9#9#9#9#9'retArr.push(forNode.test.operator);'#13
  +#10#9#9#9#9#9'this.astGeneric(forNode.test.right, retArr, funcParam);'#13#10
  +#9#9#9#9#9'retArr.push('') {\n'');'#13#10#9#9#9#9#9'if (forNode.body.type =='
  +'= ''BlockStatement'') {'#13#10#9#9#9#9#9#9'for (var i = 0; i < forNode.body'
  +'.body.length; i++) {'#13#10#9#9#9#9#9#9#9'this.astGeneric(forNode.body.body'
  +'[i], retArr, funcParam);'#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9'} else {'#13
  +#10#9#9#9#9#9#9'this.astGeneric(forNode.body, retArr, funcParam);'#13#10#9#9
  +#9#9#9'}'#13#10#9#9#9#9#9'retArr.push(''} else {\n'');'#13#10#9#9#9#9#9'retA'
  +'rr.push(''break;\n'');'#13#10#9#9#9#9#9'retArr.push(''}\n'');'#13#10#9#9#9#9
  +#9'retArr.push(''}\n'');'#13#10#13#10#9#9#9#9#9'return retArr;'#13#10#9#9#9#9
  +'} else if (forNode.init.declarations) {'#13#10#9#9#9#9#9'var declarations ='
  +' JSON.parse(JSON.stringify(forNode.init.declarations));'#13#10#9#9#9#9#9'va'
  +'r updateArgument = forNode.update.argument;'#13#10#9#9#9#9#9'if (!Array.isA'
  +'rray(declarations) || declarations.length < 1) {'#13#10#9#9#9#9#9#9'console'
  +'.log(this.jsFunctionString);'#13#10#9#9#9#9#9#9'throw new Error(''Error: In'
  +'compatible for loop declaration'');'#13#10#9#9#9#9#9'}'#13#10#13#10#9#9#9#9
  +#9'if (declarations.length > 1) {'#13#10#9#9#9#9#9#9'var initArgument = null'
  +';'#13#10#9#9#9#9#9#9'for (var _i2 = 0; _i2 < declarations.length; _i2++) {'
  +#13#10#9#9#9#9#9#9#9'var declaration = declarations[_i2];'#13#10#9#9#9#9#9#9
  +#9'if (declaration.id.name === updateArgument.name) {'#13#10#9#9#9#9#9#9#9#9
  +'initArgument = declaration;'#13#10#9#9#9#9#9#9#9#9'declarations.splice(_i2,'
  +' 1);'#13#10#9#9#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9#9#9'retArr.push(''var'
  +' '');'#13#10#9#9#9#9#9#9#9#9'this.astGeneric(declaration, retArr, funcParam'
  +');'#13#10#9#9#9#9#9#9#9#9'retArr.push('';'');'#13#10#9#9#9#9#9#9#9'}'#13#10
  +#9#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9#9'retArr.push(''for (let '');'#13#10#9
  +#9#9#9#9#9'this.astGeneric(initArgument, retArr, funcParam);'#13#10#9#9#9#9#9
  +#9'retArr.push('';'');'#13#10#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9'retArr.p'
  +'ush(''for ('');'#13#10#9#9#9#9#9#9'this.astGeneric(forNode.init, retArr, fu'
  +'ncParam);'#13#10#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9'this.astGeneric(forNode'
  +'.test, retArr, funcParam);'#13#10#9#9#9#9#9'retArr.push('';'');'#13#10#9#9#9
  +#9#9'this.astGeneric(forNode.update, retArr, funcParam);'#13#10#9#9#9#9#9're'
  +'tArr.push('')'');'#13#10#9#9#9#9#9'this.astGeneric(forNode.body, retArr, fu'
  +'ncParam);'#13#10#9#9#9#9#9'return retArr;'#13#10#9#9#9#9'}'#13#10#9#9#9'}'
  +#13#10#13#10#9#9#9'throw this.astErrorOutput(''Invalid for statement'', forN'
  +'ode, funcParam);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''a'
  +'stWhileStatement'','#13#10#9#9'value: function astWhileStatement(whileNode,'
  +' retArr, funcParam) {'#13#10#9#9#9'if (whileNode.type !== ''WhileStatement'
  +''') {'#13#10#9#9#9#9'throw this.astErrorOutput(''Invalid while statment'', '
  +'whileNode, funcParam);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'retArr.push(''for '
  +'(let i = 0; i < LOOP_MAX; i++) {'');'#13#10#9#9#9'retArr.push(''if ('');'#13
  +#10#9#9#9'this.astGeneric(whileNode.test, retArr, funcParam);'#13#10#9#9#9'r'
  ,'etArr.push('') {\n'');'#13#10#9#9#9'this.astGeneric(whileNode.body, retArr,'
  +' funcParam);'#13#10#9#9#9'retArr.push(''} else {\n'');'#13#10#9#9#9'retArr.'
  +'push(''break;\n'');'#13#10#9#9#9'retArr.push(''}\n'');'#13#10#9#9#9'retArr.'
  +'push(''}\n'');'#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10
  +#13#10#9'}, {'#13#10#9#9'key: ''astAssignmentExpression'','#13#10#9#9'value:'
  +' function astAssignmentExpression(assNode, retArr, funcParam) {'#13#10#9#9#9
  +'this.astGeneric(assNode.left, retArr, funcParam);'#13#10#9#9#9'retArr.push('
  +'assNode.operator);'#13#10#9#9#9'this.astGeneric(assNode.right, retArr, func'
  +'Param);'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  +#13#10#9#9'key: ''astEmptyStatement'','#13#10#9#9'value: function astEmptySt'
  +'atement(eNode, retArr, funcParam) {'#13#10#9#9#9'return retArr;'#13#10#9#9
  +'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astBlockStatement'','#13#10#9
  +#9'value: function astBlockStatement(bNode, retArr, funcParam) {'#13#10#9#9#9
  +'retArr.push(''{\n'');'#13#10#9#9#9'for (var i = 0; i < bNode.body.length; i'
  +'++) {'#13#10#9#9#9#9'this.astGeneric(bNode.body[i], retArr, funcParam);'#13
  +#10#9#9#9'}'#13#10#9#9#9'retArr.push(''}\n'');'#13#10#9#9#9'return retArr;'
  +#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astExpressionStatem'
  +'ent'','#13#10#9#9'value: function astExpressionStatement(esNode, retArr, fu'
  +'ncParam) {'#13#10#9#9#9'this.astGeneric(esNode.expression, retArr, funcPara'
  +'m);'#13#10#9#9#9'retArr.push('';\n'');'#13#10#9#9#9'return retArr;'#13#10#9
  +#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astVariableDeclaration'','
  +#13#10#9#9'value: function astVariableDeclaration(vardecNode, retArr, funcPa'
  +'ram) {'#13#10#9#9#9'retArr.push(''var '');'#13#10#9#9#9'for (var i = 0; i <'
  +' vardecNode.declarations.length; i++) {'#13#10#9#9#9#9'if (i > 0) {'#13#10#9
  +#9#9#9#9'retArr.push('','');'#13#10#9#9#9#9'}'#13#10#9#9#9#9'this.astGeneric'
  +'(vardecNode.declarations[i], retArr, funcParam);'#13#10#9#9#9'}'#13#10#9#9#9
  +'retArr.push('';'');'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13
  +#10#9'}, {'#13#10#9#9'key: ''astVariableDeclarator'','#13#10#9#9'value: func'
  +'tion astVariableDeclarator(ivardecNode, retArr, funcParam) {'#13#10#9#9#9't'
  +'his.astGeneric(ivardecNode.id, retArr, funcParam);'#13#10#9#9#9'if (ivardec'
  +'Node.init !== null) {'#13#10#9#9#9#9'retArr.push(''='');'#13#10#9#9#9#9'thi'
  +'s.astGeneric(ivardecNode.init, retArr, funcParam);'#13#10#9#9#9'}'#13#10#9#9
  +#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''a'
  +'stIfStatement'','#13#10#9#9'value: function astIfStatement(ifNode, retArr, '
  +'funcParam) {'#13#10#9#9#9'retArr.push(''if ('');'#13#10#9#9#9'this.astGener'
  +'ic(ifNode.test, retArr, funcParam);'#13#10#9#9#9'retArr.push('')'');'#13#10
  +#9#9#9'if (ifNode.consequent.type === ''BlockStatement'') {'#13#10#9#9#9#9't'
  +'his.astGeneric(ifNode.consequent, retArr, funcParam);'#13#10#9#9#9'} else {'
  +#13#10#9#9#9#9'retArr.push('' {\n'');'#13#10#9#9#9#9'this.astGeneric(ifNode.'
  +'consequent, retArr, funcParam);'#13#10#9#9#9#9'retArr.push(''\n}\n'');'#13
  +#10#9#9#9'}'#13#10#13#10#9#9#9'if (ifNode.alternate) {'#13#10#9#9#9#9'retArr'
  +'.push(''else '');'#13#10#9#9#9#9'if (ifNode.alternate.type === ''BlockState'
  +'ment'') {'#13#10#9#9#9#9#9'this.astGeneric(ifNode.alternate, retArr, funcPa'
  +'ram);'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'retArr.push('' {\n'');'#13#10
  +#9#9#9#9#9'this.astGeneric(ifNode.alternate, retArr, funcParam);'#13#10#9#9#9
  +#9#9'retArr.push(''\n}\n'');'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#9#9#9're'
  +'turn retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astBr'
  +'eakStatement'','#13#10#9#9'value: function astBreakStatement(brNode, retArr'
  +', funcParam) {'#13#10#9#9#9'retArr.push(''break;\n'');'#13#10#9#9#9'return '
  +'retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astContinu'
  +'eStatement'','#13#10#9#9'value: function astContinueStatement(crNode, retAr'
  +'r, funcParam) {'#13#10#9#9#9'retArr.push(''continue;\n'');'#13#10#9#9#9'ret'
  +'urn retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astLog'
  +'icalExpression'','#13#10#9#9'value: function astLogicalExpression(logNode, '
  +'retArr, funcParam) {'#13#10#9#9#9'retArr.push(''('');'#13#10#9#9#9'this.ast'
  +'Generic(logNode.left, retArr, funcParam);'#13#10#9#9#9'retArr.push(logNode.'
  +'operator);'#13#10#9#9#9'this.astGeneric(logNode.right, retArr, funcParam);'
  +#13#10#9#9#9'retArr.push('')'');'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13
  +#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astUpdateExpression'','#13#10#9#9'v'
  +'alue: function astUpdateExpression(uNode, retArr, funcParam) {'#13#10#9#9#9
  +'if (uNode.prefix) {'#13#10#9#9#9#9'retArr.push(uNode.operator);'#13#10#9#9#9
  +#9'this.astGeneric(uNode.argument, retArr, funcParam);'#13#10#9#9#9'} else {'
  +#13#10#9#9#9#9'this.astGeneric(uNode.argument, retArr, funcParam);'#13#10#9#9
  +#9#9'retArr.push(uNode.operator);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return r'
  ,'etArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astUnaryExp'
  +'ression'','#13#10#9#9'value: function astUnaryExpression(uNode, retArr, fun'
  +'cParam) {'#13#10#9#9#9'if (uNode.prefix) {'#13#10#9#9#9#9'retArr.push(uNode'
  +'.operator);'#13#10#9#9#9#9'this.astGeneric(uNode.argument, retArr, funcPara'
  +'m);'#13#10#9#9#9'} else {'#13#10#9#9#9#9'this.astGeneric(uNode.argument, re'
  +'tArr, funcParam);'#13#10#9#9#9#9'retArr.push(uNode.operator);'#13#10#9#9#9
  +'}'#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  +#13#10#9#9'key: ''astThisExpression'','#13#10#9#9'value: function astThisExp'
  +'ression(tNode, retArr, funcParam) {'#13#10#9#9#9'retArr.push(''_this'');'#13
  +#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'k'
  +'ey: ''astMemberExpression'','#13#10#9#9'value: function astMemberExpression'
  +'(mNode, retArr, funcParam) {'#13#10#9#9#9'if (mNode.computed) {'#13#10#9#9#9
  +#9'if (mNode.object.type === ''Identifier'') {'#13#10#9#9#9#9#9'this.astGene'
  +'ric(mNode.object, retArr, funcParam);'#13#10#9#9#9#9#9'retArr.push(''['');'
  +#13#10#9#9#9#9#9'this.astGeneric(mNode.property, retArr, funcParam);'#13#10#9
  +#9#9#9#9'retArr.push('']'');'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'this.a'
  +'stGeneric(mNode.object, retArr, funcParam);'#13#10#9#9#9#9#9'var last = ret'
  +'Arr.pop();'#13#10#9#9#9#9#9'retArr.push('']['');'#13#10#9#9#9#9#9'this.astG'
  +'eneric(mNode.property, retArr, funcParam);'#13#10#9#9#9#9#9'retArr.push(las'
  +'t);'#13#10#9#9#9#9'}'#13#10#9#9#9'} else {'#13#10#9#9#9#9'var unrolled = th'
  +'is.astMemberExpressionUnroll(mNode);'#13#10#9#9#9#9'if (mNode.property.type'
  +' === ''Identifier'' && mNode.computed) {'#13#10#9#9#9#9#9'unrolled = ''user'
  +'_'' + unrolled;'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'if (unrolled.indexOf('
  +'''this'') === 0) {'#13#10#9#9#9#9#9'unrolled = ''_'' + unrolled;'#13#10#9#9
  +#9#9'}'#13#10#13#10#9#9#9#9'switch (unrolled) {'#13#10#9#9#9#9#9'case ''_thi'
  +'s.output.x'':'#13#10#9#9#9#9#9#9'retArr.push(this.output[0]);'#13#10#9#9#9#9
  +#9#9'break;'#13#10#9#9#9#9#9'case ''_this.output.y'':'#13#10#9#9#9#9#9#9'ret'
  +'Arr.push(this.output[1]);'#13#10#9#9#9#9#9#9'break;'#13#10#9#9#9#9#9'case '
  +'''_this.output.z'':'#13#10#9#9#9#9#9#9'retArr.push(this.output[2]);'#13#10#9
  +#9#9#9#9#9'break;'#13#10#9#9#9#9#9'default:'#13#10#9#9#9#9#9#9'retArr.push(u'
  +'nrolled);'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#9#9#9'return retArr;'#13#10
  +#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''astSequenceExpression'','#13#10#9#9'v'
  +'alue: function astSequenceExpression(sNode, retArr, funcParam) {'#13#10#9#9
  +#9'for (var i = 0; i < sNode.expressions.length; i++) {'#13#10#9#9#9#9'if (i'
  +' > 0) {'#13#10#9#9#9#9#9'retArr.push('','');'#13#10#9#9#9#9'}'#13#10#9#9#9#9
  +'this.astGeneric(sNode.expressions, retArr, funcParam);'#13#10#9#9#9'}'#13#10
  +#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key:'
  +' ''astCallExpression'','#13#10#9#9'value: function astCallExpression(ast, r'
  +'etArr, funcParam) {'#13#10#9#9#9'if (ast.callee) {'#13#10#9#9#9#9'var funcN'
  +'ame = this.astMemberExpressionUnroll(ast.callee);'#13#10#13#10#9#9#9#9'if ('
  +'funcParam.calledFunctions.indexOf(funcName) < 0) {'#13#10#9#9#9#9#9'funcPar'
  +'am.calledFunctions.push(funcName);'#13#10#9#9#9#9'}'#13#10#9#9#9#9'if (!fun'
  +'cParam.hasOwnProperty(''funcName'')) {'#13#10#9#9#9#9#9'funcParam.calledFun'
  +'ctionsArguments[funcName] = [];'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'var f'
  +'unctionArguments = [];'#13#10#9#9#9#9'funcParam.calledFunctionsArguments[fu'
  +'ncName].push(functionArguments);'#13#10#13#10#9#9#9#9'retArr.push(funcName)'
  +';'#13#10#13#10#9#9#9#9'retArr.push(''('');'#13#10#13#10#9#9#9#9'for (var i '
  +'= 0; i < ast.arguments.length; ++i) {'#13#10#9#9#9#9#9'var argument = ast.a'
  +'rguments[i];'#13#10#9#9#9#9#9'if (i > 0) {'#13#10#9#9#9#9#9#9'retArr.push('
  +''', '');'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9#9'this.astGeneric(argument, retA'
  +'rr, funcParam);'#13#10#9#9#9#9#9'if (argument.type === ''Identifier'') {'#13
  +#10#9#9#9#9#9#9'var paramIndex = funcParam.paramNames.indexOf(argument.name)'
  +';'#13#10#9#9#9#9#9#9'if (paramIndex === -1) {'#13#10#9#9#9#9#9#9#9'function'
  +'Arguments.push(null);'#13#10#9#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9#9'func'
  +'tionArguments.push({'#13#10#9#9#9#9#9#9#9#9'name: argument.name,'#13#10#9#9
  +#9#9#9#9#9#9'type: funcParam.paramTypes[paramIndex]'#13#10#9#9#9#9#9#9#9'});'
  +#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9'functionAr'
  +'guments.push(null);'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9
  +'retArr.push('')'');'#13#10#13#10#9#9#9#9'return retArr;'#13#10#9#9#9'}'#13
  +#10#13#10#9#9#9'throw this.astErrorOutput(''Unknown CallExpression'', ast, f'
  +'uncParam);'#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10
  +#9'}, {'#13#10#9#9'key: ''astArrayExpression'','#13#10#9#9'value: function a'
  +'stArrayExpression(arrNode, retArr, funcParam) {'#13#10#9#9#9'var arrLen = a'
  +'rrNode.elements.length;'#13#10#13#10#9#9#9'retArr.push(''new Float32Array('
  ,''');'#13#10#9#9#9'for (var i = 0; i < arrLen; ++i) {'#13#10#9#9#9#9'if (i >'
  +' 0) {'#13#10#9#9#9#9#9'retArr.push('', '');'#13#10#9#9#9#9'}'#13#10#9#9#9#9
  +'var subNode = arrNode.elements[i];'#13#10#9#9#9#9'this.astGeneric(subNode, '
  +'retArr, funcParam);'#13#10#9#9#9'}'#13#10#9#9#9'retArr.push('')'');'#13#10
  +#13#10#9#9#9'return retArr;'#13#10#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key:'
  +' ''astDebuggerStatement'','#13#10#9#9'value: function astDebuggerStatement('
  +'arrNode, retArr, funcParam) {'#13#10#9#9#9'retArr.push(''debugger;'');'#13
  +#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#9'}], [{'#13#10#9#9'key: ''astF'
  +'unctionPrototype'','#13#10#9#9'value: function astFunctionPrototype(ast, re'
  +'tArr, funcParam) {'#13#10#9#9#9'if (funcParam.isRootKernel || funcParam.isS'
  +'ubKernel) {'#13#10#9#9#9#9'return retArr;'#13#10#9#9#9'}'#13#10#13#10#9#9#9
  +'retArr.push(funcParam.returnType);'#13#10#9#9#9'retArr.push('' '');'#13#10#9
  +#9#9'retArr.push(funcParam.functionName);'#13#10#9#9#9'retArr.push(''('');'
  +#13#10#13#10#9#9#9'for (var i = 0; i < funcParam.paramNames.length; ++i) {'
  +#13#10#9#9#9#9'if (i > 0) {'#13#10#9#9#9#9#9'retArr.push('', '');'#13#10#9#9
  +#9#9'}'#13#10#13#10#9#9#9#9'retArr.push(funcParam.paramTypes[i]);'#13#10#9#9
  +#9#9'retArr.push('' '');'#13#10#9#9#9#9'retArr.push(''user_'');'#13#10#9#9#9
  +#9'retArr.push(funcParam.paramNames[i]);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'r'
  +'etArr.push('');\n'');'#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10
  +#9'}]);'#13#10#13#10#9'return CPUFunctionNode;'#13#10'}(BaseFunctionNode);'
  +#13#10'},{"../../core/utils":25,"../function-node-base":7}],3:[function(requ'
  +'ire,module,exports){'#13#10'''use strict'';'#13#10#13#10'var utils = requir'
  +'e(''../../core/utils'');'#13#10'var kernelRunShortcut = require(''../kernel'
  +'-run-shortcut'');'#13#10#13#10'module.exports = function (cpuKernel, name) '
  +'{'#13#10'  return ''() => {\n    '' + kernelRunShortcut.toString() + '';\n '
  +'   const utils = {\n      allPropertiesOf: function '' + utils.allPropertie'
  +'sOf.toString() + '',\n      clone: function '' + utils.clone.toString() + '
  +''',\n      /*splitArray: function '' + utils.splitArray.toString() + '',\n '
  +'     getArgumentType: function '' + utils.getArgumentType.toString() + '',\'
  +'n      getOutput: function '' + utils.getOutput.toString() + '',\n      dim'
  +'ToTexSize: function '' + utils.dimToTexSize.toString() + '',\n      copyFla'
  +'tten: function '' + utils.copyFlatten.toString() + '',\n      flatten: func'
  +'tion '' + utils.flatten.toString() + '',\n      systemEndianness: \'''' + u'
  +'tils.systemEndianness() + ''\'',\n      initWebGl: function '' + utils.init'
  +'WebGl.toString() + '',\n      isArray: function '' + utils.isArray.toString'
  +'() + ''*/\n    };\n    class '' + (name || ''Kernel'') + '' {\n      constr'
  +'uctor() {        \n        this.argumentsLength = 0;\n        this._canvas '
  +'= null;\n        this._webGl = null;\n        this.built = false;\n        '
  +'this.program = null;\n        this.paramNames = '' + JSON.stringify(cpuKern'
  +'el.paramNames) + '';\n        this.paramTypes = '' + JSON.stringify(cpuKern'
  +'el.paramTypes) + '';\n        this.texSize = '' + JSON.stringify(cpuKernel.'
  +'texSize) + '';\n        this.output = '' + JSON.stringify(cpuKernel.output)'
  +' + '';\n        this._kernelString = `'' + cpuKernel._kernelString + ''`;\n'
  +'        this.output = '' + JSON.stringify(cpuKernel.output) + '';\n\t\t    '
  +'this.run = function() {\n          this.run = null;\n          this.build()'
  +';\n          return this.run.apply(this, arguments);\n        }.bind(this);'
  +'\n        this.thread = {\n          x: 0,\n          y: 0,\n          z: 0'
  +'\n        };\n      }\n      setCanvas(canvas) { this._canvas = canvas; ret'
  +'urn this; }\n      setWebGl(webGl) { this._webGl = webGl; return this; }\n '
  +'     '' + cpuKernel.build.toString() + ''\n      run () { '' + cpuKernel.ke'
  +'rnelString + '' }\n      getKernelString() { return this._kernelString; }\n'
  +'    };\n    return kernelRunShortcut(new Kernel());\n  };'';'#13#10'};'#13
  +#10'},{"../../core/utils":25,"../kernel-run-shortcut":9}],4:[function(requir'
  +'e,module,exports){'#13#10'''use strict'';'#13#10#13#10'var _createClass = f'
  +'unction () { function defineProperties(target, props) { for (var i = 0; i <'
  +' props.length; i++) { var descriptor = props[i]; descriptor.enumerable = de'
  +'scriptor.enumerable || false; descriptor.configurable = true; if ("value" i'
  +'n descriptor) descriptor.writable = true; Object.defineProperty(target, des'
  +'criptor.key, descriptor); } } return function (Constructor, protoProps, sta'
  +'ticProps) { if (protoProps) defineProperties(Constructor.prototype, protoPr'
  +'ops); if (staticProps) defineProperties(Constructor, staticProps); return C'
  +'onstructor; }; }();'#13#10#13#10'function _classCallCheck(instance, Constru'
  +'ctor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cann'
  +'ot call a class as a function"); } }'#13#10#13#10'function _possibleConstru'
  ,'ctorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn'''
  +'t been initialised - super() hasn''t been called"); } return call && (typeo'
  +'f call === "object" || typeof call === "function") ? call : self; }'#13#10
  +#13#10'function _inherits(subClass, superClass) { if (typeof superClass !== '
  +'"function" && superClass !== null) { throw new TypeError("Super expression '
  +'must either be null or a function, not " + typeof superClass); } subClass.p'
  +'rototype = Object.create(superClass && superClass.prototype, { constructor:'
  +' { value: subClass, enumerable: false, writable: true, configurable: true }'
  +' }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass'
  +', superClass) : subClass.__proto__ = superClass; }'#13#10#13#10'var KernelB'
  +'ase = require(''../kernel-base'');'#13#10'var utils = require(''../../core/'
  +'utils'');'#13#10'var kernelString = require(''./kernel-string'');'#13#10#13
  +#10'module.exports = function (_KernelBase) {'#13#10#9'_inherits(CPUKernel, '
  +'_KernelBase);'#13#10#13#10#9'function CPUKernel(fnString, settings) {'#13#10
  +#9#9'_classCallCheck(this, CPUKernel);'#13#10#13#10#9#9'var _this = _possibl'
  +'eConstructorReturn(this, (CPUKernel.__proto__ || Object.getPrototypeOf(CPUK'
  +'ernel)).call(this, fnString, settings));'#13#10#13#10#9#9'_this._fnBody = u'
  +'tils.getFunctionBodyFromString(fnString);'#13#10#9#9'_this._fn = null;'#13
  +#10#9#9'_this.run = null;'#13#10#9#9'_this._canvasCtx = null;'#13#10#9#9'_th'
  +'is._imageData = null;'#13#10#9#9'_this._colorData = null;'#13#10#9#9'_this.'
  +'_kernelString = null;'#13#10#9#9'_this.thread = {'#13#10#9#9#9'x: 0,'#13#10
  +#9#9#9'y: 0,'#13#10#9#9#9'z: 0'#13#10#9#9'};'#13#10#13#10#9#9'_this.run = fu'
  +'nction () {'#13#10#9#9#9'this.run = null;'#13#10#9#9#9'this.build.apply(thi'
  +'s, arguments);'#13#10#9#9#9'return this.run.apply(this, arguments);'#13#10#9
  +#9'}.bind(_this);'#13#10#9#9'return _this;'#13#10#9'}'#13#10#13#10#13#10#13
  +#10#9'_createClass(CPUKernel, [{'#13#10#9#9'key: ''validateOptions'','#13#10
  +#9#9'value: function validateOptions() {'#13#10#9#9#9'if (!this.output || th'
  +'is.output.length === 0) {'#13#10#9#9#9#9'if (arguments.length !== 1) {'#13
  +#10#9#9#9#9#9'throw ''Auto dimensions only supported for kernels with only o'
  +'ne input'';'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'var argType = utils.getAr'
  +'gumentType(arguments[0]);'#13#10#9#9#9#9'if (argType === ''Array'') {'#13#10
  +#9#9#9#9#9'this.output = utils.getDimensions(argType);'#13#10#9#9#9#9'} else'
  +' if (argType === ''Texture'') {'#13#10#9#9#9#9#9'this.output = arguments[0]'
  +'.output;'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'throw ''Auto dimensions n'
  +'ot supported for input type: '' + argType;'#13#10#9#9#9#9'}'#13#10#9#9#9'}'
  +#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''build'','#13#10#9#9
  +'value: function build() {'#13#10#9#9#9'this.setupParams(arguments);'#13#10#9
  +#9#9'var threadDim = this.threadDim = utils.clone(this.output);'#13#10#13#10
  +#9#9#9'while (threadDim.length < 3) {'#13#10#9#9#9#9'threadDim.push(1);'#13
  +#10#9#9#9'}'#13#10#13#10#9#9#9'if (this.graphical) {'#13#10#9#9#9#9'var canv'
  +'as = this.getCanvas();'#13#10#9#9#9#9'canvas.width = threadDim[0];'#13#10#9
  +#9#9#9'canvas.height = threadDim[1];'#13#10#9#9#9#9'this._canvasCtx = canvas'
  +'.getContext(''2d'');'#13#10#9#9#9#9'this._imageData = this._canvasCtx.creat'
  +'eImageData(threadDim[0], threadDim[1]);'#13#10#9#9#9#9'this._colorData = ne'
  +'w Uint8ClampedArray(threadDim[0] * threadDim[1] * 4);'#13#10#9#9#9'}'#13#10
  +#13#10#9#9#9'var kernelString = this.getKernelString();'#13#10#13#10#9#9#9'i'
  +'f (this.debug) {'#13#10#9#9#9#9'console.log(''Options:'');'#13#10#9#9#9#9'c'
  +'onsole.dir(this);'#13#10#9#9#9#9'console.log(''Function output:'');'#13#10#9
  +#9#9#9'console.log(kernelString);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'this.ker'
  +'nelString = kernelString;'#13#10#9#9#9'this.run = new Function([], kernelSt'
  +'ring).bind(this)();'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''color'','
  +#13#10#9#9'value: function color(r, g, b, a) {'#13#10#9#9#9'if (typeof a ==='
  +' ''undefined'') {'#13#10#9#9#9#9'a = 1;'#13#10#9#9#9'}'#13#10#13#10#9#9#9'r'
  +' = Math.floor(r * 255);'#13#10#9#9#9'g = Math.floor(g * 255);'#13#10#9#9#9
  +'b = Math.floor(b * 255);'#13#10#9#9#9'a = Math.floor(a * 255);'#13#10#13#10
  +#9#9#9'var width = this.output[0];'#13#10#9#9#9'var height = this.output[1];'
  +#13#10#13#10#9#9#9'var x = this.thread.x;'#13#10#9#9#9'var y = height - this'
  +'.thread.y - 1;'#13#10#13#10#9#9#9'var index = x + y * width;'#13#10#13#10#9
  +#9#9'this._colorData[index * 4 + 0] = r;'#13#10#9#9#9'this._colorData[index '
  +'* 4 + 1] = g;'#13#10#9#9#9'this._colorData[index * 4 + 2] = b;'#13#10#9#9#9
  +'this._colorData[index * 4 + 3] = a;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  +#13#10#9#9'key: ''getKernelString'','#13#10#9#9'value: function getKernelStr'
  +'ing() {'#13#10#9#9#9'var _this2 = this;'#13#10#13#10#9#9#9'if (this._kernel'
  +'String !== null) return this._kernelString;'#13#10#13#10#9#9#9'var builder '
  ,'= this.functionBuilder;'#13#10#13#10#9#9#9'var threadDim = this.threadDim |'
  +'| (this.threadDim = utils.clone(this.output));'#13#10#9#9#9'while (threadDi'
  +'m.length < 3) {'#13#10#9#9#9#9'threadDim.push(1);'#13#10#9#9#9'}'#13#10#13
  +#10#9#9#9'builder.addKernel(this.fnString, {'#13#10#9#9#9#9'prototypeOnly: f'
  +'alse,'#13#10#9#9#9#9'constants: this.constants,'#13#10#9#9#9#9'output: this'
  +'.output,'#13#10#9#9#9#9'debug: this.debug,'#13#10#9#9#9#9'loopMaxIterations'
  +': this.loopMaxIterations'#13#10#9#9#9'}, this.paramNames, this.paramTypes);'
  +#13#10#13#10#9#9#9'builder.addFunctions(this.functions, {'#13#10#9#9#9#9'con'
  +'stants: this.constants,'#13#10#9#9#9#9'output: this.output'#13#10#9#9#9'});'
  +#13#10#13#10#9#9#9'if (this.subKernels !== null) {'#13#10#9#9#9#9'this.subKe'
  +'rnelOutputTextures = [];'#13#10#9#9#9#9'this.subKernelOutputVariableNames ='
  +' [];'#13#10#9#9#9#9'for (var i = 0; i < this.subKernels.length; i++) {'#13
  +#10#9#9#9#9#9'var subKernel = this.subKernels[i];'#13#10#9#9#9#9#9'builder.a'
  +'ddSubKernel(subKernel, {'#13#10#9#9#9#9#9#9'prototypeOnly: false,'#13#10#9#9
  +#9#9#9#9'constants: this.constants,'#13#10#9#9#9#9#9#9'output: this.output,'
  +#13#10#9#9#9#9#9#9'debug: this.debug,'#13#10#9#9#9#9#9#9'loopMaxIterations: '
  +'this.loopMaxIterations'#13#10#9#9#9#9#9'});'#13#10#9#9#9#9#9'this.subKernel'
  +'OutputVariableNames.push(subKernel.name + ''Result'');'#13#10#9#9#9#9'}'#13
  +#10#9#9#9'} else if (this.subKernelProperties !== null) {'#13#10#9#9#9#9'thi'
  +'s.subKernelOutputVariableNames = [];'#13#10#9#9#9#9'var _i = 0;'#13#10#9#9#9
  +#9'for (var p in this.subKernelProperties) {'#13#10#9#9#9#9#9'if (!this.subK'
  +'ernelProperties.hasOwnProperty(p)) continue;'#13#10#9#9#9#9#9'var _subKerne'
  +'l = this.subKernelProperties[p];'#13#10#9#9#9#9#9'builder.addSubKernel(_sub'
  +'Kernel);'#13#10#9#9#9#9#9'this.subKernelOutputVariableNames.push(_subKernel'
  +'.name + ''Result'');'#13#10#9#9#9#9#9'_i++;'#13#10#9#9#9#9'}'#13#10#9#9#9'}'
  +#13#10#13#10#9#9#9'var prototypes = builder.getPrototypes();'#13#10#9#9#9'va'
  +'r kernel = prototypes.shift();'#13#10#9#9#9'var kernelString = this._kernel'
  +'String = ''\n\t\tvar LOOP_MAX = '' + this._getLoopMaxString() + '';\n\t\tva'
  +'r _this = this;\n  '' + (this.subKernelOutputVariableNames === null ? '''' '
  +': this.subKernelOutputVariableNames.map(function (name) {'#13#10#9#9#9#9're'
  +'turn ''  var '' + name + '' = null;\n'';'#13#10#9#9#9'}).join('''')) + ''\n'
  +'    return function ('' + this.paramNames.map(function (paramName) {'#13#10
  +#9#9#9#9'return ''user_'' + paramName;'#13#10#9#9#9'}).join('', '') + '') {\'
  +'n    var ret = new Array('' + threadDim[2] + '');\n  '' + (this.subKernelOu'
  +'tputVariableNames === null ? '''' : this.subKernelOutputVariableNames.map(f'
  +'unction (name) {'#13#10#9#9#9#9'return ''  '' + name + ''Z = new Array('' +'
  +' threadDim[2] + '');\n'';'#13#10#9#9#9'}).join('''')) + ''\n    for (this.t'
  +'hread.z = 0; this.thread.z < '' + threadDim[2] + ''; this.thread.z++) {\n  '
  +'    ret[this.thread.z] = new Array('' + threadDim[1] + '');\n  '' + (this.s'
  +'ubKernelOutputVariableNames === null ? '''' : this.subKernelOutputVariableN'
  +'ames.map(function (name) {'#13#10#9#9#9#9'return ''    '' + name + ''Z[this'
  +'.thread.z] = new Array('' + threadDim[1] + '');\n'';'#13#10#9#9#9'}).join('
  +''''')) + ''\n      for (this.thread.y = 0; this.thread.y < '' + threadDim[1'
  +'] + ''; this.thread.y++) {\n        ret[this.thread.z][this.thread.y] = new'
  +' Array('' + threadDim[0] + '');\n  '' + (this.subKernelOutputVariableNames '
  +'=== null ? '''' : this.subKernelOutputVariableNames.map(function (name) {'
  +#13#10#9#9#9#9'return ''      '' + name + ''Z[this.thread.z][this.thread.y] '
  +'= new Array('' + threadDim[0] + '');\n'';'#13#10#9#9#9'}).join('''')) + ''\'
  +'n        for (this.thread.x = 0; this.thread.x < '' + threadDim[0] + ''; th'
  +'is.thread.x++) {\n          var kernelResult;\n          '' + kernel + ''\n'
  +'          ret[this.thread.z][this.thread.y][this.thread.x] = kernelResult;\'
  +'n'' + (this.subKernelOutputVariableNames === null ? '''' : this.subKernelOu'
  +'tputVariableNames.map(function (name) {'#13#10#9#9#9#9'return ''        '' '
  +'+ name + ''Z[this.thread.z][this.thread.y][this.thread.x] = '' + name + '';'
  +'\n'';'#13#10#9#9#9'}).join('''')) + ''\n          }\n        }\n      }\n  '
  +'    \n      if (this.graphical) {\n        this._imageData.data.set(this._c'
  +'olorData);\n        this._canvasCtx.putImageData(this._imageData, 0, 0);\n '
  +'       return;\n      }\n      \n      if (this.output.length === 1) {\n   '
  +'     ret = ret[0][0];\n'' + (this.subKernelOutputVariableNames === null ? '
  +''''' : this.subKernelOutputVariableNames.map(function (name) {'#13#10#9#9#9
  +#9'return ''    '' + name + '' = '' + name + ''Z[0][0];\n'';'#13#10#9#9#9'})'
  +'.join('''')) + ''\n      \n    } else if (this.output.length === 2) {\n    '
  +'  ret = ret[0];\n      '' + (this.subKernelOutputVariableNames === null ? '
  +''''' : this.subKernelOutputVariableNames.map(function (name) {'#13#10#9#9#9
  ,#9'return ''    '' + name + '' = '' + name + ''Z[0];\n'';'#13#10#9#9#9'}).jo'
  +'in('''')) + ''\n    }\n    \n    '' + (this.subKernelOutputVariableNames =='
  +'= null ? ''return ret;\n'' : this.subKernels !== null ? ''var result = [\n '
  +'       '' + this.subKernelOutputVariableNames.map(function (name) {'#13#10#9
  +#9#9#9'return '''' + name;'#13#10#9#9#9'}).join('',\n'') + ''\n      ];\n   '
  +'   result.result = ret;\n      return result;\n'' : ''return {\n        res'
  +'ult: ret,\n        '' + Object.keys(this.subKernelProperties).map(function '
  +'(name, i) {'#13#10#9#9#9#9'return name + '': '' + _this2.subKernelOutputVar'
  +'iableNames[i];'#13#10#9#9#9'}).join('',\n'') + ''\n      };'') + ''\n    '''
  +' + (prototypes.length > 0 ? prototypes.join(''\n'') : '''') + ''\n    }.bin'
  +'d(this);'';'#13#10#9#9#9'return kernelString;'#13#10#9#9'}'#13#10#13#10#13
  +#10#9'}, {'#13#10#9#9'key: ''toString'','#13#10#9#9'value: function toString'
  +'() {'#13#10#9#9#9'return kernelString(this);'#13#10#9#9'}'#13#10#13#10#13#10
  +#9'}, {'#13#10#9#9'key: ''precompileKernelObj'','#13#10#9#9'value: function '
  +'precompileKernelObj(argTypes) {'#13#10#13#10#9#9#9'var threadDim = this.thr'
  +'eadDim || (this.threadDim = utils.clone(this.output));'#13#10#13#10#9#9#9'r'
  +'eturn {'#13#10#9#9#9#9'threadDim: threadDim'#13#10#9#9#9'};'#13#10#9#9'}'#13
  +#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_getLoopMaxString'','#13#10#13#10#13
  +#10#9#9'value: function _getLoopMaxString() {'#13#10#9#9#9'return this.loopM'
  +'axIterations ? '' '' + parseInt(this.loopMaxIterations) + '';\n'' : '' 1000'
  +';\n'';'#13#10#9#9'}'#13#10#9'}], [{'#13#10#9#9'key: ''compileKernel'','#13
  +#10#9#9'value: function compileKernel(precompileObj) {'#13#10#13#10#9#9#9'va'
  +'r threadDim = precompileObj.threadDim;'#13#10#13#10#9#9#9'while (threadDim.'
  +'length < 3) {'#13#10#9#9#9#9'threadDim.push(1);'#13#10#9#9#9'}'#13#10#9#9'}'
  +#13#10#9'}]);'#13#10#13#10#9'return CPUKernel;'#13#10'}(KernelBase);'#13#10
  +'},{"../../core/utils":25,"../kernel-base":8,"./kernel-string":3}],5:[functi'
  +'on(require,module,exports){'#13#10'''use strict'';'#13#10#13#10'var _create'
  +'Class = function () { function defineProperties(target, props) { for (var i'
  +' = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumer'
  +'able = descriptor.enumerable || false; descriptor.configurable = true; if ('
  +'"value" in descriptor) descriptor.writable = true; Object.defineProperty(ta'
  +'rget, descriptor.key, descriptor); } } return function (Constructor, protoP'
  +'rops, staticProps) { if (protoProps) defineProperties(Constructor.prototype'
  +', protoProps); if (staticProps) defineProperties(Constructor, staticProps);'
  +' return Constructor; }; }();'#13#10#13#10'function _classCallCheck(instance'
  +', Constructor) { if (!(instance instanceof Constructor)) { throw new TypeEr'
  +'ror("Cannot call a class as a function"); } }'#13#10#13#10'function _possib'
  +'leConstructorReturn(self, call) { if (!self) { throw new ReferenceError("th'
  +'is hasn''t been initialised - super() hasn''t been called"); } return call '
  +'&& (typeof call === "object" || typeof call === "function") ? call : self; '
  +'}'#13#10#13#10'function _inherits(subClass, superClass) { if (typeof superC'
  +'lass !== "function" && superClass !== null) { throw new TypeError("Super ex'
  +'pression must either be null or a function, not " + typeof superClass); } s'
  +'ubClass.prototype = Object.create(superClass && superClass.prototype, { con'
  +'structor: { value: subClass, enumerable: false, writable: true, configurabl'
  +'e: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf'
  +'(subClass, superClass) : subClass.__proto__ = superClass; }'#13#10#13#10'va'
  +'r utils = require(''../../core/utils'');'#13#10'var RunnerBase = require('''
  +'../runner-base'');'#13#10'var CPUKernel = require(''./kernel'');'#13#10'var'
  +' CPUFunctionBuilder = require(''./function-builder'');'#13#10#13#10'module.'
  +'exports = function (_RunnerBase) {'#13#10#9'_inherits(CPURunner, _RunnerBas'
  +'e);'#13#10#13#10#13#10#9'function CPURunner(settings) {'#13#10#9#9'_classCa'
  +'llCheck(this, CPURunner);'#13#10#13#10#9#9'var _this = _possibleConstructor'
  +'Return(this, (CPURunner.__proto__ || Object.getPrototypeOf(CPURunner)).call'
  +'(this, new CPUFunctionBuilder(), settings));'#13#10#13#10#9#9'_this.Kernel '
  +'= CPUKernel;'#13#10#9#9'_this.kernel = null;'#13#10#9#9'return _this;'#13#10
  +#9'}'#13#10#13#10#13#10#13#10#9'_createClass(CPURunner, [{'#13#10#9#9'key: '
  +'''getMode'','#13#10#9#9'value: function getMode() {'#13#10#9#9#9'return ''c'
  +'pu'';'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return CPURunner;'#13#10'}('
  +'RunnerBase);'#13#10'},{"../../core/utils":25,"../runner-base":10,"./functio'
  +'n-builder":1,"./kernel":4}],6:[function(require,module,exports){'#13#10'''u'
  +'se strict'';'#13#10#13#10'var _createClass = function () { function defineP'
  +'roperties(target, props) { for (var i = 0; i < props.length; i++) { var des'
  +'criptor = props[i]; descriptor.enumerable = descriptor.enumerable || false;'
  ,' descriptor.configurable = true; if ("value" in descriptor) descriptor.writ'
  +'able = true; Object.defineProperty(target, descriptor.key, descriptor); } }'
  +' return function (Constructor, protoProps, staticProps) { if (protoProps) d'
  +'efineProperties(Constructor.prototype, protoProps); if (staticProps) define'
  +'Properties(Constructor, staticProps); return Constructor; }; }();'#13#10#13
  +#10'function _classCallCheck(instance, Constructor) { if (!(instance instanc'
  +'eof Constructor)) { throw new TypeError("Cannot call a class as a function"'
  +'); } }'#13#10#13#10'module.exports = function () {'#13#10#13#10#9'function '
  +'FunctionBuilderBase(gpu) {'#13#10#9#9'_classCallCheck(this, FunctionBuilder'
  +'Base);'#13#10#13#10#9#9'this.nodeMap = {};'#13#10#9#9'this.nativeFunctions '
  +'= {};'#13#10#9#9'this.gpu = gpu;'#13#10#9#9'this.rootKernel = null;'#13#10#9
  +#9'this.Node = null;'#13#10#9'}'#13#10#13#10#9'_createClass(FunctionBuilderB'
  +'ase, [{'#13#10#9#9'key: ''addNativeFunction'','#13#10#9#9'value: function a'
  +'ddNativeFunction(functionName, glslFunctionString) {'#13#10#9#9#9'this.nati'
  +'veFunctions[functionName] = glslFunctionString;'#13#10#9#9'}'#13#10#13#10#13
  +#10#9'}, {'#13#10#9#9'key: ''addFunction'','#13#10#9#9'value: function addFu'
  +'nction(functionName, jsFunction, options, paramTypes, returnType) {'#13#10#9
  +#9#9'this.addFunctionNode(new this.Node(functionName, jsFunction, options, p'
  +'aramTypes, returnType).setAddFunction(this.addFunction.bind(this)));'#13#10
  +#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''addFunctions'','#13#10#9#9'value: fun'
  +'ction addFunctions(functions, options) {'#13#10#9#9#9'if (functions) {'#13
  +#10#9#9#9#9'if (Array.isArray(functions)) {'#13#10#9#9#9#9#9'for (var i = 0;'
  +' i < functions.length; i++) {'#13#10#9#9#9#9#9#9'this.addFunction(null, fun'
  +'ctions[i], options);'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'} else {'#13#10#9#9#9
  +#9#9'for (var p in functions) {'#13#10#9#9#9#9#9#9'this.addFunction(p, funct'
  +'ions[p], options);'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10
  +#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''addNativeFunctions'','#13#10#9#9'valu'
  +'e: function addNativeFunctions(nativeFunctions) {'#13#10#9#9#9'for (var fun'
  +'ctionName in nativeFunctions) {'#13#10#9#9#9#9'if (!nativeFunctions.hasOwnP'
  +'roperty(functionName)) continue;'#13#10#9#9#9#9'this.addNativeFunction(func'
  +'tionName, nativeFunctions[functionName]);'#13#10#9#9#9'}'#13#10#9#9'}'#13#10
  +#13#10#13#10#9'}, {'#13#10#9#9'key: ''addFunctionNode'','#13#10#9#9'value: f'
  +'unction addFunctionNode(inNode) {'#13#10#9#9#9'this.nodeMap[inNode.function'
  +'Name] = inNode;'#13#10#9#9#9'if (inNode.isRootKernel) {'#13#10#9#9#9#9'this'
  +'.rootKernel = inNode;'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  +#13#10#9#9'key: ''traceFunctionCalls'','#13#10#9#9'value: function traceFunc'
  +'tionCalls(functionName, retList, parent) {'#13#10#9#9#9'functionName = func'
  +'tionName || ''kernel'';'#13#10#9#9#9'retList = retList || [];'#13#10#13#10#9
  +#9#9'var fNode = this.nodeMap[functionName];'#13#10#9#9#9'if (fNode) {'#13#10
  +#9#9#9#9'var functionIndex = retList.indexOf(functionName);'#13#10#9#9#9#9'i'
  +'f (functionIndex === -1) {'#13#10#9#9#9#9#9'retList.push(functionName);'#13
  +#10#9#9#9#9#9'if (parent) {'#13#10#9#9#9#9#9#9'fNode.parent = parent;'#13#10
  +#9#9#9#9#9'}'#13#10#9#9#9#9#9'fNode.getFunctionString();'#13#10#9#9#9#9#9'fo'
  +'r (var i = 0; i < fNode.calledFunctions.length; ++i) {'#13#10#9#9#9#9#9#9't'
  +'his.traceFunctionCalls(fNode.calledFunctions[i], retList, fNode);'#13#10#9#9
  +#9#9#9'}'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'var dependantFunctionName '
  +'= retList.splice(functionIndex, 1)[0];'#13#10#9#9#9#9#9'retList.push(depend'
  +'antFunctionName);'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (th'
  +'is.nativeFunctions[functionName]) {'#13#10#9#9#9#9'if (retList.indexOf(func'
  +'tionName) >= 0) {'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'retList.push(fun'
  +'ctionName);'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return retLi'
  +'st;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''addKernel'','
  +#13#10#9#9'value: function addKernel(fnString, options, paramNames, paramTyp'
  +'es) {'#13#10#9#9#9'var kernelNode = new this.Node(''kernel'', fnString, opt'
  +'ions, paramTypes);'#13#10#9#9#9'kernelNode.setAddFunction(this.addFunction.'
  +'bind(this));'#13#10#9#9#9'kernelNode.paramNames = paramNames;'#13#10#9#9#9
  +'kernelNode.paramTypes = paramTypes;'#13#10#9#9#9'kernelNode.isRootKernel = '
  +'true;'#13#10#9#9#9'this.addFunctionNode(kernelNode);'#13#10#9#9#9'return ke'
  +'rnelNode;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''addSubKe'
  +'rnel'','#13#10#9#9'value: function addSubKernel(jsFunction, options, paramT'
  +'ypes, returnType) {'#13#10#9#9#9'var kernelNode = new this.Node(null, jsFun'
  +'ction, options, paramTypes, returnType);'#13#10#9#9#9'kernelNode.setAddFunc'
  +'tion(this.addFunction.bind(this));'#13#10#9#9#9'kernelNode.isSubKernel = tr'
  +'ue;'#13#10#9#9#9'this.addFunctionNode(kernelNode);'#13#10#9#9#9'return kern'
  ,'elNode;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''getPrototy'
  +'peString'','#13#10#9#9'value: function getPrototypeString(functionName) {'
  +#13#10#9#9#9'return this.getPrototypes(functionName).join(''\n'');'#13#10#9#9
  +'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''getPrototypes'','#13#10#9#9'v'
  +'alue: function getPrototypes(functionName) {'#13#10#9#9#9'this.rootKernel.g'
  +'enerate();'#13#10#9#9#9'if (functionName) {'#13#10#9#9#9#9'return this.getP'
  +'rototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).revers'
  +'e());'#13#10#9#9#9'}'#13#10#9#9#9'return this.getPrototypesFromFunctionName'
  +'s(Object.keys(this.nodeMap));'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10
  +#9#9'key: ''getStringFromFunctionNames'','#13#10#9#9'value: function getStri'
  +'ngFromFunctionNames(functionList) {'#13#10#9#9#9'var ret = [];'#13#10#9#9#9
  +'for (var i = 0; i < functionList.length; ++i) {'#13#10#9#9#9#9'var node = t'
  +'his.nodeMap[functionList[i]];'#13#10#9#9#9#9'if (node) {'#13#10#9#9#9#9#9'r'
  +'et.push(this.nodeMap[functionList[i]].getFunctionString());'#13#10#9#9#9#9
  +'}'#13#10#9#9#9'}'#13#10#9#9#9'return ret.join(''\n'');'#13#10#9#9'}'#13#10
  +#13#10#13#10#9'}, {'#13#10#9#9'key: ''getPrototypesFromFunctionNames'','#13
  +#10#9#9'value: function getPrototypesFromFunctionNames(functionList, opt) {'
  +#13#10#9#9#9'var ret = [];'#13#10#9#9#9'for (var i = 0; i < functionList.len'
  +'gth; ++i) {'#13#10#9#9#9#9'var functionName = functionList[i];'#13#10#9#9#9
  +#9'var node = this.nodeMap[functionName];'#13#10#9#9#9#9'if (node) {'#13#10#9
  +#9#9#9#9'ret.push(node.getFunctionPrototypeString(opt));'#13#10#9#9#9#9'} el'
  +'se if (this.nativeFunctions[functionName]) {'#13#10#9#9#9#9#9'ret.push(this'
  +'.nativeFunctions[functionName]);'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#9#9
  +#9'return ret;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''getP'
  +'rototypeStringFromFunctionNames'','#13#10#9#9'value: function getPrototypeS'
  +'tringFromFunctionNames(functionList, opt) {'#13#10#9#9#9'return this.getPro'
  +'totypesFromFunctionNames(functionList, opt).toString();'#13#10#9#9'}'#13#10
  +#13#10#13#10#9'}, {'#13#10#9#9'key: ''getString'','#13#10#9#9'value: functio'
  +'n getString(functionName, opt) {'#13#10#9#9#9'if (opt === undefined) {'#13
  +#10#9#9#9#9'opt = {};'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (functionName) {'
  +#13#10#9#9#9#9'return this.getStringFromFunctionNames(this.traceFunctionCall'
  +'s(functionName, [], opt).reverse(), opt);'#13#10#9#9#9'}'#13#10#9#9#9'retur'
  +'n this.getStringFromFunctionNames(Object.keys(this.nodeMap), opt);'#13#10#9
  +#9'}'#13#10#9'}, {'#13#10#9#9'key: ''polyfillStandardFunctions'','#13#10#9#9
  +'value: function polyfillStandardFunctions() {'#13#10#9#9#9'throw new Error('
  +'''polyfillStandardFunctions not defined on base function builder'');'#13#10
  +#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return FunctionBuilderBase;'#13#10'}();'
  +#13#10'},{}],7:[function(require,module,exports){'#13#10'''use strict'';'#13
  +#10#13#10'var _typeof = typeof Symbol === "function" && typeof Symbol.iterat'
  +'or === "symbol" ? function (obj) { return typeof obj; } : function (obj) { '
  +'return obj && typeof Symbol === "function" && obj.constructor === Symbol &&'
  +' obj !== Symbol.prototype ? "symbol" : typeof obj; };'#13#10#13#10'var _cre'
  +'ateClass = function () { function defineProperties(target, props) { for (va'
  +'r i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enu'
  +'merable = descriptor.enumerable || false; descriptor.configurable = true; i'
  +'f ("value" in descriptor) descriptor.writable = true; Object.defineProperty'
  +'(target, descriptor.key, descriptor); } } return function (Constructor, pro'
  +'toProps, staticProps) { if (protoProps) defineProperties(Constructor.protot'
  +'ype, protoProps); if (staticProps) defineProperties(Constructor, staticProp'
  +'s); return Constructor; }; }();'#13#10#13#10'function _classCallCheck(insta'
  +'nce, Constructor) { if (!(instance instanceof Constructor)) { throw new Typ'
  +'eError("Cannot call a class as a function"); } }'#13#10#13#10'var utils = r'
  +'equire(''../core/utils'');'#13#10'var acorn = require(''acorn'');'#13#10#13
  +#10'module.exports = function () {'#13#10#13#10#9'function BaseFunctionNode('
  +'functionName, jsFunction, options, paramTypes, returnType) {'#13#10#9#9'_cl'
  +'assCallCheck(this, BaseFunctionNode);'#13#10#13#10#9#9'this.calledFunctions'
  +' = [];'#13#10#9#9'this.calledFunctionsArguments = {};'#13#10#9#9'this.initV'
  +'ariables = [];'#13#10#9#9'this.readVariables = [];'#13#10#9#9'this.writeVar'
  +'iables = [];'#13#10#9#9'this.addFunction = null;'#13#10#9#9'this.isRootKern'
  +'el = false;'#13#10#9#9'this.isSubKernel = false;'#13#10#9#9'this.parent = n'
  +'ull;'#13#10#9#9'this.debug = null;'#13#10#9#9'this.prototypeOnly = null;'#13
  +#10#9#9'this.constants = null;'#13#10#9#9'this.output = null;'#13#10#13#10#9
  +#9'if (options) {'#13#10#9#9#9'if (options.hasOwnProperty(''debug'')) {'#13
  +#10#9#9#9#9'this.debug = options.debug;'#13#10#9#9#9'}'#13#10#9#9#9'if (opti'
  ,'ons.hasOwnProperty(''prototypeOnly'')) {'#13#10#9#9#9#9'this.prototypeOnly '
  +'= options.prototypeOnly;'#13#10#9#9#9'}'#13#10#9#9#9'if (options.hasOwnProp'
  +'erty(''constants'')) {'#13#10#9#9#9#9'this.constants = options.constants;'
  +#13#10#9#9#9'}'#13#10#9#9#9'if (options.hasOwnProperty(''output'')) {'#13#10
  +#9#9#9#9'this.output = options.output;'#13#10#9#9#9'}'#13#10#9#9#9'if (optio'
  +'ns.hasOwnProperty(''loopMaxIterations'')) {'#13#10#9#9#9#9'this.loopMaxIter'
  +'ations = options.loopMaxIterations;'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10
  +#9#9'if (!jsFunction) {'#13#10#9#9#9'throw ''jsFunction, parameter is missin'
  +'g'';'#13#10#9#9'}'#13#10#13#10#9#9'this.jsFunctionString = jsFunction.toStr'
  +'ing();'#13#10#9#9'if (!utils.isFunctionString(this.jsFunctionString)) {'#13
  +#10#9#9#9'console.error(''jsFunction, to string conversion check failed: not'
  +' a function?'', this.jsFunctionString);'#13#10#9#9#9'throw ''jsFunction, to'
  +' string conversion check failed: not a function?'';'#13#10#9#9'}'#13#10#13
  +#10#9#9'if (!utils.isFunction(jsFunction)) {'#13#10#9#9#9'this.jsFunction = '
  +'null;'#13#10#9#9'} else {'#13#10#9#9#9'this.jsFunction = jsFunction;'#13#10
  +#9#9'}'#13#10#13#10#9#9'this.functionName = functionName || jsFunction && js'
  +'Function.name || utils.getFunctionNameFromString(this.jsFunctionString);'#13
  +#10#13#10#9#9'if (!this.functionName) {'#13#10#9#9#9'throw ''jsFunction, mis'
  +'sing name argument or value'';'#13#10#9#9'}'#13#10#13#10#9#9'this.paramName'
  +'s = utils.getParamNamesFromString(this.jsFunctionString);'#13#10#9#9'if (pa'
  +'ramTypes) {'#13#10#9#9#9'if (Array.isArray(paramTypes)) {'#13#10#9#9#9#9'if'
  +' (paramTypes.length !== this.paramNames.length) {'#13#10#9#9#9#9#9'throw '''
  +'Invalid argument type array length, against function length -> ('' + paramT'
  +'ypes.length + '','' + this.paramNames.length + '')'';'#13#10#9#9#9#9'}'#13
  +#10#9#9#9#9'this.paramTypes = paramTypes;'#13#10#9#9#9'} else if ((typeof pa'
  +'ramTypes === ''undefined'' ? ''undefined'' : _typeof(paramTypes)) === ''obj'
  +'ect'') {'#13#10#9#9#9#9'var paramVariableNames = Object.keys(paramTypes);'
  +#13#10#9#9#9#9'if (paramTypes.hasOwnProperty(''returns'')) {'#13#10#9#9#9#9#9
  +'this.returnType = paramTypes.returns;'#13#10#9#9#9#9#9'paramVariableNames.s'
  +'plice(paramVariableNames.indexOf(''returns''), 1);'#13#10#9#9#9#9'}'#13#10#9
  +#9#9#9'if (paramVariableNames.length > 0 && paramVariableNames.length !== th'
  +'is.paramNames.length) {'#13#10#9#9#9#9#9'throw ''Invalid argument type arra'
  +'y length, against function length -> ('' + paramVariableNames.length + '','
  +''' + this.paramNames.length + '')'';'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9
  +#9'this.paramTypes = this.paramNames.map(function (key) {'#13#10#9#9#9#9#9#9
  +'if (paramTypes.hasOwnProperty(key)) {'#13#10#9#9#9#9#9#9#9'return paramType'
  +'s[key];'#13#10#9#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9#9'return ''float'';'
  +#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9'});'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13
  +#10#9#9'} else {'#13#10#9#9#9'this.paramTypes = [];'#13#10#9#9'}'#13#10#13#10
  +#9#9'if (!this.returnType) {'#13#10#9#9#9'this.returnType = returnType || '''
  +'float'';'#13#10#9#9'}'#13#10#9'}'#13#10#13#10#9'_createClass(BaseFunctionNo'
  +'de, [{'#13#10#9#9'key: ''isIdentifierConstant'','#13#10#9#9'value: function'
  +' isIdentifierConstant(paramName) {'#13#10#9#9#9'if (!this.constants) return'
  +' false;'#13#10#9#9#9'return this.constants.hasOwnProperty(paramName);'#13#10
  +#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''setAddFunction'','#13#10#9#9'value: f'
  +'unction setAddFunction(fn) {'#13#10#9#9#9'this.addFunction = fn;'#13#10#9#9
  +#9'return this;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''get'
  +'JsFunction'','#13#10#9#9'value: function getJsFunction() {'#13#10#9#9#9'if '
  +'(this.jsFunction) {'#13#10#9#9#9#9'return this.jsFunction;'#13#10#9#9#9'}'
  +#13#10#13#10#9#9#9'if (this.jsFunctionString) {'#13#10#9#9#9#9'this.jsFuncti'
  +'on = eval(this.jsFunctionString);'#13#10#9#9#9#9'return this.jsFunction;'#13
  +#10#9#9#9'}'#13#10#13#10#9#9#9'throw ''Missing jsFunction, and jsFunctionStr'
  +'ing parameter'';'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''a'
  +'stMemberExpressionUnroll'','#13#10#9#9'value: function astMemberExpressionU'
  +'nroll(ast, funcParam) {'#13#10#9#9#9'if (ast.type === ''Identifier'') {'#13
  +#10#9#9#9#9'return ast.name;'#13#10#9#9#9'} else if (ast.type === ''ThisExpr'
  +'ession'') {'#13#10#9#9#9#9'return ''this'';'#13#10#9#9#9'}'#13#10#13#10#9#9
  +#9'if (ast.type === ''MemberExpression'') {'#13#10#9#9#9#9'if (ast.object &&'
  +' ast.property) {'#13#10#9#9#9#9#9'if (ast.object.hasOwnProperty(''name'') &'
  +'& ast.object.name[0] === ''_'') {'#13#10#9#9#9#9#9#9'return this.astMemberE'
  +'xpressionUnroll(ast.property, funcParam);'#13#10#9#9#9#9#9'}'#13#10#13#10#9
  +#9#9#9#9'return this.astMemberExpressionUnroll(ast.object, funcParam) + ''.'
  +''' + this.astMemberExpressionUnroll(ast.property, funcParam);'#13#10#9#9#9#9
  +'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (ast.hasOwnProperty(''expressions'')'
  ,') {'#13#10#9#9#9#9'var firstExpression = ast.expressions[0];'#13#10#9#9#9#9
  +'if (firstExpression.type === ''Literal'' && firstExpression.value === 0 && '
  +'ast.expressions.length === 2) {'#13#10#9#9#9#9#9'return this.astMemberExpre'
  +'ssionUnroll(ast.expressions[1]);'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#13
  +#10#9#9#9'throw this.astErrorOutput(''Unknown CallExpression_unroll'', ast, '
  +'funcParam);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''getJsA'
  +'ST'','#13#10#9#9'value: function getJsAST(inParser) {'#13#10#9#9#9'if (this'
  +'.jsFunctionAST) {'#13#10#9#9#9#9'return this.jsFunctionAST;'#13#10#9#9#9'}'
  +#13#10#13#10#9#9#9'inParser = inParser || acorn;'#13#10#9#9#9'if (inParser ='
  +'== null) {'#13#10#9#9#9#9'throw ''Missing JS to AST parser'';'#13#10#9#9#9
  +'}'#13#10#13#10#9#9#9'var ast = inParser.parse(''var '' + this.functionName '
  +'+ '' = '' + this.jsFunctionString + '';'', {'#13#10#9#9#9#9'locations: true'
  +#13#10#9#9#9'});'#13#10#9#9#9'if (ast === null) {'#13#10#9#9#9#9'throw ''Fai'
  +'led to parse JS code'';'#13#10#9#9#9'}'#13#10#13#10#9#9#9'var funcAST = ast'
  +'.body[0].declarations[0].init;'#13#10#9#9#9'this.jsFunctionAST = funcAST;'
  +#13#10#13#10#9#9#9'return funcAST;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13
  +#10#9#9'key: ''getFunctionString'','#13#10#9#9'value: function getFunctionSt'
  +'ring() {'#13#10#9#9#9'this.generate();'#13#10#9#9#9'return this.functionStr'
  +'ing;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''setFunctionSt'
  +'ring'','#13#10#9#9'value: function setFunctionString(functionString) {'#13
  +#10#9#9#9'this.functionString = functionString;'#13#10#9#9'}'#13#10#13#10#13
  +#10#9'}, {'#13#10#9#9'key: ''getParamType'','#13#10#9#9'value: function getP'
  +'aramType(paramName) {'#13#10#9#9#9'var paramIndex = this.paramNames.indexOf'
  +'(paramName);'#13#10#9#9#9'if (paramIndex === -1) return null;'#13#10#9#9#9
  +'if (!this.parent) return null;'#13#10#9#9#9'if (this.paramTypes[paramIndex]'
  +') return this.paramTypes[paramIndex];'#13#10#9#9#9'var calledFunctionArgume'
  +'nts = this.parent.calledFunctionsArguments[this.functionName];'#13#10#9#9#9
  +'for (var i = 0; i < calledFunctionArguments.length; i++) {'#13#10#9#9#9#9'v'
  +'ar calledFunctionArgument = calledFunctionArguments[i];'#13#10#9#9#9#9'if ('
  +'calledFunctionArgument[paramIndex] !== null) {'#13#10#9#9#9#9#9'return this'
  +'.paramTypes[paramIndex] = calledFunctionArgument[paramIndex].type;'#13#10#9
  +#9#9#9'}'#13#10#9#9#9'}'#13#10#9#9#9'return null;'#13#10#9#9'}'#13#10#13#10
  +#13#10#9'}, {'#13#10#9#9'key: ''getUserParamName'','#13#10#9#9'value: functi'
  +'on getUserParamName(paramName) {'#13#10#9#9#9'var paramIndex = this.paramNa'
  +'mes.indexOf(paramName);'#13#10#9#9#9'if (paramIndex === -1) return null;'#13
  +#10#9#9#9'if (!this.parent) return null;'#13#10#9#9#9'var calledFunctionArgu'
  +'ments = this.parent.calledFunctionsArguments[this.functionName];'#13#10#9#9
  +#9'for (var i = 0; i < calledFunctionArguments.length; i++) {'#13#10#9#9#9#9
  +'var calledFunctionArgument = calledFunctionArguments[i];'#13#10#9#9#9#9'if '
  +'(calledFunctionArgument[paramIndex] !== null) {'#13#10#9#9#9#9#9'return cal'
  +'ledFunctionArgument[paramIndex].name;'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10
  +#9#9#9'return null;'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''generate'','
  +#13#10#9#9'value: function generate(options) {'#13#10#9#9#9'throw new Error('
  +'''generate not defined on BaseFunctionNode'');'#13#10#9#9'}'#13#10#13#10#13
  +#10#9'}, {'#13#10#9#9'key: ''astErrorOutput'','#13#10#9#9'value: function as'
  +'tErrorOutput(error, ast, funcParam) {'#13#10#9#9#9'console.error(utils.getA'
  +'stString(this.jsFunctionString, ast));'#13#10#9#9#9'console.error(error, as'
  +'t, funcParam);'#13#10#9#9#9'return error;'#13#10#9#9'}'#13#10#9'}, {'#13#10
  +#9#9'key: ''astDebuggerStatement'','#13#10#9#9'value: function astDebuggerSt'
  +'atement(arrNode, retArr, funcParam) {'#13#10#9#9#9'return retArr;'#13#10#9#9
  +'}'#13#10#9'}]);'#13#10#13#10#9'return BaseFunctionNode;'#13#10'}();'#13#10
  +'},{"../core/utils":25,"acorn":27}],8:[function(require,module,exports){'#13
  +#10'''use strict'';'#13#10#13#10'var _createClass = function () { function d'
  +'efineProperties(target, props) { for (var i = 0; i < props.length; i++) { v'
  +'ar descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || '
  +'false; descriptor.configurable = true; if ("value" in descriptor) descripto'
  +'r.writable = true; Object.defineProperty(target, descriptor.key, descriptor'
  +'); } } return function (Constructor, protoProps, staticProps) { if (protoPr'
  +'ops) defineProperties(Constructor.prototype, protoProps); if (staticProps) '
  +'defineProperties(Constructor, staticProps); return Constructor; }; }();'#13
  +#10#13#10'function _classCallCheck(instance, Constructor) { if (!(instance i'
  +'nstanceof Constructor)) { throw new TypeError("Cannot call a class as a fun'
  +'ction"); } }'#13#10#13#10'var utils = require(''../core/utils'');'#13#10#13
  +#10'module.exports = function () {'#13#10#13#10#9'function BaseKernel(fnStri'
  ,'ng, settings) {'#13#10#9#9'_classCallCheck(this, BaseKernel);'#13#10#13#10#9
  +#9'this.paramNames = utils.getParamNamesFromString(fnString);'#13#10#9#9'thi'
  +'s.fnString = fnString;'#13#10#9#9'this.output = null;'#13#10#9#9'this.debug'
  +' = false;'#13#10#9#9'this.graphical = false;'#13#10#9#9'this.loopMaxIterati'
  +'ons = 0;'#13#10#9#9'this.constants = null;'#13#10#9#9'this.wraparound = nul'
  +'l;'#13#10#9#9'this.hardcodeConstants = null;'#13#10#9#9'this.outputToTextur'
  +'e = null;'#13#10#9#9'this.texSize = null;'#13#10#9#9'this._canvas = null;'
  +#13#10#9#9'this._webGl = null;'#13#10#9#9'this.threadDim = null;'#13#10#9#9
  +'this.floatTextures = null;'#13#10#9#9'this.floatOutput = null;'#13#10#9#9't'
  +'his.floatOutputForce = null;'#13#10#9#9'this.addFunction = null;'#13#10#9#9
  +'this.functions = null;'#13#10#9#9'this.nativeFunctions = null;'#13#10#9#9't'
  +'his.copyData = true;'#13#10#9#9'this.subKernels = null;'#13#10#9#9'this.sub'
  +'KernelProperties = null;'#13#10#9#9'this.subKernelNames = null;'#13#10#9#9
  +'this.subKernelOutputVariableNames = null;'#13#10#9#9'this.functionBuilder ='
  +' null;'#13#10#9#9'this.paramTypes = null;'#13#10#13#10#9#9'for (var p in se'
  +'ttings) {'#13#10#9#9#9'if (!settings.hasOwnProperty(p) || !this.hasOwnPrope'
  +'rty(p)) continue;'#13#10#9#9#9'this[p] = settings[p];'#13#10#9#9'}'#13#10#9
  +#9'if (settings.hasOwnProperty(''canvas'')) {'#13#10#9#9#9'this._canvas = se'
  +'ttings.canvas;'#13#10#9#9'}'#13#10#9#9'if (settings.hasOwnProperty(''output'
  +''')) {'#13#10#9#9#9'this.setOutput(settings.output);'#13#10#9#9'}'#13#10#13
  +#10#9#9'if (!this._canvas) this._canvas = utils.initCanvas();'#13#10#9'}'#13
  +#10#13#10#9'_createClass(BaseKernel, [{'#13#10#9#9'key: ''build'','#13#10#9#9
  +'value: function build() {'#13#10#9#9#9'throw new Error(''"build" not define'
  +'d on Base'');'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''setu'
  +'pParams'','#13#10#9#9'value: function setupParams(args) {'#13#10#9#9#9'var '
  +'paramTypes = this.paramTypes = [];'#13#10#9#9#9'for (var i = 0; i < args.le'
  +'ngth; i++) {'#13#10#9#9#9#9'var param = args[i];'#13#10#9#9#9#9'var paramTy'
  +'pe = utils.getArgumentType(param);'#13#10#9#9#9#9'paramTypes.push(paramType'
  +');'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''setAddFuncti'
  +'on'','#13#10#9#9'value: function setAddFunction(cb) {'#13#10#9#9#9'this.add'
  +'Function = cb;'#13#10#9#9#9'return this;'#13#10#9#9'}'#13#10#9'}, {'#13#10#9
  +#9'key: ''setFunctions'','#13#10#9#9'value: function setFunctions(functions)'
  +' {'#13#10#9#9#9'this.functions = functions;'#13#10#9#9#9'return this;'#13#10
  +#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''setOutput'','#13#10#9#9'v'
  +'alue: function setOutput(output) {'#13#10#9#9#9'if (output.hasOwnProperty('
  +'''x'')) {'#13#10#9#9#9#9'if (output.hasOwnProperty(''y'')) {'#13#10#9#9#9#9
  +#9'if (output.hasOwnProperty(''z'')) {'#13#10#9#9#9#9#9#9'this.output = [out'
  +'put.x, output.y, output.z];'#13#10#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9'th'
  +'is.output = [output.x, output.y];'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'} else '
  +'{'#13#10#9#9#9#9#9'this.output = [output.x];'#13#10#9#9#9#9'}'#13#10#9#9#9
  +'} else {'#13#10#9#9#9#9'this.output = output;'#13#10#9#9#9'}'#13#10#9#9#9'r'
  +'eturn this;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''setDeb'
  +'ug'','#13#10#9#9'value: function setDebug(flag) {'#13#10#9#9#9'this.debug ='
  +' flag;'#13#10#9#9#9'return this;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13
  +#10#9#9'key: ''setGraphical'','#13#10#9#9'value: function setGraphical(flag)'
  +' {'#13#10#9#9#9'this.graphical = flag;'#13#10#9#9#9'return this;'#13#10#9#9
  +'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''setLoopMaxIterations'','#13#10
  +#9#9'value: function setLoopMaxIterations(max) {'#13#10#9#9#9'this.loopMaxIt'
  +'erations = max;'#13#10#9#9#9'return this;'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''setConstants'','#13#10#9#9'value: function setConsta'
  +'nts(constants) {'#13#10#9#9#9'this.constants = constants;'#13#10#9#9#9'retu'
  +'rn this;'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''setWraparound'','#13
  +#10#9#9'value: function setWraparound(flag) {'#13#10#9#9#9'console.warn(''Wr'
  +'aparound mode is not supported and undocumented.'');'#13#10#9#9#9'this.wrap'
  +'around = flag;'#13#10#9#9#9'return this;'#13#10#9#9'}'#13#10#9'}, {'#13#10#9
  +#9'key: ''setHardcodeConstants'','#13#10#9#9'value: function setHardcodeCons'
  +'tants(flag) {'#13#10#9#9#9'this.hardcodeConstants = flag;'#13#10#9#9#9'retu'
  +'rn this;'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''setOutputToTexture'','
  +#13#10#9#9'value: function setOutputToTexture(flag) {'#13#10#9#9#9'this.outp'
  +'utToTexture = flag;'#13#10#9#9#9'return this;'#13#10#9#9'}'#13#10#13#10#13
  +#10#9'}, {'#13#10#9#9'key: ''setFloatTextures'','#13#10#9#9'value: function '
  +'setFloatTextures(flag) {'#13#10#9#9#9'this.floatTextures = flag;'#13#10#9#9
  +#9'return this;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''set'
  +'FloatOutput'','#13#10#9#9'value: function setFloatOutput(flag) {'#13#10#9#9
  ,#9'this.floatOutput = flag;'#13#10#9#9#9'return this;'#13#10#9#9'}'#13#10#9
  +'}, {'#13#10#9#9'key: ''setFloatOutputForce'','#13#10#9#9'value: function se'
  +'tFloatOutputForce(flag) {'#13#10#9#9#9'this.floatOutputForce = flag;'#13#10
  +#9#9#9'return this;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: '
  +'''setCanvas'','#13#10#9#9'value: function setCanvas(canvas) {'#13#10#9#9#9
  +'this._canvas = canvas;'#13#10#9#9#9'return this;'#13#10#9#9'}'#13#10#13#10
  +#13#10#9'}, {'#13#10#9#9'key: ''setWebGl'','#13#10#9#9'value: function setWe'
  +'bGl(webGl) {'#13#10#9#9#9'this._webGl = webGl;'#13#10#9#9#9'return this;'#13
  +#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''setCopyData'','#13#10#9#9'value: f'
  +'unction setCopyData(copyData) {'#13#10#9#9#9'this.copyData = copyData;'#13
  +#10#9#9#9'return this;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key'
  +': ''getCanvas'','#13#10#9#9'value: function getCanvas() {'#13#10#9#9#9'retu'
  +'rn this._canvas;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''g'
  +'etWebGl'','#13#10#9#9'value: function getWebGl() {'#13#10#9#9#9'return this'
  +'._webGl;'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''validateOptions'','#13
  +#10#9#9'value: function validateOptions() {'#13#10#9#9#9'throw new Error(''v'
  +'alidateOptions not defined'');'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: '
  +'''exec'','#13#10#9#9'value: function exec() {'#13#10#9#9#9'return this.exec'
  +'ute.apply(this, arguments);'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''ex'
  +'ecute'','#13#10#9#9'value: function execute() {'#13#10#9#9#9'var _this = th'
  +'is;'#13#10#13#10#9#9#9'var args = arguments.length === 1 ? [arguments[0]] :'
  +' Array.apply(null, arguments);'#13#10#13#10#9#9#9'return utils.newPromise(f'
  +'unction (accept, reject) {'#13#10#9#9#9#9'try {'#13#10#9#9#9#9#9'accept(_th'
  +'is.run.apply(_this, args));'#13#10#9#9#9#9'} catch (e) {'#13#10#9#9#9#9#9'r'
  +'eject(e);'#13#10#9#9#9#9'}'#13#10#9#9#9'});'#13#10#9#9'}'#13#10#13#10#13#10
  +#9'}, {'#13#10#9#9'key: ''addSubKernel'','#13#10#9#9'value: function addSubK'
  +'ernel(fnString) {'#13#10#9#9#9'if (this.subKernels === null) {'#13#10#9#9#9
  +#9'this.subKernels = [];'#13#10#9#9#9#9'this.subKernelNames = [];'#13#10#9#9
  +#9'}'#13#10#9#9#9'this.subKernels.push(fnString);'#13#10#9#9#9'this.subKerne'
  +'lNames.push(utils.getFunctionNameFromString(fnString));'#13#10#9#9#9'return'
  +' this;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''addSubKerne'
  +'lProperty'','#13#10#9#9'value: function addSubKernelProperty(property, fnSt'
  +'ring) {'#13#10#9#9#9'if (this.subKernelProperties === null) {'#13#10#9#9#9#9
  +'this.subKernelProperties = {};'#13#10#9#9#9#9'this.subKernelNames = [];'#13
  +#10#9#9#9'}'#13#10#9#9#9'if (this.subKernelProperties.hasOwnProperty(propert'
  +'y)) {'#13#10#9#9#9#9'throw new Error(''cannot add sub kernel '' + property '
  +'+ '', already defined'');'#13#10#9#9#9'}'#13#10#9#9#9'this.subKernelPropert'
  +'ies[property] = fnString;'#13#10#9#9#9'this.subKernelNames.push(utils.getFu'
  +'nctionNameFromString(fnString));'#13#10#9#9#9'return this;'#13#10#9#9'}'#13
  +#10#9'}, {'#13#10#9#9'key: ''addNativeFunction'','#13#10#9#9'value: function'
  +' addNativeFunction(name, source) {'#13#10#9#9#9'this.functionBuilder.addNat'
  +'iveFunction(name, source);'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return'
  +' BaseKernel;'#13#10'}();'#13#10'},{"../core/utils":25}],9:[function(require'
  +',module,exports){'#13#10'''use strict'';'#13#10#13#10'var utils = require('
  +'''../core/utils'');'#13#10#13#10'module.exports = function kernelRunShortcu'
  +'t(kernel) {'#13#10#9'var shortcut = function shortcut() {'#13#10#9#9'return'
  +' kernel.run.apply(kernel, arguments);'#13#10#9'};'#13#10#13#10#9'utils.allP'
  +'ropertiesOf(kernel).forEach(function (key) {'#13#10#9#9'if (key[0] === ''_'
  +''' && key[1] === ''_'') return;'#13#10#9#9'if (typeof kernel[key] === ''fun'
  +'ction'') {'#13#10#9#9#9'if (key.substring(0, 3) === ''add'' || key.substrin'
  +'g(0, 3) === ''set'') {'#13#10#9#9#9#9'shortcut[key] = function () {'#13#10#9
  +#9#9#9#9'kernel[key].apply(kernel, arguments);'#13#10#9#9#9#9#9'return short'
  +'cut;'#13#10#9#9#9#9'};'#13#10#9#9#9'} else {'#13#10#9#9#9#9'shortcut[key] ='
  +' kernel[key].bind(kernel);'#13#10#9#9#9'}'#13#10#9#9'} else {'#13#10#9#9#9
  +'shortcut.__defineGetter__(key, function () {'#13#10#9#9#9#9'return kernel[k'
  +'ey];'#13#10#9#9#9'});'#13#10#9#9#9'shortcut.__defineSetter__(key, function '
  +'(value) {'#13#10#9#9#9#9'kernel[key] = value;'#13#10#9#9#9'});'#13#10#9#9'}'
  +#13#10#9'});'#13#10#13#10#9'shortcut.kernel = kernel;'#13#10#13#10#9'return '
  +'shortcut;'#13#10'};'#13#10'},{"../core/utils":25}],10:[function(require,mod'
  +'ule,exports){'#13#10'''use strict'';'#13#10#13#10'var _createClass = functi'
  +'on () { function defineProperties(target, props) { for (var i = 0; i < prop'
  +'s.length; i++) { var descriptor = props[i]; descriptor.enumerable = descrip'
  +'tor.enumerable || false; descriptor.configurable = true; if ("value" in des'
  +'criptor) descriptor.writable = true; Object.defineProperty(target, descript'
  ,'or.key, descriptor); } } return function (Constructor, protoProps, staticPr'
  +'ops) { if (protoProps) defineProperties(Constructor.prototype, protoProps);'
  +' if (staticProps) defineProperties(Constructor, staticProps); return Constr'
  +'uctor; }; }();'#13#10#13#10'function _classCallCheck(instance, Constructor)'
  +' { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot ca'
  +'ll a class as a function"); } }'#13#10#13#10'var utils = require(''../core/'
  +'utils'');'#13#10'var kernelRunShortcut = require(''./kernel-run-shortcut'')'
  +';'#13#10#13#10'module.exports = function () {'#13#10#13#10#13#10#9'function'
  +' BaseRunner(functionBuilder, settings) {'#13#10#9#9'_classCallCheck(this, B'
  +'aseRunner);'#13#10#13#10#9#9'settings = settings || {};'#13#10#9#9'this.ker'
  +'nel = settings.kernel;'#13#10#9#9'this.canvas = settings.canvas;'#13#10#9#9
  +'this.webGl = settings.webGl;'#13#10#9#9'this.fn = null;'#13#10#9#9'this.fun'
  +'ctionBuilder = functionBuilder;'#13#10#9#9'this.fnString = null;'#13#10#9#9
  +'this.endianness = utils.systemEndianness();'#13#10#9#9'this.functionBuilder'
  +'.polyfillStandardFunctions();'#13#10#9'}'#13#10#13#10#13#10#13#10#9'_create'
  +'Class(BaseRunner, [{'#13#10#9#9'key: ''textureToArray'','#13#10#9#9'value: '
  +'function textureToArray(texture) {'#13#10#9#9#9'var copy = this.createKerne'
  +'l(function (x) {'#13#10#9#9#9#9'return x[this.thread.z][this.thread.y][this'
  +'.thread.x];'#13#10#9#9#9'});'#13#10#13#10#9#9#9'return copy(texture);'#13#10
  +#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''deleteTexture'','#13#10#9
  +#9'value: function deleteTexture(texture) {'#13#10#9#9#9'this.webGl.deleteTe'
  +'xture(texture.texture);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'k'
  +'ey: ''buildPromiseKernel'','#13#10#9#9'value: function buildPromiseKernel()'
  +' {'#13#10#9#9#9'throw new Error(''not yet implemented'');'#13#10#9#9'}'#13
  +#10#9'}, {'#13#10#9#9'key: ''getMode'','#13#10#9#9'value: function getMode()'
  +' {'#13#10#9#9#9'throw new Error(''"mode" not implemented on BaseRunner'');'
  +#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''buildKernel'','#13
  +#10#9#9'value: function buildKernel(fn, settings) {'#13#10#9#9#9'settings = '
  +'Object.assign({}, settings || {});'#13#10#9#9#9'var fnString = fn.toString('
  +');'#13#10#9#9#9'if (!settings.functionBuilder) {'#13#10#9#9#9#9'settings.fu'
  +'nctionBuilder = this.functionBuilder;'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if '
  +'(!settings.canvas) {'#13#10#9#9#9#9'settings.canvas = this.canvas;'#13#10#9
  +#9#9'}'#13#10#13#10#9#9#9'if (!settings.webGl) {'#13#10#9#9#9#9'settings.web'
  +'Gl = this.webgl;'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return kernelRunShortcut'
  +'(new this.Kernel(fnString, settings));'#13#10#9#9'}'#13#10#9'}]);'#13#10#13
  +#10#9'return BaseRunner;'#13#10'}();'#13#10'},{"../core/utils":25,"./kernel-'
  +'run-shortcut":9}],11:[function(require,module,exports){'#13#10'''use strict'
  +''';'#13#10#13#10'var _createClass = function () { function defineProperties'
  +'(target, props) { for (var i = 0; i < props.length; i++) { var descriptor ='
  +' props[i]; descriptor.enumerable = descriptor.enumerable || false; descript'
  +'or.configurable = true; if ("value" in descriptor) descriptor.writable = tr'
  +'ue; Object.defineProperty(target, descriptor.key, descriptor); } } return f'
  +'unction (Constructor, protoProps, staticProps) { if (protoProps) defineProp'
  +'erties(Constructor.prototype, protoProps); if (staticProps) definePropertie'
  +'s(Constructor, staticProps); return Constructor; }; }();'#13#10#13#10'funct'
  +'ion _classCallCheck(instance, Constructor) { if (!(instance instanceof Cons'
  +'tructor)) { throw new TypeError("Cannot call a class as a function"); } }'
  +#13#10#13#10'function _possibleConstructorReturn(self, call) { if (!self) { '
  +'throw new ReferenceError("this hasn''t been initialised - super() hasn''t b'
  +'een called"); } return call && (typeof call === "object" || typeof call ==='
  +' "function") ? call : self; }'#13#10#13#10'function _inherits(subClass, sup'
  +'erClass) { if (typeof superClass !== "function" && superClass !== null) { t'
  +'hrow new TypeError("Super expression must either be null or a function, not'
  +' " + typeof superClass); } subClass.prototype = Object.create(superClass &&'
  +' superClass.prototype, { constructor: { value: subClass, enumerable: false,'
  +' writable: true, configurable: true } }); if (superClass) Object.setPrototy'
  +'peOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = s'
  +'uperClass; }'#13#10#13#10'var FunctionBuilderBase = require(''../function-b'
  +'uilder-base'');'#13#10'var WebGLFunctionNode = require(''./function-node'')'
  +';'#13#10#13#10'module.exports = function (_FunctionBuilderBase) {'#13#10#9
  +'_inherits(WebGLFunctionBuilder, _FunctionBuilderBase);'#13#10#13#10#9'funct'
  +'ion WebGLFunctionBuilder() {'#13#10#9#9'_classCallCheck(this, WebGLFunction'
  +'Builder);'#13#10#13#10#9#9'var _this = _possibleConstructorReturn(this, (We'
  +'bGLFunctionBuilder.__proto__ || Object.getPrototypeOf(WebGLFunctionBuilder)'
  ,').call(this));'#13#10#13#10#9#9'_this.Node = WebGLFunctionNode;'#13#10#9#9
  +'return _this;'#13#10#9'}'#13#10#13#10#13#10#13#10#13#10#9'_createClass(WebG'
  +'LFunctionBuilder, [{'#13#10#9#9'key: ''polyfillStandardFunctions'','#13#10
  +#13#10#13#10#9#9'value: function polyfillStandardFunctions() {'#13#10#9#9#9
  +'this.addFunction(''round'', _round);'#13#10#9#9'}'#13#10#9'}], [{'#13#10#9#9
  +'key: ''round'','#13#10#9#9'value: function round(a) {'#13#10#9#9#9'return _'
  +'round(a);'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return WebGLFunctionBui'
  +'lder;'#13#10'}(FunctionBuilderBase);'#13#10#13#10'function _round(a) {'#13
  +#10#9'return Math.floor(a + 0.5);'#13#10'}'#13#10'},{"../function-builder-ba'
  +'se":6,"./function-node":12}],12:[function(require,module,exports){'#13#10
  +'''use strict'';'#13#10#13#10'var _createClass = function () { function defi'
  +'neProperties(target, props) { for (var i = 0; i < props.length; i++) { var '
  +'descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || fal'
  +'se; descriptor.configurable = true; if ("value" in descriptor) descriptor.w'
  +'ritable = true; Object.defineProperty(target, descriptor.key, descriptor); '
  +'} } return function (Constructor, protoProps, staticProps) { if (protoProps'
  +') defineProperties(Constructor.prototype, protoProps); if (staticProps) def'
  +'ineProperties(Constructor, staticProps); return Constructor; }; }();'#13#10
  +#13#10'function _classCallCheck(instance, Constructor) { if (!(instance inst'
  +'anceof Constructor)) { throw new TypeError("Cannot call a class as a functi'
  +'on"); } }'#13#10#13#10'function _possibleConstructorReturn(self, call) { if'
  +' (!self) { throw new ReferenceError("this hasn''t been initialised - super('
  +') hasn''t been called"); } return call && (typeof call === "object" || type'
  +'of call === "function") ? call : self; }'#13#10#13#10'function _inherits(su'
  +'bClass, superClass) { if (typeof superClass !== "function" && superClass !='
  +'= null) { throw new TypeError("Super expression must either be null or a fu'
  +'nction, not " + typeof superClass); } subClass.prototype = Object.create(su'
  +'perClass && superClass.prototype, { constructor: { value: subClass, enumera'
  +'ble: false, writable: true, configurable: true } }); if (superClass) Object'
  +'.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__'
  +'proto__ = superClass; }'#13#10#13#10'var FunctionNodeBase = require(''../fu'
  +'nction-node-base'');'#13#10'var utils = require(''../../core/utils'');'#13
  +#10'var jsMathPrefix = ''Math.'';'#13#10'var localPrefix = ''this.'';'#13#10
  +'var constantsPrefix = ''this.constants.'';'#13#10#13#10'var DECODE32_ENCODE'
  +'32 = /decode32\(\s+encode32\(/g;'#13#10'var ENCODE32_DECODE32 = /encode32\('
  +'\s+decode32\(/g;'#13#10#13#10'module.exports = function (_FunctionNodeBase)'
  +' {'#13#10#9'_inherits(WebGLFunctionNode, _FunctionNodeBase);'#13#10#13#10#9
  +'function WebGLFunctionNode() {'#13#10#9#9'_classCallCheck(this, WebGLFuncti'
  +'onNode);'#13#10#13#10#9#9'return _possibleConstructorReturn(this, (WebGLFun'
  +'ctionNode.__proto__ || Object.getPrototypeOf(WebGLFunctionNode)).apply(this'
  +', arguments));'#13#10#9'}'#13#10#13#10#9'_createClass(WebGLFunctionNode, [{'
  +#13#10#9#9'key: ''generate'','#13#10#9#9'value: function generate() {'#13#10
  +#9#9#9'if (this.debug) {'#13#10#9#9#9#9'console.log(this);'#13#10#9#9#9'}'#13
  +#10#9#9#9'if (this.prototypeOnly) {'#13#10#9#9#9#9'return WebGLFunctionNode.'
  +'astFunctionPrototype(this.getJsAST(), [], this).join('''').trim();'#13#10#9
  +#9#9'} else {'#13#10#9#9#9#9'this.functionStringArray = this.astGeneric(this'
  +'.getJsAST(), [], this);'#13#10#9#9#9'}'#13#10#9#9#9'this.functionString = w'
  +'ebGlRegexOptimize(this.functionStringArray.join('''').trim());'#13#10#9#9#9
  +'return this.functionString;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9
  +#9'key: ''astGeneric'','#13#10#9#9'value: function astGeneric(ast, retArr, f'
  +'uncParam) {'#13#10#9#9#9'if (ast === null) {'#13#10#9#9#9#9'throw this.astE'
  +'rrorOutput(''NULL ast'', ast, funcParam);'#13#10#9#9#9'} else {'#13#10#9#9#9
  +#9'if (Array.isArray(ast)) {'#13#10#9#9#9#9#9'for (var i = 0; i < ast.length'
  +'; i++) {'#13#10#9#9#9#9#9#9'this.astGeneric(ast[i], retArr, funcParam);'#13
  +#10#9#9#9#9#9'}'#13#10#9#9#9#9#9'return retArr;'#13#10#9#9#9#9'}'#13#10#13#10
  +#9#9#9#9'switch (ast.type) {'#13#10#9#9#9#9#9'case ''FunctionDeclaration'':'
  +#13#10#9#9#9#9#9#9'return this.astFunctionDeclaration(ast, retArr, funcParam'
  +');'#13#10#9#9#9#9#9'case ''FunctionExpression'':'#13#10#9#9#9#9#9#9'return '
  +'this.astFunctionExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case '
  +'''ReturnStatement'':'#13#10#9#9#9#9#9#9'return this.astReturnStatement(ast,'
  +' retArr, funcParam);'#13#10#9#9#9#9#9'case ''Literal'':'#13#10#9#9#9#9#9#9
  +'return this.astLiteral(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''Bin'
  +'aryExpression'':'#13#10#9#9#9#9#9#9'return this.astBinaryExpression(ast, re'
  +'tArr, funcParam);'#13#10#9#9#9#9#9'case ''Identifier'':'#13#10#9#9#9#9#9#9
  ,'return this.astIdentifierExpression(ast, retArr, funcParam);'#13#10#9#9#9#9
  +#9'case ''AssignmentExpression'':'#13#10#9#9#9#9#9#9'return this.astAssignme'
  +'ntExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''ExpressionSta'
  +'tement'':'#13#10#9#9#9#9#9#9'return this.astExpressionStatement(ast, retArr'
  +', funcParam);'#13#10#9#9#9#9#9'case ''EmptyStatement'':'#13#10#9#9#9#9#9#9
  +'return this.astEmptyStatement(ast, retArr, funcParam);'#13#10#9#9#9#9#9'cas'
  +'e ''BlockStatement'':'#13#10#9#9#9#9#9#9'return this.astBlockStatement(ast,'
  +' retArr, funcParam);'#13#10#9#9#9#9#9'case ''IfStatement'':'#13#10#9#9#9#9#9
  +#9'return this.astIfStatement(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case'
  +' ''BreakStatement'':'#13#10#9#9#9#9#9#9'return this.astBreakStatement(ast, '
  +'retArr, funcParam);'#13#10#9#9#9#9#9'case ''ContinueStatement'':'#13#10#9#9
  +#9#9#9#9'return this.astContinueStatement(ast, retArr, funcParam);'#13#10#9#9
  +#9#9#9'case ''ForStatement'':'#13#10#9#9#9#9#9#9'return this.astForStatement'
  +'(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''WhileStatement'':'#13#10#9
  +#9#9#9#9#9'return this.astWhileStatement(ast, retArr, funcParam);'#13#10#9#9
  +#9#9#9'case ''VariableDeclaration'':'#13#10#9#9#9#9#9#9'return this.astVaria'
  +'bleDeclaration(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''VariableDec'
  +'larator'':'#13#10#9#9#9#9#9#9'return this.astVariableDeclarator(ast, retArr'
  +', funcParam);'#13#10#9#9#9#9#9'case ''ThisExpression'':'#13#10#9#9#9#9#9#9
  +'return this.astThisExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9'cas'
  +'e ''SequenceExpression'':'#13#10#9#9#9#9#9#9'return this.astSequenceExpress'
  +'ion(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''UnaryExpression'':'#13
  +#10#9#9#9#9#9#9'return this.astUnaryExpression(ast, retArr, funcParam);'#13
  +#10#9#9#9#9#9'case ''UpdateExpression'':'#13#10#9#9#9#9#9#9'return this.astU'
  +'pdateExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9'case ''LogicalExp'
  +'ression'':'#13#10#9#9#9#9#9#9'return this.astLogicalExpression(ast, retArr,'
  +' funcParam);'#13#10#9#9#9#9#9'case ''MemberExpression'':'#13#10#9#9#9#9#9#9
  +'return this.astMemberExpression(ast, retArr, funcParam);'#13#10#9#9#9#9#9'c'
  +'ase ''CallExpression'':'#13#10#9#9#9#9#9#9'return this.astCallExpression(as'
  +'t, retArr, funcParam);'#13#10#9#9#9#9#9'case ''ArrayExpression'':'#13#10#9#9
  +#9#9#9#9'return this.astArrayExpression(ast, retArr, funcParam);'#13#10#9#9#9
  +#9#9'case ''DebuggerStatement'':'#13#10#9#9#9#9#9#9'return this.astDebuggerS'
  +'tatement(ast, retArr, funcParam);'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'thr'
  +'ow this.astErrorOutput(''Unknown ast type : '' + ast.type, ast, funcParam);'
  +#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astF'
  +'unctionDeclaration'','#13#10#9#9'value: function astFunctionDeclaration(ast'
  +', retArr, funcParam) {'#13#10#9#9#9'if (this.addFunction) {'#13#10#9#9#9#9
  +'this.addFunction(null, utils.getAstString(this.jsFunctionString, ast));'#13
  +#10#9#9#9'}'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'},'
  +' {'#13#10#9#9'key: ''astFunctionExpression'','#13#10#13#10#13#10#9#9'value:'
  +' function astFunctionExpression(ast, retArr, funcParam) {'#13#10#13#10#9#9#9
  +'if (funcParam.isRootKernel) {'#13#10#9#9#9#9'retArr.push(''void'');'#13#10#9
  +#9#9#9'funcParam.kernalAst = ast;'#13#10#9#9#9'} else {'#13#10#9#9#9#9'retAr'
  +'r.push(funcParam.returnType);'#13#10#9#9#9'}'#13#10#9#9#9'retArr.push('' '''
  +');'#13#10#9#9#9'retArr.push(funcParam.functionName);'#13#10#9#9#9'retArr.pu'
  +'sh(''('');'#13#10#13#10#9#9#9'if (!funcParam.isRootKernel) {'#13#10#9#9#9#9
  +'for (var i = 0; i < funcParam.paramNames.length; ++i) {'#13#10#9#9#9#9#9'va'
  +'r paramName = funcParam.paramNames[i];'#13#10#13#10#9#9#9#9#9'if (i > 0) {'
  +#13#10#9#9#9#9#9#9'retArr.push('', '');'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9#9
  +'var type = funcParam.getParamType(paramName);'#13#10#9#9#9#9#9'switch (type'
  +') {'#13#10#9#9#9#9#9#9'case ''Texture'':'#13#10#9#9#9#9#9#9'case ''Input'':'
  +#13#10#9#9#9#9#9#9'case ''Array'':'#13#10#9#9#9#9#9#9#9'retArr.push(''sample'
  +'r2D'');'#13#10#9#9#9#9#9#9#9'break;'#13#10#9#9#9#9#9#9'default:'#13#10#9#9#9
  +#9#9#9#9'retArr.push(''float'');'#13#10#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9'r'
  +'etArr.push('' '');'#13#10#9#9#9#9#9'retArr.push(''user_'');'#13#10#9#9#9#9#9
  +'retArr.push(paramName);'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9
  +'retArr.push('') {\n'');'#13#10#13#10#9#9#9'for (var _i = 0; _i < ast.body.b'
  +'ody.length; ++_i) {'#13#10#9#9#9#9'this.astGeneric(ast.body.body[_i], retAr'
  +'r, funcParam);'#13#10#9#9#9#9'retArr.push(''\n'');'#13#10#9#9#9'}'#13#10#13
  +#10#9#9#9'retArr.push(''}\n'');'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13
  +#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astReturnStatement'','#13#10#9#9'va'
  +'lue: function astReturnStatement(ast, retArr, funcParam) {'#13#10#9#9#9'if '
  +'(funcParam.isRootKernel) {'#13#10#9#9#9#9'retArr.push(''kernelResult = '');'
  +#13#10#9#9#9#9'this.astGeneric(ast.argument, retArr, funcParam);'#13#10#9#9#9
  ,#9'retArr.push('';'');'#13#10#9#9#9#9'retArr.push(''return;'');'#13#10#9#9#9
  +'} else if (funcParam.isSubKernel) {'#13#10#9#9#9#9'retArr.push(funcParam.fu'
  +'nctionName + ''Result = '');'#13#10#9#9#9#9'this.astGeneric(ast.argument, r'
  +'etArr, funcParam);'#13#10#9#9#9#9'retArr.push('';'');'#13#10#9#9#9#9'retArr'
  +'.push(''return '' + funcParam.functionName + ''Result;'');'#13#10#9#9#9'} e'
  +'lse {'#13#10#9#9#9#9'retArr.push(''return '');'#13#10#9#9#9#9'this.astGener'
  +'ic(ast.argument, retArr, funcParam);'#13#10#9#9#9#9'retArr.push('';'');'#13
  +#10#9#9#9'}'#13#10#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10
  +#13#10#9'}, {'#13#10#9#9'key: ''astLiteral'','#13#10#9#9'value: function ast'
  +'Literal(ast, retArr, funcParam) {'#13#10#13#10#9#9#9'if (isNaN(ast.value)) '
  +'{'#13#10#9#9#9#9'throw this.astErrorOutput(''Non-numeric literal not suppor'
  +'ted : '' + ast.value, ast, funcParam);'#13#10#9#9#9'}'#13#10#13#10#9#9#9're'
  +'tArr.push(ast.value);'#13#10#13#10#9#9#9'if (Number.isInteger(ast.value)) {'
  +#13#10#9#9#9#9'retArr.push(''.0'');'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return'
  +' retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astBinary'
  +'Expression'','#13#10#9#9'value: function astBinaryExpression(ast, retArr, f'
  +'uncParam) {'#13#10#9#9#9'retArr.push(''('');'#13#10#13#10#9#9#9'if (ast.ope'
  +'rator === ''%'') {'#13#10#9#9#9#9'retArr.push(''mod('');'#13#10#9#9#9#9'thi'
  +'s.astGeneric(ast.left, retArr, funcParam);'#13#10#9#9#9#9'retArr.push('','''
  +');'#13#10#9#9#9#9'this.astGeneric(ast.right, retArr, funcParam);'#13#10#9#9
  +#9#9'retArr.push('')'');'#13#10#9#9#9'} else if (ast.operator === ''==='') {'
  +#13#10#9#9#9#9'this.astGeneric(ast.left, retArr, funcParam);'#13#10#9#9#9#9
  +'retArr.push(''=='');'#13#10#9#9#9#9'this.astGeneric(ast.right, retArr, func'
  +'Param);'#13#10#9#9#9'} else if (ast.operator === ''!=='') {'#13#10#9#9#9#9
  +'this.astGeneric(ast.left, retArr, funcParam);'#13#10#9#9#9#9'retArr.push('''
  +'!='');'#13#10#9#9#9#9'this.astGeneric(ast.right, retArr, funcParam);'#13#10
  +#9#9#9'} else {'#13#10#9#9#9#9'this.astGeneric(ast.left, retArr, funcParam);'
  +#13#10#9#9#9#9'retArr.push(ast.operator);'#13#10#9#9#9#9'this.astGeneric(ast'
  +'.right, retArr, funcParam);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'retArr.push('
  +''')'');'#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''astIdentifierExpression'','#13#10#9#9'value: functio'
  +'n astIdentifierExpression(idtNode, retArr, funcParam) {'#13#10#9#9#9'if (id'
  +'tNode.type !== ''Identifier'') {'#13#10#9#9#9#9'throw this.astErrorOutput('
  +'''IdentifierExpression - not an Identifier'', idtNode, funcParam);'#13#10#9
  +#9#9'}'#13#10#13#10#9#9#9'switch (idtNode.name) {'#13#10#9#9#9#9'case ''gpu_'
  +'threadX'':'#13#10#9#9#9#9#9'retArr.push(''threadId.x'');'#13#10#9#9#9#9#9'b'
  +'reak;'#13#10#9#9#9#9'case ''gpu_threadY'':'#13#10#9#9#9#9#9'retArr.push(''t'
  +'hreadId.y'');'#13#10#9#9#9#9#9'break;'#13#10#9#9#9#9'case ''gpu_threadZ'':'
  +#13#10#9#9#9#9#9'retArr.push(''threadId.z'');'#13#10#9#9#9#9#9'break;'#13#10
  +#9#9#9#9'case ''gpu_outputX'':'#13#10#9#9#9#9#9'retArr.push(''uOutputDim.x'''
  +');'#13#10#9#9#9#9#9'break;'#13#10#9#9#9#9'case ''gpu_outputY'':'#13#10#9#9#9
  +#9#9'retArr.push(''uOutputDim.y'');'#13#10#9#9#9#9#9'break;'#13#10#9#9#9#9'c'
  +'ase ''gpu_outputZ'':'#13#10#9#9#9#9#9'retArr.push(''uOutputDim.z'');'#13#10
  +#9#9#9#9#9'break;'#13#10#9#9#9#9'default:'#13#10#9#9#9#9#9'if (this.constant'
  +'s && this.constants.hasOwnProperty(idtNode.name)) {'#13#10#9#9#9#9#9#9'retA'
  +'rr.push(''constants_'' + idtNode.name);'#13#10#9#9#9#9#9'} else {'#13#10#9#9
  +#9#9#9#9'var userParamName = funcParam.getUserParamName(idtNode.name);'#13#10
  +#9#9#9#9#9#9'if (userParamName !== null) {'#13#10#9#9#9#9#9#9#9'retArr.push('
  +'''user_'' + userParamName);'#13#10#9#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9#9
  +'retArr.push(''user_'' + idtNode.name);'#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9
  +'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10
  +#13#10#9'}, {'#13#10#9#9'key: ''astForStatement'','#13#10#9#9'value: functio'
  +'n astForStatement(forNode, retArr, funcParam) {'#13#10#9#9#9'if (forNode.ty'
  +'pe !== ''ForStatement'') {'#13#10#9#9#9#9'throw this.astErrorOutput(''Inval'
  +'id for statment'', forNode, funcParam);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'i'
  +'f (forNode.test && forNode.test.type === ''BinaryExpression'') {'#13#10#9#9
  +#9#9'if (forNode.test.right.type === ''Identifier'' && forNode.test.operator'
  +' === ''<'' && this.isIdentifierConstant(forNode.test.right.name) === false)'
  +' {'#13#10#13#10#9#9#9#9#9'if (!this.loopMaxIterations) {'#13#10#9#9#9#9#9#9
  +'console.warn(''Warning: loopMaxIterations is not set! Using default of 1000'
  +' which may result in unintended behavior.'');'#13#10#9#9#9#9#9#9'console.wa'
  +'rn(''Set loopMaxIterations or use a for loop of fixed length to silence thi'
  +'s message.'');'#13#10#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9'retArr.push(''for '
  +'('');'#13#10#9#9#9#9#9'this.astGeneric(forNode.init, retArr, funcParam);'#13
  ,#10#9#9#9#9#9'this.astGeneric(forNode.test.left, retArr, funcParam);'#13#10#9
  +#9#9#9#9'retArr.push(forNode.test.operator);'#13#10#9#9#9#9#9'retArr.push('''
  +'LOOP_MAX'');'#13#10#9#9#9#9#9'retArr.push('';'');'#13#10#9#9#9#9#9'this.ast'
  +'Generic(forNode.update, retArr, funcParam);'#13#10#9#9#9#9#9'retArr.push('''
  +')'');'#13#10#13#10#9#9#9#9#9'retArr.push(''{\n'');'#13#10#9#9#9#9#9'retArr.'
  +'push(''if ('');'#13#10#9#9#9#9#9'this.astGeneric(forNode.test.left, retArr,'
  +' funcParam);'#13#10#9#9#9#9#9'retArr.push(forNode.test.operator);'#13#10#9#9
  +#9#9#9'this.astGeneric(forNode.test.right, retArr, funcParam);'#13#10#9#9#9#9
  +#9'retArr.push('') {\n'');'#13#10#9#9#9#9#9'if (forNode.body.type === ''Bloc'
  +'kStatement'') {'#13#10#9#9#9#9#9#9'for (var i = 0; i < forNode.body.body.le'
  +'ngth; i++) {'#13#10#9#9#9#9#9#9#9'this.astGeneric(forNode.body.body[i], ret'
  +'Arr, funcParam);'#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9'} else {'#13#10#9#9#9
  +#9#9#9'this.astGeneric(forNode.body, retArr, funcParam);'#13#10#9#9#9#9#9'}'
  +#13#10#9#9#9#9#9'retArr.push(''} else {\n'');'#13#10#9#9#9#9#9'retArr.push('
  +'''break;\n'');'#13#10#9#9#9#9#9'retArr.push(''}\n'');'#13#10#9#9#9#9#9'retA'
  +'rr.push(''}\n'');'#13#10#13#10#9#9#9#9#9'return retArr;'#13#10#9#9#9#9'} el'
  +'se {'#13#10#9#9#9#9#9'var declarations = JSON.parse(JSON.stringify(forNode.'
  +'init.declarations));'#13#10#9#9#9#9#9'var updateArgument = forNode.update.a'
  +'rgument;'#13#10#9#9#9#9#9'if (!Array.isArray(declarations) || declarations.'
  +'length < 1) {'#13#10#9#9#9#9#9#9'console.log(this.jsFunctionString);'#13#10
  +#9#9#9#9#9#9'throw new Error(''Error: Incompatible for loop declaration'');'
  +#13#10#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9'if (declarations.length > 1) {'#13
  +#10#9#9#9#9#9#9'var initArgument = null;'#13#10#9#9#9#9#9#9'for (var _i2 = 0'
  +'; _i2 < declarations.length; _i2++) {'#13#10#9#9#9#9#9#9#9'var declaration '
  +'= declarations[_i2];'#13#10#9#9#9#9#9#9#9'if (declaration.id.name === updat'
  +'eArgument.name) {'#13#10#9#9#9#9#9#9#9#9'initArgument = declaration;'#13#10
  +#9#9#9#9#9#9#9#9'declarations.splice(_i2, 1);'#13#10#9#9#9#9#9#9#9'} else {'
  +#13#10#9#9#9#9#9#9#9#9'retArr.push(''float '');'#13#10#9#9#9#9#9#9#9#9'this.'
  +'astGeneric(declaration, retArr, funcParam);'#13#10#9#9#9#9#9#9#9#9'retArr.p'
  +'ush('';'');'#13#10#9#9#9#9#9#9#9'}'#13#10#9#9#9#9#9#9'}'#13#10#13#10#9#9#9#9
  +#9#9'retArr.push(''for (float '');'#13#10#9#9#9#9#9#9'this.astGeneric(initAr'
  +'gument, retArr, funcParam);'#13#10#9#9#9#9#9#9'retArr.push('';'');'#13#10#9
  +#9#9#9#9'} else {'#13#10#9#9#9#9#9#9'retArr.push(''for ('');'#13#10#9#9#9#9#9
  +#9'this.astGeneric(forNode.init, retArr, funcParam);'#13#10#9#9#9#9#9'}'#13
  +#10#13#10#9#9#9#9#9'this.astGeneric(forNode.test, retArr, funcParam);'#13#10
  +#9#9#9#9#9'retArr.push('';'');'#13#10#9#9#9#9#9'this.astGeneric(forNode.upda'
  +'te, retArr, funcParam);'#13#10#9#9#9#9#9'retArr.push('')'');'#13#10#9#9#9#9
  +#9'this.astGeneric(forNode.body, retArr, funcParam);'#13#10#9#9#9#9#9'return'
  +' retArr;'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'throw this.astE'
  +'rrorOutput(''Invalid for statement'', forNode, funcParam);'#13#10#9#9'}'#13
  +#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astWhileStatement'','#13#10#9#9'val'
  +'ue: function astWhileStatement(whileNode, retArr, funcParam) {'#13#10#9#9#9
  +'if (whileNode.type !== ''WhileStatement'') {'#13#10#9#9#9#9'throw this.astE'
  +'rrorOutput(''Invalid while statment'', whileNode, funcParam);'#13#10#9#9#9
  +'}'#13#10#13#10#9#9#9'retArr.push(''for (float i = 0.0; i < LOOP_MAX; i++) {'
  +''');'#13#10#9#9#9'retArr.push(''if ('');'#13#10#9#9#9'this.astGeneric(while'
  +'Node.test, retArr, funcParam);'#13#10#9#9#9'retArr.push('') {\n'');'#13#10#9
  +#9#9'this.astGeneric(whileNode.body, retArr, funcParam);'#13#10#9#9#9'retArr'
  +'.push(''} else {\n'');'#13#10#9#9#9'retArr.push(''break;\n'');'#13#10#9#9#9
  +'retArr.push(''}\n'');'#13#10#9#9#9'retArr.push(''}\n'');'#13#10#13#10#9#9#9
  +'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''ast'
  +'AssignmentExpression'','#13#10#9#9'value: function astAssignmentExpression('
  +'assNode, retArr, funcParam) {'#13#10#9#9#9'if (assNode.operator === ''%='')'
  +' {'#13#10#9#9#9#9'this.astGeneric(assNode.left, retArr, funcParam);'#13#10#9
  +#9#9#9'retArr.push(''='');'#13#10#9#9#9#9'retArr.push(''mod('');'#13#10#9#9#9
  +#9'this.astGeneric(assNode.left, retArr, funcParam);'#13#10#9#9#9#9'retArr.p'
  +'ush('','');'#13#10#9#9#9#9'this.astGeneric(assNode.right, retArr, funcParam'
  +');'#13#10#9#9#9#9'retArr.push('')'');'#13#10#9#9#9'} else {'#13#10#9#9#9#9
  +'this.astGeneric(assNode.left, retArr, funcParam);'#13#10#9#9#9#9'retArr.pus'
  +'h(assNode.operator);'#13#10#9#9#9#9'this.astGeneric(assNode.right, retArr, '
  +'funcParam);'#13#10#9#9#9#9'return retArr;'#13#10#9#9#9'}'#13#10#9#9'}'#13#10
  +#13#10#13#10#9'}, {'#13#10#9#9'key: ''astEmptyStatement'','#13#10#9#9'value:'
  +' function astEmptyStatement(eNode, retArr, funcParam) {'#13#10#9#9#9'return'
  +' retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astBlockS'
  ,'tatement'','#13#10#9#9'value: function astBlockStatement(bNode, retArr, fun'
  +'cParam) {'#13#10#9#9#9'retArr.push(''{\n'');'#13#10#9#9#9'for (var i = 0; i'
  +' < bNode.body.length; i++) {'#13#10#9#9#9#9'this.astGeneric(bNode.body[i], '
  +'retArr, funcParam);'#13#10#9#9#9'}'#13#10#9#9#9'retArr.push(''}\n'');'#13#10
  +#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key:'
  +' ''astExpressionStatement'','#13#10#9#9'value: function astExpressionStatem'
  +'ent(esNode, retArr, funcParam) {'#13#10#9#9#9'this.astGeneric(esNode.expres'
  +'sion, retArr, funcParam);'#13#10#9#9#9'retArr.push('';\n'');'#13#10#9#9#9'r'
  +'eturn retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astV'
  +'ariableDeclaration'','#13#10#9#9'value: function astVariableDeclaration(var'
  +'decNode, retArr, funcParam) {'#13#10#9#9#9'retArr.push(''float '');'#13#10#9
  +#9#9'for (var i = 0; i < vardecNode.declarations.length; i++) {'#13#10#9#9#9
  +#9'if (i > 0) {'#13#10#9#9#9#9#9'retArr.push('','');'#13#10#9#9#9#9'}'#13#10
  +#9#9#9#9'this.astGeneric(vardecNode.declarations[i], retArr, funcParam);'#13
  +#10#9#9#9'}'#13#10#9#9#9'retArr.push('';'');'#13#10#9#9#9'return retArr;'#13
  +#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astVariableDeclarator'
  +''','#13#10#9#9'value: function astVariableDeclarator(ivardecNode, retArr, f'
  +'uncParam) {'#13#10#9#9#9'this.astGeneric(ivardecNode.id, retArr, funcParam)'
  +';'#13#10#9#9#9'if (ivardecNode.init !== null) {'#13#10#9#9#9#9'retArr.push('
  +'''='');'#13#10#9#9#9#9'this.astGeneric(ivardecNode.init, retArr, funcParam)'
  +';'#13#10#9#9#9'}'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10
  +#9'}, {'#13#10#9#9'key: ''astIfStatement'','#13#10#9#9'value: function astIf'
  +'Statement(ifNode, retArr, funcParam) {'#13#10#9#9#9'retArr.push(''if ('');'
  +#13#10#9#9#9'this.astGeneric(ifNode.test, retArr, funcParam);'#13#10#9#9#9'r'
  +'etArr.push('')'');'#13#10#9#9#9'if (ifNode.consequent.type === ''BlockState'
  +'ment'') {'#13#10#9#9#9#9'this.astGeneric(ifNode.consequent, retArr, funcPar'
  +'am);'#13#10#9#9#9'} else {'#13#10#9#9#9#9'retArr.push('' {\n'');'#13#10#9#9
  +#9#9'this.astGeneric(ifNode.consequent, retArr, funcParam);'#13#10#9#9#9#9'r'
  +'etArr.push(''\n}\n'');'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (ifNode.alterna'
  +'te) {'#13#10#9#9#9#9'retArr.push(''else '');'#13#10#9#9#9#9'if (ifNode.alte'
  +'rnate.type === ''BlockStatement'') {'#13#10#9#9#9#9#9'this.astGeneric(ifNod'
  +'e.alternate, retArr, funcParam);'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'r'
  +'etArr.push('' {\n'');'#13#10#9#9#9#9#9'this.astGeneric(ifNode.alternate, re'
  +'tArr, funcParam);'#13#10#9#9#9#9#9'retArr.push(''\n}\n'');'#13#10#9#9#9#9'}'
  +#13#10#9#9#9'}'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''astBreakStatement'','#13#10#9#9'value: function astB'
  +'reakStatement(brNode, retArr, funcParam) {'#13#10#9#9#9'retArr.push(''break'
  +';\n'');'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  +#13#10#9#9'key: ''astContinueStatement'','#13#10#9#9'value: function astCont'
  +'inueStatement(crNode, retArr, funcParam) {'#13#10#9#9#9'retArr.push(''conti'
  +'nue;\n'');'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'},'
  +' {'#13#10#9#9'key: ''astLogicalExpression'','#13#10#9#9'value: function ast'
  +'LogicalExpression(logNode, retArr, funcParam) {'#13#10#9#9#9'retArr.push('''
  +'('');'#13#10#9#9#9'this.astGeneric(logNode.left, retArr, funcParam);'#13#10
  +#9#9#9'retArr.push(logNode.operator);'#13#10#9#9#9'this.astGeneric(logNode.r'
  +'ight, retArr, funcParam);'#13#10#9#9#9'retArr.push('')'');'#13#10#9#9#9'ret'
  +'urn retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astUpd'
  +'ateExpression'','#13#10#9#9'value: function astUpdateExpression(uNode, retA'
  +'rr, funcParam) {'#13#10#9#9#9'if (uNode.prefix) {'#13#10#9#9#9#9'retArr.pus'
  +'h(uNode.operator);'#13#10#9#9#9#9'this.astGeneric(uNode.argument, retArr, f'
  +'uncParam);'#13#10#9#9#9'} else {'#13#10#9#9#9#9'this.astGeneric(uNode.argum'
  +'ent, retArr, funcParam);'#13#10#9#9#9#9'retArr.push(uNode.operator);'#13#10
  +#9#9#9'}'#13#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''astUnaryExpression'','#13#10#9#9'value: function ast'
  +'UnaryExpression(uNode, retArr, funcParam) {'#13#10#9#9#9'if (uNode.prefix) '
  +'{'#13#10#9#9#9#9'retArr.push(uNode.operator);'#13#10#9#9#9#9'this.astGeneri'
  +'c(uNode.argument, retArr, funcParam);'#13#10#9#9#9'} else {'#13#10#9#9#9#9
  +'this.astGeneric(uNode.argument, retArr, funcParam);'#13#10#9#9#9#9'retArr.p'
  +'ush(uNode.operator);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return retArr;'#13#10
  +#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''astThisExpression'','#13
  +#10#9#9'value: function astThisExpression(tNode, retArr, funcParam) {'#13#10
  +#9#9#9'retArr.push(''this'');'#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10
  +#13#10#13#10#9'}, {'#13#10#9#9'key: ''astMemberExpression'','#13#10#9#9'valu'
  +'e: function astMemberExpression(mNode, retArr, funcParam) {'#13#10#9#9#9'if'
  ,' (mNode.computed) {'#13#10#9#9#9#9'if (mNode.object.type === ''Identifier'''
  +') {'#13#10#9#9#9#9#9'var reqName = mNode.object.name;'#13#10#9#9#9#9#9'var '
  +'funcName = funcParam.functionName || ''kernel'';'#13#10#9#9#9#9#9'var assum'
  +'eNotTexture = false;'#13#10#13#10#9#9#9#9#9'if (funcParam.paramNames) {'#13
  +#10#9#9#9#9#9#9'var idx = funcParam.paramNames.indexOf(reqName);'#13#10#9#9#9
  +#9#9#9'if (idx >= 0 && funcParam.paramTypes[idx] === ''float'') {'#13#10#9#9
  +#9#9#9#9#9'assumeNotTexture = true;'#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9'}'
  +#13#10#13#10#9#9#9#9#9'if (assumeNotTexture) {'#13#10#9#9#9#9#9#9'this.astGe'
  +'neric(mNode.object, retArr, funcParam);'#13#10#9#9#9#9#9#9'retArr.push(''[i'
  +'nt('');'#13#10#9#9#9#9#9#9'this.astGeneric(mNode.property, retArr, funcPara'
  +'m);'#13#10#9#9#9#9#9#9'retArr.push('')]'');'#13#10#9#9#9#9#9'} else {'#13#10
  +#9#9#9#9#9#9'retArr.push(''get('');'#13#10#9#9#9#9#9#9'this.astGeneric(mNode'
  +'.object, retArr, funcParam);'#13#10#9#9#9#9#9#9'retArr.push('', vec2('');'
  +#13#10#9#9#9#9#9#9'this.astGeneric(mNode.object, retArr, funcParam);'#13#10#9
  +#9#9#9#9#9'retArr.push(''Size[0],'');'#13#10#9#9#9#9#9#9'this.astGeneric(mNo'
  +'de.object, retArr, funcParam);'#13#10#9#9#9#9#9#9'retArr.push(''Size[1]), v'
  +'ec3('');'#13#10#9#9#9#9#9#9'this.astGeneric(mNode.object, retArr, funcParam'
  +');'#13#10#9#9#9#9#9#9'retArr.push(''Dim[0],'');'#13#10#9#9#9#9#9#9'this.ast'
  +'Generic(mNode.object, retArr, funcParam);'#13#10#9#9#9#9#9#9'retArr.push('''
  +'Dim[1],'');'#13#10#9#9#9#9#9#9'this.astGeneric(mNode.object, retArr, funcPa'
  +'ram);'#13#10#9#9#9#9#9#9'retArr.push(''Dim[2]'');'#13#10#9#9#9#9#9#9'retArr'
  +'.push(''), '');'#13#10#9#9#9#9#9#9'this.astGeneric(mNode.property, retArr, '
  +'funcParam);'#13#10#9#9#9#9#9#9'retArr.push('')'');'#13#10#9#9#9#9#9'}'#13#10
  +#9#9#9#9'} else {'#13#10#9#9#9#9#9'this.astGeneric(mNode.object, retArr, fun'
  +'cParam);'#13#10#9#9#9#9#9'var last = retArr.pop();'#13#10#9#9#9#9#9'retArr.'
  +'push('','');'#13#10#9#9#9#9#9'this.astGeneric(mNode.property, retArr, funcP'
  +'aram);'#13#10#9#9#9#9#9'retArr.push(last);'#13#10#9#9#9#9'}'#13#10#9#9#9'} '
  +'else {'#13#10#13#10#9#9#9#9'var unrolled = this.astMemberExpressionUnroll(m'
  +'Node);'#13#10#9#9#9#9'var unrolled_lc = unrolled.toLowerCase();'#13#10#13#10
  +#9#9#9#9'if (unrolled.indexOf(constantsPrefix) === 0) {'#13#10#9#9#9#9#9'unr'
  +'olled = ''constants_'' + unrolled.slice(constantsPrefix.length);'#13#10#9#9
  +#9#9'}'#13#10#13#10#9#9#9#9'switch (unrolled_lc) {'#13#10#9#9#9#9#9'case ''t'
  +'his.thread.x'':'#13#10#9#9#9#9#9#9'retArr.push(''threadId.x'');'#13#10#9#9#9
  +#9#9#9'break;'#13#10#9#9#9#9#9'case ''this.thread.y'':'#13#10#9#9#9#9#9#9're'
  +'tArr.push(''threadId.y'');'#13#10#9#9#9#9#9#9'break;'#13#10#9#9#9#9#9'case '
  +'''this.thread.z'':'#13#10#9#9#9#9#9#9'retArr.push(''threadId.z'');'#13#10#9
  +#9#9#9#9#9'break;'#13#10#9#9#9#9#9'case ''this.output.x'':'#13#10#9#9#9#9#9#9
  +'retArr.push(this.output[0] + ''.0'');'#13#10#9#9#9#9#9#9'break;'#13#10#9#9#9
  +#9#9'case ''this.output.y'':'#13#10#9#9#9#9#9#9'retArr.push(this.output[1] +'
  +' ''.0'');'#13#10#9#9#9#9#9#9'break;'#13#10#9#9#9#9#9'case ''this.output.z'''
  +':'#13#10#9#9#9#9#9#9'retArr.push(this.output[2] + ''.0'');'#13#10#9#9#9#9#9
  +#9'break;'#13#10#9#9#9#9#9'default:'#13#10#9#9#9#9#9#9'retArr.push(unrolled)'
  +';'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#9#9#9'return retArr;'#13#10#9#9'}'
  +#13#10#9'}, {'#13#10#9#9'key: ''astSequenceExpression'','#13#10#9#9'value: f'
  +'unction astSequenceExpression(sNode, retArr, funcParam) {'#13#10#9#9#9'for '
  +'(var i = 0; i < sNode.expressions.length; i++) {'#13#10#9#9#9#9'if (i > 0) '
  +'{'#13#10#9#9#9#9#9'retArr.push('','');'#13#10#9#9#9#9'}'#13#10#9#9#9#9'this'
  +'.astGeneric(sNode.expressions, retArr, funcParam);'#13#10#9#9#9'}'#13#10#9#9
  +#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''a'
  +'stCallExpression'','#13#10#9#9'value: function astCallExpression(ast, retAr'
  +'r, funcParam) {'#13#10#9#9#9'if (ast.callee) {'#13#10#9#9#9#9'var funcName '
  +'= this.astMemberExpressionUnroll(ast.callee);'#13#10#13#10#9#9#9#9'if (func'
  +'Name.indexOf(jsMathPrefix) === 0) {'#13#10#9#9#9#9#9'funcName = funcName.sl'
  +'ice(jsMathPrefix.length);'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'if (funcNam'
  +'e.indexOf(localPrefix) === 0) {'#13#10#9#9#9#9#9'funcName = funcName.slice('
  +'localPrefix.length);'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'if (funcParam.ca'
  +'lledFunctions.indexOf(funcName) < 0) {'#13#10#9#9#9#9#9'funcParam.calledFun'
  +'ctions.push(funcName);'#13#10#9#9#9#9'}'#13#10#9#9#9#9'if (!funcParam.hasOw'
  +'nProperty(''funcName'')) {'#13#10#9#9#9#9#9'funcParam.calledFunctionsArgume'
  +'nts[funcName] = [];'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'var functionArgum'
  +'ents = [];'#13#10#9#9#9#9'funcParam.calledFunctionsArguments[funcName].push'
  +'(functionArguments);'#13#10#13#10#9#9#9#9'retArr.push(funcName);'#13#10#13
  +#10#9#9#9#9'retArr.push(''('');'#13#10#13#10#9#9#9#9'for (var i = 0; i < ast'
  +'.arguments.length; ++i) {'#13#10#9#9#9#9#9'var argument = ast.arguments[i];'
  ,#13#10#9#9#9#9#9'if (i > 0) {'#13#10#9#9#9#9#9#9'retArr.push('', '');'#13#10
  +#9#9#9#9#9'}'#13#10#9#9#9#9#9'this.astGeneric(argument, retArr, funcParam);'
  +#13#10#9#9#9#9#9'if (argument.type === ''Identifier'') {'#13#10#9#9#9#9#9#9
  +'var paramIndex = funcParam.paramNames.indexOf(argument.name);'#13#10#9#9#9#9
  +#9#9'if (paramIndex === -1) {'#13#10#9#9#9#9#9#9#9'functionArguments.push(nu'
  +'ll);'#13#10#9#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9#9'functionArguments.pus'
  +'h({'#13#10#9#9#9#9#9#9#9#9'name: argument.name,'#13#10#9#9#9#9#9#9#9#9'type'
  +': funcParam.paramTypes[paramIndex]'#13#10#9#9#9#9#9#9#9'});'#13#10#9#9#9#9#9
  +#9'}'#13#10#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9'functionArguments.push(nul'
  +'l);'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'retArr.push('''
  +')'');'#13#10#13#10#9#9#9#9'return retArr;'#13#10#9#9#9'}'#13#10#13#10#9#9#9
  +'throw this.astErrorOutput(''Unknown CallExpression'', ast, funcParam);'#13
  +#10#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10
  +#9#9'key: ''astArrayExpression'','#13#10#9#9'value: function astArrayExpress'
  +'ion(arrNode, retArr, funcParam) {'#13#10#9#9#9'var arrLen = arrNode.element'
  +'s.length;'#13#10#13#10#9#9#9'retArr.push(''float['' + arrLen + '']('');'#13
  +#10#9#9#9'for (var i = 0; i < arrLen; ++i) {'#13#10#9#9#9#9'if (i > 0) {'#13
  +#10#9#9#9#9#9'retArr.push('', '');'#13#10#9#9#9#9'}'#13#10#9#9#9#9'var subNo'
  +'de = arrNode.elements[i];'#13#10#9#9#9#9'this.astGeneric(subNode, retArr, f'
  +'uncParam);'#13#10#9#9#9'}'#13#10#9#9#9'retArr.push('')'');'#13#10#13#10#9#9
  +#9'return retArr;'#13#10#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'ke'
  +'y: ''getFunctionPrototypeString'','#13#10#9#9'value: function getFunctionPr'
  +'ototypeString() {'#13#10#9#9#9'if (this.webGlFunctionPrototypeString) {'#13
  +#10#9#9#9#9'return this.webGlFunctionPrototypeString;'#13#10#9#9#9'}'#13#10#9
  +#9#9'return this.webGlFunctionPrototypeString = this.generate();'#13#10#9#9
  +'}'#13#10#9'}, {'#13#10#9#9'key: ''build'','#13#10#9#9'value: function build'
  +'() {'#13#10#9#9#9'return this.getFunctionPrototypeString().length > 0;'#13
  +#10#9#9'}'#13#10#9'}], [{'#13#10#9#9'key: ''astFunctionPrototype'','#13#10#9
  +#9'value: function astFunctionPrototype(ast, retArr, funcParam) {'#13#10#9#9
  +#9'if (funcParam.isRootKernel || funcParam.isSubKernel) {'#13#10#9#9#9#9'ret'
  +'urn retArr;'#13#10#9#9#9'}'#13#10#13#10#9#9#9'retArr.push(funcParam.returnT'
  +'ype);'#13#10#9#9#9'retArr.push('' '');'#13#10#9#9#9'retArr.push(funcParam.f'
  +'unctionName);'#13#10#9#9#9'retArr.push(''('');'#13#10#13#10#9#9#9'for (var '
  +'i = 0; i < funcParam.paramNames.length; ++i) {'#13#10#9#9#9#9'if (i > 0) {'
  +#13#10#9#9#9#9#9'retArr.push('', '');'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9
  +'retArr.push(funcParam.paramTypes[i]);'#13#10#9#9#9#9'retArr.push('' '');'#13
  +#10#9#9#9#9'retArr.push(''user_'');'#13#10#9#9#9#9'retArr.push(funcParam.par'
  +'amNames[i]);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'retArr.push('');\n'');'#13#10
  +#13#10#9#9#9'return retArr;'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return'
  +' WebGLFunctionNode;'#13#10'}(FunctionNodeBase);'#13#10#13#10'function isIde'
  +'ntifierKernelParam(paramName, ast, funcParam) {'#13#10#9'return funcParam.p'
  +'aramNames.indexOf(paramName) !== -1;'#13#10'}'#13#10#13#10'function ensureI'
  +'ndentifierType(paramName, expectedType, ast, funcParam) {'#13#10#9'var star'
  +'t = ast.loc.start;'#13#10#13#10#9'if (!isIdentifierKernelParam(paramName, f'
  +'uncParam) && expectedType !== ''float'') {'#13#10#9#9'throw new Error(''Err'
  +'or unexpected identifier '' + paramName + '' on line '' + start.line);'#13
  +#10#9'} else {'#13#10#9#9'var actualType = funcParam.paramTypes[funcParam.pa'
  +'ramNames.indexOf(paramName)];'#13#10#9#9'if (actualType !== expectedType) {'
  +#13#10#9#9#9'throw new Error(''Error unexpected identifier '' + paramName + '
  +''' on line '' + start.line);'#13#10#9#9'}'#13#10#9'}'#13#10'}'#13#10#13#10
  +'function webGlRegexOptimize(inStr) {'#13#10#9'return inStr.replace(DECODE32'
  +'_ENCODE32, ''(('').replace(ENCODE32_DECODE32, ''(('');'#13#10'}'#13#10'},{"'
  +'../../core/utils":25,"../function-node-base":7}],13:[function(require,modul'
  +'e,exports){'#13#10'''use strict'';'#13#10#13#10'var utils = require(''../..'
  +'/core/utils'');'#13#10'var kernelRunShortcut = require(''../kernel-run-shor'
  +'tcut'');'#13#10#13#10'module.exports = function (gpuKernel, name) {'#13#10
  +'  return ''() => {\n    '' + kernelRunShortcut.toString() + '';\n    const '
  +'utils = {\n      allPropertiesOf: function '' + utils.allPropertiesOf.toStr'
  +'ing() + '',\n      clone: function '' + utils.clone.toString() + '',\n     '
  +' splitArray: function '' + utils.splitArray.toString() + '',\n      getArgu'
  +'mentType: function '' + utils.getArgumentType.toString() + '',\n      getDi'
  +'mensions: function '' + utils.getDimensions.toString() + '',\n      dimToTe'
  +'xSize: function '' + utils.dimToTexSize.toString() + '',\n      copyFlatten'
  +': function '' + utils.copyFlatten.toString() + '',\n      flatten: function'
  ,' '' + utils.flatten.toString() + '',\n      systemEndianness: \'''' + utils'
  +'.systemEndianness() + ''\'',\n      initWebGl: function '' + utils.initWebG'
  +'l.toString() + '',\n      isArray: function '' + utils.isArray.toString() +'
  +' ''\n    };\n    class '' + (name || ''Kernel'') + '' {\n      constructor('
  +') {\n        this.argumentsLength = 0;\n        this._canvas = null;\n     '
  +'   this._webGl = null;\n        this.built = false;\n        this.program ='
  +' null;\n        this.paramNames = '' + JSON.stringify(gpuKernel.paramNames)'
  +' + '';\n        this.paramTypes = '' + JSON.stringify(gpuKernel.paramTypes)'
  +' + '';\n        this.texSize = '' + JSON.stringify(gpuKernel.texSize) + '';'
  +'\n        this.output = '' + JSON.stringify(gpuKernel.output) + '';\n      '
  +'  this.compiledFragShaderString = `'' + gpuKernel.compiledFragShaderString '
  +'+ ''`;\n\t\t    this.compiledVertShaderString = `'' + gpuKernel.compiledVer'
  +'tShaderString + ''`;\n\t\t    this.programUniformLocationCache = {};\n\t\t '
  +'   this.textureCache = {};\n\t\t    this.subKernelOutputTextures = null;\n '
  +'     }\n      '' + gpuKernel._getFragShaderString.toString() + ''\n      '''
  +' + gpuKernel._getVertShaderString.toString() + ''\n      validateOptions() '
  +'{}\n      setupParams() {}\n      setCanvas(canvas) { this._canvas = canvas'
  +'; return this; }\n      setWebGl(webGl) { this._webGl = webGl; return this;'
  +' }\n      '' + gpuKernel.getUniformLocation.toString() + ''\n      '' + gpu'
  +'Kernel.setupParams.toString() + ''\n      '' + gpuKernel.build.toString() +'
  +' ''\n\t\t  '' + gpuKernel.run.toString() + ''\n\t\t  '' + gpuKernel._addArg'
  +'ument.toString() + ''\n\t\t  '' + gpuKernel.getArgumentTexture.toString() +'
  +' ''\n\t\t  '' + gpuKernel.getTextureCache.toString() + ''\n\t\t  '' + gpuKe'
  +'rnel.getOutputTexture.toString() + ''\n\t\t  '' + gpuKernel.renderOutput.to'
  +'String() + ''\n    };\n    return kernelRunShortcut(new Kernel());\n  };'';'
  +#13#10'};'#13#10'},{"../../core/utils":25,"../kernel-run-shortcut":9}],14:[f'
  +'unction(require,module,exports){'#13#10'''use strict'';'#13#10#13#10'var _c'
  +'reateClass = function () { function defineProperties(target, props) { for ('
  +'var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.e'
  +'numerable = descriptor.enumerable || false; descriptor.configurable = true;'
  +' if ("value" in descriptor) descriptor.writable = true; Object.defineProper'
  +'ty(target, descriptor.key, descriptor); } } return function (Constructor, p'
  +'rotoProps, staticProps) { if (protoProps) defineProperties(Constructor.prot'
  +'otype, protoProps); if (staticProps) defineProperties(Constructor, staticPr'
  +'ops); return Constructor; }; }();'#13#10#13#10'function _classCallCheck(ins'
  +'tance, Constructor) { if (!(instance instanceof Constructor)) { throw new T'
  +'ypeError("Cannot call a class as a function"); } }'#13#10#13#10'function _p'
  +'ossibleConstructorReturn(self, call) { if (!self) { throw new ReferenceErro'
  +'r("this hasn''t been initialised - super() hasn''t been called"); } return '
  +'call && (typeof call === "object" || typeof call === "function") ? call : s'
  +'elf; }'#13#10#13#10'function _inherits(subClass, superClass) { if (typeof s'
  +'uperClass !== "function" && superClass !== null) { throw new TypeError("Sup'
  +'er expression must either be null or a function, not " + typeof superClass)'
  +'; } subClass.prototype = Object.create(superClass && superClass.prototype, '
  +'{ constructor: { value: subClass, enumerable: false, writable: true, config'
  +'urable: true } }); if (superClass) Object.setPrototypeOf ? Object.setProtot'
  +'ypeOf(subClass, superClass) : subClass.__proto__ = superClass; }'#13#10#13
  +#10'var KernelBase = require(''../kernel-base'');'#13#10'var utils = require'
  +'(''../../core/utils'');'#13#10'var Texture = require(''../../core/texture'''
  +');'#13#10'var fragShaderString = require(''./shader-frag'');'#13#10'var ver'
  +'tShaderString = require(''./shader-vert'');'#13#10'var kernelString = requi'
  +'re(''./kernel-string'');'#13#10'var canvases = [];'#13#10'var maxTexSizes ='
  +' {};'#13#10#13#10'module.exports = function (_KernelBase) {'#13#10#9'_inher'
  +'its(WebGLKernel, _KernelBase);'#13#10#13#10#9'function WebGLKernel(fnString'
  +', settings) {'#13#10#9#9'_classCallCheck(this, WebGLKernel);'#13#10#13#10#9
  +#9'var _this = _possibleConstructorReturn(this, (WebGLKernel.__proto__ || Ob'
  +'ject.getPrototypeOf(WebGLKernel)).call(this, fnString, settings));'#13#10#13
  +#10#9#9'_this.textureCache = {};'#13#10#9#9'_this.threadDim = {};'#13#10#9#9
  +'_this.programUniformLocationCache = {};'#13#10#9#9'_this.framebuffer = null'
  +';'#13#10#13#10#9#9'_this.buffer = null;'#13#10#9#9'_this.program = null;'#13
  +#10#9#9'_this.outputToTexture = settings.outputToTexture;'#13#10#9#9'_this.e'
  +'ndianness = utils.systemEndianness();'#13#10#9#9'_this.subKernelOutputTextu'
  +'res = null;'#13#10#9#9'_this.subKernelOutputVariableNames = null;'#13#10#9#9
  +'_this.argumentsLength = 0;'#13#10#9#9'_this.ext = null;'#13#10#9#9'_this.co'
  ,'mpiledFragShaderString = null;'#13#10#9#9'_this.compiledVertShaderString = '
  +'null;'#13#10#9#9'_this.extDrawBuffersMap = null;'#13#10#9#9'_this.outputTex'
  +'ture = null;'#13#10#9#9'_this.maxTexSize = null;'#13#10#9#9'if (!_this._web'
  +'Gl) _this._webGl = utils.initWebGl(_this.getCanvas());'#13#10#9#9'return _t'
  +'his;'#13#10#9'}'#13#10#13#10#13#10#13#10#9'_createClass(WebGLKernel, [{'#13
  +#10#9#9'key: ''validateOptions'','#13#10#9#9'value: function validateOptions'
  +'() {'#13#10#9#9#9'var isFloatReadPixel = utils.isFloatReadPixelsSupported()'
  +';'#13#10#9#9#9'if (this.floatTextures === true && !utils.OES_texture_float)'
  +' {'#13#10#9#9#9#9'throw new Error(''Float textures are not supported on thi'
  +'s browser'');'#13#10#9#9#9'} else if (this.floatOutput === true && this.flo'
  +'atOutputForce !== true && !isFloatReadPixel) {'#13#10#9#9#9#9'throw new Err'
  +'or(''Float texture outputs are not supported on this browser'');'#13#10#9#9
  +#9'} else if (this.floatTextures === undefined && utils.OES_texture_float) {'
  +#13#10#9#9#9#9'this.floatTextures = true;'#13#10#9#9#9#9'this.floatOutput = '
  +'isFloatReadPixel;'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (!this.output || thi'
  +'s.output.length === 0) {'#13#10#9#9#9#9'if (arguments.length !== 1) {'#13#10
  +#9#9#9#9#9'throw new Error(''Auto output only supported for kernels with onl'
  +'y one input'');'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'var argType = utils.g'
  +'etArgumentType(arguments[0]);'#13#10#9#9#9#9'if (argType === ''Array'') {'
  +#13#10#9#9#9#9#9'this.output = utils.getDimensions(argType);'#13#10#9#9#9#9
  +'} else if (argType === ''Texture'') {'#13#10#9#9#9#9#9'this.output = argume'
  +'nts[0].output;'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'throw new Error(''A'
  +'uto output not supported for input type: '' + argType);'#13#10#9#9#9#9'}'#13
  +#10#9#9#9'}'#13#10#13#10#9#9#9'this.texSize = utils.dimToTexSize({'#13#10#9#9
  +#9#9'floatTextures: this.floatTextures,'#13#10#9#9#9#9'floatOutput: this.flo'
  +'atOutput'#13#10#9#9#9'}, this.output, true);'#13#10#13#10#9#9#9'if (this.gr'
  +'aphical) {'#13#10#9#9#9#9'if (this.output.length !== 2) {'#13#10#9#9#9#9#9
  +'throw new Error(''Output must have 2 dimensions on graphical mode'');'#13#10
  +#9#9#9#9'}'#13#10#13#10#9#9#9#9'if (this.floatOutput) {'#13#10#9#9#9#9#9'thi'
  +'s.floatOutput = false;'#13#10#9#9#9#9#9'console.warn(''Cannot use graphical'
  +' mode and float output at the same time'');'#13#10#9#9#9#9'}'#13#10#13#10#9
  +#9#9#9'this.texSize = utils.clone(this.output);'#13#10#9#9#9'} else if (this'
  +'.floatOutput === undefined && utils.OES_texture_float) {'#13#10#9#9#9#9'thi'
  +'s.floatOutput = true;'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9
  +'key: ''updateMaxTexSize'','#13#10#9#9'value: function updateMaxTexSize() {'
  +#13#10#9#9#9'var texSize = this.texSize;'#13#10#9#9#9'var canvas = this._can'
  +'vas;'#13#10#9#9#9'if (this.maxTexSize === null) {'#13#10#9#9#9#9'var canvas'
  +'Index = canvases.indexOf(canvas);'#13#10#9#9#9#9'if (canvasIndex === -1) {'
  +#13#10#9#9#9#9#9'canvasIndex = canvases.length;'#13#10#9#9#9#9#9'canvases.pu'
  +'sh(canvas);'#13#10#9#9#9#9#9'maxTexSizes[canvasIndex] = [texSize[0], texSiz'
  +'e[1]];'#13#10#9#9#9#9'}'#13#10#9#9#9#9'this.maxTexSize = maxTexSizes[canvas'
  +'Index];'#13#10#9#9#9'}'#13#10#9#9#9'if (this.maxTexSize[0] < texSize[0]) {'
  +#13#10#9#9#9#9'this.maxTexSize[0] = texSize[0];'#13#10#9#9#9'}'#13#10#9#9#9
  +'if (this.maxTexSize[1] < texSize[1]) {'#13#10#9#9#9#9'this.maxTexSize[1] = '
  +'texSize[1];'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9
  +'key: ''build'','#13#10#9#9'value: function build() {'#13#10#9#9#9'this.vali'
  +'dateOptions();'#13#10#9#9#9'this.setupParams(arguments);'#13#10#9#9#9'this.'
  +'updateMaxTexSize();'#13#10#9#9#9'var texSize = this.texSize;'#13#10#9#9#9'v'
  +'ar gl = this._webGl;'#13#10#9#9#9'var canvas = this._canvas;'#13#10#9#9#9'g'
  +'l.enable(gl.SCISSOR_TEST);'#13#10#9#9#9'gl.viewport(0, 0, this.maxTexSize[0'
  +'], this.maxTexSize[1]);'#13#10#9#9#9'canvas.width = this.maxTexSize[0];'#13
  +#10#9#9#9'canvas.height = this.maxTexSize[1];'#13#10#9#9#9'var threadDim = t'
  +'his.threadDim = utils.clone(this.output);'#13#10#9#9#9'while (threadDim.len'
  +'gth < 3) {'#13#10#9#9#9#9'threadDim.push(1);'#13#10#9#9#9'}'#13#10#13#10#9#9
  +#9'if (this.functionBuilder) this._addKernels();'#13#10#13#10#9#9#9'var comp'
  +'iledVertShaderString = this._getVertShaderString(arguments);'#13#10#9#9#9'v'
  +'ar vertShader = gl.createShader(gl.VERTEX_SHADER);'#13#10#9#9#9'gl.shaderSo'
  +'urce(vertShader, compiledVertShaderString);'#13#10#9#9#9'gl.compileShader(v'
  +'ertShader);'#13#10#13#10#9#9#9'var compiledFragShaderString = this._getFrag'
  +'ShaderString(arguments);'#13#10#9#9#9'var fragShader = gl.createShader(gl.F'
  +'RAGMENT_SHADER);'#13#10#9#9#9'gl.shaderSource(fragShader, compiledFragShade'
  +'rString);'#13#10#9#9#9'gl.compileShader(fragShader);'#13#10#13#10#9#9#9'if '
  +'(!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {'#13#10#9#9#9#9'co'
  +'nsole.log(compiledVertShaderString);'#13#10#9#9#9#9'console.error(''An erro'
  ,'r occurred compiling the shaders: '' + gl.getShaderInfoLog(vertShader));'#13
  +#10#9#9#9#9'throw new Error(''Error compiling vertex shader'');'#13#10#9#9#9
  +'}'#13#10#9#9#9'if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {'
  +#13#10#9#9#9#9'console.log(compiledFragShaderString);'#13#10#9#9#9#9'console'
  +'.error(''An error occurred compiling the shaders: '' + gl.getShaderInfoLog('
  +'fragShader));'#13#10#9#9#9#9'throw new Error(''Error compiling fragment sha'
  +'der'');'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (this.debug) {'#13#10#9#9#9#9
  +'console.log(''Options:'');'#13#10#9#9#9#9'console.dir(this);'#13#10#9#9#9#9
  +'console.log(''GLSL Shader Output:'');'#13#10#9#9#9#9'console.log(compiledFr'
  +'agShaderString);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'var program = this.progr'
  +'am = gl.createProgram();'#13#10#9#9#9'gl.attachShader(program, vertShader);'
  +#13#10#9#9#9'gl.attachShader(program, fragShader);'#13#10#9#9#9'gl.linkProgr'
  +'am(program);'#13#10#9#9#9'this.framebuffer = gl.createFramebuffer();'#13#10
  +#9#9#9'this.framebuffer.width = texSize[0];'#13#10#9#9#9'this.framebuffer.he'
  +'ight = texSize[1];'#13#10#13#10#9#9#9'var vertices = new Float32Array([-1, '
  +'-1, 1, -1, -1, 1, 1, 1]);'#13#10#9#9#9'var texCoords = new Float32Array([0,'
  +' 0, 1, 0, 0, 1, 1, 1]);'#13#10#13#10#9#9#9'var texCoordOffset = vertices.by'
  +'teLength;'#13#10#13#10#9#9#9'var buffer = this.buffer;'#13#10#9#9#9'if (!bu'
  +'ffer) {'#13#10#9#9#9#9'buffer = this.buffer = gl.createBuffer();'#13#10#9#9
  +#9#9'gl.bindBuffer(gl.ARRAY_BUFFER, buffer);'#13#10#9#9#9#9'gl.bufferData(gl'
  +'.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);'
  +#13#10#9#9#9'} else {'#13#10#9#9#9#9'gl.bindBuffer(gl.ARRAY_BUFFER, buffer);'
  +#13#10#9#9#9'}'#13#10#13#10#9#9#9'gl.bufferSubData(gl.ARRAY_BUFFER, 0, verti'
  +'ces);'#13#10#9#9#9'gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoo'
  +'rds);'#13#10#13#10#9#9#9'var aPosLoc = gl.getAttribLocation(this.program, '
  +'''aPos'');'#13#10#9#9#9'gl.enableVertexAttribArray(aPosLoc);'#13#10#9#9#9'g'
  +'l.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, gl.FALSE, 0, 0);'#13#10#9#9#9'v'
  +'ar aTexCoordLoc = gl.getAttribLocation(this.program, ''aTexCoord'');'#13#10
  +#9#9#9'gl.enableVertexAttribArray(aTexCoordLoc);'#13#10#9#9#9'gl.vertexAttri'
  +'bPointer(aTexCoordLoc, 2, gl.FLOAT, gl.FALSE, 0, texCoordOffset);'#13#10#13
  +#10#9#9#9'this.setupOutputTexture();'#13#10#13#10#9#9#9'if (this.subKernelOu'
  +'tputTextures !== null) {'#13#10#9#9#9#9'var extDrawBuffersMap = this.extDra'
  +'wBuffersMap = [gl.COLOR_ATTACHMENT0];'#13#10#9#9#9#9'for (var i = 0; i < th'
  +'is.subKernelOutputTextures.length; i++) {'#13#10#9#9#9#9#9'var subKernelOut'
  +'putTexture = this.subKernelOutputTextures[i];'#13#10#9#9#9#9#9'extDrawBuffe'
  +'rsMap.push(gl.COLOR_ATTACHMENT0 + i + 1);'#13#10#9#9#9#9#9'gl.activeTexture'
  +'(gl.TEXTURE0 + arguments.length + i);'#13#10#9#9#9#9#9'gl.bindTexture(gl.TE'
  +'XTURE_2D, subKernelOutputTexture);'#13#10#9#9#9#9#9'gl.texParameteri(gl.TEX'
  +'TURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#13#10#9#9#9#9#9'gl.texParam'
  +'eteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#13#10#9#9#9#9#9
  +'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'#13#10#9
  +#9#9#9#9'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);'
  +#13#10#9#9#9#9#9'if (this.floatOutput) {'#13#10#9#9#9#9#9#9'gl.texImage2D(gl'
  +'.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null'
  +');'#13#10#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9'gl.texImage2D(gl.TEXTURE_2D'
  +', 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);'
  +#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10
  +#13#10#9'}, {'#13#10#9#9'key: ''run'','#13#10#9#9'value: function run() {'#13
  +#10#9#9#9'if (this.program === null) {'#13#10#9#9#9#9'this.build.apply(this,'
  +' arguments);'#13#10#9#9#9'}'#13#10#9#9#9'var paramNames = this.paramNames;'
  +#13#10#9#9#9'var paramTypes = this.paramTypes;'#13#10#9#9#9'var texSize = th'
  +'is.texSize;'#13#10#9#9#9'var gl = this._webGl;'#13#10#13#10#9#9#9'gl.usePro'
  +'gram(this.program);'#13#10#9#9#9'gl.scissor(0, 0, texSize[0], texSize[1]);'
  +#13#10#13#10#9#9#9'if (!this.hardcodeConstants) {'#13#10#9#9#9#9'var uOutput'
  +'DimLoc = this.getUniformLocation(''uOutputDim'');'#13#10#9#9#9#9'gl.uniform'
  +'3fv(uOutputDimLoc, this.threadDim);'#13#10#9#9#9#9'var uTexSizeLoc = this.g'
  +'etUniformLocation(''uTexSize'');'#13#10#9#9#9#9'gl.uniform2fv(uTexSizeLoc, '
  +'texSize);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'var ratioLoc = this.getUniformL'
  +'ocation(''ratio'');'#13#10#9#9#9'gl.uniform2f(ratioLoc, texSize[0] / this.m'
  +'axTexSize[0], texSize[1] / this.maxTexSize[1]);'#13#10#13#10#9#9#9'this.arg'
  +'umentsLength = 0;'#13#10#9#9#9'for (var texIndex = 0; texIndex < paramNames'
  +'.length; texIndex++) {'#13#10#9#9#9#9'this._addArgument(arguments[texIndex]'
  +', paramTypes[texIndex], paramNames[texIndex]);'#13#10#9#9#9'}'#13#10#13#10#9
  +#9#9'if (this.graphical) {'#13#10#9#9#9#9'gl.bindRenderbuffer(gl.RENDERBUFFE'
  ,'R, null);'#13#10#9#9#9#9'gl.bindFramebuffer(gl.FRAMEBUFFER, null);'#13#10#9
  +#9#9#9'gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);'#13#10#9#9#9#9'return;'#13#10
  +#9#9#9'}'#13#10#13#10#9#9#9'gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuf'
  +'fer);'#13#10#9#9#9'var outputTexture = this.outputTexture;'#13#10#9#9#9'gl.'
  +'framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, o'
  +'utputTexture, 0);'#13#10#13#10#9#9#9'if (this.subKernelOutputTextures !== n'
  +'ull) {'#13#10#9#9#9#9'for (var i = 0; i < this.subKernelOutputTextures.leng'
  +'th; i++) {'#13#10#9#9#9#9#9'var subKernelOutputTexture = this.subKernelOutp'
  +'utTextures[i];'#13#10#9#9#9#9#9'gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.'
  +'COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, subKernelOutputTexture, 0);'#13#10
  +#9#9#9#9'}'#13#10#9#9#9#9'this.ext.drawBuffersWEBGL(this.extDrawBuffersMap);'
  +#13#10#9#9#9'}'#13#10#13#10#9#9#9'gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);'#13
  +#10#13#10#9#9#9'if (this.subKernelOutputTextures !== null) {'#13#10#9#9#9#9
  +'if (this.subKernels !== null) {'#13#10#9#9#9#9#9'var output = [];'#13#10#9#9
  +#9#9#9'output.result = this.renderOutput(outputTexture);'#13#10#9#9#9#9#9'fo'
  +'r (var _i = 0; _i < this.subKernels.length; _i++) {'#13#10#9#9#9#9#9#9'outp'
  +'ut.push(new Texture(this.subKernelOutputTextures[_i], texSize, this.output,'
  +' this._webGl));'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9#9'return output;'#13#10#9
  +#9#9#9'} else if (this.subKernelProperties !== null) {'#13#10#9#9#9#9#9'var '
  +'_output = {'#13#10#9#9#9#9#9#9'result: this.renderOutput(outputTexture)'#13
  +#10#9#9#9#9#9'};'#13#10#9#9#9#9#9'var _i2 = 0;'#13#10#9#9#9#9#9'for (var p i'
  +'n this.subKernelProperties) {'#13#10#9#9#9#9#9#9'if (!this.subKernelPropert'
  +'ies.hasOwnProperty(p)) continue;'#13#10#9#9#9#9#9#9'_output[p] = new Textur'
  +'e(this.subKernelOutputTextures[_i2], texSize, this.output, this._webGl);'#13
  +#10#9#9#9#9#9#9'_i2++;'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9#9'return _output;'
  +#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return this.renderOutput('
  +'outputTexture);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''re'
  +'nderOutput'','#13#10#9#9'value: function renderOutput(outputTexture) {'#13
  +#10#9#9#9'var texSize = this.texSize;'#13#10#9#9#9'var gl = this._webGl;'#13
  +#10#9#9#9'var threadDim = this.threadDim;'#13#10#9#9#9'var output = this.out'
  +'put;'#13#10#9#9#9'if (this.outputToTexture) {'#13#10#9#9#9#9'return new Tex'
  +'ture(outputTexture, texSize, output, this._webGl);'#13#10#9#9#9'} else {'#13
  +#10#9#9#9#9'var result = void 0;'#13#10#9#9#9#9'if (this.floatOutput) {'#13
  +#10#9#9#9#9#9'result = new Float32Array(texSize[0] * texSize[1] * 4);'#13#10
  +#9#9#9#9#9'gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.FLOAT, re'
  +'sult);'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'var bytes = new Uint8Array('
  +'texSize[0] * texSize[1] * 4);'#13#10#9#9#9#9#9'gl.readPixels(0, 0, texSize['
  +'0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);'#13#10#9#9#9#9#9'result '
  +'= new Float32Array(bytes.buffer);'#13#10#9#9#9#9'}'#13#10#13#10#9#9#9#9'res'
  +'ult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);'#13#10
  +#13#10#9#9#9#9'if (output.length === 1) {'#13#10#9#9#9#9#9'return result;'#13
  +#10#9#9#9#9'} else if (output.length === 2) {'#13#10#9#9#9#9#9'return utils.'
  +'splitArray(result, output[0]);'#13#10#9#9#9#9'} else if (output.length === '
  +'3) {'#13#10#9#9#9#9#9'var cube = utils.splitArray(result, output[0] * outpu'
  +'t[1]);'#13#10#9#9#9#9#9'return cube.map(function (x) {'#13#10#9#9#9#9#9#9'r'
  +'eturn utils.splitArray(x, output[0]);'#13#10#9#9#9#9#9'});'#13#10#9#9#9#9'}'
  +#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''getO'
  +'utputTexture'','#13#10#9#9'value: function getOutputTexture() {'#13#10#9#9#9
  +'return this.getTextureCache(''OUTPUT'');'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''detachOutputTexture'','#13#10#9#9'value: function de'
  +'tachOutputTexture() {'#13#10#9#9#9'this.detachTextureCache(''OUTPUT'');'#13
  +#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''setupOutputTexture'','
  +#13#10#9#9'value: function setupOutputTexture() {'#13#10#9#9#9'var gl = this'
  +'._webGl;'#13#10#9#9#9'var texSize = this.texSize;'#13#10#9#9#9'this.detachO'
  +'utputTexture();'#13#10#9#9#9'this.outputTexture = this.getOutputTexture();'
  +#13#10#9#9#9'gl.activeTexture(gl.TEXTURE0 + this.paramNames.length);'#13#10#9
  +#9#9'gl.bindTexture(gl.TEXTURE_2D, this.outputTexture);'#13#10#9#9#9'gl.texP'
  +'arameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#13#10#9#9#9
  +'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#13#10
  +#9#9#9'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'
  +#13#10#9#9#9'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEARE'
  +'ST);'#13#10#9#9#9'if (this.floatOutput) {'#13#10#9#9#9#9'gl.texImage2D(gl.T'
  +'EXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);'
  +#13#10#9#9#9'} else {'#13#10#9#9#9#9'gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA'
  ,', texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);'#13#10#9#9#9
  +'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''getArgumentTextu'
  +'re'','#13#10#9#9'value: function getArgumentTexture(name) {'#13#10#9#9#9're'
  +'turn this.getTextureCache(''ARGUMENT_'' + name);'#13#10#9#9'}'#13#10#13#10
  +#13#10#9'}, {'#13#10#9#9'key: ''getSubKernelTexture'','#13#10#9#9'value: fun'
  +'ction getSubKernelTexture(name) {'#13#10#9#9#9'return this.getTextureCache('
  +'''SUB_KERNEL_'' + name);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9
  +'key: ''getTextureCache'','#13#10#9#9'value: function getTextureCache(name) '
  +'{'#13#10#9#9#9'if (this.outputToTexture) {'#13#10#9#9#9#9'return this._webG'
  +'l.createTexture();'#13#10#9#9#9'}'#13#10#9#9#9'if (this.textureCache.hasOwn'
  +'Property(name)) {'#13#10#9#9#9#9'return this.textureCache[name];'#13#10#9#9
  +#9'}'#13#10#9#9#9'return this.textureCache[name] = this._webGl.createTexture'
  +'();'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''detachTextureC'
  +'ache'','#13#10#9#9'value: function detachTextureCache(name) {'#13#10#9#9#9
  +'delete this.textureCache[name];'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13
  +#10#9#9'key: ''getUniformLocation'','#13#10#9#9'value: function getUniformLo'
  +'cation(name) {'#13#10#9#9#9'var location = this.programUniformLocationCache'
  +'[name];'#13#10#9#9#9'if (!location) {'#13#10#9#9#9#9'location = this._webGl'
  +'.getUniformLocation(this.program, name);'#13#10#9#9#9#9'this.programUniform'
  +'LocationCache[name] = location;'#13#10#9#9#9'}'#13#10#9#9#9'return location'
  +';'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_getFragShaderAr'
  +'tifactMap'','#13#10#9#9'value: function _getFragShaderArtifactMap(args) {'
  +#13#10#9#9#9'return {'#13#10#9#9#9#9'HEADER: this._getHeaderString(),'#13#10
  +#9#9#9#9'LOOP_MAX: this._getLoopMaxString(),'#13#10#9#9#9#9'CONSTANTS: this.'
  +'_getConstantsString(),'#13#10#9#9#9#9'DECODE32_ENDIANNESS: this._getDecode3'
  +'2EndiannessString(),'#13#10#9#9#9#9'ENCODE32_ENDIANNESS: this._getEncode32E'
  +'ndiannessString(),'#13#10#9#9#9#9'GET_WRAPAROUND: this._getGetWraparoundStr'
  +'ing(),'#13#10#9#9#9#9'GET_TEXTURE_CHANNEL: this._getGetTextureChannelString'
  +'(),'#13#10#9#9#9#9'GET_TEXTURE_INDEX: this._getGetTextureIndexString(),'#13
  +#10#9#9#9#9'GET_RESULT: this._getGetResultString(),'#13#10#9#9#9#9'MAIN_PARA'
  +'MS: this._getMainParamsString(args),'#13#10#9#9#9#9'MAIN_CONSTANTS: this._g'
  +'etMainConstantsString(),'#13#10#9#9#9#9'KERNEL: this._getKernelString(),'#13
  +#10#9#9#9#9'MAIN_RESULT: this._getMainResultString()'#13#10#9#9#9'};'#13#10#9
  +#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_addArgument'','#13#10#9#9
  +'value: function _addArgument(value, type, name) {'#13#10#9#9#9'var gl = thi'
  +'s._webGl;'#13#10#9#9#9'var argumentTexture = this.getArgumentTexture(name);'
  +#13#10#9#9#9'if (value instanceof Texture) {'#13#10#9#9#9#9'type = ''Texture'
  +''';'#13#10#9#9#9'}'#13#10#9#9#9'switch (type) {'#13#10#9#9#9#9'case ''Array'
  +''':'#13#10#9#9#9#9#9'{'#13#10#9#9#9#9#9#9'var dim = utils.getDimensions(val'
  +'ue, true);'#13#10#9#9#9#9#9#9'var size = utils.dimToTexSize({'#13#10#9#9#9#9
  +#9#9#9'floatTextures: this.floatTextures,'#13#10#9#9#9#9#9#9#9'floatOutput: '
  +'this.floatOutput'#13#10#9#9#9#9#9#9'}, dim);'#13#10#9#9#9#9#9#9'gl.activeTe'
  +'xture(gl.TEXTURE0 + this.argumentsLength);'#13#10#9#9#9#9#9#9'gl.bindTextur'
  +'e(gl.TEXTURE_2D, argumentTexture);'#13#10#9#9#9#9#9#9'gl.texParameteri(gl.T'
  +'EXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#13#10#9#9#9#9#9#9'gl.texP'
  +'arameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#13#10#9#9#9
  +#9#9#9'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);'
  +#13#10#9#9#9#9#9#9'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl'
  +'.NEAREST);'#13#10#13#10#9#9#9#9#9#9'var length = size[0] * size[1];'#13#10#9
  +#9#9#9#9#9'if (this.floatTextures) {'#13#10#9#9#9#9#9#9#9'length *= 4;'#13#10
  +#9#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9#9'var valuesFlat = new Float32Array(le'
  +'ngth);'#13#10#9#9#9#9#9#9'utils.flattenTo(value, valuesFlat);'#13#10#13#10#9
  +#9#9#9#9#9'var buffer = void 0;'#13#10#9#9#9#9#9#9'if (this.floatTextures) {'
  +#13#10#9#9#9#9#9#9#9'gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size['
  +'1], 0, gl.RGBA, gl.FLOAT, valuesFlat);'#13#10#9#9#9#9#9#9'} else {'#13#10#9
  +#9#9#9#9#9#9'buffer = new Uint8Array(valuesFlat.buffer);'#13#10#9#9#9#9#9#9#9
  +'gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.U'
  +'NSIGNED_BYTE, buffer);'#13#10#9#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9#9'var lo'
  +'c = this.getUniformLocation(''user_'' + name);'#13#10#9#9#9#9#9#9'var locSi'
  +'ze = this.getUniformLocation(''user_'' + name + ''Size'');'#13#10#9#9#9#9#9
  +#9'var dimLoc = this.getUniformLocation(''user_'' + name + ''Dim'');'#13#10
  +#13#10#9#9#9#9#9#9'if (!this.hardcodeConstants) {'#13#10#9#9#9#9#9#9#9'gl.un'
  +'iform3fv(dimLoc, dim);'#13#10#9#9#9#9#9#9#9'gl.uniform2fv(locSize, size);'
  +#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9#9'gl.uniform1i(loc, this.argumentsLeng'
  ,'th);'#13#10#9#9#9#9#9#9'break;'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'case ''Num'
  +'ber'':'#13#10#9#9#9#9#9'{'#13#10#9#9#9#9#9#9'var _loc = this.getUniformLoca'
  +'tion(''user_'' + name);'#13#10#9#9#9#9#9#9'gl.uniform1f(_loc, value);'#13#10
  +#9#9#9#9#9#9'break;'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'case ''Input'':'#13#10
  +#9#9#9#9#9'{'#13#10#9#9#9#9#9#9'var input = value;'#13#10#9#9#9#9#9#9'var _d'
  +'im = input.size;'#13#10#9#9#9#9#9#9'var _size = utils.dimToTexSize({'#13#10
  +#9#9#9#9#9#9#9'floatTextures: this.floatTextures,'#13#10#9#9#9#9#9#9#9'float'
  +'Output: this.floatOutput'#13#10#9#9#9#9#9#9'}, _dim);'#13#10#9#9#9#9#9#9'gl'
  +'.activeTexture(gl.TEXTURE0 + this.argumentsLength);'#13#10#9#9#9#9#9#9'gl.b'
  +'indTexture(gl.TEXTURE_2D, argumentTexture);'#13#10#9#9#9#9#9#9'gl.texParame'
  +'teri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);'#13#10#9#9#9#9#9#9
  +'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);'#13#10
  +#9#9#9#9#9#9'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEARE'
  +'ST);'#13#10#9#9#9#9#9#9'gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILT'
  +'ER, gl.NEAREST);'#13#10#13#10#9#9#9#9#9#9'var _length = _size[0] * _size[1]'
  +';'#13#10#9#9#9#9#9#9'var inputArray = void 0;'#13#10#9#9#9#9#9#9'if (this.f'
  +'loatTextures) {'#13#10#9#9#9#9#9#9#9'_length *= 4;'#13#10#9#9#9#9#9#9#9'inp'
  +'utArray = new Float32Array(_length);'#13#10#9#9#9#9#9#9#9'inputArray.set(in'
  +'put.value);'#13#10#9#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9#9'inputArray = i'
  +'nput.value;'#13#10#9#9#9#9#9#9'}'#13#10#13#10#9#9#9#9#9#9'if (this.floatTex'
  +'tures) {'#13#10#9#9#9#9#9#9#9'gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _siz'
  +'e[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);'#13#10#9#9#9#9#9#9'} els'
  +'e {'#13#10#9#9#9#9#9#9#9'var _buffer = new Uint8Array(inputArray.buffer);'
  +#13#10#9#9#9#9#9#9#9'gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0], _siz'
  +'e[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);'#13#10#9#9#9#9#9#9'}'#13#10#13
  +#10#9#9#9#9#9#9'var _loc2 = this.getUniformLocation(''user_'' + name);'#13#10
  +#9#9#9#9#9#9'var _locSize = this.getUniformLocation(''user_'' + name + ''Siz'
  +'e'');'#13#10#9#9#9#9#9#9'var _dimLoc = this.getUniformLocation(''user_'' + '
  +'name + ''Dim'');'#13#10#13#10#9#9#9#9#9#9'if (!this.hardcodeConstants) {'#13
  +#10#9#9#9#9#9#9#9'gl.uniform3fv(_dimLoc, _dim);'#13#10#9#9#9#9#9#9#9'gl.unif'
  +'orm2fv(_locSize, _size);'#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9#9'gl.uniform'
  +'1i(_loc2, this.argumentsLength);'#13#10#9#9#9#9#9#9'break;'#13#10#9#9#9#9#9
  +'}'#13#10#9#9#9#9'case ''Texture'':'#13#10#9#9#9#9#9'{'#13#10#9#9#9#9#9#9'va'
  +'r inputTexture = value;'#13#10#9#9#9#9#9#9'var _dim2 = utils.getDimensions('
  +'inputTexture, true);'#13#10#13#10#9#9#9#9#9#9'var _size2 = inputTexture.siz'
  +'e;'#13#10#13#10#9#9#9#9#9#9'if (inputTexture.texture === this.outputTexture'
  +') {'#13#10#9#9#9#9#9#9#9'this.setupOutputTexture();'#13#10#9#9#9#9#9#9'}'#13
  +#10#13#10#9#9#9#9#9#9'gl.activeTexture(gl.TEXTURE0 + this.argumentsLength);'
  +#13#10#9#9#9#9#9#9'gl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);'#13
  +#10#13#10#9#9#9#9#9#9'var _loc3 = this.getUniformLocation(''user_'' + name);'
  +#13#10#9#9#9#9#9#9'var _locSize2 = this.getUniformLocation(''user_'' + name '
  +'+ ''Size'');'#13#10#9#9#9#9#9#9'var _dimLoc2 = this.getUniformLocation(''us'
  +'er_'' + name + ''Dim'');'#13#10#13#10#9#9#9#9#9#9'gl.uniform3fv(_dimLoc2, _'
  +'dim2);'#13#10#9#9#9#9#9#9'gl.uniform2fv(_locSize2, _size2);'#13#10#9#9#9#9#9
  +#9'gl.uniform1i(_loc3, this.argumentsLength);'#13#10#9#9#9#9#9#9'break;'#13
  +#10#9#9#9#9#9'}'#13#10#9#9#9#9'default:'#13#10#9#9#9#9#9'throw new Error(''I'
  +'nput type not supported (WebGL): '' + value);'#13#10#9#9#9'}'#13#10#9#9#9't'
  +'his.argumentsLength++;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'ke'
  +'y: ''_getHeaderString'','#13#10#9#9'value: function _getHeaderString() {'#13
  +#10#9#9#9'return this.subKernels !== null || this.subKernelProperties !== nu'
  +'ll ?'#13#10#9#9#9'''#extension GL_EXT_draw_buffers : require\n'' : '''';'#13
  +#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_getLoopMaxString'','
  +#13#10#9#9'value: function _getLoopMaxString() {'#13#10#9#9#9'return this.lo'
  +'opMaxIterations ? '' '' + parseInt(this.loopMaxIterations) + ''.0;\n'' : '''
  +' 1000.0;\n'';'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_get'
  +'ConstantsString'','#13#10#9#9'value: function _getConstantsString() {'#13#10
  +#9#9#9'var result = [];'#13#10#9#9#9'var threadDim = this.threadDim;'#13#10#9
  +#9#9'var texSize = this.texSize;'#13#10#9#9#9'if (this.hardcodeConstants) {'
  +#13#10#9#9#9#9'result.push(''highp vec3 uOutputDim = vec3('' + threadDim[0] '
  +'+ '','' + threadDim[1] + '', '' + threadDim[2] + '')'', ''highp vec2 uTexSi'
  +'ze = vec2('' + texSize[0] + '', '' + texSize[1] + '')'');'#13#10#9#9#9'} el'
  +'se {'#13#10#9#9#9#9'result.push(''uniform highp vec3 uOutputDim'', ''unifor'
  +'m highp vec2 uTexSize'');'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return this._li'
  +'nesToString(result);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key:'
  ,' ''_getTextureCoordinate'','#13#10#9#9'value: function _getTextureCoordinat'
  +'e() {'#13#10#9#9#9'var names = this.subKernelOutputVariableNames;'#13#10#9#9
  +#9'if (names === null || names.length < 1) {'#13#10#9#9#9#9'return ''varying'
  +' highp vec2 vTexCoord;\n'';'#13#10#9#9#9'} else {'#13#10#9#9#9#9'return ''o'
  +'ut highp vec2 vTexCoord;\n'';'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10
  +#9'}, {'#13#10#9#9'key: ''_getDecode32EndiannessString'','#13#10#9#9'value: '
  +'function _getDecode32EndiannessString() {'#13#10#9#9#9'return this.endianne'
  +'ss === ''LE'' ? '''' : ''  rgba.rgba = rgba.abgr;\n'';'#13#10#9#9'}'#13#10
  +#13#10#13#10#9'}, {'#13#10#9#9'key: ''_getEncode32EndiannessString'','#13#10
  +#9#9'value: function _getEncode32EndiannessString() {'#13#10#9#9#9'return th'
  +'is.endianness === ''LE'' ? '''' : ''  rgba.rgba = rgba.abgr;\n'';'#13#10#9#9
  +'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_getGetWraparoundString'','#13
  +#10#9#9'value: function _getGetWraparoundString() {'#13#10#9#9#9'return this'
  +'.wraparound ? ''  xyz = mod(xyz, texDim);\n'' : '''';'#13#10#9#9'}'#13#10#13
  +#10#13#10#9'}, {'#13#10#9#9'key: ''_getGetTextureChannelString'','#13#10#9#9
  +'value: function _getGetTextureChannelString() {'#13#10#9#9#9'if (!this.floa'
  +'tTextures) return '''';'#13#10#13#10#9#9#9'return this._linesToString([''  '
  +'int channel = int(integerMod(index, 4.0))'', ''  index = float(int(index) /'
  +' 4)'']);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_getGetTe'
  +'xtureIndexString'','#13#10#9#9'value: function _getGetTextureIndexString() '
  +'{'#13#10#9#9#9'return this.floatTextures ? ''  index = float(int(index)/4);'
  +'\n'' : '''';'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_getG'
  +'etResultString'','#13#10#9#9'value: function _getGetResultString() {'#13#10
  +#9#9#9'if (!this.floatTextures) return ''  return decode32(texel);\n'';'#13
  +#10#9#9#9'return this._linesToString([''  if (channel == 0) return texel.r'''
  +', ''  if (channel == 1) return texel.g'', ''  if (channel == 2) return texe'
  +'l.b'', ''  if (channel == 3) return texel.a'']);'#13#10#9#9'}'#13#10#13#10
  +#13#10#9'}, {'#13#10#9#9'key: ''_getMainParamsString'','#13#10#9#9'value: fu'
  +'nction _getMainParamsString(args) {'#13#10#9#9#9'var result = [];'#13#10#9#9
  +#9'var paramTypes = this.paramTypes;'#13#10#9#9#9'var paramNames = this.para'
  +'mNames;'#13#10#9#9#9'for (var i = 0; i < paramNames.length; i++) {'#13#10#9
  +#9#9#9'var param = args[i];'#13#10#9#9#9#9'var paramName = paramNames[i];'#13
  +#10#9#9#9#9'var paramType = paramTypes[i];'#13#10#9#9#9#9'if (this.hardcodeC'
  +'onstants) {'#13#10#9#9#9#9#9'if (paramType === ''Array'' || paramType === '
  +'''Texture'') {'#13#10#9#9#9#9#9#9'var paramDim = utils.getDimensions(param,'
  +' true);'#13#10#9#9#9#9#9#9'var paramSize = utils.dimToTexSize({'#13#10#9#9#9
  +#9#9#9#9'floatTextures: this.floatTextures,'#13#10#9#9#9#9#9#9#9'floatOutput'
  +': this.floatOutput'#13#10#9#9#9#9#9#9'}, paramDim);'#13#10#13#10#9#9#9#9#9#9
  +'result.push(''uniform highp sampler2D user_'' + paramName, ''highp vec2 use'
  +'r_'' + paramName + ''Size = vec2('' + paramSize[0] + ''.0, '' + paramSize[1'
  +'] + ''.0)'', ''highp vec3 user_'' + paramName + ''Dim = vec3('' + paramDim['
  +'0] + ''.0, '' + paramDim[1] + ''.0, '' + paramDim[2] + ''.0)'');'#13#10#9#9
  +#9#9#9'} else if (paramType === ''Number'' && Number.isInteger(param)) {'#13
  +#10#9#9#9#9#9#9'result.push(''highp float user_'' + paramName + '' = '' + pa'
  +'ram + ''.0'');'#13#10#9#9#9#9#9'} else if (paramType === ''Number'') {'#13
  +#10#9#9#9#9#9#9'result.push(''highp float user_'' + paramName + '' = '' + pa'
  +'ram);'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'if (param'
  +'Type === ''Array'' || paramType === ''Texture'' || paramType === ''Input'')'
  +' {'#13#10#9#9#9#9#9#9'result.push(''uniform highp sampler2D user_'' + param'
  +'Name, ''uniform highp vec2 user_'' + paramName + ''Size'', ''uniform highp '
  +'vec3 user_'' + paramName + ''Dim'');'#13#10#9#9#9#9#9'} else if (paramType '
  +'=== ''Number'') {'#13#10#9#9#9#9#9#9'result.push(''uniform highp float user'
  +'_'' + paramName);'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10
  +#9#9#9'return this._linesToString(result);'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''_getMainConstantsString'','#13#10#9#9'value: functio'
  +'n _getMainConstantsString() {'#13#10#9#9#9'var result = [];'#13#10#9#9#9'if'
  +' (this.constants) {'#13#10#9#9#9#9'for (var name in this.constants) {'#13#10
  +#9#9#9#9#9'if (!this.constants.hasOwnProperty(name)) continue;'#13#10#9#9#9#9
  +#9'var value = parseFloat(this.constants[name]);'#13#10#13#10#9#9#9#9#9'if ('
  +'Number.isInteger(value)) {'#13#10#9#9#9#9#9#9'result.push(''const float con'
  +'stants_'' + name + '' = '' + parseInt(value) + ''.0'');'#13#10#9#9#9#9#9'} '
  +'else {'#13#10#9#9#9#9#9#9'result.push(''const float constants_'' + name + '
  +''' = '' + parseFloat(value));'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'}'#13#10#9#9
  +#9'}'#13#10#9#9#9'return this._linesToString(result);'#13#10#9#9'}'#13#10#13
  ,#10#13#10#9'}, {'#13#10#9#9'key: ''_getKernelString'','#13#10#9#9'value: fun'
  +'ction _getKernelString() {'#13#10#9#9#9'var result = [];'#13#10#9#9#9'var n'
  +'ames = this.subKernelOutputVariableNames;'#13#10#9#9#9'if (names !== null) '
  +'{'#13#10#9#9#9#9'result.push(''highp float kernelResult = 0.0'');'#13#10#9#9
  +#9#9'for (var i = 0; i < names.length; i++) {'#13#10#9#9#9#9#9'result.push('
  +'''highp float '' + names[i] + '' = 0.0'');'#13#10#9#9#9#9'}'#13#10#13#10#9#9
  +#9'} else {'#13#10#9#9#9#9'result.push(''highp float kernelResult = 0.0'');'
  +#13#10#9#9#9'}'#13#10#13#10#9#9#9'return this._linesToString(result) + this.'
  +'functionBuilder.getPrototypeString(''kernel'');'#13#10#9#9'}'#13#10#13#10#13
  +#10#9'}, {'#13#10#9#9'key: ''_getMainResultString'','#13#10#9#9'value: funct'
  +'ion _getMainResultString() {'#13#10#9#9#9'var names = this.subKernelOutputV'
  +'ariableNames;'#13#10#9#9#9'var result = [];'#13#10#13#10#9#9#9'if (this.flo'
  +'atOutput) {'#13#10#9#9#9#9'result.push(''  index *= 4.0'');'#13#10#9#9#9'}'
  +#13#10#13#10#9#9#9'if (this.graphical) {'#13#10#9#9#9#9'result.push(''  thre'
  +'adId = indexTo3D(index, uOutputDim)'', ''  kernel()'', ''  gl_FragColor = a'
  +'ctualColor'');'#13#10#9#9#9'} else if (this.floatOutput) {'#13#10#9#9#9#9'v'
  +'ar channels = [''r'', ''g'', ''b'', ''a''];'#13#10#13#10#9#9#9#9'for (var i'
  +' = 0; i < channels.length; ++i) {'#13#10#9#9#9#9#9'result.push(''  threadId'
  +' = indexTo3D(index, uOutputDim)'');'#13#10#9#9#9#9#9'result.push(''  kernel'
  +'()'');'#13#10#13#10#9#9#9#9#9'if (names) {'#13#10#9#9#9#9#9#9'result.push('
  +'''  gl_FragData[0].'' + channels[i] + '' = kernelResult'');'#13#10#13#10#9#9
  +#9#9#9#9'for (var j = 0; j < names.length; ++j) {'#13#10#9#9#9#9#9#9#9'resul'
  +'t.push(''  gl_FragData['' + (j + 1) + ''].'' + channels[i] + '' = '' + name'
  +'s[j]);'#13#10#9#9#9#9#9#9'}'#13#10#9#9#9#9#9'} else {'#13#10#9#9#9#9#9#9're'
  +'sult.push(''  gl_FragColor.'' + channels[i] + '' = kernelResult'');'#13#10#9
  +#9#9#9#9'}'#13#10#13#10#9#9#9#9#9'if (i < channels.length - 1) {'#13#10#9#9#9
  +#9#9#9'result.push(''  index += 1.0'');'#13#10#9#9#9#9#9'}'#13#10#9#9#9#9'}'
  +#13#10#9#9#9'} else if (names !== null) {'#13#10#9#9#9#9'result.push(''  thr'
  +'eadId = indexTo3D(index, uOutputDim)'');'#13#10#9#9#9#9'result.push(''  ker'
  +'nel()'');'#13#10#9#9#9#9'result.push(''  gl_FragData[0] = encode32(kernelRe'
  +'sult)'');'#13#10#9#9#9#9'for (var _i3 = 0; _i3 < names.length; _i3++) {'#13
  +#10#9#9#9#9#9'result.push(''  gl_FragData['' + (_i3 + 1) + ''] = encode32('''
  +' + names[_i3] + '')'');'#13#10#9#9#9#9'}'#13#10#9#9#9'} else {'#13#10#9#9#9
  +#9'result.push(''  threadId = indexTo3D(index, uOutputDim)'', ''  kernel()'''
  +', ''  gl_FragColor = encode32(kernelResult)'');'#13#10#9#9#9'}'#13#10#13#10
  +#9#9#9'return this._linesToString(result);'#13#10#9#9'}'#13#10#13#10#13#10#9
  +'}, {'#13#10#9#9'key: ''_linesToString'','#13#10#9#9'value: function _linesT'
  +'oString(lines) {'#13#10#9#9#9'if (lines.length > 0) {'#13#10#9#9#9#9'return'
  +' lines.join('';\n'') + '';\n'';'#13#10#9#9#9'} else {'#13#10#9#9#9#9'return'
  +' ''\n'';'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'k'
  +'ey: ''_replaceArtifacts'','#13#10#9#9'value: function _replaceArtifacts(src'
  +', map) {'#13#10#9#9#9'return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z])*)_'
  +'_;\n/g, function (match, artifact) {'#13#10#9#9#9#9'if (map.hasOwnProperty('
  +'artifact)) {'#13#10#9#9#9#9#9'return map[artifact];'#13#10#9#9#9#9'}'#13#10
  +#9#9#9#9'throw ''unhandled artifact '' + artifact;'#13#10#9#9#9'});'#13#10#9
  +#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_addKernels'','#13#10#9#9'v'
  +'alue: function _addKernels() {'#13#10#9#9#9'var builder = this.functionBuil'
  +'der;'#13#10#9#9#9'var gl = this._webGl;'#13#10#13#10#9#9#9'builder.addFunct'
  +'ions(this.functions, {'#13#10#9#9#9#9'constants: this.constants,'#13#10#9#9
  +#9#9'output: this.output'#13#10#9#9#9'});'#13#10#9#9#9'builder.addNativeFunc'
  +'tions(this.nativeFunctions);'#13#10#13#10#9#9#9'builder.addKernel(this.fnSt'
  +'ring, {'#13#10#9#9#9#9'prototypeOnly: false,'#13#10#9#9#9#9'constants: this'
  +'.constants,'#13#10#9#9#9#9'output: this.output,'#13#10#9#9#9#9'debug: this.'
  +'debug,'#13#10#9#9#9#9'loopMaxIterations: this.loopMaxIterations'#13#10#9#9#9
  +'}, this.paramNames, this.paramTypes);'#13#10#13#10#9#9#9'if (this.subKernel'
  +'s !== null) {'#13#10#9#9#9#9'var ext = this.ext = gl.getExtension(''WEBGL_d'
  +'raw_buffers'');'#13#10#9#9#9#9'if (!ext) throw new Error(''could not instan'
  +'tiate draw buffers extension'');'#13#10#9#9#9#9'this.subKernelOutputTexture'
  +'s = [];'#13#10#9#9#9#9'this.subKernelOutputVariableNames = [];'#13#10#9#9#9
  +#9'for (var i = 0; i < this.subKernels.length; i++) {'#13#10#9#9#9#9#9'var s'
  +'ubKernel = this.subKernels[i];'#13#10#9#9#9#9#9'builder.addSubKernel(subKer'
  +'nel, {'#13#10#9#9#9#9#9#9'prototypeOnly: false,'#13#10#9#9#9#9#9#9'constant'
  +'s: this.constants,'#13#10#9#9#9#9#9#9'output: this.output,'#13#10#9#9#9#9#9
  +#9'debug: this.debug,'#13#10#9#9#9#9#9#9'loopMaxIterations: this.loopMaxIter'
  ,'ations'#13#10#9#9#9#9#9'});'#13#10#9#9#9#9#9'this.subKernelOutputTextures.p'
  +'ush(this.getSubKernelTexture(i));'#13#10#9#9#9#9#9'this.subKernelOutputVari'
  +'ableNames.push(subKernel.name + ''Result'');'#13#10#9#9#9#9'}'#13#10#9#9#9
  +'} else if (this.subKernelProperties !== null) {'#13#10#9#9#9#9'var _ext = t'
  +'his.ext = gl.getExtension(''WEBGL_draw_buffers'');'#13#10#9#9#9#9'if (!_ext'
  +') throw new Error(''could not instantiate draw buffers extension'');'#13#10
  +#9#9#9#9'this.subKernelOutputTextures = [];'#13#10#9#9#9#9'this.subKernelOut'
  +'putVariableNames = [];'#13#10#9#9#9#9'var _i4 = 0;'#13#10#9#9#9#9'for (var '
  +'p in this.subKernelProperties) {'#13#10#9#9#9#9#9'if (!this.subKernelProper'
  +'ties.hasOwnProperty(p)) continue;'#13#10#9#9#9#9#9'var _subKernel = this.su'
  +'bKernelProperties[p];'#13#10#9#9#9#9#9'builder.addSubKernel(_subKernel, {'
  +#13#10#9#9#9#9#9#9'prototypeOnly: false,'#13#10#9#9#9#9#9#9'constants: this.'
  +'constants,'#13#10#9#9#9#9#9#9'output: this.output,'#13#10#9#9#9#9#9#9'debug'
  +': this.debug,'#13#10#9#9#9#9#9#9'loopMaxIterations: this.loopMaxIterations'
  +#13#10#9#9#9#9#9'});'#13#10#9#9#9#9#9'this.subKernelOutputTextures.push(this'
  +'.getSubKernelTexture(p));'#13#10#9#9#9#9#9'this.subKernelOutputVariableName'
  +'s.push(_subKernel.name + ''Result'');'#13#10#9#9#9#9#9'_i4++;'#13#10#9#9#9#9
  +'}'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''_'
  +'getFragShaderString'','#13#10#9#9'value: function _getFragShaderString(args'
  +') {'#13#10#9#9#9'if (this.compiledFragShaderString !== null) {'#13#10#9#9#9
  +#9'return this.compiledFragShaderString;'#13#10#9#9#9'}'#13#10#9#9#9'return '
  +'this.compiledFragShaderString = this._replaceArtifacts(fragShaderString, th'
  +'is._getFragShaderArtifactMap(args));'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  +#13#10#9#9'key: ''_getVertShaderString'','#13#10#9#9'value: function _getVer'
  +'tShaderString(args) {'#13#10#9#9#9'if (this.compiledVertShaderString !== nu'
  +'ll) {'#13#10#9#9#9#9'return this.compiledVertShaderString;'#13#10#9#9#9'}'
  +#13#10#9#9#9'return this.compiledVertShaderString = vertShaderString;'#13#10
  +#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''toString'','#13#10#9#9'va'
  +'lue: function toString() {'#13#10#9#9#9'return kernelString(this);'#13#10#9
  +#9'}'#13#10#9'}, {'#13#10#9#9'key: ''addFunction'','#13#10#9#9'value: functi'
  +'on addFunction(fn) {'#13#10#9#9#9'this.functionBuilder.addFunction(null, fn'
  +');'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return WebGLKernel;'#13#10'}(K'
  +'ernelBase);'#13#10'},{"../../core/texture":23,"../../core/utils":25,"../ker'
  +'nel-base":8,"./kernel-string":13,"./shader-frag":16,"./shader-vert":17}],15'
  +':[function(require,module,exports){'#13#10'''use strict'';'#13#10#13#10'var'
  +' _createClass = function () { function defineProperties(target, props) { fo'
  +'r (var i = 0; i < props.length; i++) { var descriptor = props[i]; descripto'
  +'r.enumerable = descriptor.enumerable || false; descriptor.configurable = tr'
  +'ue; if ("value" in descriptor) descriptor.writable = true; Object.definePro'
  +'perty(target, descriptor.key, descriptor); } } return function (Constructor'
  +', protoProps, staticProps) { if (protoProps) defineProperties(Constructor.p'
  +'rototype, protoProps); if (staticProps) defineProperties(Constructor, stati'
  +'cProps); return Constructor; }; }();'#13#10#13#10'function _classCallCheck('
  +'instance, Constructor) { if (!(instance instanceof Constructor)) { throw ne'
  +'w TypeError("Cannot call a class as a function"); } }'#13#10#13#10'function'
  +' _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceE'
  +'rror("this hasn''t been initialised - super() hasn''t been called"); } retu'
  +'rn call && (typeof call === "object" || typeof call === "function") ? call '
  +': self; }'#13#10#13#10'function _inherits(subClass, superClass) { if (typeo'
  +'f superClass !== "function" && superClass !== null) { throw new TypeError("'
  +'Super expression must either be null or a function, not " + typeof superCla'
  +'ss); } subClass.prototype = Object.create(superClass && superClass.prototyp'
  +'e, { constructor: { value: subClass, enumerable: false, writable: true, con'
  +'figurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPro'
  +'totypeOf(subClass, superClass) : subClass.__proto__ = superClass; }'#13#10
  +#13#10'var RunnerBase = require(''../runner-base'');'#13#10'var WebGLKernel '
  +'= require(''./kernel'');'#13#10'var utils = require(''../../core/utils'');'
  +#13#10'var WebGLFunctionBuilder = require(''./function-builder'');'#13#10#13
  +#10'module.exports = function (_RunnerBase) {'#13#10#9'_inherits(WebGLRunner'
  +', _RunnerBase);'#13#10#13#10#9'function WebGLRunner(settings) {'#13#10#9#9
  +'_classCallCheck(this, WebGLRunner);'#13#10#13#10#9#9'var _this = _possibleC'
  +'onstructorReturn(this, (WebGLRunner.__proto__ || Object.getPrototypeOf(WebG'
  +'LRunner)).call(this, new WebGLFunctionBuilder(), settings));'#13#10#13#10#9
  +#9'_this.Kernel = WebGLKernel;'#13#10#9#9'_this.kernel = null;'#13#10#9#9're'
  ,'turn _this;'#13#10#9'}'#13#10#13#10#13#10#13#10#9'_createClass(WebGLRunner,'
  +' [{'#13#10#9#9'key: ''getMode'','#13#10#9#9'value: function getMode() {'#13
  +#10#9#9#9'return ''gpu'';'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return W'
  +'ebGLRunner;'#13#10'}(RunnerBase);'#13#10'},{"../../core/utils":25,"../runne'
  +'r-base":10,"./function-builder":11,"./kernel":14}],16:[function(require,mod'
  +'ule,exports){'#13#10'"use strict";'#13#10#13#10'module.exports = "__HEADER_'
  +'_;\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D'
  +';\n\nconst float LOOP_MAX = __LOOP_MAX__;\n#define EPSILON 0.0000001;\n\n__'
  +'CONSTANTS__;\n\nvarying highp vec2 vTexCoord;\n\nvec4 round(vec4 x) {\n  re'
  +'turn floor(x + 0.5);\n}\n\nhighp float round(highp float x) {\n  return flo'
  +'or(x + 0.5);\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(m'
  +'od(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMo'
  +'d(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1'
  +'.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res ='
  +' floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nhighp '
  +'float integerMod(highp float x, highp float y) {\n  highp float res = floor'
  +'(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nhigh'
  +'p int integerMod(highp int x, highp int y) {\n  return int(integerMod(float'
  +'(x), float(y)));\n}\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n/'
  +'/ YOU WILL BREAK SOMETHING ON SOMEBODY''S MACHINE\n// LEAVE IT AS IT IS, LE'
  +'ST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\ncons'
  +'t vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FAC'
  +'TOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65'
  +'536\nhighp float decode32(highp vec4 rgba) {\n  __DECODE32_ENDIANNESS__;\n '
  +' rgba *= 255.0;\n  vec2 gte128;\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\'
  +'n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * rgba.a'
  +' - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n '
  +' rgba.b = rgba.b - 128.0 * gte128.x;\n  res = dot(rgba, SCALE_FACTOR) * exp'
  +'2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return r'
  +'es;\n}\n\nhighp vec4 encode32(highp float f) {\n  highp float F = abs(f);\n'
  +'  highp float sign = f < 0.0 ? 1.0 : 0.0;\n  highp float exponent = floor(l'
  +'og2(F));\n  highp float mantissa = (exp2(-exponent) * F);\n  // exponent +='
  +' floor(log2(mantissa));\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCAL'
  +'E_FACTOR_INV;\n  rgba.rg = integerMod(rgba.rg, 256.0);\n  rgba.b = integerM'
  +'od(rgba.b, 128.0);\n  rgba.a = exponent*0.5 + 63.5;\n  rgba.ba += vec2(inte'
  +'gerMod(exponent+127.0, 2.0), sign) * 128.0;\n  rgba = floor(rgba);\n  rgba '
  +'*= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return rgba;\n}\n//'
  +' Dragons end here\n\nhighp float index;\nhighp vec3 threadId;\n\nhighp vec3'
  +' indexTo3D(highp float idx, highp vec3 texDim) {\n  highp float z = floor(i'
  +'dx / (texDim.x * texDim.y));\n  idx -= z * texDim.x * texDim.y;\n  highp fl'
  +'oat y = floor(idx / texDim.x);\n  highp float x = integerMod(idx, texDim.x)'
  +';\n  return vec3(x, y, z);\n}\n\nhighp float get(highp sampler2D tex, highp'
  +' vec2 texSize, highp vec3 texDim, highp float z, highp float y, highp float'
  +' x) {\n  highp vec3 xyz = vec3(x, y, z);\n  xyz = floor(xyz + 0.5);\n  __GE'
  +'T_WRAPAROUND__;\n  highp float index = round(xyz.x + texDim.x * (xyz.y + te'
  +'xDim.y * xyz.z));\n  __GET_TEXTURE_CHANNEL__;\n  highp float w = round(texS'
  +'ize.x);\n  vec2 st = vec2(integerMod(index, w), float(int(index) / int(w)))'
  +' + 0.5;\n  __GET_TEXTURE_INDEX__;\n  highp vec4 texel = texture2D(tex, st /'
  +' texSize);\n  __GET_RESULT__;\n}\n\nhighp float get(highp sampler2D tex, hi'
  +'ghp vec2 texSize, highp vec3 texDim, highp float y, highp float x) {\n  ret'
  +'urn get(tex, texSize, texDim, 0.0, y, x);\n}\n\nhighp float get(highp sampl'
  +'er2D tex, highp vec2 texSize, highp vec3 texDim, highp float x) {\n  return'
  +' get(tex, texSize, texDim, 0.0, 0.0, x);\n}\n\nhighp vec4 actualColor;\nvoi'
  +'d color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a'
  +');\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\'
  +'n__MAIN_PARAMS__;\n__MAIN_CONSTANTS__;\n__KERNEL__;\n\nvoid main(void) {\n '
  +' index = floor(vTexCoord.s * float(uTexSize.x)) + floor(vTexCoord.t * float'
  +'(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}";'#13#10'},{}],17:[funct'
  +'ion(require,module,exports){'#13#10'"use strict";'#13#10#13#10'module.expor'
  +'ts = "precision highp float;\nprecision highp int;\nprecision highp sampler'
  +'2D;\n\nattribute highp vec2 aPos;\nattribute highp vec2 aTexCoord;\n\nvaryi'
  +'ng highp vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Po'
  +'sition = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aT'
  +'exCoord;\n}";'#13#10'},{}],18:[function(require,module,exports){'#13#10'''u'
  ,'se strict'';'#13#10#13#10'var _createClass = function () { function defineP'
  +'roperties(target, props) { for (var i = 0; i < props.length; i++) { var des'
  +'criptor = props[i]; descriptor.enumerable = descriptor.enumerable || false;'
  +' descriptor.configurable = true; if ("value" in descriptor) descriptor.writ'
  +'able = true; Object.defineProperty(target, descriptor.key, descriptor); } }'
  +' return function (Constructor, protoProps, staticProps) { if (protoProps) d'
  +'efineProperties(Constructor.prototype, protoProps); if (staticProps) define'
  +'Properties(Constructor, staticProps); return Constructor; }; }();'#13#10#13
  +#10'function _classCallCheck(instance, Constructor) { if (!(instance instanc'
  +'eof Constructor)) { throw new TypeError("Cannot call a class as a function"'
  +'); } }'#13#10#13#10'function _possibleConstructorReturn(self, call) { if (!'
  +'self) { throw new ReferenceError("this hasn''t been initialised - super() h'
  +'asn''t been called"); } return call && (typeof call === "object" || typeof '
  +'call === "function") ? call : self; }'#13#10#13#10'function _inherits(subCl'
  +'ass, superClass) { if (typeof superClass !== "function" && superClass !== n'
  +'ull) { throw new TypeError("Super expression must either be null or a funct'
  +'ion, not " + typeof superClass); } subClass.prototype = Object.create(super'
  +'Class && superClass.prototype, { constructor: { value: subClass, enumerable'
  +': false, writable: true, configurable: true } }); if (superClass) Object.se'
  +'tPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__pro'
  +'to__ = superClass; }'#13#10#13#10'var WebGLKernel = require(''./kernel'');'
  +#13#10'var utils = require(''../../core/utils'');'#13#10#13#10'module.export'
  +'s = function (_WebGLKernel) {'#13#10#9'_inherits(WebGLValidatorKernel, _Web'
  +'GLKernel);'#13#10#13#10#9'function WebGLValidatorKernel() {'#13#10#9#9'_cla'
  +'ssCallCheck(this, WebGLValidatorKernel);'#13#10#13#10#9#9'return _possibleC'
  +'onstructorReturn(this, (WebGLValidatorKernel.__proto__ || Object.getPrototy'
  +'peOf(WebGLValidatorKernel)).apply(this, arguments));'#13#10#9'}'#13#10#13#10
  +#9'_createClass(WebGLValidatorKernel, [{'#13#10#9#9'key: ''validateOptions'''
  +','#13#10#13#10#13#10#9#9'value: function validateOptions() {'#13#10#9#9#9't'
  +'his.texSize = utils.dimToTexSize({'#13#10#9#9#9#9'floatTextures: this.float'
  +'Textures,'#13#10#9#9#9#9'floatOutput: this.floatOutput'#13#10#9#9#9'}, this'
  +'.output, true);'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return WebGLValid'
  +'atorKernel;'#13#10'}(WebGLKernel);'#13#10'},{"../../core/utils":25,"./kerne'
  +'l":14}],19:[function(require,module,exports){'#13#10'''use strict'';'#13#10
  +#13#10'var utils = require(''./utils'');'#13#10'module.exports = function al'
  +'ias(name, fn) {'#13#10#9'var fnString = fn.toString();'#13#10#9'return new '
  +'Function(''return function '' + name + '' ('' + utils.getParamNamesFromStri'
  +'ng(fnString).join('', '') + '') {'' + utils.getFunctionBodyFromString(fnStr'
  +'ing) + ''}'')();'#13#10'};'#13#10'},{"./utils":25}],20:[function(require,mo'
  +'dule,exports){'#13#10'''use strict'';'#13#10#13#10'var _createClass = funct'
  +'ion () { function defineProperties(target, props) { for (var i = 0; i < pro'
  +'ps.length; i++) { var descriptor = props[i]; descriptor.enumerable = descri'
  +'ptor.enumerable || false; descriptor.configurable = true; if ("value" in de'
  +'scriptor) descriptor.writable = true; Object.defineProperty(target, descrip'
  +'tor.key, descriptor); } } return function (Constructor, protoProps, staticP'
  +'rops) { if (protoProps) defineProperties(Constructor.prototype, protoProps)'
  +'; if (staticProps) defineProperties(Constructor, staticProps); return Const'
  +'ructor; }; }();'#13#10#13#10'function _classCallCheck(instance, Constructor'
  +') { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot c'
  +'all a class as a function"); } }'#13#10#13#10'var UtilsCore = require("./ut'
  +'ils-core");'#13#10#13#10'module.exports = function () {'#13#10#9'function G'
  +'PUCore() {'#13#10#9#9'_classCallCheck(this, GPUCore);'#13#10#9'}'#13#10#13
  +#10#9'_createClass(GPUCore, null, [{'#13#10#9#9'key: "validateKernelObj",'#13
  +#10#13#10#13#10#9#9'value: function validateKernelObj(kernelObj) {'#13#10#13
  +#10#9#9#9'if (kernelObj === null) {'#13#10#9#9#9#9'throw "KernelObj being va'
  +'lidated is NULL";'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (typeof kernelObj =='
  +'= "string") {'#13#10#9#9#9#9'try {'#13#10#9#9#9#9#9'kernelObj = JSON.parse('
  +'kernelObj);'#13#10#9#9#9#9'} catch (e) {'#13#10#9#9#9#9#9'console.error(e);'
  +#13#10#9#9#9#9#9'throw "Failed to convert KernelObj from JSON string";'#13#10
  +#9#9#9#9'}'#13#10#13#10#9#9#9#9'if (kernelObj === null) {'#13#10#9#9#9#9#9't'
  +'hrow "Invalid (NULL) KernelObj JSON string representation";'#13#10#9#9#9#9
  +'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (kernelObj.isKernelObj !== true) {'
  +#13#10#9#9#9#9'throw "Failed missing isKernelObj flag check";'#13#10#9#9#9'}'
  +#13#10#13#10#9#9#9'return kernelObj;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  ,#13#10#9#9'key: "loadKernelObj",'#13#10#9#9'value: function loadKernelObj(ke'
  +'rnelObj, inOpt) {'#13#10#13#10#9#9#9'kernelObj = validateKernelObj(kernelOb'
  +'j);'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return GPUCore;'#13#10'}();'
  +#13#10'},{"./utils-core":24}],21:[function(require,module,exports){'#13#10
  +'''use strict'';'#13#10#13#10'var _createClass = function () { function defi'
  +'neProperties(target, props) { for (var i = 0; i < props.length; i++) { var '
  +'descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || fal'
  +'se; descriptor.configurable = true; if ("value" in descriptor) descriptor.w'
  +'ritable = true; Object.defineProperty(target, descriptor.key, descriptor); '
  +'} } return function (Constructor, protoProps, staticProps) { if (protoProps'
  +') defineProperties(Constructor.prototype, protoProps); if (staticProps) def'
  +'ineProperties(Constructor, staticProps); return Constructor; }; }();'#13#10
  +#13#10'function _classCallCheck(instance, Constructor) { if (!(instance inst'
  +'anceof Constructor)) { throw new TypeError("Cannot call a class as a functi'
  +'on"); } }'#13#10#13#10'function _possibleConstructorReturn(self, call) { if'
  +' (!self) { throw new ReferenceError("this hasn''t been initialised - super('
  +') hasn''t been called"); } return call && (typeof call === "object" || type'
  +'of call === "function") ? call : self; }'#13#10#13#10'function _inherits(su'
  +'bClass, superClass) { if (typeof superClass !== "function" && superClass !='
  +'= null) { throw new TypeError("Super expression must either be null or a fu'
  +'nction, not " + typeof superClass); } subClass.prototype = Object.create(su'
  +'perClass && superClass.prototype, { constructor: { value: subClass, enumera'
  +'ble: false, writable: true, configurable: true } }); if (superClass) Object'
  +'.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__'
  +'proto__ = superClass; }'#13#10#13#10'var utils = require(''./utils'');'#13
  +#10'var WebGLRunner = require(''../backend/web-gl/runner'');'#13#10'var CPUR'
  +'unner = require(''../backend/cpu/runner'');'#13#10'var WebGLValidatorKernel'
  +' = require(''../backend/web-gl/validator-kernel'');'#13#10'var GPUCore = re'
  +'quire("./gpu-core");'#13#10#13#10#13#10'var GPU = function (_GPUCore) {'#13
  +#10#9'_inherits(GPU, _GPUCore);'#13#10#13#10#9'function GPU(settings) {'#13
  +#10#9#9'_classCallCheck(this, GPU);'#13#10#13#10#9#9'var _this = _possibleCo'
  +'nstructorReturn(this, (GPU.__proto__ || Object.getPrototypeOf(GPU)).call(th'
  +'is, settings));'#13#10#13#10#9#9'settings = settings || {};'#13#10#9#9'_thi'
  +'s._canvas = settings.canvas || null;'#13#10#9#9'_this._webGl = settings.web'
  +'Gl || null;'#13#10#9#9'var mode = settings.mode;'#13#10#9#9'var detectedMod'
  +'e = void 0;'#13#10#9#9'if (!utils.isWebGlSupported()) {'#13#10#9#9#9'if (mo'
  +'de && mode !== ''cpu'') {'#13#10#9#9#9#9'throw new Error(''A requested mode'
  +' of "'' + mode + ''" and is not supported'');'#13#10#9#9#9'} else {'#13#10#9
  +#9#9#9'console.warn(''Warning: gpu not supported, falling back to cpu suppor'
  +'t'');'#13#10#9#9#9#9'detectedMode = ''cpu'';'#13#10#9#9#9'}'#13#10#9#9'} el'
  +'se {'#13#10#9#9#9'detectedMode = mode || ''gpu'';'#13#10#9#9'}'#13#10#13#10
  +#9#9'_this.kernels = [];'#13#10#13#10#9#9'var runnerSettings = {'#13#10#9#9#9
  +'canvas: _this._canvas,'#13#10#9#9#9'webGl: _this._webGl'#13#10#9#9'};'#13#10
  +#13#10#9#9'switch (detectedMode) {'#13#10#9#9#9'case ''cpu'':'#13#10#9#9#9#9
  +'_this._runner = new CPURunner(runnerSettings);'#13#10#9#9#9#9'break;'#13#10
  +#9#9#9'case ''webgl'':'#13#10#9#9#9'case ''gpu'':'#13#10#9#9#9#9'_this._runn'
  +'er = new WebGLRunner(runnerSettings);'#13#10#9#9#9#9'break;'#13#10#9#9#9'ca'
  +'se ''webgl-validator'':'#13#10#9#9#9#9'_this._runner = new WebGLRunner(runn'
  +'erSettings);'#13#10#9#9#9#9'_this._runner.Kernel = WebGLValidatorKernel;'#13
  +#10#9#9#9#9'break;'#13#10#9#9#9'default:'#13#10#9#9#9#9'throw new Error(''"'
  +''' + mode + ''" mode is not defined'');'#13#10#9#9'}'#13#10#9#9'return _thi'
  +'s;'#13#10#9'}'#13#10#13#10#13#10#9'_createClass(GPU, [{'#13#10#9#9'key: ''c'
  +'reateKernel'','#13#10#9#9'value: function createKernel(fn, settings) {'#13
  +#10#9#9#9'if (typeof fn === ''undefined'') {'#13#10#9#9#9#9'throw ''Missing '
  +'fn parameter'';'#13#10#9#9#9'}'#13#10#9#9#9'if (!utils.isFunction(fn) && ty'
  +'peof fn !== ''string'') {'#13#10#9#9#9#9'throw ''fn parameter not a functio'
  +'n'';'#13#10#9#9#9'}'#13#10#13#10#9#9#9'var kernel = this._runner.buildKerne'
  +'l(fn, settings || {});'#13#10#13#10#9#9#9'if (!this._canvas) {'#13#10#9#9#9
  +#9'this._canvas = kernel.getCanvas();'#13#10#9#9#9'}'#13#10#9#9#9'if (!this.'
  +'_runner.canvas) {'#13#10#9#9#9#9'this._runner.canvas = kernel.getCanvas();'
  +#13#10#9#9#9'}'#13#10#13#10#9#9#9'this.kernels.push(kernel);'#13#10#13#10#9#9
  +#9'return kernel;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''c'
  +'reateKernelMap'','#13#10#9#9'value: function createKernelMap() {'#13#10#9#9
  +#9'var fn = void 0;'#13#10#9#9#9'var settings = void 0;'#13#10#9#9#9'if (typ'
  ,'eof arguments[arguments.length - 2] === ''function'') {'#13#10#9#9#9#9'fn ='
  +' arguments[arguments.length - 2];'#13#10#9#9#9#9'settings = arguments[argum'
  +'ents.length - 1];'#13#10#9#9#9'} else {'#13#10#9#9#9#9'fn = arguments[argum'
  +'ents.length - 1];'#13#10#9#9#9'}'#13#10#13#10#9#9#9'if (!utils.isWebGlDrawB'
  +'uffersSupported()) {'#13#10#9#9#9#9'this._runner = new CPURunner(settings);'
  +#13#10#9#9#9'}'#13#10#13#10#9#9#9'var kernel = this.createKernel(fn, setting'
  +'s);'#13#10#9#9#9'if (Array.isArray(arguments[0])) {'#13#10#9#9#9#9'var func'
  +'tions = arguments[0];'#13#10#9#9#9#9'for (var i = 0; i < functions.length; '
  +'i++) {'#13#10#9#9#9#9#9'kernel.addSubKernel(functions[i]);'#13#10#9#9#9#9'}'
  +#13#10#9#9#9'} else {'#13#10#9#9#9#9'var _functions = arguments[0];'#13#10#9
  +#9#9#9'for (var p in _functions) {'#13#10#9#9#9#9#9'if (!_functions.hasOwnPr'
  +'operty(p)) continue;'#13#10#9#9#9#9#9'kernel.addSubKernelProperty(p, _funct'
  +'ions[p]);'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return kernel;'
  +#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''combineKernels'','
  +#13#10#9#9'value: function combineKernels() {'#13#10#9#9#9'var lastKernel = '
  +'arguments[arguments.length - 2];'#13#10#9#9#9'var combinedKernel = argument'
  +'s[arguments.length - 1];'#13#10#9#9#9'if (this.getMode() === ''cpu'') retur'
  +'n combinedKernel;'#13#10#13#10#9#9#9'var canvas = arguments[0].getCanvas();'
  +#13#10#9#9#9'var webGl = arguments[0].getWebGl();'#13#10#13#10#9#9#9'for (va'
  +'r i = 0; i < arguments.length - 1; i++) {'#13#10#9#9#9#9'arguments[i].setCa'
  +'nvas(canvas).setWebGl(webGl).setOutputToTexture(true);'#13#10#9#9#9'}'#13#10
  +#13#10#9#9#9'return function () {'#13#10#9#9#9#9'combinedKernel.apply(null, '
  +'arguments);'#13#10#9#9#9#9'var texSize = lastKernel.texSize;'#13#10#9#9#9#9
  +'var gl = lastKernel.getWebGl();'#13#10#9#9#9#9'var threadDim = lastKernel.t'
  +'hreadDim;'#13#10#9#9#9#9'var result = void 0;'#13#10#9#9#9#9'if (lastKernel'
  +'.floatOutput) {'#13#10#9#9#9#9#9'result = new Float32Array(texSize[0] * tex'
  +'Size[1] * 4);'#13#10#9#9#9#9#9'gl.readPixels(0, 0, texSize[0], texSize[1], '
  +'gl.RGBA, gl.FLOAT, result);'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'var by'
  +'tes = new Uint8Array(texSize[0] * texSize[1] * 4);'#13#10#9#9#9#9#9'gl.read'
  +'Pixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);'#13
  +#10#9#9#9#9#9'result = new Float32Array(bytes.buffer);'#13#10#9#9#9#9'}'#13
  +#10#13#10#9#9#9#9'result = result.subarray(0, threadDim[0] * threadDim[1] * '
  +'threadDim[2]);'#13#10#13#10#9#9#9#9'if (lastKernel.output.length === 1) {'
  +#13#10#9#9#9#9#9'return result;'#13#10#9#9#9#9'} else if (lastKernel.output.'
  +'length === 2) {'#13#10#9#9#9#9#9'return utils.splitArray(result, lastKernel'
  +'.output[0]);'#13#10#9#9#9#9'} else if (lastKernel.output.length === 3) {'#13
  +#10#9#9#9#9#9'var cube = utils.splitArray(result, lastKernel.output[0] * las'
  +'tKernel.output[1]);'#13#10#9#9#9#9#9'return cube.map(function (x) {'#13#10#9
  +#9#9#9#9#9'return utils.splitArray(x, lastKernel.output[0]);'#13#10#9#9#9#9#9
  +'});'#13#10#9#9#9#9'}'#13#10#9#9#9'};'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  +#13#10#9#9'key: ''addFunction'','#13#10#9#9'value: function addFunction(fn, '
  +'paramTypes, returnType) {'#13#10#9#9#9'this._runner.functionBuilder.addFunc'
  +'tion(null, fn, paramTypes, returnType);'#13#10#9#9#9'return this;'#13#10#9#9
  +'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''addNativeFunction'','#13#10#9
  +#9'value: function addNativeFunction(name, nativeFunction) {'#13#10#9#9#9'th'
  +'is._runner.functionBuilder.addNativeFunction(name, nativeFunction);'#13#10#9
  +#9#9'return this;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''g'
  +'etMode'','#13#10#9#9'value: function getMode() {'#13#10#9#9#9'return this._'
  +'runner.getMode();'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: '''
  +'isWebGlSupported'','#13#10#9#9'value: function isWebGlSupported() {'#13#10#9
  +#9#9'return utils.isWebGlSupported();'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'
  +#13#10#9#9'key: ''getCanvas'','#13#10#9#9'value: function getCanvas() {'#13
  +#10#9#9#9'return this._canvas;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10
  +#9#9'key: ''getWebGl'','#13#10#9#9'value: function getWebGl() {'#13#10#9#9#9
  +'return this._webGl;'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return GPU;'
  +#13#10'}(GPUCore);'#13#10#13#10';'#13#10#13#10'Object.assign(GPU, GPUCore);'
  +#13#10#13#10'module.exports = GPU;'#13#10'},{"../backend/cpu/runner":5,"../b'
  +'ackend/web-gl/runner":15,"../backend/web-gl/validator-kernel":18,"./gpu-cor'
  +'e":20,"./utils":25}],22:[function(require,module,exports){'#13#10'"use stri'
  +'ct";'#13#10#13#10'function _classCallCheck(instance, Constructor) { if (!(i'
  +'nstance instanceof Constructor)) { throw new TypeError("Cannot call a class'
  +' as a function"); } }'#13#10#13#10'module.exports = function Input(value, s'
  +'ize) {'#13#10#9'_classCallCheck(this, Input);'#13#10#13#10#9'this.value = v'
  +'alue;'#13#10#9'if (Array.isArray(size)) {'#13#10#9#9'this.size = [];'#13#10
  ,#9#9'for (var i = 0; i < size.length; i++) {'#13#10#9#9#9'this.size[i] = siz'
  +'e[i];'#13#10#9#9'}'#13#10#9#9'while (this.size.length < 3) {'#13#10#9#9#9't'
  +'his.size.push(1);'#13#10#9#9'}'#13#10#9'} else {'#13#10#9#9'if (size.z) {'
  +#13#10#9#9#9'this.size = [size.x, size.y, size.z];'#13#10#9#9'} else if (siz'
  +'e.y) {'#13#10#9#9#9'this.size = [size.x, size.y, 1];'#13#10#9#9'} else {'#13
  +#10#9#9#9'this.size = [size.x, 1, 1];'#13#10#9#9'}'#13#10#9'}'#13#10'};'#13
  +#10'},{}],23:[function(require,module,exports){'#13#10'''use strict'';'#13#10
  +#13#10'var _createClass = function () { function defineProperties(target, pr'
  +'ops) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; '
  +'descriptor.enumerable = descriptor.enumerable || false; descriptor.configur'
  +'able = true; if ("value" in descriptor) descriptor.writable = true; Object.'
  +'defineProperty(target, descriptor.key, descriptor); } } return function (Co'
  +'nstructor, protoProps, staticProps) { if (protoProps) defineProperties(Cons'
  +'tructor.prototype, protoProps); if (staticProps) defineProperties(Construct'
  +'or, staticProps); return Constructor; }; }();'#13#10#13#10'function _classC'
  +'allCheck(instance, Constructor) { if (!(instance instanceof Constructor)) {'
  +' throw new TypeError("Cannot call a class as a function"); } }'#13#10#13#10
  +'var gpu = null;'#13#10#13#10'module.exports = function () {'#13#10#13#10#9
  +'function Texture(texture, size, output, webGl) {'#13#10#9#9'_classCallCheck'
  +'(this, Texture);'#13#10#13#10#9#9'this.texture = texture;'#13#10#9#9'this.s'
  +'ize = size;'#13#10#9#9'this.output = output;'#13#10#9#9'this.webGl = webGl;'
  +#13#10#9#9'this.kernel = null;'#13#10#9'}'#13#10#13#10#13#10#13#10#9'_create'
  +'Class(Texture, [{'#13#10#9#9'key: ''toArray'','#13#10#9#9'value: function t'
  +'oArray(gpu) {'#13#10#9#9#9'if (!gpu) throw new Error(''You need to pass the'
  +' GPU object for toArray to work.'');'#13#10#9#9#9'if (this.kernel) return t'
  +'his.kernel(this);'#13#10#13#10#9#9#9'this.kernel = gpu.createKernel(functio'
  +'n (x) {'#13#10#9#9#9#9'return x[this.thread.z][this.thread.y][this.thread.x'
  +'];'#13#10#9#9#9'}).setOutput(this.output);'#13#10#13#10#9#9#9'return this.k'
  +'ernel(this);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''delet'
  +'e'','#13#10#9#9'value: function _delete() {'#13#10#9#9#9'return this.webGl.'
  +'deleteTexture(this.texture);'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'retu'
  +'rn Texture;'#13#10'}();'#13#10'},{}],24:[function(require,module,exports){'
  +#13#10'''use strict'';'#13#10#13#10#13#10'var _createClass = function () { f'
  +'unction defineProperties(target, props) { for (var i = 0; i < props.length;'
  +' i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enume'
  +'rable || false; descriptor.configurable = true; if ("value" in descriptor) '
  +'descriptor.writable = true; Object.defineProperty(target, descriptor.key, d'
  +'escriptor); } } return function (Constructor, protoProps, staticProps) { if'
  +' (protoProps) defineProperties(Constructor.prototype, protoProps); if (stat'
  +'icProps) defineProperties(Constructor, staticProps); return Constructor; };'
  +' }();'#13#10#13#10'function _classCallCheck(instance, Constructor) { if (!('
  +'instance instanceof Constructor)) { throw new TypeError("Cannot call a clas'
  +'s as a function"); } }'#13#10#13#10'var UtilsCore = function () {'#13#10#9
  +'function UtilsCore() {'#13#10#9#9'_classCallCheck(this, UtilsCore);'#13#10#9
  +'}'#13#10#13#10#9'_createClass(UtilsCore, null, [{'#13#10#9#9'key: ''isCanva'
  +'s'','#13#10#13#10#13#10#13#10#13#10#13#10#9#9'value: function isCanvas(canv'
  +'asObj) {'#13#10#9#9#9'return canvasObj !== null && canvasObj.nodeName && ca'
  +'nvasObj.getContext && canvasObj.nodeName.toUpperCase() === ''CANVAS'';'#13
  +#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''isCanvasSupported'','
  +#13#10#9#9'value: function isCanvasSupported() {'#13#10#9#9#9'return _isCanv'
  +'asSupported;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''initC'
  +'anvas'','#13#10#9#9'value: function initCanvas() {'#13#10#9#9#9'if (!_isCan'
  +'vasSupported) {'#13#10#9#9#9#9'return null;'#13#10#9#9#9'}'#13#10#13#10#9#9
  +#9'var canvas = document.createElement(''canvas'');'#13#10#13#10#9#9#9'canva'
  +'s.width = 2;'#13#10#9#9#9'canvas.height = 2;'#13#10#13#10#9#9#9'return canv'
  +'as;'#13#10#9#9'}'#13#10#13#10#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''is'
  +'WebGl'','#13#10#9#9'value: function isWebGl(webGlObj) {'#13#10#9#9#9'return'
  +' webGlObj && typeof webGlObj.getExtension === ''function'';'#13#10#9#9'}'#13
  +#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''isWebGlSupported'','#13#10#9#9'valu'
  +'e: function isWebGlSupported() {'#13#10#9#9#9'return _isWebGlSupported;'#13
  +#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''isWebGlDrawBuffersSupported'','#13
  +#10#9#9'value: function isWebGlDrawBuffersSupported() {'#13#10#9#9#9'return '
  +'_isWebGlDrawBuffersSupported;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10
  +#9#9'key: ''initWebGlDefaultOptions'','#13#10#9#9'value: function initWebGlD'
  ,'efaultOptions() {'#13#10#9#9#9'return {'#13#10#9#9#9#9'alpha: false,'#13#10
  +#9#9#9#9'depth: false,'#13#10#9#9#9#9'antialias: false'#13#10#9#9#9'};'#13#10
  +#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''initWebGl'','#13#10#9#9'v'
  +'alue: function initWebGl(canvasObj) {'#13#10#13#10#9#9#9'if (typeof _isCanv'
  +'asSupported !== ''undefined'' || canvasObj === null) {'#13#10#9#9#9#9'if (!'
  +'_isCanvasSupported) {'#13#10#9#9#9#9#9'return null;'#13#10#9#9#9#9'}'#13#10
  +#9#9#9'}'#13#10#13#10#9#9#9'if (!UtilsCore.isCanvas(canvasObj)) {'#13#10#9#9
  +#9#9'throw new Error(''Invalid canvas object - '' + canvasObj);'#13#10#9#9#9
  +'}'#13#10#13#10#9#9#9'var webGl = canvasObj.getContext(''experimental-webgl'
  +''', UtilsCore.initWebGlDefaultOptions()) || canvasObj.getContext(''webgl'','
  +' UtilsCore.initWebGlDefaultOptions());'#13#10#13#10#9#9#9'if (webGl) {'#13
  +#10#9#9#9#9'webGl.OES_texture_float = webGl.getExtension(''OES_texture_float'
  +''');'#13#10#9#9#9#9'webGl.OES_texture_float_linear = webGl.getExtension(''O'
  +'ES_texture_float_linear'');'#13#10#9#9#9#9'webGl.OES_element_index_uint = w'
  +'ebGl.getExtension(''OES_element_index_uint'');'#13#10#9#9#9'}'#13#10#13#10#9
  +#9#9'return webGl;'#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return UtilsCor'
  +'e;'#13#10'}();'#13#10#13#10#13#10'var _isCanvasSupported = typeof document '
  +'!== ''undefined'' ? UtilsCore.isCanvas(document.createElement(''canvas'')) '
  +': false;'#13#10'var _testingWebGl = UtilsCore.initWebGl(UtilsCore.initCanva'
  +'s());'#13#10'var _isWebGlSupported = UtilsCore.isWebGl(_testingWebGl);'#13
  +#10'var _isWebGlDrawBuffersSupported = _isWebGlSupported && Boolean(_testing'
  +'WebGl.getExtension(''WEBGL_draw_buffers''));'#13#10#13#10'if (_isWebGlSuppo'
  +'rted) {'#13#10#9'UtilsCore.OES_texture_float = _testingWebGl.OES_texture_fl'
  +'oat;'#13#10#9'UtilsCore.OES_texture_float_linear = _testingWebGl.OES_textur'
  +'e_float_linear;'#13#10#9'UtilsCore.OES_element_index_uint = _testingWebGl.O'
  +'ES_element_index_uint;'#13#10'} else {'#13#10#9'UtilsCore.OES_texture_float'
  +' = false;'#13#10#9'UtilsCore.OES_texture_float_linear = false;'#13#10#9'Uti'
  +'lsCore.OES_element_index_uint = false;'#13#10'}'#13#10#13#10'module.exports'
  +' = UtilsCore;'#13#10'},{}],25:[function(require,module,exports){'#13#10'''u'
  +'se strict'';'#13#10#13#10#13#10'var _typeof = typeof Symbol === "function" '
  +'&& typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj'
  +'; } : function (obj) { return obj && typeof Symbol === "function" && obj.co'
  +'nstructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }'
  +';'#13#10#13#10'var _createClass = function () { function defineProperties(t'
  +'arget, props) { for (var i = 0; i < props.length; i++) { var descriptor = p'
  +'rops[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor'
  +'.configurable = true; if ("value" in descriptor) descriptor.writable = true'
  +'; Object.defineProperty(target, descriptor.key, descriptor); } } return fun'
  +'ction (Constructor, protoProps, staticProps) { if (protoProps) defineProper'
  +'ties(Constructor.prototype, protoProps); if (staticProps) defineProperties('
  +'Constructor, staticProps); return Constructor; }; }();'#13#10#13#10'functio'
  +'n _classCallCheck(instance, Constructor) { if (!(instance instanceof Constr'
  +'uctor)) { throw new TypeError("Cannot call a class as a function"); } }'#13
  +#10#13#10'function _possibleConstructorReturn(self, call) { if (!self) { thr'
  +'ow new ReferenceError("this hasn''t been initialised - super() hasn''t been'
  +' called"); } return call && (typeof call === "object" || typeof call === "f'
  +'unction") ? call : self; }'#13#10#13#10'function _inherits(subClass, superC'
  +'lass) { if (typeof superClass !== "function" && superClass !== null) { thro'
  +'w new TypeError("Super expression must either be null or a function, not " '
  +'+ typeof superClass); } subClass.prototype = Object.create(superClass && su'
  +'perClass.prototype, { constructor: { value: subClass, enumerable: false, wr'
  +'itable: true, configurable: true } }); if (superClass) Object.setPrototypeO'
  +'f ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = supe'
  +'rClass; }'#13#10#13#10'var UtilsCore = require("./utils-core");'#13#10'var '
  +'Input = require(''./input'');'#13#10'var Texture = require(''./texture'');'
  +#13#10'var FUNCTION_NAME = /function ([^(]*)/;'#13#10#13#10'var STRIP_COMMEN'
  +'TS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;'#13#10#13#10'var ARGUMENT_NAMES = '
  +'/([^\s,]+)/g;'#13#10#13#10'var _systemEndianness = function () {'#13#10#9'v'
  +'ar b = new ArrayBuffer(4);'#13#10#9'var a = new Uint32Array(b);'#13#10#9'va'
  +'r c = new Uint8Array(b);'#13#10#9'a[0] = 0xdeadbeef;'#13#10#9'if (c[0] === '
  +'0xef) return ''LE'';'#13#10#9'if (c[0] === 0xde) return ''BE'';'#13#10#9'th'
  +'row new Error(''unknown endianness'');'#13#10'}();'#13#10#13#10'var _isFloa'
  +'tReadPixelsSupported = null;'#13#10#13#10'var _isMixedIdentifiersSupported '
  +'= function () {'#13#10#9'try {'#13#10#9#9'new Function(''let i = 1; const j'
  ,' = 1;'')();'#13#10#9#9'return true;'#13#10#9'} catch (e) {'#13#10#9#9'retur'
  +'n false;'#13#10#9'}'#13#10'}();'#13#10#13#10'var Utils = function (_UtilsCo'
  +'re) {'#13#10#9'_inherits(Utils, _UtilsCore);'#13#10#13#10#9'function Utils('
  +') {'#13#10#9#9'_classCallCheck(this, Utils);'#13#10#13#10#9#9'return _possi'
  +'bleConstructorReturn(this, (Utils.__proto__ || Object.getPrototypeOf(Utils)'
  +').apply(this, arguments));'#13#10#9'}'#13#10#13#10#9'_createClass(Utils, nu'
  +'ll, [{'#13#10#9#9'key: ''systemEndianness'','#13#10#13#10#13#10#13#10#9#9'v'
  +'alue: function systemEndianness() {'#13#10#9#9#9'return _systemEndianness;'
  +#13#10#9#9'}'#13#10#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''isFunction'','
  +#13#10#9#9'value: function isFunction(funcObj) {'#13#10#9#9#9'return typeof '
  +'funcObj === ''function'';'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9
  +'key: ''isFunctionString'','#13#10#9#9'value: function isFunctionString(func'
  +'Str) {'#13#10#9#9#9'if (funcStr !== null) {'#13#10#9#9#9#9'return funcStr.t'
  +'oString().slice(0, ''function''.length).toLowerCase() === ''function'';'#13
  +#10#9#9#9'}'#13#10#9#9#9'return false;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, '
  +'{'#13#10#9#9'key: ''getFunctionNameFromString'','#13#10#9#9'value: function'
  +' getFunctionNameFromString(funcStr) {'#13#10#9#9#9'return FUNCTION_NAME.exe'
  +'c(funcStr)[1];'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''getFunctionBody'
  +'FromString'','#13#10#9#9'value: function getFunctionBodyFromString(funcStr)'
  +' {'#13#10#9#9#9'return funcStr.substring(funcStr.indexOf(''{'') + 1, funcSt'
  +'r.lastIndexOf(''}''));'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'ke'
  +'y: ''getParamNamesFromString'','#13#10#9#9'value: function getParamNamesFro'
  +'mString(func) {'#13#10#9#9#9'var fnStr = func.toString().replace(STRIP_COMM'
  +'ENTS, '''');'#13#10#9#9#9'var result = fnStr.slice(fnStr.indexOf(''('') + 1'
  +', fnStr.indexOf('')'')).match(ARGUMENT_NAMES);'#13#10#9#9#9'if (result === '
  +'null) result = [];'#13#10#9#9#9'return result;'#13#10#9#9'}'#13#10#13#10#13
  +#10#13#10#9'}, {'#13#10#9#9'key: ''clone'','#13#10#9#9'value: function clone'
  +'(obj) {'#13#10#9#9#9'if (obj === null || (typeof obj === ''undefined'' ? '''
  +'undefined'' : _typeof(obj)) !== ''object'' || obj.hasOwnProperty(''isActive'
  +'Clone'')) return obj;'#13#10#13#10#9#9#9'var temp = obj.constructor();'#13
  +#10#13#10#9#9#9'for (var key in obj) {'#13#10#9#9#9#9'if (Object.prototype.h'
  +'asOwnProperty.call(obj, key)) {'#13#10#9#9#9#9#9'obj.isActiveClone = null;'
  +#13#10#9#9#9#9#9'temp[key] = Utils.clone(obj[key]);'#13#10#9#9#9#9#9'delete '
  +'obj.isActiveClone;'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'retur'
  +'n temp;'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''newPromise'
  +''','#13#10#9#9'value: function newPromise(executor) {'#13#10#9#9#9'var simp'
  +'le = Promise || small_promise;'#13#10#9#9#9'if (simple === null) {'#13#10#9
  +#9#9#9'throw TypeError(''Browser is missing Promise implementation. Consider'
  +' adding small_promise.js polyfill'');'#13#10#9#9#9'}'#13#10#9#9#9'return ne'
  +'w simple(executor);'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: '
  +'''functionBinder'','#13#10#9#9'value: function functionBinder(inFunc, thisO'
  +'bj) {'#13#10#9#9#9'if (inFunc.bind) {'#13#10#9#9#9#9'return inFunc.bind(thi'
  +'sObj);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return function () {'#13#10#9#9#9#9
  +'var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, argu'
  +'ments);'#13#10#9#9#9#9'return inFunc.apply(thisObj, args);'#13#10#9#9#9'};'
  +#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''isArray'','#13#10#9
  +#9'value: function isArray(array) {'#13#10#9#9#9'if (isNaN(array.length)) {'
  +#13#10#9#9#9#9'return false;'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return true;'
  +#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''getArgumentType'','
  +#13#10#9#9'value: function getArgumentType(arg) {'#13#10#9#9#9'if (Utils.isA'
  +'rray(arg)) {'#13#10#9#9#9#9'return ''Array'';'#13#10#9#9#9'} else if (typeo'
  +'f arg === ''number'') {'#13#10#9#9#9#9'return ''Number'';'#13#10#9#9#9'} el'
  +'se if (arg instanceof Texture) {'#13#10#9#9#9#9'return ''Texture'';'#13#10#9
  +#9#9'} else if (arg instanceof Input) {'#13#10#9#9#9#9'return ''Input'';'#13
  +#10#9#9#9'} else {'#13#10#9#9#9#9'return ''Unknown'';'#13#10#9#9#9'}'#13#10#9
  +#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''isFloatReadPixelsSupported'
  +''','#13#10#9#9'value: function isFloatReadPixelsSupported() {'#13#10#9#9#9
  +'if (_isFloatReadPixelsSupported !== null) {'#13#10#9#9#9#9'return _isFloatR'
  +'eadPixelsSupported;'#13#10#9#9#9'}'#13#10#13#10#9#9#9'var GPU = require(''.'
  +'./index'');'#13#10#9#9#9'var x = new GPU({'#13#10#9#9#9#9'mode: ''webgl-val'
  +'idator'''#13#10#9#9#9'}).createKernel(function () {'#13#10#9#9#9#9'return 1'
  +';'#13#10#9#9#9'}, {'#13#10#9#9#9#9'output: [2],'#13#10#9#9#9#9'floatTexture'
  +'s: true,'#13#10#9#9#9#9'floatOutput: true,'#13#10#9#9#9#9'floatOutputForce:'
  +' true'#13#10#9#9#9'})();'#13#10#13#10#9#9#9'_isFloatReadPixelsSupported = x'
  ,'[0] === 1;'#13#10#13#10#9#9#9'return _isFloatReadPixelsSupported;'#13#10#9#9
  +'}'#13#10#9'}, {'#13#10#9#9'key: ''isMixedIdentifiersSupported'','#13#10#9#9
  +'value: function isMixedIdentifiersSupported() {'#13#10#9#9#9'return _isMixe'
  +'dIdentifiersSupported;'#13#10#9#9'}'#13#10#9'}, {'#13#10#9#9'key: ''dimToTe'
  +'xSize'','#13#10#9#9'value: function dimToTexSize(opt, dimensions, output) {'
  +#13#10#9#9#9'var numTexels = dimensions[0];'#13#10#9#9#9'for (var i = 1; i <'
  +' dimensions.length; i++) {'#13#10#9#9#9#9'numTexels *= dimensions[i];'#13#10
  +#9#9#9'}'#13#10#13#10#9#9#9'if (opt.floatTextures && (!output || opt.floatOu'
  +'tput)) {'#13#10#9#9#9#9'numTexels = Math.ceil(numTexels / 4);'#13#10#9#9#9
  +'}'#13#10#13#10#9#9#9'var w = Math.ceil(Math.sqrt(numTexels));'#13#10#9#9#9
  +'return [w, w];'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''get'
  +'Dimensions'','#13#10#9#9'value: function getDimensions(x, pad) {'#13#10#9#9
  +#9'var ret = void 0;'#13#10#9#9#9'if (Utils.isArray(x)) {'#13#10#9#9#9#9'var'
  +' dim = [];'#13#10#9#9#9#9'var temp = x;'#13#10#9#9#9#9'while (Utils.isArray'
  +'(temp)) {'#13#10#9#9#9#9#9'dim.push(temp.length);'#13#10#9#9#9#9#9'temp = t'
  +'emp[0];'#13#10#9#9#9#9'}'#13#10#9#9#9#9'ret = dim.reverse();'#13#10#9#9#9'}'
  +' else if (x instanceof Texture) {'#13#10#9#9#9#9'ret = x.output;'#13#10#9#9
  +#9'} else if (x instanceof Input) {'#13#10#9#9#9#9'ret = x.size;'#13#10#9#9#9
  +'} else {'#13#10#9#9#9#9'throw ''Unknown dimensions of '' + x;'#13#10#9#9#9
  +'}'#13#10#13#10#9#9#9'if (pad) {'#13#10#9#9#9#9'ret = Utils.clone(ret);'#13
  +#10#9#9#9#9'while (ret.length < 3) {'#13#10#9#9#9#9#9'ret.push(1);'#13#10#9#9
  +#9#9'}'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return ret;'#13#10#9#9'}'#13#10#13
  +#10#13#10#9'}, {'#13#10#9#9'key: ''pad'','#13#10#9#9'value: function pad(arr'
  +', padding) {'#13#10#9#9#9'function zeros(n) {'#13#10#9#9#9#9'return Array.a'
  +'pply(null, new Array(n)).map(Number.prototype.valueOf, 0);'#13#10#9#9#9'}'
  +#13#10#13#10#9#9#9'var len = arr.length + padding * 2;'#13#10#13#10#9#9#9'va'
  +'r ret = arr.map(function (x) {'#13#10#9#9#9#9'return [].concat(zeros(paddin'
  +'g), x, zeros(padding));'#13#10#9#9#9'});'#13#10#13#10#9#9#9'for (var i = 0;'
  +' i < padding; i++) {'#13#10#9#9#9#9'ret = [].concat([zeros(len)], ret, [zer'
  +'os(len)]);'#13#10#9#9#9'}'#13#10#13#10#9#9#9'return ret;'#13#10#9#9'}'#13#10
  +#13#10#13#10#9'}, {'#13#10#9#9'key: ''flatten2dArrayTo'','#13#10#9#9'value: '
  +'function flatten2dArrayTo(array, target) {'#13#10#9#9#9'var offset = 0;'#13
  +#10#9#9#9'for (var y = 0; y < array.length; y++) {'#13#10#9#9#9#9'target.set'
  +'(array[y], offset);'#13#10#9#9#9#9'offset += array[y].length;'#13#10#9#9#9
  +'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'key: ''flatten3dArrayTo'
  +''','#13#10#9#9'value: function flatten3dArrayTo(array, target) {'#13#10#9#9
  +#9'var offset = 0;'#13#10#9#9#9'for (var z = 0; z < array.length; z++) {'#13
  +#10#9#9#9#9'for (var y = 0; y < array[z].length; y++) {'#13#10#9#9#9#9#9'tar'
  +'get.set(array[z][y], offset);'#13#10#9#9#9#9#9'offset += array[z][y].length'
  +';'#13#10#9#9#9#9'}'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13
  +#10#9#9'key: ''flattenTo'','#13#10#9#9'value: function flattenTo(array, targ'
  +'et) {'#13#10#9#9#9'if (Utils.isArray(array[0])) {'#13#10#9#9#9#9'if (Utils.'
  +'isArray(array[0][0])) {'#13#10#9#9#9#9#9'Utils.flatten3dArrayTo(array, targ'
  +'et);'#13#10#9#9#9#9'} else {'#13#10#9#9#9#9#9'Utils.flatten2dArrayTo(array,'
  +' target);'#13#10#9#9#9#9'}'#13#10#9#9#9'} else {'#13#10#9#9#9#9'target.set('
  +'array);'#13#10#9#9#9'}'#13#10#9#9'}'#13#10#13#10#13#10#9'}, {'#13#10#9#9'ke'
  +'y: ''splitArray'','#13#10#9#9'value: function splitArray(array, part) {'#13
  +#10#9#9#9'var result = [];'#13#10#9#9#9'for (var i = 0; i < array.length; i '
  +'+= part) {'#13#10#9#9#9#9'result.push(Array.prototype.slice.call(array, i, '
  +'i + part));'#13#10#9#9#9'}'#13#10#9#9#9'return result;'#13#10#9#9'}'#13#10#9
  +'}, {'#13#10#9#9'key: ''getAstString'','#13#10#9#9'value: function getAstStr'
  +'ing(source, ast) {'#13#10#9#9#9'var lines = Array.isArray(source) ? source '
  +': source.split(/\r?\n/g);'#13#10#9#9#9'var start = ast.loc.start;'#13#10#9#9
  +#9'var end = ast.loc.end;'#13#10#9#9#9'var result = [];'#13#10#9#9#9'result.'
  +'push(lines[start.line - 1].slice(start.column));'#13#10#9#9#9'for (var i = '
  +'start.line; i < end.line - 1; i++) {'#13#10#9#9#9#9'result.push(lines[i]);'
  +#13#10#9#9#9'}'#13#10#9#9#9'result.push(lines[end.line - 1].slice(0, end.col'
  +'umn));'#13#10#9#9#9'return result.join(''\n'');'#13#10#9#9'}'#13#10#9'}, {'
  +#13#10#9#9'key: ''allPropertiesOf'','#13#10#9#9'value: function allPropertie'
  +'sOf(obj) {'#13#10#9#9#9'var props = [];'#13#10#13#10#9#9#9'do {'#13#10#9#9#9
  +#9'props.push.apply(props, Object.getOwnPropertyNames(obj));'#13#10#9#9#9'} '
  +'while (obj = Object.getPrototypeOf(obj));'#13#10#13#10#9#9#9'return props;'
  +#13#10#9#9'}'#13#10#9'}]);'#13#10#13#10#9'return Utils;'#13#10'}(UtilsCore);'
  +#13#10#13#10#13#10#13#10'Object.assign(Utils, UtilsCore);'#13#10#13#10'modul'
  ,'e.exports = Utils;'#13#10'},{"../index":26,"./input":22,"./texture":23,"./u'
  +'tils-core":24}],26:[function(require,module,exports){'#13#10'''use strict'''
  +';'#13#10#13#10'var GPU = require(''./core/gpu'');'#13#10'var alias = requir'
  +'e(''./core/alias'');'#13#10'var utils = require(''./core/utils'');'#13#10'v'
  +'ar Input = require(''./core/input'');'#13#10'var Texture = require(''./core'
  +'/texture'');'#13#10#13#10'var CPUFunctionBuilder = require(''./backend/cpu/'
  +'function-builder'');'#13#10'var CPUFunctionNode = require(''./backend/cpu/f'
  +'unction-node'');'#13#10'var CPUKernel = require(''./backend/cpu/kernel'');'
  +#13#10'var CPURunner = require(''./backend/cpu/runner'');'#13#10#13#10'var W'
  +'ebGLFunctionBuilder = require(''./backend/web-gl/function-builder'');'#13#10
  +'var WebGLFunctionNode = require(''./backend/web-gl/function-node'');'#13#10
  +'var WebGLKernel = require(''./backend/web-gl/kernel'');'#13#10'var WebGLRun'
  +'ner = require(''./backend/web-gl/runner'');'#13#10#13#10'GPU.alias = alias;'
  +#13#10'GPU.utils = utils;'#13#10'GPU.Texture = Texture;'#13#10'GPU.Input = I'
  +'nput;'#13#10'GPU.input = function (value, size) {'#13#10#9'return new Input'
  +'(value, size);'#13#10'};'#13#10#13#10'GPU.CPUFunctionBuilder = CPUFunctionB'
  +'uilder;'#13#10'GPU.CPUFunctionNode = CPUFunctionNode;'#13#10'GPU.CPUKernel '
  +'= CPUKernel;'#13#10'GPU.CPURunner = CPURunner;'#13#10#13#10'GPU.WebGLFuncti'
  +'onBuilder = WebGLFunctionBuilder;'#13#10'GPU.WebGLFunctionNode = WebGLFunct'
  +'ionNode;'#13#10'GPU.WebGLKernel = WebGLKernel;'#13#10'GPU.WebGLRunner = Web'
  +'GLRunner;'#13#10#13#10'if (typeof module !== ''undefined'') {'#13#10#9'modu'
  +'le.exports = GPU;'#13#10'}'#13#10'if (typeof window !== ''undefined'') {'#13
  +#10#9'window.GPU = GPU;'#13#10'}'#13#10'},{"./backend/cpu/function-builder":'
  +'1,"./backend/cpu/function-node":2,"./backend/cpu/kernel":4,"./backend/cpu/r'
  +'unner":5,"./backend/web-gl/function-builder":11,"./backend/web-gl/function-'
  +'node":12,"./backend/web-gl/kernel":14,"./backend/web-gl/runner":15,"./core/'
  +'alias":19,"./core/gpu":21,"./core/input":22,"./core/texture":23,"./core/uti'
  +'ls":25}],27:[function(require,module,exports){'#13#10'(function (global, fa'
  +'ctory) {'#13#10#9'typeof exports === ''object'' && typeof module !== ''unde'
  +'fined'' ? factory(exports) :'#13#10#9'typeof define === ''function'' && def'
  +'ine.amd ? define([''exports''], factory) :'#13#10#9'(factory((global.acorn '
  +'= global.acorn || {})));'#13#10'}(this, (function (exports) { ''use strict'
  +''';'#13#10#13#10#13#10'var reservedWords = {'#13#10'  3: "abstract boolean '
  +'byte char class double enum export extends final float goto implements impo'
  +'rt int interface long native package private protected public short static '
  +'super synchronized throws transient volatile",'#13#10'  5: "class enum exte'
  +'nds super const export import",'#13#10'  6: "enum",'#13#10'  strict: "imple'
  +'ments interface let package private protected public static yield",'#13#10
  +'  strictBind: "eval arguments"'#13#10'};'#13#10#13#10#13#10'var ecma5AndLes'
  +'sKeywords = "break case catch continue debugger default do else finally for'
  +' function if return switch throw try var while with null true false instanc'
  +'eof typeof void delete new in this";'#13#10#13#10'var keywords = {'#13#10' '
  +' 5: ecma5AndLessKeywords,'#13#10'  6: ecma5AndLessKeywords + " const class '
  +'extends export import super"'#13#10'};'#13#10#13#10#13#10#13#10'var nonASCI'
  +'IidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u'
  +'02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u'
  +'0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f'
  +'\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u06'
  +'6e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u071'
  +'0\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u08'
  +'15\u081a\u0824\u0828\u0840-\u0858\u08a0-\u08b4\u08b6-\u08bd\u0904-\u0939\u0'
  +'93d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u'
  +'09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u'
  +'09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u'
  +'0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\'
  +'u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\'
  +'u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-'
  +'\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90'
  +'\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-'
  +'\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c5'
  +'8-\u0c5a\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0'
  +'cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0'
  +'d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\'
  +'u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33'
  ,'\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-'
  +'\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\'
  +'u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8'
  +'c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u10'
  +'70\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u1'
  +'24a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-'
  +'\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u13'
  +'10\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\'
  +'u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170'
  +'e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u'
  +'17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-'
  +'\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1a'
  +'a7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u'
  +'1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5'
  +'\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f'
  +'50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1'
  +'fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4'
  +'\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118'
  +'-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u216'
  +'0-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2'
  +'d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\'
  +'u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd'
  +'8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u'
  +'309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31b'
  +'a\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fd5\ua000-\ua48c\ua4d0-\ua4fd\ua500-\u'
  +'a60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-'
  +'\ua71f\ua722-\ua788\ua78b-\ua7ae\ua7b0-\ua7b7\ua7f7-\ua801\ua803-\ua805\ua8'
  +'07-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\u'
  +'a90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6'
  +'-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\ua'
  +'a7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\ua'
  +'ae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26'
  +'\uab28-\uab2e\uab30-\uab5a\uab5c-\uab65\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud'
  +'7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\'
  +'ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-'
  +'\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe'
  +'76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\'
  +'uffd2-\uffd7\uffda-\uffdc";'#13#10'var nonASCIIidentifierChars = "\u200c\u2'
  +'00d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c'
  +'4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06'
  +'e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u'
  +'07c9\u07eb-\u07f3\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859'
  +'-\u085b\u08d4-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0'
  +'962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u'
  +'09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u'
  +'0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\'
  +'u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e'
  +'-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82'
  +'\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c03\u0c'
  +'3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0'
  +'c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u'
  +'0ce3\u0ce6-\u0cef\u0d01-\u0d03\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57'
  +'\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf'
  +'\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb'
  +'1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f'
  +'29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f9'
  +'9-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u'
  +'1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369'
  +'-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17d'
  +'d\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1'
  +'946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89'
  +'\u1a90-\u1a99\u1ab0-\u1abd\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1'
  +'b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-'
  +'\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf2-\u1cf4\u1cf8\u1cf'
  ,'9\u1dc0-\u1df5\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20'
  +'f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua'
  +'66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua8'
  +'80\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua900-\ua909\ua926-\ua92d\u'
  +'a947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29'
  +'-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab'
  +'7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed'
  +'\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff1'
  +'0-\uff19\uff3f";'#13#10#13#10'var nonASCIIidentifierStart = new RegExp("[" '
  +'+ nonASCIIidentifierStartChars + "]");'#13#10'var nonASCIIidentifier = new '
  +'RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");'
  +#13#10#13#10'nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;'
  +#13#10#13#10#13#10'var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14'
  +',3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,1'
  +'9,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10'
  +',30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27'
  +',28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,'
  +'4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21'
  +',2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,'
  +'0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,1'
  +'95,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,'
  +'0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3'
  +',0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,'
  +'24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2'
  +',1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,'
  +'2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221'
  +',3,5761,10591,541];'#13#10#13#10'var astralIdentifierCodes = [509,0,227,0,1'
  +'50,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,'
  +'7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,'
  +'1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82'
  +',12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1'
  +'016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,1'
  +'5,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];'#13#10
  +#13#10'function isInAstralSet(code, set) {'#13#10'  var pos = 0x10000;'#13#10
  +'  for (var i = 0; i < set.length; i += 2) {'#13#10'    pos += set[i];'#13#10
  +'    if (pos > code) { return false }'#13#10'    pos += set[i + 1];'#13#10' '
  +'   if (pos >= code) { return true }'#13#10'  }'#13#10'}'#13#10#13#10#13#10
  +'function isIdentifierStart(code, astral) {'#13#10'  if (code < 65) { return'
  +' code === 36 }'#13#10'  if (code < 91) { return true }'#13#10'  if (code < '
  +'97) { return code === 95 }'#13#10'  if (code < 123) { return true }'#13#10
  +'  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test'
  +'(String.fromCharCode(code)) }'#13#10'  if (astral === false) { return false'
  +' }'#13#10'  return isInAstralSet(code, astralIdentifierStartCodes)'#13#10'}'
  +#13#10#13#10#13#10'function isIdentifierChar(code, astral) {'#13#10'  if (co'
  +'de < 48) { return code === 36 }'#13#10'  if (code < 58) { return true }'#13
  +#10'  if (code < 65) { return false }'#13#10'  if (code < 91) { return true '
  +'}'#13#10'  if (code < 97) { return code === 95 }'#13#10'  if (code < 123) {'
  +' return true }'#13#10'  if (code <= 0xffff) { return code >= 0xaa && nonASC'
  +'IIidentifier.test(String.fromCharCode(code)) }'#13#10'  if (astral === fals'
  +'e) { return false }'#13#10'  return isInAstralSet(code, astralIdentifierSta'
  +'rtCodes) || isInAstralSet(code, astralIdentifierCodes)'#13#10'}'#13#10#13#10
  +#13#10#13#10#13#10#13#10'var TokenType = function TokenType(label, conf) {'
  +#13#10'  if ( conf === void 0 ) conf = {};'#13#10#13#10'  this.label = label'
  +';'#13#10'  this.keyword = conf.keyword;'#13#10'  this.beforeExpr = !!conf.b'
  +'eforeExpr;'#13#10'  this.startsExpr = !!conf.startsExpr;'#13#10'  this.isLo'
  +'op = !!conf.isLoop;'#13#10'  this.isAssign = !!conf.isAssign;'#13#10'  this'
  +'.prefix = !!conf.prefix;'#13#10'  this.postfix = !!conf.postfix;'#13#10'  t'
  +'his.binop = conf.binop || null;'#13#10'  this.updateContext = null;'#13#10
  +'};'#13#10#13#10'function binop(name, prec) {'#13#10'  return new TokenType('
  +'name, {beforeExpr: true, binop: prec})'#13#10'}'#13#10'var beforeExpr = {be'
  +'foreExpr: true};'#13#10'var startsExpr = {startsExpr: true};'#13#10#13#10#13
  +#10'var keywords$1 = {};'#13#10#13#10'function kw(name, options) {'#13#10'  '
  +'if ( options === void 0 ) options = {};'#13#10#13#10'  options.keyword = na'
  +'me;'#13#10'  return keywords$1[name] = new TokenType(name, options)'#13#10
  ,'}'#13#10#13#10'var types = {'#13#10'  num: new TokenType("num", startsExpr)'
  +','#13#10'  regexp: new TokenType("regexp", startsExpr),'#13#10'  string: ne'
  +'w TokenType("string", startsExpr),'#13#10'  name: new TokenType("name", sta'
  +'rtsExpr),'#13#10'  eof: new TokenType("eof"),'#13#10#13#10'  bracketL: new '
  +'TokenType("[", {beforeExpr: true, startsExpr: true}),'#13#10'  bracketR: ne'
  +'w TokenType("]"),'#13#10'  braceL: new TokenType("{", {beforeExpr: true, st'
  +'artsExpr: true}),'#13#10'  braceR: new TokenType("}"),'#13#10'  parenL: new'
  +' TokenType("(", {beforeExpr: true, startsExpr: true}),'#13#10'  parenR: new'
  +' TokenType(")"),'#13#10'  comma: new TokenType(",", beforeExpr),'#13#10'  s'
  +'emi: new TokenType(";", beforeExpr),'#13#10'  colon: new TokenType(":", bef'
  +'oreExpr),'#13#10'  dot: new TokenType("."),'#13#10'  question: new TokenTyp'
  +'e("?", beforeExpr),'#13#10'  arrow: new TokenType("=>", beforeExpr),'#13#10
  +'  template: new TokenType("template"),'#13#10'  invalidTemplate: new TokenT'
  +'ype("invalidTemplate"),'#13#10'  ellipsis: new TokenType("...", beforeExpr)'
  +','#13#10'  backQuote: new TokenType("`", startsExpr),'#13#10'  dollarBraceL'
  +': new TokenType("${", {beforeExpr: true, startsExpr: true}),'#13#10#13#10#13
  +#10'  eq: new TokenType("=", {beforeExpr: true, isAssign: true}),'#13#10'  a'
  +'ssign: new TokenType("_=", {beforeExpr: true, isAssign: true}),'#13#10'  in'
  +'cDec: new TokenType("++/--", {prefix: true, postfix: true, startsExpr: true'
  +'}),'#13#10'  prefix: new TokenType("!/~", {beforeExpr: true, prefix: true, '
  +'startsExpr: true}),'#13#10'  logicalOR: binop("||", 1),'#13#10'  logicalAND'
  +': binop("&&", 2),'#13#10'  bitwiseOR: binop("|", 3),'#13#10'  bitwiseXOR: b'
  +'inop("^", 4),'#13#10'  bitwiseAND: binop("&", 5),'#13#10'  equality: binop('
  +'"==/!=/===/!==", 6),'#13#10'  relational: binop("</>/<=/>=", 7),'#13#10'  b'
  +'itShift: binop("<</>>/>>>", 8),'#13#10'  plusMin: new TokenType("+/-", {bef'
  +'oreExpr: true, binop: 9, prefix: true, startsExpr: true}),'#13#10'  modulo:'
  +' binop("%", 10),'#13#10'  star: binop("*", 10),'#13#10'  slash: binop("/", '
  +'10),'#13#10'  starstar: new TokenType("**", {beforeExpr: true}),'#13#10#13
  +#10'  _break: kw("break"),'#13#10'  _case: kw("case", beforeExpr),'#13#10'  '
  +'_catch: kw("catch"),'#13#10'  _continue: kw("continue"),'#13#10'  _debugger'
  +': kw("debugger"),'#13#10'  _default: kw("default", beforeExpr),'#13#10'  _d'
  +'o: kw("do", {isLoop: true, beforeExpr: true}),'#13#10'  _else: kw("else", b'
  +'eforeExpr),'#13#10'  _finally: kw("finally"),'#13#10'  _for: kw("for", {isL'
  +'oop: true}),'#13#10'  _function: kw("function", startsExpr),'#13#10'  _if: '
  +'kw("if"),'#13#10'  _return: kw("return", beforeExpr),'#13#10'  _switch: kw('
  +'"switch"),'#13#10'  _throw: kw("throw", beforeExpr),'#13#10'  _try: kw("try'
  +'"),'#13#10'  _var: kw("var"),'#13#10'  _const: kw("const"),'#13#10'  _while'
  +': kw("while", {isLoop: true}),'#13#10'  _with: kw("with"),'#13#10'  _new: k'
  +'w("new", {beforeExpr: true, startsExpr: true}),'#13#10'  _this: kw("this", '
  +'startsExpr),'#13#10'  _super: kw("super", startsExpr),'#13#10'  _class: kw('
  +'"class", startsExpr),'#13#10'  _extends: kw("extends", beforeExpr),'#13#10
  +'  _export: kw("export"),'#13#10'  _import: kw("import"),'#13#10'  _null: kw'
  +'("null", startsExpr),'#13#10'  _true: kw("true", startsExpr),'#13#10'  _fal'
  +'se: kw("false", startsExpr),'#13#10'  _in: kw("in", {beforeExpr: true, bino'
  +'p: 7}),'#13#10'  _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}'
  +'),'#13#10'  _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsEx'
  +'pr: true}),'#13#10'  _void: kw("void", {beforeExpr: true, prefix: true, sta'
  +'rtsExpr: true}),'#13#10'  _delete: kw("delete", {beforeExpr: true, prefix: '
  +'true, startsExpr: true})'#13#10'};'#13#10#13#10#13#10'var lineBreak = /\r\n'
  +'?|\n|\u2028|\u2029/;'#13#10'var lineBreakG = new RegExp(lineBreak.source, "'
  +'g");'#13#10#13#10'function isNewLine(code) {'#13#10'  return code === 10 ||'
  +' code === 13 || code === 0x2028 || code === 0x2029'#13#10'}'#13#10#13#10'va'
  +'r nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]'
  +'/;'#13#10#13#10'var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;'#13#10
  +#13#10'var ref = Object.prototype;'#13#10'var hasOwnProperty = ref.hasOwnPro'
  +'perty;'#13#10'var toString = ref.toString;'#13#10#13#10#13#10'function has('
  +'obj, propName) {'#13#10'  return hasOwnProperty.call(obj, propName)'#13#10
  +'}'#13#10#13#10'var isArray = Array.isArray || (function (obj) { return ('#13
  +#10'  toString.call(obj) === "[object Array]"'#13#10'); });'#13#10#13#10#13
  +#10'var Position = function Position(line, col) {'#13#10'  this.line = line;'
  +#13#10'  this.column = col;'#13#10'};'#13#10#13#10'Position.prototype.offset'
  +' = function offset (n) {'#13#10'  return new Position(this.line, this.colum'
  +'n + n)'#13#10'};'#13#10#13#10'var SourceLocation = function SourceLocation('
  +'p, start, end) {'#13#10'  this.start = start;'#13#10'  this.end = end;'#13
  ,#10'  if (p.sourceFile !== null) { this.source = p.sourceFile; }'#13#10'};'
  +#13#10#13#10#13#10'function getLineInfo(input, offset) {'#13#10'  for (var l'
  +'ine = 1, cur = 0;;) {'#13#10'    lineBreakG.lastIndex = cur;'#13#10'    var'
  +' match = lineBreakG.exec(input);'#13#10'    if (match && match.index < offs'
  +'et) {'#13#10'      ++line;'#13#10'      cur = match.index + match[0].length'
  +';'#13#10'    } else {'#13#10'      return new Position(line, offset - cur)'
  +#13#10'    }'#13#10'  }'#13#10'}'#13#10#13#10#13#10'var defaultOptions = {'
  +#13#10'  ecmaVersion: 7,'#13#10'  sourceType: "script",'#13#10'  onInsertedS'
  +'emicolon: null,'#13#10'  onTrailingComma: null,'#13#10'  allowReserved: nul'
  +'l,'#13#10'  allowReturnOutsideFunction: false,'#13#10'  allowImportExportEv'
  +'erywhere: false,'#13#10'  allowHashBang: false,'#13#10'  locations: false,'
  +#13#10'  onToken: null,'#13#10'  onComment: null,'#13#10'  ranges: false,'#13
  +#10'  program: null,'#13#10'  sourceFile: null,'#13#10'  directSourceFile: n'
  +'ull,'#13#10'  preserveParens: false,'#13#10'  plugins: {}'#13#10'};'#13#10
  +#13#10#13#10'function getOptions(opts) {'#13#10'  var options = {};'#13#10#13
  +#10'  for (var opt in defaultOptions)'#13#10'    { options[opt] = opts && ha'
  +'s(opts, opt) ? opts[opt] : defaultOptions[opt]; }'#13#10#13#10'  if (option'
  +'s.ecmaVersion >= 2015)'#13#10'    { options.ecmaVersion -= 2009; }'#13#10#13
  +#10'  if (options.allowReserved == null)'#13#10'    { options.allowReserved '
  +'= options.ecmaVersion < 5; }'#13#10#13#10'  if (isArray(options.onToken)) {'
  +#13#10'    var tokens = options.onToken;'#13#10'    options.onToken = functi'
  +'on (token) { return tokens.push(token); };'#13#10'  }'#13#10'  if (isArray('
  +'options.onComment))'#13#10'    { options.onComment = pushComment(options, o'
  +'ptions.onComment); }'#13#10#13#10'  return options'#13#10'}'#13#10#13#10'fu'
  +'nction pushComment(options, array) {'#13#10'  return function(block, text, '
  +'start, end, startLoc, endLoc) {'#13#10'    var comment = {'#13#10'      typ'
  +'e: block ? "Block" : "Line",'#13#10'      value: text,'#13#10'      start: '
  +'start,'#13#10'      end: end'#13#10'    };'#13#10'    if (options.locations'
  +')'#13#10'      { comment.loc = new SourceLocation(this, startLoc, endLoc); '
  +'}'#13#10'    if (options.ranges)'#13#10'      { comment.range = [start, end'
  +']; }'#13#10'    array.push(comment);'#13#10'  }'#13#10'}'#13#10#13#10'var p'
  +'lugins = {};'#13#10#13#10'function keywordRegexp(words) {'#13#10'  return n'
  +'ew RegExp("^(?:" + words.replace(/ /g, "|") + ")$")'#13#10'}'#13#10#13#10'v'
  +'ar Parser = function Parser(options, input, startPos) {'#13#10'  this.optio'
  +'ns = options = getOptions(options);'#13#10'  this.sourceFile = options.sour'
  +'ceFile;'#13#10'  this.keywords = keywordRegexp(keywords[options.ecmaVersion'
  +' >= 6 ? 6 : 5]);'#13#10'  var reserved = "";'#13#10'  if (!options.allowRes'
  +'erved) {'#13#10'    for (var v = options.ecmaVersion;; v--)'#13#10'      { '
  +'if (reserved = reservedWords[v]) { break } }'#13#10'    if (options.sourceT'
  +'ype == "module") { reserved += " await"; }'#13#10'  }'#13#10'  this.reserve'
  +'dWords = keywordRegexp(reserved);'#13#10'  var reservedStrict = (reserved ?'
  +' reserved + " " : "") + reservedWords.strict;'#13#10'  this.reservedWordsSt'
  +'rict = keywordRegexp(reservedStrict);'#13#10'  this.reservedWordsStrictBind'
  +' = keywordRegexp(reservedStrict + " " + reservedWords.strictBind);'#13#10' '
  +' this.input = String(input);'#13#10#13#10'  this.containsEsc = false;'#13#10
  +#13#10'  this.loadPlugins(options.plugins);'#13#10#13#10#13#10'  if (startPo'
  +'s) {'#13#10'    this.pos = startPos;'#13#10'    this.lineStart = this.input'
  +'.lastIndexOf("\n", startPos - 1) + 1;'#13#10'    this.curLine = this.input.'
  +'slice(0, this.lineStart).split(lineBreak).length;'#13#10'  } else {'#13#10
  +'    this.pos = this.lineStart = 0;'#13#10'    this.curLine = 1;'#13#10'  }'
  +#13#10#13#10'  this.type = types.eof;'#13#10'  this.value = null;'#13#10'  t'
  +'his.start = this.end = this.pos;'#13#10'  this.startLoc = this.endLoc = thi'
  +'s.curPosition();'#13#10#13#10'  this.lastTokEndLoc = this.lastTokStartLoc ='
  +' null;'#13#10'  this.lastTokStart = this.lastTokEnd = this.pos;'#13#10#13#10
  +'  this.context = this.initialContext();'#13#10'  this.exprAllowed = true;'
  +#13#10#13#10'  this.inModule = options.sourceType === "module";'#13#10'  thi'
  +'s.strict = this.inModule || this.strictDirective(this.pos);'#13#10#13#10'  '
  +'this.potentialArrowAt = -1;'#13#10#13#10'  this.inFunction = this.inGenerat'
  +'or = this.inAsync = false;'#13#10'  this.yieldPos = this.awaitPos = 0;'#13
  +#10'  this.labels = [];'#13#10#13#10'  if (this.pos === 0 && options.allowHa'
  +'shBang && this.input.slice(0, 2) === "#!")'#13#10'    { this.skipLineCommen'
  +'t(2); }'#13#10#13#10'  this.scopeStack = [];'#13#10'  this.enterFunctionSco'
  +'pe();'#13#10'};'#13#10#13#10'Parser.prototype.isKeyword = function isKeywor'
  +'d (word) { return this.keywords.test(word) };'#13#10'Parser.prototype.isRes'
  ,'ervedWord = function isReservedWord (word) { return this.reservedWords.test'
  +'(word) };'#13#10#13#10'Parser.prototype.extend = function extend (name, f) '
  +'{'#13#10'  this[name] = f(this[name]);'#13#10'};'#13#10#13#10'Parser.protot'
  +'ype.loadPlugins = function loadPlugins (pluginConfigs) {'#13#10'    var thi'
  +'s$1 = this;'#13#10#13#10'  for (var name in pluginConfigs) {'#13#10'    var'
  +' plugin = plugins[name];'#13#10'    if (!plugin) { throw new Error("Plugin '
  +'''" + name + "'' not found") }'#13#10'    plugin(this$1, pluginConfigs[name'
  +']);'#13#10'  }'#13#10'};'#13#10#13#10'Parser.prototype.parse = function par'
  +'se () {'#13#10'  var node = this.options.program || this.startNode();'#13#10
  +'  this.nextToken();'#13#10'  return this.parseTopLevel(node)'#13#10'};'#13
  +#10#13#10'var pp = Parser.prototype;'#13#10#13#10#13#10'var literal = /^(?:'
  +'''((?:\\.|[^''])*?)''|"((?:\\.|[^"])*?)"|;)/;'#13#10'pp.strictDirective = f'
  +'unction(start) {'#13#10'  var this$1 = this;'#13#10#13#10'  for (;;) {'#13
  +#10'    skipWhiteSpace.lastIndex = start;'#13#10'    start += skipWhiteSpace'
  +'.exec(this$1.input)[0].length;'#13#10'    var match = literal.exec(this$1.i'
  +'nput.slice(start));'#13#10'    if (!match) { return false }'#13#10'    if ('
  +'(match[1] || match[2]) == "use strict") { return true }'#13#10'    start +='
  +' match[0].length;'#13#10'  }'#13#10'};'#13#10#13#10#13#10'pp.eat = function'
  +'(type) {'#13#10'  if (this.type === type) {'#13#10'    this.next();'#13#10
  +'    return true'#13#10'  } else {'#13#10'    return false'#13#10'  }'#13#10
  +'};'#13#10#13#10#13#10'pp.isContextual = function(name) {'#13#10'  return th'
  +'is.type === types.name && this.value === name'#13#10'};'#13#10#13#10#13#10
  +'pp.eatContextual = function(name) {'#13#10'  return this.value === name && '
  +'this.eat(types.name)'#13#10'};'#13#10#13#10#13#10'pp.expectContextual = fun'
  +'ction(name) {'#13#10'  if (!this.eatContextual(name)) { this.unexpected(); '
  +'}'#13#10'};'#13#10#13#10#13#10'pp.canInsertSemicolon = function() {'#13#10
  +'  return this.type === types.eof ||'#13#10'    this.type === types.braceR |'
  +'|'#13#10'    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))'
  +#13#10'};'#13#10#13#10'pp.insertSemicolon = function() {'#13#10'  if (this.c'
  +'anInsertSemicolon()) {'#13#10'    if (this.options.onInsertedSemicolon)'#13
  +#10'      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEn'
  +'dLoc); }'#13#10'    return true'#13#10'  }'#13#10'};'#13#10#13#10#13#10'pp.'
  +'semicolon = function() {'#13#10'  if (!this.eat(types.semi) && !this.insert'
  +'Semicolon()) { this.unexpected(); }'#13#10'};'#13#10#13#10'pp.afterTrailing'
  +'Comma = function(tokType, notNext) {'#13#10'  if (this.type == tokType) {'
  +#13#10'    if (this.options.onTrailingComma)'#13#10'      { this.options.onT'
  +'railingComma(this.lastTokStart, this.lastTokStartLoc); }'#13#10'    if (!no'
  +'tNext)'#13#10'      { this.next(); }'#13#10'    return true'#13#10'  }'#13
  +#10'};'#13#10#13#10#13#10'pp.expect = function(type) {'#13#10'  this.eat(typ'
  +'e) || this.unexpected();'#13#10'};'#13#10#13#10#13#10'pp.unexpected = funct'
  +'ion(pos) {'#13#10'  this.raise(pos != null ? pos : this.start, "Unexpected '
  +'token");'#13#10'};'#13#10#13#10'function DestructuringErrors() {'#13#10'  t'
  +'his.shorthandAssign ='#13#10'  this.trailingComma ='#13#10'  this.parenthes'
  +'izedAssign ='#13#10'  this.parenthesizedBind ='#13#10'    -1;'#13#10'}'#13
  +#10#13#10'pp.checkPatternErrors = function(refDestructuringErrors, isAssign)'
  +' {'#13#10'  if (!refDestructuringErrors) { return }'#13#10'  if (refDestruc'
  +'turingErrors.trailingComma > -1)'#13#10'    { this.raiseRecoverable(refDest'
  +'ructuringErrors.trailingComma, "Comma is not permitted after the rest eleme'
  +'nt"); }'#13#10'  var parens = isAssign ? refDestructuringErrors.parenthesiz'
  +'edAssign : refDestructuringErrors.parenthesizedBind;'#13#10'  if (parens > '
  +'-1) { this.raiseRecoverable(parens, "Parenthesized pattern"); }'#13#10'};'
  +#13#10#13#10'pp.checkExpressionErrors = function(refDestructuringErrors, and'
  +'Throw) {'#13#10'  var pos = refDestructuringErrors ? refDestructuringErrors'
  +'.shorthandAssign : -1;'#13#10'  if (!andThrow) { return pos >= 0 }'#13#10' '
  +' if (pos > -1) { this.raise(pos, "Shorthand property assignments are valid '
  +'only in destructuring patterns"); }'#13#10'};'#13#10#13#10'pp.checkYieldAwa'
  +'itInDefaultParams = function() {'#13#10'  if (this.yieldPos && (!this.await'
  +'Pos || this.yieldPos < this.awaitPos))'#13#10'    { this.raise(this.yieldPo'
  +'s, "Yield expression cannot be a default value"); }'#13#10'  if (this.await'
  +'Pos)'#13#10'    { this.raise(this.awaitPos, "Await expression cannot be a d'
  +'efault value"); }'#13#10'};'#13#10#13#10'pp.isSimpleAssignTarget = function'
  +'(expr) {'#13#10'  if (expr.type === "ParenthesizedExpression")'#13#10'    {'
  +' return this.isSimpleAssignTarget(expr.expression) }'#13#10'  return expr.t'
  +'ype === "Identifier" || expr.type === "MemberExpression"'#13#10'};'#13#10#13
  ,#10'var pp$1 = Parser.prototype;'#13#10#13#10#13#10#13#10'pp$1.parseTopLevel'
  +' = function(node) {'#13#10'  var this$1 = this;'#13#10#13#10'  var exports '
  +'= {};'#13#10'  if (!node.body) { node.body = []; }'#13#10'  while (this.typ'
  +'e !== types.eof) {'#13#10'    var stmt = this$1.parseStatement(true, true, '
  +'exports);'#13#10'    node.body.push(stmt);'#13#10'  }'#13#10'  this.adaptDi'
  +'rectivePrologue(node.body);'#13#10'  this.next();'#13#10'  if (this.options'
  +'.ecmaVersion >= 6) {'#13#10'    node.sourceType = this.options.sourceType;'
  +#13#10'  }'#13#10'  return this.finishNode(node, "Program")'#13#10'};'#13#10
  +#13#10'var loopLabel = {kind: "loop"};'#13#10'var switchLabel = {kind: "swit'
  +'ch"};'#13#10#13#10'pp$1.isLet = function() {'#13#10'  if (this.type !== typ'
  +'es.name || this.options.ecmaVersion < 6 || this.value != "let") { return fa'
  +'lse }'#13#10'  skipWhiteSpace.lastIndex = this.pos;'#13#10'  var skip = ski'
  +'pWhiteSpace.exec(this.input);'#13#10'  var next = this.pos + skip[0].length'
  +', nextCh = this.input.charCodeAt(next);'#13#10'  if (nextCh === 91 || nextC'
  +'h == 123) { return true }'#13#10'  if (isIdentifierStart(nextCh, true)) {'
  +#13#10'    var pos = next + 1;'#13#10'    while (isIdentifierChar(this.input'
  +'.charCodeAt(pos), true)) { ++pos; }'#13#10'    var ident = this.input.slice'
  +'(next, pos);'#13#10'    if (!this.isKeyword(ident)) { return true }'#13#10
  +'  }'#13#10'  return false'#13#10'};'#13#10#13#10'pp$1.isAsyncFunction = fun'
  +'ction() {'#13#10'  if (this.type !== types.name || this.options.ecmaVersion'
  +' < 8 || this.value != "async")'#13#10'    { return false }'#13#10#13#10'  s'
  +'kipWhiteSpace.lastIndex = this.pos;'#13#10'  var skip = skipWhiteSpace.exec'
  +'(this.input);'#13#10'  var next = this.pos + skip[0].length;'#13#10'  retur'
  +'n !lineBreak.test(this.input.slice(this.pos, next)) &&'#13#10'    this.inpu'
  +'t.slice(next, next + 8) === "function" &&'#13#10'    (next + 8 == this.inpu'
  +'t.length || !isIdentifierChar(this.input.charAt(next + 8)))'#13#10'};'#13#10
  +#13#10#13#10'pp$1.parseStatement = function(declaration, topLevel, exports) '
  +'{'#13#10'  var starttype = this.type, node = this.startNode(), kind;'#13#10
  +#13#10'  if (this.isLet()) {'#13#10'    starttype = types._var;'#13#10'    k'
  +'ind = "let";'#13#10'  }'#13#10#13#10#13#10'  switch (starttype) {'#13#10'  '
  +'case types._break: case types._continue: return this.parseBreakContinueStat'
  +'ement(node, starttype.keyword)'#13#10'  case types._debugger: return this.p'
  +'arseDebuggerStatement(node)'#13#10'  case types._do: return this.parseDoSta'
  +'tement(node)'#13#10'  case types._for: return this.parseForStatement(node)'
  +#13#10'  case types._function:'#13#10'    if (!declaration && this.options.e'
  +'cmaVersion >= 6) { this.unexpected(); }'#13#10'    return this.parseFunctio'
  +'nStatement(node, false)'#13#10'  case types._class:'#13#10'    if (!declara'
  +'tion) { this.unexpected(); }'#13#10'    return this.parseClass(node, true)'
  +#13#10'  case types._if: return this.parseIfStatement(node)'#13#10'  case ty'
  +'pes._return: return this.parseReturnStatement(node)'#13#10'  case types._sw'
  +'itch: return this.parseSwitchStatement(node)'#13#10'  case types._throw: re'
  +'turn this.parseThrowStatement(node)'#13#10'  case types._try: return this.p'
  +'arseTryStatement(node)'#13#10'  case types._const: case types._var:'#13#10
  +'    kind = kind || this.value;'#13#10'    if (!declaration && kind != "var"'
  +') { this.unexpected(); }'#13#10'    return this.parseVarStatement(node, kin'
  +'d)'#13#10'  case types._while: return this.parseWhileStatement(node)'#13#10
  +'  case types._with: return this.parseWithStatement(node)'#13#10'  case type'
  +'s.braceL: return this.parseBlock()'#13#10'  case types.semi: return this.pa'
  +'rseEmptyStatement(node)'#13#10'  case types._export:'#13#10'  case types._i'
  +'mport:'#13#10'    if (!this.options.allowImportExportEverywhere) {'#13#10' '
  +'     if (!topLevel)'#13#10'        { this.raise(this.start, "''import'' and'
  +' ''export'' may only appear at the top level"); }'#13#10'      if (!this.in'
  +'Module)'#13#10'        { this.raise(this.start, "''import'' and ''export'' '
  +'may appear only with ''sourceType: module''"); }'#13#10'    }'#13#10'    re'
  +'turn starttype === types._import ? this.parseImport(node) : this.parseExpor'
  +'t(node, exports)'#13#10#13#10'  default:'#13#10'    if (this.isAsyncFunctio'
  +'n() && declaration) {'#13#10'      this.next();'#13#10'      return this.pa'
  +'rseFunctionStatement(node, true)'#13#10'    }'#13#10#13#10'    var maybeNam'
  +'e = this.value, expr = this.parseExpression();'#13#10'    if (starttype ==='
  +' types.name && expr.type === "Identifier" && this.eat(types.colon))'#13#10
  +'      { return this.parseLabeledStatement(node, maybeName, expr) }'#13#10' '
  +'   else { return this.parseExpressionStatement(node, expr) }'#13#10'  }'#13
  +#10'};'#13#10#13#10'pp$1.parseBreakContinueStatement = function(node, keywor'
  +'d) {'#13#10'  var this$1 = this;'#13#10#13#10'  var isBreak = keyword == "b'
  ,'reak";'#13#10'  this.next();'#13#10'  if (this.eat(types.semi) || this.inse'
  +'rtSemicolon()) { node.label = null; }'#13#10'  else if (this.type !== types'
  +'.name) { this.unexpected(); }'#13#10'  else {'#13#10'    node.label = this.'
  +'parseIdent();'#13#10'    this.semicolon();'#13#10'  }'#13#10#13#10'  var i '
  +'= 0;'#13#10'  for (; i < this.labels.length; ++i) {'#13#10'    var lab = th'
  +'is$1.labels[i];'#13#10'    if (node.label == null || lab.name === node.labe'
  +'l.name) {'#13#10'      if (lab.kind != null && (isBreak || lab.kind === "lo'
  +'op")) { break }'#13#10'      if (node.label && isBreak) { break }'#13#10'  '
  +'  }'#13#10'  }'#13#10'  if (i === this.labels.length) { this.raise(node.sta'
  +'rt, "Unsyntactic " + keyword); }'#13#10'  return this.finishNode(node, isBr'
  +'eak ? "BreakStatement" : "ContinueStatement")'#13#10'};'#13#10#13#10'pp$1.p'
  +'arseDebuggerStatement = function(node) {'#13#10'  this.next();'#13#10'  thi'
  +'s.semicolon();'#13#10'  return this.finishNode(node, "DebuggerStatement")'
  +#13#10'};'#13#10#13#10'pp$1.parseDoStatement = function(node) {'#13#10'  thi'
  +'s.next();'#13#10'  this.labels.push(loopLabel);'#13#10'  node.body = this.p'
  +'arseStatement(false);'#13#10'  this.labels.pop();'#13#10'  this.expect(type'
  +'s._while);'#13#10'  node.test = this.parseParenExpression();'#13#10'  if (t'
  +'his.options.ecmaVersion >= 6)'#13#10'    { this.eat(types.semi); }'#13#10' '
  +' else'#13#10'    { this.semicolon(); }'#13#10'  return this.finishNode(node'
  +', "DoWhileStatement")'#13#10'};'#13#10#13#10#13#10'pp$1.parseForStatement ='
  +' function(node) {'#13#10'  this.next();'#13#10'  this.labels.push(loopLabel'
  +');'#13#10'  this.enterLexicalScope();'#13#10'  this.expect(types.parenL);'
  +#13#10'  if (this.type === types.semi) { return this.parseFor(node, null) }'
  +#13#10'  var isLet = this.isLet();'#13#10'  if (this.type === types._var || '
  +'this.type === types._const || isLet) {'#13#10'    var init$1 = this.startNo'
  +'de(), kind = isLet ? "let" : this.value;'#13#10'    this.next();'#13#10'   '
  +' this.parseVar(init$1, true, kind);'#13#10'    this.finishNode(init$1, "Var'
  +'iableDeclaration");'#13#10'    if ((this.type === types._in || (this.option'
  +'s.ecmaVersion >= 6 && this.isContextual("of"))) && init$1.declarations.leng'
  +'th === 1 &&'#13#10'        !(kind !== "var" && init$1.declarations[0].init)'
  +')'#13#10'      { return this.parseForIn(node, init$1) }'#13#10'    return t'
  +'his.parseFor(node, init$1)'#13#10'  }'#13#10'  var refDestructuringErrors ='
  +' new DestructuringErrors;'#13#10'  var init = this.parseExpression(true, re'
  +'fDestructuringErrors);'#13#10'  if (this.type === types._in || (this.option'
  +'s.ecmaVersion >= 6 && this.isContextual("of"))) {'#13#10'    this.toAssigna'
  +'ble(init);'#13#10'    this.checkLVal(init);'#13#10'    this.checkPatternErr'
  +'ors(refDestructuringErrors, true);'#13#10'    return this.parseForIn(node, '
  +'init)'#13#10'  } else {'#13#10'    this.checkExpressionErrors(refDestructur'
  +'ingErrors, true);'#13#10'  }'#13#10'  return this.parseFor(node, init)'#13
  +#10'};'#13#10#13#10'pp$1.parseFunctionStatement = function(node, isAsync) {'
  +#13#10'  this.next();'#13#10'  return this.parseFunction(node, true, false, '
  +'isAsync)'#13#10'};'#13#10#13#10'pp$1.isFunction = function() {'#13#10'  ret'
  +'urn this.type === types._function || this.isAsyncFunction()'#13#10'};'#13#10
  +#13#10'pp$1.parseIfStatement = function(node) {'#13#10'  this.next();'#13#10
  +'  node.test = this.parseParenExpression();'#13#10'  node.consequent = this.'
  +'parseStatement(!this.strict && this.isFunction());'#13#10'  node.alternate '
  +'= this.eat(types._else) ? this.parseStatement(!this.strict && this.isFuncti'
  +'on()) : null;'#13#10'  return this.finishNode(node, "IfStatement")'#13#10'}'
  +';'#13#10#13#10'pp$1.parseReturnStatement = function(node) {'#13#10'  if (!t'
  +'his.inFunction && !this.options.allowReturnOutsideFunction)'#13#10'    { th'
  +'is.raise(this.start, "''return'' outside of function"); }'#13#10'  this.nex'
  +'t();'#13#10#13#10#13#10'  if (this.eat(types.semi) || this.insertSemicolon('
  +')) { node.argument = null; }'#13#10'  else { node.argument = this.parseExpr'
  +'ession(); this.semicolon(); }'#13#10'  return this.finishNode(node, "Return'
  +'Statement")'#13#10'};'#13#10#13#10'pp$1.parseSwitchStatement = function(nod'
  +'e) {'#13#10'  var this$1 = this;'#13#10#13#10'  this.next();'#13#10'  node.'
  +'discriminant = this.parseParenExpression();'#13#10'  node.cases = [];'#13#10
  +'  this.expect(types.braceL);'#13#10'  this.labels.push(switchLabel);'#13#10
  +'  this.enterLexicalScope();'#13#10#13#10#13#10'  var cur;'#13#10'  for (var'
  +' sawDefault = false; this.type != types.braceR;) {'#13#10'    if (this$1.ty'
  +'pe === types._case || this$1.type === types._default) {'#13#10'      var is'
  +'Case = this$1.type === types._case;'#13#10'      if (cur) { this$1.finishNo'
  +'de(cur, "SwitchCase"); }'#13#10'      node.cases.push(cur = this$1.startNod'
  +'e());'#13#10'      cur.consequent = [];'#13#10'      this$1.next();'#13#10
  ,'      if (isCase) {'#13#10'        cur.test = this$1.parseExpression();'#13
  +#10'      } else {'#13#10'        if (sawDefault) { this$1.raiseRecoverable('
  +'this$1.lastTokStart, "Multiple default clauses"); }'#13#10'        sawDefau'
  +'lt = true;'#13#10'        cur.test = null;'#13#10'      }'#13#10'      this'
  +'$1.expect(types.colon);'#13#10'    } else {'#13#10'      if (!cur) { this$1'
  +'.unexpected(); }'#13#10'      cur.consequent.push(this$1.parseStatement(tru'
  +'e));'#13#10'    }'#13#10'  }'#13#10'  this.exitLexicalScope();'#13#10'  if '
  +'(cur) { this.finishNode(cur, "SwitchCase"); }'#13#10'  this.next();'#13#10
  +'  this.labels.pop();'#13#10'  return this.finishNode(node, "SwitchStatement'
  +'")'#13#10'};'#13#10#13#10'pp$1.parseThrowStatement = function(node) {'#13#10
  +'  this.next();'#13#10'  if (lineBreak.test(this.input.slice(this.lastTokEnd'
  +', this.start)))'#13#10'    { this.raise(this.lastTokEnd, "Illegal newline a'
  +'fter throw"); }'#13#10'  node.argument = this.parseExpression();'#13#10'  t'
  +'his.semicolon();'#13#10'  return this.finishNode(node, "ThrowStatement")'#13
  +#10'};'#13#10#13#10#13#10'var empty = [];'#13#10#13#10'pp$1.parseTryStatemen'
  +'t = function(node) {'#13#10'  this.next();'#13#10'  node.block = this.parse'
  +'Block();'#13#10'  node.handler = null;'#13#10'  if (this.type === types._ca'
  +'tch) {'#13#10'    var clause = this.startNode();'#13#10'    this.next();'#13
  +#10'    this.expect(types.parenL);'#13#10'    clause.param = this.parseBindi'
  +'ngAtom();'#13#10'    this.enterLexicalScope();'#13#10'    this.checkLVal(cl'
  +'ause.param, "let");'#13#10'    this.expect(types.parenR);'#13#10'    clause'
  +'.body = this.parseBlock(false);'#13#10'    this.exitLexicalScope();'#13#10
  +'    node.handler = this.finishNode(clause, "CatchClause");'#13#10'  }'#13#10
  +'  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;'#13
  +#10'  if (!node.handler && !node.finalizer)'#13#10'    { this.raise(node.sta'
  +'rt, "Missing catch or finally clause"); }'#13#10'  return this.finishNode(n'
  +'ode, "TryStatement")'#13#10'};'#13#10#13#10'pp$1.parseVarStatement = functi'
  +'on(node, kind) {'#13#10'  this.next();'#13#10'  this.parseVar(node, false, '
  +'kind);'#13#10'  this.semicolon();'#13#10'  return this.finishNode(node, "Va'
  +'riableDeclaration")'#13#10'};'#13#10#13#10'pp$1.parseWhileStatement = funct'
  +'ion(node) {'#13#10'  this.next();'#13#10'  node.test = this.parseParenExpre'
  +'ssion();'#13#10'  this.labels.push(loopLabel);'#13#10'  node.body = this.pa'
  +'rseStatement(false);'#13#10'  this.labels.pop();'#13#10'  return this.finis'
  +'hNode(node, "WhileStatement")'#13#10'};'#13#10#13#10'pp$1.parseWithStatemen'
  +'t = function(node) {'#13#10'  if (this.strict) { this.raise(this.start, "'''
  +'with'' in strict mode"); }'#13#10'  this.next();'#13#10'  node.object = thi'
  +'s.parseParenExpression();'#13#10'  node.body = this.parseStatement(false);'
  +#13#10'  return this.finishNode(node, "WithStatement")'#13#10'};'#13#10#13#10
  +'pp$1.parseEmptyStatement = function(node) {'#13#10'  this.next();'#13#10'  '
  +'return this.finishNode(node, "EmptyStatement")'#13#10'};'#13#10#13#10'pp$1.'
  +'parseLabeledStatement = function(node, maybeName, expr) {'#13#10'  var this'
  +'$1 = this;'#13#10#13#10'  for (var i$1 = 0, list = this$1.labels; i$1 < lis'
  +'t.length; i$1 += 1)'#13#10'    {'#13#10'    var label = list[i$1];'#13#10#13
  +#10'    if (label.name === maybeName)'#13#10'      { this$1.raise(expr.start'
  +', "Label ''" + maybeName + "'' is already declared");'#13#10'  } }'#13#10' '
  +' var kind = this.type.isLoop ? "loop" : this.type === types._switch ? "swit'
  +'ch" : null;'#13#10'  for (var i = this.labels.length - 1; i >= 0; i--) {'#13
  +#10'    var label$1 = this$1.labels[i];'#13#10'    if (label$1.statementStar'
  +'t == node.start) {'#13#10'      label$1.statementStart = this$1.start;'#13
  +#10'      label$1.kind = kind;'#13#10'    } else { break }'#13#10'  }'#13#10
  +'  this.labels.push({name: maybeName, kind: kind, statementStart: this.start'
  +'});'#13#10'  node.body = this.parseStatement(true);'#13#10'  if (node.body.'
  +'type == "ClassDeclaration" ||'#13#10'      node.body.type == "VariableDecla'
  +'ration" && node.body.kind != "var" ||'#13#10'      node.body.type == "Funct'
  +'ionDeclaration" && (this.strict || node.body.generator))'#13#10'    { this.'
  +'raiseRecoverable(node.body.start, "Invalid labeled declaration"); }'#13#10
  +'  this.labels.pop();'#13#10'  node.label = expr;'#13#10'  return this.finis'
  +'hNode(node, "LabeledStatement")'#13#10'};'#13#10#13#10'pp$1.parseExpression'
  +'Statement = function(node, expr) {'#13#10'  node.expression = expr;'#13#10
  +'  this.semicolon();'#13#10'  return this.finishNode(node, "ExpressionStatem'
  +'ent")'#13#10'};'#13#10#13#10#13#10'pp$1.parseBlock = function(createNewLexi'
  +'calScope) {'#13#10'  var this$1 = this;'#13#10'  if ( createNewLexicalScope'
  +' === void 0 ) createNewLexicalScope = true;'#13#10#13#10'  var node = this.'
  +'startNode();'#13#10'  node.body = [];'#13#10'  this.expect(types.braceL);'
  ,#13#10'  if (createNewLexicalScope) {'#13#10'    this.enterLexicalScope();'
  +#13#10'  }'#13#10'  while (!this.eat(types.braceR)) {'#13#10'    var stmt = '
  +'this$1.parseStatement(true);'#13#10'    node.body.push(stmt);'#13#10'  }'#13
  +#10'  if (createNewLexicalScope) {'#13#10'    this.exitLexicalScope();'#13#10
  +'  }'#13#10'  return this.finishNode(node, "BlockStatement")'#13#10'};'#13#10
  +#13#10#13#10'pp$1.parseFor = function(node, init) {'#13#10'  node.init = ini'
  +'t;'#13#10'  this.expect(types.semi);'#13#10'  node.test = this.type === typ'
  +'es.semi ? null : this.parseExpression();'#13#10'  this.expect(types.semi);'
  +#13#10'  node.update = this.type === types.parenR ? null : this.parseExpress'
  +'ion();'#13#10'  this.expect(types.parenR);'#13#10'  this.exitLexicalScope()'
  +';'#13#10'  node.body = this.parseStatement(false);'#13#10'  this.labels.pop'
  +'();'#13#10'  return this.finishNode(node, "ForStatement")'#13#10'};'#13#10
  +#13#10#13#10'pp$1.parseForIn = function(node, init) {'#13#10'  var type = th'
  +'is.type === types._in ? "ForInStatement" : "ForOfStatement";'#13#10'  this.'
  +'next();'#13#10'  node.left = init;'#13#10'  node.right = this.parseExpressi'
  +'on();'#13#10'  this.expect(types.parenR);'#13#10'  this.exitLexicalScope();'
  +#13#10'  node.body = this.parseStatement(false);'#13#10'  this.labels.pop();'
  +#13#10'  return this.finishNode(node, type)'#13#10'};'#13#10#13#10#13#10'pp$'
  +'1.parseVar = function(node, isFor, kind) {'#13#10'  var this$1 = this;'#13
  +#10#13#10'  node.declarations = [];'#13#10'  node.kind = kind;'#13#10'  for '
  +'(;;) {'#13#10'    var decl = this$1.startNode();'#13#10'    this$1.parseVar'
  +'Id(decl, kind);'#13#10'    if (this$1.eat(types.eq)) {'#13#10'      decl.in'
  +'it = this$1.parseMaybeAssign(isFor);'#13#10'    } else if (kind === "const"'
  +' && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this'
  +'$1.isContextual("of")))) {'#13#10'      this$1.unexpected();'#13#10'    } e'
  +'lse if (decl.id.type != "Identifier" && !(isFor && (this$1.type === types._'
  +'in || this$1.isContextual("of")))) {'#13#10'      this$1.raise(this$1.lastT'
  +'okEnd, "Complex binding patterns require an initialization value");'#13#10
  +'    } else {'#13#10'      decl.init = null;'#13#10'    }'#13#10'    node.de'
  +'clarations.push(this$1.finishNode(decl, "VariableDeclarator"));'#13#10'    '
  +'if (!this$1.eat(types.comma)) { break }'#13#10'  }'#13#10'  return node'#13
  +#10'};'#13#10#13#10'pp$1.parseVarId = function(decl, kind) {'#13#10'  decl.i'
  +'d = this.parseBindingAtom(kind);'#13#10'  this.checkLVal(decl.id, kind, fal'
  +'se);'#13#10'};'#13#10#13#10#13#10'pp$1.parseFunction = function(node, isSta'
  +'tement, allowExpressionBody, isAsync) {'#13#10'  this.initFunction(node);'
  +#13#10'  if (this.options.ecmaVersion >= 6 && !isAsync)'#13#10'    { node.ge'
  +'nerator = this.eat(types.star); }'#13#10'  if (this.options.ecmaVersion >= '
  +'8)'#13#10'    { node.async = !!isAsync; }'#13#10#13#10'  if (isStatement) {'
  +#13#10'    node.id = isStatement === "nullableID" && this.type != types.name'
  +' ? null : this.parseIdent();'#13#10'    if (node.id) {'#13#10'      this.ch'
  +'eckLVal(node.id, "var");'#13#10'    }'#13#10'  }'#13#10#13#10'  var oldInGe'
  +'n = this.inGenerator, oldInAsync = this.inAsync,'#13#10'      oldYieldPos ='
  +' this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;'
  +#13#10'  this.inGenerator = node.generator;'#13#10'  this.inAsync = node.asy'
  +'nc;'#13#10'  this.yieldPos = 0;'#13#10'  this.awaitPos = 0;'#13#10'  this.i'
  +'nFunction = true;'#13#10'  this.enterFunctionScope();'#13#10#13#10'  if (!i'
  +'sStatement)'#13#10'    { node.id = this.type == types.name ? this.parseIden'
  +'t() : null; }'#13#10#13#10'  this.parseFunctionParams(node);'#13#10'  this.'
  +'parseFunctionBody(node, allowExpressionBody);'#13#10#13#10'  this.inGenerat'
  +'or = oldInGen;'#13#10'  this.inAsync = oldInAsync;'#13#10'  this.yieldPos ='
  +' oldYieldPos;'#13#10'  this.awaitPos = oldAwaitPos;'#13#10'  this.inFunctio'
  +'n = oldInFunc;'#13#10'  return this.finishNode(node, isStatement ? "Functio'
  +'nDeclaration" : "FunctionExpression")'#13#10'};'#13#10#13#10'pp$1.parseFunc'
  +'tionParams = function(node) {'#13#10'  this.expect(types.parenL);'#13#10'  '
  +'node.params = this.parseBindingList(types.parenR, false, this.options.ecmaV'
  +'ersion >= 8);'#13#10'  this.checkYieldAwaitInDefaultParams();'#13#10'};'#13
  +#10#13#10#13#10'pp$1.parseClass = function(node, isStatement) {'#13#10'  var'
  +' this$1 = this;'#13#10#13#10'  this.next();'#13#10#13#10'  this.parseClassI'
  +'d(node, isStatement);'#13#10'  this.parseClassSuper(node);'#13#10'  var cla'
  +'ssBody = this.startNode();'#13#10'  var hadConstructor = false;'#13#10'  cl'
  +'assBody.body = [];'#13#10'  this.expect(types.braceL);'#13#10'  while (!thi'
  +'s.eat(types.braceR)) {'#13#10'    if (this$1.eat(types.semi)) { continue }'
  +#13#10'    var method = this$1.startNode();'#13#10'    var isGenerator = thi'
  +'s$1.eat(types.star);'#13#10'    var isAsync = false;'#13#10'    var isMaybe'
  ,'Static = this$1.type === types.name && this$1.value === "static";'#13#10'  '
  +'  this$1.parsePropertyName(method);'#13#10'    method.static = isMaybeStati'
  +'c && this$1.type !== types.parenL;'#13#10'    if (method.static) {'#13#10' '
  +'     if (isGenerator) { this$1.unexpected(); }'#13#10'      isGenerator = t'
  +'his$1.eat(types.star);'#13#10'      this$1.parsePropertyName(method);'#13#10
  +'    }'#13#10'    if (this$1.options.ecmaVersion >= 8 && !isGenerator && !me'
  +'thod.computed &&'#13#10'        method.key.type === "Identifier" && method.'
  +'key.name === "async" && this$1.type !== types.parenL &&'#13#10'        !thi'
  +'s$1.canInsertSemicolon()) {'#13#10'      isAsync = true;'#13#10'      this$'
  +'1.parsePropertyName(method);'#13#10'    }'#13#10'    method.kind = "method"'
  +';'#13#10'    var isGetSet = false;'#13#10'    if (!method.computed) {'#13#10
  +'      var key = method.key;'#13#10'      if (!isGenerator && !isAsync && ke'
  +'y.type === "Identifier" && this$1.type !== types.parenL && (key.name === "g'
  +'et" || key.name === "set")) {'#13#10'        isGetSet = true;'#13#10'      '
  +'  method.kind = key.name;'#13#10'        key = this$1.parsePropertyName(met'
  +'hod);'#13#10'      }'#13#10'      if (!method.static && (key.type === "Iden'
  +'tifier" && key.name === "constructor" ||'#13#10'          key.type === "Lit'
  +'eral" && key.value === "constructor")) {'#13#10'        if (hadConstructor)'
  +' { this$1.raise(key.start, "Duplicate constructor in the same class"); }'#13
  +#10'        if (isGetSet) { this$1.raise(key.start, "Constructor can''t have'
  +' get/set modifier"); }'#13#10'        if (isGenerator) { this$1.raise(key.s'
  +'tart, "Constructor can''t be a generator"); }'#13#10'        if (isAsync) {'
  +' this$1.raise(key.start, "Constructor can''t be an async method"); }'#13#10
  +'        method.kind = "constructor";'#13#10'        hadConstructor = true;'
  +#13#10'      }'#13#10'    }'#13#10'    this$1.parseClassMethod(classBody, me'
  +'thod, isGenerator, isAsync);'#13#10'    if (isGetSet) {'#13#10'      var pa'
  +'ramCount = method.kind === "get" ? 0 : 1;'#13#10'      if (method.value.par'
  +'ams.length !== paramCount) {'#13#10'        var start = method.value.start;'
  +#13#10'        if (method.kind === "get")'#13#10'          { this$1.raiseRec'
  +'overable(start, "getter should have no params"); }'#13#10'        else'#13
  +#10'          { this$1.raiseRecoverable(start, "setter should have exactly o'
  +'ne param"); }'#13#10'      } else {'#13#10'        if (method.kind === "set'
  +'" && method.value.params[0].type === "RestElement")'#13#10'          { this'
  +'$1.raiseRecoverable(method.value.params[0].start, "Setter cannot use rest p'
  +'arams"); }'#13#10'      }'#13#10'    }'#13#10'  }'#13#10'  node.body = this'
  +'.finishNode(classBody, "ClassBody");'#13#10'  return this.finishNode(node, '
  +'isStatement ? "ClassDeclaration" : "ClassExpression")'#13#10'};'#13#10#13#10
  +'pp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {'
  +#13#10'  method.value = this.parseMethod(isGenerator, isAsync);'#13#10'  cla'
  +'ssBody.body.push(this.finishNode(method, "MethodDefinition"));'#13#10'};'#13
  +#10#13#10'pp$1.parseClassId = function(node, isStatement) {'#13#10'  node.id'
  +' = this.type === types.name ? this.parseIdent() : isStatement === true ? th'
  +'is.unexpected() : null;'#13#10'};'#13#10#13#10'pp$1.parseClassSuper = funct'
  +'ion(node) {'#13#10'  node.superClass = this.eat(types._extends) ? this.pars'
  +'eExprSubscripts() : null;'#13#10'};'#13#10#13#10#13#10'pp$1.parseExport = f'
  +'unction(node, exports) {'#13#10'  var this$1 = this;'#13#10#13#10'  this.ne'
  +'xt();'#13#10'  if (this.eat(types.star)) {'#13#10'    this.expectContextual'
  +'("from");'#13#10'    node.source = this.type === types.string ? this.parseE'
  +'xprAtom() : this.unexpected();'#13#10'    this.semicolon();'#13#10'    retu'
  +'rn this.finishNode(node, "ExportAllDeclaration")'#13#10'  }'#13#10'  if (th'
  +'is.eat(types._default)) {'#13#10'    this.checkExport(exports, "default", t'
  +'his.lastTokStart);'#13#10'    var isAsync;'#13#10'    if (this.type === typ'
  +'es._function || (isAsync = this.isAsyncFunction())) {'#13#10'      var fNod'
  +'e = this.startNode();'#13#10'      this.next();'#13#10'      if (isAsync) {'
  +' this.next(); }'#13#10'      node.declaration = this.parseFunction(fNode, "'
  +'nullableID", false, isAsync);'#13#10'    } else if (this.type === types._cl'
  +'ass) {'#13#10'      var cNode = this.startNode();'#13#10'      node.declara'
  +'tion = this.parseClass(cNode, "nullableID");'#13#10'    } else {'#13#10'   '
  +'   node.declaration = this.parseMaybeAssign();'#13#10'      this.semicolon('
  +');'#13#10'    }'#13#10'    return this.finishNode(node, "ExportDefaultDecla'
  +'ration")'#13#10'  }'#13#10'  if (this.shouldParseExportStatement()) {'#13#10
  +'    node.declaration = this.parseStatement(true);'#13#10'    if (node.decla'
  +'ration.type === "VariableDeclaration")'#13#10'      { this.checkVariableExp'
  +'ort(exports, node.declaration.declarations); }'#13#10'    else'#13#10'     '
  ,' { this.checkExport(exports, node.declaration.id.name, node.declaration.id.'
  +'start); }'#13#10'    node.specifiers = [];'#13#10'    node.source = null;'
  +#13#10'  } else {'#13#10'    node.declaration = null;'#13#10'    node.specif'
  +'iers = this.parseExportSpecifiers(exports);'#13#10'    if (this.eatContextu'
  +'al("from")) {'#13#10'      node.source = this.type === types.string ? this.'
  +'parseExprAtom() : this.unexpected();'#13#10'    } else {'#13#10'      for ('
  +'var i = 0, list = node.specifiers; i < list.length; i += 1) {'#13#10'      '
  +'  var spec = list[i];'#13#10#13#10'        this$1.checkUnreserved(spec.loca'
  +'l);'#13#10'      }'#13#10#13#10'      node.source = null;'#13#10'    }'#13
  +#10'    this.semicolon();'#13#10'  }'#13#10'  return this.finishNode(node, "'
  +'ExportNamedDeclaration")'#13#10'};'#13#10#13#10'pp$1.checkExport = function'
  +'(exports, name, pos) {'#13#10'  if (!exports) { return }'#13#10'  if (has(e'
  +'xports, name))'#13#10'    { this.raiseRecoverable(pos, "Duplicate export '''
  +'" + name + "''"); }'#13#10'  exports[name] = true;'#13#10'};'#13#10#13#10'p'
  +'p$1.checkPatternExport = function(exports, pat) {'#13#10'  var this$1 = thi'
  +'s;'#13#10#13#10'  var type = pat.type;'#13#10'  if (type == "Identifier")'
  +#13#10'    { this.checkExport(exports, pat.name, pat.start); }'#13#10'  else'
  +' if (type == "ObjectPattern")'#13#10'    { for (var i = 0, list = pat.prope'
  +'rties; i < list.length; i += 1)'#13#10'      {'#13#10'        var prop = li'
  +'st[i];'#13#10#13#10'        this$1.checkPatternExport(exports, prop.value);'
  +#13#10'      } }'#13#10'  else if (type == "ArrayPattern")'#13#10'    { for '
  +'(var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {'#13#10
  +'      var elt = list$1[i$1];'#13#10#13#10'        if (elt) { this$1.checkPa'
  +'tternExport(exports, elt); }'#13#10'    } }'#13#10'  else if (type == "Assi'
  +'gnmentPattern")'#13#10'    { this.checkPatternExport(exports, pat.left); }'
  +#13#10'  else if (type == "ParenthesizedExpression")'#13#10'    { this.check'
  +'PatternExport(exports, pat.expression); }'#13#10'};'#13#10#13#10'pp$1.check'
  +'VariableExport = function(exports, decls) {'#13#10'  var this$1 = this;'#13
  +#10#13#10'  if (!exports) { return }'#13#10'  for (var i = 0, list = decls; '
  +'i < list.length; i += 1)'#13#10'    {'#13#10'    var decl = list[i];'#13#10
  +#13#10'    this$1.checkPatternExport(exports, decl.id);'#13#10'  }'#13#10'};'
  +#13#10#13#10'pp$1.shouldParseExportStatement = function() {'#13#10'  return '
  +'this.type.keyword === "var" ||'#13#10'    this.type.keyword === "const" ||'
  +#13#10'    this.type.keyword === "class" ||'#13#10'    this.type.keyword ==='
  +' "function" ||'#13#10'    this.isLet() ||'#13#10'    this.isAsyncFunction()'
  +#13#10'};'#13#10#13#10#13#10'pp$1.parseExportSpecifiers = function(exports) '
  +'{'#13#10'  var this$1 = this;'#13#10#13#10'  var nodes = [], first = true;'
  +#13#10'  this.expect(types.braceL);'#13#10'  while (!this.eat(types.braceR))'
  +' {'#13#10'    if (!first) {'#13#10'      this$1.expect(types.comma);'#13#10
  +'      if (this$1.afterTrailingComma(types.braceR)) { break }'#13#10'    } e'
  +'lse { first = false; }'#13#10#13#10'    var node = this$1.startNode();'#13
  +#10'    node.local = this$1.parseIdent(true);'#13#10'    node.exported = thi'
  +'s$1.eatContextual("as") ? this$1.parseIdent(true) : node.local;'#13#10'    '
  +'this$1.checkExport(exports, node.exported.name, node.exported.start);'#13#10
  +'    nodes.push(this$1.finishNode(node, "ExportSpecifier"));'#13#10'  }'#13
  +#10'  return nodes'#13#10'};'#13#10#13#10#13#10'pp$1.parseImport = function('
  +'node) {'#13#10'  this.next();'#13#10'  if (this.type === types.string) {'#13
  +#10'    node.specifiers = empty;'#13#10'    node.source = this.parseExprAtom'
  +'();'#13#10'  } else {'#13#10'    node.specifiers = this.parseImportSpecifie'
  +'rs();'#13#10'    this.expectContextual("from");'#13#10'    node.source = th'
  +'is.type === types.string ? this.parseExprAtom() : this.unexpected();'#13#10
  +'  }'#13#10'  this.semicolon();'#13#10'  return this.finishNode(node, "Impor'
  +'tDeclaration")'#13#10'};'#13#10#13#10#13#10'pp$1.parseImportSpecifiers = fu'
  +'nction() {'#13#10'  var this$1 = this;'#13#10#13#10'  var nodes = [], first'
  +' = true;'#13#10'  if (this.type === types.name) {'#13#10'    var node = thi'
  +'s.startNode();'#13#10'    node.local = this.parseIdent();'#13#10'    this.c'
  +'heckLVal(node.local, "let");'#13#10'    nodes.push(this.finishNode(node, "I'
  +'mportDefaultSpecifier"));'#13#10'    if (!this.eat(types.comma)) { return n'
  +'odes }'#13#10'  }'#13#10'  if (this.type === types.star) {'#13#10'    var n'
  +'ode$1 = this.startNode();'#13#10'    this.next();'#13#10'    this.expectCon'
  +'textual("as");'#13#10'    node$1.local = this.parseIdent();'#13#10'    this'
  +'.checkLVal(node$1.local, "let");'#13#10'    nodes.push(this.finishNode(node'
  +'$1, "ImportNamespaceSpecifier"));'#13#10'    return nodes'#13#10'  }'#13#10
  +'  this.expect(types.braceL);'#13#10'  while (!this.eat(types.braceR)) {'#13
  ,#10'    if (!first) {'#13#10'      this$1.expect(types.comma);'#13#10'      '
  +'if (this$1.afterTrailingComma(types.braceR)) { break }'#13#10'    } else { '
  +'first = false; }'#13#10#13#10'    var node$2 = this$1.startNode();'#13#10' '
  +'   node$2.imported = this$1.parseIdent(true);'#13#10'    if (this$1.eatCont'
  +'extual("as")) {'#13#10'      node$2.local = this$1.parseIdent();'#13#10'   '
  +' } else {'#13#10'      this$1.checkUnreserved(node$2.imported);'#13#10'    '
  +'  node$2.local = node$2.imported;'#13#10'    }'#13#10'    this$1.checkLVal('
  +'node$2.local, "let");'#13#10'    nodes.push(this$1.finishNode(node$2, "Impo'
  +'rtSpecifier"));'#13#10'  }'#13#10'  return nodes'#13#10'};'#13#10#13#10'pp$'
  +'1.adaptDirectivePrologue = function(statements) {'#13#10'  for (var i = 0; '
  +'i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {'
  +#13#10'    statements[i].directive = statements[i].expression.raw.slice(1, -'
  +'1);'#13#10'  }'#13#10'};'#13#10'pp$1.isDirectiveCandidate = function(statem'
  +'ent) {'#13#10'  return ('#13#10'    statement.type === "ExpressionStatement'
  +'" &&'#13#10'    statement.expression.type === "Literal" &&'#13#10'    typeo'
  +'f statement.expression.value === "string" &&'#13#10'    (this.input[stateme'
  +'nt.start] === "\"" || this.input[statement.start] === "''")'#13#10'  )'#13
  +#10'};'#13#10#13#10'var pp$2 = Parser.prototype;'#13#10#13#10#13#10'pp$2.toA'
  +'ssignable = function(node, isBinding) {'#13#10'  var this$1 = this;'#13#10
  +#13#10'  if (this.options.ecmaVersion >= 6 && node) {'#13#10'    switch (nod'
  +'e.type) {'#13#10'    case "Identifier":'#13#10'      if (this.inAsync && no'
  +'de.name === "await")'#13#10'        { this.raise(node.start, "Can not use '
  +'''await'' as identifier inside an async function"); }'#13#10'      break'#13
  +#10#13#10'    case "ObjectPattern":'#13#10'    case "ArrayPattern":'#13#10' '
  +'     break'#13#10#13#10'    case "ObjectExpression":'#13#10'      node.type'
  +' = "ObjectPattern";'#13#10'      for (var i = 0, list = node.properties; i '
  +'< list.length; i += 1) {'#13#10'        var prop = list[i];'#13#10#13#10'  '
  +'    if (prop.kind !== "init") { this$1.raise(prop.key.start, "Object patter'
  +'n can''t contain getter or setter"); }'#13#10'        this$1.toAssignable(p'
  +'rop.value, isBinding);'#13#10'      }'#13#10'      break'#13#10#13#10'    c'
  +'ase "ArrayExpression":'#13#10'      node.type = "ArrayPattern";'#13#10'    '
  +'  this.toAssignableList(node.elements, isBinding);'#13#10'      break'#13#10
  +#13#10'    case "AssignmentExpression":'#13#10'      if (node.operator === "'
  +'=") {'#13#10'        node.type = "AssignmentPattern";'#13#10'        delete'
  +' node.operator;'#13#10'        this.toAssignable(node.left, isBinding);'#13
  +#10'      } else {'#13#10'        this.raise(node.left.end, "Only ''='' oper'
  +'ator can be used for specifying default value.");'#13#10'        break'#13
  +#10'      }'#13#10#13#10'    case "AssignmentPattern":'#13#10'      break'#13
  +#10#13#10'    case "ParenthesizedExpression":'#13#10'      this.toAssignable'
  +'(node.expression, isBinding);'#13#10'      break'#13#10#13#10'    case "Mem'
  +'berExpression":'#13#10'      if (!isBinding) { break }'#13#10#13#10'    def'
  +'ault:'#13#10'      this.raise(node.start, "Assigning to rvalue");'#13#10'  '
  +'  }'#13#10'  }'#13#10'  return node'#13#10'};'#13#10#13#10#13#10'pp$2.toAss'
  +'ignableList = function(exprList, isBinding) {'#13#10'  var this$1 = this;'
  +#13#10#13#10'  var end = exprList.length;'#13#10'  if (end) {'#13#10'    var'
  +' last = exprList[end - 1];'#13#10'    if (last && last.type == "RestElement'
  +'") {'#13#10'      --end;'#13#10'    } else if (last && last.type == "Spread'
  +'Element") {'#13#10'      last.type = "RestElement";'#13#10'      var arg = '
  +'last.argument;'#13#10'      this.toAssignable(arg, isBinding);'#13#10'     '
  +' --end;'#13#10'    }'#13#10#13#10'    if (this.options.ecmaVersion === 6 &&'
  +' isBinding && last && last.type === "RestElement" && last.argument.type !=='
  +' "Identifier")'#13#10'      { this.unexpected(last.argument.start); }'#13#10
  +'  }'#13#10'  for (var i = 0; i < end; i++) {'#13#10'    var elt = exprList['
  +'i];'#13#10'    if (elt) { this$1.toAssignable(elt, isBinding); }'#13#10'  }'
  +#13#10'  return exprList'#13#10'};'#13#10#13#10#13#10'pp$2.parseSpread = fun'
  +'ction(refDestructuringErrors) {'#13#10'  var node = this.startNode();'#13#10
  +'  this.next();'#13#10'  node.argument = this.parseMaybeAssign(false, refDes'
  +'tructuringErrors);'#13#10'  return this.finishNode(node, "SpreadElement")'
  +#13#10'};'#13#10#13#10'pp$2.parseRestBinding = function() {'#13#10'  var nod'
  +'e = this.startNode();'#13#10'  this.next();'#13#10#13#10'  if (this.options'
  +'.ecmaVersion === 6 && this.type !== types.name)'#13#10'    { this.unexpecte'
  +'d(); }'#13#10#13#10'  node.argument = this.parseBindingAtom();'#13#10#13#10
  +'  return this.finishNode(node, "RestElement")'#13#10'};'#13#10#13#10#13#10
  +'pp$2.parseBindingAtom = function() {'#13#10'  if (this.options.ecmaVersion '
  ,'>= 6) {'#13#10'    switch (this.type) {'#13#10'    case types.bracketL:'#13
  +#10'      var node = this.startNode();'#13#10'      this.next();'#13#10'    '
  +'  node.elements = this.parseBindingList(types.bracketR, true, true);'#13#10
  +'      return this.finishNode(node, "ArrayPattern")'#13#10#13#10'    case ty'
  +'pes.braceL:'#13#10'      return this.parseObj(true)'#13#10'    }'#13#10'  }'
  +#13#10'  return this.parseIdent()'#13#10'};'#13#10#13#10'pp$2.parseBindingLi'
  +'st = function(close, allowEmpty, allowTrailingComma) {'#13#10'  var this$1 '
  +'= this;'#13#10#13#10'  var elts = [], first = true;'#13#10'  while (!this.e'
  +'at(close)) {'#13#10'    if (first) { first = false; }'#13#10'    else { thi'
  +'s$1.expect(types.comma); }'#13#10'    if (allowEmpty && this$1.type === typ'
  +'es.comma) {'#13#10'      elts.push(null);'#13#10'    } else if (allowTraili'
  +'ngComma && this$1.afterTrailingComma(close)) {'#13#10'      break'#13#10'  '
  +'  } else if (this$1.type === types.ellipsis) {'#13#10'      var rest = this'
  +'$1.parseRestBinding();'#13#10'      this$1.parseBindingListItem(rest);'#13
  +#10'      elts.push(rest);'#13#10'      if (this$1.type === types.comma) { t'
  +'his$1.raise(this$1.start, "Comma is not permitted after the rest element");'
  +' }'#13#10'      this$1.expect(close);'#13#10'      break'#13#10'    } else '
  +'{'#13#10'      var elem = this$1.parseMaybeDefault(this$1.start, this$1.sta'
  +'rtLoc);'#13#10'      this$1.parseBindingListItem(elem);'#13#10'      elts.p'
  +'ush(elem);'#13#10'    }'#13#10'  }'#13#10'  return elts'#13#10'};'#13#10#13
  +#10'pp$2.parseBindingListItem = function(param) {'#13#10'  return param'#13
  +#10'};'#13#10#13#10#13#10'pp$2.parseMaybeDefault = function(startPos, startL'
  +'oc, left) {'#13#10'  left = left || this.parseBindingAtom();'#13#10'  if (t'
  +'his.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }'#13#10
  +'  var node = this.startNodeAt(startPos, startLoc);'#13#10'  node.left = lef'
  +'t;'#13#10'  node.right = this.parseMaybeAssign();'#13#10'  return this.fini'
  +'shNode(node, "AssignmentPattern")'#13#10'};'#13#10#13#10#13#10'pp$2.checkLV'
  +'al = function(expr, bindingType, checkClashes) {'#13#10'  var this$1 = this'
  +';'#13#10#13#10'  switch (expr.type) {'#13#10'  case "Identifier":'#13#10'  '
  +'  if (this.strict && this.reservedWordsStrictBind.test(expr.name))'#13#10' '
  +'     { this.raiseRecoverable(expr.start, (bindingType ? "Binding " : "Assig'
  +'ning to ") + expr.name + " in strict mode"); }'#13#10'    if (checkClashes)'
  +' {'#13#10'      if (has(checkClashes, expr.name))'#13#10'        { this.rai'
  +'seRecoverable(expr.start, "Argument name clash"); }'#13#10'      checkClash'
  +'es[expr.name] = true;'#13#10'    }'#13#10'    if (bindingType && bindingTyp'
  +'e !== "none") {'#13#10'      if ('#13#10'        bindingType === "var" && !'
  +'this.canDeclareVarName(expr.name) ||'#13#10'        bindingType !== "var" &'
  +'& !this.canDeclareLexicalName(expr.name)'#13#10'      ) {'#13#10'        th'
  +'is.raiseRecoverable(expr.start, ("Identifier ''" + (expr.name) + "'' has al'
  +'ready been declared"));'#13#10'      }'#13#10'      if (bindingType === "va'
  +'r") {'#13#10'        this.declareVarName(expr.name);'#13#10'      } else {'
  +#13#10'        this.declareLexicalName(expr.name);'#13#10'      }'#13#10'   '
  +' }'#13#10'    break'#13#10#13#10'  case "MemberExpression":'#13#10'    if ('
  +'bindingType) { this.raiseRecoverable(expr.start, (bindingType ? "Binding" :'
  +' "Assigning to") + " member expression"); }'#13#10'    break'#13#10#13#10' '
  +' case "ObjectPattern":'#13#10'    for (var i = 0, list = expr.properties; i'
  +' < list.length; i += 1)'#13#10'      {'#13#10'    var prop = list[i];'#13#10
  +#13#10'    this$1.checkLVal(prop.value, bindingType, checkClashes);'#13#10' '
  +' }'#13#10'    break'#13#10#13#10'  case "ArrayPattern":'#13#10'    for (var'
  +' i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {'#13#10' '
  +'     var elem = list$1[i$1];'#13#10#13#10'    if (elem) { this$1.checkLVal('
  +'elem, bindingType, checkClashes); }'#13#10'    }'#13#10'    break'#13#10#13
  +#10'  case "AssignmentPattern":'#13#10'    this.checkLVal(expr.left, binding'
  +'Type, checkClashes);'#13#10'    break'#13#10#13#10'  case "RestElement":'#13
  +#10'    this.checkLVal(expr.argument, bindingType, checkClashes);'#13#10'   '
  +' break'#13#10#13#10'  case "ParenthesizedExpression":'#13#10'    this.check'
  +'LVal(expr.expression, bindingType, checkClashes);'#13#10'    break'#13#10#13
  +#10'  default:'#13#10'    this.raise(expr.start, (bindingType ? "Binding" : '
  +'"Assigning to") + " rvalue");'#13#10'  }'#13#10'};'#13#10#13#10#13#10'var p'
  +'p$3 = Parser.prototype;'#13#10#13#10#13#10'pp$3.checkPropClash = function(p'
  +'rop, propHash) {'#13#10'  if (this.options.ecmaVersion >= 6 && (prop.comput'
  +'ed || prop.method || prop.shorthand))'#13#10'    { return }'#13#10'  var ke'
  +'y = prop.key;'#13#10'  var name;'#13#10'  switch (key.type) {'#13#10'  case'
  +' "Identifier": name = key.name; break'#13#10'  case "Literal": name = Strin'
  ,'g(key.value); break'#13#10'  default: return'#13#10'  }'#13#10'  var kind ='
  +' prop.kind;'#13#10'  if (this.options.ecmaVersion >= 6) {'#13#10'    if (na'
  +'me === "__proto__" && kind === "init") {'#13#10'      if (propHash.proto) {'
  +' this.raiseRecoverable(key.start, "Redefinition of __proto__ property"); }'
  +#13#10'      propHash.proto = true;'#13#10'    }'#13#10'    return'#13#10'  '
  +'}'#13#10'  name = "$" + name;'#13#10'  var other = propHash[name];'#13#10' '
  +' if (other) {'#13#10'    var redefinition;'#13#10'    if (kind === "init") '
  +'{'#13#10'      redefinition = this.strict && other.init || other.get || oth'
  +'er.set;'#13#10'    } else {'#13#10'      redefinition = other.init || other'
  +'[kind];'#13#10'    }'#13#10'    if (redefinition)'#13#10'      { this.raise'
  +'Recoverable(key.start, "Redefinition of property"); }'#13#10'  } else {'#13
  +#10'    other = propHash[name] = {'#13#10'      init: false,'#13#10'      ge'
  +'t: false,'#13#10'      set: false'#13#10'    };'#13#10'  }'#13#10'  other[k'
  +'ind] = true;'#13#10'};'#13#10#13#10#13#10#13#10#13#10'pp$3.parseExpression '
  +'= function(noIn, refDestructuringErrors) {'#13#10'  var this$1 = this;'#13
  +#10#13#10'  var startPos = this.start, startLoc = this.startLoc;'#13#10'  va'
  +'r expr = this.parseMaybeAssign(noIn, refDestructuringErrors);'#13#10'  if ('
  +'this.type === types.comma) {'#13#10'    var node = this.startNodeAt(startPo'
  +'s, startLoc);'#13#10'    node.expressions = [expr];'#13#10'    while (this.'
  +'eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, ref'
  +'DestructuringErrors)); }'#13#10'    return this.finishNode(node, "SequenceE'
  +'xpression")'#13#10'  }'#13#10'  return expr'#13#10'};'#13#10#13#10#13#10'pp'
  +'$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse'
  +') {'#13#10'  if (this.inGenerator && this.isContextual("yield")) { return t'
  +'his.parseYield() }'#13#10#13#10'  var ownDestructuringErrors = false, oldPa'
  +'renAssign = -1, oldTrailingComma = -1;'#13#10'  if (refDestructuringErrors)'
  +' {'#13#10'    oldParenAssign = refDestructuringErrors.parenthesizedAssign;'
  +#13#10'    oldTrailingComma = refDestructuringErrors.trailingComma;'#13#10' '
  +'   refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trai'
  +'lingComma = -1;'#13#10'  } else {'#13#10'    refDestructuringErrors = new D'
  +'estructuringErrors;'#13#10'    ownDestructuringErrors = true;'#13#10'  }'#13
  +#10#13#10'  var startPos = this.start, startLoc = this.startLoc;'#13#10'  if'
  +' (this.type == types.parenL || this.type == types.name)'#13#10'    { this.p'
  +'otentialArrowAt = this.start; }'#13#10'  var left = this.parseMaybeConditio'
  +'nal(noIn, refDestructuringErrors);'#13#10'  if (afterLeftParse) { left = af'
  +'terLeftParse.call(this, left, startPos, startLoc); }'#13#10'  if (this.type'
  +'.isAssign) {'#13#10'    this.checkPatternErrors(refDestructuringErrors, tru'
  +'e);'#13#10'    if (!ownDestructuringErrors) { DestructuringErrors.call(refD'
  +'estructuringErrors); }'#13#10'    var node = this.startNodeAt(startPos, sta'
  +'rtLoc);'#13#10'    node.operator = this.value;'#13#10'    node.left = this.'
  +'type === types.eq ? this.toAssignable(left) : left;'#13#10'    refDestructu'
  +'ringErrors.shorthandAssign = -1;'#13#10'    this.checkLVal(left);'#13#10'  '
  +'  this.next();'#13#10'    node.right = this.parseMaybeAssign(noIn);'#13#10
  +'    return this.finishNode(node, "AssignmentExpression")'#13#10'  } else {'
  +#13#10'    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestr'
  +'ucturingErrors, true); }'#13#10'  }'#13#10'  if (oldParenAssign > -1) { ref'
  +'DestructuringErrors.parenthesizedAssign = oldParenAssign; }'#13#10'  if (ol'
  +'dTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingCo'
  +'mma; }'#13#10'  return left'#13#10'};'#13#10#13#10#13#10'pp$3.parseMaybeCon'
  +'ditional = function(noIn, refDestructuringErrors) {'#13#10'  var startPos ='
  +' this.start, startLoc = this.startLoc;'#13#10'  var expr = this.parseExprOp'
  +'s(noIn, refDestructuringErrors);'#13#10'  if (this.checkExpressionErrors(re'
  +'fDestructuringErrors)) { return expr }'#13#10'  if (this.eat(types.question'
  +')) {'#13#10'    var node = this.startNodeAt(startPos, startLoc);'#13#10'   '
  +' node.test = expr;'#13#10'    node.consequent = this.parseMaybeAssign();'#13
  +#10'    this.expect(types.colon);'#13#10'    node.alternate = this.parseMayb'
  +'eAssign(noIn);'#13#10'    return this.finishNode(node, "ConditionalExpressi'
  +'on")'#13#10'  }'#13#10'  return expr'#13#10'};'#13#10#13#10#13#10'pp$3.pars'
  +'eExprOps = function(noIn, refDestructuringErrors) {'#13#10'  var startPos ='
  +' this.start, startLoc = this.startLoc;'#13#10'  var expr = this.parseMaybeU'
  +'nary(refDestructuringErrors, false);'#13#10'  if (this.checkExpressionError'
  +'s(refDestructuringErrors)) { return expr }'#13#10'  return expr.start == st'
  +'artPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp'
  +'(expr, startPos, startLoc, -1, noIn)'#13#10'};'#13#10#13#10#13#10'pp$3.pars'
  ,'eExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {'#13#10
  +'  var prec = this.type.binop;'#13#10'  if (prec != null && (!noIn || this.t'
  +'ype !== types._in)) {'#13#10'    if (prec > minPrec) {'#13#10'      var log'
  +'ical = this.type === types.logicalOR || this.type === types.logicalAND;'#13
  +#10'      var op = this.value;'#13#10'      this.next();'#13#10'      var st'
  +'artPos = this.start, startLoc = this.startLoc;'#13#10'      var right = thi'
  +'s.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, '
  +'noIn);'#13#10'      var node = this.buildBinary(leftStartPos, leftStartLoc,'
  +' left, right, op, logical);'#13#10'      return this.parseExprOp(node, left'
  +'StartPos, leftStartLoc, minPrec, noIn)'#13#10'    }'#13#10'  }'#13#10'  ret'
  +'urn left'#13#10'};'#13#10#13#10'pp$3.buildBinary = function(startPos, start'
  +'Loc, left, right, op, logical) {'#13#10'  var node = this.startNodeAt(start'
  +'Pos, startLoc);'#13#10'  node.left = left;'#13#10'  node.operator = op;'#13
  +#10'  node.right = right;'#13#10'  return this.finishNode(node, logical ? "L'
  +'ogicalExpression" : "BinaryExpression")'#13#10'};'#13#10#13#10#13#10'pp$3.p'
  +'arseMaybeUnary = function(refDestructuringErrors, sawUnary) {'#13#10'  var '
  +'this$1 = this;'#13#10#13#10'  var startPos = this.start, startLoc = this.st'
  +'artLoc, expr;'#13#10'  if (this.inAsync && this.isContextual("await")) {'#13
  +#10'    expr = this.parseAwait();'#13#10'    sawUnary = true;'#13#10'  } els'
  +'e if (this.type.prefix) {'#13#10'    var node = this.startNode(), update = '
  +'this.type === types.incDec;'#13#10'    node.operator = this.value;'#13#10' '
  +'   node.prefix = true;'#13#10'    this.next();'#13#10'    node.argument = t'
  +'his.parseMaybeUnary(null, true);'#13#10'    this.checkExpressionErrors(refD'
  +'estructuringErrors, true);'#13#10'    if (update) { this.checkLVal(node.arg'
  +'ument); }'#13#10'    else if (this.strict && node.operator === "delete" &&'
  +#13#10'             node.argument.type === "Identifier")'#13#10'      { this'
  +'.raiseRecoverable(node.start, "Deleting local variable in strict mode"); }'
  +#13#10'    else { sawUnary = true; }'#13#10'    expr = this.finishNode(node,'
  +' update ? "UpdateExpression" : "UnaryExpression");'#13#10'  } else {'#13#10
  +'    expr = this.parseExprSubscripts(refDestructuringErrors);'#13#10'    if '
  +'(this.checkExpressionErrors(refDestructuringErrors)) { return expr }'#13#10
  +'    while (this.type.postfix && !this.canInsertSemicolon()) {'#13#10'      '
  +'var node$1 = this$1.startNodeAt(startPos, startLoc);'#13#10'      node$1.op'
  +'erator = this$1.value;'#13#10'      node$1.prefix = false;'#13#10'      nod'
  +'e$1.argument = expr;'#13#10'      this$1.checkLVal(expr);'#13#10'      this'
  +'$1.next();'#13#10'      expr = this$1.finishNode(node$1, "UpdateExpression"'
  +');'#13#10'    }'#13#10'  }'#13#10#13#10'  if (!sawUnary && this.eat(types.s'
  +'tarstar))'#13#10'    { return this.buildBinary(startPos, startLoc, expr, th'
  +'is.parseMaybeUnary(null, false), "**", false) }'#13#10'  else'#13#10'    { '
  +'return expr }'#13#10'};'#13#10#13#10#13#10'pp$3.parseExprSubscripts = funct'
  +'ion(refDestructuringErrors) {'#13#10'  var startPos = this.start, startLoc '
  +'= this.startLoc;'#13#10'  var expr = this.parseExprAtom(refDestructuringErr'
  +'ors);'#13#10'  var skipArrowSubscripts = expr.type === "ArrowFunctionExpres'
  +'sion" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")";'#13
  +#10'  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSub'
  +'scripts) { return expr }'#13#10'  var result = this.parseSubscripts(expr, s'
  +'tartPos, startLoc);'#13#10'  if (refDestructuringErrors && result.type === '
  +'"MemberExpression") {'#13#10'    if (refDestructuringErrors.parenthesizedAs'
  +'sign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }'
  +#13#10'    if (refDestructuringErrors.parenthesizedBind >= result.start) { r'
  +'efDestructuringErrors.parenthesizedBind = -1; }'#13#10'  }'#13#10'  return '
  +'result'#13#10'};'#13#10#13#10'pp$3.parseSubscripts = function(base, startPo'
  +'s, startLoc, noCalls) {'#13#10'  var this$1 = this;'#13#10#13#10'  var mayb'
  +'eAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" &'
  +'& base.name === "async" &&'#13#10'      this.lastTokEnd == base.end && !thi'
  +'s.canInsertSemicolon();'#13#10'  for (var computed = (void 0);;) {'#13#10' '
  +'   if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {'
  +#13#10'      var node = this$1.startNodeAt(startPos, startLoc);'#13#10'     '
  +' node.object = base;'#13#10'      node.property = computed ? this$1.parseEx'
  +'pression() : this$1.parseIdent(true);'#13#10'      node.computed = !!comput'
  +'ed;'#13#10'      if (computed) { this$1.expect(types.bracketR); }'#13#10'  '
  +'    base = this$1.finishNode(node, "MemberExpression");'#13#10'    } else i'
  +'f (!noCalls && this$1.eat(types.parenL)) {'#13#10'      var refDestructurin'
  +'gErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitP'
  ,'os = this$1.awaitPos;'#13#10'      this$1.yieldPos = 0;'#13#10'      this$1'
  +'.awaitPos = 0;'#13#10'      var exprList = this$1.parseExprList(types.paren'
  +'R, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);'#13#10
  +'      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(typ'
  +'es.arrow)) {'#13#10'        this$1.checkPatternErrors(refDestructuringError'
  +'s, false);'#13#10'        this$1.checkYieldAwaitInDefaultParams();'#13#10' '
  +'       this$1.yieldPos = oldYieldPos;'#13#10'        this$1.awaitPos = oldA'
  +'waitPos;'#13#10'        return this$1.parseArrowExpression(this$1.startNode'
  +'At(startPos, startLoc), exprList, true)'#13#10'      }'#13#10'      this$1.'
  +'checkExpressionErrors(refDestructuringErrors, true);'#13#10'      this$1.yi'
  +'eldPos = oldYieldPos || this$1.yieldPos;'#13#10'      this$1.awaitPos = old'
  +'AwaitPos || this$1.awaitPos;'#13#10'      var node$1 = this$1.startNodeAt(s'
  +'tartPos, startLoc);'#13#10'      node$1.callee = base;'#13#10'      node$1.'
  +'arguments = exprList;'#13#10'      base = this$1.finishNode(node$1, "CallEx'
  +'pression");'#13#10'    } else if (this$1.type === types.backQuote) {'#13#10
  +'      var node$2 = this$1.startNodeAt(startPos, startLoc);'#13#10'      nod'
  +'e$2.tag = base;'#13#10'      node$2.quasi = this$1.parseTemplate({isTagged:'
  +' true});'#13#10'      base = this$1.finishNode(node$2, "TaggedTemplateExpre'
  +'ssion");'#13#10'    } else {'#13#10'      return base'#13#10'    }'#13#10' '
  +' }'#13#10'};'#13#10#13#10#13#10'pp$3.parseExprAtom = function(refDestructur'
  +'ingErrors) {'#13#10'  var node, canBeArrow = this.potentialArrowAt == this.'
  +'start;'#13#10'  switch (this.type) {'#13#10'  case types._super:'#13#10'   '
  +' if (!this.inFunction)'#13#10'      { this.raise(this.start, "''super'' out'
  +'side of function or class"); }'#13#10'    node = this.startNode();'#13#10' '
  +'   this.next();'#13#10'    if (this.type !== types.dot && this.type !== typ'
  +'es.bracketL && this.type !== types.parenL)'#13#10'      { this.unexpected()'
  +'; }'#13#10'    return this.finishNode(node, "Super")'#13#10#13#10'  case ty'
  +'pes._this:'#13#10'    node = this.startNode();'#13#10'    this.next();'#13
  +#10'    return this.finishNode(node, "ThisExpression")'#13#10#13#10'  case t'
  +'ypes.name:'#13#10'    var startPos = this.start, startLoc = this.startLoc;'
  +#13#10'    var id = this.parseIdent(this.type !== types.name);'#13#10'    if'
  +' (this.options.ecmaVersion >= 8 && id.name === "async" && !this.canInsertSe'
  +'micolon() && this.eat(types._function))'#13#10'      { return this.parseFun'
  +'ction(this.startNodeAt(startPos, startLoc), false, false, true) }'#13#10'  '
  +'  if (canBeArrow && !this.canInsertSemicolon()) {'#13#10'      if (this.eat'
  +'(types.arrow))'#13#10'        { return this.parseArrowExpression(this.start'
  +'NodeAt(startPos, startLoc), [id], false) }'#13#10'      if (this.options.ec'
  +'maVersion >= 8 && id.name === "async" && this.type === types.name) {'#13#10
  +'        id = this.parseIdent();'#13#10'        if (this.canInsertSemicolon('
  +') || !this.eat(types.arrow))'#13#10'          { this.unexpected(); }'#13#10
  +'        return this.parseArrowExpression(this.startNodeAt(startPos, startLo'
  +'c), [id], true)'#13#10'      }'#13#10'    }'#13#10'    return id'#13#10#13
  +#10'  case types.regexp:'#13#10'    var value = this.value;'#13#10'    node '
  +'= this.parseLiteral(value.value);'#13#10'    node.regex = {pattern: value.p'
  +'attern, flags: value.flags};'#13#10'    return node'#13#10#13#10'  case typ'
  +'es.num: case types.string:'#13#10'    return this.parseLiteral(this.value)'
  +#13#10#13#10'  case types._null: case types._true: case types._false:'#13#10
  +'    node = this.startNode();'#13#10'    node.value = this.type === types._n'
  +'ull ? null : this.type === types._true;'#13#10'    node.raw = this.type.key'
  +'word;'#13#10'    this.next();'#13#10'    return this.finishNode(node, "Lite'
  +'ral")'#13#10#13#10'  case types.parenL:'#13#10'    var start = this.start, '
  +'expr = this.parseParenAndDistinguishExpression(canBeArrow);'#13#10'    if ('
  +'refDestructuringErrors) {'#13#10'      if (refDestructuringErrors.parenthes'
  +'izedAssign < 0 && !this.isSimpleAssignTarget(expr))'#13#10'        { refDes'
  +'tructuringErrors.parenthesizedAssign = start; }'#13#10'      if (refDestruc'
  +'turingErrors.parenthesizedBind < 0)'#13#10'        { refDestructuringErrors'
  +'.parenthesizedBind = start; }'#13#10'    }'#13#10'    return expr'#13#10#13
  +#10'  case types.bracketL:'#13#10'    node = this.startNode();'#13#10'    th'
  +'is.next();'#13#10'    node.elements = this.parseExprList(types.bracketR, tr'
  +'ue, true, refDestructuringErrors);'#13#10'    return this.finishNode(node, '
  +'"ArrayExpression")'#13#10#13#10'  case types.braceL:'#13#10'    return this'
  +'.parseObj(false, refDestructuringErrors)'#13#10#13#10'  case types._functio'
  +'n:'#13#10'    node = this.startNode();'#13#10'    this.next();'#13#10'    r'
  +'eturn this.parseFunction(node, false)'#13#10#13#10'  case types._class:'#13
  ,#10'    return this.parseClass(this.startNode(), false)'#13#10#13#10'  case '
  +'types._new:'#13#10'    return this.parseNew()'#13#10#13#10'  case types.bac'
  +'kQuote:'#13#10'    return this.parseTemplate()'#13#10#13#10'  default:'#13
  +#10'    this.unexpected();'#13#10'  }'#13#10'};'#13#10#13#10'pp$3.parseLiter'
  +'al = function(value) {'#13#10'  var node = this.startNode();'#13#10'  node.'
  +'value = value;'#13#10'  node.raw = this.input.slice(this.start, this.end);'
  +#13#10'  this.next();'#13#10'  return this.finishNode(node, "Literal")'#13#10
  +'};'#13#10#13#10'pp$3.parseParenExpression = function() {'#13#10'  this.expe'
  +'ct(types.parenL);'#13#10'  var val = this.parseExpression();'#13#10'  this.'
  +'expect(types.parenR);'#13#10'  return val'#13#10'};'#13#10#13#10'pp$3.parse'
  +'ParenAndDistinguishExpression = function(canBeArrow) {'#13#10'  var this$1 '
  +'= this;'#13#10#13#10'  var startPos = this.start, startLoc = this.startLoc,'
  +' val, allowTrailingComma = this.options.ecmaVersion >= 8;'#13#10'  if (this'
  +'.options.ecmaVersion >= 6) {'#13#10'    this.next();'#13#10#13#10'    var i'
  +'nnerStartPos = this.start, innerStartLoc = this.startLoc;'#13#10'    var ex'
  +'prList = [], first = true, lastIsComma = false;'#13#10'    var refDestructu'
  +'ringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwait'
  +'Pos = this.awaitPos, spreadStart, innerParenStart;'#13#10'    this.yieldPos'
  +' = 0;'#13#10'    this.awaitPos = 0;'#13#10'    while (this.type !== types.p'
  +'arenR) {'#13#10'      first ? first = false : this$1.expect(types.comma);'
  +#13#10'      if (allowTrailingComma && this$1.afterTrailingComma(types.paren'
  +'R, true)) {'#13#10'        lastIsComma = true;'#13#10'        break'#13#10
  +'      } else if (this$1.type === types.ellipsis) {'#13#10'        spreadSta'
  +'rt = this$1.start;'#13#10'        exprList.push(this$1.parseParenItem(this$'
  +'1.parseRestBinding()));'#13#10'        if (this$1.type === types.comma) { t'
  +'his$1.raise(this$1.start, "Comma is not permitted after the rest element");'
  +' }'#13#10'        break'#13#10'      } else {'#13#10'        if (this$1.typ'
  +'e === types.parenL && !innerParenStart) {'#13#10'          innerParenStart '
  +'= this$1.start;'#13#10'        }'#13#10'        exprList.push(this$1.parseM'
  +'aybeAssign(false, refDestructuringErrors, this$1.parseParenItem));'#13#10' '
  +'     }'#13#10'    }'#13#10'    var innerEndPos = this.start, innerEndLoc = '
  +'this.startLoc;'#13#10'    this.expect(types.parenR);'#13#10#13#10'    if (c'
  +'anBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {'#13#10
  +'      this.checkPatternErrors(refDestructuringErrors, false);'#13#10'      '
  +'this.checkYieldAwaitInDefaultParams();'#13#10'      if (innerParenStart) { '
  +'this.unexpected(innerParenStart); }'#13#10'      this.yieldPos = oldYieldPo'
  +'s;'#13#10'      this.awaitPos = oldAwaitPos;'#13#10'      return this.parse'
  +'ParenArrowList(startPos, startLoc, exprList)'#13#10'    }'#13#10#13#10'    '
  +'if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); '
  +'}'#13#10'    if (spreadStart) { this.unexpected(spreadStart); }'#13#10'    '
  +'this.checkExpressionErrors(refDestructuringErrors, true);'#13#10'    this.y'
  +'ieldPos = oldYieldPos || this.yieldPos;'#13#10'    this.awaitPos = oldAwait'
  +'Pos || this.awaitPos;'#13#10#13#10'    if (exprList.length > 1) {'#13#10'  '
  +'    val = this.startNodeAt(innerStartPos, innerStartLoc);'#13#10'      val.'
  +'expressions = exprList;'#13#10'      this.finishNodeAt(val, "SequenceExpres'
  +'sion", innerEndPos, innerEndLoc);'#13#10'    } else {'#13#10'      val = ex'
  +'prList[0];'#13#10'    }'#13#10'  } else {'#13#10'    val = this.parseParenE'
  +'xpression();'#13#10'  }'#13#10#13#10'  if (this.options.preserveParens) {'
  +#13#10'    var par = this.startNodeAt(startPos, startLoc);'#13#10'    par.ex'
  +'pression = val;'#13#10'    return this.finishNode(par, "ParenthesizedExpres'
  +'sion")'#13#10'  } else {'#13#10'    return val'#13#10'  }'#13#10'};'#13#10
  +#13#10'pp$3.parseParenItem = function(item) {'#13#10'  return item'#13#10'};'
  +#13#10#13#10'pp$3.parseParenArrowList = function(startPos, startLoc, exprLis'
  +'t) {'#13#10'  return this.parseArrowExpression(this.startNodeAt(startPos, s'
  +'tartLoc), exprList)'#13#10'};'#13#10#13#10#13#10'var empty$1 = [];'#13#10#13
  +#10'pp$3.parseNew = function() {'#13#10'  var node = this.startNode();'#13#10
  +'  var meta = this.parseIdent(true);'#13#10'  if (this.options.ecmaVersion >'
  +'= 6 && this.eat(types.dot)) {'#13#10'    node.meta = meta;'#13#10'    node.'
  +'property = this.parseIdent(true);'#13#10'    if (node.property.name !== "ta'
  +'rget")'#13#10'      { this.raiseRecoverable(node.property.start, "The only '
  +'valid meta property for new is new.target"); }'#13#10'    if (!this.inFunct'
  +'ion)'#13#10'      { this.raiseRecoverable(node.start, "new.target can only '
  +'be used in functions"); }'#13#10'    return this.finishNode(node, "MetaProp'
  +'erty")'#13#10'  }'#13#10'  var startPos = this.start, startLoc = this.start'
  ,'Loc;'#13#10'  node.callee = this.parseSubscripts(this.parseExprAtom(), star'
  +'tPos, startLoc, true);'#13#10'  if (this.eat(types.parenL)) { node.argument'
  +'s = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false);'
  +' }'#13#10'  else { node.arguments = empty$1; }'#13#10'  return this.finishN'
  +'ode(node, "NewExpression")'#13#10'};'#13#10#13#10#13#10'pp$3.parseTemplateE'
  +'lement = function(ref) {'#13#10'  var isTagged = ref.isTagged;'#13#10#13#10
  +'  var elem = this.startNode();'#13#10'  if (this.type === types.invalidTemp'
  +'late) {'#13#10'    if (!isTagged) {'#13#10'      this.raiseRecoverable(this'
  +'.start, "Bad escape sequence in untagged template literal");'#13#10'    }'
  +#13#10'    elem.value = {'#13#10'      raw: this.value,'#13#10'      cooked:'
  +' null'#13#10'    };'#13#10'  } else {'#13#10'    elem.value = {'#13#10'    '
  +'  raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),'#13
  +#10'      cooked: this.value'#13#10'    };'#13#10'  }'#13#10'  this.next();'
  +#13#10'  elem.tail = this.type === types.backQuote;'#13#10'  return this.fin'
  +'ishNode(elem, "TemplateElement")'#13#10'};'#13#10#13#10'pp$3.parseTemplate '
  +'= function(ref) {'#13#10'  var this$1 = this;'#13#10'  if ( ref === void 0 '
  +') ref = {};'#13#10'  var isTagged = ref.isTagged; if ( isTagged === void 0 '
  +') isTagged = false;'#13#10#13#10'  var node = this.startNode();'#13#10'  th'
  +'is.next();'#13#10'  node.expressions = [];'#13#10'  var curElt = this.parse'
  +'TemplateElement({isTagged: isTagged});'#13#10'  node.quasis = [curElt];'#13
  +#10'  while (!curElt.tail) {'#13#10'    this$1.expect(types.dollarBraceL);'
  +#13#10'    node.expressions.push(this$1.parseExpression());'#13#10'    this$'
  +'1.expect(types.braceR);'#13#10'    node.quasis.push(curElt = this$1.parseTe'
  +'mplateElement({isTagged: isTagged}));'#13#10'  }'#13#10'  this.next();'#13
  +#10'  return this.finishNode(node, "TemplateLiteral")'#13#10'};'#13#10#13#10
  +'pp$3.isAsyncProp = function(prop) {'#13#10'  return !prop.computed && prop.'
  +'key.type === "Identifier" && prop.key.name === "async" &&'#13#10'    (this.'
  +'type === types.name || this.type === types.num || this.type === types.strin'
  +'g || this.type === types.bracketL || this.type.keyword) &&'#13#10'    !line'
  +'Break.test(this.input.slice(this.lastTokEnd, this.start))'#13#10'};'#13#10
  +#13#10#13#10'pp$3.parseObj = function(isPattern, refDestructuringErrors) {'
  +#13#10'  var this$1 = this;'#13#10#13#10'  var node = this.startNode(), firs'
  +'t = true, propHash = {};'#13#10'  node.properties = [];'#13#10'  this.next('
  +');'#13#10'  while (!this.eat(types.braceR)) {'#13#10'    if (!first) {'#13
  +#10'      this$1.expect(types.comma);'#13#10'      if (this$1.afterTrailingC'
  +'omma(types.braceR)) { break }'#13#10'    } else { first = false; }'#13#10#13
  +#10'    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);'
  +#13#10'    this$1.checkPropClash(prop, propHash);'#13#10'    node.properties'
  +'.push(prop);'#13#10'  }'#13#10'  return this.finishNode(node, isPattern ? "'
  +'ObjectPattern" : "ObjectExpression")'#13#10'};'#13#10#13#10'pp$3.parsePrope'
  +'rty = function(isPattern, refDestructuringErrors) {'#13#10'  var prop = thi'
  +'s.startNode(), isGenerator, isAsync, startPos, startLoc;'#13#10'  if (this.'
  +'options.ecmaVersion >= 6) {'#13#10'    prop.method = false;'#13#10'    prop'
  +'.shorthand = false;'#13#10'    if (isPattern || refDestructuringErrors) {'
  +#13#10'      startPos = this.start;'#13#10'      startLoc = this.startLoc;'
  +#13#10'    }'#13#10'    if (!isPattern)'#13#10'      { isGenerator = this.ea'
  +'t(types.star); }'#13#10'  }'#13#10'  this.parsePropertyName(prop);'#13#10' '
  +' if (!isPattern && this.options.ecmaVersion >= 8 && !isGenerator && this.is'
  +'AsyncProp(prop)) {'#13#10'    isAsync = true;'#13#10'    this.parseProperty'
  +'Name(prop, refDestructuringErrors);'#13#10'  } else {'#13#10'    isAsync = '
  +'false;'#13#10'  }'#13#10'  this.parsePropertyValue(prop, isPattern, isGener'
  +'ator, isAsync, startPos, startLoc, refDestructuringErrors);'#13#10'  return'
  +' this.finishNode(prop, "Property")'#13#10'};'#13#10#13#10'pp$3.parsePropert'
  +'yValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc'
  +', refDestructuringErrors) {'#13#10'  if ((isGenerator || isAsync) && this.t'
  +'ype === types.colon)'#13#10'    { this.unexpected(); }'#13#10#13#10'  if (t'
  +'his.eat(types.colon)) {'#13#10'    prop.value = isPattern ? this.parseMaybe'
  +'Default(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestru'
  +'cturingErrors);'#13#10'    prop.kind = "init";'#13#10'  } else if (this.opt'
  +'ions.ecmaVersion >= 6 && this.type === types.parenL) {'#13#10'    if (isPat'
  +'tern) { this.unexpected(); }'#13#10'    prop.kind = "init";'#13#10'    prop'
  +'.method = true;'#13#10'    prop.value = this.parseMethod(isGenerator, isAsy'
  +'nc);'#13#10'  } else if (!isPattern &&'#13#10'             this.options.ecm'
  +'aVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&'#13#10
  ,'             (prop.key.name === "get" || prop.key.name === "set") &&'#13#10
  +'             (this.type != types.comma && this.type != types.braceR)) {'#13
  +#10'    if (isGenerator || isAsync) { this.unexpected(); }'#13#10'    prop.k'
  +'ind = prop.key.name;'#13#10'    this.parsePropertyName(prop);'#13#10'    pr'
  +'op.value = this.parseMethod(false);'#13#10'    var paramCount = prop.kind ='
  +'== "get" ? 0 : 1;'#13#10'    if (prop.value.params.length !== paramCount) {'
  +#13#10'      var start = prop.value.start;'#13#10'      if (prop.kind === "g'
  +'et")'#13#10'        { this.raiseRecoverable(start, "getter should have no p'
  +'arams"); }'#13#10'      else'#13#10'        { this.raiseRecoverable(start, '
  +'"setter should have exactly one param"); }'#13#10'    } else {'#13#10'     '
  +' if (prop.kind === "set" && prop.value.params[0].type === "RestElement")'#13
  +#10'        { this.raiseRecoverable(prop.value.params[0].start, "Setter cann'
  +'ot use rest params"); }'#13#10'    }'#13#10'  } else if (this.options.ecmaV'
  +'ersion >= 6 && !prop.computed && prop.key.type === "Identifier") {'#13#10' '
  +'   this.checkUnreserved(prop.key);'#13#10'    prop.kind = "init";'#13#10'  '
  +'  if (isPattern) {'#13#10'      prop.value = this.parseMaybeDefault(startPo'
  +'s, startLoc, prop.key);'#13#10'    } else if (this.type === types.eq && ref'
  +'DestructuringErrors) {'#13#10'      if (refDestructuringErrors.shorthandAss'
  +'ign < 0)'#13#10'        { refDestructuringErrors.shorthandAssign = this.sta'
  +'rt; }'#13#10'      prop.value = this.parseMaybeDefault(startPos, startLoc, '
  +'prop.key);'#13#10'    } else {'#13#10'      prop.value = prop.key;'#13#10' '
  +'   }'#13#10'    prop.shorthand = true;'#13#10'  } else { this.unexpected();'
  +' }'#13#10'};'#13#10#13#10'pp$3.parsePropertyName = function(prop) {'#13#10
  +'  if (this.options.ecmaVersion >= 6) {'#13#10'    if (this.eat(types.bracke'
  +'tL)) {'#13#10'      prop.computed = true;'#13#10'      prop.key = this.pars'
  +'eMaybeAssign();'#13#10'      this.expect(types.bracketR);'#13#10'      retu'
  +'rn prop.key'#13#10'    } else {'#13#10'      prop.computed = false;'#13#10
  +'    }'#13#10'  }'#13#10'  return prop.key = this.type === types.num || this'
  +'.type === types.string ? this.parseExprAtom() : this.parseIdent(true)'#13#10
  +'};'#13#10#13#10#13#10'pp$3.initFunction = function(node) {'#13#10'  node.id'
  +' = null;'#13#10'  if (this.options.ecmaVersion >= 6) {'#13#10'    node.gene'
  +'rator = false;'#13#10'    node.expression = false;'#13#10'  }'#13#10'  if ('
  +'this.options.ecmaVersion >= 8)'#13#10'    { node.async = false; }'#13#10'};'
  +#13#10#13#10#13#10'pp$3.parseMethod = function(isGenerator, isAsync) {'#13#10
  +'  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = th'
  +'is.inAsync,'#13#10'      oldYieldPos = this.yieldPos, oldAwaitPos = this.aw'
  +'aitPos, oldInFunc = this.inFunction;'#13#10#13#10'  this.initFunction(node)'
  +';'#13#10'  if (this.options.ecmaVersion >= 6)'#13#10'    { node.generator ='
  +' isGenerator; }'#13#10'  if (this.options.ecmaVersion >= 8)'#13#10'    { no'
  +'de.async = !!isAsync; }'#13#10#13#10'  this.inGenerator = node.generator;'
  +#13#10'  this.inAsync = node.async;'#13#10'  this.yieldPos = 0;'#13#10'  thi'
  +'s.awaitPos = 0;'#13#10'  this.inFunction = true;'#13#10'  this.enterFunctio'
  +'nScope();'#13#10#13#10'  this.expect(types.parenL);'#13#10'  node.params = '
  +'this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);'
  +#13#10'  this.checkYieldAwaitInDefaultParams();'#13#10'  this.parseFunctionB'
  +'ody(node, false);'#13#10#13#10'  this.inGenerator = oldInGen;'#13#10'  this'
  +'.inAsync = oldInAsync;'#13#10'  this.yieldPos = oldYieldPos;'#13#10'  this.'
  +'awaitPos = oldAwaitPos;'#13#10'  this.inFunction = oldInFunc;'#13#10'  retu'
  +'rn this.finishNode(node, "FunctionExpression")'#13#10'};'#13#10#13#10#13#10
  +'pp$3.parseArrowExpression = function(node, params, isAsync) {'#13#10'  var '
  +'oldInGen = this.inGenerator, oldInAsync = this.inAsync,'#13#10'      oldYie'
  +'ldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunc'
  +'tion;'#13#10#13#10'  this.enterFunctionScope();'#13#10'  this.initFunction('
  +'node);'#13#10'  if (this.options.ecmaVersion >= 8)'#13#10'    { node.async '
  +'= !!isAsync; }'#13#10#13#10'  this.inGenerator = false;'#13#10'  this.inAsy'
  +'nc = node.async;'#13#10'  this.yieldPos = 0;'#13#10'  this.awaitPos = 0;'#13
  +#10'  this.inFunction = true;'#13#10#13#10'  node.params = this.toAssignable'
  +'List(params, true);'#13#10'  this.parseFunctionBody(node, true);'#13#10#13
  +#10'  this.inGenerator = oldInGen;'#13#10'  this.inAsync = oldInAsync;'#13#10
  +'  this.yieldPos = oldYieldPos;'#13#10'  this.awaitPos = oldAwaitPos;'#13#10
  +'  this.inFunction = oldInFunc;'#13#10'  return this.finishNode(node, "Arrow'
  +'FunctionExpression")'#13#10'};'#13#10#13#10#13#10'pp$3.parseFunctionBody = '
  +'function(node, isArrowFunction) {'#13#10'  var isExpression = isArrowFuncti'
  +'on && this.type !== types.braceL;'#13#10'  var oldStrict = this.strict, use'
  ,'Strict = false;'#13#10#13#10'  if (isExpression) {'#13#10'    node.body = t'
  +'his.parseMaybeAssign();'#13#10'    node.expression = true;'#13#10'    this.'
  +'checkParams(node, false);'#13#10'  } else {'#13#10'    var nonSimple = this'
  +'.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);'#13#10' '
  +'   if (!oldStrict || nonSimple) {'#13#10'      useStrict = this.strictDirec'
  +'tive(this.end);'#13#10'      if (useStrict && nonSimple)'#13#10'        { t'
  +'his.raiseRecoverable(node.start, "Illegal ''use strict'' directive in funct'
  +'ion with non-simple parameter list"); }'#13#10'    }'#13#10'    var oldLabe'
  +'ls = this.labels;'#13#10'    this.labels = [];'#13#10'    if (useStrict) { '
  +'this.strict = true; }'#13#10#13#10'    this.checkParams(node, !oldStrict &&'
  +' !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));'#13
  +#10'    node.body = this.parseBlock(false);'#13#10'    node.expression = fal'
  +'se;'#13#10'    this.adaptDirectivePrologue(node.body.body);'#13#10'    this'
  +'.labels = oldLabels;'#13#10'  }'#13#10'  this.exitFunctionScope();'#13#10#13
  +#10'  if (this.strict && node.id) {'#13#10'    this.checkLVal(node.id, "none'
  +'");'#13#10'  }'#13#10'  this.strict = oldStrict;'#13#10'};'#13#10#13#10'pp$'
  +'3.isSimpleParamList = function(params) {'#13#10'  for (var i = 0, list = pa'
  +'rams; i < list.length; i += 1)'#13#10'    {'#13#10'    var param = list[i];'
  +#13#10#13#10'    if (param.type !== "Identifier") { return false'#13#10'  } '
  +'}'#13#10'  return true'#13#10'};'#13#10#13#10#13#10'pp$3.checkParams = func'
  +'tion(node, allowDuplicates) {'#13#10'  var this$1 = this;'#13#10#13#10'  va'
  +'r nameHash = {};'#13#10'  for (var i = 0, list = node.params; i < list.leng'
  +'th; i += 1)'#13#10'    {'#13#10'    var param = list[i];'#13#10#13#10'    t'
  +'his$1.checkLVal(param, "var", allowDuplicates ? null : nameHash);'#13#10'  '
  +'}'#13#10'};'#13#10#13#10#13#10'pp$3.parseExprList = function(close, allowTr'
  +'ailingComma, allowEmpty, refDestructuringErrors) {'#13#10'  var this$1 = th'
  +'is;'#13#10#13#10'  var elts = [], first = true;'#13#10'  while (!this.eat(c'
  +'lose)) {'#13#10'    if (!first) {'#13#10'      this$1.expect(types.comma);'
  +#13#10'      if (allowTrailingComma && this$1.afterTrailingComma(close)) { b'
  +'reak }'#13#10'    } else { first = false; }'#13#10#13#10'    var elt = (voi'
  +'d 0);'#13#10'    if (allowEmpty && this$1.type === types.comma)'#13#10'    '
  +'  { elt = null; }'#13#10'    else if (this$1.type === types.ellipsis) {'#13
  +#10'      elt = this$1.parseSpread(refDestructuringErrors);'#13#10'      if '
  +'(refDestructuringErrors && this$1.type === types.comma && refDestructuringE'
  +'rrors.trailingComma < 0)'#13#10'        { refDestructuringErrors.trailingCo'
  +'mma = this$1.start; }'#13#10'    } else {'#13#10'      elt = this$1.parseMa'
  +'ybeAssign(false, refDestructuringErrors);'#13#10'    }'#13#10'    elts.push'
  +'(elt);'#13#10'  }'#13#10'  return elts'#13#10'};'#13#10#13#10'pp$3.checkUnr'
  +'eserved = function(ref) {'#13#10'  var start = ref.start;'#13#10'  var end '
  +'= ref.end;'#13#10'  var name = ref.name;'#13#10#13#10'  if (this.inGenerato'
  +'r && name === "yield")'#13#10'    { this.raiseRecoverable(start, "Can not u'
  +'se ''yield'' as identifier inside a generator"); }'#13#10'  if (this.inAsyn'
  +'c && name === "await")'#13#10'    { this.raiseRecoverable(start, "Can not u'
  +'se ''await'' as identifier inside an async function"); }'#13#10'  if (this.'
  +'isKeyword(name))'#13#10'    { this.raise(start, ("Unexpected keyword ''" + '
  +'name + "''")); }'#13#10'  if (this.options.ecmaVersion < 6 &&'#13#10'    th'
  +'is.input.slice(start, end).indexOf("\\") != -1) { return }'#13#10'  var re '
  +'= this.strict ? this.reservedWordsStrict : this.reservedWords;'#13#10'  if '
  +'(re.test(name))'#13#10'    { this.raiseRecoverable(start, ("The keyword ''"'
  +' + name + "'' is reserved")); }'#13#10'};'#13#10#13#10#13#10'pp$3.parseIden'
  +'t = function(liberal, isBinding) {'#13#10'  var node = this.startNode();'#13
  +#10'  if (liberal && this.options.allowReserved == "never") { liberal = fals'
  +'e; }'#13#10'  if (this.type === types.name) {'#13#10'    node.name = this.v'
  +'alue;'#13#10'  } else if (this.type.keyword) {'#13#10'    node.name = this.'
  +'type.keyword;'#13#10#13#10'    if ((node.name === "class" || node.name === '
  +'"function") &&'#13#10'        (this.lastTokEnd !== this.lastTokStart + 1 ||'
  +' this.input.charCodeAt(this.lastTokStart) !== 46)) {'#13#10'      this.cont'
  +'ext.pop();'#13#10'    }'#13#10'  } else {'#13#10'    this.unexpected();'#13
  +#10'  }'#13#10'  this.next();'#13#10'  this.finishNode(node, "Identifier");'
  +#13#10'  if (!liberal) { this.checkUnreserved(node); }'#13#10'  return node'
  +#13#10'};'#13#10#13#10#13#10'pp$3.parseYield = function() {'#13#10'  if (!th'
  +'is.yieldPos) { this.yieldPos = this.start; }'#13#10#13#10'  var node = this'
  +'.startNode();'#13#10'  this.next();'#13#10'  if (this.type == types.semi ||'
  +' this.canInsertSemicolon() || (this.type != types.star && !this.type.starts'
  ,'Expr)) {'#13#10'    node.delegate = false;'#13#10'    node.argument = null;'
  +#13#10'  } else {'#13#10'    node.delegate = this.eat(types.star);'#13#10'  '
  +'  node.argument = this.parseMaybeAssign();'#13#10'  }'#13#10'  return this.'
  +'finishNode(node, "YieldExpression")'#13#10'};'#13#10#13#10'pp$3.parseAwait '
  +'= function() {'#13#10'  if (!this.awaitPos) { this.awaitPos = this.start; }'
  +#13#10#13#10'  var node = this.startNode();'#13#10'  this.next();'#13#10'  n'
  +'ode.argument = this.parseMaybeUnary(null, true);'#13#10'  return this.finis'
  +'hNode(node, "AwaitExpression")'#13#10'};'#13#10#13#10'var pp$4 = Parser.pro'
  +'totype;'#13#10#13#10#13#10'pp$4.raise = function(pos, message) {'#13#10'  v'
  +'ar loc = getLineInfo(this.input, pos);'#13#10'  message += " (" + loc.line '
  +'+ ":" + loc.column + ")";'#13#10'  var err = new SyntaxError(message);'#13
  +#10'  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;'#13#10'  throw '
  +'err'#13#10'};'#13#10#13#10'pp$4.raiseRecoverable = pp$4.raise;'#13#10#13#10
  +'pp$4.curPosition = function() {'#13#10'  if (this.options.locations) {'#13
  +#10'    return new Position(this.curLine, this.pos - this.lineStart)'#13#10
  +'  }'#13#10'};'#13#10#13#10'var pp$5 = Parser.prototype;'#13#10#13#10'var as'
  +'sign = Object.assign || function(target) {'#13#10'  var sources = [], len ='
  +' arguments.length - 1;'#13#10'  while ( len-- > 0 ) sources[ len ] = argume'
  +'nts[ len + 1 ];'#13#10#13#10'  for (var i = 0, list = sources; i < list.len'
  +'gth; i += 1) {'#13#10'    var source = list[i];'#13#10#13#10'    for (var k'
  +'ey in source) {'#13#10'      if (has(source, key)) {'#13#10'        target['
  +'key] = source[key];'#13#10'      }'#13#10'    }'#13#10'  }'#13#10'  return '
  +'target'#13#10'};'#13#10#13#10#13#10'pp$5.enterFunctionScope = function() {'
  +#13#10'  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLex'
  +'ical: {}});'#13#10'};'#13#10#13#10'pp$5.exitFunctionScope = function() {'#13
  +#10'  this.scopeStack.pop();'#13#10'};'#13#10#13#10'pp$5.enterLexicalScope ='
  +' function() {'#13#10'  var parentScope = this.scopeStack[this.scopeStack.le'
  +'ngth - 1];'#13#10'  var childScope = {var: {}, lexical: {}, childVar: {}, p'
  +'arentLexical: {}};'#13#10#13#10'  this.scopeStack.push(childScope);'#13#10
  +'  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentL'
  +'exical);'#13#10'};'#13#10#13#10'pp$5.exitLexicalScope = function() {'#13#10
  +'  var childScope = this.scopeStack.pop();'#13#10'  var parentScope = this.s'
  +'copeStack[this.scopeStack.length - 1];'#13#10#13#10'  assign(parentScope.ch'
  +'ildVar, childScope.var, childScope.childVar);'#13#10'};'#13#10#13#10'pp$5.c'
  +'anDeclareVarName = function(name) {'#13#10'  var currentScope = this.scopeS'
  +'tack[this.scopeStack.length - 1];'#13#10#13#10'  return !has(currentScope.l'
  +'exical, name) && !has(currentScope.parentLexical, name)'#13#10'};'#13#10#13
  +#10'pp$5.canDeclareLexicalName = function(name) {'#13#10'  var currentScope '
  +'= this.scopeStack[this.scopeStack.length - 1];'#13#10#13#10'  return !has(c'
  +'urrentScope.lexical, name) && !has(currentScope.var, name) && !has(currentS'
  +'cope.childVar, name)'#13#10'};'#13#10#13#10'pp$5.declareVarName = function('
  +'name) {'#13#10'  this.scopeStack[this.scopeStack.length - 1].var[name] = tr'
  +'ue;'#13#10'};'#13#10#13#10'pp$5.declareLexicalName = function(name) {'#13#10
  +'  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;'#13#10
  +'};'#13#10#13#10'var Node = function Node(parser, pos, loc) {'#13#10'  this.'
  +'type = "";'#13#10'  this.start = pos;'#13#10'  this.end = 0;'#13#10'  if (p'
  +'arser.options.locations)'#13#10'    { this.loc = new SourceLocation(parser,'
  +' loc); }'#13#10'  if (parser.options.directSourceFile)'#13#10'    { this.so'
  +'urceFile = parser.options.directSourceFile; }'#13#10'  if (parser.options.r'
  +'anges)'#13#10'    { this.range = [pos, 0]; }'#13#10'};'#13#10#13#10#13#10'v'
  +'ar pp$6 = Parser.prototype;'#13#10#13#10'pp$6.startNode = function() {'#13
  +#10'  return new Node(this, this.start, this.startLoc)'#13#10'};'#13#10#13#10
  +'pp$6.startNodeAt = function(pos, loc) {'#13#10'  return new Node(this, pos,'
  +' loc)'#13#10'};'#13#10#13#10#13#10'function finishNodeAt(node, type, pos, l'
  +'oc) {'#13#10'  node.type = type;'#13#10'  node.end = pos;'#13#10'  if (this'
  +'.options.locations)'#13#10'    { node.loc.end = loc; }'#13#10'  if (this.op'
  +'tions.ranges)'#13#10'    { node.range[1] = pos; }'#13#10'  return node'#13
  +#10'}'#13#10#13#10'pp$6.finishNode = function(node, type) {'#13#10'  return '
  +'finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)'#13
  +#10'};'#13#10#13#10#13#10'pp$6.finishNodeAt = function(node, type, pos, loc)'
  +' {'#13#10'  return finishNodeAt.call(this, node, type, pos, loc)'#13#10'};'
  +#13#10#13#10#13#10'var TokContext = function TokContext(token, isExpr, prese'
  +'rveSpace, override, generator) {'#13#10'  this.token = token;'#13#10'  this'
  +'.isExpr = !!isExpr;'#13#10'  this.preserveSpace = !!preserveSpace;'#13#10' '
  ,' this.override = override;'#13#10'  this.generator = !!generator;'#13#10'};'
  +#13#10#13#10'var types$1 = {'#13#10'  b_stat: new TokContext("{", false),'#13
  +#10'  b_expr: new TokContext("{", true),'#13#10'  b_tmpl: new TokContext("${'
  +'", false),'#13#10'  p_stat: new TokContext("(", false),'#13#10'  p_expr: ne'
  +'w TokContext("(", true),'#13#10'  q_tmpl: new TokContext("`", true, true, f'
  +'unction (p) { return p.tryReadTemplateToken(); }),'#13#10'  f_stat: new Tok'
  +'Context("function", false),'#13#10'  f_expr: new TokContext("function", tru'
  +'e),'#13#10'  f_expr_gen: new TokContext("function", true, false, null, true'
  +'),'#13#10'  f_gen: new TokContext("function", false, false, null, true)'#13
  +#10'};'#13#10#13#10'var pp$7 = Parser.prototype;'#13#10#13#10'pp$7.initialCo'
  +'ntext = function() {'#13#10'  return [types$1.b_stat]'#13#10'};'#13#10#13#10
  +'pp$7.braceIsBlock = function(prevType) {'#13#10'  var parent = this.curCont'
  +'ext();'#13#10'  if (parent === types$1.f_expr || parent === types$1.f_stat)'
  +#13#10'    { return true }'#13#10'  if (prevType === types.colon && (parent '
  +'=== types$1.b_stat || parent === types$1.b_expr))'#13#10'    { return !pare'
  +'nt.isExpr }'#13#10#13#10'  if (prevType === types._return || prevType == ty'
  +'pes.name && this.exprAllowed)'#13#10'    { return lineBreak.test(this.input'
  +'.slice(this.lastTokEnd, this.start)) }'#13#10'  if (prevType === types._els'
  +'e || prevType === types.semi || prevType === types.eof || prevType === type'
  +'s.parenR || prevType == types.arrow)'#13#10'    { return true }'#13#10'  if'
  +' (prevType == types.braceL)'#13#10'    { return parent === types$1.b_stat }'
  +#13#10'  if (prevType == types._var || prevType == types.name)'#13#10'    { '
  +'return false }'#13#10'  return !this.exprAllowed'#13#10'};'#13#10#13#10'pp$'
  +'7.inGeneratorContext = function() {'#13#10'  var this$1 = this;'#13#10#13#10
  +'  for (var i = this.context.length - 1; i >= 1; i--) {'#13#10'    var conte'
  +'xt = this$1.context[i];'#13#10'    if (context.token === "function")'#13#10
  +'      { return context.generator }'#13#10'  }'#13#10'  return false'#13#10
  +'};'#13#10#13#10'pp$7.updateContext = function(prevType) {'#13#10'  var upda'
  +'te, type = this.type;'#13#10'  if (type.keyword && prevType == types.dot)'
  +#13#10'    { this.exprAllowed = false; }'#13#10'  else if (update = type.upd'
  +'ateContext)'#13#10'    { update.call(this, prevType); }'#13#10'  else'#13#10
  +'    { this.exprAllowed = type.beforeExpr; }'#13#10'};'#13#10#13#10#13#10'ty'
  +'pes.parenR.updateContext = types.braceR.updateContext = function() {'#13#10
  +'  if (this.context.length == 1) {'#13#10'    this.exprAllowed = true;'#13#10
  +'    return'#13#10'  }'#13#10'  var out = this.context.pop();'#13#10'  if (o'
  +'ut === types$1.b_stat && this.curContext().token === "function") {'#13#10' '
  +'   out = this.context.pop();'#13#10'  }'#13#10'  this.exprAllowed = !out.is'
  +'Expr;'#13#10'};'#13#10#13#10'types.braceL.updateContext = function(prevType'
  +') {'#13#10'  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat'
  +' : types$1.b_expr);'#13#10'  this.exprAllowed = true;'#13#10'};'#13#10#13#10
  +'types.dollarBraceL.updateContext = function() {'#13#10'  this.context.push('
  +'types$1.b_tmpl);'#13#10'  this.exprAllowed = true;'#13#10'};'#13#10#13#10't'
  +'ypes.parenL.updateContext = function(prevType) {'#13#10'  var statementPare'
  +'ns = prevType === types._if || prevType === types._for || prevType === type'
  +'s._with || prevType === types._while;'#13#10'  this.context.push(statementP'
  +'arens ? types$1.p_stat : types$1.p_expr);'#13#10'  this.exprAllowed = true;'
  +#13#10'};'#13#10#13#10'types.incDec.updateContext = function() {'#13#10'};'
  +#13#10#13#10'types._function.updateContext = types._class.updateContext = fu'
  +'nction(prevType) {'#13#10'  if (prevType.beforeExpr && prevType !== types.s'
  +'emi && prevType !== types._else &&'#13#10'      !((prevType === types.colon'
  +' || prevType === types.braceL) && this.curContext() === types$1.b_stat))'#13
  +#10'    { this.context.push(types$1.f_expr); }'#13#10'  else'#13#10'    { th'
  +'is.context.push(types$1.f_stat); }'#13#10'  this.exprAllowed = false;'#13#10
  +'};'#13#10#13#10'types.backQuote.updateContext = function() {'#13#10'  if (t'
  +'his.curContext() === types$1.q_tmpl)'#13#10'    { this.context.pop(); }'#13
  +#10'  else'#13#10'    { this.context.push(types$1.q_tmpl); }'#13#10'  this.e'
  +'xprAllowed = false;'#13#10'};'#13#10#13#10'types.star.updateContext = funct'
  +'ion(prevType) {'#13#10'  if (prevType == types._function) {'#13#10'    var '
  +'index = this.context.length - 1;'#13#10'    if (this.context[index] === typ'
  +'es$1.f_expr)'#13#10'      { this.context[index] = types$1.f_expr_gen; }'#13
  +#10'    else'#13#10'      { this.context[index] = types$1.f_gen; }'#13#10'  '
  +'}'#13#10'  this.exprAllowed = true;'#13#10'};'#13#10#13#10'types.name.updat'
  +'eContext = function(prevType) {'#13#10'  var allowed = false;'#13#10'  if ('
  +'this.options.ecmaVersion >= 6) {'#13#10'    if (this.value == "of" && !this'
  ,'.exprAllowed ||'#13#10'        this.value == "yield" && this.inGeneratorCon'
  +'text())'#13#10'      { allowed = true; }'#13#10'  }'#13#10'  this.exprAllow'
  +'ed = allowed;'#13#10'};'#13#10#13#10#13#10'var Token = function Token(p) {'
  +#13#10'  this.type = p.type;'#13#10'  this.value = p.value;'#13#10'  this.st'
  +'art = p.start;'#13#10'  this.end = p.end;'#13#10'  if (p.options.locations)'
  +#13#10'    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }'#13#10
  +'  if (p.options.ranges)'#13#10'    { this.range = [p.start, p.end]; }'#13#10
  +'};'#13#10#13#10#13#10'var pp$8 = Parser.prototype;'#13#10#13#10'var isRhino'
  +' = typeof Packages == "object" && Object.prototype.toString.call(Packages) '
  +'== "[object JavaPackage]";'#13#10#13#10#13#10'pp$8.next = function() {'#13
  +#10'  if (this.options.onToken)'#13#10'    { this.options.onToken(new Token('
  +'this)); }'#13#10#13#10'  this.lastTokEnd = this.end;'#13#10'  this.lastTokS'
  +'tart = this.start;'#13#10'  this.lastTokEndLoc = this.endLoc;'#13#10'  this'
  +'.lastTokStartLoc = this.startLoc;'#13#10'  this.nextToken();'#13#10'};'#13
  +#10#13#10'pp$8.getToken = function() {'#13#10'  this.next();'#13#10'  return'
  +' new Token(this)'#13#10'};'#13#10#13#10'if (typeof Symbol !== "undefined")'
  +#13#10'  { pp$8[Symbol.iterator] = function() {'#13#10'    var this$1 = this'
  +';'#13#10#13#10'    return {'#13#10'      next: function () {'#13#10'       '
  +' var token = this$1.getToken();'#13#10'        return {'#13#10'          do'
  +'ne: token.type === types.eof,'#13#10'          value: token'#13#10'        '
  +'}'#13#10'      }'#13#10'    }'#13#10'  }; }'#13#10#13#10#13#10'pp$8.curCont'
  +'ext = function() {'#13#10'  return this.context[this.context.length - 1]'#13
  +#10'};'#13#10#13#10#13#10'pp$8.nextToken = function() {'#13#10'  var curCont'
  +'ext = this.curContext();'#13#10'  if (!curContext || !curContext.preserveSp'
  +'ace) { this.skipSpace(); }'#13#10#13#10'  this.start = this.pos;'#13#10'  i'
  +'f (this.options.locations) { this.startLoc = this.curPosition(); }'#13#10' '
  +' if (this.pos >= this.input.length) { return this.finishToken(types.eof) }'
  +#13#10#13#10'  if (curContext.override) { return curContext.override(this) }'
  +#13#10'  else { this.readToken(this.fullCharCodeAtPos()); }'#13#10'};'#13#10
  +#13#10'pp$8.readToken = function(code) {'#13#10'  if (isIdentifierStart(code'
  +', this.options.ecmaVersion >= 6) || code === 92 )'#13#10'    { return this.'
  +'readWord() }'#13#10#13#10'  return this.getTokenFromCode(code)'#13#10'};'#13
  +#10#13#10'pp$8.fullCharCodeAtPos = function() {'#13#10'  var code = this.inp'
  +'ut.charCodeAt(this.pos);'#13#10'  if (code <= 0xd7ff || code >= 0xe000) { r'
  +'eturn code }'#13#10'  var next = this.input.charCodeAt(this.pos + 1);'#13#10
  +'  return (code << 10) + next - 0x35fdc00'#13#10'};'#13#10#13#10'pp$8.skipBl'
  +'ockComment = function() {'#13#10'  var this$1 = this;'#13#10#13#10'  var st'
  +'artLoc = this.options.onComment && this.curPosition();'#13#10'  var start ='
  +' this.pos, end = this.input.indexOf("*/", this.pos += 2);'#13#10'  if (end '
  +'=== -1) { this.raise(this.pos - 2, "Unterminated comment"); }'#13#10'  this'
  +'.pos = end + 2;'#13#10'  if (this.options.locations) {'#13#10'    lineBreak'
  +'G.lastIndex = start;'#13#10'    var match;'#13#10'    while ((match = lineB'
  +'reakG.exec(this.input)) && match.index < this.pos) {'#13#10'      ++this$1.'
  +'curLine;'#13#10'      this$1.lineStart = match.index + match[0].length;'#13
  +#10'    }'#13#10'  }'#13#10'  if (this.options.onComment)'#13#10'    { this.'
  +'options.onComment(true, this.input.slice(start + 2, end), start, this.pos,'
  +#13#10'                           startLoc, this.curPosition()); }'#13#10'};'
  +#13#10#13#10'pp$8.skipLineComment = function(startSkip) {'#13#10'  var this$'
  +'1 = this;'#13#10#13#10'  var start = this.pos;'#13#10'  var startLoc = this'
  +'.options.onComment && this.curPosition();'#13#10'  var ch = this.input.char'
  +'CodeAt(this.pos += startSkip);'#13#10'  while (this.pos < this.input.length'
  +' && !isNewLine(ch)) {'#13#10'    ch = this$1.input.charCodeAt(++this$1.pos)'
  +';'#13#10'  }'#13#10'  if (this.options.onComment)'#13#10'    { this.options'
  +'.onComment(false, this.input.slice(start + startSkip, this.pos), start, thi'
  +'s.pos,'#13#10'                           startLoc, this.curPosition()); }'
  +#13#10'};'#13#10#13#10#13#10'pp$8.skipSpace = function() {'#13#10'  var this'
  +'$1 = this;'#13#10#13#10'  loop: while (this.pos < this.input.length) {'#13
  +#10'    var ch = this$1.input.charCodeAt(this$1.pos);'#13#10'    switch (ch)'
  +' {'#13#10'    case 32: case 160:'#13#10'      ++this$1.pos;'#13#10'      br'
  +'eak'#13#10'    case 13:'#13#10'      if (this$1.input.charCodeAt(this$1.pos'
  +' + 1) === 10) {'#13#10'        ++this$1.pos;'#13#10'      }'#13#10'    case'
  +' 10: case 8232: case 8233:'#13#10'      ++this$1.pos;'#13#10'      if (this'
  +'$1.options.locations) {'#13#10'        ++this$1.curLine;'#13#10'        thi'
  +'s$1.lineStart = this$1.pos;'#13#10'      }'#13#10'      break'#13#10'    ca'
  ,'se 47:'#13#10'      switch (this$1.input.charCodeAt(this$1.pos + 1)) {'#13
  +#10'      case 42:'#13#10'        this$1.skipBlockComment();'#13#10'        '
  +'break'#13#10'      case 47:'#13#10'        this$1.skipLineComment(2);'#13#10
  +'        break'#13#10'      default:'#13#10'        break loop'#13#10'      '
  +'}'#13#10'      break'#13#10'    default:'#13#10'      if (ch > 8 && ch < 14'
  +' || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {'#13#10
  +'        ++this$1.pos;'#13#10'      } else {'#13#10'        break loop'#13#10
  +'      }'#13#10'    }'#13#10'  }'#13#10'};'#13#10#13#10#13#10'pp$8.finishTok'
  +'en = function(type, val) {'#13#10'  this.end = this.pos;'#13#10'  if (this.'
  +'options.locations) { this.endLoc = this.curPosition(); }'#13#10'  var prevT'
  +'ype = this.type;'#13#10'  this.type = type;'#13#10'  this.value = val;'#13
  +#10#13#10'  this.updateContext(prevType);'#13#10'};'#13#10#13#10#13#10'pp$8.'
  +'readToken_dot = function() {'#13#10'  var next = this.input.charCodeAt(this'
  +'.pos + 1);'#13#10'  if (next >= 48 && next <= 57) { return this.readNumber('
  +'true) }'#13#10'  var next2 = this.input.charCodeAt(this.pos + 2);'#13#10'  '
  +'if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {'#13#10
  +'    this.pos += 3;'#13#10'    return this.finishToken(types.ellipsis)'#13#10
  +'  } else {'#13#10'    ++this.pos;'#13#10'    return this.finishToken(types.'
  +'dot)'#13#10'  }'#13#10'};'#13#10#13#10'pp$8.readToken_slash = function() {'
  +#13#10'  var next = this.input.charCodeAt(this.pos + 1);'#13#10'  if (this.e'
  +'xprAllowed) { ++this.pos; return this.readRegexp() }'#13#10'  if (next === '
  +'61) { return this.finishOp(types.assign, 2) }'#13#10'  return this.finishOp'
  +'(types.slash, 1)'#13#10'};'#13#10#13#10'pp$8.readToken_mult_modulo_exp = fu'
  +'nction(code) {'#13#10'  var next = this.input.charCodeAt(this.pos + 1);'#13
  +#10'  var size = 1;'#13#10'  var tokentype = code === 42 ? types.star : type'
  +'s.modulo;'#13#10#13#10'  if (this.options.ecmaVersion >= 7 && code == 42 &&'
  +' next === 42) {'#13#10'    ++size;'#13#10'    tokentype = types.starstar;'
  +#13#10'    next = this.input.charCodeAt(this.pos + 2);'#13#10'  }'#13#10#13
  +#10'  if (next === 61) { return this.finishOp(types.assign, size + 1) }'#13
  +#10'  return this.finishOp(tokentype, size)'#13#10'};'#13#10#13#10'pp$8.read'
  +'Token_pipe_amp = function(code) {'#13#10'  var next = this.input.charCodeAt'
  +'(this.pos + 1);'#13#10'  if (next === code) { return this.finishOp(code ==='
  +' 124 ? types.logicalOR : types.logicalAND, 2) }'#13#10'  if (next === 61) {'
  +' return this.finishOp(types.assign, 2) }'#13#10'  return this.finishOp(code'
  +' === 124 ? types.bitwiseOR : types.bitwiseAND, 1)'#13#10'};'#13#10#13#10'pp'
  +'$8.readToken_caret = function() {'#13#10'  var next = this.input.charCodeAt'
  +'(this.pos + 1);'#13#10'  if (next === 61) { return this.finishOp(types.assi'
  +'gn, 2) }'#13#10'  return this.finishOp(types.bitwiseXOR, 1)'#13#10'};'#13#10
  +#13#10'pp$8.readToken_plus_min = function(code) {'#13#10'  var next = this.i'
  +'nput.charCodeAt(this.pos + 1);'#13#10'  if (next === code) {'#13#10'    if '
  +'(next == 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) == 62 '
  +'&&'#13#10'        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice'
  +'(this.lastTokEnd, this.pos)))) {'#13#10'      this.skipLineComment(3);'#13
  +#10'      this.skipSpace();'#13#10'      return this.nextToken()'#13#10'    '
  +'}'#13#10'    return this.finishOp(types.incDec, 2)'#13#10'  }'#13#10'  if ('
  +'next === 61) { return this.finishOp(types.assign, 2) }'#13#10'  return this'
  +'.finishOp(types.plusMin, 1)'#13#10'};'#13#10#13#10'pp$8.readToken_lt_gt = f'
  +'unction(code) {'#13#10'  var next = this.input.charCodeAt(this.pos + 1);'#13
  +#10'  var size = 1;'#13#10'  if (next === code) {'#13#10'    size = code ==='
  +' 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;'#13#10'    if (t'
  +'his.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.'
  +'assign, size + 1) }'#13#10'    return this.finishOp(types.bitShift, size)'
  +#13#10'  }'#13#10'  if (next == 33 && code == 60 && !this.inModule && this.i'
  +'nput.charCodeAt(this.pos + 2) == 45 &&'#13#10'      this.input.charCodeAt(t'
  +'his.pos + 3) == 45) {'#13#10'    this.skipLineComment(4);'#13#10'    this.s'
  +'kipSpace();'#13#10'    return this.nextToken()'#13#10'  }'#13#10'  if (next'
  +' === 61) { size = 2; }'#13#10'  return this.finishOp(types.relational, size'
  +')'#13#10'};'#13#10#13#10'pp$8.readToken_eq_excl = function(code) {'#13#10' '
  +' var next = this.input.charCodeAt(this.pos + 1);'#13#10'  if (next === 61) '
  +'{ return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) '
  +'=== 61 ? 3 : 2) }'#13#10'  if (code === 61 && next === 62 && this.options.e'
  +'cmaVersion >= 6) {'#13#10'    this.pos += 2;'#13#10'    return this.finishT'
  +'oken(types.arrow)'#13#10'  }'#13#10'  return this.finishOp(code === 61 ? ty'
  +'pes.eq : types.prefix, 1)'#13#10'};'#13#10#13#10'pp$8.getTokenFromCode = fu'
  ,'nction(code) {'#13#10'  switch (code) {'#13#10'  case 46:'#13#10'    return'
  +' this.readToken_dot()'#13#10#13#10'  case 40: ++this.pos; return this.finis'
  +'hToken(types.parenL)'#13#10'  case 41: ++this.pos; return this.finishToken('
  +'types.parenR)'#13#10'  case 59: ++this.pos; return this.finishToken(types.s'
  +'emi)'#13#10'  case 44: ++this.pos; return this.finishToken(types.comma)'#13
  +#10'  case 91: ++this.pos; return this.finishToken(types.bracketL)'#13#10'  '
  +'case 93: ++this.pos; return this.finishToken(types.bracketR)'#13#10'  case '
  +'123: ++this.pos; return this.finishToken(types.braceL)'#13#10'  case 125: +'
  +'+this.pos; return this.finishToken(types.braceR)'#13#10'  case 58: ++this.p'
  +'os; return this.finishToken(types.colon)'#13#10'  case 63: ++this.pos; retu'
  +'rn this.finishToken(types.question)'#13#10#13#10'  case 96:'#13#10'    if ('
  +'this.options.ecmaVersion < 6) { break }'#13#10'    ++this.pos;'#13#10'    r'
  +'eturn this.finishToken(types.backQuote)'#13#10#13#10'  case 48:'#13#10'    '
  +'var next = this.input.charCodeAt(this.pos + 1);'#13#10'    if (next === 120'
  +' || next === 88) { return this.readRadixNumber(16) }'#13#10'    if (this.op'
  +'tions.ecmaVersion >= 6) {'#13#10'      if (next === 111 || next === 79) { r'
  +'eturn this.readRadixNumber(8) }'#13#10'      if (next === 98 || next === 66'
  +') { return this.readRadixNumber(2) }'#13#10'    }'#13#10'  case 49: case 50'
  +': case 51: case 52: case 53: case 54: case 55: case 56: case 57:'#13#10'   '
  +' return this.readNumber(false)'#13#10#13#10'  case 34: case 39:'#13#10'    '
  +'return this.readString(code)'#13#10#13#10#13#10'  case 47:'#13#10'    retur'
  +'n this.readToken_slash()'#13#10#13#10'  case 37: case 42:'#13#10'    return'
  +' this.readToken_mult_modulo_exp(code)'#13#10#13#10'  case 124: case 38:'#13
  +#10'    return this.readToken_pipe_amp(code)'#13#10#13#10'  case 94:'#13#10
  +'    return this.readToken_caret()'#13#10#13#10'  case 43: case 45:'#13#10' '
  +'   return this.readToken_plus_min(code)'#13#10#13#10'  case 60: case 62:'#13
  +#10'    return this.readToken_lt_gt(code)'#13#10#13#10'  case 61: case 33:'
  +#13#10'    return this.readToken_eq_excl(code)'#13#10#13#10'  case 126:'#13
  +#10'    return this.finishOp(types.prefix, 1)'#13#10'  }'#13#10#13#10'  this'
  +'.raise(this.pos, "Unexpected character ''" + codePointToString(code) + "''"'
  +');'#13#10'};'#13#10#13#10'pp$8.finishOp = function(type, size) {'#13#10'  v'
  +'ar str = this.input.slice(this.pos, this.pos + size);'#13#10'  this.pos += '
  +'size;'#13#10'  return this.finishToken(type, str)'#13#10'};'#13#10#13#10#13
  +#10'function tryCreateRegexp(src, flags, throwErrorAt, parser) {'#13#10'  tr'
  +'y {'#13#10'    return new RegExp(src, flags)'#13#10'  } catch (e) {'#13#10
  +'    if (throwErrorAt !== undefined) {'#13#10'      if (e instanceof SyntaxE'
  +'rror) { parser.raise(throwErrorAt, "Error parsing regular expression: " + e'
  +'.message); }'#13#10'      throw e'#13#10'    }'#13#10'  }'#13#10'}'#13#10#13
  +#10'var regexpUnicodeSupport = !!tryCreateRegexp("\uffff", "u");'#13#10#13#10
  +'pp$8.readRegexp = function() {'#13#10'  var this$1 = this;'#13#10#13#10'  v'
  +'ar escaped, inClass, start = this.pos;'#13#10'  for (;;) {'#13#10'    if (t'
  +'his$1.pos >= this$1.input.length) { this$1.raise(start, "Unterminated regul'
  +'ar expression"); }'#13#10'    var ch = this$1.input.charAt(this$1.pos);'#13
  +#10'    if (lineBreak.test(ch)) { this$1.raise(start, "Unterminated regular '
  +'expression"); }'#13#10'    if (!escaped) {'#13#10'      if (ch === "[") { i'
  +'nClass = true; }'#13#10'      else if (ch === "]" && inClass) { inClass = f'
  +'alse; }'#13#10'      else if (ch === "/" && !inClass) { break }'#13#10'    '
  +'  escaped = ch === "\\";'#13#10'    } else { escaped = false; }'#13#10'    '
  +'++this$1.pos;'#13#10'  }'#13#10'  var content = this.input.slice(start, thi'
  +'s.pos);'#13#10'  ++this.pos;'#13#10'  var mods = this.readWord1();'#13#10' '
  +' var tmp = content, tmpFlags = "";'#13#10'  if (mods) {'#13#10'    var vali'
  +'dFlags = /^[gim]*$/;'#13#10'    if (this.options.ecmaVersion >= 6) { validF'
  +'lags = /^[gimuy]*$/; }'#13#10'    if (!validFlags.test(mods)) { this.raise('
  +'start, "Invalid regular expression flag"); }'#13#10'    if (mods.indexOf("u'
  +'") >= 0) {'#13#10'      if (regexpUnicodeSupport) {'#13#10'        tmpFlags'
  +' = "u";'#13#10'      } else {'#13#10'        tmp = tmp.replace(/\\u\{([0-9a'
  +'-fA-F]+)\}/g, function (_match, code, offset) {'#13#10'          code = Num'
  +'ber("0x" + code);'#13#10'          if (code > 0x10FFFF) { this$1.raise(star'
  +'t + offset + 3, "Code point out of bounds"); }'#13#10'          return "x"'
  +#13#10'        });'#13#10'        tmp = tmp.replace(/\\u([a-fA-F0-9]{4})|[\u'
  +'D800-\uDBFF][\uDC00-\uDFFF]/g, "x");'#13#10'        tmpFlags = tmpFlags.rep'
  +'lace("u", "");'#13#10'      }'#13#10'    }'#13#10'  }'#13#10'  var value = '
  +'null;'#13#10'  if (!isRhino) {'#13#10'    tryCreateRegexp(tmp, tmpFlags, st'
  +'art, this);'#13#10'    value = tryCreateRegexp(content, mods);'#13#10'  }'
  ,#13#10'  return this.finishToken(types.regexp, {pattern: content, flags: mod'
  +'s, value: value})'#13#10'};'#13#10#13#10#13#10'pp$8.readInt = function(radi'
  +'x, len) {'#13#10'  var this$1 = this;'#13#10#13#10'  var start = this.pos, '
  +'total = 0;'#13#10'  for (var i = 0, e = len == null ? Infinity : len; i < e'
  +'; ++i) {'#13#10'    var code = this$1.input.charCodeAt(this$1.pos), val = ('
  +'void 0);'#13#10'    if (code >= 97) { val = code - 97 + 10; }'#13#10'    el'
  +'se if (code >= 65) { val = code - 65 + 10; }'#13#10'    else if (code >= 48'
  +' && code <= 57) { val = code - 48; }'#13#10'    else { val = Infinity; }'#13
  +#10'    if (val >= radix) { break }'#13#10'    ++this$1.pos;'#13#10'    tota'
  +'l = total * radix + val;'#13#10'  }'#13#10'  if (this.pos === start || len '
  +'!= null && this.pos - start !== len) { return null }'#13#10#13#10'  return '
  +'total'#13#10'};'#13#10#13#10'pp$8.readRadixNumber = function(radix) {'#13#10
  +'  this.pos += 2;'#13#10'  var val = this.readInt(radix);'#13#10'  if (val ='
  +'= null) { this.raise(this.start + 2, "Expected number in radix " + radix); '
  +'}'#13#10'  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(th'
  +'is.pos, "Identifier directly after number"); }'#13#10'  return this.finishT'
  +'oken(types.num, val)'#13#10'};'#13#10#13#10#13#10'pp$8.readNumber = functio'
  +'n(startsWithDot) {'#13#10'  var start = this.pos, isFloat = false, octal = '
  +'this.input.charCodeAt(this.pos) === 48;'#13#10'  if (!startsWithDot && this'
  +'.readInt(10) === null) { this.raise(start, "Invalid number"); }'#13#10'  if'
  +' (octal && this.pos == start + 1) { octal = false; }'#13#10'  var next = th'
  +'is.input.charCodeAt(this.pos);'#13#10'  if (next === 46 && !octal) {'#13#10
  +'    ++this.pos;'#13#10'    this.readInt(10);'#13#10'    isFloat = true;'#13
  +#10'    next = this.input.charCodeAt(this.pos);'#13#10'  }'#13#10'  if ((nex'
  +'t === 69 || next === 101) && !octal) {'#13#10'    next = this.input.charCod'
  +'eAt(++this.pos);'#13#10'    if (next === 43 || next === 45) { ++this.pos; }'
  +#13#10'    if (this.readInt(10) === null) { this.raise(start, "Invalid numbe'
  +'r"); }'#13#10'    isFloat = true;'#13#10'  }'#13#10'  if (isIdentifierStart'
  +'(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly aft'
  +'er number"); }'#13#10#13#10'  var str = this.input.slice(start, this.pos), '
  +'val;'#13#10'  if (isFloat) { val = parseFloat(str); }'#13#10'  else if (!oc'
  +'tal || str.length === 1) { val = parseInt(str, 10); }'#13#10'  else if (thi'
  +'s.strict) { this.raise(start, "Invalid number"); }'#13#10'  else if (/[89]/'
  +'.test(str)) { val = parseInt(str, 10); }'#13#10'  else { val = parseInt(str'
  +', 8); }'#13#10'  return this.finishToken(types.num, val)'#13#10'};'#13#10#13
  +#10#13#10'pp$8.readCodePoint = function() {'#13#10'  var ch = this.input.cha'
  +'rCodeAt(this.pos), code;'#13#10#13#10'  if (ch === 123) {'#13#10'    if (th'
  +'is.options.ecmaVersion < 6) { this.unexpected(); }'#13#10'    var codePos ='
  +' ++this.pos;'#13#10'    code = this.readHexChar(this.input.indexOf("}", thi'
  +'s.pos) - this.pos);'#13#10'    ++this.pos;'#13#10'    if (code > 0x10FFFF) '
  +'{ this.invalidStringToken(codePos, "Code point out of bounds"); }'#13#10'  '
  +'} else {'#13#10'    code = this.readHexChar(4);'#13#10'  }'#13#10'  return '
  +'code'#13#10'};'#13#10#13#10'function codePointToString(code) {'#13#10'  if '
  +'(code <= 0xFFFF) { return String.fromCharCode(code) }'#13#10'  code -= 0x10'
  +'000;'#13#10'  return String.fromCharCode((code >> 10) + 0xD800, (code & 102'
  +'3) + 0xDC00)'#13#10'}'#13#10#13#10'pp$8.readString = function(quote) {'#13
  +#10'  var this$1 = this;'#13#10#13#10'  var out = "", chunkStart = ++this.po'
  +'s;'#13#10'  for (;;) {'#13#10'    if (this$1.pos >= this$1.input.length) { '
  +'this$1.raise(this$1.start, "Unterminated string constant"); }'#13#10'    va'
  +'r ch = this$1.input.charCodeAt(this$1.pos);'#13#10'    if (ch === quote) { '
  +'break }'#13#10'    if (ch === 92) {'#13#10'      out += this$1.input.slice('
  +'chunkStart, this$1.pos);'#13#10'      out += this$1.readEscapedChar(false);'
  +#13#10'      chunkStart = this$1.pos;'#13#10'    } else {'#13#10'      if (i'
  +'sNewLine(ch)) { this$1.raise(this$1.start, "Unterminated string constant");'
  +' }'#13#10'      ++this$1.pos;'#13#10'    }'#13#10'  }'#13#10'  out += this.'
  +'input.slice(chunkStart, this.pos++);'#13#10'  return this.finishToken(types'
  +'.string, out)'#13#10'};'#13#10#13#10#13#10'var INVALID_TEMPLATE_ESCAPE_ERRO'
  +'R = {};'#13#10#13#10'pp$8.tryReadTemplateToken = function() {'#13#10'  this'
  +'.inTemplateElement = true;'#13#10'  try {'#13#10'    this.readTmplToken();'
  +#13#10'  } catch (err) {'#13#10'    if (err === INVALID_TEMPLATE_ESCAPE_ERRO'
  +'R) {'#13#10'      this.readInvalidTemplateToken();'#13#10'    } else {'#13
  +#10'      throw err'#13#10'    }'#13#10'  }'#13#10#13#10'  this.inTemplateEl'
  +'ement = false;'#13#10'};'#13#10#13#10'pp$8.invalidStringToken = function(po'
  +'sition, message) {'#13#10'  if (this.inTemplateElement && this.options.ecma'
  ,'Version >= 9) {'#13#10'    throw INVALID_TEMPLATE_ESCAPE_ERROR'#13#10'  } e'
  +'lse {'#13#10'    this.raise(position, message);'#13#10'  }'#13#10'};'#13#10
  +#13#10'pp$8.readTmplToken = function() {'#13#10'  var this$1 = this;'#13#10
  +#13#10'  var out = "", chunkStart = this.pos;'#13#10'  for (;;) {'#13#10'   '
  +' if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, "Unter'
  +'minated template"); }'#13#10'    var ch = this$1.input.charCodeAt(this$1.po'
  +'s);'#13#10'    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1'
  +'.pos + 1) === 123) {'#13#10'      if (this$1.pos === this$1.start && (this$'
  +'1.type === types.template || this$1.type === types.invalidTemplate)) {'#13
  +#10'        if (ch === 36) {'#13#10'          this$1.pos += 2;'#13#10'      '
  +'    return this$1.finishToken(types.dollarBraceL)'#13#10'        } else {'
  +#13#10'          ++this$1.pos;'#13#10'          return this$1.finishToken(ty'
  +'pes.backQuote)'#13#10'        }'#13#10'      }'#13#10'      out += this$1.i'
  +'nput.slice(chunkStart, this$1.pos);'#13#10'      return this$1.finishToken('
  +'types.template, out)'#13#10'    }'#13#10'    if (ch === 92) {'#13#10'      '
  +'out += this$1.input.slice(chunkStart, this$1.pos);'#13#10'      out += this'
  +'$1.readEscapedChar(true);'#13#10'      chunkStart = this$1.pos;'#13#10'    '
  +'} else if (isNewLine(ch)) {'#13#10'      out += this$1.input.slice(chunkSta'
  +'rt, this$1.pos);'#13#10'      ++this$1.pos;'#13#10'      switch (ch) {'#13
  +#10'      case 13:'#13#10'        if (this$1.input.charCodeAt(this$1.pos) =='
  +'= 10) { ++this$1.pos; }'#13#10'      case 10:'#13#10'        out += "\n";'
  +#13#10'        break'#13#10'      default:'#13#10'        out += String.from'
  +'CharCode(ch);'#13#10'        break'#13#10'      }'#13#10'      if (this$1.o'
  +'ptions.locations) {'#13#10'        ++this$1.curLine;'#13#10'        this$1.'
  +'lineStart = this$1.pos;'#13#10'      }'#13#10'      chunkStart = this$1.pos'
  +';'#13#10'    } else {'#13#10'      ++this$1.pos;'#13#10'    }'#13#10'  }'#13
  +#10'};'#13#10#13#10'pp$8.readInvalidTemplateToken = function() {'#13#10'  va'
  +'r this$1 = this;'#13#10#13#10'  for (; this.pos < this.input.length; this.p'
  +'os++) {'#13#10'    switch (this$1.input[this$1.pos]) {'#13#10'    case "\\"'
  +':'#13#10'      ++this$1.pos;'#13#10'      break'#13#10#13#10'    case "$":'
  +#13#10'      if (this$1.input[this$1.pos + 1] !== "{") {'#13#10'        brea'
  +'k'#13#10'      }'#13#10#13#10'    case "`":'#13#10'      return this$1.fini'
  +'shToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos)'
  +')'#13#10#13#10'    }'#13#10'  }'#13#10'  this.raise(this.start, "Unterminat'
  +'ed template");'#13#10'};'#13#10#13#10#13#10'pp$8.readEscapedChar = function'
  +'(inTemplate) {'#13#10'  var ch = this.input.charCodeAt(++this.pos);'#13#10
  +'  ++this.pos;'#13#10'  switch (ch) {'#13#10'  case 110: return "\n"'#13#10
  +'  case 114: return "\r"'#13#10'  case 120: return String.fromCharCode(this.'
  +'readHexChar(2))'#13#10'  case 117: return codePointToString(this.readCodePo'
  +'int())'#13#10'  case 116: return "\t"'#13#10'  case 98: return "\b"'#13#10
  +'  case 118: return "\u000b"'#13#10'  case 102: return "\f"'#13#10'  case 13'
  +': if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }'#13#10'  case'
  +' 10:'#13#10'    if (this.options.locations) { this.lineStart = this.pos; ++'
  +'this.curLine; }'#13#10'    return ""'#13#10'  default:'#13#10'    if (ch >='
  +' 48 && ch <= 55) {'#13#10'      var octalStr = this.input.substr(this.pos -'
  +' 1, 3).match(/^[0-7]+/)[0];'#13#10'      var octal = parseInt(octalStr, 8);'
  +#13#10'      if (octal > 255) {'#13#10'        octalStr = octalStr.slice(0, '
  +'-1);'#13#10'        octal = parseInt(octalStr, 8);'#13#10'      }'#13#10'  '
  +'    if (octalStr !== "0" && (this.strict || inTemplate)) {'#13#10'        t'
  +'his.invalidStringToken(this.pos - 2, "Octal literal in strict mode");'#13#10
  +'      }'#13#10'      this.pos += octalStr.length - 1;'#13#10'      return S'
  +'tring.fromCharCode(octal)'#13#10'    }'#13#10'    return String.fromCharCod'
  +'e(ch)'#13#10'  }'#13#10'};'#13#10#13#10#13#10'pp$8.readHexChar = function(l'
  +'en) {'#13#10'  var codePos = this.pos;'#13#10'  var n = this.readInt(16, le'
  +'n);'#13#10'  if (n === null) { this.invalidStringToken(codePos, "Bad charac'
  +'ter escape sequence"); }'#13#10'  return n'#13#10'};'#13#10#13#10#13#10'pp$'
  +'8.readWord1 = function() {'#13#10'  var this$1 = this;'#13#10#13#10'  this.'
  +'containsEsc = false;'#13#10'  var word = "", first = true, chunkStart = thi'
  +'s.pos;'#13#10'  var astral = this.options.ecmaVersion >= 6;'#13#10'  while '
  +'(this.pos < this.input.length) {'#13#10'    var ch = this$1.fullCharCodeAtP'
  +'os();'#13#10'    if (isIdentifierChar(ch, astral)) {'#13#10'      this$1.po'
  +'s += ch <= 0xffff ? 1 : 2;'#13#10'    } else if (ch === 92) {'#13#10'      '
  +'this$1.containsEsc = true;'#13#10'      word += this$1.input.slice(chunkSta'
  +'rt, this$1.pos);'#13#10'      var escStart = this$1.pos;'#13#10'      if (t'
  ,'his$1.input.charCodeAt(++this$1.pos) != 117)'#13#10'        { this$1.invali'
  +'dStringToken(this$1.pos, "Expecting Unicode escape sequence \\uXXXX"); }'#13
  +#10'      ++this$1.pos;'#13#10'      var esc = this$1.readCodePoint();'#13#10
  +'      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))'#13
  +#10'        { this$1.invalidStringToken(escStart, "Invalid Unicode escape");'
  +' }'#13#10'      word += codePointToString(esc);'#13#10'      chunkStart = t'
  +'his$1.pos;'#13#10'    } else {'#13#10'      break'#13#10'    }'#13#10'    f'
  +'irst = false;'#13#10'  }'#13#10'  return word + this.input.slice(chunkStart'
  +', this.pos)'#13#10'};'#13#10#13#10#13#10'pp$8.readWord = function() {'#13#10
  +'  var word = this.readWord1();'#13#10'  var type = types.name;'#13#10'  if '
  +'(this.keywords.test(word)) {'#13#10'    if (this.containsEsc) { this.raiseR'
  +'ecoverable(this.start, "Escape sequence in keyword " + word); }'#13#10'    '
  +'type = keywords$1[word];'#13#10'  }'#13#10'  return this.finishToken(type, '
  +'word)'#13#10'};'#13#10#13#10#13#10'var version = "5.2.1";'#13#10#13#10#13#10
  +'function parse(input, options) {'#13#10'  return new Parser(options, input)'
  +'.parse()'#13#10'}'#13#10#13#10#13#10'function parseExpressionAt(input, pos,'
  +' options) {'#13#10'  var p = new Parser(options, input, pos);'#13#10'  p.ne'
  +'xtToken();'#13#10'  return p.parseExpression()'#13#10'}'#13#10#13#10#13#10
  +'function tokenizer(input, options) {'#13#10'  return new Parser(options, in'
  +'put)'#13#10'}'#13#10#13#10'function addLooseExports(parse, Parser$$1, plugi'
  +'ns$$1) {'#13#10'  exports.parse_dammit = parse;'#13#10'  exports.LooseParse'
  +'r = Parser$$1;'#13#10'  exports.pluginsLoose = plugins$$1;'#13#10'}'#13#10
  +#13#10'exports.version = version;'#13#10'exports.parse = parse;'#13#10'expor'
  +'ts.parseExpressionAt = parseExpressionAt;'#13#10'exports.tokenizer = tokeni'
  +'zer;'#13#10'exports.addLooseExports = addLooseExports;'#13#10'exports.Parse'
  +'r = Parser;'#13#10'exports.plugins = plugins;'#13#10'exports.defaultOptions'
  +' = defaultOptions;'#13#10'exports.Position = Position;'#13#10'exports.Sourc'
  +'eLocation = SourceLocation;'#13#10'exports.getLineInfo = getLineInfo;'#13#10
  +'exports.Node = Node;'#13#10'exports.TokenType = TokenType;'#13#10'exports.t'
  +'okTypes = types;'#13#10'exports.keywordTypes = keywords$1;'#13#10'exports.T'
  +'okContext = TokContext;'#13#10'exports.tokContexts = types$1;'#13#10'export'
  +'s.isIdentifierChar = isIdentifierChar;'#13#10'exports.isIdentifierStart = i'
  +'sIdentifierStart;'#13#10'exports.Token = Token;'#13#10'exports.isNewLine = '
  +'isNewLine;'#13#10'exports.lineBreak = lineBreak;'#13#10'exports.lineBreakG '
  +'= lineBreakG;'#13#10'exports.nonASCIIwhitespace = nonASCIIwhitespace;'#13#10
  +#13#10'Object.defineProperty(exports, ''__esModule'', { value: true });'#13
  +#10#13#10'})));'#13#10#13#10'},{}]},{},[26]);'#13#10#13#10'</script>'#13#10
]);
LazarusResources.Add('XIDEMain','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit XIDEMain;'#13#10'{$if'
  +'ndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$INTERFACES CORBA}'#13#10
  +'{$endif}'#13#10#13#10#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, S'
  +'ysUtils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, Gra'
  +'phics, Dialogs, LCLIntf,'#13#10'  ExtCtrls, Menus, ComCtrls, StdCtrls, TypI'
  +'nfo, LazIDEIntf, LResources,'#13#10'  Types, IpHtml, Ipfilebroker,'#13#10' '
  +' Events, DllInterface, LazsUtils, CompilerLogUnit,'#13#10'{$else}'#13#10'  '
  +'HTMLUtils,'#13#10'{$endif}'#13#10'  // XComponents units...'#13#10'  String'
  +'Utils, NodeUtils, PasteDialogUnit,'#13#10'  UtilsJSCompile, XIFrame, XSVGCo'
  +'ntainer, XMenu, XScrollBox, XVBox, XHBox, XTree, XMemo,'#13#10'  XTabContro'
  +'l, XButton, XLabel, XEditBox, XCheckBox, XHyperLink, XRadioBtns,'#13#10'  X'
  +'Form, XTable, XProgressBar, XNumericSlider, XNumberSpinner,'#13#10'  XCombo'
  +'Box, XDatePicker, XColorPicker, XImage, XGroupBox, XCode, XStore,'#13#10'  '
  +'XBitMap, XTrapEvents, XIDEHelpUnit,'#13#10'  XHTMLText, XHTMLEditor, Events'
  +'Interface,'#13#10'  // XIDEComponents units...'#13#10'  XGPUCanvas, XGPUEdi'
  +'tor, XThreads, XComposite,'#13#10'  // XIDE project units...'#13#10'  Compi'
  +'leUserCode, XObjectInsp,EventLogging,'#13#10'  CodeEditor, PropertyEditUnit'
  +', InputSelectUnit,'#13#10'  PopupMemo, AboutUnit, SavedSystems, StylesUtils'
  +', ReplayUserDialog,'#13#10'  MacroComment;'#13#10#13#10'{$ifdef JScript}'#13
  +#10'procedure InitialisePage(dummy:string);'#13#10'{$endif}'#13#10#13#10#13
  +#10'{ TXIDEForm }'#13#10#13#10'type'#13#10'TXIDEForm = class(TXForm)'#13#10
  +#13#10'  {$ifndef JScript}'#13#10'  // Lazarus-only Form components...'#13#10
  +'  WebMenu: TMenuItem;'#13#10'  CompileToJS: TMenuItem;'#13#10'  CompilerSho'
  +'wLog: TMenuItem;'#13#10'  RunSettings: TXMenuItem;'#13#10'  {$endif}'#13#10
  +#13#10#13#10'  ToggleDesignRunMode: TXMenuItem;'#13#10'  CodeTreeRawUnitBtn:'
  +' TXButton;'#13#10'  NavTreeUpBtn: TXButton;'#13#10'  NavTreeUpDownHBox: TXH'
  +'Box;'#13#10'  NavTreeDownBtn: TXButton;'#13#10'  ResourceTreeButtonsHBox: T'
  +'XHBox;'#13#10'  ResourceTreeDelBtn: TXButton;'#13#10'  ResourceTreeLoadBtn:'
  +' TXButton;'#13#10'  OIAddPropertyButton: TXButton;'#13#10'  DebugTree: TXBu'
  +'tton;'#13#10'  StyleTreeButtonHBox: TXHBox;'#13#10'  StyleTreeDelBtn: TXBut'
  +'ton;'#13#10'  StyleTreeApplyBtn: TXButton;'#13#10'  StyleNodeQualifier: TXC'
  +'omboBox;'#13#10'  StyleTreeEditBtn: TXButton;'#13#10'  QualifierEditBox: TX'
  +'EditBox;'#13#10'  WatchBox: TXEditBox;'#13#10'  CodeTreeSearchBtn: TXButton'
  +';'#13#10'  XIDEMainMenu: TXMainMenu;'#13#10#13#10'  MyRootDiv: TXScrollBox;'
  +#13#10'  InnerRootVBox: TXVBox;'#13#10'  ObjectInspectorTabs: TXTabControl;'
  +#13#10'  UIDesigner: TXTabSheet;'#13#10'  CodeDesigner: TXTabSheet;'#13#10' '
  +' CodeTree: TXTree;'#13#10'  NavTree: TXTree;'#13#10'  PropertyEditorScrollb'
  +'ox: TXScrollBox;'#13#10'  OIButtonGroup: TXHBox;'#13#10'  OICut: TXButton;'
  +#13#10'  OIPaste: TXButton;'#13#10'  OICopy: TXButton;'#13#10'  OIDelete: TX'
  +'Button;'#13#10'  RootHBox: TXHBox;'#13#10'  UIRoot: TXScrollBox;'#13#10'  R'
  +'esourceInspectorTabs: TXTabControl;'#13#10'  Resources: TXTabSheet;'#13#10
  +'  ResourceTree: TXTree;'#13#10'  DefaultPropertiesLabel: TXLabel;'#13#10'  '
  +'ResourceEditorScrollbox: TXScrollBox;'#13#10'  CodeTreeEditBtn: TXButton;'
  +#13#10'  CodeTreeDelBtn: TXButton;'#13#10'  CodeTreeFuncBtn: TXButton;'#13#10
  +'  OIClear: TXButton;'#13#10#13#10'  CodeTreeButtonHBox: TXHBox;'#13#10'  Ev'
  +'entLoggingLabel: TXLabel;'#13#10'  XLabel3: TXLabel;'#13#10'  EventsEditorS'
  +'crollBox: TXScrollBox;'#13#10'  SystemMenu: TXMenuItem;'#13#10'  SystemSave'
  +'Clip: TXMenuItem;'#13#10'  SystemLoad: TXMenuItem;'#13#10'  SystemClear: TX'
  +'MenuItem;'#13#10'  SystemDeploy: TXMenuItem;'#13#10'  OITabs: TXTabControl;'
  +#13#10'  OIPropertiesTab: TXTabSheet;'#13#10'  OIEventsTab: TXTabSheet;'#13
  +#10'  CodeTreeBtnsVB1: TXVBox;'#13#10'  CodeTreeBtnsVB2: TXVBox;'#13#10'  XI'
  +'DETrapEvents1: TXTrapEvents;'#13#10'  HelpMenu: TXMenuItem;'#13#10'  HelpAb'
  +'out: TXMenuItem;'#13#10'  HelpOverview: TXMenuItem;'#13#10'  CodeTreeBtnsVB'
  +'3: TXVBox;'#13#10'  SystemSettings: TXMenuItem;'#13#10'  SystemSaveFile: TX'
  +'MenuItem;'#13#10'  SystemEncapsulate: TXMenuItem;'#13#10'  SystemLoadFromSt'
  +'ore: TXMenuItem;'#13#10'  StyleDesigner: TXTabSheet;'#13#10'  StyleSheet: T'
  +'XTree;'#13#10'  GeneratedStyleSheetText: TXMemo;'#13#10'  StyleTreeScrollBo'
  +'x: TXScrollBox;'#13#10'  StyleResourcesPage: TXTabSheet;'#13#10'  StyleReso'
  +'urces: TXTree;'#13#10'  EventsMacroMenu: TXMenuItem;'#13#10'  EventsMacroSt'
  ,'artRecording: TXMenuItem;'#13#10'  EventsMacroStopRecording: TXMenuItem;'#13
  +#10'  EventsMacroStartReplay: TXMenuItem;'#13#10'  EventsMacroInsertComment:'
  +' TXMenuItem;'#13#10'  EventsMacroSaveToClip: TXMenuItem;'#13#10'  EventsMac'
  +'roLoadFromClip: TXMenuItem;'#13#10'  EventsMacroResumeRecording: TXMenuItem'
  +';'#13#10'  XMemo1: TXMemo;'#13#10#13#10'  procedure DummyPositionMarker;   '
  +'// DO not delete this line.'#13#10#13#10'  {$ifndef JScript}'#13#10'  // La'
  +'zarus-only methods...'#13#10'  procedure CompilerShowLogClick(Sender: TObje'
  +'ct);'#13#10'  procedure CompileToJSClick(Sender: TObject);'#13#10'  procedu'
  +'re FormActivate(Sender: TObject);'#13#10'  procedure FormClose(Sender: TObj'
  +'ect; var CloseAction: TCloseAction); override;'#13#10'  procedure FormCreat'
  +'e(Sender: TObject);'#13#10'  procedure FormResize(Sender: TObject);'#13#10
  +'  //procedure RITabsMouseDown(Sender: TObject;Button: TMouseButton; Shift: '
  +'TShiftState; X, Y: Integer);'#13#10'  //procedure RITabsMouseUp(Sender: TOb'
  +'ject;Button: TMouseButton; Shift: TShiftState; X, Y: Integer);'#13#10'  //p'
  +'rocedure RITabsMouseMove(Sender: TObject;Shift: TShiftState; X, Y: Integer)'
  +';'#13#10'  //procedure RITabsPaint;'#13#10'  procedure RunSettingsHandleCli'
  +'ck(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13
  +#10'  {$endif}'#13#10#13#10'  // Common Event Handlers - created at design t'
  +'ime along with X components...'#13#10'  function HandleGenericEvent(MyEvent'
  +'Type,myValue:string;EventNode:TDataNode):Boolean;'#13#10'  procedure CodeTr'
  +'eeFuncBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: Ansi'
  +'String);'#13#10'  procedure CodeTreeHandleTreeNodeClick(e:TEventStatus;node'
  +'ID: AnsiString; myValue: AnsiString);'#13#10'  procedure HelpAboutHandleCli'
  +'ck(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13
  +#10'  procedure HelpOverviewHandleClick(e: TEventStatus; nodeID: AnsiString;'
  +#13#10'    myValue: AnsiString);'#13#10'  procedure MyRootDivClick(Sender: T'
  +'Object);'#13#10'  procedure NavTreeDownBtnHandleButtonClick(e: TEventStatus'
  +';'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure N'
  +'avTreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'  procedure NavTreeHandleDragStart(e:TEventStatus;nodeID: An'
  +'siString; myValue: AnsiString);'#13#10'  procedure NavTreeHandleDrop(e:TEve'
  +'ntStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure NavTr'
  +'eeHandleDropAccepted(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValu'
  +'e: AnsiString);'#13#10'  procedure ResourceTreeHandleDrop(e: TEventStatus; '
  +'nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure Res'
  +'ourceTreeHandleDropAccepted(e: TEventStatus; nodeID: AnsiString;'#13#10'   '
  +' myValue: AnsiString);'#13#10'  procedure NavTreeUpBtnHandleButtonClick(e: '
  +'TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10' '
  +' procedure OITabsHandleChange(e: TEventStatus; nodeID: AnsiString;'#13#10' '
  +'   myValue: AnsiString);'#13#10'  function NavTreeTreeNodeHintFunc(TreeLabe'
  +'lStr: String): String;'#13#10'  procedure ObjectInspectorTabsHandleChange(e'
  +':TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure '
  +'ResourceInspectorTabsHandleChange(e: TEventStatus; nodeID: AnsiString; myVa'
  +'lue: AnsiString);'#13#10'  procedure OICopyComponentHandleButtonClick(e:TEv'
  +'entStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure OICo'
  +'pyHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString)'
  +';'#13#10'  procedure OICutHandleButtonClick(e:TEventStatus;nodeID: AnsiStri'
  +'ng; myValue: AnsiString);'#13#10'  procedure OIDeleteHandleButtonClick(e:TE'
  +'ventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure OIP'
  +'asteHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStrin'
  +'g);'#13#10'  procedure PropertyEditorScrollboxHandleClick(e:TEventStatus;no'
  +'deID: AnsiString; myValue: AnsiString);'#13#10'  procedure OIAddPropertyBut'
  +'tonHandleButtonClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValu'
  +'e: AnsiString);'#13#10'  procedure ResourceTreeHandleTreeNodeClick(e:TEvent'
  +'Status;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure Resourc'
  +'eTreeHandleDragStart(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString'
  +');'#13#10'  procedure StyleNodeQualifierHandleChange(e: TEventStatus; nodeI'
  +'D: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure StyleShe'
  +'etHandleDrop(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiS'
  +'tring);'#13#10'  procedure StyleSheetHandleDropAccepted(e: TEventStatus; no'
  +'deID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure Style'
  +'SheetHandleTreeNodeClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    my'
  +'Value: AnsiString);'#13#10'  procedure StyleTreeApplyBtnHandleButtonClick(e'
  +': TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10
  ,'  procedure StyleTreeDelBtnHandleButtonClick(e: TEventStatus;'#13#10'    no'
  +'deID: AnsiString; myValue: AnsiString);'#13#10'  procedure SystemClearHandl'
  +'eClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  pr'
  +'ocedure SystemDeployHandleClick(e:TEventStatus;nodeID: AnsiString; myValue:'
  +' AnsiString);'#13#10'  procedure ResourceTreeDelBtnHandleButtonClick(e: TEv'
  +'entStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  pr'
  +'ocedure ResourceTreeLoadBtnHandleButtonClick(e: TEventStatus;'#13#10'    no'
  +'deID: AnsiString; myValue: AnsiString);'#13#10'  procedure SystemEncapsulat'
  +'eHandleClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiS'
  +'tring);'#13#10'  procedure SystemLoadFromStoreHandleClick(e: TEventStatus; '
  +'nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  procedure Sys'
  +'temLoadHandleClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'  procedure SystemSaveClipHandleClick(e:TEventStatus;nodeID: AnsiStri'
  +'ng; myValue: AnsiString);'#13#10'  procedure SystemSaveFileHandleClick(e: T'
  +'EventStatus; nodeID: AnsiString;'#13#10'    myValue: AnsiString);'#13#10'  '
  +'procedure SystemSettingsHandleClick(e: TEventStatus; nodeID: AnsiString;'#13
  +#10'    myValue: AnsiString);'#13#10'  procedure ToggleDesignRunModeHandleCl'
  +'ick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  proce'
  +'dure StyleTreeEditBtnHandleButtonClick(e: TEventStatus; nodeID: AnsiString;'
  +#13#10'    myValue: AnsiString);'#13#10'  procedure XIDETrapEvents1HandleAny'
  +'(e: TEventStatus; nodeID: AnsiString;  myValue: AnsiString);'#13#10'  proce'
  +'dure CodeTreeDelBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myV'
  +'alue: AnsiString);'#13#10'  procedure CodeTreeEditBtnHandleButtonClick(e:TE'
  +'ventStatus;nodeID: AnsiString;myValue: AnsiString);'#13#10'  procedure Code'
  +'TreeRawUnitBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue:'
  +' AnsiString);'#13#10'  procedure CodeTreeSearchBtnHandleButtonClick(e: TEve'
  +'ntStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'  procedure Debug'
  +'TreeHandleButtonClick(e: TEventStatus; nodeID: AnsiString;'#13#10'    myVal'
  +'ue: AnsiString);'#13#10'  procedure EventsMacroStartRecordingHandleClick(e:'
  +' TEventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'  procedure EventsMacroStartReplayHandleClick(e: TEventStatus;'#13#10'    n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'  procedure EventsMacroStop'
  +'RecordingHandleClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValu'
  +'e: AnsiString);'#13#10'  procedure EventsMacroInsertCommentHandleClick(e: T'
  +'EventStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10'  '
  +'procedure EventsMacroSaveToClipHandleClick(e: TEventStatus;'#13#10'    node'
  +'ID: AnsiString; myValue: AnsiString);'#13#10'  procedure EventsMacroLoadFro'
  +'mClipHandleClick(e: TEventStatus;'#13#10'    nodeID: AnsiString; myValue: A'
  +'nsiString);'#13#10'  procedure EventsMacroResumeRecordingHandleClick(e: TEv'
  +'entStatus;'#13#10'    nodeID: AnsiString; myValue: AnsiString);'#13#10#13#10
  +'  procedure UIRootClick(Sender: TObject);'#13#10#13#10'private'#13#10'  { p'
  +'rivate declarations }'#13#10'  {$ifndef JScript}'#13#10'  RITabsDragging: B'
  +'oolean;'#13#10'  RITabsLastPos: TPoint;'#13#10'  {$endif}'#13#10'public'#13
  +#10'  { public declarations }'#13#10' end;'#13#10#13#10#13#10#13#10'var'#13
  +#10'XIDEForm: TXIDEForm;'#13#10#13#10'implementation'#13#10#13#10'{$R *.lfm}'
  +#13#10#13#10#13#10'function TXIDEForm.HandleGenericEvent(MyEventType,myValue'
  +':string;EventNode:TDataNode):Boolean;'#13#10'var'#13#10'  CompositeNode,Sea'
  +'rchNode:TdataNode;'#13#10'  ok:boolean;'#13#10'begin'#13#10'  result:=true;'
  +#13#10'  // If the EventNode is part of the user''s system definition, then '
  +'select the node in the object inspector.'#13#10'  if (DesignMode=true)'#13
  +#10'  and ((NodeIsDescendantOf(EventNode,UIProjectRootName) > -1)'#13#10'   '
  +' or (EventNode.NodeType=''TXMenuItem'')'#13#10'    or (NodeIsInXForm(EventN'
  +'ode) = true)) then'#13#10'  begin'#13#10'    if ((MyEventType=''Click'')'#13
  +#10'      or ( MyEventType=''ButtonClick'')'#13#10'      or ( MyEventType='''
  +'TreeNodeClick'')) then'#13#10'    begin'#13#10'      if ((EventNode.NodeTyp'
  +'e<>''TXMenuItem'') or (EventNode.IsDynamic=true))  then'#13#10'      begin'
  +#13#10'        ResourceInspectorTabs.TabIndex:=0;'#13#10'        ObjectInspe'
  +'ctorTabs.TabIndex:=0;'#13#10'        if EventNode.NameSpace<>'''' then'#13
  +#10'        begin'#13#10'          CompositeNode := FindCompositeContainer(E'
  +'ventNode);'#13#10'          if (CompositeNode<>nil) then'#13#10'           '
  +' SelectNavTreeNode(CompositeNode,false);'#13#10'        end'#13#10'        '
  +'else'#13#10'          SelectNavTreeNode(EventNode,false);'#13#10'        re'
  +'sult:=false;  //do no further event handling'#13#10'      end;'#13#10'    e'
  +'nd'#13#10'    else if (MyEventType=''Change'') then'#13#10'    begin'#13#10
  ,'      SelectNavTreeNode(EventNode,true);   //refresh'#13#10'    end'#13#10
  +'    else if MyEventType=''HTMLEditorBrowserClosed'' then'#13#10'    begin'
  +#13#10'        // a HTMLEditor browser window has closed...refresh the objec'
  +'t inspector to reflect'#13#10'        // the state of the ''Showing'' flag.'
  +#13#10'        if ObjectInspectorSelectedNavTreeNode = EventNode then'#13#10
  +'        begin'#13#10'          RefreshObjectInspector(EventNode);'#13#10'  '
  +'      end;'#13#10'    end;'#13#10'  end'#13#10'  else if (DesignMode=false)'
  +#13#10'  then'#13#10'  begin'#13#10'    // Run Mode.'#13#10'    // Trap a pr'
  +'operty change event, to push new value to destination properties.'#13#10'  '
  +'  if (MyEventType=''Change'') then'#13#10'    begin'#13#10'      //PushSour'
  +'ceToAttributes(EventNode,?????SourceAttrib);       //...we don''t know whic'
  +'h attribute has changed'#13#10'      PushNodeSourcesToAttributes(EventNode)'
  +';'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'procedure TX'
  +'IDEForm.DummyPositionMarker;     // do not delete this procedure'#13#10'beg'
  +'in'#13#10'end;'#13#10#13#10'procedure TXIDEForm.NavTreeHandleTreeNodeClick('
  +'e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10
  +'  OINavTreeNodeChange(e,nodeId,'''',myValue);'#13#10'end;'#13#10#13#10'proc'
  +'edure TXIDEForm.NavTreeHandleDragStart(e:TEventStatus;nodeID: AnsiString; m'
  +'yValue: AnsiString);'#13#10'begin'#13#10'  OIDragItem(e,nodeId,myValue);'#13
  +#10'end;'#13#10#13#10'procedure TXIDEForm.NavTreeHandleDrop(e:TEventStatus;n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIDropItem(e'
  +',nodeId,myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.NavTreeHandl'
  +'eDropAccepted(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'var'#13#10'  SourceIsNavigator,SourceIsResourceTree:Boolean;'
  +#13#10'  DstNodeName:String;'#13#10'  DstNode:TDataNode;'#13#10'  ok:Boolean'
  +';'#13#10'  values:TNodeEventValue;'#13#10'begin'#13#10'  //showmessage(''ch'
  +'ecking drop. Sourcename=''+SourceName+'' DstText=''+dstText);'#13#10#13#10
  +'  // e.ValueObject is an object of type TNodeEventValue.'#13#10'  // values'
  +'.myNode is of type TTreeNode, and contains data with a unique id.'#13#10'  '
  +'values:=TNodeEventValue(e.ValueObject);'#13#10#13#10'  SourceIsNavigator:=f'
  +'alse;'#13#10'  SourceIsResourceTree:=false;'#13#10'  if (values.SourceName='
  +'''ResourceTree'') then'#13#10'  begin'#13#10'    SourceIsResourceTree:=true'
  +';'#13#10'  end;'#13#10'  if (values.SourceName=''NavTree'') then SourceIsNa'
  +'vigator:=true;'#13#10'  ok:=(SourceIsNavigator )'#13#10'          or (Sourc'
  +'eIsResourceTree );'#13#10#13#10'  if ok'#13#10'  and SourceIsResourceTree t'
  +'hen'#13#10'  begin'#13#10'    //showmessage(''checking drop. DstText=''+dst'
  +'Text);'#13#10'    // additional node-level checks...'#13#10'    if (values.'
  +'dstText<>'''') then'#13#10'    begin'#13#10'      DstNodename:=TreeLabelToI'
  +'d(values.DstText);'#13#10'      DstNode:=FindDataNodeById(SystemNodeTree,Ds'
  +'tNodeName,'''',true);     //!!!!namespace - assuming top design level only'
  +#13#10'      if (DstNode<>nil) then'#13#10'      begin'#13#10'        ok:=OI'
  +'NavTreeAllowDrop(DstNode);'#13#10'      end;'#13#10'    end;'#13#10'  end;'
  +#13#10'  e.ReturnString:=myBoolToStr(ok);'#13#10'end;'#13#10#13#10'procedure'
  +' TXIDEForm.NavTreeUpBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIMoveNavSiblingUpD'
  +'own(''Up'');'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OITabsHandleChang'
  +'e(e: TEventStatus; nodeID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10
  +'begin'#13#10'  OIPropsEventsTabChange;'#13#10'end;'#13#10#13#10'procedure T'
  +'XIDEForm.NavTreeDownBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIMoveNavSiblingUpD'
  +'own(''Down'');'#13#10'end;'#13#10#13#10'function TXIDEForm.NavTreeTreeNodeH'
  +'intFunc(TreeLabelStr: String): String;'#13#10'begin'#13#10'  result := OITr'
  +'eeNodeHint(TreeLabelStr);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.Obje'
  +'ctInspectorTabsHandleChange(e:TEventStatus;nodeID: AnsiString; myValue: Ans'
  +'iString);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  if ObjectInspecto'
  +'rTabs.TabIndex=2 then'#13#10'  begin'#13#10'     SetStyleOptions;'#13#10'  '
  +'   ResourceInspectorTabs.TabIndex:=1;'#13#10'  end'#13#10'  else if ObjectI'
  +'nspectorTabs.TabIndex=0 then'#13#10'    ResourceInspectorTabs.TabIndex:=0;'
  +#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OICopyCompone'
  +'ntHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString)'
  +';'#13#10'begin'#13#10'  OIComponentCopy(nodeId,myValue);'#13#10'end;'#13#10
  +#13#10'procedure TXIDEForm.OICopyHandleButtonClick(e:TEventStatus;nodeID: An'
  +'siString; myValue: AnsiString);'#13#10'begin'#13#10'  OICopySelectedItem;'
  +#13#10'end;'#13#10#13#10'procedure TXIDEForm.OICutHandleButtonClick(e:TEvent'
  ,'Status;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OICu'
  +'tItem(nodeId,myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.OIDelet'
  +'eHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'   OIDeleteSelectedItem;'#13#10'end;'#13#10#13#10'proced'
  +'ure TXIDEForm.OIPasteHandleButtonClick(e:TEventStatus;nodeID: AnsiString; m'
  +'yValue: AnsiString);'#13#10'begin'#13#10'  OIPasteItem(nodeId,myValue);'#13
  +#10'end;'#13#10#13#10'procedure TXIDEForm.PropertyEditorScrollboxHandleClick'
  +'(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13
  +#10#13#10'end;'#13#10#13#10'procedure TXIDEForm.ResourceTreeHandleTreeNodeCl'
  +'ick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'
  +#13#10'  OIResourceTreeNodeChange(nodeId,myValue);'#13#10'end;'#13#10#13#10
  +'procedure TXIDEForm.ResourceTreeHandleDragStart(e:TEventStatus;nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'begin'#13#10'  OIDragItem(e,nodeId,myV'
  +'alue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.StyleNodeQualifierHandl'
  +'eChange(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  UpdateNodeQualifierField;'#13
  +#10'  GenerateStyleSheets;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'proced'
  +'ure TXIDEForm.StyleSheetHandleDrop(e: TEventStatus; nodeID: AnsiString;'#13
  +#10'  myValue: AnsiString);'#13#10'var'#13#10'  values:TNodeEventValue;'#13
  +#10'  TreeNodeId:String;'#13#10'begin'#13#10'  // e.ValueObject is an object'
  +' of type TNodeEventValue.'#13#10'  // values.myNode is of type TTreeNode, a'
  +'nd contains data with a unique id.'#13#10#13#10'  {$ifdef JScript}'#13#10' '
  +' //EditAttributeValue(''StyleSheet'','''',''SelectedNodeText'',DropTarget);'
  +#13#10'  values:=TNodeEventValue(e.ValueObject);'#13#10'  asm'#13#10'    Tre'
  +'eNodeId=values.myNode.id;'#13#10'  end;'#13#10'  //showmessage(''dropping o'
  +'n node ''+TreeNodeId);'#13#10'  StyleSheet.selectedNodeId:=TreeNodeId;'#13
  +#10'  PasteSelectedStyleResources(true,DropTarget,false,TNodeEventValue(e.Va'
  +'lueObject));// the boolean means this does the paste and reports errors rat'
  +'her than just checking it'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'proced'
  +'ure TXIDEForm.StyleSheetHandleDropAccepted(e: TEventStatus;'#13#10'  nodeID'
  +': AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  values:TNodeEventVa'
  +'lue;'#13#10'  SourceName,SrcText,DstText,ReturnString:String;'#13#10'  prio'
  +'rNodeText:string;'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  values:=T'
  +'NodeEventValue(e.ValueObject);'#13#10'  SourceName:=values.SourceName;  // '
  +'name of tree being dragged from'#13#10'  SrcText:=values.SrcText;        //'
  +' text of treenode being dragged'#13#10'  DstText:=values.DstText;        //'
  +' text of treenode being dragged over'#13#10'  if SourceName=''StyleResource'
  +'s'' then'#13#10'  begin'#13#10'    // set e.ReturnString to "True" or "Fals'
  +'e"'#13#10'    PriorNodeText:= StyleResources.SelectedNodeText;'#13#10'    i'
  +'f SrcText <> priorNodeText then'#13#10'      EditAttributeValue(''StyleReso'
  +'urces'','''',''SelectedNodeText'',SrcText);'#13#10'    WatchBox.ItemValue:='
  +'''StyleResources.SelectedNodeText=''+StyleResources.SelectedNodeText;'#13#10
  +'    if PasteSelectedStyleResources(false,DstText,true,TNodeEventValue(e.Val'
  +'ueObject))=true  then'#13#10'      ReturnString:=''True'''#13#10'    else'
  +#13#10'      ReturnString:=''False'';'#13#10'  end'#13#10'  else'#13#10'    '
  +'ReturnString:=''False'';'#13#10'  e.ReturnString:=ReturnString;'#13#10'  {$'
  +'endif}'#13#10'end;'#13#10#13#10#13#10#13#10'procedure TXIDEForm.StyleSheetH'
  +'andleTreeNodeClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: A'
  +'nsiString);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  PopulateStyleEd'
  +'itor(false);// use drop downs if available'#13#10'  {$endif}'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.StyleTreeApplyBtnHandleButtonClick(e: TEventSt'
  +'atus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10
  +'  {$ifdef JScript}'#13#10'  UpdateNodeQualifierField;'#13#10'  GenerateStyl'
  +'eSheets;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10#13#10'procedure TXIDEFo'
  +'rm.StyleTreeDelBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiS'
  +'tring; myValue: AnsiString);'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10
  +'  DeleteStyleNode;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXI'
  +'DEForm.ResourceTreeHandleDrop(e: TEventStatus; nodeID: AnsiString;'#13#10' '
  +' myValue: AnsiString);'#13#10'begin'#13#10'end;'#13#10#13#10#13#10'procedur'
  +'e TXIDEForm.ResourceTreeHandleDropAccepted(e: TEventStatus;'#13#10'  nodeID'
  +': AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  SourceIsResourceTre'
  +'e:Boolean;'#13#10'  values:TNodeEventValue;'#13#10'begin'#13#10'  values:=T'
  +'NodeEventValue(e.ValueObject);'#13#10'  SourceIsResourceTree:=false;'#13#10
  +'  if (values.SourceName=''ResourceTree'') then SourceIsResourceTree:=true;'
  ,#13#10'  e.ReturnString:=myBoolToStr(SourceIsResourceTree );'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.ResourceTreeDelBtnHandleButtonClick(e: TEventS'
  +'tatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13
  +#10'  OIDeleteResource;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.Resourc'
  +'eTreeLoadBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString;'
  +' myValue: AnsiString);'#13#10'begin'#13#10'  OILoadResource;'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.SystemEncapsulateHandleClick(e: TEventStatus;'
  +#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIE'
  +'ncapsulate;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.SystemLoadFromStor'
  +'eHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'begin'#13#10'  if DesignMode=false then'#13#10'    ShowMessage'
  +'(''Please switch to Design Mode first'')'#13#10'  else'#13#10'  begin'#13#10
  +'    SavedSystemsForm.Initialise;'#13#10'    XForm.ShowXForm(''SavedSystemsF'
  +'orm'',true);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.UIR'
  +'ootClick(Sender: TObject);'#13#10'begin'#13#10'end;'#13#10#13#10'procedure '
  +'TXIDEForm.SystemClearHandleClick(e:TEventStatus;nodeID: AnsiString;'#13#10
  +'  myValue: AnsiString);'#13#10'var'#13#10'ok:boolean;'#13#10'begin'#13#10' '
  +' ok:=XIDEConfirm(''OK to clear the system?'');'#13#10#13#10'  if ok then'#13
  +#10'  begin'#13#10'    OIClearSystem;'#13#10'    SelectNavTreeNode(MainFormP'
  +'rojectRoot,true);'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TX'
  +'IDEForm.SystemDeployHandleClick(e:TEventStatus;nodeID: AnsiString;'#13#10' '
  +' myValue: AnsiString);'#13#10'begin'#13#10'  OIDeploySystem;'#13#10'end;'#13
  +#10#13#10'procedure TXIDEForm.SystemLoadHandleClick(e:TEventStatus;nodeID: A'
  +'nsiString;'#13#10'  myValue: AnsiString);'#13#10'begin'#13#10'  if DesignMo'
  +'de=false then'#13#10'    ShowMessage(''Please switch to Design Mode first'''
  +')'#13#10'  else'#13#10'    OISystemLoad(e,nodeId);'#13#10'end;'#13#10#13#10
  +'procedure TXIDEForm.SystemSaveClipHandleClick(e:TEventStatus;nodeID: AnsiSt'
  +'ring;'#13#10'  myValue: AnsiString);'#13#10'begin'#13#10'  SaveSystemToClip'
  +';'#13#10'end;'#13#10#13#10'procedure TXIDEForm.SystemSaveFileHandleClick(e:'
  +' TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'be'
  +'gin'#13#10'  SaveSystemToFile;'#13#10'end;'#13#10#13#10'procedure TXIDEForm'
  +'.ToggleDesignRunModeHandleClick(e:TEventStatus;nodeID: AnsiString;'#13#10' '
  +' myValue: AnsiString);'#13#10'begin'#13#10'  if DesignMode then'#13#10'    '
  +'  SaveSystemData;'#13#10#13#10'  DoToggleDesignRunMode(ToggleDesignRunMode)'
  +';'#13#10'end;'#13#10#13#10'procedure TXIDEForm.StyleTreeEditBtnHandleButton'
  +'Click(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  PopulateStyleEditor(true);//'
  +' edit instead of using drop downs when available'#13#10'  {$endif}'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXIDEForm.XIDETrapEvents1HandleAny(e: TEventStat'
  +'us;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  '
  +'eventNode:TDataNode;'#13#10'  doContinue:Boolean;'#13#10'begin'#13#10'  eve'
  +'ntNode:=FindDataNodeById(SystemNodeTree,e.NodeId,e.NameSpace,true);'#13#10
  +'  doContinue:=HandleGenericEvent(e.eventtype,myValue,eventNode);'#13#10'  T'
  +'rapEventForMacro(e);'#13#10'  e.ContinueAfterTrappers:=doContinue;'#13#10'e'
  +'nd;'#13#10#13#10'procedure TXIDEForm.CodeTreeHandleTreeNodeClick(e:TEventSt'
  +'atus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'   OICod'
  +'eTreeNodeChange(nodeId,myValue);'#13#10'end;'#13#10#13#10'procedure TXIDEFo'
  +'rm.HelpAboutHandleClick(e: TEventStatus; nodeID: AnsiString;'#13#10'  myVal'
  +'ue: AnsiString);'#13#10'begin'#13#10'  XForm.ShowXForm(''AboutXIDEForm'',tr'
  +'ue);'#13#10'end;'#13#10#13#10'procedure TXIDEForm.HelpOverviewHandleClick(e'
  +': TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'b'
  +'egin'#13#10'  ClearInspectors;'#13#10'  XIDEHelpForm.InitialiseonShow;'#13
  +#10'  XForm.ShowXForm(''XIDEHelpForm'',false);'#13#10'end;'#13#10#13#10#13#10
  +'procedure TXIDEForm.MyRootDivClick(Sender: TObject);'#13#10'begin'#13#10'en'
  +'d;'#13#10#13#10'procedure TXIDEForm.CodeTreeFuncBtnHandleButtonClick(e:TEve'
  +'ntStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OI'
  +'AddCodeFuncNode;'#13#10'end;'#13#10'procedure TXIDEForm.CodeTreeRawUnitBtnH'
  +'andleButtonClick(e:TEventStatus;nodeID: AnsiString;'#13#10'  myValue: AnsiS'
  +'tring);'#13#10'begin'#13#10'  OIAddCodeUnitNode(''RawUnit'');'#13#10'end;'
  +#13#10#13#10'procedure TXIDEForm.CodeTreeEditBtnHandleButtonClick(e:TEventSt'
  +'atus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  OIEdit'
  +'CodeUnit;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.CodeTreeDelBtnHandle'
  +'ButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'begin'#13#10'  OIDeleteCodeUnit;'#13#10'end;'#13#10#13#10'procedure XIDESet'
  ,'upUIRootNode;'#13#10'begin'#13#10'  UIRootNode.SetAttributeValue(''Deployme'
  +'ntMode'',''Design'');'#13#10'  UIRootNode.SetAttributeValue(''SystemName'','
  +'''XIDESystem'');'#13#10'  // Add root node attributes for ''settings'' data'
  +'...'#13#10'  UIRootNode.SetAttributeValue(''ShowResources'',''Right'');    '
  +' //Left,Right'#13#10#13#10'  // Add root node events'#13#10'  UIRootNode.my'
  +'eventTypes.Add(''OnEnterRunMode'');'#13#10'  SetLength(UIRootNode.myEventHa'
  +'ndlers,1);'#13#10'end;'#13#10#13#10#13#10'procedure TXIDEForm.SystemSetting'
  +'sHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'var'#13#10'  Reply:Boolean;'#13#10'  ShowResourceTree:String;'
  +#13#10'begin'#13#10'  Reply:=XIDEConfirm(''Show Resources on the Left?'');'
  +#13#10'  if Reply=true then'#13#10'    ShowResourceTree:=''Left'''#13#10'  e'
  +'lse'#13#10'    ShowResourceTree:=''Right'';'#13#10'  UIRootNode.SetAttribut'
  +'eValue(''ShowResources'',ShowResourceTree);'#13#10'  if DesignMode then'#13
  +#10'    RedisplayResourceTree;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.'
  +'OIAddPropertyButtonHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'begin'#13#10'  OIAddInterfaceElement;'
  +#13#10'end;'#13#10#13#10'procedure TXIDEForm.DebugTreeHandleButtonClick(e: T'
  +'EventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'var'
  +#13#10'  txt:String;'#13#10'  tmpl:TStringList;'#13#10'begin'#13#10#13#10'  '
  +'DebugwriteNodetree(SystemnodeTree,txt,0);'#13#10'  {$ifndef JScript}'#13#10
  +'  WriteToLocalStore(''debugtree'',txt);'#13#10'  {$else}'#13#10'  myCopyToC'
  +'lip(''debugtree'',txt );'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedu'
  +'re TXIDEForm.ResourceInspectorTabsHandleChange(e: TEventStatus;'#13#10'  no'
  +'deID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  {$ifdef JScri'
  +'pt}'#13#10'  if ResourceInspectorTabs.TabIndex=1 then'#13#10'  begin'#13#10
  +'     ObjectInspectorTabs.TabIndex:=2;'#13#10'  end'#13#10'  else if Resourc'
  +'eInspectorTabs.TabIndex=0 then'#13#10'    ObjectInspectorTabs.TabIndex:=0;'
  +#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TXIDEForm.CodeTreeSearc'
  +'hBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'begin'#13#10'  OICodeSearch;'#13#10'end;'#13#10#13#10
  +'procedure TXIDEForm.EventsMacroStartRecordingHandleClick(e: TEventStatus;'
  +#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  Sta'
  +'rtRecording;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.EventsMacroStartR'
  +'eplayHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: Ans'
  +'iString);'#13#10'begin'#13#10'  StartReplay;'#13#10'end;'#13#10#13#10#13#10
  +'procedure TXIDEForm.EventsMacroStopRecordingHandleClick(e: TEventStatus;'#13
  +#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  StopRe'
  +'cording;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.EventsMacroInsertComm'
  +'entHandleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'begin'#13#10'  InsertComment;'#13#10'end;'#13#10#13#10'proce'
  +'dure TXIDEForm.EventsMacroSaveToClipHandleClick(e: TEventStatus;'#13#10'  n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  SaveMacroToC'
  +'lip;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.EventsMacroLoadFromClipHa'
  +'ndleClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString'
  +');'#13#10'begin'#13#10'  LoadMacroFromClip(e,nodeId);'#13#10'end;'#13#10#13
  +#10'procedure TXIDEForm.EventsMacroResumeRecordingHandleClick(e: TEventStatu'
  +'s;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10' '
  +' ResumeMacroRecording;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'pr'
  +'ocedure TXIDEForm.RunSettingsHandleClick(e: TEventStatus; nodeID: AnsiStrin'
  +'g;'#13#10'  myValue: AnsiString);'#13#10'var'#13#10'  Lines:TStringList;'#13
  +#10'  NewPath:String;'#13#10'begin'#13#10'  NewPath:= XIDEPrompt(''Location '
  +'of fpc compiler (fpc.exe)'',ConfigFPCPath);'#13#10'  if NewPath<>'''' then'
  +#13#10'  begin'#13#10'    ConfigFPCPath := NewPath;'#13#10'    Lines:=TStrin'
  +'gList.Create;'#13#10'    Lines.Add(ConfigFPCPath);'#13#10'    Lines.SaveToF'
  +'ile(''XIDERunSettings.dta'');'#13#10'    Lines.Free;'#13#10'  end;'#13#10'e'
  +'nd;'#13#10#13#10#13#10'procedure InitialiseResources;'#13#10'// define proj'
  +'ect-specific resources.'#13#10'// required files have been pre-built into t'
  +'he resource file xide.lrs.'#13#10'// the resource folders and files will be'
  +' created from these lists by the procedure WriteResourceFiles in unit Utils'
  +'JSCompile.'#13#10'begin'#13#10'  gpujs:=ResourceToString(''gpu'');'#13#10#13
  +#10'  // files needed for this project to be compiled by pas2js, to generate'
  +' the project JS file...'#13#10'  AddRequiredFile(''webtranspilerutils'',''r'
  +'esources/project/webtranspilerutils.pas'');'#13#10'  AddRequiredFile(''xthr'
  +'eads'',''resources/project/xthreads.pas'');'#13#10'  AddRequiredFile(''xgpu'
  ,'canvas'',''resources/project/xgpucanvas.pas'');'#13#10'  AddRequiredFile('''
  +'xgpueditor'',''resources/project/xgpueditor.pas'');'#13#10'  AddRequiredFil'
  +'e(''xcomposite'',''resources/project/xcomposite.pas'');'#13#10'  AddRequire'
  +'dFile(''xcompositeintf'',''resources/project/xcompositeintf.pas'');'#13#10
  +'  AddRequiredFile(''gpu'',''resources/project/gpu.js'');'#13#10#13#10'  Add'
  +'RequiredFile(''xidemain'',''resources/project/XIDEMain.pas'');'#13#10'  Add'
  +'RequiredFile(''xobjectinsp'',''resources/project/xobjectinsp.pas'');'#13#10
  +'  AddRequiredFile(''codeeditor'',''resources/project/codeeditor.pas'');'#13
  +#10'  AddRequiredFile(''compileusercode'',''resources/project/compileusercod'
  +'e.pas'');'#13#10'  AddRequiredFile(''propertyeditunit'',''resources/project'
  +'/propertyeditunit.pas'');'#13#10'  AddRequiredFile(''inputselectunit'',''re'
  +'sources/project/inputselectunit.pas'');'#13#10'  AddRequiredFile(''popupmem'
  +'o'',''resources/project/popupmemo.pas'');'#13#10'  AddRequiredFile(''interf'
  +'acetypes'',''resources/project/interfacetypes.pas'');'#13#10'  AddRequiredF'
  +'ile(''interfacetypesdll'',''resources/project/interfacetypesdll.pas'');'#13
  +#10'  AddRequiredFile(''aboutunit'',''resources/project/aboutunit.pas'');'#13
  +#10'  AddRequiredFile(''xidehelpunit'',''resources/project/xidehelpunit.pas'
  +''');'#13#10'  AddRequiredFile(''savedsystems'',''resources/project/savedsys'
  +'tems.pas'');'#13#10'  AddRequiredFile(''stylesutils'',''resources/project/s'
  +'tylesutils.pas'');'#13#10'  AddRequiredFile(''eventlogging'',''resources/pr'
  +'oject/eventlogging.pas'');'#13#10'  AddRequiredFile(''replayuserdialog'','''
  +'resources/project/replayuserdialog.pas'');'#13#10'  AddRequiredFile(''macro'
  +'comment'',''resources/project/macrocomment.pas'');'#13#10#13#10'  // files '
  +'needed for web-pas2jscompiler to be compilable by pas2js, and built into th'
  +'e project JS file...'#13#10'  AddRequiredFile(''fppas2js'',''resources/pas2'
  +'jstranspiler/fppas2js.pp'');'#13#10'  AddRequiredFile(''fppjssrcmap'',''res'
  +'ources/pas2jstranspiler/fppjssrcmap.pp'');'#13#10'  AddRequiredFile(''pas2j'
  +'scompiler'',''resources/pas2jstranspiler/pas2jscompiler.pp'');'#13#10'  Add'
  +'RequiredFile(''fpjson'',''resources/pas2jstranspiler/fpjson.pp'');         '
  +'              // used by filecache'#13#10'  AddRequiredFile(''pas2jsfilecac'
  +'he'',''resources/pas2jstranspiler/pas2jsfilecache.pp'');'#13#10'  AddRequir'
  +'edFile(''pas2jsfiler'',''resources/pas2jstranspiler/pas2jsfiler.pp'');'#13
  +#10'  AddRequiredFile(''pas2jsfileutils'',''resources/pas2jstranspiler/pas2j'
  +'sfileutils.pp'');'#13#10'  AddRequiredFile(''pas2jsfileutilsnodejs'',''reso'
  +'urces/pas2jstranspiler/pas2jsfileutilsnodejs.inc'');'#13#10'  AddRequiredFi'
  +'le(''pas2jslogger'',''resources/pas2jstranspiler/pas2jslogger.pp'');'#13#10
  +'  AddRequiredFile(''pas2jspparser'',''resources/pas2jstranspiler/pas2jsppar'
  +'ser.pp'');'#13#10'  AddRequiredFile(''pas2js_defines'',''resources/pas2jstr'
  +'anspiler/pas2js_defines.inc'');'#13#10'  AddRequiredFile(''nodejsfs'',''res'
  +'ources/pas2jstranspiler/nodejsfs.pas'');'#13#10'  AddRequiredFile(''contnrs'
  +''',''resources/pas2jstranspiler/contnrs.pas'');'#13#10'  AddRequiredFile('''
  +'nodejs'',''resources/pas2jstranspiler/nodejs.pas'');'#13#10'  AddRequiredFi'
  +'le(''jstree'',''resources/pas2jstranspiler/jstree.pp'');'#13#10'  AddRequir'
  +'edFile(''jswriter'',''resources/pas2jstranspiler/jswriter.pp'');'#13#10'  A'
  +'ddRequiredFile(''jsbase'',''resources/pas2jstranspiler/jsbase.pp'');'#13#10
  +'  AddRequiredFile(''jssrcmap'',''resources/pas2jstranspiler/jssrcmap.pas'')'
  +';'#13#10'  AddRequiredFile(''jstoken'',''resources/pas2jstranspiler/jstoken'
  +'.pp'');'#13#10'  AddRequiredFile(''pscanner'',''resources/pas2jstranspiler/'
  +'pscanner.pp'');'#13#10'  AddRequiredFile(''pparser'',''resources/pas2jstran'
  +'spiler/pparser.pp'');'#13#10'  AddRequiredFile(''pastree'',''resources/pas2'
  +'jstranspiler/pastree.pp'');'#13#10'  AddRequiredFile(''pasresolver'',''reso'
  +'urces/pas2jstranspiler/pasresolver.pp'');'#13#10'  AddRequiredFile(''pasuse'
  +'analyzer'',''resources/pas2jstranspiler/pasuseanalyzer.pp'');'#13#10'  AddR'
  +'equiredFile(''pasresolveeval'',''resources/pas2jstranspiler/pasresolveeval.'
  +'pas'');'#13#10'  AddRequiredFile(''web'',''resources/pas2jstranspiler/web.p'
  +'as'');'#13#10'  AddRequiredFile(''pas2jsutils'',''resources/pas2jstranspile'
  +'r/pas2jsutils.pp'');'#13#10'  AddRequiredFile(''pas2jsfs'',''resources/pas2'
  +'jstranspiler/pas2jsfs.pp'');'#13#10'  AddRequiredFile(''webfilecache'',''re'
  +'sources/pas2jstranspiler/webfilecache.pp'');'#13#10'  AddRequiredFile(''pas'
  +'2jswebcompiler'',''resources/pas2jstranspiler/pas2jswebcompiler.pp'');'#13
  +#10#13#10'  InitialiseCompilerResources(''XIDE'',ProjectDirectory);'#13#10#13
  +#10'  if not DirectoryExists(''SavedSystems'') then'#13#10'    CreateDir(''S'
  +'avedSystems'');'#13#10'end;'#13#10#13#10'{ TXIDEForm }'#13#10'procedure TXI'
  +'DEForm.FormCreate(Sender: TObject);'#13#10'var'#13#10'  tmp,SystemDescripti'
  ,'on:String;'#13#10'  RunSettingsNode:TDataNode;'#13#10'  tmpl:TStringList;'
  +#13#10'begin'#13#10'  MainForm:=self;'#13#10'  MainFormTopControl:=MyRootDiv'
  +';'#13#10'  UITopControl:=UIRoot;'#13#10#13#10'  SystemNodeTree.ScreenObject'
  +':=nil;       // root node has no screen object.'#13#10'  NavTreeComponent:='
  +'self.NavTree.myNode;'#13#10'  ResourceTreeComponent:=self.ResourceTree.myNo'
  +'de;'#13#10'  CodeTreeComponent:=self.CodeTree.myNode;'#13#10'  LoggingLabel'
  +'Node:=self.EventLoggingLabel.myNode;'#13#10#13#10'  myNode:=DoXFormCreated('
  +'self);'#13#10#13#10'  MainFormProjectRoot:=FindDataNodeById(SystemNodeTree,'
  +'UIProjectRootName,'''',true);'#13#10'  UIRootitem:=FindDataNodeById(SystemN'
  +'odeTree,UIProjectRootName,'''',true);'#13#10'  XIDESetupUIRootNode;'#13#10
  +#13#10#13#10'  // special case - don''t want the menu item ''RunSettings'' t'
  +'o be included in system saves & will not go to browser'#13#10'  RunSettings'
  +'Node:=FindDataNodeById(SystemNodeTree,''RunSettings'','''',true);'#13#10'  '
  +'RunSettingsNode.NodeClass:=''xxx'';'#13#10#13#10'  InitialiseResources;'#13
  +#10'  InitialiseXIDE;'#13#10'  InitialiseXComponentsProject;'#13#10'  XGPUEd'
  +'itor.CreateGPUEditForm;'#13#10'  InitialiseStyleDesigner;'#13#10#13#10'  St'
  +'yleResourcesPage.IsVisible:=false;      // this is browser/HTML only'#13#10
  +'  ObjectInspectorTabs.TabIndex:=0;'#13#10'  ResourceInspectorTabs.TabIndex:'
  +'=0;'#13#10'  MacroEventList.SetMenuVisibility;'#13#10#13#10'  // is there a'
  +' saved system from a previous session?'#13#10'  SystemDescription:=trim(Rea'
  +'dFromLocalStore(''XIDESavedData.txt''));'#13#10'  if SystemDescription<>'''
  +''' then'#13#10'  begin'#13#10'    DoSystemLoad(SystemDescription,'''');'#13
  +#10'  end'#13#10'  else'#13#10'    SelectNavTreeNode(MainFormProjectRoot,tru'
  +'e);'#13#10'  tmp:='''';'#13#10'end;'#13#10#13#10#13#10'procedure TXIDEForm.'
  +'FormActivate(Sender: TObject);'#13#10'begin'#13#10'end;'#13#10#13#10'proced'
  +'ure TXIDEForm.FormClose(Sender: TObject; var CloseAction: TCloseAction);'#13
  +#10'begin'#13#10'  inherited FormClose(Sender, CloseAction);'#13#10'  SaveSy'
  +'stemData;'#13#10'end;'#13#10#13#10'procedure TXIDEForm.CompileToJSClick(Sen'
  +'der: TObject);'#13#10'var'#13#10'  PropertiesNode:TDataNode;'#13#10'  ok:Bo'
  +'olean;'#13#10'begin'#13#10#13#10'  // Start in Design Mode'#13#10'  if not '
  +'DesignMode then'#13#10'    DoToggleDesignRunMode(ToggleDesignRunMode);'#13
  +#10'  // First delete object inspector dynamic property editor fields'#13#10
  +'  ClearInspectors;'#13#10#13#10'  SaveSystemData;'#13#10#13#10'  // Compile'
  +' the user-created event code into a unit, to check for pas2js compile error'
  +'s.'#13#10'  ok:=CompileEventCode(CodeEditForm.CodeEdit,''LazJS'');'#13#10#13
  +#10'  if ok then'#13#10'  begin'#13#10#13#10'    // additional inc file for '
  +'composite resources'#13#10'    SaveCompositesToIncFile;'#13#10#13#10'    Co'
  +'mpileJSandExecute(''resources/project/'');'#13#10'    if not FileExists(''X'
  +'IDEMain.js'') then'#13#10'      ShowCompilerLog;'#13#10'  end'#13#10'  else'
  +#13#10'  begin'#13#10'    DisplayDllCompileErrors;'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'procedure TXIDEForm.CompilerShowLogClick(Sender: TObject);'#13
  +#10'begin'#13#10'  ShowCompilerLog;'#13#10'end;'#13#10#13#10'procedure TXIDE'
  +'Form.FormResize(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(self, '
  +'MyRootDiv);'#13#10'end;'#13#10#13#10'{$else}'#13#10#13#10'procedure SetupAn'
  +'imatedPointer;'#13#10'var'#13#10'  PointerStyleHTML:string;'#13#10'begin'#13
  +#10'  PointerStyleHTML:=''     <style> '' +LineEnding'#13#10'  +''       #Au'
  +'tomatedCursor { ''  +LineEnding'#13#10'  +''       position: fixed; ''  +Li'
  +'neEnding             // fixed = relative to viewport'#13#10'  +''       fon'
  +'t-size: 40px;  '' +LineEnding'#13#10'  +''       -ms-transform: rotate(40de'
  +'g); /* IE 9 */ ''  +LineEnding'#13#10'  +''       -webkit-transform: rotate'
  +'(40deg); /* Safari */ ''  +LineEnding'#13#10'  +''       transform: rotate('
  +'40deg); ''  +LineEnding'#13#10'  +''    } '' +LineEnding'#13#10'  +''    </'
  +'style>  '' +LineEnding;'#13#10#13#10'  asm'#13#10'     var elem = document.'
  +'createElement(''div'');'#13#10'     elem.id = "AutomatedCursor";'#13#10'   '
  +'  elem.innerHTML = "&#9756;";'#13#10'     elem.style.display = "none";'#13
  +#10'     elem.style.animationFillMode="forwards";'#13#10'     document.body.'
  +'appendChild(elem);'#13#10#13#10'     document.head.innerHTML = document.hea'
  +'d.innerHTML+PointerStyleHTML;'#13#10'  end;'#13#10'  InitAutomatedCursor;'
  +#13#10'end;'#13#10#13#10#13#10'procedure InitialisePage(dummy:string);'#13#10
  +'var'#13#10'  tempstr,dm,sysname:string;'#13#10'  i:integer;'#13#10'  s:stri'
  +'ng;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  ok:=true;'#13#10#13#10'  Sta'
  +'rtingUp:=true;// suppress event handlers while starting up'#13#10#13#10'  /'
  +'/ this include file contains create statements for all the interface object'
  +'s in main form and other forms'#13#10'  // XForm nodes are added as childre'
  ,'n of UIRootNode.'#13#10'  {$I systemintface.inc}'#13#10'  MainForm:=XIDEFor'
  +'m;'#13#10'  //showmessage(''mainform node is ''+MainForm.myNode.NodeName+'''
  +' class=''+MainForm.myNode.NodeClass+'' type=''+MainForm.myNode.NodeType);'
  +#13#10#13#10'  UIRootNode.MyForm:=nil;'#13#10'  //showmessage(''DONE INTFACE'
  +' LOAD................'');'#13#10'  XIDESetupUIRootNode;'#13#10#13#10'  NavT'
  +'reeComponent:=XIDEForm.NavTree.myNode;'#13#10'  ResourceTreeComponent:=XIDE'
  +'Form.ResourceTree.myNode;'#13#10'  CodeTreeComponent:=XIDEForm.CodeTree.myN'
  +'ode;'#13#10'  LoggingLabelNode:=XIDEForm.EventLoggingLabel.myNode;'#13#10#13
  +#10'  MainFormProjectRoot:=FindDataNodeById(SystemNodeTree,UIProjectRootName'
  +','''',true);'#13#10'  UIRootitem:=FindDataNodeById(SystemNodeTree,UIProject'
  +'RootName,'''',true);'#13#10#13#10'  BuildSkeletonResourceTree;'#13#10'  Ini'
  +'tialiseStyleDesigner;'#13#10#13#10'  // this include file (systemnodetree.i'
  +'nc) contains the system description to be loaded at startup.'#13#10'  // It'
  +' includes the XIDE framework components.'#13#10'  // It reflects the system'
  +' as it was defined when the ''Run in Browser'' button was last pressed in t'
  +'he Desktop environment.'#13#10'  {$I systemnodetree.inc}'#13#10'  XMLToNode'
  +'Tree(LoadedSystemString,UIRootNode);   //! has been saved by the ''Run in B'
  +'rowser'' menu button'#13#10'//  showmessage(''after XMLToNodeTree. Node ''+'
  +'SystemRootName+'' has ''+inttostr(length(systemnodetree.childnodes))+'' chi'
  +'ldren'');'#13#10#13#10'  InitialiseXIDE;'#13#10#13#10'  PopupMemoForm.Initi'
  +'aliseMemo;'#13#10'  CodeEditForm.Initialise;'#13#10'  MacroEventList.SetMen'
  +'uVisibility;'#13#10#13#10'  RedisplayResourceTree;'#13#10'  InitialiseStyle'
  +'Resources;'#13#10'  StyleRootNode:=XIDEForm.StyleSheet.myNode;'#13#10'  //B'
  +'uildStylesDataFromTreeData(StyleRootNode);'#13#10'  GenerateStyleSheets;'#13
  +#10#13#10'  //systempas:=''1'' + LineEnding'#13#10'  //+ ''2'' + LineEnding'
  +#13#10'  //+ ''3'';   // this construct was causing pas2js to producs a stac'
  +'k overflow.  Using \n instead.'#13#10#13#10'  {$I eventsinterfacepas.inc}'
  +#13#10'  {$I interfacetypespas.inc}'#13#10#13#10'  // minimal rtl set....'#13
  +#10'  //{$I systempas.inc}'#13#10'  //{$I typespas.inc}'#13#10'  //{$I class'
  +'espas.inc}'#13#10'  //{$I jspas.inc}'#13#10'  //{$I rtlconstspas.inc}'#13#10
  +'  //{$I sysutilspas.inc}'#13#10#13#10'  // common rtl set.....'#13#10'  {$I'
  +' classespas.inc}'#13#10'  {$I contnrspas.inc}'#13#10'  {$I dateutilspas.inc'
  +'}'#13#10'  {$I jspas.inc}'#13#10'  {$I mathpas.inc}'#13#10'  {$I rtlconstsp'
  +'as.inc}'#13#10'  {$I strutilspas.inc}'#13#10'  {$I systempas.inc}'#13#10'  '
  +'{$I sysutilspas.inc}'#13#10'  {$I typespas.inc}'#13#10'  {$I typinfopas.inc'
  +'}'#13#10'  //  {$I rttipas.inc}'#13#10'  {$I gpujs.inc}'#13#10#13#10'  Setu'
  +'pAnimatedPointer;'#13#10#13#10'  // If this JS startup was NOT initiated fr'
  +'om the Lazarus/Desktop runtime, then load up'#13#10'  // the last stored sy'
  +'stem description. This replaces the user interface area being designed by t'
  +'he user, but not'#13#10'  // the XIDE framework object inspector components'
  +'.'#13#10'  RunningDeployedRuntime:=false;'#13#10#13#10'  asm'#13#10'    dm '
  +'= myDeployedMode;'#13#10'  end;'#13#10#13#10'  if dm=''FromLaz'' then'#13#10
  +'  begin'#13#10'    {$I systemcomposites.inc}'#13#10'    InitialiseComposite'
  +'s;'#13#10'  end;'#13#10#13#10'  //showmessage(''dm=''+dm);'#13#10'  if dm<>'
  +'''FromLaz'' then'#13#10'  begin'#13#10#13#10'    if dm=''Run'' then'#13#10
  +'    begin'#13#10'      // hide the XIDE framework'#13#10'      ShowHideObje'
  +'ctInspector(false);'#13#10'    end;'#13#10#13#10' //   showmessage(''not ru'
  +'nning from Laz, so loading last system description'');'#13#10'    //look fo'
  +'r a system description with the same name as the one we just loaded.'#13#10
  +'    sysname:=UIRootNode.getAttribute(''SystemName'',false).AttribValue;'#13
  +#10'//    showmessage(''looking for saved system XIDESavedData''+sysname);'
  +#13#10'    tempstr:=trim(ReadFromLocalStore(''XIDESavedData''+sysname));'#13
  +#10'    //showmessage(tempstr);'#13#10'    if tempstr<>'''' then'#13#10'    '
  +'begin'#13#10'      //showmessage(''found ''+sysname);'#13#10'      ok:=Stri'
  +'ngUtils.confirm(''Press OK to resume your previous "''+sysname+''" session,'
  +' or Cancel to continue with the basic load'');'#13#10'      if ok then'#13
  +#10'      begin'#13#10'        ok:=DoSystemLoad(tempstr,sysname);'#13#10'   '
  +'     if ok then'#13#10'        begin'#13#10'          RebuildNavigatorTree;'
  +#13#10'          RebuildCodeTree;'#13#10'        end'#13#10'        else'#13
  +#10'        begin'#13#10'          //showmessage(''load failed'');'#13#10'  '
  +'        OIClearSystem;'#13#10'        end;'#13#10'      end'#13#10'      el'
  +'se ok:=true;'#13#10'    end;'#13#10'  end;'#13#10#13#10'  StartingUp:=false'
  +';// suppress event handlers while starting up'#13#10#13#10'  SelectNavTreeN'
  +'ode(MainFormProjectRoot,true);'#13#10#13#10'  if ok then'#13#10'  begin'#13
  ,#10'      // Deal with the DeployedMode flag'#13#10'      if dm=''Run'' then'
  +#13#10'      begin'#13#10'        RunningDeployedRuntime:=true;'#13#10'     '
  +'   XIDEForm.SystemDeploy.IsVisible:=false;'#13#10'        XIDEForm.ToggleDe'
  +'signRunMode.IsVisible:=false;'#13#10'        XIDEForm.HelpMenu.IsVisible:=f'
  +'alse;'#13#10'        XIDEForm.SystemClear.IsVisible:=false;'#13#10'        '
  +'XIDEForm.SystemDeploy.IsVisible:=false;'#13#10'        XIDEForm.SystemLoad.'
  +'IsVisible:=false;'#13#10'        ShowGreyOverlay(''UIRootNode'',''Grey1'');'
  +#13#10'        // timeout here so the grey overlay appears'#13#10'        as'
  +'m'#13#10'        myTimeout(pas.XObjectInsp.ContinueToggleToRunMode,5,''Cont'
  +'inueToggleToRunMode'',0);'#13#10'        end;'#13#10'      end;'#13#10'  en'
  +'d;'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'begin'#13#10'//    {$macr'
  +'o on}'#13#10'//    {$define mmm :=showmessage(''hello'')  }'#13#10'//    mm'
  +'m;'#13#10#13#10'    MainUnitName:=''XIDEMain'';'#13#10'    {$ifndef JScript'
  +'}'#13#10'    Application.ShowHint:=true;'#13#10'    {$I rtl.lrs}'#13#10'   '
  +' {$I xide.lrs}'#13#10'    {$Else}'#13#10'       asm'#13#10'       try{'#13
  +#10'          // now do any Javascript specific start up code'#13#10'       '
  +'   pas.HTMLUtils.addHandVBoxStyles();'#13#10'          pas.HTMLUtils.addWid'
  +'getInnerStyles();'#13#10'          }catch(err) { alert(err.message+'' in St'
  +'artupCode'');}'#13#10'       end;'#13#10'    {$endif}'#13#10#13#10'end.'#13
  +#10#13#10
]);
LazarusResources.Add('xobjectinsp','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit XObjectInsp;'#13#10#13
  +#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10
  +'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, TypInfo, Stringutil'
  +'s, NodeUtils, Events, PopupMemo,'#13#10'{$ifndef JScript}'#13#10'  LazsUtil'
  +'s, Menus, DynLibs,'#13#10'  Controls,PropEdits, ExtCtrls, Dialogs,Forms,Com'
  +'pilerLogUnit,'#13#10'{$else}'#13#10'  HTMLUtils,'#13#10'{$endif}'#13#10'  U'
  +'tilsJSCompile,XIFrame, XSVGContainer,'#13#10'  WrapperPanel,  CompileUserCo'
  +'de,'#13#10'  XHBox, XVBox, XCode,XColorPicker,'#13#10'  XTree,  XButton, XS'
  +'crollBox, XEditBox, XCheckBox, XComboBox, XTabControl,'#13#10'  XForm, XTab'
  +'le, XMemo, XMenu, CodeEditor, PropertyEditUnit, EventsInterface,'#13#10'  X'
  +'GPUCanvas, XGPUEditor, XCompositeIntf, StylesUtils, EventLogging;'#13#10#13
  +#10'{$ifdef JScript}'#13#10'procedure ShowXFormForDesign(XFormName:String);'
  +#13#10'procedure CompleteToggleToRunMode(ok:boolean);'#13#10'procedure Brows'
  +'erSaveData(TheData:String);'#13#10'procedure ContinueToggleToRunMode;'#13#10
  +'procedure CompleteDeploySystem(deployname:String);'#13#10'procedure Initial'
  +'iseComposites;'#13#10'{$endif}'#13#10#13#10'{$ifndef JScript}'#13#10'type T'
  +'LoadTimerTag = class'#13#10'       public'#13#10'         systemstring:stri'
  +'ng;'#13#10'         SysName:String;'#13#10'         procedure DoXMLToNodeTr'
  +'ee(sender:TObject);'#13#10'       end;'#13#10'{$endif}'#13#10#13#10'type'#13
  +#10'  TOIEventWrapper = class'#13#10'    procedure OIEditProperty(e:TEventSt'
  +'atus;nodeId:string;myValue:string);'#13#10'    procedure OIEditEvent(e:TEve'
  +'ntStatus;nodeId:string;myValue:string);'#13#10'    procedure OIEditEventCod'
  +'e(e:TEventStatus;nodeId:string;myValue:string);'#13#10'    procedure OIEdit'
  +'EventCodeFromCodeTree(NodeNameToEdit:string;EventToEdit:string);'#13#10'   '
  +' procedure TestButtonClick(e:TEventStatus;nodeId:string;myValue:string);'#13
  +#10'    procedure OIEditPropertyButtonClick(e:TEventStatus;nodeId:string;myV'
  +'alue:string);'#13#10'    {$ifdef JScript}'#13#10'    procedure OIPasteTarge'
  +'t(e:TEventStatus;nodeId:string;myValue:string);'#13#10'    {$endif}'#13#10
  +'  end;'#13#10#13#10'procedure DebugWriteNodeTree(StartNode:TdataNode;var tx'
  +'t:String;lvl:integer);'#13#10'procedure InitialiseXIDE;'#13#10'//procedure '
  +'InitialiseComposites;'#13#10'function XIDEConfirm(promptString:String):bool'
  +'ean;'#13#10'procedure SetupAvailableResources;'#13#10'procedure RebuildNavi'
  +'gatorTree;'#13#10'procedure RebuildCodeTree;'#13#10'procedure RebuildResour'
  +'cesTree;'#13#10'procedure BuildSkeletonResourceTree;'#13#10'procedure SaveS'
  +'ystemData;'#13#10'procedure OINavTreeNodeChange(e:TEventStatus;nodeId,NameS'
  +'pace:string;myValue:string);'#13#10'procedure OICodeTreeNodeChange(nodeId:s'
  +'tring;myValue:string);'#13#10'procedure OIResourceTreeNodeChange(nodeId:str'
  +'ing;myValue:string);'#13#10'procedure OIDragItem(e:TEventStatus;nodeId:stri'
  +'ng;myValue:string);'#13#10'procedure OIDropItem(e:TEventStatus;nodeId:strin'
  +'g;myValue:string);'#13#10'procedure OIPasteItem(nodeId:string;myValue:strin'
  +'g);'#13#10'procedure OICutItem(nodeId:string;myValue:string);'#13#10'proced'
  +'ure CopyNavNode( NodeToCopy:TDataNode);'#13#10'procedure OICopySelectedItem'
  +';'#13#10'procedure OIDeleteSelectedItem;'#13#10'function OIDeleteItem(NodeI'
  +'d,NameSpace:String;ShowNotFoundMsg:Boolean=true):Boolean;'#13#10'procedure '
  +'OIComponentCopy(nodeId:string;myValue:string);'#13#10'procedure OISystemLoa'
  +'d(e:TEventStatus;nodeId:string);'#13#10'procedure OIClearSystem;'#13#10'pro'
  +'cedure OIDeploySystem;'#13#10'function OITreeNodeHint(TreeLabelStr:String):'
  +'String;'#13#10'procedure PopulateObjectInspector(CurrentNode:TDataNode);'#13
  +#10'procedure OIPropsEventsTabChange;'#13#10'function PopulateResourceInspec'
  +'tor(CurrentNode:TDataNode):String;'#13#10'function TreeLabelToID(TreeLabelS'
  +'tr:String):String;'#13#10'function GetNavigatorHint(InTree:TDataNode;System'
  +'NodeName:String):String;'#13#10'function CompositeResourcesString(QuotedStr'
  +'ing:Boolean):String;'#13#10'function BuildSystemString(Encapsulate:Boolean)'
  +':String;'#13#10'Procedure SaveSystemToClip;'#13#10'Procedure SaveSystemToFi'
  +'le;'#13#10'procedure ClearResourceInspector;'#13#10'procedure ClearInspecto'
  +'rs;'#13#10'//procedure OILoadSavedSystem;'#13#10'procedure OILoadSavedSyste'
  +'m2(SysName:String);'#13#10'function DoSystemLoad(SystemDescription,SysName:'
  +'string):Boolean;'#13#10'procedure CodeEditorClosed(EditBoxNode:TdataNode);'
  +#13#10'procedure PropertyEditorClosed(EditBoxNode:TdataNode);'#13#10'functio'
  ,'n isValidSystemData(SystemDescription:string):boolean;'#13#10'procedure Edi'
  +'tEventCode(NodeNameToEdit,EventToEdit,MainCode,InitCode:String);'#13#10'pro'
  +'cedure OIAddCodeUnitNode(UnitType:String);'#13#10'procedure OIAddCodeFuncNo'
  +'de;'#13#10'procedure OIEditCodeUnit;'#13#10'procedure OIDeleteCodeUnit;'#13
  +#10'procedure DoToggleDesignRunMode(Sender:TXMenuItem);'#13#10'procedure Dis'
  +'playDllCompileErrors;'#13#10'function OINavTreeAllowDrop(DstNode:TDataNode)'
  +':Boolean;'#13#10'procedure SelectNavTreeNode(CurrentNode:TDataNode; refresh'
  +':boolean);'#13#10'Function ConstructSystemTreeString(CurrentItem:TDataNode;'
  +' level:Integer; IncludeTypes,IncludeProperties:Boolean;'#13#10'            '
  +'                       Exclusions:TStringList;PropType:String):String;'#13
  +#10'//function   DfltEventCode:string;'#13#10'procedure OIMoveItem(nodeId,Na'
  +'meSpace:string;NewParentId:string);'#13#10'procedure OICopyToNewParent(node'
  +'Id,NameSpace:string;NewParentId:string;NewName:String);  overload;'#13#10'{'
  +'$ifndef JScript}'#13#10'procedure SaveCompositesToIncFile;'#13#10'procedure'
  +' OICopyToNewParent(nodeId,NameSpace:string;NewParentId:string;NewName:PChar'
  +');  overload;'#13#10'{$else}'#13#10'procedure InitAutomatedCursor;'#13#10'{'
  +'$endif}'#13#10'procedure OIMoveNavSiblingUpDown(UpDown:String);'#13#10'proc'
  +'edure DoSelectNavTreeNode(CurrentNode:TDataNode; refresh:boolean);'#13#10'p'
  +'rocedure RefreshObjectInspector(CurrentNode:TDataNode);'#13#10'procedure Sh'
  +'owHideObjectInspector(show:Boolean);'#13#10'function XIDEPrompt(PromptStrin'
  +'g,DefaultString:string):string;'#13#10'procedure RedisplayResourceTree;'#13
  +#10'procedure OIEncapsulate;'#13#10'procedure OIDeleteResource;'#13#10'proce'
  +'dure OILoadResource;'#13#10'procedure OIAddInterfaceElement;'#13#10'procedu'
  +'re DiscoverSavedSystems(var NamesList:TStringList);'#13#10'procedure OICode'
  +'Search;'#13#10#13#10#13#10'const'#13#10'  ResourceDataRootName=  ''Resource'
  +'Root'' ;'#13#10'  CodeDataRootName=  ''dllRoot'' ;'#13#10'  UIProjectRootNa'
  +'me = ''UIRoot'';                    //the scrollbox containing the user-des'
  +'igned (mainform) system'#13#10'  PropertyEditorScrollboxName:string = ''Pro'
  +'pertyEditorScrollbox'';'#13#10'  EventsEditorScrollboxName:string = ''Event'
  +'sEditorScrollbox'';'#13#10'  ResourceEditorScrollboxName:string = ''Resourc'
  +'eEditorScrollbox'';'#13#10'  DeploymentModeOptions:Array[0..1] of string = '
  +'(''Design'',''Run'');'#13#10'  ShowResourcesOptions:Array[0..1] of string ='
  +' (''Left'',''Right'');'#13#10#13#10#13#10'var'#13#10'  MainFormProjectRoot,'
  +'UIRootItem:TDataNode;'#13#10'  DesignMode:Boolean;'#13#10'  NavTreeComponen'
  +'t,ResourcesNodeTree, ResourceTreeComponent, CodeTreeComponent:TDataNode;'#13
  +#10'  OIEventWrapper:TOIEventWrapper;'#13#10'  LastLazUserInterfaceItemSelec'
  +'ted,LastHTMLUserInterfaceItemSelected:String;'#13#10'  LastHTMLUserInterfac'
  +'eItemHadBorder:Boolean;'#13#10'  TreeInFocus, ObjectInspectorSelectedNavTre'
  +'eNode, ObjectInspectorSelectedCodeTreeNode, ObjectInspectorSourceNode:TData'
  +'Node;'#13#10#13#10'  {$ifndef JScript}'#13#10'  UITopControl:TWinControl;'
  +#13#10'  {$else}'#13#10'  RunningDeployedRuntime:Boolean;'#13#10'  Composite'
  +'sString:String;'#13#10'  {$endif}'#13#10#13#10#13#10'implementation'#13#10
  +'uses PasteDialogUnit, XIDEMain;'#13#10#13#10'const'#13#10'  AttributeEditor'
  +'NameDelimiter:string = ''__'';'#13#10#13#10'  //SandraMode:Boolean = true;'
  +#13#10#13#10'var'#13#10'  ObjectInspectorSelectedCodeNodeText:String;'#13#10
  +'  AvailableResourcesSelectedNode:TDataNode;'#13#10'  ObjectInspectorSourceC'
  +'ut:Boolean;'#13#10#13#10'type'#13#10'  TCompositeResource = record'#13#10' '
  +'   ResourceName:String;'#13#10'    SourceString:String;'#13#10'  end;'#13#10
  +'//var'#13#10'//  ListOfComposites:Array of TCompositeResource;'#13#10#13#10
  +'function XIDEConfirm(promptString:String):boolean;'#13#10'var'#13#10'  ok:b'
  +'oolean;'#13#10'  macroevent:TMacroEvent;'#13#10'begin'#13#10'  if not Event'
  +'Logging.MacroEventList.Replaying then'#13#10'    ok:=confirm(promptString)'
  +#13#10'  else'#13#10'  begin'#13#10'    macroevent:=EventLogging.AdvanceEven'
  +'tLog;'#13#10'    if macroevent.EventType<>''UserConfirm'' then'#13#10'    b'
  +'egin'#13#10'      showmessage(''unable to replay user confirmation...'');'
  +#13#10'      ok:=confirm(promptString);'#13#10'    end'#13#10'    else'#13#10
  +'    begin'#13#10'      ok:=myStrToBool(macroevent.eventvalue);'#13#10'     '
  +' if ok then showmessage(''User confirmed OK to:''+LineEnding+promptString)'
  +#13#10'      else showmessage(''User confirmed Cancel to:''+LineEnding+promp'
  +'tString);'#13#10'    end;'#13#10'  end;'#13#10#13#10'  result:=ok;'#13#10'e'
  +'nd;'#13#10#13#10'Function ConstructSystemTreeString(CurrentItem:TDataNode; '
  +'level:Integer; IncludeTypes,IncludeProperties:boolean;'#13#10'             '
  +'                      Exclusions:TStringList;PropType:String):String;'#13#10
  +'// Recursive'#13#10'var ArrayString:String;'#13#10'    i,j,numchildren:inte'
  ,'ger;'#13#10'    InsertingAttributes:Boolean;'#13#10'begin'#13#10'  // In th'
  +'e main form, start at UIRoot node'#13#10#13#10'  if CurrentItem<>nil then'
  +#13#10'  begin'#13#10'//    {$ifdef JScript}'#13#10'//    if CurrentItem.Nod'
  +'eClass=''SVG'' then'#13#10'//    asm'#13#10'//      console.log(CurrentItem'
  +'.NodeName+'' ''+CurrentItem.NodeType+'' ''+CurrentItem.IsDynamic);'#13#10'/'
  +'/    end;'#13#10'//    {$endif}'#13#10'    if (CurrentItem.NameSpace='''')'
  +#13#10'    and ('#13#10'    ((CurrentItem.NodeClass=''UI'') and (CurrentItem'
  +'.IsDynamic=true))'#13#10'    or ((CurrentItem.NodeClass=''SVG'') and (Curre'
  +'ntItem.IsDynamic=true))'#13#10'    or ((CurrentItem.NodeClass=''UI'') and ('
  +'CurrentItem.NodeType=''TXForm'') and (CurrentItem.NodeName = MainForm.Name)'
  +')'#13#10'    or ((CurrentItem.NodeClass=''UI'') and (CurrentItem.NodeType='
  +'''TXMainMenu''))'#13#10'    or ((CurrentItem.NodeClass=''NV'') and (Current'
  +'Item.IsDynamic=true))'#13#10'    or (CurrentItem=SystemNodeTree)'#13#10'   '
  +' or (CurrentItem=ResourcesNodeTree)'#13#10'    or (CurrentItem=CodeRootNode'
  +')'#13#10'    or (CurrentItem=UIRootNode)'#13#10'    or (CurrentItem=UIRootI'
  +'tem)'#13#10'    or (CurrentItem.NodeClass=''Code'')'#13#10'    or (CurrentI'
  +'tem.NodeClass[1]=''R'')'#13#10'    )'#13#10'    then'#13#10'    begin'#13#10
  +'      if (Exclusions=nil)'#13#10'      or (Exclusions.IndexOf(CurrentItem.N'
  +'odeName)<0) then'#13#10'      begin'#13#10'        if CurrentItem.NodeClass'
  +'[1]<>''R'' then'#13#10'         j:=0;'#13#10'          //showmessage(''Curr'
  +'entitem=''+CurrentItem.NodeClass+'' ''+CurrentItem.NodeType+'' ''+CurrentIt'
  +'em.Nodename);'#13#10'        numchildren:=length(CurrentItem.ChildNodes);'
  +#13#10#13#10'        if level = 0 then ArrayString:='' '';'#13#10#13#10'    '
  +'    if (IncludeProperties)'#13#10'        and ((CurrentItem.NodeClass=''UI'
  +''') or (CurrentItem.NodeClass=''NV''))'#13#10'        and (length(CurrentIt'
  +'em.NodeAttributes)>0) then'#13#10'          InsertingAttributes:=true'#13#10
  +'        else'#13#10'          InsertingAttributes:=false;'#13#10#13#10'    '
  +'    if level=0'#13#10'        then ArrayString:=''['''#13#10'        else'
  +#13#10'        begin'#13#10'          if (NumChildren>0)'#13#10'          or'
  +' (InsertingAttributes) then'#13#10'              ArrayString:=ArrayString+'
  +''',['''#13#10'          else'#13#10'              ArrayString:=ArrayString+'
  +''','';'#13#10'        end;'#13#10#13#10'        if IncludeTypes then'#13#10
  +'          ArrayString:=ArrayString+''"''+CurrentItem.NodeType+''(''+Current'
  +'Item.NodeName+'')"'''#13#10'        else'#13#10'          ArrayString:=Arra'
  +'yString+''"''+CurrentItem.NodeName+''"'';'#13#10#13#10'        if (Insertin'
  +'gAttributes) then'#13#10'        begin'#13#10'          for j:=0 to length('
  +'CurrentItem.NodeAttributes)-1 do'#13#10'          begin'#13#10'            '
  +'if (Exclusions.IndexOf(CurrentItem.NodeName+''.''+CurrentItem.NodeAttribute'
  +'s[j].AttribName)<0)'#13#10'            and ((CurrentItem.NodeAttributes[j].'
  +'AttribType=PropType)'#13#10'                or (PropType='''')'#13#10'     '
  +'           or (Currentitem.NodeType=''TXCompositeIntf'')         //!!!! imp'
  +'rove this'#13#10'                ) then'#13#10'            begin'#13#10'   '
  +'           ArrayString:=ArrayString+'','';'#13#10'              ArrayString'
  +':=ArrayString+''"''+CurrentItem.NodeName+''.''+CurrentItem.NodeAttributes[j'
  +'].AttribName+''"'';'#13#10'            end;'#13#10'          end;'#13#10'  '
  +'      end;'#13#10#13#10'        if (CurrentItem.NodeName <> MainForm.Name) '
  +'then'#13#10'          for i:=0 to numchildren-1 do'#13#10'          begin'
  +#13#10'             ArrayString:=ArrayString+ConstructSystemTreeString(Curre'
  +'ntItem.ChildNodes[i],level+1,IncludeTypes,IncludeProperties,Exclusions,Prop'
  +'Type);'#13#10'          end'#13#10'        else'#13#10'        begin'#13#10
  +'          // Main Form only....'#13#10'          // for main form, just wan'
  +'t  UIProjectRootName, plus main menu'#13#10'          for i:=0 to numchildr'
  +'en-1 do'#13#10'          begin'#13#10'            if (CurrentItem.ChildNode'
  +'s[i].NodeType=''TXMainMenu'') then'#13#10'               ArrayString:=Array'
  +'String+ConstructSystemTreeString(CurrentItem.ChildNodes[i],level+1,IncludeT'
  +'ypes,IncludeProperties,Exclusions,PropType);'#13#10'          end;'#13#10#13
  +#10'          ArrayString:=ArrayString+ConstructSystemTreeString(UIRootitem,'
  +'level+1,IncludeTypes,IncludeProperties,Exclusions,PropType);'#13#10#13#10' '
  +'       end;'#13#10#13#10'        if ( NumChildren>0)'#13#10'        or (lev'
  +'el=0)'#13#10'        or (InsertingAttributes) then'#13#10'          ArraySt'
  +'ring:=ArrayString+'']'';'#13#10#13#10'      end;'#13#10'    end;'#13#10'  e'
  +'nd;'#13#10#13#10'  result:= ArrayString;'#13#10'end;'#13#10#13#10#13#10'fun'
  +'ction TreeLabelToID(TreeLabelStr:String):String;'#13#10'//e.g. "EditBox(MyS'
  +'impleID)"  =>  "MySimpleID"'#13#10'// or  "EditBox(MySimpleID) Click"  =>  '
  ,'"MySimpleID"'#13#10'var i,ln:integer;'#13#10'  newstring,tempstr,TreeLabel2'
  +':String;'#13#10'  StartOfIdFound:boolean;'#13#10'begin'#13#10'  TreeLabel2:'
  +'=TreeLabelStr;'#13#10'  StartOfIdFound:=false;'#13#10'  newstring:='''';'#13
  +#10'  ln:=length(TreeLabel2);'#13#10'  i:=1;'#13#10'  while i< ln+1 do'#13#10
  +'  begin'#13#10'    tempstr:=TreeLabel2[i];'#13#10'    if (StartOfIdFound=tr'
  +'ue) and  (tempstr<>'')'') then'#13#10'      newstring:=newstring+tempstr;'
  +#13#10'    if tempstr=''('' then'#13#10'      StartOfIdFound:=true;'#13#10' '
  +'   if tempstr='')'' then'#13#10'      i:=ln;'#13#10'    i:=i+1;'#13#10'  en'
  +'d;'#13#10'  if StartOfIdFound=false then // no brackets'#13#10'    newstrin'
  +'g:=TreeLabelStr;'#13#10'  newstring:=myStringReplace( newstring,''Contents'
  +''','''',999,999);'#13#10'  result :=  trim(newstring);'#13#10'end;'#13#10#13
  +#10#13#10'Function ConstructEventsTreeString(CurrentItem:TDataNode;var e:int'
  +'eger):String;'#13#10'// Recursive'#13#10'var ArrayString,dflt,tmp:String;'
  +#13#10'    i,numchildren:integer;'#13#10'begin'#13#10'  dflt:=DfltEventCode;'
  +#13#10'  if CurrentItem<>nil then'#13#10'  if CurrentItem.NameSpace='''' the'
  +'n'#13#10'  begin'#13#10#13#10'      numchildren:=length(CurrentItem.ChildNo'
  +'des);'#13#10#13#10'      if CurrentItem=MainFormProjectRoot then'#13#10'   '
  +'     ArrayString:='',["Root(Events)"'';'#13#10#13#10'      for i:=0 to Curr'
  +'entItem.myEventTypes.Count-1 do'#13#10'      begin'#13#10'        if (Curre'
  +'ntItem.HasUserEventCode(CurrentItem.myEventTypes[i]))'#13#10'        and (C'
  +'urrentItem.GetEventCode(CurrentItem.myEventTypes[i])<>dflt) then'#13#10'   '
  +'     begin'#13#10'           e:=e+1;'#13#10'           ArrayString:=ArraySt'
  +'ring+'','';'#13#10'           ArrayString:=ArrayString+''"''+CurrentItem.No'
  +'deType+''(''+CurrentItem.NodeName+'') ''+CurrentItem.myEventTypes[i]+''"'''
  +#13#10'        end;'#13#10'      end;'#13#10#13#10' //     {$ifdef JScript} '
  +'showmessage(CurrentItem.Nodename+'' has ''+inttostr(numchildren)+'' childre'
  +'n''); {$endif}'#13#10'      for i:=0 to numchildren-1 do'#13#10'      begin'
  +#13#10' //       {$ifdef JScript} showmessage(''Child ''+inttostr(i)+'' ''+C'
  +'urrentItem.ChildNodes[i].NodeName); {$endif}'#13#10'        ArrayString:=Ar'
  +'rayString+ConstructEventsTreeString(CurrentItem.ChildNodes[i],e);'#13#10'  '
  +'    end;'#13#10#13#10'      if CurrentItem=MainFormProjectRoot then'#13#10
  +'        ArrayString:=ArrayString+'']'';'#13#10'  end;'#13#10#13#10'  result'
  +':= ArrayString;'#13#10'end;'#13#10#13#10'Function ConstructGPUCodeTreeStrin'
  +'g(CurrentItem:TDataNode):String;'#13#10'// Recursive'#13#10'var ArrayString'
  +',dflt,tmp:String;'#13#10'    i,numchildren:integer;'#13#10'begin'#13#10'  d'
  +'flt:=DfltEventCode;'#13#10'  if CurrentItem<>nil then'#13#10'  if CurrentIt'
  +'em.NameSpace='''' then'#13#10'  begin'#13#10#13#10'      numchildren:=lengt'
  +'h(CurrentItem.ChildNodes);'#13#10#13#10'      if CurrentItem=MainFormProjec'
  +'tRoot then'#13#10'        ArrayString:='',["Root(GPUCode)"'';'#13#10#13#10
  +'      if (CurrentItem.NodeType=''TXGPUCanvas'')'#13#10'      and (CurrentIt'
  +'em.NodeClass=''UI'')'#13#10'      and (CurrentItem.IsDynamic=true) then'#13
  +#10'      begin'#13#10'        ArrayString:=ArrayString+'','';'#13#10'      '
  +'  ArrayString:=ArrayString+''"''+CurrentItem.NodeType+''(''+CurrentItem.Nod'
  +'eName+'') "'''#13#10'      end;'#13#10#13#10'      for i:=0 to numchildren-'
  +'1 do'#13#10'      begin'#13#10'        ArrayString:=ArrayString+ConstructGP'
  +'UCodeTreeString(CurrentItem.ChildNodes[i]);'#13#10'      end;'#13#10#13#10
  +'      if CurrentItem=MainFormProjectRoot then'#13#10'        ArrayString:=A'
  +'rrayString+'']'';'#13#10'  end;'#13#10#13#10'  result:= ArrayString;'#13#10
  +'end;'#13#10#13#10'function GetNavigatorHint(InTree:TDataNode;SystemNodeName'
  +':String):String;'#13#10'var'#13#10'SystemNode:TDataNode;'#13#10'foundattrib'
  +':TNodeAttribute;'#13#10'begin'#13#10'  result:='''';'#13#10'  SystemNode:=F'
  +'indDataNodeById(InTree,SystemNodeName,'''',false);'#13#10'  //showmessage('
  +'''GetNavigatorHint ''+SystemNodeName);'#13#10'  if SystemNode<>nil then'#13
  +#10'  begin'#13#10'    foundattrib:=SystemNode.GetAttribute(''Hint'',true);'
  +#13#10'    if foundattrib.AttribName=''Hint'' then'#13#10'      result:=foun'
  +'dattrib.AttribValue;'#13#10'  end;'#13#10'  //showmessage(''GetNavigatorHin'
  +'t result ''+result);'#13#10'end;'#13#10#13#10'procedure InitResourcesNodeTr'
  +'ee;'#13#10'var'#13#10'  emptyAttribs:TNodeAttributesArray;'#13#10'  RRoot:T'
  +'DataNode;'#13#10'begin'#13#10'  setlength(emptyAttribs,0);'#13#10'  RRoot:='
  +'FindDataNodeById(SystemNodeTree,''ResourceRoot'','''',false);'#13#10'  if R'
  +'Root=nil then'#13#10'  begin'#13#10'    ResourcesNodeTree:=AddChildToDataNo'
  +'de(SystemNodeTree,''ResourceRoot'',ResourceDataRootName,'''','''',emptyAttr'
  +'ibs,-1);'#13#10'    ResourcesNodeTree.AddAttribute(''ParentName'',''String'
  +''', SystemRootName,true);'#13#10'    // This represents the set of library '
  ,'''resource'' elements that are available in the resources tree'#13#10'  end'
  +';'#13#10'end;'#13#10#13#10'function RegisterResource(ClassName,ScreenObject'
  +'Type,ScreenObjectName,ParentName:string; position:integer;'#13#10'         '
  +'                 Attribs:TNodeAttributesArray):TDataNode;  overload;'#13#10
  +' var'#13#10'      dfltAttribs:TDefaultAttributesArray;'#13#10'      myAttri'
  +'bs:TNodeAttributesArray;'#13#10'      myparent,myself:TDataNode;'#13#10'   '
  +'   n,i:integer;'#13#10'      TempChildNodes:TChildNodesArray;'#13#10'  begi'
  +'n'#13#10#13#10'    myparent:= FindDataNodeById(ResourcesNodeTree,ParentName'
  +','''',true);'#13#10'    if myparent<>nil'#13#10'    then'#13#10'    begin'
  +#13#10'      dfltAttribs:=GetDefaultAttribs(ScreenObjectType);'#13#10'      '
  +'setlength(myAttribs,length(dfltAttribs));'#13#10'      for i:=0 to length(d'
  +'fltAttribs)-1 do'#13#10'      begin'#13#10'        myAttribs[i].AttribName:'
  +'=dfltAttribs[i].AttribName;'#13#10'        myAttribs[i].AttribType:=dfltAtt'
  +'ribs[i].AttribType;'#13#10'        myAttribs[i].AttribReadOnly:=dfltAttribs'
  +'[i].AttribReadOnly;'#13#10'        myAttribs[i].AttribValue:=dfltAttribs[i]'
  +'.AttribValue;'#13#10'      end;'#13#10#13#10'      myself:=AddChildToDataNo'
  +'de(myparent,ClassName,ScreenObjectName,ScreenObjectType,'''',myAttribs,posi'
  +'tion);'#13#10#13#10'      if myself<>nil then'#13#10'      begin'#13#10'   '
  +'    // mySelf.AddAttribute(''Hint'',''String'','''',false);'#13#10'        '
  +'mySelf.AddAttribute(''ParentName'', ParentName,''String'',true);'#13#10#13
  +#10'        // add or update the given attributes'#13#10'        for i:=0 to'
  +' length(Attribs)-1 do'#13#10'        begin'#13#10'          mySelf.SetAttri'
  +'buteValue(Attribs[i].AttribName,Attribs[i].AttribValue,Attribs[i].AttribTyp'
  +'e);'#13#10'        end;'#13#10'        mySelf.SetAttributeValue(''ParentNam'
  +'e'', ParentName,''String'');'#13#10#13#10'        // myself is a local vari'
  +'able.  Re-assign it to the childnodes array.'#13#10'        TempChildNodes:'
  +'= myparent.ChildNodes;'#13#10'        n:= Length(TempChildNodes);'#13#10'  '
  +'      myparent.ChildNodes[n-1]:=myself;'#13#10'      end;'#13#10#13#10'    '
  +'  result:=myself;'#13#10'    end;'#13#10'  end;'#13#10#13#10'procedure Buil'
  +'dSkeletonResourceTree;'#13#10'var'#13#10'  emptyAttribs:TNodeAttributesArra'
  +'y;'#13#10'begin'#13#10'  setlength(emptyAttribs,0);'#13#10#13#10'  Resource'
  +'sNodeTree:=AddChildToDataNode(SystemNodeTree,''ResourceRoot'',ResourceDataR'
  +'ootName,'''','''',emptyAttribs,-1);'#13#10'  ResourcesNodeTree.AddAttribute'
  +'(''ParentName'',''String'', SystemRootName,true);'#13#10'  RegisterResource'
  +'(''RUI'','''',''Composites'',''ResourceRoot'',-1,emptyAttribs);'#13#10'end;'
  +#13#10#13#10'procedure SaveSystemData;'#13#10'var'#13#10'  TheData:String;'
  +#13#10'  NavSelected,CodeSelected:TDataNode;'#13#10'begin'#13#10'  if not St'
  +'artingUp then'#13#10'  begin'#13#10'    NavSelected:=ObjectInspectorSelecte'
  +'dNavTreeNode;'#13#10'    CodeSelected:=ObjectInspectorSelectedNavTreeNode;'
  +#13#10#13#10'    TheData:=BuildSystemString(false);'#13#10'    {$ifndef JScr'
  +'ipt}'#13#10'    WriteToLocalStore(''XIDESavedData.txt'',TheData);'#13#10'  '
  +'  {$else}'#13#10'    BrowserSaveData(TheData);'#13#10'    {$endif}'#13#10#13
  +#10'    ObjectInspectorSelectedNavTreeNode:=NavSelected;'#13#10'    ObjectIn'
  +'spectorSelectedNavTreeNode:=CodeSelected;'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'{$ifdef JScript}'#13#10'procedure BrowserSaveData(TheData:String);'#13
  +#10'var'#13#10'  sysname:string;'#13#10'begin'#13#10'  sysname:=UIRootNode.G'
  +'etAttribute(''SystemName'',false).AttribValue;'#13#10'  //showmessage(''sav'
  +'ing system ''+sysname);'#13#10'  asm'#13#10'   //alert(''saving local XIDES'
  +'avedData''+sysname);'#13#10'   pas.HTMLUtils.WriteToLocalStore("XIDESavedDa'
  +'ta"+sysname,TheData);'#13#10'  end;'#13#10'end;'#13#10'{$endif}'#13#10#13#10
  +'procedure InitialiseXIDE;'#13#10'begin'#13#10#13#10'  InitResourcesNodeTree'
  +';'#13#10'  RebuildResourcesTree;'#13#10'  // Populate navigator and code tr'
  +'ee from SystemNodeTree'#13#10'  RebuildNavigatorTree;'#13#10'  RebuildCodeT'
  +'ree;'#13#10#13#10'  {$ifdef JScript}'#13#10'  PasteDialogUnit.SetupPasteDia'
  +'logForm;'#13#10'  PasteDialogUnit.PasteTarget.myNode.registerEvent(''MemoPa'
  +'ste'',@OIEventWrapper.OIPasteTarget);'#13#10'  XGPUEditor.CreateGPUEditForm'
  +';'#13#10#13#10'  {$endif}'#13#10'end;'#13#10#13#10#13#10'{$ifdef JScript}'
  +#13#10'procedure InitialiseComposites;'#13#10'var'#13#10'  composites:TDataN'
  +'ode;'#13#10'  i:integer;'#13#10'  itemname,src:String;'#13#10'begin'#13#10
  +'  //showmessage(''InitialiseComposites ''+CompositesString);'#13#10'  // Th'
  +'e string CompositesString contains the XML list of the stored composites de'
  +'fined in the desktop system.'#13#10'  // These are now being transferred in'
  +'to the browser environment.'#13#10'  composites:=FindDataNodeById(SystemNod'
  +'etree,''Composites'','''',false);'#13#10'  if (composites<>nil)'#13#10'  an'
  ,'d (CompositesString<>''</>'') then'#13#10'    XMLToNodeTree(CompositesStrin'
  +'g,composites,false);'#13#10'  for i:=0 to length(composites.ChildNodes)-1 d'
  +'o'#13#10'  begin'#13#10'    itemName:=composites.ChildNodes[i].NodeName;'#13
  +#10'    // these names all have a _xcmp suffix.'#13#10'//    itemName:=Copy('
  +'itemName,1,length(itemName)-5);'#13#10'    composites.ChildNodes[i].NodeNam'
  +'e:=itemName;'#13#10'    src:=composites.ChildNodes[i].GetAttribute(''Source'
  +'String'',false).AttribValue;'#13#10'    itemName:=Copy(itemName,1,length(it'
  +'emName)-5);'#13#10'    WriteToLocalStore(itemName+''.xcmp'',src);'#13#10'  '
  +'end;'#13#10'  RebuildResourcesTree;'#13#10'end;'#13#10'{$endif}'#13#10#13#10
  +'procedure ClearAllComposites;'#13#10'var'#13#10'  composites:TDataNode;'#13
  +#10'begin'#13#10'  composites:=FindDataNodeById(SystemNodetree,''Composites'
  +''','''',false);'#13#10'  DeleteNodeChildren(composites);'#13#10'end;'#13#10
  +#13#10'procedure DiscoverSavedFiles(suffix:String;var NamesList:TStringList)'
  +';'#13#10'{$ifndef JScript}'#13#10'var'#13#10'  Info : TSearchRec;'#13#10'  '
  +'Count : Longint;'#13#10'  bits:TStringList;'#13#10'  tmp:String;'#13#10'  d'
  +'t: TDateTime;'#13#10'  y, d, m, h, min, sec, msec: word;'#13#10'begin'#13#10
  +#13#10'  bits:=TStringList.Create;'#13#10'    Count:=0;'#13#10'    If FindFi'
  +'rst (''SavedSystems/*.''+suffix,faAnyFile,Info)=0 then'#13#10'    begin'#13
  +#10'      Repeat'#13#10'        Inc(Count);'#13#10'        With Info do'#13
  +#10'          begin'#13#10'            bits:=stringsplit(Name,''.'');'#13#10
  +'            tmp:=bits[0];'#13#10'            if suffix<>''xcmp'' then'#13#10
  +'            begin'#13#10'              dt := Info.TimeStamp;'#13#10'       '
  +'       decodeDate( dt, y, m, d );'#13#10'              decodeTime( dt, h, m'
  +'in, sec, msec );'#13#10'              tmp:=tmp+''      ''+format(''%.2d'',['
  +'d])+''/''+format(''%.2d'',[m])+''/''+inttostr(y)+'#13#10'                  '
  +'     '' ''+format(''%.2d'',[h])+'':''+format(''%.2d'',[min])+'':''+format('
  +'''%.2d'',[sec]);'#13#10'            end;'#13#10'            if bits[0]<>'''
  +''' then'#13#10'              NamesList.Add(tmp);'#13#10'          end;'#13
  +#10'      Until FindNext(info)<>0;'#13#10'    end;'#13#10'    FindClose(Info'
  +');'#13#10'{$else}'#13#10'var'#13#10'  namesArray:TStringArray;'#13#10'  n:i'
  +'nteger;'#13#10'  bits:TStringList;'#13#10'  nm,ts:String;'#13#10'begin'#13
  +#10'  bits:=TStringList.Create;'#13#10'  setlength(namesArray,0);'#13#10'  a'
  +'sm'#13#10'  namesArray = Object.keys(localStorage);'#13#10'  end;'#13#10'  '
  +'for n:= 0 to length(namesArray)-1 do'#13#10'  begin'#13#10'    bits:=string'
  +'split(namesArray[n],''.'');'#13#10'    if (bits.count=2)'#13#10'    and (bi'
  +'ts[1]=suffix) then'#13#10'    begin'#13#10'      nm:=bits[0];'#13#10'      '
  +'asm'#13#10'      if (suffix!=''xcmp'') {'#13#10'      // find the timestamp'
  +'...'#13#10'      var object = JSON.parse(localStorage.getItem(namesArray[n]'
  +'));'#13#10'      ts = '''';'#13#10'      if ((object!=null)&&(suffix!=''xcm'
  +'p'')) {'#13#10'        if ( object.hasOwnProperty(''timestamp'') ) {'#13#10
  +'        var tsd = new Date(object.timestamp);'#13#10'        ts = ''      '
  +'''+tsd.toLocaleDateString()+'' ''+tsd.toLocaleTimeString();'#13#10'        '
  +'}'#13#10'      }'#13#10'      }'#13#10'      end;'#13#10'      NamesList.Ad'
  +'d(nm+ts);'#13#10'    end;'#13#10'  end;'#13#10'{$endif}'#13#10'  bits.Free;'
  +#13#10'end;'#13#10#13#10'procedure DiscoverSavedSystems(var NamesList:TStrin'
  +'gList);'#13#10'begin'#13#10'  DiscoverSavedFiles(''xide'',NamesList);'#13#10
  +'end;'#13#10'procedure DiscoverSavedComposites(var NamesList:TStringList);'
  +#13#10'begin'#13#10'  DiscoverSavedFiles(''xcmp'',NamesList);'#13#10'end;'#13
  +#10#13#10'procedure SetupAvailableResources;'#13#10'var'#13#10'  AttrParams:'
  +'TNodeAttributesArray;'#13#10'  NamesList:TStringList;'#13#10'  i:integer;'
  +#13#10'  str:String;'#13#10'begin'#13#10#13#10'    ClearAttribs(AttrParams);'
  +#13#10'    RegisterResource(''RUI'','''',''UIComponents'',ResourceDataRootNa'
  +'me,-1,AttrParams);'#13#10'    // Set up the tree of available components'#13
  +#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,'''
  +'Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'','''','''
  +'Layout'',''UIComponents'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(At'
  +'trParams);'#13#10'     AddAttrib(AttrParams,''ContainerWidth'',''String'','
  +'''100'',false);'#13#10'     AddAttrib(AttrParams,''ContainerHeight'',''Stri'
  +'ng'',''100'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','
  +''''',false);'#13#10'     AddAttrib(AttrParams,''Border'',''Boolean'',''True'
  +''',false);'#13#10'     RegisterResource(''RUI'',''TXVBox'',''TXVBox'',''Lay'
  +'out'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'  '
  +'   AddAttrib(AttrParams,''ContainerWidth'',''String'','''',false);'#13#10' '
  +'    AddAttrib(AttrParams,''ContainerHeight'',''String'',''30'',false);'#13
  ,#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     A'
  +'ddAttrib(AttrParams,''Border'',''Boolean'',''True'',false);'#13#10'     Reg'
  +'isterResource(''RUI'',''TXHBox'',''TXHBox'',''Layout'',-1,AttrParams);'#13
  +#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,'''
  +'ContainerWidth'',''String'',''300'',false);'#13#10'     AddAttrib(AttrParam'
  +'s,''ContainerHeight'',''String'',''200'',false);'#13#10'     AddAttrib(Attr'
  +'Params,''Hint'',''String'',''Example hint: This is a group box'',false);'#13
  +#10'     RegisterResource(''RUI'',''TXGroupBox'',''TXGroupBox'',''Layout'',-'
  +'1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddA'
  +'ttrib(AttrParams,''ContainerWidth'',''String'',''100'',false);'#13#10'     '
  +'AddAttrib(AttrParams,''ContainerHeight'',''String'',''100'',false);'#13#10
  +'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     AddA'
  +'ttrib(AttrParams,''Border'',''Boolean'',''True'',false);'#13#10'     AddAtt'
  +'rib(AttrParams,''ScrollType'',''String'',''Right'',false);'#13#10'     Regi'
  +'sterResource(''RUI'',''TXScrollBox'',''TXScrollBox'',''Layout'',-1,AttrPara'
  +'ms);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(Attr'
  +'Params,''ContainerWidth'',''String'',''200'',false);'#13#10'     AddAttrib('
  +'AttrParams,''ContainerHeight'',''String'',''200'',false);'#13#10'     AddAt'
  +'trib(AttrParams,''Hint'',''String'','''',false);'#13#10'     RegisterResour'
  +'ce(''RUI'',''TXTabControl'',''TXTabControl'',''Layout'',-1,AttrParams);'#13
  +#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,'''
  +'Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'',''TXTab'
  +'Sheet'',''TXTabSheet'',''Layout'',-1,AttrParams);'#13#10#13#10'     ClearAt'
  +'tribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''Width'',''Integer'','
  +'''600'',false);'#13#10'     AddAttrib(AttrParams,''Height'',''Integer'',''5'
  +'00'',false);'#13#10'     AddAttrib(AttrParams,''Caption'',''String'',''My T'
  +'itle'',false);'#13#10'     AddAttrib(AttrParams,''Top'',''Integer'',''50'','
  +'false);'#13#10'     AddAttrib(AttrParams,''Left'',''Integer'',''50'',false)'
  +';'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10
  +'     RegisterResource(''RUI'',''TXForm'',''TXForm'',''Layout'',-1,AttrParam'
  +'s);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrP'
  +'arams,''Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'''
  +','''',''Numeric'',''UIComponents'',-1,AttrParams);'#13#10#13#10'    ClearAt'
  +'tribs(AttrParams);'#13#10'    ClearAttribs(AttrParams);'#13#10'    AddAttri'
  +'b(AttrParams,''MaxVal'',''Integer'',''100'',false);'#13#10'    AddAttrib(At'
  +'trParams,''LabelText'',''String'',''ProgressBar'',false);'#13#10'    AddAtt'
  +'rib(AttrParams,''ItemValue'',''Integer'',''5'',false);'#13#10'    AddAttrib'
  +'(AttrParams,''BarWidth'',''String'',''200'',false);'#13#10'    AddAttrib(At'
  +'trParams,''Hint'',''String'','''',false);'#13#10'    RegisterResource(''RUI'
  +''',''TXProgressBar'',''TXProgressBar'',''Numeric'',-1,AttrParams);'#13#10#13
  +#10'    ClearAttribs(AttrParams);'#13#10'    AddAttrib(AttrParams,''MinVal'''
  +',''Integer'',''0'',false);'#13#10'    AddAttrib(AttrParams,''MaxVal'',''Int'
  +'eger'',''100'',false);'#13#10'    AddAttrib(AttrParams,''LabelText'',''Stri'
  +'ng'',''Number Slider'',false);'#13#10'    AddAttrib(AttrParams,''ItemValue'
  +''',''Integer'',''5'',false);'#13#10'    AddAttrib(AttrParams,''BarWidth'','
  +'''String'',''200'',false);'#13#10'    AddAttrib(AttrParams,''Hint'',''Strin'
  +'g'','''',false);'#13#10'    RegisterResource(''RUI'',''TXNumericSlider'','''
  +'TXNumericSlider'',''Numeric'',-1,AttrParams);'#13#10#13#10'    ClearAttribs'
  +'(AttrParams);'#13#10'    AddAttrib(AttrParams,''MinVal'',''Integer'',''22'''
  +',false);'#13#10'    AddAttrib(AttrParams,''MaxVal'',''Integer'',''44'',fals'
  +'e);'#13#10'    AddAttrib(AttrParams,''LabelText'',''String'',''NumberField'
  +''',false);'#13#10'    AddAttrib(AttrParams,''ItemValue'',''String'',''22'','
  +'false);'#13#10'    AddAttrib(AttrParams,''StepSize'',''Real'',''1'',false);'
  +#13#10'    AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'    '
  +'RegisterResource(''RUI'',''TXNumberSpinner'',''TXNumberSpinner'',''Numeric'
  +''',-1,AttrParams);'#13#10#13#10#13#10'     ClearAttribs(AttrParams);'#13#10
  +'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     Regi'
  +'sterResource(''RUI'','''',''Text'',''UIComponents'',-1,AttrParams);'#13#10
  +#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''Lab'
  +'elCaption'',''String'',''caption'',false);'#13#10'     AddAttrib(AttrParams'
  +',''Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'',''TX'
  +'Label'',''TXLabel'',''Text'',-1,AttrParams);'#13#10#13#10'     ClearAttribs'
  +'(AttrParams);'#13#10'     AddAttrib(AttrParams,''LabelCaption'',''String'','
  +'''Hyperlink BBC News'',false);'#13#10'     AddAttrib(AttrParams,''URL'',''S'
  ,'tring'',''http://www.bbc.co.uk/news'',false);'#13#10'     AddAttrib(AttrPar'
  +'ams,''Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'','
  +'''TXHyperlink'',''TXHyperlink'',''Text'',-1,AttrParams);'#13#10#13#10'     '
  +'ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''ItemValue'','''
  +'String'','''',false);'#13#10'     AddAttrib(AttrParams,''LabelText'',''Stri'
  +'ng'',''EditBox'',false);'#13#10'     AddAttrib(AttrParams,''ReadOnly'',''Bo'
  +'olean'',''False'',false);'#13#10'     AddAttrib(AttrParams,''ContainerWidth'
  +''','''','''',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','
  +''''',false);'#13#10'     RegisterResource(''RUI'',''TXEditBox'',''TXEditBox'
  +''',''Text'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13
  +#10'     AddAttrib(AttrParams,''MemoHeight'',''String'',''200'',false);'#13
  +#10'     AddAttrib(AttrParams,''MemoWidth'',''String'',''500'',false);'#13#10
  +'     AddAttrib(AttrParams,''LabelText'',''String'',''Multi-Line EditBox'',f'
  +'alse);'#13#10'     AddAttrib(AttrParams,''ItemValue'',''String'','''',false'
  +');'#13#10'     AddAttrib(AttrParams,''ReadOnly'',''Boolean'',''False'',fals'
  +'e);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10
  +'     RegisterResource(''RUI'',''TXMemo'',''TXMemo'',''Text'',-1,AttrParams)'
  +';'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrPar'
  +'ams,''TableHeight'',''String'',''200'',false);'#13#10'     AddAttrib(AttrPa'
  +'rams,''TableWidth'',''String'',''400'',false);'#13#10'     AddAttrib(AttrPa'
  +'rams,''ColWidth'',''Integer'',''40'',false);'#13#10'     AddAttrib(AttrPara'
  +'ms,''LabelText'',''String'','''',false);'#13#10'     AddAttrib(AttrParams,'
  +'''TableData'',''TableString'',''[["a","b","c"],["1","2","3"]]'',false);'#13
  +#10'     AddAttrib(AttrParams,''ReadOnly'',''Boolean'',''False'',false);'#13
  +#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     R'
  +'egisterResource(''RUI'',''TXTable'',''TXTable'',''Text'',-1,AttrParams);'#13
  +#10#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrPar'
  +'ams,''Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'','
  +''''',''Selectors'',''UIComponents'',-1,AttrParams);'#13#10#13#10'     Clear'
  +'Attribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''ButtonWidth'',''Str'
  +'ing'','''',false);'#13#10'     AddAttrib(AttrParams,''Caption'',''String'','
  +'''Press Me'',false);'#13#10'     AddAttrib(AttrParams,''Enabled'',''Boolean'
  +''',''True'',false);'#13#10'     RegisterResource(''RUI'',''TXButton'',''TXB'
  +'utton'',''Selectors'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrPa'
  +'rams);'#13#10'     AddAttrib(AttrParams,''Checked'',''Boolean'',''false'',f'
  +'alse);'#13#10'     AddAttrib(AttrParams,''LabelText'',''String'',''checkbox'
  +' label'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''','
  +'false);'#13#10'     AddAttrib(AttrParams,''Enabled'',''Boolean'',''True'',f'
  +'alse);'#13#10'     RegisterResource(''RUI'',''TXCheckBox'',''TXCheckBox'','
  +'''Selectors'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'
  +#13#10'    // AddAttrib(AttrParams,''OptionList'',''String'',ExampleOptionLi'
  +'st,false);'#13#10'     AddAttrib(AttrParams,''ItemValue'',''String'','''',f'
  +'alse);'#13#10'     AddAttrib(AttrParams,''Caption'',''String'',''radio butt'
  +'ons'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',fal'
  +'se);'#13#10'     AddAttrib(AttrParams,''ReadOnly'',''Boolean'',''False'',fa'
  +'lse);'#13#10'     RegisterResource(''RUI'',''TXRadioBtns'',''TXRadioBtns'','
  +'''Selectors'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'
  +#13#10'  // //  AddAttrib(AttrParams,''OptionList'',''String'',ExampleOption'
  +'List,false);'#13#10'     AddAttrib(AttrParams,''ItemIndex'',''Integer'',''0'
  +''',false);'#13#10'     AddAttrib(AttrParams,''LabelText'',''String'',''Comb'
  +'oBox'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',fa'
  +'lse);'#13#10'     AddAttrib(AttrParams,''ReadOnly'',''Boolean'',''False'',f'
  +'alse);'#13#10'     RegisterResource(''RUI'',''TXComboBox'',''TXComboBox'','
  +'''Selectors'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'
  +#13#10'     // AddAttrib(AttrParams,''TreeData'',''TreeString'',ExampleNodeT'
  +'ree,false);'#13#10'     AddAttrib(AttrParams,''ItemText'',''String'',''Tree'
  +''',false);'#13#10'     AddAttrib(AttrParams,''OpenToLevel'',''Integer'',''1'
  +''',false);'#13#10'     AddAttrib(AttrParams,''TreeHeight'',''String'',''200'
  +''',false);'#13#10'     AddAttrib(AttrParams,''TreeWidth'',''String'',''350'
  +''',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',false)'
  +';'#13#10'     RegisterResource(''RUI'',''TXTree'',''TXTree'',''Selectors'','
  +'-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     Add'
  +'Attrib(AttrParams,''LabelText'',''String'',''Date Picker'',false);'#13#10' '
  +'    AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     Regis'
  ,'terResource(''RUI'',''TXDatePicker'',''TXDatePicker'',''Selectors'',-1,Attr'
  +'Params);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib('
  +'AttrParams,''LabelText'',''String'',''Colour Picker'',false);'#13#10'     A'
  +'ddAttrib(AttrParams,''ItemValue'',''String'',''#FF8040'',false);'#13#10'   '
  +'  AddAttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     Registe'
  +'rResource(''RUI'',''TXColorPicker'',''TXColorPicker'',''Selectors'',-1,Attr'
  +'Params);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     RegisterRe'
  +'source(''RUI'',''TXMainMenu'',''TXMainMenu'',''Selectors'',-1,AttrParams);'
  +#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams'
  +',''Caption'',''String'',''Menu Item'',false);'#13#10'     RegisterResource('
  +'''RUI'',''TXMenuItem'',''TXMenuItem'',''Selectors'',-1,AttrParams);'#13#10
  +#13#10#13#10'  //   ClearAttribs(AttrParams);'#13#10'  //   AddAttrib(AttrPa'
  +'rams,''LabelText'',''String'',''File Picker'',false);'#13#10'  //   AddAttr'
  +'ib(AttrParams,''ItemText'',''String'',''*.pas'',false);'#13#10'  //   AddAt'
  +'trib(AttrParams,''ItemValue'',''String'','''',false);'#13#10'  //   AddAttr'
  +'ib(AttrParams,''Hint'',''String'','''',false);'#13#10'  //   RegisterResour'
  +'ce(''RUI'',''FilePicker'',''FilePicker'',''Selectors'',-1,AttrParams);'#13
  +#10#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrPar'
  +'ams,''Hint'',''String'','''',false);'#13#10'     RegisterResource(''RUI'','
  +''''',''Media'',''UIComponents'',-1,AttrParams);'#13#10#13#10'     ClearAttr'
  +'ibs(AttrParams);'#13#10'     AddAttrib(AttrParams,''LabelText'',''String'','
  +'''Image'',false);'#13#10'     AddAttrib(AttrParams,''Source'',''String'','''
  +''',false);       //loading.gif?'#13#10'     AddAttrib(AttrParams,''ImageHei'
  +'ght'',''String'',''200px'',false);'#13#10'     AddAttrib(AttrParams,''Image'
  +'Width'',''String'',''250px'',false);'#13#10'     AddAttrib(AttrParams,''Hin'
  +'t'',''String'','''',false);'#13#10'     RegisterResource(''RUI'',''TXImage'
  +''',''TXImage'',''Media'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(Att'
  +'rParams);'#13#10'     AddAttrib(AttrParams,''LabelText'',''String'',''Image'
  +''',false);'#13#10'     AddAttrib(AttrParams,''ImageHeight'',''String'',''50'
  +'0px'',false);'#13#10'     AddAttrib(AttrParams,''ImageWidth'',''String'','''
  +'500px'',false);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''',f'
  +'alse);'#13#10'     RegisterResource(''RUI'',''TXBitMap'',''TXBitMap'',''Med'
  +'ia'',-1,AttrParams);'#13#10#13#10'     // missing.....Audio'#13#10'     // '
  +'missing.....Video'#13#10'     // missing.....Chat'#13#10#13#10'     ClearAt'
  +'tribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''Hint'',''String'','''
  +''',false);'#13#10'     RegisterResource(''RUI'','''',''IFrame'',''UICompone'
  +'nts'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'  '
  +'   AddAttrib(AttrParams,''HTMLSource'',''String'','''',false);'#13#10'     '
  +'AddAttrib(AttrParams,''FrameHeight'',''Integer'',''300'',false);'#13#10'   '
  +'  AddAttrib(AttrParams,''FrameWidth'',''Integer'',''300'',false);'#13#10'  '
  +'   RegisterResource(''RUI'',''TXIFrame'',''TXIFrame'',''IFrame'',-1,AttrPar'
  +'ams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(Att'
  +'rParams,''HTMLSource'',''String'','''',false);'#13#10'     AddAttrib(AttrPa'
  +'rams,''FrameHeight'',''Integer'',''300'',false);'#13#10'     AddAttrib(Attr'
  +'Params,''FrameWidth'',''Integer'',''300'',false);'#13#10'     AddAttrib(Att'
  +'rParams,''AnimationCode'',''String'','''',false);'#13#10'     AddAttrib(Att'
  +'rParams,''ParamNumList'',''String'','''',false);'#13#10'     AddAttrib(Attr'
  +'Params,''ConstIntList'',''String'','''',false);'#13#10'     AddAttrib(AttrP'
  +'arams,''ParamImgList'',''String'','''',false);'#13#10'     AddAttrib(AttrPa'
  +'rams,''Active'',''Boolean'',''False'',false);'#13#10'     AddAttrib(AttrPar'
  +'ams,''Animated'',''Boolean'',''False'',false);'#13#10'     AddAttrib(AttrPa'
  +'rams,''MaxIterations'',''Integer'',''512'',false);'#13#10'     AddAttrib(At'
  +'trParams,''StartIteration'',''Integer'',''1'',false);'#13#10'     AddAttrib'
  +'(AttrParams,''NumFrames'',''Integer'',''100'',false);'#13#10'     AddAttrib'
  +'(AttrParams,''MaxFramesPerSec'',''Integer'',''15'',false);'#13#10'     Regi'
  +'sterResource(''RUI'',''TXGPUCanvas'',''TXGPUCanvas'',''IFrame'',-1,AttrPara'
  +'ms);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(Attr'
  +'Params,''HTMLSource'',''String'','''',false);'#13#10'     AddAttrib(AttrPar'
  +'ams,''FrameHeight'',''Integer'',''300'',false);'#13#10'     AddAttrib(AttrP'
  +'arams,''FrameWidth'',''Integer'',''300'',false);'#13#10'     AddAttrib(Attr'
  +'Params,''IsEmbedded'',''Boolean'',''True'',false);'#13#10'     AddAttrib(At'
  +'trParams,''SourceText'',''String'',''...text...'',false);'#13#10'     AddAt'
  +'trib(AttrParams,''Showing'',''Boolean'',''False'',false);'#13#10'     Regis'
  +'terResource(''RUI'',''TXHTMLEditor'',''TXHTMLEditor'',''IFrame'',-1,AttrPar'
  ,'ams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(Att'
  +'rParams,''FrameHeight'',''Integer'',''300'',false);'#13#10'     AddAttrib(A'
  +'ttrParams,''FrameWidth'',''Integer'',''300'',false);'#13#10'     AddAttrib('
  +'AttrParams,''SourceText'',''String'',''...text...'',false);'#13#10'     Reg'
  +'isterResource(''RUI'',''TXHTMLText'',''TXHTMLText'',''IFrame'',-1,AttrParam'
  +'s);'#13#10#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib'
  +'(AttrParams,''FrameHeight'',''Integer'',''300'',false);'#13#10'     AddAttr'
  +'ib(AttrParams,''FrameWidth'',''Integer'',''300'',false);'#13#10'     Regist'
  +'erResource(''RUI'',''TXSVGContainer'',''TXSVGContainer'',''IFrame'',-1,Attr'
  +'Params);'#13#10#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddA'
  +'ttrib(AttrParams,''Hint'',''String'','''',false);'#13#10'     RegisterResou'
  +'rce(''RUI'','''',''SVGComponents'',''IFrame'',-1,AttrParams);'#13#10#13#10
  +'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(AttrParams,''XPos'','''
  +'Integer'',''50'',false);        //y'#13#10'     AddAttrib(AttrParams,''YPos'
  +''',''Integer'',''50'',false);         //x'#13#10'     AddAttrib(AttrParams,'
  +'''TextString'',''String'',''SVG Text Example'',false);'#13#10'     AddAttri'
  +'b(AttrParams,''Height'',''Integer'',''20'',false);'#13#10'     AddAttrib(At'
  +'trParams,''FontFamily'',''String'','' impact, georgia, times, serif;'',fals'
  +'e);'#13#10'     AddAttrib(AttrParams,''FontWeight'',''String'','' normal'','
  +'false);'#13#10'     AddAttrib(AttrParams,''FontStyle'',''String'','' normal'
  +''',false);'#13#10'     AddAttrib(AttrParams,''Rotate'',''Integer'',''0'',fa'
  +'lse) ;'#13#10'     RegisterResource(''RSVG'',''TXSVGText'',''TXSVGText'','''
  +'SVGComponents'',-1,AttrParams);'#13#10#13#10'     ClearAttribs(AttrParams);'
  +#13#10'     AddAttrib(AttrParams,''XPos'',''Integer'',''0'',false);        /'
  +'/y'#13#10'     AddAttrib(AttrParams,''YPos'',''Integer'',''110'',false);   '
  +'      //x'#13#10'     AddAttrib(AttrParams,''Width'',''Integer'',''30'',fal'
  +'se);'#13#10'     AddAttrib(AttrParams,''Height'',''Integer'',''30'',false);'
  +#13#10'     AddAttrib(AttrParams,''StrokeColor'',''Color'',''#000000'',false'
  +');          // stroke'#13#10'     //AddAttrib(AttrParams,''FillColor'',''Co'
  +'lor'',''none'',false);            //fill'#13#10'     AddAttrib(AttrParams,'
  +'''FillColor'',''Color'',''#FFFFFF'',false);            //fill'#13#10'     A'
  +'ddAttrib(AttrParams,''StrokeWidth'',''Integer'',''5'',false);'#13#10'     A'
  +'ddAttrib(AttrParams,''Rotate'',''Integer'',''0'',false);'#13#10'     Regist'
  +'erResource(''RSVG'',''TXSVGRect'',''TXSVGRect'',''SVGComponents'',-1,AttrPa'
  +'rams);'#13#10#13#10'     ClearAttribs(AttrParams);'#13#10'     AddAttrib(At'
  +'trParams,''XPos'',''Integer'',''60'',false);        //y'#13#10'     AddAttr'
  +'ib(AttrParams,''YPos'',''Integer'',''10'',false);         //x'#13#10'     A'
  +'ddAttrib(AttrParams,''Rx'',''Integer'',''10'',false);'#13#10'     AddAttrib'
  +'(AttrParams,''Ry'',''Integer'',''10'',false);'#13#10'     AddAttrib(AttrPar'
  +'ams,''Width'',''Integer'',''30'',false);'#13#10'     AddAttrib(AttrParams,'
  +'''Height'',''Integer'',''30'',false);'#13#10'     AddAttrib(AttrParams,''St'
  +'rokeColor'',''Color'',''#000000'',false);          // stroke'#13#10'     //'
  +'AddAttrib(AttrParams,''FillColor'',''Color'',''none'',false);            //'
  +'fill'#13#10'     AddAttrib(AttrParams,''FillColor'',''Color'',''#FFFFFF'',f'
  +'alse);            //fill'#13#10'     AddAttrib(AttrParams,''StrokeWidth'','
  +'''Integer'',''5'',false);'#13#10'     AddAttrib(AttrParams,''Rotate'',''Int'
  +'eger'',''0'',false);'#13#10'     RegisterResource(''RSVG'',''TXSVGRoundedRe'
  +'ct'',''TXSVGRoundedRect'',''SVGComponents'',-1,AttrParams);'#13#10#13#10'  '
  +'    ClearAttribs(AttrParams);'#13#10'      AddAttrib(AttrParams,''XPos'','''
  +'Integer'',''25'',false);        //cy'#13#10'      AddAttrib(AttrParams,''YP'
  +'os'',''Integer'',''75'',false);         //cy'#13#10'      AddAttrib(AttrPar'
  +'ams,''Radius'',''Integer'',''20'',false);       //r'#13#10'      AddAttrib('
  +'AttrParams,''StrokeColor'',''Color'',''#00FF00'',false);          // stroke'
  +#13#10'      AddAttrib(AttrParams,''FillColor'',''Color'',''#FFFF00'',false)'
  +';            //fill'#13#10'      AddAttrib(AttrParams,''Strokewidth'',''Int'
  +'eger'',''5'',false);'#13#10'      AddAttrib(AttrParams,''Rotate'',''Integer'
  +''',''0'',false);'#13#10'      RegisterResource(''RSVG'',''TXSVGCircle'',''T'
  +'XSVGCircle'',''SVGComponents'',-1,AttrParams);'#13#10#13#10'      ClearAttr'
  +'ibs(AttrParams);'#13#10'      AddAttrib(AttrParams,''XPos'',''Integer'',''1'
  +'00'',false);        //cy'#13#10'      AddAttrib(AttrParams,''YPos'',''Integ'
  +'er'',''75'',false);         //cy'#13#10'      AddAttrib(AttrParams,''Rx'','
  +'''Integer'',''20'',false);       //rx'#13#10'      AddAttrib(AttrParams,''R'
  +'y'',''Integer'',''50'',false);       //ry'#13#10'      AddAttrib(AttrParams'
  +',''StrokeColor'',''Color'',''#000000'',false);          // stroke'#13#10'  '
  ,'    //AddAttrib(AttrParams,''FillColor'',''Color'',''none'',false);        '
  +'    //fill'#13#10'      AddAttrib(AttrParams,''FillColor'',''Color'',''#FFF'
  +'FFF'',false);            //fill'#13#10'      AddAttrib(AttrParams,''StrokeW'
  +'idth'',''Integer'',''5'',false);'#13#10'      AddAttrib(AttrParams,''Rotate'
  +''',''Integer'',''0'',false);'#13#10'      RegisterResource(''RSVG'',''TXSVG'
  +'Ellipse'',''TXSVGEllipse'',''SVGComponents'',-1,AttrParams);'#13#10#13#10' '
  +'     ClearAttribs(AttrParams);'#13#10'      AddAttrib(AttrParams,''X1'',''I'
  +'nteger'',''10'',false);        //x1'#13#10'      AddAttrib(AttrParams,''Y1'
  +''',''Integer'',''110'',false);         //y1'#13#10'      AddAttrib(AttrPara'
  +'ms,''X2'',''Integer'',''50'',false);       //x2'#13#10'      AddAttrib(Attr'
  +'Params,''Y2'',''Integer'',''150'',false);       //y2'#13#10'      AddAttrib'
  +'(AttrParams,''StrokeColor'',''Color'',''#FF9900'',false);          // strok'
  +'e'#13#10'      AddAttrib(AttrParams,''StrokeWidth'',''Integer'',''5'',false'
  +');'#13#10'      AddAttrib(AttrParams,''Rotate'',''Integer'',''0'',false);'
  +#13#10'      RegisterResource(''RSVG'',''TXSVGLine'',''TXSVGLine'',''SVGComp'
  +'onents'',-1,AttrParams);'#13#10#13#10'      ClearAttribs(AttrParams);'#13#10
  +'      AddAttrib(AttrParams,''XCoords'',''IntegerVector'',''60 , 65 , 70 , 7'
  +'5  , 80 , 85 , 90,  95 , 100 '',false);'#13#10'      AddAttrib(AttrParams,'
  +'''YCoords'',''IntegerVector'',''110, 120, 115 ,130 ,125 ,140, 135 ,150 , 14'
  +'5'',false);'#13#10'      AddAttrib(AttrParams,''StrokeColor'',''Color'',''#'
  +'FF9900'',false);          // stroke'#13#10'      //AddAttrib(AttrParams,''F'
  +'illColor'',''Color'',''none'',false);            //fill'#13#10'      AddAtt'
  +'rib(AttrParams,''FillColor'',''Color'',''#FFFFFF'',false);            //fil'
  +'l'#13#10'      AddAttrib(AttrParams,''StrokeWidth'',''Integer'',''5'',false'
  +');'#13#10'      AddAttrib(AttrParams,''Rotate'',''Integer'',''0'',false);'
  +#13#10'      RegisterResource(''RSVG'',''TXSVGPolyLine'',''TXSVGPolyLine'','
  +'''SVGComponents'',-1,AttrParams);'#13#10#13#10'      ClearAttribs(AttrParam'
  +'s);'#13#10'      AddAttrib(AttrParams,''XCoords'',''IntegerVector'',''50 , '
  +' 55 ,   70 , 60 ,  65 ,  50 ,  35  , 40 ,  30 ,  45 '',false);'#13#10'     '
  +' AddAttrib(AttrParams,''YCoords'',''IntegerVector'',''160 , 180 , 180 , 190'
  +' , 205 , 195 , 205 , 190 , 180,  180'',false);'#13#10'      AddAttrib(AttrP'
  +'arams,''StrokeColor'',''Color'',''#FF9900'',false);          // stroke'#13
  +#10'      AddAttrib(AttrParams,''FillColor'',''Color'',''#AAAAAA'',false);  '
  +'          //fill'#13#10'      AddAttrib(AttrParams,''StrokeWidth'',''Intege'
  +'r'',''5'',false);'#13#10'      AddAttrib(AttrParams,''Rotate'',''Integer'','
  +'''0'',false);'#13#10'      RegisterResource(''RSVG'',''TXSVGPolyGon'',''TXS'
  +'VGPolyGon'',''SVGComponents'',-1,AttrParams);'#13#10#13#10#13#10'      Clea'
  +'rAttribs(AttrParams);'#13#10'      AddAttrib(AttrParams,''Hint'',''String'''
  +','''',false);'#13#10'      RegisterResource(''RUI'','''',''Composites'',''U'
  +'IComponents'',-1,AttrParams);'#13#10#13#10'      // Set up the list of prev'
  +'iously saved composite items'#13#10'      NamesList:=TStringList.Create;'#13
  +#10'      DiscoverSavedComposites(NamesList);'#13#10'      for i:=0 to Names'
  +'List.count-1 do'#13#10'      begin'#13#10'        ClearAttribs(AttrParams);'
  +#13#10'        AddAttrib(AttrParams,''CompositeType'',''String'',NamesList[i'
  +'],true);'#13#10'        {$ifndef JScript}'#13#10'        str:=ReadFromLocal'
  +'Store(''SavedSystems/''+NamesList[i]+''.xcmp'');'#13#10'        {$else}'#13
  +#10'        str:=ReadFromLocalStore(NamesList[i]+''.xcmp'');'#13#10'        '
  +'{$endif}'#13#10'        AddAttrib(AttrParams,''SourceString'',''String'',st'
  +'r,true);'#13#10'        AddAttrib(AttrParams,''ContainerWidth'',''String'','
  +''''',false);'#13#10'        AddAttrib(AttrParams,''ContainerHeight'',''Stri'
  +'ng'','''',false);'#13#10'        AddAttrib(AttrParams,''InheritColor'',''Bo'
  +'olean'',''True'',false);'#13#10'        RegisterResource(''RUI'',''TXCompos'
  +'ite'',NamesList[i]+''_xcmp'',''Composites'',-1,AttrParams);   //suffix to p'
  +'rotect nodename-uniqueness'#13#10'      end;'#13#10#13#10'       ClearAttri'
  +'bs(AttrParams);'#13#10'       AddAttrib(AttrParams,''Hint'',''String'','''''
  +',false);'#13#10'       RegisterResource(''RNV'','''',''Non-Visual Component'
  +'s'',ResourceDataRootName,-1,AttrParams);'#13#10#13#10'       ClearAttribs(A'
  +'ttrParams);'#13#10'       AddAttrib(AttrParams,''KeyName'',''String'','''','
  +'false);'#13#10'       AddAttrib(AttrParams,''DataValue'',''String'','''',fa'
  +'lse);'#13#10'       RegisterResource(''RNV'',''TXStore'',''TXStore'',''Non-'
  +'Visual Components'',-1,AttrParams);'#13#10#13#10'       ClearAttribs(AttrPa'
  +'rams);'#13#10'       RegisterResource(''RNV'',''TXTrapEvents'',''TXTrapEven'
  +'ts'',''Non-Visual Components'',-1,AttrParams);'#13#10#13#10'       ClearAtt'
  +'ribs(AttrParams);'#13#10'       AddAttrib(AttrParams,''Active'',''Boolean'''
  ,',''False'',false);'#13#10'       RegisterResource(''RNV'',''TXThreads'',''T'
  +'XThreads'',''Non-Visual Components'',-1,AttrParams);'#13#10#13#10'       Cl'
  +'earAttribs(AttrParams);'#13#10'       RegisterResource(''RNV'',''TXComposit'
  +'eIntf'',''TXCompositeIntf'',''Non-Visual Components'',-1,AttrParams);'#13#10
  +#13#10'//       ClearAttribs(AttrParams);'#13#10'//       RegisterResource('
  +'''RNV'','''',''Saved Systems'',ResourceDataRootName,-1,AttrParams);'#13#10
  +'//'#13#10'//       // Set up the list of previously saved systems'#13#10'//'
  +'       NamesList.Clear;'#13#10'//       DiscoverSavedSystems(NamesList);'#13
  +#10'//       ClearAttribs(AttrParams);'#13#10'//       for i:=0 to NamesList'
  +'.count-1 do'#13#10'//       begin'#13#10'//         if NamesList[i]<>'''' t'
  +'hen'#13#10'//           RegisterResource(''RSS'',''System'',NamesList[i]+'''
  +'_xide'',''Saved Systems'',-1,AttrParams);   //suffix to protect nodename-un'
  +'iqueness'#13#10'//       end;'#13#10#13#10'       NamesList.Free;'#13#10#13
  +#10'end;'#13#10#13#10#13#10'//function MyInputBox(PromptString,DefaultString'
  +':string):string;'#13#10'function XIDEPrompt(PromptString,DefaultString:stri'
  +'ng):string;'#13#10'var'#13#10'  str:string;'#13#10'begin'#13#10'  if MacroE'
  +'ventList.Replaying = false then'#13#10'  begin'#13#10'    {$ifndef JScript}'
  +#13#10'    str:=DefaultString;'#13#10'    if not InputQuery(''XIDE'', Prompt'
  +'String, str) then'#13#10'      str:=''''   //user cancelled the dialog'#13
  +#10'    else'#13#10'    begin'#13#10'      //Following event handler being c'
  +'alled (while probably in design mode) due to the requirement for'#13#10'   '
  +'   //event logging during design.'#13#10'      // Not available for capture'
  +' by user-written code.'#13#10'      HandleEvent(nil,''UserInput'',''UIRootN'
  +'ode'','''',str);'#13#10'    end;'#13#10'    {$else}'#13#10'    asm'#13#10' '
  +'    var res = prompt(PromptString, DefaultString);'#13#10'     if (res==nul'
  +'l) {str=''''}'#13#10'      else {'#13#10'        str=res;'#13#10'        //'
  +'Following event handler being called (while probably in design mode) due to'
  +' the requirement for'#13#10'        //event logging during design.'#13#10' '
  +'       // Not available for capture by user-written code.'#13#10'        pa'
  +'s.Events.handleEvent(null,''UserInput'',''UIRootNode'','''',str);'#13#10'  '
  +'    }'#13#10'    end;'#13#10'    {$endif}'#13#10'  end'#13#10'  else'#13#10
  +'  begin'#13#10'    str:=ReplayUserInput(PromptString);    //!!!! (browser) '
  +'this will throw Timeouts, so any following stuff may occur out of sequence'
  +#13#10'  end;'#13#10'  result:=str;'#13#10'end;'#13#10#13#10'function getnam'
  +'e(PromptString:string):string;'#13#10'var resultstring,DefaultString:string'
  +';'#13#10'begin'#13#10'   DefaultString := ''Created_''+DateTimeToStr(Now);'
  +#13#10'   DefaultString :=myStringReplace( DefaultString,'' '',''_'',999,999'
  +');'#13#10'   DefaultString :=myStringReplace( DefaultString,'':'',''_'',999'
  +',999);'#13#10'   DefaultString :=myStringReplace( DefaultString,''-'',''_'''
  +',999,999);'#13#10'   DefaultString :=myStringReplace( DefaultString,''/'','
  +'''_'',999,999);'#13#10#13#10'   resultstring:= XIDEPrompt(PromptString,Defa'
  +'ultString);'#13#10'   result:=resultstring;'#13#10'end;'#13#10#13#10'functi'
  +'on ComponentNameIsUnique(ScreenObjectName,NameSpace:string):Boolean;'#13#10
  +'var'#13#10'  myresult:Boolean;'#13#10'  founditem:TDataNode;'#13#10'begin'
  +#13#10'  myresult:=true;'#13#10'  founditem:=FindDataNodeById(SystemNodeTree'
  +',ScreenObjectName,NameSpace,false);'#13#10'  if (founditem<>nil)'#13#10'// '
  +' and ((founditem.ScreenObject<>nil) or (founditem.NodeClass=''SVG''))'#13#10
  +'//  and (founditem.NodeName=ScreenObjectName)'#13#10'  then'#13#10'  begin'
  +#13#10'    ShowMessage(''Error. Name >''+ScreenObjectName+''< is not unique '
  +'when creating a new system component'' );'#13#10'    myresult:=false;'#13#10
  +'  end;'#13#10'  result:=myresult;'#13#10'end;'#13#10#13#10'{$ifdef JScript}'
  +#13#10#13#10'procedure ShowXFormForDesign(XFormName:String);'#13#10'var'#13
  +#10'  XFormNode:TDataNode;'#13#10'begin'#13#10'  //showmessage(''ShowXFormFo'
  +'rDesign ''+XFormName);'#13#10'  // Swap the centre section of the screen fo'
  +'r the requested XForm, so it can be displayed while'#13#10'  // still acces'
  +'sing the nav tree and resources tree'#13#10'  asm'#13#10'    var ob = docum'
  +'ent.getElementById(XFormName);'#13#10'    var UIScreen = document.getElemen'
  +'tById(''UIRoot'');'#13#10'    var UIContent = document.getElementById(''UIR'
  +'ootContents'');'#13#10'    UIContent.style.display = "none";'#13#10'    UIS'
  +'creen.appendChild(ob);'#13#10'    //pas.XForm.ShowXForm(XFormName);'#13#10
  +'    ob.style.position=''relative'';'#13#10'  end;'#13#10'  XFormNode:=FindD'
  +'ataNodeById(SystemNodeTree,XFormName,'''',true);'#13#10'  TXForm(XFormNode.'
  +'ScreenObject).Showing:=''Modal'';'#13#10'end;'#13#10#13#10'procedure CloseX'
  +'FormForDesign(XFormName:String);'#13#10'var'#13#10'  UIRootNodeName:string;'
  ,#13#10'begin'#13#10'  //showmessage(''CloseXFormForDesign ''+XFormName);'#13
  +#10'  UIRootNodeName:=UIRootNode.Nodename;'#13#10'  asm'#13#10'    //alert('
  +'''UIRootNodeName=''+UIRootNodeName);'#13#10'    var ob = document.getElemen'
  +'tById(XFormName);'#13#10'    if (ob!=null) {'#13#10'      ob.style.position'
  +'=''fixed'';'#13#10'      ob.style.display = "none";'#13#10'      var root ='
  +'  document.getElementById(UIRootNodeName);'#13#10'      root.appendChild(ob'
  +');'#13#10'      }'#13#10'    var UIContent = document.getElementById(''UIRo'
  +'otContents'');'#13#10'    UIContent.style.display = "flex";'#13#10'  end;'
  +#13#10'  //if OpenXForms.IndexOf(XFormName)>-1 then'#13#10'  DeleteOpenXForm'
  +'(XFormName,'''');'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure '
  +'DeHighlightObject(OldNode:TDataNode);'#13#10'// de-highlight the previous s'
  +'elected component.'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  if OldN'
  +'ode<>nil then'#13#10'    begin'#13#10'      SetBooleanProperty(TComponent(O'
  +'ldNode.ScreenObject),''IsSelected'',false);'#13#10'    end;'#13#10'  {$else'
  +'}'#13#10'  asm'#13#10'    //alert(''LastHTMLUserInterfaceItemSelected=''+pa'
  +'s.XObjectInsp.LastHTMLUserInterfaceItemSelected+'' hadBorder=''+pas.XObject'
  +'Insp.LastHTMLUserInterfaceItemHadBorder);'#13#10'    pas.HTMLUtils.UnHighli'
  +'ght(pas.XObjectInsp.LastHTMLUserInterfaceItemSelected,pas.XObjectInsp.LastH'
  +'TMLUserInterfaceItemHadBorder);'#13#10'  end;'#13#10'  {$endif}'#13#10#13#10
  +'end;'#13#10#13#10'procedure HighlightNavigatorObject(CurrentNode:TDataNode)'
  +';'#13#10'var'#13#10'  mf:TForm;'#13#10'  tmp,cfn,mfn, Nodeid:string;'#13#10
  +'  Border:Boolean;'#13#10'  i:integer;'#13#10'  ParentNode:TDataNode;'#13#10
  +'  TabPage:TXTabSheet;'#13#10'begin'#13#10'  tmp:=CurrentNode.GetAttribute('
  +'''Border'',true).AttribValue;'#13#10'  if tmp='''' then'#13#10'    Border:='
  +'false'#13#10'  else'#13#10'    Border:=myStrToBool(tmp);'#13#10#13#10'  // '
  +'if the component is in a XForm, show the form'#13#10'  {$ifndef JScript}'#13
  +#10'  for i:=length(OpenXForms)-1 downto 0 do'#13#10'  begin'#13#10'    if ('
  +'OpenXForms[i].NodeName<>MainForm.Name) or (OpenXForms[i].NameSpace<>'''') t'
  +'hen'#13#10'      CloseXForm(OpenXForms[i].NodeName,OpenXForms[i].NameSpace)'
  +';'#13#10'  end;'#13#10'  if CurrentNode.MyForm<>nil  then'#13#10'    ShowXF'
  +'orm(CurrentNode.MyForm.Name,false,CurrentNode.NameSpace);'#13#10'  {$else}'
  +#13#10'  for i:=length(OpenXForms)-1 downto 0 do'#13#10'  begin'#13#10'    i'
  +'f OpenXForms[i].NameSpace='''' then'#13#10'      CloseXFormForDesign(OpenXF'
  +'orms[i].NodeName);'#13#10'  end;'#13#10'  {$endif}'#13#10#13#10#13#10'  {$i'
  +'fndef JScript}'#13#10'  // highlight component on screen'#13#10'  if Curren'
  +'tNode.NodeClass=''UI'' then'#13#10'    SetBooleanProperty(TComponent(Curren'
  +'tNode.ScreenObject),''IsSelected'',true)'#13#10'  else'#13#10'    SetBoolea'
  +'nProperty(CurrentNode,''IsSelected'',true);'#13#10'  if LastLazUserInterfac'
  +'eItemSelected <> '''' then'#13#10'  begin'#13#10'    LastLazUserInterfaceIt'
  +'emSelected:='''';'#13#10'  end;'#13#10'  if (CurrentNode.ScreenObject<>nil)'
  +' then'#13#10'  begin'#13#10'    LastLazUserInterfaceItemSelected:=CurrentNo'
  +'de.NodeName;'#13#10'  end;'#13#10' {$Else}'#13#10'    // HTML - highlight c'
  +'omponent on screen'#13#10'    mf:=MainForm;'#13#10'    mfn:=MainForm.Name;'
  +#13#10'    if CurrentNode.MyForm<>nil then'#13#10'      cfn:=CurrentNode.MyF'
  +'orm.Name'#13#10'    else'#13#10'    begin'#13#10'      //showmessage(''Curr'
  +'entNode.MyForm is nil'');'#13#10'      cfn:=mf.Name;'#13#10'    end;'#13#10
  +'    asm'#13#10'     try{'#13#10'     //alert(''highlight component on scree'
  +'n...''+CurrentNode.NodeName);'#13#10'     //alert(''cfn=''+cfn+'' mfn=''+mf'
  +'n);'#13#10'      if  (cfn!=mfn) {'#13#10'         $mod.ShowXFormForDesign(c'
  +'fn)  }'#13#10'      else {'#13#10'        var UIContent = document.getEleme'
  +'ntById(''UIRootContents'');'#13#10'        UIContent.style.display = "flex"'
  +';'#13#10'      }'#13#10#13#10'     var myobj = document.getElementById(Curr'
  +'entNode.NameSpace+CurrentNode.NodeName);'#13#10'     if ((myobj!=null)&&(my'
  +'obj!=cfn)) {'#13#10#13#10'       pas.HTMLUtils.Highlight(myobj.id);'#13#10
  +'       pas.XObjectInsp.LastHTMLUserInterfaceItemSelected = myobj.id;'#13#10
  +'       pas.XObjectInsp.LastHTMLUserInterfaceItemHadBorder = Border;'#13#10
  +#13#10'       }'#13#10'     //alert(''highlight component done.'');'#13#10' '
  +'    }catch(err) { alert(err.message+''  in XObjectInsp.HighlightNavigatorOb'
  +'ject''); }'#13#10'   end;'#13#10#13#10'  {$endif}'#13#10#13#10'  // ok we h'
  +'ave raised the relevant form, and highlighted the object.'#13#10'  // Now c'
  +'heck up the parent list in case it''s on a closed tab page...'#13#10'  Pare'
  +'ntNode:=FindParentOfNode(SystemNodeTree,CurrentNode);'#13#10'  while (Paren'
  +'tNode<>nil) and (ParentNode.NodeType<>''TXForm'') do'#13#10'  begin'#13#10
  +'    if ParentNode.NodeType=''TXTabSheet'' then'#13#10'    begin'#13#10'    '
  ,'  TabPage:=TXTabSheet(ParentNode.ScreenObject);'#13#10'      ParentNode:=Fi'
  +'ndParentOfNode(SystemNodeTree,ParentNode);'#13#10'      {$ifndef JScript}'
  +#13#10'      TXTabControl(ParentNode.ScreenObject).ActivePage:=TabPage;'#13
  +#10'      {$else}'#13#10'      ChangeTabPage(TabPage.NodeName,ParentNode.Nod'
  +'eName,'''');'#13#10'      {$endif}'#13#10'    end;'#13#10'    ParentNode:=F'
  +'indParentOfNode(SystemNodeTree,ParentNode);'#13#10'  end;'#13#10#13#10'end;'
  +#13#10#13#10'procedure RefreshObjectInspector(CurrentNode:TDataNode);'#13#10
  +'var AttributePrefix:string;'#13#10'  i:integer;'#13#10'  PropertiesNode,Eve'
  +'ntsNode,WidgetNode:TDataNode;'#13#10'  myAttribs:TNodeAttributesArray;'#13
  +#10'  s:boolean;'#13#10'  BoxName,AttribValue:String;'#13#10'  MyWidget:TObj'
  +'ect;'#13#10'begin'#13#10'  s:=SuppressEvents;'#13#10'  SuppressEvents:=true'
  +';'#13#10'  //showmessage(''RefreshObjectInspector. Node=''+CurrentNode.Node'
  +'Name);'#13#10'  PropertiesNode:=FindDataNodeById(SystemNodeTree,PropertyEdi'
  +'torScrollboxName,'''',true);'#13#10'  EventsNode:=FindDataNodeById(SystemNo'
  +'deTree,EventsEditorScrollboxName,'''',true);'#13#10#13#10'  if (PropertiesN'
  +'ode<>nil) and (CurrentNode<>nil)  then'#13#10'  begin'#13#10#13#10'      At'
  +'tributePrefix:=''OI''+AttributeEditorNameDelimiter+CurrentNode.NodeName;'#13
  +#10'      myAttribs:=CurrentNode.NodeAttributes;'#13#10#13#10'      for i:=0'
  +' to length(myAttribs)-1 do'#13#10'      begin'#13#10'        //exclude Supp'
  +'ressed properties that user shouldn''t see'#13#10'        if (FindSuppresse'
  +'dProperty(CurrentNode.NodeType,CurrentNode.NodeAttributes[i].AttribName)<0)'
  +#13#10'        and (CurrentNode.NodeAttributes[i].AttribName<>''ParentName'''
  +') then'#13#10'        begin'#13#10'          BoxName:=AttributePrefix+Attri'
  +'buteEditorNameDelimiter'#13#10'                    +CurrentNode.NodeAttribu'
  +'tes[i].AttribName+AttributeEditorNameDelimiter'#13#10'                    +'
  +'IntToStr(i+2);'#13#10'          AttribValue:=CurrentNode.NodeAttributes[i].'
  +'AttribValue;'#13#10'          WidgetNode:=FindDataNodeById(PropertiesNode,B'
  +'oxName,'''',false);'#13#10'          if WidgetNode<>nil then'#13#10'       '
  +'   begin'#13#10'            MyWidget:=WidgetNode.ScreenObject;'#13#10#13#10
  +'            if (CurrentNode.NodeAttributes[i].AttribType = ''Boolean'')'#13
  +#10'            and (myWidget is TXCheckBox) then'#13#10'            begin'
  +#13#10'               TXCheckBox(myWidget).Checked:=myStrtoBool(AttribValue)'
  +';'#13#10'            end'#13#10'            else if (myWidget is TXComboBox'
  +') then'#13#10'            begin'#13#10'              TXComboBox(myWidget).I'
  +'temValue:=AttribValue;'#13#10'            end'#13#10'            else if (m'
  +'yWidget is TXEditBox) then'#13#10'            begin'#13#10'              TX'
  +'EditBox(myWidget).ItemValue:=AttribValue;'#13#10'            end'#13#10'   '
  +'         else if (myWidget is TXColorPicker) then'#13#10'            begin'
  +#13#10'              TXColorPicker(myWidget).ItemValue:=AttribValue;'#13#10
  +'            end;'#13#10'          end;'#13#10'       end;'#13#10#13#10'    '
  +' end;'#13#10'  end;'#13#10#13#10'  //------------------- Refresh the regist'
  +'ered Events Tabpage -----------------------'#13#10'  if (EventsNode<>nil) a'
  +'nd (CurrentNode<>nil)  then'#13#10'  begin'#13#10#13#10'    if CurrentNode.'
  +'IsDynamic then'#13#10'    begin'#13#10'        for i:=0 to CurrentNode.MyEv'
  +'entTypes.count-1 do'#13#10'        begin'#13#10'          BoxName:=Attribut'
  +'ePrefix+AttributeEditorNameDelimiter'#13#10'                    +CurrentNod'
  +'e.MyEventTypes[i]+AttributeEditorNameDelimiter'#13#10'                    +'
  +'IntToStr(i+2);'#13#10'          AttribValue:=CurrentNode.myEventHandlers[i]'
  +'.TheCode;'#13#10#13#10'          WidgetNode:=FindDataNodeById(EventsNode,Bo'
  +'xName,'''',false);'#13#10'          if WidgetNode<>nil then'#13#10'        '
  +'  begin'#13#10'            MyWidget:=WidgetNode.ScreenObject;'#13#10'      '
  +'      if MyWidget<>nil then'#13#10'              TXEditBox(myWidget).ItemVa'
  +'lue:=AttribValue;'#13#10'          end;'#13#10#13#10'        end;'#13#10'  '
  +'  end;'#13#10'  end;'#13#10#13#10'  SuppressEvents:=s;'#13#10'end;'#13#10#13
  +#10'procedure DoSelectNavTreeNode(CurrentNode:TDataNode; refresh:boolean);'
  +#13#10'var'#13#10'  mynodeText,tmp, NodeId:string;'#13#10'  IFrameNode,tmpno'
  +'de:TDataNode;'#13#10'  okToContinue:Boolean;'#13#10'  i:integer;'#13#10'beg'
  +'in'#13#10'  okToContinue:=true;'#13#10'  {$ifdef JScript}'#13#10'  asm'#13
  +#10'    var ob=document.getElementById(''Grey1'');'#13#10'    if (ob!=null) '
  +'{'#13#10'      if (ob.style.display!=''none'') {'#13#10'        okToContinu'
  +'e=false;'#13#10'      }'#13#10'    }'#13#10'  end;'#13#10'  if length(OpenX'
  +'Forms)>0 then'#13#10'    okToContinue:=false;'#13#10'//  asm'#13#10'//    c'
  +'onsole.log(''DoSelectNavTreeNode ''+CurrentNode.NodeName+'' ok=''+okToConti'
  +'nue);'#13#10'//  end;'#13#10'  {$endif}'#13#10'   //!! Should to operate th'
  ,'is by node id, not text  :: HOWEVER, in the nav tree, node texts are all un'
  +'ique.'#13#10'  //showmessage(''DoSelectNavTreeNode ''+CurrentNode.NodeClass'
  +'+'' ''+CurrentNode.NodeType+'' ''+CurrentNode.NodeName+'' '');'#13#10'  if '
  +'(DesignMode) and (okToContinue) then'#13#10'  begin'#13#10'     {$ifdef Chr'
  +'omium}'#13#10'     {$ifndef JScript}'#13#10'     // For an SVG container, i'
  +'nspect the Title, and switch to a child SVG node, if appropriate.'#13#10'  '
  +'   if CurrentNode.NodeType=''TXSVGContainer'' then'#13#10'     begin'#13#10
  +'       IFrameNode:=SVGItemFromTitle(TXSVGContainer(CurrentNode.ScreenObject'
  +').FrameTitle);'#13#10'       if IFrameNode<>nil then'#13#10'         Curren'
  +'tNode:=IFrameNode;'#13#10'     end;'#13#10'     {$endif}'#13#10'     {$endi'
  +'f}'#13#10#13#10'      mynodeText := CurrentNode.NodeType+''(''+CurrentNode.'
  +'Nodename+'')'';'#13#10'     //showmessage(''mynodeText=''+mynodeText);'#13
  +#10#13#10'     TreeInFocus := UIRootNode;'#13#10#13#10'     {$ifndef JScript'
  +'}'#13#10'     TXTree(NavTreeComponent.ScreenObject).SelectedNodeText:=mynod'
  +'eText;  // (Windows) this selects the node in the navtree component, if cha'
  +'nged.'#13#10'     {$endif}'#13#10#13#10'     if (ObjectInspectorSelectedNav'
  +'TreeNode=nil)'#13#10'     or (ObjectInspectorSelectedNavTreeNode<>CurrentNo'
  +'de) then'#13#10'     begin'#13#10'       DeHighlightObject(ObjectInspectorS'
  +'electedNavTreeNode);'#13#10#13#10'       //display the attributes of the se'
  +'lected node in the object inspector'#13#10'       ObjectInspectorSelectedNa'
  +'vTreeNode:=CurrentNode;'#13#10'       PopulateObjectInspector(CurrentNode);'
  +#13#10'       {$ifdef JScript}'#13#10'       TXTree(NavTreeComponent).Select'
  +'edNodeText:=mynodeText;   // (Browser) this selects the node in the navtree'
  +' component, if changed.'#13#10'//       if not EventLogging.MacroEventList.'
  +'Replaying then'#13#10'//       begin'#13#10'//         asm'#13#10'//       '
  +'  setTimeout(function(){},10);              //alert(''refresher timeout'');'
  +#13#10'//         end;'#13#10'//       end;'#13#10'       {$endif}'#13#10#13
  +#10'       // Highlight the selected object (dotted border)'#13#10'       Hi'
  +'ghlightNavigatorObject(ObjectInspectorSelectedNavTreeNode);'#13#10'     end'
  +#13#10'     else  if (refresh) then'#13#10'     begin'#13#10'       // just '
  +'refresh all the displayed property values'#13#10'      // showmessage(''Ref'
  +'reshObjectInspector'');'#13#10'       RefreshObjectInspector(CurrentNode);'
  +#13#10'     end;'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'procedure  Sel'
  +'ectNavTreeNode(CurrentNode:TDataNode; refresh:boolean);'#13#10'begin'#13#10
  +'  {$ifndef JScript}'#13#10'  DoSelectNavTreeNode(CurrentNode,refresh);'#13
  +#10'  {$else}'#13#10'  asm'#13#10'  //console.log(''SelectNavTreeNode ''+Cur'
  +'rentNode.NodeName);'#13#10'  myTimeout(pas.XObjectInsp.DoSelectNavTreeNode,'
  +'5,''DoSelectNavTreeNode'',0,CurrentNode,refresh);'#13#10'  end;'#13#10'  {$'
  +'endif}'#13#10#13#10'end;'#13#10#13#10#13#10'procedure  SelectCodeTreeNode(C'
  +'urrentNode:TDataNode; refresh:boolean; TreeNodeText:String);'#13#10' var'#13
  +#10'    mynodeText,tmp, NodeId:string;'#13#10' begin'#13#10'     //!!!! Shou'
  +'ld to operate this by node id, not text  :: HOWEVER, in the code tree, node'
  +' texts are all unique.'#13#10#13#10'     //showmessage(''SelectCodeTreeNode'
  +' ''+CurrentNode.Nodename+'' >''+TreeNodeText+''<'');'#13#10'     //mynodeTe'
  +'xt := CurrentNode.NodeType+''(''+CurrentNode.Nodename+'')'';'#13#10'     my'
  +'nodeText := TreeNodeText;'#13#10#13#10'     TreeInFocus := CodeRootNode;'#13
  +#10#13#10'     {$ifndef JScript}'#13#10'     TXTree(CodeTreeComponent.Screen'
  +'Object).SelectedNodeText:=mynodeText;  // this selects the node in the code'
  +'tree component, if changed.'#13#10'     {$endif}'#13#10#13#10'     if (refr'
  +'esh)'#13#10'     or (ObjectInspectorSelectedCodeTreeNode=nil)'#13#10'     o'
  +'r (ObjectInspectorSelectedCodeTreeNode<>CurrentNode) then'#13#10'     begin'
  +#13#10#13#10'       if DesignMode then'#13#10'       begin'#13#10'         O'
  +'bjectInspectorSelectedCodeTreeNode:=CurrentNode;'#13#10'         {$ifdef JS'
  +'cript}'#13#10'         TXTree(CodeTreeComponent).SelectedNodeText:=myNodeTe'
  +'xt;  // this selects the node in the codetree component, if changed.'#13#10
  +'         {$endif}'#13#10#13#10'       end;'#13#10'     end;'#13#10'     Obj'
  +'ectInspectorSelectedCodeNodeText:=TreeNodeText;'#13#10' end;'#13#10#13#10'p'
  +'rocedure RebuildResourcesTree;'#13#10' var'#13#10'     newtreestring, nodet'
  +'ext:string;'#13#10'     AttrParams:TNodeAttributesArray;'#13#10'     ResTre'
  +'e:TXTree;'#13#10'     i:integer;'#13#10'     mynode:TDataNode;'#13#10' begi'
  +'n'#13#10'   //showmessage(''ConstructSystemTreeString for resources'');'#13
  +#10'   ClearResourceInspector;'#13#10'   DeleteNodeChildren(ResourcesNodeTre'
  +'e);'#13#10#13#10'   SetupAvailableResources;'#13#10#13#10'   newtreestring:'
  +'= ConstructSystemTreeString(ResourcesNodeTree,0,false,false,nil,'''');'#13
  ,#10'   ResTree:=TXTree(ResourceTreeComponent.ScreenObject);'#13#10'   {$ifnd'
  +'ef JScript}'#13#10'   TXTree(ResourceTreeComponent.ScreenObject).TreeData:='
  +'newtreestring;'#13#10'   TmyTreeView(ResTree.myControl).ExpandTreeNodes(Res'
  +'Tree.OpenToLevel);'#13#10'   {$else}'#13#10'   TXTree(ResourceTreeComponent'
  +').TreeData:=newtreestring;'#13#10'   {$endif}'#13#10'end;'#13#10#13#10'proc'
  +'edure RebuildNavigatorTree;'#13#10'var'#13#10'    newtreestring,formstring:'
  +'string;'#13#10'    AttrParams:TNodeAttributesArray;'#13#10'    i,j:integer;'
  +#13#10'    fm:TForm;'#13#10'    tempNode:TDataNode;'#13#10'begin'#13#10'(*'
  +#13#10'actual node tree structure...'#13#10'(SystemNodeTree)'#13#10' |'#13#10
  +'UIRootNode'#13#10'   |'#13#10'   MainForm'#13#10'       |'#13#10'       Who'
  +'le of main form'#13#10'   XForms'#13#10#13#10'what we want to see on the na'
  +'vigator is....'#13#10'UIRootNode'#13#10'   |'#13#10'   MainForm'#13#10'    '
  +'   UIRoot (centre section only)'#13#10'       MainMenu'#13#10'       Non-vi'
  +'sual components'#13#10'   XForms (dynamic only)'#13#10#13#10'*)'#13#10#13#10
  +'  // construct string for the ''UI'' section of the main form'#13#10'  //sh'
  +'owmessage(''ConstructSystemTreeString for nav'');'#13#10'  newtreestring:= '
  +'ConstructSystemTreeString(UIRootNode,0,true,false,nil,'''');'#13#10'  {$ifn'
  +'def JScript}'#13#10' // WriteToFile(''navtree.txt'',newtreestring);'#13#10
  +'  TXTree(NavTreeComponent.ScreenObject).TreeData:=newtreestring;'#13#10'  {'
  +'$else}'#13#10'  TXTree(NavTreeComponent).TreeData:=newtreestring;'#13#10'  '
  +'{$endif}'#13#10'  if ObjectInspectorSelectedNavTreeNode<>nil then'#13#10'  '
  +'begin'#13#10'    //showmessage(''selecting node ''+ObjectInspectorSelectedN'
  +'avTreeNode.nodename);'#13#10'    tempNode:=ObjectInspectorSelectedNavTreeNo'
  +'de;'#13#10'    ObjectInspectorSelectedNavTreeNode:=nil;   // so it will be '
  +'selected/green bordered'#13#10'    SelectNavTreeNode(tempNode,true);'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'procedure RebuildCodeTree;'#13#10'var'#13#10
  +'    newtreestring,formstring:string;'#13#10'    AttrParams:TNodeAttributesA'
  +'rray;'#13#10'    i,e:integer;'#13#10'    fm:TForm;'#13#10'begin'#13#10'(*'
  +#13#10'CodeRootNode'#13#10'   |'#13#10'   Unit1'#13#10'   ...'#13#10'   Even'
  +'t Handlers'#13#10'      |'#13#10'      Event 1'#13#10'      ...'#13#10'   G'
  +'PU Canvas widgets'#13#10'      |'#13#10'      Widget 1 Animation Code'#13#10
  +'*)'#13#10#13#10'  // construct string for the ''Code'' section of the main '
  +'form'#13#10'  //showmessage(''ConstructSystemTreeString for code'');'#13#10
  +'  newtreestring:= ConstructSystemTreeString(CodeRootNode,0,true,false,nil,'
  +''''');'#13#10#13#10'  // For improved visibility, also add nodes to this tr'
  +'ee for all event handlers'#13#10'  // defined within the UIRootNode'#13#10
  +'  e:=0;'#13#10'  newtreestring := ''["Root",''+newtreestring + ConstructEve'
  +'ntsTreeString(SystemNodeTree,e);'#13#10#13#10'  // AND any GPUCanvas widget'
  +'s, for access to the AnimationCode property'#13#10'  newtreestring := newtr'
  +'eestring + ConstructGPUCodeTreeString(SystemNodeTree);'#13#10#13#10'  newtr'
  +'eestring := newtreestring + '']'';'#13#10#13#10#13#10'  {$ifndef JScript}'
  +#13#10'  TXTree(CodeTreeComponent.ScreenObject).TreeData:=newtreestring;'#13
  +#10'  {$else}'#13#10'  TXTree(CodeTreeComponent).TreeData:=newtreestring;'#13
  +#10'  {$endif}'#13#10'  if ObjectInspectorSelectedCodeTreeNode<>nil then'#13
  +#10'  begin'#13#10'    SelectCodeTreeNode(ObjectInspectorSelectedCodeTreeNod'
  +'e,true,ObjectInspectorSelectedCodeNodeText);'#13#10'  end;'#13#10#13#10'end'
  +';'#13#10#13#10'procedure HandleNavTreeClickEvent(DataNodeId:String; TreeNod'
  +'eText:String);'#13#10'var CurrentNode :TDataNode;'#13#10'begin'#13#10'//Sho'
  +'wMessage(''ntc event. node=''+DataNodeId+'' Text=''+TreeNodeText);'#13#10' '
  +' if TreeNodeText<>''Root'' then'#13#10'  begin'#13#10'    CurrentNode:=Find'
  +'DataNodeById(SystemNodeTree,DataNodeId,'''',true);'#13#10'    if CurrentNod'
  +'e=nil then'#13#10'      showmessage(''Cannot find node ''+DataNodeId+'' in '
  +'XObjectInsp.HandleNavTreeClickEvent'')'#13#10'    else'#13#10'    begin'#13
  +#10'      SelectNavTreeNode(CurrentNode,false);'#13#10'    end;'#13#10#13#10
  +'  end;'#13#10'end;'#13#10#13#10'procedure HandleCodeTreeClickEvent(TreeNode'
  +'Id:String; TreeNodeText:String);'#13#10'var CurrentNode :TDataNode;'#13#10
  +'begin'#13#10'//ShowMessage(''ntc event. node=''+TreeNodeId);'#13#10'  if (T'
  +'reeNodeText<>CodeRootName)'#13#10'  and (TreeNodeText<>''Root'')'#13#10'  a'
  +'nd (TreeNodeText<>''Root(Events)'')'#13#10'  and (TreeNodeText<>''Root(GPUC'
  +'ode)'') then'#13#10'  begin'#13#10'    CurrentNode:=FindDataNodeById(System'
  +'NodeTree,TreeNodeId,'''',true);'#13#10'    if CurrentNode<>nil then'#13#10
  +'      SelectCodeTreeNode(CurrentNode,false,TreeNodeText);'#13#10'  end'#13
  +#10'  else'#13#10'    ObjectInspectorSelectedCodeTreeNode:=nil;'#13#10'end;'
  +#13#10#13#10'procedure CopyNavNode( NodeToCopy:TDataNode);'#13#10'begin'#13
  ,#10'   // Copy an item from the Navigator tree.  Populates ObjectInspectorSo'
  +'urceNode.'#13#10'   if (NodeToCopy<>nil)'#13#10'   and (NodeToCopy.NodeName'
  +'<>'''') and (NodeToCopy.NodeType<>'''') then'#13#10'   begin'#13#10'     Ob'
  +'jectInspectorSourceNode:=CopyNode(NodeToCopy,true);'#13#10'     ObjectInspe'
  +'ctorSourceCut:=false;'#13#10'     //ShowMessage(''CopyNavNode.  Source node'
  +' is ''+NodeToCopy.NodeName);'#13#10'   end'#13#10'   else ShowMessage(''Sel'
  +'ect an item (from the Navigation Tree) to copy before calling this action'''
  +');'#13#10'end;'#13#10#13#10'function PickItem( SelectedResourcesTreeNode:TD'
  +'ataNode):string;'#13#10'begin'#13#10'   // Copy an item from the Resources '
  +'tree, ready for paste elsewhere'#13#10'   if (SelectedResourcesTreeNode<>ni'
  +'l)'#13#10'   and (SelectedResourcesTreeNode.NodeName<>'''') and (SelectedRe'
  +'sourcesTreeNode.NodeType<>'''')'#13#10'   and (SelectedResourcesTreeNode.No'
  +'deType<>''Demo'') and (SelectedResourcesTreeNode.NodeType<>''Test'') then'
  +#13#10'   begin'#13#10'      ObjectInspectorSourceNode:=CopyNode(SelectedRes'
  +'ourcesTreeNode,true);'#13#10'      ObjectInspectorSourceCut:=false;'#13#10
  +'   end;'#13#10'//   else'#13#10'//     ShowMessage(''Select an item (from t'
  +'he Resource Tree) to copy before calling this action'');'#13#10'end;'#13#10
  +#13#10'procedure  SelectResourceTreeNode(TreeNodeText:string;CurrentNode:TDa'
  +'taNode);'#13#10'var'#13#10'   mynodeid:string;'#13#10'   ResourceTreeNode:T'
  +'DataNode;'#13#10'begin'#13#10'  //!!!! Should to operate this by node id, n'
  +'ot text  :: HOWEVER, in the resource tree, node texts are all unique.'#13#10
  +'  //showmessage(''SelectResourceTreeNode ''+TreeNodeText);'#13#10'  mynodei'
  +'d:=CurrentNode.NodeName;'#13#10'  AvailableResourcesSelectedNode:=CurrentNo'
  +'de;'#13#10'  PopulateResourceInspector(CurrentNode);'#13#10'end;'#13#10#13
  +#10'procedure HandleResourcesTreeClickEvent(nodeId,TreeNodeId:String);'#13#10
  +'var CurrentNode :TDataNode;'#13#10'begin'#13#10'  CurrentNode:=FindDataNode'
  +'ById(ResourcesNodeTree,TreeNodeId,'''',true);'#13#10'  //ShowMessage(''Hand'
  +'leResourcesTreeClickEvent treenodeId=''+TreeNodeId+'' currentnode=''+curren'
  +'tnode.NodeName);'#13#10'  if CurrentNode=nil then'#13#10'    showmessage('''
  +'Cannot find node ''+TreeNodeId+'' in XObjectInsp.HandleResourcesTreeClickEv'
  +'ent'')'#13#10'  else'#13#10'  begin'#13#10'    SelectResourceTreeNode(TreeN'
  +'odeId,CurrentNode);'#13#10'    if AvailableResourcesSelectedNode.NodeClass<'
  +'>''RSS'' then'#13#10'      PickItem(CurrentNode);'#13#10'  end;'#13#10#13#10
  +'end;'#13#10#13#10'function DeleteItemQuietly(InTree,SelectedNode:TDataNode)'
  +':string;'#13#10'var'#13#10'   ParentNode:TDataNode;'#13#10'begin'#13#10'  /'
  +'/ParentNode:=FindParentOfNodeByName(InTree,SelectedNode.NodeName);'#13#10' '
  +' ParentNode:=FindParentOfNode(InTree,SelectedNode);'#13#10'     DeleteNode('
  +'ParentNode,SelectedNode);'#13#10#13#10'     if InTree.NodeName=SystemRootNa'
  +'me then'#13#10'     begin'#13#10'      // showmessage(''reset selected node'
  +' to ''+ParentNode.NodeName);'#13#10'       ObjectInspectorSelectedNavTreeNo'
  +'de:=ParentNode;'#13#10'     end'#13#10'     else if InTree.NodeName=CodeRoo'
  +'tName then'#13#10'     begin'#13#10'       ObjectInspectorSelectedCodeTreeN'
  +'ode:=ParentNode;'#13#10'       ObjectInspectorSelectedCodeNodeText:='''';  '
  +'//!!!! ??'#13#10'     end;'#13#10#13#10'end;'#13#10#13#10#13#10'function De'
  +'leteItem(InTree,SelectedNode:TDataNode):Boolean;'#13#10'var'#13#10'  Delete'
  +'d:Boolean;'#13#10'begin'#13#10'  Deleted:=false;'#13#10'  if  (SelectedNode'
  +'=nil) or (SelectedNode.NodeName='''') then'#13#10'    ShowMessage(''Select '
  +'an item on the Navigation Tree before calling this action'')'#13#10'  else'
  +#13#10'  begin'#13#10'    if SelectedNode.IsDynamic then'#13#10'    begin'#13
  +#10'      if (SelectedNode.NodeName=UIProjectRootName)'#13#10'      or (Sele'
  +'ctedNode.NodeName=CodeRootName)'#13#10'      or (SelectedNode.NodeName=Reso'
  +'urceDataRootName)'#13#10'      then'#13#10'        ShowMessage(''Cannot rem'
  +'ove the root node'')'#13#10'      else'#13#10'      begin'#13#10'         D'
  +'eleteItemQuietly(InTree,SelectedNode);'#13#10#13#10'         if DesignMode '
  +'then'#13#10'         begin'#13#10'           {$ifdef JScript}'#13#10'      '
  +'     if not RunningDeployedRuntime then'#13#10'           {$endif}'#13#10' '
  +'          SaveSystemData;'#13#10#13#10'           if InTree.NodeName=System'
  +'RootName then'#13#10'           begin'#13#10'              RebuildNavigator'
  +'Tree;'#13#10'              RebuildCodeTree;  // (to remove displayed event '
  +'code items)'#13#10'           end'#13#10' //          else if InTree.NodeNa'
  +'me=ResourceDataRootName then'#13#10' //          begin'#13#10' //          '
  +'   RebuildResourcesTree;'#13#10' //          end'#13#10'           else if '
  +'InTree.NodeName=CodeRootName then'#13#10'           begin'#13#10'          '
  +'    RebuildCodeTree;'#13#10'           end;'#13#10'         end;'#13#10#13
  ,#10'         Deleted:=true;'#13#10'      end;'#13#10'    end'#13#10'    else'
  +#13#10'      showmessage(''Lazarus-designed components cannot be deleted her'
  +'e.  Only dynamically created components may be deleted at runtime'');'#13#10
  +'  end;'#13#10'  result:=Deleted;'#13#10'end;'#13#10#13#10'procedure CutItem'
  +'Quietly(InTree,SelectedNode:TDataNode);'#13#10'begin'#13#10'  ObjectInspect'
  +'orSourceNode:=CopyNode(SelectedNode,true);'#13#10'  //ShowMessage(''cutting'
  +' ''+ObjectInspectorSourceNode.NodeName);'#13#10'  ObjectInspectorSourceCut:'
  +'=true;'#13#10'  DeleteItemQuietly(InTree,SelectedNode);'#13#10'  //ShowMess'
  +'age(''finished cutting.  oi node is ''+ObjectInspectorSourceNode.NodeName);'
  +#13#10'end;'#13#10#13#10'function CutItem(InTree,SelectedNode:TDataNode):str'
  +'ing;'#13#10'var'#13#10'   myName:string;'#13#10'begin'#13#10'  //ShowMessag'
  +'e(''cutitem.  selectednode=''+SelectedNode.NodeName);'#13#10'  if  (Selecte'
  +'dNode=nil) or (SelectedNode.NodeName='''') then'#13#10'    ShowMessage(''Se'
  +'lect an item on the Navigation Tree before calling this action'')'#13#10'  '
  +'else'#13#10'  begin'#13#10'    if SelectedNode.IsDynamic then'#13#10'    be'
  +'gin'#13#10'      if (SelectedNode.NodeName=UIProjectRootName)'#13#10'      '
  +'or (SelectedNode.NodeName=ResourceDataRootName)'#13#10'      then'#13#10'  '
  +'      ShowMessage(''Cannot remove the root node'')'#13#10'      else'#13#10
  +'      begin'#13#10'        myName:=SelectedNode.NodeName;'#13#10'        Cu'
  +'tItemQuietly(InTree,SelectedNode);'#13#10#13#10'        if designMode then'
  +#13#10'        begin'#13#10'          SaveSystemData;'#13#10#13#10'         '
  +' if InTree.NodeName=SystemRootName then'#13#10'          begin'#13#10'     '
  +'       RebuildNavigatorTree;'#13#10'            RebuildCodeTree;'#13#10'   '
  +'       end;'#13#10'  //        else if InTree.NodeName=ResourceDataRootName'
  +' then'#13#10'  //          RebuildResourcesTree;'#13#10'        end;'#13#10
  +'        ShowMessage(''Node ''+ myName +'' ready to paste'');'#13#10#13#10' '
  +'     end;'#13#10'    end'#13#10'    else'#13#10'      showmessage(''Lazarus'
  +'-designed components cannot be deleted here.  Only dynamically created comp'
  +'onents may be deleted at runtime'');'#13#10#13#10'  end;'#13#10'end;'#13#10
  +#13#10'procedure RenameChildNodes(MyNode:TDataNode;Prefix:string);'#13#10'va'
  +'r'#13#10'   i:integer;'#13#10'begin'#13#10'  for i:=0 to length(MyNode.Chil'
  +'dNodes)-1 do'#13#10'  begin'#13#10'    MyNode.ChildNodes[i].NodeName:=Prefi'
  +'x + MyNode.ChildNodes[i].NodeName;'#13#10'    RenameChildNodes(MyNode.Child'
  +'Nodes[i],Prefix);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure RenameCo'
  +'mpositeNodes(MyNode:TDataNode;NameSpace:string);'#13#10'var'#13#10'   i:int'
  +'eger;'#13#10'begin'#13#10'  for i:=0 to length(MyNode.ChildNodes)-1 do'#13
  +#10'  begin'#13#10'    MyNode.ChildNodes[i].NameSpace:=NameSpace;'#13#10'   '
  +' RenameChildNodes(MyNode.ChildNodes[i],NameSpace);'#13#10'  end;'#13#10'end'
  +';'#13#10#13#10#13#10'procedure PasteItemQuietly(InTree:TDataNode;pos:intege'
  +'r;ParentNode,SourceNode:TDataNode);'#13#10'var'#13#10'   TreePos:integer;'
  +#13#10'   glb:Boolean;'#13#10'   //pn:String;'#13#10'begin'#13#10'  //showme'
  +'ssage(''PasteItemQuietly'');'#13#10'  SourceNode.ScreenObject:=nil;'#13#10
  +'  TreePos:=pos;'#13#10'  {$ifndef JScript}'#13#10'  glb:=  GlobalSuppressFr'
  +'ameDisplay;'#13#10'  {$endif}'#13#10#13#10'  if ObjectInspectorSourceCut=fa'
  +'lse then'#13#10'    // this is a copy - have to rename all child nodes'#13
  +#10'    if SourceNode.NodeType <> ''TXComposite'' then'#13#10'      RenameCh'
  +'ildNodes(SourceNode,SourceNode.NodeName);    //!!!! this will break any ref'
  +'erences in event code to these nodes'#13#10#13#10'  if InTree.NodeName=Syst'
  +'emRootName then'#13#10'  begin'#13#10'    // un-highlight selected item in '
  +'nav tree'#13#10'    if ObjectInspectorSelectedNavTreeNode<>nil then'#13#10
  +'    {$ifndef JScript}'#13#10'      if ObjectInspectorSelectedNavTreeNode.No'
  +'deClass=''UI'' then'#13#10'        SetBooleanProperty(ObjectInspectorSelect'
  +'edNavTreeNode.ScreenObject,''IsSelected'',false)'#13#10'      else'#13#10' '
  +'       SetBooleanProperty(ObjectInspectorSelectedNavTreeNode,''IsSelected'''
  +',false);'#13#10'      {$else}'#13#10'      if IsPublishedProp(ObjectInspect'
  +'orSelectedNavTreeNode,''IsSelected'') then'#13#10'        SetBoolProp(Objec'
  +'tInspectorSelectedNavTreeNode,''IsSelected'',false);'#13#10'      {$endif}'
  +#13#10#13#10'    //.........Create the new node and associated screen object'
  +'........................'#13#10'    {$ifndef JScript}'#13#10'    GlobalSupp'
  +'ressFrameDisplay:=false;'#13#10'    {$endif}'#13#10'    ObjectInspectorSele'
  +'ctedNavTreeNode:=InsertSystemNode(ParentNode,SourceNode,TreePos);'#13#10'  '
  +'  {$ifndef JScript}'#13#10'    GlobalSuppressFrameDisplay:=glb;'#13#10'    '
  +'{$endif}'#13#10#13#10'    if DesignMode then'#13#10'    begin'#13#10'      '
  +'SaveSystemData;'#13#10#13#10'      // rebuild the system description tree'
  ,#13#10'      RebuildNavigatorTree;'#13#10'      RebuildCodeTree;'#13#10'    '
  +'end;'#13#10'  end;'#13#10'end;'#13#10#13#10'function CanAddChildToParent(Pa'
  +'rentNode,SourceNode:TDataNode):Boolean;'#13#10'begin'#13#10'  result:=false'
  +';'#13#10' // showmessage(''add ''+SourceNode.NodeClass+'' to ''+ParentNode.'
  +'NodeType);'#13#10'  if (ParentNode.NodeType<>''TXSVGContainer'') and (Sourc'
  +'eNode.NodeClass = ''SVG'') then'#13#10'     ShowMessage(''Can only paste SV'
  +'G items to an SVGContainer.'')'#13#10'  else if (ParentNode.NodeType=''TXSV'
  +'GContainer'') and (SourceNode.NodeClass <> ''SVG'') then'#13#10'     ShowMe'
  +'ssage(''Can only paste SVG items to an SVGContainer.'')'#13#10'  else if (P'
  +'arentNode.NodeType=''TXTabControl'') and (SourceNode.NodeType<>''TXTabSheet'
  +''') then'#13#10'    ShowMessage(''Only a TabSheet can be inserted under a T'
  +'abControl element'')'#13#10'  else if (ParentNode.NodeType<>''TXTabControl'
  +''') and (SourceNode.NodeType=''TXTabSheet'') then'#13#10'    ShowMessage('''
  +'A TabSheet can only be inserted under a TabControl element'')'#13#10'  else'
  +' if (ParentNode.NodeType=''TXMainMenu'') and (SourceNode.NodeType<>''TXMenu'
  +'Item'') then'#13#10'    ShowMessage(''Only a MenuItem can be inserted under'
  +' a MainMenu element'')'#13#10'  else if (ParentNode.NodeType<>''TXMainMenu'
  +''') and (ParentNode.NodeType<>''TXMenuItem'') and(SourceNode.NodeType=''TXM'
  +'enuItem'') then'#13#10'    ShowMessage(''A MenuItem can only be inserted un'
  +'der a MainMenu or MenuItem element'')'#13#10'  else if (ParentNode.NodeType'
  +'=''TXForm'') and (SourceNode.NodeType=''TXMainMenu'') and (ParentNode.NodeN'
  +'ame=MainForm.Name) then'#13#10'    ShowMessage(''The Main Form already has '
  +'a Main Menu'')'#13#10'  else if (ParentNode.NodeType<>''TXForm'') and (Sour'
  +'ceNode.NodeType=''TXMainMenu'') then'#13#10'    ShowMessage(''A MainMenu ca'
  +'n only be inserted under a Form element'')'#13#10'  //else if (ParentNode.N'
  +'odeType<>''TXForm'') and (SourceNode.NodeClass=''NV'') then'#13#10'  else i'
  +'f (SourceNode.NodeClass=''NV'') and (ParentNode<>UIRootNode) then'#13#10'  '
  +'  ShowMessage(ParentNode.NodeType+'' ''+SourceNode.NodeClass+'' ''+''A non-'
  +'visual component can only be inserted under the UI Root Node'')'#13#10'  el'
  +'se if (ParentNode.NodeClass=''NV'') then'#13#10'    ShowMessage(''A non-vis'
  +'ual component cannot contain child nodes'')'#13#10'  else if (SourceNode.No'
  +'deType=''TXForm'') and (ParentNode<>UIRootNode) then'#13#10'    ShowMessage'
  +'(''XForm can only be added to the UI Root Node'')'#13#10'  else if (SourceN'
  +'ode.NodeClass<>''NV'') and (SourceNode.NodeType<>''TXForm'') and (ParentNod'
  +'e=UIRootNode) then'#13#10'    ShowMessage(''Only XForm and Non-Visual items'
  +' can be added to the UI Root Node - please select another container'')'#13
  +#10'  else if (SourceNode.NodeClass=''UI'') and (ParentNode.NodeType=''TXFor'
  +'m'') and (ParentNode.NodeName=MainForm.Name) then'#13#10'    ShowMessage('''
  +'In the main form, UI items can only be added within the UI Root Node'')'#13
  +#10'  else'#13#10'    // all ok - go ahead and paste'#13#10'    result:=true'
  +';'#13#10#13#10'end;'#13#10#13#10'function OINavTreeAllowDrop(DstNode:TDataN'
  +'ode):Boolean;'#13#10'var'#13#10'  SrcNode:TDataNode;'#13#10'  ok:Boolean;'
  +#13#10'begin'#13#10'  ok:=true;'#13#10'  SrcNode:=ObjectInspectorSourceNode;'
  +#13#10'//showmessage(''OINavTreeAllowDrop. Dest=''+DstNode.NodeName+'' Src='
  +'''+SrcNode.NodeName);'#13#10'      // cannot drop to Root Node.'#13#10'    '
  +'  if (DstNode.NodeClass=''Root'')'#13#10'      and (SrcNode.NodeType <> ''T'
  +'XForm'') then'#13#10'        ok:=false;'#13#10'      // on main form, canno'
  +'t drop to Form node'#13#10'      if (DstNode.NodeType=''TXForm'')'#13#10'  '
  +'    and (DstNode.NodeName=MainForm.Name)'#13#10'      and (SrcNode.NodeType'
  +' <> ''TXMainMenu'')'#13#10'      and (SrcNode.NodeClass <> ''NV'')'#13#10' '
  +'     and (SrcNode.NodeClass <> ''RNV'') then'#13#10'        ok:=false;'#13
  +#10'      // have to drop txform onto the UI Root node'#13#10'      if (DstN'
  +'ode<>UIRootNode)'#13#10'      and (SrcNode.NodeType=''TXForm'') then'#13#10
  +'        ok:=false;'#13#10'      // cannot drop non-menu items into a menu'
  +#13#10'      if ((DstNode.NodeType = ''TXMainMenu'')'#13#10'      or (DstNod'
  +'e.NodeType = ''TXMenuItem''))'#13#10'      and (SrcNode.NodeType <> ''TXMen'
  +'uItem'') then'#13#10'        ok:=false;'#13#10'      // cannot drop menu it'
  +'ems into a non-menu'#13#10'      if (DstNode.NodeType <> ''TXMainMenu'')'#13
  +#10'      and (DstNode.NodeType <> ''TXMenuItem'')'#13#10'      and (SrcNode'
  +'.NodeType = ''TXMenuItem'') then'#13#10'        ok:=false;'#13#10'      // '
  +'main menu can only drop to a form item'#13#10'      if (DstNode.NodeType <>'
  +' ''TXForm'')'#13#10'      and (SrcNode.NodeType = ''TXMainMenu'') then'#13
  +#10'        ok:=false;'#13#10'      // main form already has a main menu'#13
  +#10'      if (DstNode.NodeType = ''TXForm'')'#13#10'      and (SrcNode.NodeT'
  ,'ype = ''TXMainMenu'')'#13#10'      and (DstNode.NodeName=MainForm.Name) the'
  +'n'#13#10'        ok:=false;'#13#10'      // cannot drop tab page except int'
  +'o a tab control'#13#10'      if (DstNode.NodeType<>''TXTabControl'')'#13#10
  +'      and (SrcNode.NodeType=''TXTabSheet'') then'#13#10'        ok:=false;'
  +#13#10'      if (DstNode.NodeType=''TXTabControl'')'#13#10'      and (SrcNod'
  +'e.NodeType<>''TXTabSheet'') then'#13#10'        ok:=false;'#13#10'      // '
  +'can only drop non-visuals onto the UI Root node'#13#10'      if (DstNode<>U'
  +'IRootNode)'#13#10'      and ((SrcNode.NodeClass = ''NV'')'#13#10'        or'
  +' (SrcNode.NodeClass = ''RNV'')) then'#13#10'        ok:=false;'#13#10'     '
  +' // can only drop SVG items into an SVG Container'#13#10'      if (DstNode.'
  +'NodeType<>''TXSVGContainer'') and (DstNode.NodeClass<>''SVG'')'#13#10'     '
  +' and ((SrcNode.NodeClass = ''SVG'') or (SrcNode.NodeClass = ''RSVG'')) then'
  +#13#10'         ok:=false;'#13#10'      if ((DstNode.NodeType=''TXSVGContain'
  +'er'') or (DstNode.NodeClass=''SVG''))'#13#10'      and (SrcNode.NodeClass <'
  +'> ''SVG'') and (SrcNode.NodeClass <> ''RSVG'') then'#13#10'         ok:=fal'
  +'se;'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'procedure SetSystemName(N'
  +'ewName:String);'#13#10'begin'#13#10'  UIRootNode.SetAttributeValue(''System'
  +'Name'',NewName);'#13#10'  {$ifdef JScript}'#13#10'  asm'#13#10'    document'
  +'.title=NewName;'#13#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'pr'
  +'ocedure LoadNamedSystem(sysname:string);'#13#10'var'#13#10'  SystemDescript'
  +'ion,filename:String;'#13#10'begin'#13#10'//   basename:=myStringReplace(sys'
  +'name,''_xide'','''',1,-1);'#13#10'   filename:=sysname+''.xide'';'#13#10'  '
  +' {$ifndef JScript}'#13#10'   // on Desktop, saved systems are in this sub-f'
  +'older...'#13#10'   filename:=''SavedSystems/''+filename;'#13#10'   {$endif}'
  +#13#10'   SystemDescription:=ReadFromLocalStore(filename);'#13#10#13#10'   D'
  +'oSystemLoad(SystemDescription,sysname);'#13#10'   if UIRootNode.GetAttribut'
  +'e(''SystemName'',true).AttribValue=''XIDESystem'' then'#13#10'     SetSyste'
  +'mName(sysname);'#13#10'//   UIRootNode.SetAttributeValue(''SystemName'',sys'
  +'name);'#13#10'end;'#13#10#13#10'procedure LoadCompositeResource(CompNode:Td'
  +'ataNode);'#13#10'var'#13#10'  SystemDescription:String;'#13#10'begin'#13#10
  +'   SystemDescription:=CompNode.GetAttribute(''SourceString'',false).AttribV'
  +'alue;'#13#10#13#10'   DoSystemLoad(SystemDescription,CompNode.NodeName);'#13
  +#10' //  UIRootNode.SetAttributeValue(''SystemName'',CompNode.NodeName);'#13
  +#10#13#10'end;'#13#10#13#10'function PasteItem(NavTreeDestinationNode:TDataN'
  +'ode;OrigSourceNode:TDataNode;NewName:String):string;'#13#10'var'#13#10'//  '
  +' NewName:string;'#13#10'   SourceNode,ParentNode, NewNode:TDataNode;'#13#10
  +'   TreePos:integer;'#13#10'   TargetIsContainer:Boolean;'#13#10'   Composit'
  +'eResource:Boolean;'#13#10'   InterfaceNodes:TNodesArray;'#13#10'   i,j:inte'
  +'ger;'#13#10'begin'#13#10'  if  OrigSourceNode.NodeClass=''RSS'' then'#13#10
  +'    EXIT;'#13#10'  // make a copy of the source node (as we may make change'
  +'s here)'#13#10'  SourceNode:=CopyNode(OrigSourceNode,true);'#13#10#13#10'  '
  +'CompositeResource:=false;'#13#10'  //showmessage(''PasteItem...source=''+So'
  +'urceNode.Nodename+'' dest=''+NavTreeDestinationNode.NodeName);'#13#10'  //s'
  +'howmessage(''PasteItem...dest=''+NavTreeDestinationNode.Nodename+'' type='''
  +'+NavTreeDestinationNode.NodeType+'' class=''+NavTreeDestinationNode.NodeCla'
  +'ss);'#13#10'  if (NavTreeDestinationNode=nil) or (SourceNode=nil)'#13#10'  '
  +'or (NavTreeDestinationNode.NodeName='''') or (SourceNode.NodeName='''') the'
  +'n'#13#10'  begin'#13#10'      if (NavTreeDestinationNode=nil) or (NavTreeDe'
  +'stinationNode.NodeName='''') then'#13#10'        ShowMessage(''Select a des'
  +'tination to paste to before calling this action'') ;'#13#10'      if (Sourc'
  +'eNode=nil) or (SourceNode.NodeName='''') then'#13#10'        ShowMessage('''
  +'Select an item to copy before calling this action'');'#13#10'  end'#13#10' '
  +' else'#13#10'  begin'#13#10'    //ShowMessage(''PasteItem.  Source=''+Sourc'
  +'eNode.NodeName+'' Dest=''+NavTreeDestinationNode.NodeName);'#13#10'    if ('
  +'SourceNode.NodeClass=''RUI'')'#13#10'    and (SourceNode.NodeType=''TXCompo'
  +'site'') then'#13#10'      CompositeResource:=true;'#13#10#13#10'    if Sour'
  +'ceNode.NodeClass=''RUI'' then SourceNode.NodeClass:=''UI'';'#13#10'    if S'
  +'ourceNode.NodeClass=''RNV'' then SourceNode.NodeClass:=''NV'';'#13#10'    i'
  +'f SourceNode.NodeClass=''RSVG'' then SourceNode.NodeClass:=''SVG'';'#13#10
  +#13#10'    if (SourceNode.NodeClass<>''UI'')'#13#10'    and (SourceNode.Node'
  +'Class<>''NV'')'#13#10'    and (SourceNode.NodeClass<>''SVG'')'#13#10'    th'
  +'en'#13#10'    begin'#13#10'       ShowMessage(''Can only add UI, NV and SVG'
  +' items to the Navigator tree'');'#13#10'       EXIT;'#13#10'    end;'#13#10
  +#13#10'    // Is the destination node a container (paste new child) or not ('
  ,'paste sibling)'#13#10'    if (NavTreeDestinationNode = UIRootNode)'#13#10' '
  +'   or (NavTreeDestinationNode.NodeType=''TXForm'') then'#13#10'      Target'
  +'IsContainer:=true'#13#10'    else'#13#10'    begin'#13#10'      if (NavTree'
  +'DestinationNode.ScreenObject = nil)                    //eg. is nil for SVG'
  +' internal widgets'#13#10'      {$ifndef JScript}'#13#10'      or (NavTreeDe'
  +'stinationNode.ScreenObject = NavTreeDestinationNode)'#13#10'      {$endif}'
  +#13#10'      then'#13#10'        TargetIsContainer:=false'#13#10'      else'
  +#13#10'      begin'#13#10'        {$ifndef JScript}'#13#10'        TargetIsC'
  +'ontainer:=GetBooleanProperty(TComponent(NavTreeDestinationNode.ScreenObject'
  +'),''isContainer'');'#13#10'        {$else}'#13#10'        TargetIsContainer'
  +':=GetBoolProp(NavTreeDestinationNode.ScreenObject,''isContainer'');'#13#10
  +'      {$endif}'#13#10'      end;'#13#10'    end;'#13#10#13#10'    if Target'
  +'IsContainer = true then'#13#10'    begin'#13#10'      //ShowMessage(''paste'
  +' under container'');'#13#10'      ParentNode:=NavTreeDestinationNode;'#13#10
  +'      TreePos:=-1;'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10' '
  +'     // ShowMessage(''paste as sibling'');'#13#10'      //ParentNode:=FindP'
  +'arentOfNodeByName(SystemNodeTree,NavTreeDestinationNode.NodeName);'#13#10' '
  +'     ParentNode:=FindParentOfNode(SystemNodeTree,NavTreeDestinationNode);'
  +#13#10'      TreePos:=ParentNode.GetChildIndex(NavTreeDestinationNode);'#13
  +#10'    end;'#13#10#13#10'   //showmessage(''PasteItem. parent=''+ParentNode'
  +'.Nodename+'' type=''+ParentNode.NodeType+'' class=''+ParentNode.NodeClass);'
  +#13#10#13#10'    if CanAddChildToParent(ParentNode,SourceNode) then'#13#10' '
  +'   begin'#13#10'       if NewName='''' then'#13#10'       begin'#13#10'    '
  +'     if ObjectInspectorSourceCut=false then'#13#10'         begin'#13#10'  '
  +'           // Dialog for name entry'#13#10'             NewName:=trim(getna'
  +'me(''Enter Component Name:''));'#13#10'         end'#13#10'         else'#13
  +#10'         begin'#13#10'            NewName:=SourceNode.NodeName;'#13#10' '
  +'        end;'#13#10'       end;'#13#10#13#10'       // Is the source node n'
  +'amed uniquely?'#13#10'       //showmessage(''check unique name ''+NewName);'
  +#13#10'       if (NewName<>'''') and (ComponentNameIsUnique(NewName,OrigSour'
  +'ceNode.NameSpace)) then'#13#10'       begin'#13#10'         SourceNode.Node'
  +'Name:=NewName;'#13#10'         PasteItemQuietly(UIRootNode,TreePos,ParentNo'
  +'de,SourceNode);'#13#10#13#10'          if CompositeResource then'#13#10'   '
  +'       begin'#13#10'            NewNode:=FindDataNodeById(ParentNode,NewNam'
  +'e,OrigSourceNode.NameSpace,true);'#13#10'            // next, expand the co'
  +'mposite node according to its SourceString'#13#10'            XMLToNodeTree'
  +'(SourceNode.GetAttribute(''SourceString'',true).AttribValue, NewNode, true)'
  +';'#13#10'            // and reset the instantiated SourceString to blank'#13
  +#10'            NewNode.SetAttributeValue(''SourceString'','''',''String'',t'
  +'rue);'#13#10'            // From within the expanded composite, find interf'
  +'ace node(s?) and add the defined properties and events'#13#10'            I'
  +'nterfaceNodes:=FindNodesOfType(NewNode,''TXCompositeIntf'');'#13#10'       '
  +'     for i:=0 to length(InterfaceNodes)-1 do     //!!!! only allow one of t'
  +'hese???'#13#10'            begin'#13#10'              for j:=0 to length(In'
  +'terfaceNodes[i].NodeAttributes)-1 do'#13#10'                NewNode.AddAttr'
  +'ibute(InterfaceNodes[i].NodeAttributes[j].AttribName,''String'',InterfaceNo'
  +'des[i].NodeAttributes[j].AttribValue,false);'#13#10'              for j:=0 '
  +'to InterfaceNodes[i].myEventTypes.Count-1 do'#13#10'                NewNode'
  +'.AddEvent(InterfaceNodes[i].myEventTypes[j],'''','''');'#13#10'            '
  +'end;'#13#10'          end;'#13#10'       end;'#13#10'    end;'#13#10#13#10
  +'  end;'#13#10'  //SourceNode.Free;'#13#10#13#10'end;'#13#10#13#10'procedure'
  +' ShowHideNode(aNode:TDataNode;show:Boolean);'#13#10'begin'#13#10'   if aNod'
  +'e<>nil then'#13#10'     if aNode.NodeClass=''UI'' then'#13#10'     begin'#13
  +#10'         {$ifndef JScript}'#13#10'         SetBooleanProperty(aNode.Scre'
  +'enObject,''IsVisible'',show);'#13#10'         {$else}'#13#10'         if Is'
  +'PublishedProp(aNode,''IsVisible'') then'#13#10'         begin'#13#10'      '
  +'     SetBoolProp(aNode,''IsVisible'',show);'#13#10'         end;'#13#10'   '
  +'      {$endif}'#13#10'     end;'#13#10'end;'#13#10#13#10'(*'#13#10'function'
  +'  repchar(instring,refstring:string):string;'#13#10'var i,j,k,m,num1,num2, '
  +'wrap,testlength:integer;'#13#10'    newstring:string;'#13#10'begin'#13#10' '
  +' if length(refstring)< 1 then showmessage(''Error ....refstring is too shor'
  +'t in ComponentWrapper.repchar'');'#13#10'  j:=0;'#13#10'  k:=0;'#13#10'  ne'
  +'wstring:='''';'#13#10'  testlength:=8;'#13#10'  if length(instring)> testle'
  +'ngth'#13#10'  then'#13#10'  begin'#13#10'    for i:=1 to testlength do'#13
  ,#10'    begin'#13#10'      newstring:= newstring+instring[i];'#13#10'    end'
  +';'#13#10'    if (ord(instring[i]) > 126)'#13#10'    then'#13#10'    begin'
  +#13#10'       newstring:= newstring+instring[i];'#13#10'       if ord(instri'
  +'ng[i])=160 then showmessage(''Error ....char 160 is a reserved value in Com'
  +'ponentWrapper.repchar'');'#13#10'    end'#13#10'    else'#13#10'    for i:='
  +'testlength+1 to length(instring) do'#13#10'    begin'#13#10'      k:=k+1;'
  +#13#10'      if k > 13 then k:=1;'#13#10'      m:= (k xor 5);'#13#10'      n'
  +'um1:=ord(instring[i]);'#13#10'      if num1=160 then num1:=127;'#13#10'    '
  +'  num1:=num1-32;'#13#10'      j:=j+1;'#13#10'      if j>length(refstring)th'
  +'en j:=1;'#13#10'      wrap:= 4 * m + ord(refstring[j]);'#13#10'      if  wr'
  +'ap>126 then  wrap := wrap -95;'#13#10'      num2:=(wrap-32);'#13#10'      n'
  +'um2:=trunc(num2/4);'#13#10'      num1:=(num1 xor num2)+32;'#13#10'      if '
  +'num1=127 then num1:=160;'#13#10'      if (num1>126)and(num1<>160) then show'
  +'message(''Error ....char out of range in ComponentWrapper.repchar  ''+intto'
  +'str(num1)+'' ''+chr(num1));'#13#10'      newstring:=newstring+ chr(num1);'
  +#13#10'    end;'#13#10'  end else showmessage(''Error ....instring too short'
  +' in ComponentWrapper.repchar'');'#13#10'  result:=newstring;'#13#10'end;'#13
  +#10#13#10#13#10'function addpoochar(instring:string):string;'#13#10'var i,j,'
  +'k,m,num:integer;'#13#10'    newstring:string;'#13#10'begin'#13#10'  k:=0;'
  +#13#10'  instring:=''sdfkisbdoisopjwepojwegaegohaspeoulvdoidfvd;ldfhddbldv;l'
  +',sc;ascethpnij[pfgb][lwefp;asckbjefog;lkdrpojgpoiejrgoigerauiervoieroiheg'''
  +';'#13#10'  instring:=instring+ instring+instring+instring+instring+instring'
  +'+instring+instring+instring+instring+instring+instring+instring+instring;'
  +#13#10'   instring:=instring+ instring+instring+instring+instring+instring+i'
  +'nstring+instring+instring+instring+instring+instring+instring+instring;'#13
  +#10'   instring:=instring+ instring+instring+instring+instring+instring+inst'
  +'ring+instring+instring+instring+instring+instring+instring+instring;'#13#10
  +'   instring:=instring+ instring+instring+instring+instring+instring+instrin'
  +'g+instring+instring+instring+instring+instring+instring+instring;'#13#10'  '
  +'newstring:= instring+''mpXiWmfG'';'#13#10'  for i:=1 to length(instring) do'
  +#13#10'  begin'#13#10'    k:=k+1;'#13#10'    if k > 11 then k:=1;'#13#10'   '
  +' m:= (k xor 5);'#13#10'    j:=1+(i xor 5);'#13#10'    if ord(instring[i]) >'
  +' 126'#13#10'    then newstring[j]:=instring[i]'#13#10'    else'#13#10'    b'
  +'egin'#13#10'      num:=ord(instring[i])+m;'#13#10'      if num>126 then num'
  +' := num - 95;'#13#10'      newstring[j]:= chr(num);'#13#10'    end ;'#13#10
  +'    if (j>length(newstring)) or (j<1) then showmessage(''poo j = ''+ inttos'
  +'tr(j));'#13#10'    if (ord(instring[i]) > 126) or ( ord(instring[i]) <32  )'
  +'  then showmessage(''odd char = >''+instring[i]+''<'');'#13#10'    if (ord('
  +'newstring[j]) > 126) or ( ord(newstring[j]) <32  )  then showmessage(''oops'
  +' odd char j = >''+newstring[j]+''<'');'#13#10'  end;'#13#10'  newstring:=re'
  +'pchar(newstring,''HelloWorld'');'#13#10'  result:=newstring;'#13#10'end;'#13
  +#10#13#10'function addchar(instring:string):string;'#13#10'var i,j,k,m,num:i'
  +'nteger;'#13#10'    newstring:string;'#13#10'begin'#13#10'  k:=0;'#13#10'  n'
  +'ewstring:= instring+''mpXiWmfG'';'#13#10'  for i:=1 to length(instring) do'
  +#13#10'  begin'#13#10'    k:=k+1;'#13#10'    if k > 11 then k:=1;'#13#10'   '
  +' m:= (k xor 5);'#13#10'    j:=1+(i xor 5);'#13#10'    if ord(instring[i]) >'
  +' 126'#13#10'    then newstring[j]:=instring[i]'#13#10'    else'#13#10'    b'
  +'egin'#13#10'      num:=ord(instring[i])+m;'#13#10'      if num>126 then num'
  +' := num - 95;'#13#10'      newstring[j]:= chr(num);'#13#10'    end ;'#13#10
  +'  end;'#13#10'  newstring:=repchar(newstring,''HelloWorld'');'#13#10'  resu'
  +'lt:=newstring;'#13#10'end;'#13#10#13#10'function subchar(instring:string):s'
  +'tring;'#13#10'var i,j,k,m,num:integer;'#13#10'    newstring,newstring2:stri'
  +'ng;'#13#10'begin'#13#10'  instring:=repchar(instring,''HelloWorld'');'#13#10
  +'  k:=0;'#13#10'  newstring:= instring;'#13#10'  newstring2:='''';'#13#10'  '
  +'for i:=1 to length(instring)-8 do'#13#10'  begin'#13#10'    k:=k+1;'#13#10
  +'    if k> 11 then k:=1;'#13#10'    m:= (k xor 5);'#13#10'    j:=1+(i xor 5)'
  +';'#13#10'    if ord(instring[j]) > 126'#13#10'    then newstring[i]:=instri'
  +'ng[j]'#13#10'    else'#13#10'    begin'#13#10'      num:=ord(instring[j])-m'
  +';'#13#10'      if num<32 then num:=num+95;'#13#10'      newstring[i]:= chr('
  +'num);'#13#10'    end;'#13#10'  end;'#13#10'  for i:=  length(newstring)-8 t'
  +'o length(newstring)-1 do newstring[i+1]:='' '';'#13#10'  for i:=1 to length'
  +'(instring)-8 do newstring2 := newstring2+newstring[i];'#13#10'  result:=new'
  +'string2;'#13#10'end;'#13#10'*)'#13#10#13#10'procedure ClearResourceInspecto'
  +'r;'#13#10'var'#13#10'  btnNode:TDataNode;'#13#10'begin'#13#10'  AvailableRe'
  ,'sourcesSelectedNode:=nil;'#13#10'  PopulateResourceInspector(nil);'#13#10' '
  +' btnNode:=FindDataNodeById(systemnodetree,''ResourceTreeDelBtn'','''',true)'
  +';'#13#10'  TXButton(btnNode.ScreenObject).Enabled:=false;'#13#10'  btnNode:'
  +'=FindDataNodeById(systemnodetree,''ResourceTreeLoadBtn'','''',true);'#13#10
  +'  TXButton(btnNode.ScreenObject).Enabled:=false;'#13#10'end;'#13#10#13#10'p'
  +'rocedure ClearInspectors;'#13#10'var'#13#10'thisnode:TDataNode;'#13#10'begi'
  +'n'#13#10'  if NavTreeComponent.ScreenObject <>nil then'#13#10'  begin'#13#10
  +'    TXTree(NavTreeComponent.ScreenObject).DeSelectNode;'#13#10'    DeHighli'
  +'ghtObject(ObjectInspectorSelectedNavTreeNode);'#13#10'    ObjectInspectorSe'
  +'lectedNavTreeNode:=nil;'#13#10#13#10'    TXTree(CodeTreeComponent.ScreenObj'
  +'ect).DeSelectNode;'#13#10'    ObjectInspectorSelectedCodeTreeNode:=nil;'#13
  +#10'    ObjectInspectorSelectedCodeNodeText:='''';'#13#10#13#10'    Populate'
  +'ObjectInspector(nil);'#13#10'    ClearResourceInspector;'#13#10'    if Code'
  +'Editform<>nil then'#13#10'    begin'#13#10'      thisnode:=CodeEditForm.myN'
  +'ode;'#13#10'      CodeEditForm.CodeEdit.ItemValue:='''';'#13#10'      CodeE'
  +'ditForm.CodeEditInit.ItemValue:='''';'#13#10'    end;'#13#10'  end;'#13#10
  +'end;'#13#10#13#10'function CompositeResourcesString(QuotedString:Boolean):S'
  +'tring;'#13#10'var'#13#10'  StartNode,TempNode,CompNode,TempComp:TdataNode;'
  +#13#10'  systemstring:String;'#13#10'  i:integer;'#13#10'begin'#13#10'  Star'
  +'tNode:=FindDataNodeById(SystemNodeTree,''Composites'','''',true);'#13#10'  '
  +'systemstring:=NodeTreeToXML(StartNode,UIRootItem,false,QuotedString);'#13#10
  +'  result:= systemstring;'#13#10#13#10'end;'#13#10'{$ifndef JScript}'#13#10
  +'procedure SaveCompositesToIncFile;'#13#10'var'#13#10'  systemstring:string;'
  +#13#10#13#10'begin'#13#10'  systemstring:= CompositeResourcesString(true);'
  +#13#10#13#10'  WriteToFile(ProjectDirectory+''tempinc/systemcomposites.inc'''
  +',''XObjectInsp.CompositesString := ''''''+systemstring+'''''';'');'#13#10'e'
  +'nd;'#13#10'{$endif}'#13#10'procedure DebugWriteNodeTree(StartNode:TdataNode'
  +';var txt:String;lvl:integer);'#13#10'var'#13#10'  i:integer;'#13#10'begin'
  +#13#10'  txt:=txt+LineEnding;'#13#10'  for i:=0 to lvl-1 do'#13#10'    txt:='
  +'txt+''  '';'#13#10'  txt:=txt+StartNode.NodeClass+'' ''+ StartNode.NodeType'
  +'+'' ''+StartNode.NodeName+'' ''+myBoolToStr(StartNode.IsDynamic);'#13#10'  '
  +'for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'    DebugWriteNodeTree'
  +'(StartNode.ChildNodes[i],txt,lvl+1);'#13#10'end;'#13#10#13#10'function Buil'
  +'dSystemString(Encapsulate:Boolean):String;'#13#10'var'#13#10'  systemstring'
  +',eventstring,fullstring,tmp:string;'#13#10'  StartNode,UINode, MenuNode,Sty'
  +'leTreeParent:TDataNode;'#13#10'  i:integer;'#13#10'  TopType,TopClass:Strin'
  +'g;'#13#10'begin'#13#10'  //showmessage(''BuildSystemString'');'#13#10'  Cle'
  +'arInspectors;'#13#10'  // Save just the user-design portions of the system '
  +'node tree.'#13#10'  // Mainform Menu items, Mainform centre section, PLUS d'
  +'ynamic XForms added.'#13#10#13#10'//  showmessage(''2'');'#13#10'  UINode:='
  +'UIRootItem;'#13#10'  TopType:=UINode.NodeType;'#13#10'  TopClass:=UINode.No'
  +'deClass;'#13#10'  UINode.NodeType:=''Root'';    // so that this item will b'
  +'e skipped on load'#13#10'  UINode.NodeClass:=''Root'';    // so that this i'
  +'tem will be skipped on load'#13#10'  UINode.IsDynamic:=true;'#13#10#13#10' '
  +' MenuNode:=FindDataNodeById(SystemNodeTree,''XIDEMainMenu'','''',true);'#13
  +#10#13#10'//  showmessage(''3'');'#13#10#13#10'  // Create a temporary root '
  +'node to enclose the project nodes (copy from UIRootNode)'#13#10'  StartNode'
  +':= CopyNode(UIRootNode,false);'#13#10'  StartNode.NodeType:=''Root'';    //'
  +' so that the top item will be skipped on load'#13#10'  StartNode.NodeClass:'
  +'=''Root'';    // so that the top item will be skipped on load'#13#10'  Star'
  +'tNode.IsDynamic:=true;'#13#10'  if not Encapsulate then'#13#10'  begin'#13
  +#10'    // normal system...'#13#10'    setlength(StartNode.ChildNodes,2);'#13
  +#10'    StartNode.ChildNodes[0]:=MenuNode;        // give it one child node '
  +'for the Mainform menu items'#13#10'    StartNode.ChildNodes[1]:=UINode;    '
  +'    // give it one child node for the user interface section'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'    // encapsulation...'#13#10'    setle'
  +'ngth(StartNode.ChildNodes,1);'#13#10'    StartNode.ChildNodes[0]:=UINode;  '
  +'      // give it one child node for the user interface section'#13#10'  end'
  +';'#13#10#13#10'//  showmessage(''4'');'#13#10'  systemstring:= NodeTreeToXM'
  +'L(StartNode,nil,true,false);'#13#10#13#10'//  showmessage(''5'');'#13#10'  '
  +'UINode.NodeType:=TopType;'#13#10'  UINode.NodeClass:=TopClass;'#13#10'  UIN'
  +'ode.IsDynamic:=false;'#13#10#13#10'  // add non-visual components'#13#10'  '
  +'StartNode:=FindDataNodeById(SystemNodeTree,SystemRootName,'''',true);'#13#10
  +'  //StartNode:=FindDataNodeById(SystemNodeTree,MainForm.Name,'''',true);'#13
  ,#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'  begin'#13#10'  '
  +'  if (StartNode.ChildNodes[i].NodeClass=''NV'')'#13#10'    and (StartNode.C'
  +'hildNodes[i].IsDynamic) then'#13#10'    begin'#13#10'      systemstring:=sy'
  +'stemstring+NodeTreeToXML(StartNode.ChildNodes[i],StartNode,true,false);'#13
  +#10'    end;'#13#10'  end;'#13#10#13#10'//  showmessage(''6'');'#13#10'  // '
  +'now look for other XForms'#13#10'  StartNode:=FindDataNodeById(SystemNodeTr'
  +'ee,SystemRootName,'''',true);'#13#10'  for i:=0 to length(StartNode.ChildNo'
  +'des)-1 do'#13#10'  begin'#13#10'    if (StartNode.ChildNodes[i].NodeType='''
  +'TXForm'')'#13#10'    and (StartNode.NodeName<>''CodeEditForm'')'#13#10'    '
  +'and (StartNode.NodeName<>''PasteDialog'')'#13#10'    and (StartNode.ChildNo'
  +'des[i].IsDynamic)'#13#10'    then'#13#10'    begin'#13#10'      systemstrin'
  +'g:=systemstring+NodeTreeToXML(StartNode.ChildNodes[i],nil,true,false);'#13
  +#10'    end;'#13#10'  end;'#13#10#13#10'//  showmessage(''7'');'#13#10'  // '
  +'and add any functions and raw code units'#13#10'  StartNode:=FindDataNodeBy'
  +'Id(SystemNodeTree,CodeRootName,'''',true);'#13#10'  if StartNode=nil then'
  +#13#10'  begin'#13#10'    showmessage(''oops. cannot find node CodeUnits in '
  +'BuildSystemString'');'#13#10'    EXIT;'#13#10'  end;'#13#10'  for i:=0 to l'
  +'ength(StartNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    if (StartNode.Ch'
  +'ildNodes[i].NodeType=''RawUnit'')'#13#10'    and (StartNode.ChildNodes[i].I'
  +'sDynamic) then'#13#10'    begin'#13#10'      systemstring:=systemstring+Nod'
  +'eTreeToXML(StartNode.ChildNodes[i],CodeRootNode,true,false);'#13#10'    end'
  +';'#13#10'  end;'#13#10#13#10'//  showmessage(''8'');'#13#10'  // add the tr'
  +'ee ''StyleSheet'' so that its data is preserved with the user''s project'#13
  +#10'  StyleTreeParent:=FindDataNodeById(systemnodetree,''StyleDesigner'','''
  +''',true);'#13#10'  systemstring:=systemstring+NodeTreeToXML(StylesNode,Styl'
  +'eTreeParent,false,false);'#13#10#13#10'  fullstring:= systemstring;'#13#10
  +#13#10'  result:=fullstring;'#13#10'end;'#13#10#13#10'Procedure SaveSystemTo'
  +'Clip;'#13#10'var'#13#10'  fullstring:String;'#13#10'begin'#13#10'  fullstri'
  +'ng:=BuildSystemString(false);'#13#10'  myCopyToClip(''System'',fullstring )'
  +';'#13#10'end;'#13#10#13#10'Procedure SaveSystemToFile;'#13#10'var'#13#10'  '
  +'fullstring,sysname:String;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  ok:=f'
  +'alse;'#13#10'  sysname:=UIRootNode.GetAttribute(''SystemName'',false).Attri'
  +'bValue;'#13#10#13#10'  while not ok do'#13#10'  begin'#13#10'    sysname:= '
  +'XIDEPrompt(''Enter System Name'',sysname);'#13#10'    if FoundString(sysnam'
  +'e,''.'')>0 then'#13#10'      showmessage(''Enter the name without dot chara'
  +'cters ''''.'''''')'#13#10'    else'#13#10'      ok:=true;'#13#10'  end;'#13
  +#10'  sysname:=sysname+''.xide'';'#13#10'  {$ifndef JScript}'#13#10'  sysnam'
  +'e:=''SavedSystems/''+sysname;'#13#10'  {$endif}'#13#10'  fullstring:=BuildS'
  +'ystemString(false);'#13#10'  WriteToLocalStore(sysname,fullstring);'#13#10
  +'  RebuildResourcesTree;'#13#10'end;'#13#10#13#10'function isValidSystemData'
  +'(SystemDescription:string):boolean;'#13#10'var teststring,teststring2,sys:s'
  +'tring;'#13#10'   i:integer;'#13#10'   MatchFound:boolean;'#13#10'begin'#13
  +#10'  MatchFound:=true;'#13#10'  sys:=trim(SystemDescription);'#13#10'  test'
  +'string:=''<Root|; Class |=Root|; Name |=UIRoot'';'#13#10#13#10'  if length('
  +'SystemDescription)>=length(teststring) then'#13#10'  begin'#13#10'    for i'
  +' :=1 to Length(teststring) do'#13#10'    begin'#13#10'       if (sys[i]<> t'
  +'eststring[i])'#13#10'       then  MatchFound:=false;'#13#10'    end;'#13#10
  +'  end;'#13#10'  result:=MatchFound;'#13#10'end;'#13#10#13#10'{$ifndef JScri'
  +'pt}'#13#10'procedure TLoadTimerTag.DoXMLToNodeTree(sender:TObject);'#13#10
  +'var'#13#10'   myTimer:tTimer;'#13#10'   myTag:TLoadTimerTag;'#13#10'   glb:'
  +'Boolean;'#13#10'begin'#13#10'  glb:=GlobalSuppressFrameDisplay;'#13#10'  Gl'
  +'obalSuppressFrameDisplay:=true;'#13#10#13#10'  OIClearSystem;'#13#10'  Clea'
  +'rAllComposites;'#13#10#13#10'  myTimer:=TTimer(sender);'#13#10'  myTimer.En'
  +'abled:=false;'#13#10'  myTag:=TLoadTimerTag(myTimer.Tag);'#13#10'  XMLToNod'
  +'eTree(myTag.systemstring,UIRootNode);'#13#10#13#10'  if myTag.SysName<>'''''
  +' then'#13#10'  begin'#13#10'    SetSystemName(myTag.SysName);'#13#10'  end;'
  +#13#10#13#10'  RebuildResourcesTree;'#13#10'  RedisplayResourceTree;'#13#10
  +#13#10'  // un-suspend all the ''iframe'' components...'#13#10'  GlobalSuppr'
  +'essFrameDisplay:=false;'#13#10'  UnSuspendFrames(SystemNodeTree);'#13#10#13
  +#10'  GlobalSuppressFrameDisplay:=glb;'#13#10#13#10'  RebuildNavigatorTree;'
  +#13#10'  RebuildCodeTree;'#13#10'  SelectNavTreeNode(MainFormProjectRoot,tru'
  +'e);'#13#10#13#10'  //make sure UIRoot width attribute is still at 60% (desi'
  +'gn mode)'#13#10'  //if ShowResourceTree<>''Hide'' then'#13#10'    UIRootIte'
  +'m.SetAttributeValue(''ContainerWidth'',''60%'');'#13#10'  //else'#13#10'  /'
  ,'/  UIRootItem.SetAttributeValue(''ContainerWidth'',''80%'');'#13#10#13#10' '
  +' sender.Destroy;'#13#10'end;'#13#10#13#10'function DoSystemLoad(SystemDescr'
  +'iption,SysName:string):Boolean;'#13#10'var'#13#10'  i:integer;'#13#10'  tem'
  +'pTimer:TTimer;'#13#10'  myTag:TLoadTimerTag;'#13#10'  ok:boolean;'#13#10'be'
  +'gin'#13#10'   if (isValidSystemData(SystemDescription)=true)'#13#10'   then'
  +#13#10'   begin'#13#10'     //'#13#10'     // throw a timer to avoid event c'
  +'ontention while we are deleting objects'#13#10'     tempTimer:=TTimer.Creat'
  +'e(MainForm);'#13#10'     tempTimer.Enabled:=false;'#13#10'     tempTimer.In'
  +'terval:=100;'#13#10#13#10'     myTag:=TLoadTimerTag.Create;'#13#10'     myT'
  +'ag.systemstring:=SystemDescription;'#13#10'     myTag.SysName:=SysName;'#13
  +#10'     tempTimer.Tag:=WinSizeDependentInt(myTag);'#13#10#13#10'     tempTi'
  +'mer.OnTimer:=@mytag.DoXMLToNodeTree;'#13#10'     tempTimer.Enabled:=true;'
  +#13#10'   end'#13#10'   else'#13#10'   begin'#13#10'     ok:=false;'#13#10' '
  +'    ShowMessage(''Error.....Put a valid system description string on the cl'
  +'ipboard before calling this option '');'#13#10'   end;'#13#10'   result:=ok'
  +';'#13#10'end;'#13#10'{$else}'#13#10'function DoSystemLoad(SystemDescription'
  +',SysName:string):boolean;'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13
  +#10'   ok:=true;'#13#10'   if (isValidSystemData(SystemDescription)=true)'#13
  +#10'   then'#13#10'   begin'#13#10'     StartingUp:=true;    //suppress even'
  +'t handling'#13#10'     OIClearSystem;'#13#10'     ClearAllComposites;'#13#10
  +'    asm'#13#10'    try {'#13#10'    //alert(''default parent is ''+pas.Node'
  +'Utils.UIRootNode);'#13#10'    pas.NodeUtils.XMLToNodeTree(SystemDescription'
  +',pas.NodeUtils.UIRootNode);'#13#10'    } catch(err) { ok=false; alert(err.m'
  +'essage+''  in XObjectInsp.DoSystemLoad '');}'#13#10'    end;'#13#10#13#10' '
  +'   if SysName<>'''' then'#13#10'      SetSystemName(SysName);'#13#10#13#10
  +'    UnSuspendFrames(SystemNodeTree);'#13#10#13#10'    RebuildResourcesTree;'
  +#13#10'    RedisplayResourceTree;'#13#10#13#10'    if not RunningDeployedRun'
  +'time then'#13#10'      SaveSystemData;'#13#10#13#10'    RebuildNavigatorTre'
  +'e;'#13#10'    RebuildCodeTree;'#13#10#13#10'    GenerateStyleSheets;'#13#10
  +'    InitAutomatedCursor;'#13#10#13#10'    SelectNavTreeNode(MainFormProject'
  +'Root,true);'#13#10#13#10#13#10'   end'#13#10'   else'#13#10'   begin'#13#10
  +'     ok:=false;'#13#10'     ShowMessage(''Error.....system description stri'
  +'ng is not valid '');'#13#10'   end;'#13#10'   StartingUp:=false;'#13#10'   '
  +'result:=ok;'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure OINavTreeNod'
  +'eChange(e:TEventStatus;nodeId,NameSpace:string;myValue:string);'#13#10'var'
  +#13#10'  NodeText,TreeNodeId:String;'#13#10'  //myNode:TdataNode;'#13#10'  m'
  +'yTree:TXTree;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  myTree:=TXTr'
  +'ee(NavTreeComponent.ScreenObject);'#13#10'  //NodeText:=myValue;'#13#10'  N'
  +'odeText:=myTree.SelectedNodeText;'#13#10'  {$else}'#13#10'  myTree:=TXTree('
  +'NavTreeComponent);'#13#10'  NodeText:=myTree.SelectedNodeText;'#13#10'//sho'
  +'wmessage(''OINavTreeNodeChange. NodeText=''+NodeText);'#13#10'  {$endif}'#13
  +#10'  TreeNodeId:=TreeLabelToID(NodeText);'#13#10#13#10'  //NodeID is the Na'
  +'vigator Ttree object clicked on    eg. NavigationTreeContents   or in html,'
  +' the name of the node...'#13#10'  //myValue is  the label text of the click'
  +'ed node (desktop) OR the treenode id (Browser)'#13#10'  //TreeNodeId is  th'
  +'e associated datanode name (from the treenode text)'#13#10'  if TreeNodeId<'
  +'>'''' then'#13#10'  begin'#13#10'    //showmessage(''OINavTreeNodeChange.  '
  +'Id=''+TreeNodeId);'#13#10'     HandleNavTreeClickEvent(TreeNodeId,nodeText)'
  +';'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure OIResourceTreeNodeChange'
  +'(nodeId:string;myValue:string);'#13#10'var'#13#10'  NodeText,TreeNodeId:Str'
  +'ing;'#13#10'  //myNode:TdataNode;'#13#10'  myTree:TXTree;'#13#10'begin'#13
  +#10'  {$ifndef JScript}'#13#10'  myTree:=TXTree(ResourceTreeComponent.Screen'
  +'Object);'#13#10'  //NodeText:=myValue;'#13#10'  NodeText:=myTree.SelectedNo'
  +'deText;'#13#10'  {$else}'#13#10'  //myNode:=findDataNodeById(systemnodetree'
  +',nodeid,NameSpace,true);'#13#10'  myTree:=TXTree(ResourceTreeComponent);'#13
  +#10'  NodeText:=myTree.SelectedNodeText;'#13#10'  {$endif}'#13#10'  TreeNode'
  +'Id:=TreeLabelToID(NodeText);'#13#10#13#10'  //NodeID is the Navigator Ttree'
  +' object clicked on    eg. NavigationTreeContents   or in html, the name of '
  +'the node...'#13#10'  //myValue is  the label text of the clicked node (desk'
  +'top) OR the treenode id (Browser)'#13#10'  //TreeNodeId is  the screen obje'
  +'ct name (from the name within myvalue)'#13#10'  if TreeNodeId<>'''' then'#13
  +#10'  begin'#13#10'     // ShowMessage(''OIResourceTreeNodeChange nodeId=''+'
  +'nodeId);'#13#10'      HandleResourcesTreeClickEvent(nodeId,NodeText);'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'procedure OICodeTreeNodeChange(nodeId:strin'
  ,'g;myValue:string);'#13#10'var'#13#10'  NodeText,TreeNodeId:String;'#13#10' '
  +' myTree:TXTree;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'  myTree:=TX'
  +'Tree(CodeTreeComponent.ScreenObject);'#13#10'  NodeText:=myTree.SelectedNod'
  +'eText;'#13#10'  {$else}'#13#10'  myTree:=TXTree(CodeTreeComponent);'#13#10
  +'  NodeText:=myTree.SelectedNodeText;'#13#10'  {$endif}'#13#10'  TreeNodeId:'
  +'=TreeLabelToID(NodeText);'#13#10#13#10'  if TreeNodeId<>'''' then'#13#10'  '
  +'begin'#13#10'    //showmessage(''OICodeTreeNodeChange. nodeId=''+nodeId+'' '
  +'TreeNodeId=''+TreeNodeId);'#13#10'     HandleCodeTreeClickEvent(TreeNodeId,'
  +'NodeText);'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure OICutItem(nodeI'
  +'d:string;myValue:string);'#13#10'begin'#13#10'  if TreeInFocus<>nil then'#13
  +#10'  begin'#13#10'    // if we are looking at the nav tree, cut the selecte'
  +'d nav node;'#13#10'    // if we are looking at the code tree, cut the selec'
  +'ted code node;'#13#10'    if TreeInFocus.NodeName=SystemRootName then'#13#10
  +'      CutItem(UIRootNode,ObjectInspectorSelectedNavTreeNode);'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'procedure OIPasteItem(nodeId:string;myValue:string)'
  +';'#13#10'// if called via drag/drop, myvalue is the text of the destination'
  +' node'#13#10'// otherwise, from Paste button, destination node is ObjectIns'
  +'pectorSelectedNavTreeNode.'#13#10'var dst:string;'#13#10'  DestNode:TDataNo'
  +'de;'#13#10'begin'#13#10'//showmessage(''OIPasteItem. ''+nodeId);'#13#10'  i'
  +'f (TreeInFocus<>nil) and (ObjectInspectorSourceNode<>nil) then'#13#10'  beg'
  +'in'#13#10'    if myValue=''OIPaste'' then'#13#10'        DestNode:=ObjectIn'
  +'spectorSelectedNavTreeNode'#13#10'    else'#13#10'    begin'#13#10'        '
  +'dst:=TreeLabelToID( myValue);  // destination node'#13#10'        DestNode:'
  +'=FindDataNodeById(SystemNodeTree,dst,'''',true);      //!!namespace - assum'
  +'ing top design level only'#13#10'    end;'#13#10'//showmessage(''dest node '
  +'''+DestNode.NodeName);'#13#10'    if TreeInFocus.NodeName=SystemRootName th'
  +'en'#13#10'    begin'#13#10'      PasteItem(DestNode,ObjectInspectorSourceNo'
  +'de,'''');'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    if (TreeInF'
  +'ocus=nil) then'#13#10'       ShowMessage(''Select Paste destination first'''
  +')'#13#10'    else if ObjectInspectorSourceNode=nil then'#13#10'         Sho'
  +'wMessage(''Copy an item first'');'#13#10#13#10'end;'#13#10#13#10'procedure '
  +'OIDropItem(e:TEventStatus;nodeId:string;myValue:string);'#13#10'var'#13#10
  +'  TreeNodeId:string;'#13#10'  OriginalSource:TDataNode;'#13#10'  values:TNo'
  +'deEventValue;'#13#10'begin'#13#10'  // Drop an item on the Navigator tree'
  +#13#10'  //showmessage(''OIDropItem.  myValue=''+myValue);'#13#10'//  if e<>'
  +'nil then'#13#10'//  begin'#13#10'//    values:=TNodeEventValue(e.ValueObjec'
  +'t);'#13#10'//    if values<>nil then showmessage(''values.SourceName=''+val'
  +'ues.SourceName+'' DstText=''+values.DstText);'#13#10'//  end;'#13#10#13#10
  +'  TreeNodeId:=TreeLabelToID( myValue);  // destination node'#13#10#13#10'  '
  +'TreeInFocus:=UIRootNode;'#13#10'  ObjectInspectorSelectedNavTreeNode:=FindD'
  +'ataNodeById(SystemNodeTree,TreeNodeId,'''',true);'#13#10'  //ShowMessage('''
  +'drop ''+ObjectInspectorSourceNode.NodeName+'' at ''+ObjectInspectorSelected'
  +'NavTreeNode.NodeName);'#13#10#13#10'  // if an intra-tree drag/drop, then c'
  +'ut the source node first'#13#10'  // find the original source node (still i'
  +'n the nav tree)'#13#10'  OriginalSource:=FindDataNodeById(SystemNodeTree,Ob'
  +'jectInspectorSourceNode.NodeName,'''',false);'#13#10'  if (OriginalSource<>'
  +'nil)'#13#10'  and (OriginalSource <> ObjectInspectorSelectedNavTreeNode)'#13
  +#10'  and (OriginalSource.IsDynamic=true)'#13#10'  and (NodeIsDescendantOf(O'
  +'riginalSource,UIRootNode.NodeName) > -1)   // is in Nav tree'#13#10'  then'
  +#13#10'     CutItemQuietly(UIRootNode,OriginalSource);'#13#10#13#10'  // pas'
  +'te the source node into the Nav tree'#13#10'  if (OriginalSource <> ObjectI'
  +'nspectorSelectedNavTreeNode) then'#13#10'    OIPasteItem(nodeId,myValue);'
  +#13#10'end;'#13#10#13#10'procedure OIMoveNavSiblingUpDown(UpDown:String);'#13
  +#10'var'#13#10'  thisNode, myParent:TdataNode;'#13#10'  c,n,i:integer;'#13#10
  +'begin'#13#10'  thisNode:=ObjectInspectorSelectedNavTreeNode;'#13#10'  if th'
  +'isNode<>nil then'#13#10'  begin'#13#10'    //myParent:=FindParentOfNodeByNa'
  +'me(SystemNodeTree,thisNode.NodeName,false);'#13#10'    myParent:=FindParent'
  +'OfNode(SystemNodeTree,thisNode);'#13#10'    if myParent<>nil then'#13#10'  '
  +'  begin'#13#10'      for i:=0 to length(myParent.ChildNodes)-1 do'#13#10'  '
  +'    begin'#13#10'        if myParent.ChildNodes[i]=thisNode then'#13#10'   '
  +'       c:=i;'#13#10'      end;'#13#10'      if UpDown=''Up'' then'#13#10'  '
  +'      if c>0 then n:=c-1'#13#10'        else n:=-1;'#13#10'      if UpDown='
  +'''Down'' then'#13#10'        if c<length(myParent.ChildNodes)-1 then'#13#10
  +'          n:=c+1'#13#10'        else'#13#10'          n:=-1;'#13#10'      i'
  ,'f n>-1 then'#13#10'      begin'#13#10'        CopyNavNode( thisNode);    //'
  +' populates  ObjectInspectorSourceNode'#13#10'        CutItemQuietly(UIRootN'
  +'ode,thisNode);'#13#10'        // paste the source node back under the paren'
  +'t at new position'#13#10'        PasteItemQuietly(UIRootNode,n,myParent,Obj'
  +'ectInspectorSourceNode);'#13#10'      end;'#13#10'    end;'#13#10'    Rebui'
  +'ldNavigatorTree;'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'procedure OIM'
  +'oveItem(nodeId,NameSpace:string;NewParentId:string);'#13#10'// Interface fu'
  +'nction (available to user code block) to re-parent a node in the nav tree.'
  +#13#10'var'#13#10'  OriginalSource, DestNode:TDataNode;'#13#10'begin'#13#10
  +'  // find the source node'#13#10'  OriginalSource:=FindDataNodeById(SystemN'
  +'odeTree,NodeId,NameSpace,false);'#13#10'  if (OriginalSource<>nil) then'#13
  +#10'  begin'#13#10#13#10'    TreeInFocus:=UIRootNode;'#13#10'    // find the'
  +' new parent node'#13#10'    DestNode:=FindDataNodeById(SystemNodeTree,NewPa'
  +'rentId,NameSpace,true);'#13#10'    if DestNode<>nil then'#13#10'    begin'
  +#13#10'      //ShowMessage(''OIMoveItem ''+ObjectInspectorSourceNode.NodeNam'
  +'e+'' at ''+ObjectInspectorSelectedNavTreeNode.NodeName);'#13#10#13#10'     '
  +' if (OriginalSource <> DestNode)'#13#10'      and (DestNode.IsDynamic=true)'
  +#13#10'      and (CanAddChildToParent(DestNode,OriginalSource)) then'#13#10
  +'      begin'#13#10'         CopyNavNode( OriginalSource);    // populates  '
  +'ObjectInspectorSourceNode'#13#10'         CutItemQuietly(UIRootNode,Origina'
  +'lSource);'#13#10'         // paste the source node under the new parent'#13
  +#10'         PasteItem(DestNode,ObjectInspectorSourceNode,'''');'#13#10'    '
  +'  end'#13#10'      else'#13#10'        showmessage(''MoveComponent:  Cannot'
  +' move node ''+nodeId+'' to new parent ''+NewParentId);'#13#10'    end'#13#10
  +'    else'#13#10'      showmessage(''MoveComponent:  Cannot find destination'
  +' node ''+NewParentId);'#13#10'  end'#13#10'  else'#13#10'    showmessage('''
  +'MoveComponent:  Cannot find source node ''+nodeId);'#13#10'end;'#13#10#13#10
  +'procedure OICopyToNewParent(nodeId,NameSpace:string;NewParentId:string;NewN'
  +'ame:String);'#13#10'// Interface function (available to user code block) to'
  +' copy a node in the nav tree to the given parent.'#13#10'var'#13#10'  Origi'
  +'nalSource, DestNode:TDataNode;'#13#10'begin'#13#10'  // find the source nod'
  +'e'#13#10'  OriginalSource:=FindDataNodeById(SystemNodeTree,NodeId,NameSpace'
  +',false);'#13#10'  if (OriginalSource<>nil) then'#13#10'  begin'#13#10#13#10
  +'    TreeInFocus:=UIRootNode;'#13#10'    // find the new parent node'#13#10
  +'    DestNode:=FindDataNodeById(SystemNodeTree,NewParentId,NameSpace,true);'
  +#13#10'    if (DestNode<>nil) then'#13#10'    begin'#13#10'      //ShowMessa'
  +'ge(''OIMoveItem ''+ObjectInspectorSourceNode.NodeName+'' at ''+ObjectInspec'
  +'torSelectedNavTreeNode.NodeName);'#13#10#13#10'        if (OriginalSource <'
  +'> DestNode)'#13#10'        and (DestNode.IsDynamic=true)'#13#10'        and'
  +' (CanAddChildToParent(DestNode,OriginalSource)) then'#13#10'        begin'
  +#13#10'           CopyNavNode( OriginalSource);    // populates  ObjectInspe'
  +'ctorSourceNode'#13#10'           // paste the source node under the new par'
  +'ent'#13#10'           PasteItem(DestNode,ObjectInspectorSourceNode,NewName)'
  +';'#13#10'        end'#13#10'        else'#13#10'          showmessage(''Mov'
  +'eComponent:  Cannot move node ''+nodeId+'' to new parent ''+NewParentId);'
  +#13#10'    end'#13#10'    else'#13#10'      showmessage(''MoveComponent:  Ca'
  +'nnot find destination node ''+NewParentId);'#13#10'  end'#13#10'  else'#13
  +#10'    showmessage(''MoveComponent:  Cannot find source node ''+nodeId);'#13
  +#10'end;'#13#10'{$ifndef JScript}'#13#10'procedure OICopyToNewParent(nodeId,'
  +'NameSpace:string;NewParentId:string;NewName:PChar);'#13#10'begin'#13#10'   '
  +'OICopyToNewParent(nodeId,NameSpace,NewParentId,strPas(NewName));'#13#10'end'
  +';'#13#10'{$endif}'#13#10'//procedure DeleteCompositeResource(ResourceName:S'
  +'tring);'#13#10'//var'#13#10'//  i,j:integer;'#13#10'//begin'#13#10'//  i:=0'
  +';'#13#10'//  while i<length(ListOfComposites) do'#13#10'//  begin'#13#10'//'
  +'    if ListOfComposites[i].ResourceName=ResourceName then'#13#10'//    begi'
  +'n'#13#10'//      for j:=i+1 to length(ListOfComposites)-1 do'#13#10'//     '
  +'   ListOfComposites[j-1]:=ListOfComposites[j];'#13#10'//      SetLength(Lis'
  +'tOfComposites,length(ListOfComposites)-1);'#13#10'//      i:=length(ListOfC'
  +'omposites)+1;'#13#10'//    end;'#13#10'//    i:=i+1;'#13#10'//  end;'#13#10
  +'//end;'#13#10#13#10'procedure OICopySelectedItem;'#13#10'begin'#13#10'  if '
  +'TreeInFocus<>nil then'#13#10'  begin'#13#10'    if TreeInFocus.NodeName=Sys'
  +'temRootName then'#13#10'    begin'#13#10'      CopyNavNode( ObjectInspector'
  +'SelectedNavTreeNode);'#13#10'    end;'#13#10#13#10'  end'#13#10'  else'#13
  +#10'    ShowMessage(''OICopySelectedItem.  TreeInFocus is nil'');'#13#10#13
  ,#10'end;'#13#10#13#10'//procedure OIDeleteSavedSystem;'#13#10'//var'#13#10'/'
  +'/  filename:string;'#13#10'//begin'#13#10'//  if (AvailableResourcesSelecte'
  +'dNode<>nil) and (AvailableResourcesSelectedNode.NodeClass=''RSS'') then'#13
  +#10'//  begin'#13#10'//    filename:=myStringReplace(AvailableResourcesSelec'
  +'tedNode.NodeName,''_xide'',''.xide'',1,-1);'#13#10'//    if confirm(''OK to'
  +' delete stored system ''+filename+''?'') then'#13#10'//    begin'#13#10'// '
  +'     ClearLocalStore( filename);'#13#10'//      RebuildResourcesTree;'#13#10
  +'//    end;'#13#10'//  end'#13#10'//  else'#13#10'//    ShowMessage(''Select'
  +' a saved system first'');'#13#10'//end;'#13#10'procedure OIDeleteComposite;'
  +#13#10'var'#13#10'  filename:string;'#13#10'begin'#13#10'  if (AvailableReso'
  +'urcesSelectedNode<>nil) and (AvailableResourcesSelectedNode.NodeClass=''RUI'
  +''') then'#13#10'  begin'#13#10'    filename:=myStringReplace(AvailableResou'
  +'rcesSelectedNode.NodeName,''_xcmp'',''.xcmp'',1,-1);'#13#10'    if XIDEConf'
  +'irm(''OK to delete composite resource ''+filename+''?'') then'#13#10'    be'
  +'gin'#13#10'      ClearLocalStore( filename);'#13#10'      RebuildResourcesT'
  +'ree;'#13#10'    end;'#13#10'  end'#13#10'  else'#13#10'    ShowMessage(''Se'
  +'lect a composite resource first'');'#13#10'end;'#13#10'procedure OIDeleteRe'
  +'source;'#13#10'begin'#13#10'//  if (AvailableResourcesSelectedNode<>nil) an'
  +'d (AvailableResourcesSelectedNode.NodeClass=''RSS'') then'#13#10'//    OIDe'
  +'leteSavedSystem'#13#10'//  else'#13#10'  if (AvailableResourcesSelectedNode'
  +'<>nil)'#13#10'    and (AvailableResourcesSelectedNode.NodeClass=''RUI'')'#13
  +#10'    and (AvailableResourcesSelectedNode.NodeType=''TXComposite'') then'
  +#13#10'    OIDeleteComposite;'#13#10'end;'#13#10#13#10'procedure OILoadCompo'
  +'site;'#13#10'begin'#13#10'  if (AvailableResourcesSelectedNode<>nil)'#13#10
  +'    and (AvailableResourcesSelectedNode.NodeClass=''RUI'')'#13#10'    and ('
  +'AvailableResourcesSelectedNode.NodeType=''TXComposite'') then'#13#10'  begi'
  +'n'#13#10'    if XIDEConfirm(''OK to load composite ''+AvailableResourcesSel'
  +'ectedNode.NodeName+'' for editing?'') then'#13#10'      LoadCompositeResour'
  +'ce(AvailableResourcesSelectedNode);'#13#10'  end'#13#10'  else'#13#10'    S'
  +'howMessage(''Select a composite resource first'');'#13#10'end;'#13#10#13#10
  +#13#10'//procedure OILoadSavedSystem;'#13#10'//begin'#13#10'//  if  (Availab'
  +'leResourcesSelectedNode<>nil) and (AvailableResourcesSelectedNode.NodeClass'
  +'=''RSS'') then'#13#10'//  begin'#13#10'//    if confirm(''OK to load system'
  +' ''+AvailableResourcesSelectedNode.NodeName+''?'') then'#13#10'//      Load'
  +'NamedSystem(AvailableResourcesSelectedNode.NodeName);'#13#10'//  end'#13#10
  +'//  else'#13#10'//    ShowMessage(''Select a saved system first'');'#13#10
  +'//end;'#13#10'procedure OILoadSavedSystem2(SysName:String);'#13#10'begin'#13
  +#10'    if XIDEConfirm(''OK to load system ''+SysName+''?'') then'#13#10'   '
  +'   LoadNamedSystem(SysName);'#13#10'end;'#13#10#13#10'procedure OILoadResou'
  +'rce;'#13#10'begin'#13#10#13#10'//  if (AvailableResourcesSelectedNode<>nil)'
  +' and (AvailableResourcesSelectedNode.NodeClass=''RSS'') then'#13#10'//    O'
  +'ILoadSavedSystem'#13#10'//  else'#13#10'  if (AvailableResourcesSelectedNod'
  +'e<>nil)'#13#10'    and (AvailableResourcesSelectedNode.NodeClass=''RUI'')'
  +#13#10'    and (AvailableResourcesSelectedNode.NodeType=''TXComposite'') the'
  +'n'#13#10'    OILoadComposite;'#13#10'end;'#13#10#13#10'procedure OIDragItem'
  +'(e:TEventStatus;nodeId:string;myValue:string);'#13#10'var'#13#10'  TreeNode'
  +'Id:string;'#13#10'begin'#13#10'  // Nav Tree, and Resource Tree.'#13#10#13
  +#10'  TreeNodeId:=TreeLabelToID( myValue);'#13#10'  //ShowMessage(''OIDragIt'
  +'em nodeid ''+nodeId+'' node=''+myNode.NodeName+'' treenodeid=''+TreeNodeId)'
  +';'#13#10'  if nodeId = ''ResourceTree'' then'#13#10'  begin'#13#10'    Avai'
  +'lableResourcesSelectedNode:=FindDataNodeById(ResourcesNodeTree,TreeNodeId,'
  +''''',true);'#13#10'    //ShowMessage(''OIDragItem node ''+AvailableResource'
  +'sSelectedNode.NodeName);'#13#10'    if (AvailableResourcesSelectedNode<>nil'
  +')'#13#10'    and (AvailableResourcesSelectedNode.NodeName<>'''')'#13#10'   '
  +' and (AvailableResourcesSelectedNode.NodeType<>'''')'#13#10'    and (Availa'
  +'bleResourcesSelectedNode.NodeType<>''Demo'')'#13#10'    and (AvailableResou'
  +'rcesSelectedNode.NodeType<>''Test'') then'#13#10'      PickItem( AvailableR'
  +'esourcesSelectedNode);'#13#10'  end'#13#10'  else'#13#10'  if nodeId = ''Na'
  +'vTree'' then'#13#10'    begin'#13#10'      ObjectInspectorSelectedNavTreeNo'
  +'de:=FindDataNodeById(SystemNodeTree,TreeNodeId,'''',true);'#13#10'      Tre'
  +'eInFocus:=UIRootNode;'#13#10'      OICopySelectedItem;'#13#10'    end;'#13
  +#10'end;'#13#10#13#10'procedure OIDeleteSelectedItem;'#13#10'begin'#13#10'  '
  +'if TreeInFocus<>nil then'#13#10'  begin'#13#10'    if (TreeInFocus.NodeName'
  +'=SystemRootName)'#13#10'    and (ObjectInspectorSelectedNavTreeNode<>nil) t'
  ,'hen'#13#10'    begin'#13#10'      //showmessage(''OIDeleteItem ''+ObjectIns'
  +'pectorSelectedNavTreeNode.NodeName);'#13#10'      DeleteItem(UIRootNode,Obj'
  +'ectInspectorSelectedNavTreeNode)'#13#10'    end;'#13#10'  end;'#13#10'end;'
  +#13#10#13#10'function OIDeleteItem(NodeId,NameSpace:String;ShowNotFoundMsg:B'
  +'oolean=true):Boolean;'#13#10'var'#13#10'  NodeToDelete:TdataNode;'#13#10'  '
  +'Deleted:Boolean;'#13#10'begin'#13#10'  Deleted:=false;'#13#10'  NodeToDelet'
  +'e:=FindDataNodeById(UIRootNode,NodeId,NameSpace,ShowNotFoundMsg);'#13#10'  '
  +'if NodeToDelete<>nil then'#13#10'    Deleted:=DeleteItem(UIRootNode,NodeToD'
  +'elete);'#13#10'  result:=Deleted;'#13#10'end;'#13#10#13#10'procedure OISyst'
  +'emLoad(e:TEventStatus;nodeId:string);'#13#10'var'#13#10'  SystemDescription'
  +':String;'#13#10'  macroEvent:TMacroEvent;'#13#10'begin'#13#10'   {$ifdef JS'
  +'cript}'#13#10'   if not EventLogging.MacroEventList.Replaying then'#13#10' '
  +'  begin'#13#10'   {$endif}'#13#10#13#10'   if (e=nil)  or (e.InitRunning=fa'
  +'lse) then'#13#10'   begin'#13#10'     //showmessage(''new e'');'#13#10'    '
  +' if (e=nil) then'#13#10'     begin'#13#10'       e:=TEventStatus.Create(''C'
  +'lick'',nodeId);'#13#10'     end;'#13#10'     e.initRunning:=true;'#13#10'  '
  +'   PasteDialogUnit.CompletionEvent:=e;'#13#10'     {$ifdef JScript}'#13#10
  +'     e.AsyncProcsRunning.Add(''CopyFromClip'');'#13#10'     {$endif}'#13#10
  +#13#10'   end'#13#10'   else'#13#10'   begin'#13#10'     e.InitRunning:=fals'
  +'e;'#13#10'   end;'#13#10#13#10'   if e.InitRunning then'#13#10'   begin'#13
  +#10'     PasteDoneBtn.IsVisible:=false;'#13#10'     SystemDescription:=myget'
  +'ClipboardData(''System'');'#13#10'   end;'#13#10#13#10'   if e.EventHasWait'
  +'ingAsyncProcs = false then'#13#10'   // this is lazarus and a confirm dialo'
  +'g is not needed'#13#10'   // otherwise this is HTML and we have waited for '
  +'a ctrl-V event from the PasteDialog form'#13#10'   begin'#13#10'     {$ifnd'
  +'ef JScript}'#13#10'     // Lazarus only'#13#10'     //showmessage(''call Do'
  +'SystemLoad ''+SystemDescription);'#13#10'     DoSystemLoad(SystemDescriptio'
  +'n,'''');'#13#10'     {$else}'#13#10'     asm'#13#10'       pas.NodeUtils.St'
  +'artingUp=false;'#13#10'       var pasteTarget = document.getElementById(''P'
  +'asteTargetContents'');'#13#10'       var PasteString = pasteTarget.value;'
  +#13#10'       //alert(''Paste string = >''+PasteString+''<'' );'#13#10'     '
  +'  pas.XObjectInsp.DoSystemLoad(PasteString,'''');'#13#10'     end;'#13#10' '
  +'    {$endif}'#13#10'   end;'#13#10'{$ifdef JScript}'#13#10'  end'#13#10'  e'
  +'lse'#13#10'  begin'#13#10'    // replaying an event, so can''t handle async'
  +' stuff...'#13#10'    // Instead, pop the original pasted string off the eve'
  +'ntlist.'#13#10'    macroEvent:=AdvanceEventLog;'#13#10'    if macroEvent.Ev'
  +'entType<>''MemoPaste'' then'#13#10'    begin'#13#10'      showmessage(''oop'
  +'s cannot retrieve original pasted input'');'#13#10'      showmessage(''foun'
  +'d event ''+macroEvent.EventType+'' ''+macroevent.NodeId);'#13#10'    end'#13
  +#10'    else'#13#10'    begin'#13#10'      SystemDescription:=macroEvent.eve'
  +'ntvalue;'#13#10'      asm'#13#10'        pas.NodeUtils.StartingUp=false;'#13
  +#10'        alert(''Pasted string = >''+SystemDescription+''<'' );'#13#10'  '
  +'      pas.XObjectInsp.DoSystemLoad(SystemDescription,'''');'#13#10'      en'
  +'d;'#13#10'    end;'#13#10'  end;'#13#10'{$endif}'#13#10' end;'#13#10#13#10
  +'procedure OIClearSystem;'#13#10'var'#13#10'  i:integer;'#13#10'begin'#13#10
  +'    // close XForm windows'#13#10'    for i:=length(OpenXForms)-1 downto 0 '
  +'do'#13#10'    begin'#13#10'      CloseXForm(OpenXForms[i].NodeName,OpenXFor'
  +'ms[i].NameSpace);'#13#10'    end;'#13#10'    SetSystemName(''XIDESystem'');'
  +#13#10'    //UIRootNode.SetAttributeValue(''SystemName'',''XIDESystem'');'#13
  +#10#13#10'    ClearInspectors;'#13#10'    ClearAllDynamicNodes(SystemNodeTre'
  +'e); // clear any existing dynamic screen components under Root'#13#10#13#10
  +'    // open the properties tab in the object inspector'#13#10'    XIDEForm.'
  +'ObjectInspectorTabs.TabIndex:=0;'#13#10'    XIDEForm.OITabs.TabIndex:=0;'#13
  +#10'    XIDEForm.ResourceInspectorTabs.TabIndex:=0;'#13#10#13#10'    Rebuild'
  +'NavigatorTree;'#13#10'    RebuildCodeTree;'#13#10'    RebuildResourcesTree;'
  +#13#10'    InitialiseStyleDesigner;'#13#10#13#10' end;'#13#10#13#10'function'
  +' SetMyDeployedMode(wholesystem,dm2:String):String;'#13#10'var'#13#10'  dp1,'
  +'dp2:integer;'#13#10'begin'#13#10'  // look for the string /*Deployment*/'#13
  +#10'  dp1 := FoundString(wholesystem,''/*Deployment1*/'');'#13#10'  if dp1>0'
  +' then'#13#10'  begin'#13#10'    dp2:=FoundString(wholesystem,''/*Deployment'
  +'2*/'');'#13#10'    if dp2>0 then'#13#10'    begin'#13#10'      dp2:=dp2+15;'
  +#13#10'      Delete(wholesystem,dp1,(dp2-dp1));'#13#10'      Insert(''/*Depl'
  +'oyment1*/var myDeployedMode = ''''''+dm2+'''''';/*Deployment2*/'',wholesyst'
  +'em,dp1);'#13#10'    end;'#13#10'  end;'#13#10'  result:=wholesystem;'#13#10
  ,'end;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure CompleteDeploySystem(de'
  +'ployname:String);'#13#10'var'#13#10'  wholesystem,currentNodeTree,dm2,sysna'
  +'me,dpstr:String;'#13#10'  ok:boolean;'#13#10'  dp1,dp2:integer;'#13#10'begi'
  +'n'#13#10'  // make temporary changes to root node attributes'#13#10'  sysna'
  +'me:=UIRootNode.GetAttribute(''SystemName'',false).AttribValue;'#13#10'  dm2'
  +':=UIRootNode.GetAttribute(''DeploymentMode'',false).AttribValue;'#13#10'  U'
  +'IRootNode.SetAttributeValue(''SystemName'',deployname);'#13#10#13#10'  ok:='
  +'CompileEventCode(CodeEditForm.CodeEdit,''JSJS'');'#13#10'  DeleteGreyOverla'
  +'y(''Grey1'');'#13#10'  if ok then'#13#10'  begin'#13#10'    wholesystem:='''
  +'<!DOCTYPE HTML>''  +LineEnding;'#13#10'    // the resulting javascript will'
  +' have been inserted in the HTML page.'#13#10'    // dump the contents of th'
  +'e page onto the clipboard'#13#10'    // However, for deployed startup, this'
  +' needs to be amended in 3 places:'#13#10'    // wholesystem is a snapshot o'
  +'f the current page.  It also includes the javascript initialisation code wh'
  +'ich'#13#10'    // loads up the user''s system description on startup....'#13
  +#10'    // 1) Delete the contents of <body>. (is rebuilt on startup).'#13#10
  +'    // 2) Set the variable LoadedSystemString instead to supply the current'
  +' system state.'#13#10'    // 3) Set the variable myDeployedMode (Run, or De'
  +'sign).'#13#10#13#10'    asm'#13#10'      var htmlElement = document.getElem'
  +'entsByTagName("HTML")[0];'#13#10'      if (htmlElement!=null) {'#13#10'    '
  +'    var myBody = document.getElementsByTagName("BODY")[0];'#13#10'        i'
  +'f (myBody!=null) {'#13#10'          var saveme = myBody.innerHTML;'#13#10' '
  +'         myBody.innerHTML = ''<div  id = "UIRootNode" class="vbox" style="h'
  +'eight:100%; width:100%;top:0px;left:0px; position:relative; z-index:0;">'''
  +#13#10'            +''<div  id = "XIDEForm" class="vbox" style="height:100%;'
  +' width:100%;top:0px;left:0px">'''#13#10'            +''</div>'''#13#10'    '
  +'      +''</div>'';'#13#10'          wholesystem = wholesystem+''<HTML lang='
  +'"en">''+htmlElement.innerHTML+''</HTML>'';'#13#10'          myBody.innerHTM'
  +'L = saveme;'#13#10'          }'#13#10'        else {alert(''CompleteDeployS'
  +'ystem. body element not found'');}'#13#10'        }'#13#10'      else {aler'
  +'t(''CompleteDeploySystem. html element not found'');}'#13#10'    end;'#13#10
  +#13#10'    // set myDeployedMode...'#13#10'    wholesystem:=SetMyDeployedMod'
  +'e(wholesystem,dm2);'#13#10#13#10'    // set LoadedSystemString...'#13#10'  '
  +'  currentNodeTree := NodeTreeToXML(SystemNodeTree,nil,false,true);'#13#10' '
  +'   // look for the string ''pas.NodeUtils.LoadedSystemString ='''#13#10'   '
  +' dp1 := 0;'#13#10'    dp1 := FoundString(wholesystem,chr(112)+''as.NodeUtil'
  +'s.LoadedSystemString = "*";'');  // length 39'#13#10'    if dp1>0 then'#13
  +#10'    begin'#13#10'      dp1 := dp1 + 39;'#13#10'      dp2 := FoundString('
  +'wholesystem,''<\/Root>";'');   // length 10'#13#10'      if dp2>0 then'#13
  +#10'      begin'#13#10'        dp2 := dp2 + 10;'#13#10'        Delete(wholes'
  +'ystem,dp1,(dp2-dp1));'#13#10'        Insert(''pas.NodeUtils.LoadedSystemStr'
  +'ing = ''''''+currentNodeTree+'''''';'',wholesystem,dp1);'#13#10'      end;'
  +#13#10'    end;'#13#10#13#10'    PasteDialogUnit.PasteTarget.ItemValue:=whol'
  +'esystem;'#13#10'    PasteDialogUnit.PasteDoneBtn.IsVisible:=true;'#13#10'  '
  +'  PasteDialogUnit.PasteLabel.LabelCaption:=''Press Done to complete the cop'
  +'y to clipboard action'';'#13#10'    PasteDialogUnit.PasteTarget.IsVisible:='
  +'false;'#13#10#13#10'    OpenModal(''PasteDialog'');'#13#10#13#10'  end;'#13
  +#10'  UIRootNode.SetAttributeValue(''SystemName'',sysname);'#13#10'end;'#13
  +#10'{$endif}'#13#10#13#10'procedure OIDeploySystem;'#13#10'// Save a web-rea'
  +'dy copy of the whole system (including XIDE framework) to the clipboard'#13
  +#10'var'#13#10'  wholesystem,jsText,sysname,deployname:String;'#13#10'  line'
  +'s:TStringList;'#13#10'  ok:boolean;'#13#10'  dm:String;'#13#10'begin'#13#10
  +'  // First delete object inspector dynamic property editor fields'#13#10'  '
  +'ClearInspectors;'#13#10#13#10'  sysname:=UIRootNode.GetAttribute(''SystemNa'
  +'me'',false).AttribValue;'#13#10'  deployname:=XIDEPrompt(''Name of Deployed'
  +' System'',sysname);'#13#10#13#10'  {$ifndef JScript}'#13#10'  lines:=TStrin'
  +'gList.Create;'#13#10'  // Compile the user-created event code into a unit.'
  +#13#10'  ok:=CompileEventCode(CodeEditForm.CodeEdit,''LazJS'');'#13#10'  if '
  +'ok then'#13#10'  begin'#13#10'     Screen.Cursor := crHourglass;'#13#10#13
  +#10'     UIRootNode.SetAttributeValue(''SystemName'',deployname);'#13#10'   '
  +'  // Save the system definition data for the compiler'#13#10'     SaveSyste'
  +'mToIncFile;'#13#10'     UIRootNode.SetAttributeValue(''SystemName'',sysname'
  +');'#13#10#13#10'     // additional inc file for composite resources'#13#10
  +'     SaveCompositesToIncFile;'#13#10#13#10'     // now cross compile from a'
  ,' saved copy of this source with the conditional define'#13#10'     // switc'
  +'h (JScript) set to compile the JS version instead of the Lazarus version'#13
  +#10'     TranspileMyProgram(''XIDEMain'',ProjectDirectory,''resources/projec'
  +'t/'',CodeEditForm.CodeEdit,false);'#13#10'     if FileExists(''XIDEMain.js'
  +''') then'#13#10'       lines.LoadFromFile(''XIDEMain.js'');'#13#10'     Scr'
  +'een.Cursor := crDefault;'#13#10#13#10'  end'#13#10'  else'#13#10'  begin'#13
  +#10'    DisplayDllCompileErrors;'#13#10'  end;'#13#10#13#10'  jsText:=lines.'
  +'text;'#13#10'  dm:=UIRootNode.GetAttribute(''DeploymentMode'',false).Attrib'
  +'Value ;'#13#10'  wholesystem := CreateHTMLWrapper(''XIDEMain'',dm,true,jsTe'
  +'xt);'#13#10'  lines.Free;'#13#10'  myCopyToClip(''HTML System'',wholesystem'
  +' );'#13#10#13#10'  {$else}'#13#10'  ShowGreyOverlay(''UIRootNode'',''Grey1'
  +''');'#13#10'  // timeout here so the grey overlay appears'#13#10'  asm'#13
  +#10'    myTimeout(pas.XObjectInsp.CompleteDeploySystem,20,''CompleteDeploySy'
  +'stem'',0,deployname);'#13#10'  end;'#13#10#13#10'  {$endif}'#13#10#13#10'en'
  +'d;'#13#10#13#10'procedure OIComponentCopy(nodeId:string;myValue:string);'#13
  +#10'begin'#13#10'  PickItem( AvailableResourcesSelectedNode);'#13#10'end;'#13
  +#10#13#10'procedure ShowHideObjectInspector(show:Boolean);'#13#10'var'#13#10
  +'  aNode:TdataNode;'#13#10'begin'#13#10'   if not show then'#13#10'   begin'
  +#13#10'     DeHighlightObject(ObjectInspectorSelectedNavTreeNode);'#13#10'  '
  +'   ClearInspectors;'#13#10'   end;'#13#10#13#10'   aNode:=FindDataNodeById('
  +'SystemNodeTree,''InnerRootVBox'','''',true);'#13#10'   if aNode<>nil then'
  +#13#10'     ShowHideNode(aNode,show);'#13#10#13#10'   aNode:=FindDataNodeByI'
  +'d(SystemNodeTree,''ResourceInspectorTabs'','''',true);'#13#10'   if aNode<>'
  +'nil then'#13#10'     //if ShowResourceTree<>''Hide'' then'#13#10'       Sho'
  +'wHideNode(aNode,show);'#13#10#13#10'   if show then'#13#10'   begin'#13#10
  +'     //if ShowResourceTree<>''Hide'' then'#13#10'       TXScrollBox(UIRootI'
  +'tem.ScreenObject).ContainerWidth:=''60%'''#13#10'     //else'#13#10'     //'
  +'  TXScrollBox(UIRootItem.ScreenObject).ContainerWidth:=''80%'';'#13#10'   e'
  +'nd'#13#10'   else'#13#10'   begin'#13#10'     TXScrollBox(UIRootItem.Screen'
  +'Object).ContainerWidth:=''100%'';'#13#10'   end;'#13#10#13#10'end;'#13#10#13
  +#10'{$ifndef JScript}'#13#10'procedure RedisplayResourceTree;'#13#10'var'#13
  +#10'  hbox:TWinControl;'#13#10'  aNode:TdataNode;'#13#10'  ob1,ob2,ob3:TCont'
  +'rol;'#13#10'  lr:String;'#13#10'begin'#13#10'  aNode:=FindDataNodeById(Syst'
  +'emNodeTree,''RootHBox'','''',true);'#13#10'  hbox:=TWinControl(aNode.Screen'
  +'Object);'#13#10'  aNode:=FindDataNodeById(SystemNodeTree,''ResourceInspecto'
  +'rTabs'','''',true);'#13#10'  ob1:=TControl(aNode.ScreenObject);'#13#10'  //'
  +'if ShowResourceTree=''Hide'' then'#13#10'  //begin'#13#10'  //  TXTabContro'
  +'l(ob1).IsVisible:=false;'#13#10'  //end'#13#10'  //else'#13#10'  begin'#13
  +#10'    aNode:=FindDataNodeById(SystemNodeTree,''InnerRootVBox'','''',true);'
  +#13#10'    ob2:=TControl(aNode.ScreenObject);'#13#10'    aNode:=FindDataNode'
  +'ById(SystemNodeTree,''UIRoot'','''',true);'#13#10'    ob3:=TControl(aNode.S'
  +'creenObject);'#13#10#13#10'    hbox.RemoveControl(ob1);'#13#10'    hbox.Rem'
  +'oveControl(ob2);'#13#10'    hbox.RemoveControl(ob3);'#13#10#13#10'    lr:=U'
  +'IRootNode.GetAttribute(''ShowResources'',true).AttribValue;'#13#10'    //if'
  +' ShowResourceTree=''Left'' then'#13#10'    if lr=''Left'' then'#13#10'    b'
  +'egin'#13#10'      ob1.Parent:=hbox;'#13#10'      ob2.Parent:=hbox;'#13#10' '
  +'     ob3.Parent:=hbox;'#13#10'    end'#13#10'    //else if ShowResourceTree'
  +'=''Right'' then'#13#10'    else'#13#10'    begin'#13#10'      ob2.Parent:=h'
  +'box;'#13#10'      ob3.Parent:=hbox;'#13#10'      ob1.Parent:=hbox;'#13#10' '
  +'   end;'#13#10'    TXTabControl(ob1).IsVisible:=true;'#13#10'  end;'#13#10
  +'  if DesignMode then'#13#10'    ShowHideObjectInspector(true);'#13#10'end;'
  +#13#10'{$else}'#13#10'procedure RedisplayResourceTree;'#13#10'var'#13#10'  a'
  +'Node:TdataNode;'#13#10'  ob1:TObject;'#13#10'  lr:String;'#13#10'begin'#13
  +#10'  aNode:=FindDataNodeById(SystemNodeTree,''ResourceInspectorTabs'','''','
  +'true);'#13#10'  ob1:=aNode.ScreenObject;'#13#10'//  if ShowResourceTree=''H'
  +'ide'' then'#13#10'//  begin'#13#10'//    TXTabControl(ob1).IsVisible:=false'
  +';'#13#10'//  end'#13#10'//  else'#13#10'  begin'#13#10'    TXTabControl(ob1'
  +').IsVisible:=true;'#13#10'    lr:=UIRootNode.GetAttribute(''ShowResources'''
  +',true).AttribValue;'#13#10'    asm'#13#10'    var hbox=document.getElementB'
  +'yId(''RootHBoxContents'');'#13#10'    ob1=document.getElementById(''Resourc'
  +'eInspectorTabs'');'#13#10'    var ob2=document.getElementById(''InnerRootVB'
  +'ox'');'#13#10'    var ob3=document.getElementById(''UIRoot'');'#13#10#13#10
  +'    hbox.removeChild(ob1);'#13#10'    hbox.removeChild(ob2);'#13#10'    hbo'
  +'x.removeChild(ob3);'#13#10#13#10'    //if (pas.XObjectInsp.ShowResourceTree'
  ,'==''Left'') {'#13#10'    if (lr==''Left'') {'#13#10'      hbox.appendChild('
  +'ob1);'#13#10'      hbox.appendChild(ob2);'#13#10'      hbox.appendChild(ob3'
  +');'#13#10'    }'#13#10'    //if (pas.XObjectInsp.ShowResourceTree==''Right'
  +''') {'#13#10'    else {'#13#10'      hbox.appendChild(ob2);'#13#10'      hb'
  +'ox.appendChild(ob3);'#13#10'      hbox.appendChild(ob1);'#13#10'    }'#13#10
  +'    end;'#13#10'  end;'#13#10'  if DesignMode then'#13#10'    ShowHideObjec'
  +'tInspector(true);'#13#10'end;'#13#10'{$endif}'#13#10#13#10'procedure Displa'
  +'yDllCompileErrors;'#13#10'var'#13#10'  nm,nm2:String;'#13#10'begin'#13#10' '
  +' CodeEditForm.Mode:=''dll'';'#13#10'  CodeEditForm.InitialiseOnShow(''Compi'
  +'ler Errors'','''','''');'#13#10#13#10'  ShowXForm(''CodeEditForm'',true);  '
  +'   // the relevant text and message contents have already been populated'#13
  +#10#13#10'  {$ifndef JScript}'#13#10'  {$else}'#13#10'  nm:=CodeEditor.CodeE'
  +'ditForm.CodeEdit.NodeName;'#13#10'  nm2:=CodeEditor.CodeEditForm.CodeEditIn'
  +'it.NodeName;'#13#10'  asm'#13#10'  pas.XCode.DoKeyUp(nm2+''Contents'',nm2,'
  +''''',null);'#13#10'  pas.XCode.DoKeyUp(nm+''Contents'',nm,'''',null);'#13#10
  +'  end;'#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure CompleteT'
  +'oggleToRunMode(ok:boolean);'#13#10'var'#13#10'  MenuItemNode:TDataNode;'#13
  +#10'  MenuItem:TXMenuItem;'#13#10'//  Messages:TStringList;'#13#10'  dm:Stri'
  +'ng;'#13#10'  i:integer;'#13#10'begin'#13#10'  //showmessage(''CompleteToggl'
  +'eToRunMode'');'#13#10#13#10'  MenuItemNode:=FindDataNodeById(SystemNodeTree'
  +',''ToggleDesignRunMode'','''',true);'#13#10'  MenuItem:=TXMenuItem(MenuItem'
  +'Node.ScreenObject);'#13#10'  if ok then'#13#10'  begin'#13#10'    // event '
  +'code has compiled successfully'#13#10'    DesignMode:=false;'#13#10'    Men'
  +'uItem.Caption:=''Design Mode'';'#13#10'    // Hide Object Inspector'#13#10
  +'    ShowHideObjectInspector(false);'#13#10'    {$ifndef JScript}'#13#10'   '
  +' //Unload the events dll, if previously loaded'#13#10'    if MyLibC <>  Dyn'
  +'Libs.NilHandle then'#13#10'      if FreeLibrary(MyLibC) then'#13#10'       '
  +' MyLibC:= DynLibs.NilHandle;'#13#10#13#10'    GlobalSuppressFrameDisplay:=f'
  +'alse;'#13#10'    UnsuspendFrames(SystemNodeTree);'#13#10#13#10'    DoFormRe'
  +'size(MainForm, MainFormTopControl);'#13#10'    TWinControl(MainFormProjectR'
  +'oot.ScreenObject).SetFocus;'#13#10#13#10'    GatherSourcedAttributes(System'
  +'NodeTree);'#13#10'    PushAllSourcesToAttributes;'#13#10#13#10'    HandleEv'
  +'entLater(nil,''OnEnterRunMode'',''UIRootNode'','''','''');'#13#10'    {$els'
  +'e}'#13#10'    GatherSourcedAttributes(SystemNodeTree);'#13#10'    PushAllSo'
  +'urcesToAttributes;'#13#10#13#10'    HandleEvent(nil,''OnEnterRunMode'',''UI'
  +'RootNode'','''','''');'#13#10'    {$endif}'#13#10'  end'#13#10'  else'#13#10
  +'  begin'#13#10'    // compilation of event code has failed'#13#10'    {$ifn'
  +'def JScript}'#13#10'    DisplayDllCompileErrors;'#13#10'    {$else}'#13#10
  +'    if RunningDeployedRuntime   then'#13#10'    begin'#13#10'      showmess'
  +'age(''Unable to compile event code.  Cannot load this system'');'#13#10'   '
  +'   //!! need to clear the system here, or something.....'#13#10'      OICle'
  +'arSystem;'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10' //     Me'
  +'ssages:=TStringList.Create;'#13#10' //     Messages.Text:=CodeEditForm.Code'
  +'Edit.MessageLines;'#13#10'      DisplayDllCompileErrors;'#13#10'      CodeE'
  +'ditForm.NavigateToFirstError;'#13#10#13#10'    end;'#13#10'    {$endif}'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure Contin'
  +'ueToggleToRunMode;'#13#10'var'#13#10'  ok:Boolean;'#13#10'begin'#13#10'    '
  +'// Compile the user-created event code, using embedded pas2js compiler'#13
  +#10'    // and generate js'#13#10'    ok:=CompileEventCode(CodeEditForm.Code'
  +'Edit,''JSJS'');'#13#10'    CompleteToggleToRunMode(ok);'#13#10'    DeleteGr'
  +'eyOverlay(''Grey1'');'#13#10'end;'#13#10'{$endif}'#13#10#13#10#13#10'proced'
  +'ure DoToggleDesignRunMode(Sender:TXMenuItem);'#13#10'var'#13#10'  TargetNod'
  +'e :TDataNode;'#13#10'  myNode:TDataNode;'#13#10'  tmp,dm:string;'#13#10'  o'
  +'k:Boolean;'#13#10'  GPUNodes:TNodesArray;'#13#10'  i:integer;'#13#10'begin'
  +#13#10'  ok:=true;'#13#10'//  showmessage(''DoToggleDesignRunMode 1'');'#13
  +#10#13#10'  if (DesignMode=true)'#13#10'  then'#13#10'  begin'#13#10'    // '
  +'Go to Run Mode'#13#10'    EditAttributeValue(''XMemo1'','''',''ItemValue'','
  +''''',false);'#13#10'    SetLength(SourcedAttribs,0);'#13#10'    {$ifndef JS'
  +'cript}'#13#10'    // Check pas2js Compilation of the user-created event cod'
  +'e first.'#13#10'    ok:=CompileEventCode(CodeEditForm.CodeEdit,''LazJS'');'
  +#13#10'    if ok then'#13#10'    begin'#13#10'      // Now Compile the user-'
  +'created event code into the dll.'#13#10'      ok:=CompileEventCode(CodeEdit'
  +'Form.CodeEdit,''LazDll'');'#13#10'      CompleteToggleToRunMode(ok);'#13#10
  +'    end'#13#10'    else'#13#10'    begin'#13#10'      DisplayDllCompileErro'
  ,'rs;'#13#10'    end;'#13#10'    {$else}'#13#10'    for i:=length(OpenXForms)'
  +'-1 downto 0 do'#13#10'    begin'#13#10'      if OpenXForms[i].NameSpace='''
  +''' then'#13#10'        CloseXFormForDesign(OpenXForms[i].NodeName);'#13#10
  +'    end;'#13#10#13#10'    ShowGreyOverlay(''UIRootNode'',''Grey1'');'#13#10
  +'    // timeout here so the grey overlay appears'#13#10'    asm'#13#10'     '
  +' myTimeout(pas.XObjectInsp.ContinueToggleToRunMode,5,''ContinueToggleToRunM'
  +'ode'',0);'#13#10'    end;'#13#10'    {$endif}'#13#10'  end'#13#10'  else'#13
  +#10'  begin'#13#10'    // Go to Design Mode'#13#10'    if StartingUp=false t'
  +'hen'#13#10'    begin'#13#10'      // First, STOP any running GPU components'
  +#13#10'      GPUNodes:=FindNodesOfType(SystemNodeTree,''TXGPUCanvas'');'#13
  +#10'      for i:=0 to length(GPUNodes)-1 do'#13#10'      begin'#13#10'      '
  +'  if GPUNodes[i].ScreenObject<>nil then'#13#10'        begin'#13#10'       '
  +'   //showmessage(''stopping gpu ''+GPUNodes[i].NodeName);'#13#10'          '
  +'TXGPUCanvas(GPUNodes[i].ScreenObject).Active:=false;'#13#10'        end;'#13
  +#10'      end;'#13#10'    end;'#13#10'    {$ifdef JScript}'#13#10'    if Run'
  +'ningDeployedRuntime then'#13#10'    begin'#13#10'      showmessage(''Design'
  +' Mode not available'');'#13#10'      EXIT;'#13#10'    end;'#13#10'    {$end'
  +'if}'#13#10#13#10'    DesignMode:=true;'#13#10'    SetLength(SourcedAttribs,'
  +'0);        // keep these during design mode !!!!????'#13#10'    TXMenuItem('
  +'Sender).Caption:=''Run Mode'';'#13#10'    // Show Object Inspector'#13#10' '
  +'   ShowHideObjectInspector(true);'#13#10'    {$ifndef JScript}'#13#10'    G'
  +'lobalSuppressFrameDisplay:=true;'#13#10'    DoFormResize(MainForm,MainFormT'
  +'opControl);'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10
  +#13#10'procedure EditResourceAttributeValue(NodeName,AttrName,NewValue:strin'
  +'g);'#13#10'// Editing a node in  the Resources Navigator tree'#13#10'var'#13
  +#10'   myNode:TDataNode;'#13#10'   myAttrib:TNodeAttribute;'#13#10'begin'#13
  +#10'   // find the given node'#13#10'   myNode:=FindDataNodeById(ResourcesNo'
  +'deTree,NodeName,'''',true);'#13#10'   if myNode<>nil then'#13#10'   begin'
  +#13#10'     myAttrib:=myNode.GetAttribute(AttrName,false);'#13#10'     if my'
  +'Attrib.AttribValue<>NewValue then'#13#10'     begin'#13#10'       // update'
  +' the attribute value'#13#10'       myNode.SetAttributeValue(AttrName,NewVal'
  +'ue);'#13#10'     end;'#13#10'   end;'#13#10'end;'#13#10#13#10'procedure Sav'
  +'eEditedInputs(targetNode:TDataNode;myInputs:TCodeInputs);'#13#10'var'#13#10
  +'  //j,k:integer;'#13#10'  InputStr:String;'#13#10'begin'#13#10'  //if Event'
  +'Num>-1 then'#13#10'  //begin'#13#10'  //  k:=0;'#13#10'  //  for j:=0 to le'
  +'ngth(myInputs)-1 do'#13#10'  //    if trim(myInputs[j].InputNodeName)<>'''''
  +' then'#13#10'  //    begin'#13#10'  //        setlength(targetNode.myEventH'
  +'andlers[EventNum].TheInputs,k+1);'#13#10'  //        targetNode.myEventHand'
  +'lers[EventNum].TheInputs[k].InputSynonym:=myInputs[j].InputSynonym;'#13#10
  +'  //        targetNode.myEventHandlers[EventNum].TheInputs[k].InputNodeName'
  +':=myInputs[j].InputNodeName;'#13#10'  //        targetNode.myEventHandlers['
  +'EventNum].TheInputs[k].InputAttribName:=myInputs[j].InputAttribName;'#13#10
  +'  //        targetNode.myEventHandlers[EventNum].TheInputs[k].InputValue:='
  +''''';'#13#10'  //        k:=k+1;'#13#10'  //    end;'#13#10'  //end'#13#10
  +'  //else'#13#10'  begin'#13#10'    InputStr:=CodeInputsToString(myInputs);'
  +#13#10'    targetNode.SetAttributeValue(''Inputs'',InputStr);'#13#10'  end;'
  +#13#10#13#10'end;'#13#10#13#10'procedure EditEventCode(NodeNameToEdit,EventT'
  +'oEdit,MainCode,InitCode:String);'#13#10'var'#13#10'  targetNode:TDataNode;'
  +#13#10'  i,j,k:integer;'#13#10'begin'#13#10'  targetNode:=FindDataNodeById(S'
  +'ystemNodetree,NodeNameToEdit,'''',true);'#13#10#13#10'  for i:=0 to targetN'
  +'ode.myEventTypes.count-1 do'#13#10'  begin'#13#10'    if targetNode.myEvent'
  +'Types[i] = EventToEdit then'#13#10'    begin'#13#10'      targetNode.myEven'
  +'tHandlers[i].TheCode:=MainCode;'#13#10'      targetNode.myEventHandlers[i].'
  +'InitCode:=InitCode;'#13#10'    end;'#13#10'  end;'#13#10#13#10'end;'#13#10
  +#13#10'procedure TOIEventWrapper.TestButtonClick(e:TEventStatus;nodeId:strin'
  +'g;myValue:string);'#13#10'begin'#13#10'            //showmessage(''OIEditPr'
  +'operty ''+nodeId+'' ''+myValue);'#13#10'            EditAttributeValue(''Te'
  +'stDynamic1'','''',''Caption'',''dynamic event ok'');'#13#10'end;'#13#10#13
  +#10'procedure TOIEventWrapper.OIEditPropertyButtonClick(e:TEventStatus;nodeI'
  +'d:string;myValue:string);'#13#10'var'#13#10'  bits:TStringList;'#13#10'  No'
  +'deNameToEdit,PropertyToEdit, EditBoxName, SourceName, tempstr:String;'#13#10
  +'  targetNode:TDataNode;'#13#10'  targetAttribute:TNodeAttribute;'#13#10'  A'
  +'llKernels:TAnimCodeArray;'#13#10'begin'#13#10'  bits:=stringsplit(nodeId,At'
  +'tributeEditorNameDelimiter);'#13#10'  if bits.Count = 4 then'#13#10'  begin'
  ,#13#10'    if (bits[0]=''OI'') or (bits[0]=''RI'') then       // OI, Editbox'
  +'name, NodeName, suffix'#13#10'    begin'#13#10'      NodeNameToEdit:=bits[1'
  +'];'#13#10'      PropertyToEdit:=bits[2];'#13#10'    end;'#13#10'  end;'#13
  +#10#13#10'  targetNode:=FindDataNodeById(SystemNodeTree,NodeNameToEdit,'''','
  +'true);'#13#10'  targetAttribute:= targetNode.GetAttribute(PropertyToEdit,tr'
  +'ue);'#13#10#13#10'  if (targetNode.NodeType<>''TXGPUCanvas'')'#13#10'  or ('
  +'targetAttribute.AttribName<>''AnimationCode'') then'#13#10'  begin'#13#10' '
  +'   // pop up the property editor.'#13#10'    PropertyEditForm.TargetNode:=t'
  +'argetNode;'#13#10'    PropertyEditForm.TargetAttribute:=targetAttribute;'#13
  +#10#13#10'    // show validation details (eg range, function,...) according '
  +'to type....'#13#10'    // and display data source details...'#13#10'    Pro'
  +'pertyEditForm.PropertyEditName.ItemValue:=PropertyToEdit;'#13#10'    Proper'
  +'tyEditForm.PropertyEditType.ItemValue:=targetAttribute.AttribType;'#13#10' '
  +'   SourceName:=targetAttribute.AttribSource.InputNodeName;'#13#10'    if ta'
  +'rgetAttribute.AttribSource.InputAttribName<>'''' then'#13#10'    begin'#13
  +#10'      SourceName:=SourceName+''.''+targetAttribute.AttribSource.InputAtt'
  +'ribName;'#13#10'//      showmessage(''This attribute has source ''+SourceNa'
  +'me);'#13#10'    end;'#13#10'    PropertyEditForm.PropertyEditSourceBox.Item'
  +'Value:=SourceName;'#13#10'    // PropertyEditBox is the editbox (or combobo'
  +'x, checkbox etc) in the object inspector...'#13#10'    EditBoxName:=myStrin'
  +'gReplace(nodeId,''Btn'','''',1,9999);'#13#10'    PropertyEditBox:=FindDataN'
  +'odeById(SystemNodeTree,EditBoxName,'''',true);'#13#10#13#10'    PropertyEdi'
  +'tForm.SetupPages;'#13#10'    ShowXForm(''PropertyEditForm'',true);'#13#10' '
  +' end'#13#10'  else'#13#10'  // Special Case - edit the AnimationCode in a T'
  +'XGPUCanvas component using the dedicated popup editor...'#13#10'  begin'#13
  +#10'    ShowGPUEditor(targetNode);'#13#10'//     // the animation code may c'
  +'onsist of several kernel procedures.'#13#10'//     // These are delimited b'
  +'y the EventListDelimiter string.'#13#10'//     // The GPU Code Editor needs'
  +' to show the first kernel proc.'#13#10'//     AllKernels:=TXGPUCanvas(targe'
  +'tNode.ScreenObject).FetchAllAnimCode;'#13#10'//     XGPUEditor.GPUCodeEdito'
  +'r.ItemValue:=AllKernels[0].Text;'#13#10'//     XGPUEditor.GPUCodeEditor.Mes'
  +'sageLines:='''';'#13#10'//     XGPUEditor.GPUCodeEditor.MessagesHeight:=''1'
  +''';'#13#10'//     XGPUEditor.GPUMemo.ItemValue:=TXGPUCanvas(targetNode.Scre'
  +'enObject).GeneratedHTML;'#13#10'//     EditingGPUNode:=targetNode;'#13#10'/'
  +'/     GPUEditorMode:=''Animation'';'#13#10'//     XGPUEditor.GPUCodeEditor.'
  +'ReadOnly:=false;'#13#10'//     GPUComboBox.OptionList:=TXGPUCanvas(targetNo'
  +'de.ScreenObject).BuildKernelList;'#13#10'//     GPUComboBox.ItemIndex:=0;'
  +#13#10'//     GPUComboBox.PriorIndex:=0;'#13#10'//     GPUEditorForm.Showing'
  +':=''Modal'';'#13#10'  end;'#13#10#13#10'end;'#13#10#13#10'procedure TOIEven'
  +'tWrapper.OIEditProperty(e:TEventStatus;nodeId:string;myValue:string);'#13#10
  +'var'#13#10'  bits:TStringList;'#13#10'  NodeNameToEdit,AttrNameToEdit:Strin'
  +'g;'#13#10'  ok:boolean;'#13#10'begin'#13#10'  //showmessage(''OIEditPropert'
  +'y ''+nodeId+'' ''+myValue);'#13#10'  // fudge...'#13#10'  ok:=true;'#13#10
  +'  {$ifdef JScript}'#13#10'  asm'#13#10'    if (myValue==undefined) {ok=fals'
  +'e};'#13#10'  end;'#13#10'  if not ok then EXIT;'#13#10'  {$endif}'#13#10'  '
  +'    bits:=stringsplit(nodeId,AttributeEditorNameDelimiter);'#13#10'      if'
  +' bits.Count = 4 then'#13#10'      begin'#13#10'        if (bits[0]=''OI'') '
  +'or (bits[0]=''RI'') then       // OI, Editboxname, NodeName, Attrname, suff'
  +'ix'#13#10'        begin'#13#10'          NodeNameToEdit:=bits[1];'#13#10'  '
  +'        AttrNameToEdit:=bits[2];'#13#10'          if bits[0]=''OI'' then'#13
  +#10'          begin'#13#10'            //showmessage(''OIEditProperty ''+nod'
  +'eId+'' ''+AttrNameToEdit+'' ''+myValue);'#13#10'            EditAttributeVa'
  +'lue(NodeNameToEdit,'''',AttrNameToEdit,myValue);'#13#10'            Refresh'
  +'ObjectInspector(ObjectInspectorSelectedNavTreeNode);'#13#10'          end'
  +#13#10'          else'#13#10'            EditResourceAttributeValue(NodeName'
  +'ToEdit,AttrNameToEdit,myValue);'#13#10#13#10'        end;'#13#10'      end;'
  +#13#10'end;'#13#10#13#10'procedure TOIEventWrapper.OIEditEvent(e:TEventStatu'
  +'s;nodeId:string;myValue:string);'#13#10'var'#13#10'  bits:TStringList;'#13
  +#10'  NodeNameToEdit,EventToEdit,EventInitCode:String;'#13#10'  EventNode:TD'
  +'ataNode;'#13#10'begin'#13#10'      bits:=stringsplit(nodeId,AttributeEditor'
  +'NameDelimiter);'#13#10'      if bits.Count = 4 then'#13#10'      begin'#13
  +#10'        if (bits[0]=''OI'') or (bits[0]=''RI'') then       // OI, Editbo'
  +'xname, NodeName, suffix'#13#10'        begin'#13#10'          NodeNameToEdi'
  +'t:=bits[1];'#13#10'          EventToEdit:=bits[2];'#13#10'          EventNo'
  ,'de:=FindDataNodeById(SystemNodeTree,NodeNameToEdit,'''',true);'#13#10'     '
  +'     EventInitCode:=EventNode.GetEventCode(EventToEdit);'#13#10'          /'
  +'/showmessage(''OIEditEvent ''+nodeId+'' ''+myValue);'#13#10'          EditE'
  +'ventCode(NodeNameToEdit,EventToEdit,myValue,EventInitCode);'#13#10'        '
  +'end;'#13#10'      end;'#13#10'end;'#13#10#13#10'procedure CodeEditorClosed('
  +'EditBoxNode:TdataNode);'#13#10'var'#13#10'  tmp:string;'#13#10'  CodeNode:T'
  +'DataNode;'#13#10'begin'#13#10'  //showmessage(''CodeEditorClosed. Mode=''+C'
  +'odeEditForm.Mode+'' return status ''+ CodeEditStatus);'#13#10'  if CodeEdit'
  +'Status = ''ok'' then'#13#10'  begin'#13#10'    tmp:=CodeEditForm.CodeEdit.I'
  +'temValue;'#13#10'    if CodeEditForm.Mode=''EventCode'' then'#13#10'    beg'
  +'in'#13#10'      if EditBoxNode<>nil then'#13#10'         // set value of th'
  +'e associated edit box'#13#10'         TXEditBox(EditBoxNode.ScreenObject).I'
  +'temValue:=CodeEditForm.CodeEdit.ItemValue;'#13#10'         // nb. above doe'
  +'sn''t trigger the onchange event for the edit box.'#13#10'      // update t'
  +'he Code data...'#13#10'      EditEventCode(CodeEditForm.TargetNodeName,Code'
  +'EditForm.EventType,CodeEditForm.CodeEdit.ItemValue,'#13#10'                '
  +'                                                       CodeEditForm.CodeEdi'
  +'tInit.ItemValue);'#13#10'      if ObjectInspectorSelectedNavTreeNode<>nil t'
  +'hen'#13#10'        RefreshObjectInspector(ObjectInspectorSelectedNavTreeNod'
  +'e);'#13#10#13#10'    end'#13#10'    else if (CodeEditForm.Mode=''UnitCode'''
  +')'#13#10'      or (CodeEditForm.Mode=''RawUnitCode'')'#13#10'      or (Code'
  +'EditForm.Mode=''FunctionCode'') then'#13#10'    begin'#13#10'      tmp:=Cod'
  +'eEditForm.TargetNodeName;'#13#10'      // name of unit is in TargetNodeName'
  +#13#10'      CodeNode:=FindDataNodeById(CodeRootNode,CodeEditForm.TargetNode'
  +'Name,'''',true);'#13#10'      if (CodeNode.NodeType=''RawUnit'')'#13#10'   '
  +'   and (CodeEditForm.Mode=''FunctionCode'') then'#13#10'      begin'#13#10
  +'        // we are displaying compiler errors in the unit...'#13#10'        '
  +'// !!!! needs sorting out. Unit code is partly auto-generated so cannot all'
  +'ow edits here !!!!'#13#10'        showmessage(''arg - see CodeEditorClosed'
  +''');'#13#10'      end'#13#10'      else'#13#10'      begin'#13#10'        t'
  +'mp:=CodeEditForm.CodeEdit.ItemValue;'#13#10'        CodeNode.SetAttributeVa'
  +'lue(''Code'',tmp,''String'');'#13#10'        tmp:=CodeEditForm.codeeditFunc'
  +'tionResultType.ItemValue;'#13#10'        CodeNode.SetAttributeValue(''Type'
  +''',tmp,''String'');'#13#10'        SaveEditedInputs(CodeNode,CodeEditForm.M'
  +'yInputs);'#13#10'      end;'#13#10'    end'#13#10'    else if (CodeEditForm'
  +'.Mode=''SearchCode'')  then'#13#10'    begin'#13#10'      // do nothing'#13
  +#10'    end;'#13#10#13#10'    RebuildCodeTree;'#13#10'  end;'#13#10'  OIEdit'
  +'Box:=nil;'#13#10'end;'#13#10#13#10'procedure PropertyEditorClosed(EditBoxNo'
  +'de:TdataNode);'#13#10'var'#13#10'  tmp:string;'#13#10'  SourceBits:TStringL'
  +'ist;'#13#10'  SourceNode, SourceAttrib:String;'#13#10'  EditNode:TDataNode;'
  +#13#10'begin'#13#10'  //showmessage(''PropertyEditorClosed. return status '''
  +'+ PropertyEditStatus);'#13#10'  if PropertyEditStatus = ''ok'' then'#13#10
  +'  begin'#13#10'    EditNode:= PropertyEditForm.EditNode;'#13#10'    // Set '
  +'the value of TargetAttribute from the widget on the Edit tabpage...'#13#10
  +'    if EditNode.NodeType=''TXEditBox'' then'#13#10'      PropertyEditForm.T'
  +'argetAttribute.AttribValue:=EditNode.GetAttribute(''ItemValue'',false).Attr'
  +'ibValue'#13#10'    else if EditNode.NodeType=''TXMemo'' then'#13#10'      P'
  +'ropertyEditForm.TargetAttribute.AttribValue:=EditNode.GetAttribute(''ItemVa'
  +'lue'',false).AttribValue'#13#10'    else if EditNode.NodeType=''TXTree'' th'
  +'en'#13#10'     PropertyEditForm.TargetAttribute.AttribValue:=EditNode.GetAt'
  +'tribute(''TreeData'',false).AttribValue'#13#10'    else if EditNode.NodeTyp'
  +'e=''TXTable'' then'#13#10'    begin'#13#10'      PropertyEditForm.TargetAtt'
  +'ribute.AttribValue:=EditNode.GetAttribute(''TableData'',false).AttribValue;'
  +#13#10'      if PropertyEditForm.TargetAttribute.AttribName=''TableData'' th'
  +'en'#13#10'      begin'#13#10'        PropertyEditForm.TargetNode.SetAttribu'
  +'teValue(''NumRows'',EditNode.GetAttribute(''NumRows'',false).AttribValue);'
  +#13#10'        PropertyEditForm.TargetNode.SetAttributeValue(''NumCols'',Edi'
  +'tNode.GetAttribute(''NumCols'',false).AttribValue);'#13#10'      end;'#13#10
  +'    end'#13#10'    else if EditNode.NodeType=''TXCheckBox'' then'#13#10'   '
  +'   PropertyEditForm.TargetAttribute.AttribValue:=EditNode.GetAttribute(''Ch'
  +'ecked'',false).AttribValue'#13#10'    else if EditNode.NodeType=''TXComboBo'
  +'x'' then'#13#10'      PropertyEditForm.TargetAttribute.AttribValue:=EditNod'
  +'e.GetAttribute(''ItemValue'',false).AttribValue'#13#10'    else if EditNode'
  +'.NodeType=''TXColorPicker'' then'#13#10'      PropertyEditForm.TargetAttrib'
  ,'ute.AttribValue:=EditNode.GetAttribute(''ItemValue'',false).AttribValue;'#13
  +#10#13#10'    //showmessage(''PropertyEditorClosed. calling EditAttributeVal'
  +'ue'');'#13#10'    // Update the property value in the target node...'#13#10
  +'    //EditAttributeValue(PropertyEditForm.TargetNode.NodeName,'''',Property'
  +'EditForm.TargetAttribute.AttribName,PropertyEditForm.TargetAttribute.Attrib'
  +'Value);'#13#10'    EditAttributeValue(PropertyEditForm.TargetNode,PropertyE'
  +'ditForm.TargetAttribute.AttribName,PropertyEditForm.TargetAttribute.AttribV'
  +'alue);'#13#10#13#10'    // Set the data source for the property, if specifi'
  +'ed...'#13#10'    tmp:=trim(PropertyEditForm.PropertyEditSourceBox.ItemValue'
  +');'#13#10'    if tmp<>'''' then'#13#10'    begin'#13#10'      SourceBits:=s'
  +'tringsplit(tmp,''.'');'#13#10'      SourceNode:=SourceBits[0];'#13#10'     '
  +' if SourceBits.Count>1 then'#13#10'        SourceAttrib:=SourceBits[1];'#13
  +#10'      PropertyEditForm.TargetNode.SetAttributeSource(PropertyEditForm.Ta'
  +'rgetAttribute.AttribName,SourceNode,SourceAttrib);'#13#10'    end'#13#10'  '
  +'  else'#13#10'    begin'#13#10'      PropertyEditForm.TargetNode.SetAttribu'
  +'teSource(PropertyEditForm.TargetAttribute.AttribName,'''','''');'#13#10'   '
  +' end;'#13#10#13#10'    RefreshObjectInspector(PropertyEditForm.TargetNode);'
  +#13#10'  end;'#13#10'  PropertyEditBox:=nil;'#13#10'end;'#13#10#13#10'proced'
  +'ure TOIEventWrapper.OIEditEventCodeFromCodeTree(NodeNameToEdit:string;Event'
  +'ToEdit:string);'#13#10'var'#13#10'  EditBoxName, EventCode, EventInitCode:s'
  +'tring;'#13#10'  bits:TStringList;'#13#10'  targetNode:TDataNode;'#13#10'  E'
  +'ventNum,i:integer;'#13#10'begin'#13#10'  // pop up the syntax editor.'#13#10
  +'//  CodeEditForm.Initialise(''Event Handler'',NodeNameToEdit,EventToEdit);'
  +#13#10'//  EditBoxName:=myStringReplace(nodeId,''Btn'','''',1,9999);'#13#10
  +'//  OIEditBox:=FindDataNodeById(SystemNodeTree,EditBoxName,'''',true);'#13
  +#10'  OIEditBox:=nil;'#13#10'  targetNode:=FindDataNodeById(SystemNodeTree,N'
  +'odeNameToEdit,'''',true);'#13#10'  EventCode:=targetNode.GetEventCode(Event'
  +'ToEdit);'#13#10'  EventInitCode:=targetNode.GetEventInitCode(EventToEdit);'
  +#13#10'  if Trim(EventCode)='''' then'#13#10'  begin'#13#10'    // provide a'
  +' template event procedure'#13#10'    EventCode:= ''begin'' + LineEnding +'
  +#13#10'                '' '' + LineEnding +'#13#10'                ''end;'' '
  +'+ LineEnding;'#13#10'  end;'#13#10'  CodeEditForm.CodeEdit.ItemValue := Eve'
  +'ntCode;'#13#10'  CodeEditForm.CodeEditInit.ItemValue := EventInitCode;'#13
  +#10'  EventNum:=targetNode.EventNum(EventToEdit);'#13#10'  CodeEditForm.Code'
  +'Edit.MessageLines:='''';'#13#10'  CodeEditForm.CodeEditInit.MessageLines:='
  +''''';'#13#10#13#10'  CodeEditForm.CodeEditMainTabs.TabIndex:=0;'#13#10'  Co'
  +'deEditForm.Mode:=''EventCode'';'#13#10'  CodeEditForm.InitialiseOnShow(''Ev'
  +'ent Handler'',NodeNameToEdit,EventToEdit);'#13#10'  ShowXForm(''CodeEditFor'
  +'m'',true);'#13#10#13#10'  {$ifndef JScript}'#13#10'  // on return....'#13#10
  +'  //CodeEditorClosed(OIEditBox);'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'procedure TOIEventWrapper.OIEditEventCode(e:TEventStatus;nodeId:string;myVa'
  +'lue:string);'#13#10'var'#13#10'  EditBoxName, EventCode, EventInitCode:stri'
  +'ng;'#13#10'  bits:TStringList;'#13#10'  NodeNameToEdit,EventToEdit:String;'
  +#13#10'  targetNode:TDataNode;'#13#10'  EventNum,i:integer;'#13#10'begin'#13
  +#10'  bits:=stringsplit(nodeId,AttributeEditorNameDelimiter);'#13#10'  if bi'
  +'ts.Count = 4 then'#13#10'  begin'#13#10'    if (bits[0]=''OI'') or (bits[0]'
  +'=''RI'') then       // OI, Editboxname, NodeName, suffix'#13#10'    begin'
  +#13#10'      NodeNameToEdit:=bits[1];'#13#10'      EventToEdit:=bits[2];'#13
  +#10'    end;'#13#10'  end;'#13#10'  // pop up the syntax editor.'#13#10'  //'
  +' remove the ''Btn'' suffix'#13#10'  EditBoxName:=Copy(nodeId,1,length(nodeI'
  +'d)-3);'#13#10'  OIEditBox:=FindDataNodeById(SystemNodeTree,EditBoxName,'''''
  +',true);'#13#10'  EventCode:=TXEditBox(OIEditBox.ScreenObject).ItemValue;'#13
  +#10'  if Trim(EventCode)='''' then'#13#10'  begin'#13#10'    // provide a te'
  +'mplate event procedure'#13#10'    if (FoundString(EventToEdit,''Thread'')=1'
  +')'#13#10'    and (FoundString(EventToEdit,''ThreadVars'')<>1) then'#13#10' '
  +'     EventCode:= DfltThreadEventCode(NodeNameToEdit)'#13#10'    else if (Ev'
  +'entToEdit=''DropAccepted'') then'#13#10'      EventCode := DfltTreeNodeEven'
  +'tCode'#13#10'    else'#13#10'      EventCode:= DfltEventCode;'#13#10'  end;'
  +#13#10'  CodeEditForm.CodeEdit.ItemValue := EventCode;'#13#10'  targetNode:='
  +'FindDataNodeById(SystemNodeTree,NodeNameToEdit,'''',true);'#13#10'  CodeEdi'
  +'tForm.CodeEditInit.ItemValue := targetNode.GetEventInitCode(EventToEdit);'
  +#13#10#13#10'  CodeEditForm.CodeEdit.MessageLines:='''';'#13#10'  CodeEditFo'
  +'rm.CodeEditInit.MessageLines:='''';'#13#10#13#10'  CodeEditForm.Mode:=''Eve'
  +'ntCode'';'#13#10'  CodeEditForm.CodeEditMainTabs.TabIndex:=0;'#13#10'  Code'
  ,'EditForm.InitialiseOnShow(''Event Handler'',NodeNameToEdit,EventToEdit);'#13
  +#10#13#10'  ShowXForm(''CodeEditForm'',true);'#13#10#13#10'end;'#13#10#13#10
  +'{$ifdef JScript}'#13#10'procedure TOIEventWrapper.OIPasteTarget(e:TEventSta'
  +'tus;nodeId:string;myValue:string);'#13#10'var'#13#10'  i:integer;'#13#10'  '
  +'PasteEvent:TEventStatus;'#13#10'begin'#13#10'//  happens when user hits ctr'
  +'l-V on the paste dialog form'#13#10'//  showmessage(''OIPasteTarget. value='
  +'''+myValue);'#13#10#13#10'  PasteEvent:=PasteDialogUnit.CompletionEvent;'#13
  +#10#13#10'  if PasteEvent<>nil then'#13#10'  begin'#13#10'    i:=PasteEvent.'
  +'AsyncProcsRunning.IndexOf(''CopyFromClip'');'#13#10'    if i>-1 then'#13#10
  +'    begin'#13#10'      PasteEvent.AsyncProcsRunning.Delete(i);'#13#10'    e'
  +'nd;'#13#10'  end;'#13#10'  FinishHTMLPasteAction(myValue);'#13#10#13#10'end'
  +';'#13#10'{$endif}'#13#10#13#10#13#10#13#10'function OITreeNodeHint(TreeLabe'
  +'lStr:String):String;'#13#10'var'#13#10'   SystemNodeName:string;'#13#10'beg'
  +'in'#13#10'  //showmessage(''OINodeTreeHint ''+TreeLabelStr);'#13#10'  Syste'
  +'mNodeName:=TreeLabelToID( TreeLabelStr);'#13#10'  result := GetNavigatorHin'
  +'t(SystemNodeTree,SystemNodeName);'#13#10'end;'#13#10#13#10'procedure AddPro'
  +'pertyEditButton(BoxName:String; PropHBox:TXHBox; HBoxNode:TDataNode;ro:Bool'
  +'ean);'#13#10'//                     HBox     <name>HB'#13#10'//            '
  +'           widget   <name>'#13#10'//                       Button    <name>'
  +'Btn'#13#10'var'#13#10'  NewBtn:TXButton;'#13#10'  BtnNode:TDataNode;'#13#10
  +'begin'#13#10'    NewBtn:=TXButton(AddDynamicWidget(''TXButton'',MainForm,HB'
  +'oxNode,BoxName+''Btn'','''',''Top'',-1).ScreenObject);'#13#10'    NewBtn.Bu'
  +'ttonWidth:=''30px'';'#13#10'    NewBtn.SpacingAround:=0;'#13#10#13#10'    i'
  +'f ro then'#13#10'    begin'#13#10'      NewBtn.Caption:='' '';'#13#10'     '
  +' NewBtn.Enabled:=false'#13#10'    end'#13#10'    else'#13#10'    begin'#13
  +#10'      NewBtn.Caption:=''...'';'#13#10'      NewBtn.Hint:=''Edit Property'
  +''';'#13#10'      NewBtn.myNode.RegisterEvent(''ButtonClick'',@OIEventWrappe'
  +'r.OIEditPropertyButtonClick);'#13#10'    end;'#13#10'end;'#13#10#13#10'func'
  +'tion AddPropertyContainer(ParentNode:TDataNode;BoxName:String; var VBoxNode'
  +',HBoxNode:TdataNode):TXHbox;'#13#10'var'#13#10'  NewHBox:TXHBox;'#13#10'  N'
  +'ewVBox:TXVBox;'#13#10'   //                   VBox     <name>VB'#13#10'   /'
  +'/                     HBox     <name>HB'#13#10'begin'#13#10'  VBoxNode:=Add'
  +'DynamicWidget(''TXVBox'',MainForm,ParentNode,BoxName+''VB'','''',''Left'',-'
  +'1);'#13#10'  NewVBox:=TXVBox(VBoxNode.ScreenObject);'#13#10'  HBoxNode:=Add'
  +'DynamicWidget(''TXHBox'',MainForm,VBoxNode,BoxName+''HB'','''',''Right'',-1'
  +');'#13#10'  NewHBox:=TXHBox(HBoxNode.ScreenObject);'#13#10#13#10'  NewVBox.'
  +'Border:=false;'#13#10'  NewHBox.Border:=false;'#13#10'  NewHBox.ContainerHe'
  +'ight:='''';'#13#10#13#10'  NewHBox.Alignment:=''Right'';'#13#10#13#10'  res'
  +'ult:=NewHBox;'#13#10'end;'#13#10#13#10'procedure AddCheckBox(PropertiesNode'
  +':TDataNode;BoxName,LblText,ItmValue:String;ro:Boolean;attribHint:String);'
  +#13#10'var'#13#10'  NewCheckBox:TXCheckBox;'#13#10'  NewHBox:TXHBox;'#13#10
  +'  NewNode, HBoxNode, VBoxNode:TDataNode;'#13#10'  fn:TAddComponentFunc;'#13
  +#10'begin'#13#10'  NewHBox:=AddPropertyContainer(PropertiesNode,BoxName,VBox'
  +'Node,HBoxNode);'#13#10'  NewCheckBox:=TXCheckBox(AddDynamicWidget(''TXCheck'
  +'Box'',MainForm,HBoxNode,BoxName,'''',''Top'',-1).ScreenObject);'#13#10#13#10
  +'  AddPropertyEditButton(BoxName,NewHBox,HBoxNode,ro);'#13#10#13#10'  NewChe'
  +'ckBox.Checked:=myStrToBool(ItmValue);'#13#10'  NewCheckBox.LabelText:=LblTe'
  +'xt;'#13#10'  NewCheckBox.ReadOnly:=ro;'#13#10'  NewCheckBox.LabelPos:=''Lef'
  +'t'';'#13#10'  NewCheckBox.Hint:=attribHint;'#13#10#13#10'  NewHBox.Alignmen'
  +'t:=''Right'';'#13#10#13#10'  NewCheckBox.myNode.registerEvent(''Click'',@OI'
  +'EventWrapper.OIEditProperty);'#13#10'end;'#13#10#13#10'procedure AddPropert'
  +'yEditBox(ParentNode:TDataNode;BoxName,LblText,ItmValue:String;ro:Boolean;Is'
  +'Resource:Boolean;attribHint:String);'#13#10'var'#13#10'  NewEditBox:TXEditB'
  +'ox;'#13#10'  VBoxNode,HBoxNode,NewNode:TDataNode;'#13#10'  NewHBox:TXHBox;'
  +#13#10'  fn:TAddComponentFunc;'#13#10'begin'#13#10'  NewHBox:=AddPropertyCon'
  +'tainer(ParentNode,BoxName,VBoxNode,HBoxNode);'#13#10'  NewEditBox:=TXEditBo'
  +'x(AddDynamicWidget(''TXEditBox'',MainForm,HBoxNode,BoxName,'''',''Top'',-1)'
  +'.ScreenObject);'#13#10#13#10'  if (not IsResource) then'#13#10'    AddPrope'
  +'rtyEditButton(BoxName,NewHBox,HBoxNode,ro);'#13#10#13#10'  NewEditBox.Label'
  +'Text:=LblText;'#13#10'  NewEditBox.BoxWidth:=''120px'';'#13#10'  NewEditBox'
  +'.ReadOnly:=ro;'#13#10'  NewEditBox.LabelPos:=''Left'';'#13#10'  NewEditBox.'
  +'Hint:=attribHint;'#13#10'  NewHBox.ContainerHeight:='''';'#13#10#13#10'  Ne'
  +'wHBox.Alignment:=''Right'';     //!!!! why do I have to set this again here'
  +', for it to take effect??'#13#10#13#10'//  if length(ItmValue) < 131073 the'
  ,'n'#13#10'    NewEditBox.ItemValue:=ItmValue;'#13#10'//  else'#13#10'//  beg'
  +'in'#13#10'//    NewEditBox.ItemValue:=''...'';'#13#10'//    NewEditBox.Enab'
  +'led:=false;'#13#10'//  end;'#13#10#13#10'  // event handler....'#13#10'  //'
  +' by default, the XEditBox has an onExit event handler that calls HandleEven'
  +'t with an'#13#10'  // event type of ''Change''.'#13#10'  // HandleEvent wil'
  +'l expect to find a function of type TEventHandler defined within the main o'
  +'r popup form, which'#13#10'  // was created at design time in the Lazarus I'
  +'DE.'#13#10'  // The name of the expected function is <EditBoxName>HandleCha'
  +'nge.'#13#10'  // HOWEVER - Here, where the editbox is dynamically created,'
  +#13#10'  // have to register an event in the data node instead.'#13#10'  New'
  +'EditBox.myNode.registerEvent(''Change'',@OIEventWrapper.OIEditProperty);'#13
  +#10'end;'#13#10#13#10'procedure AddPropertyColorPicker(ParentNode:TDataNode;'
  +'BoxName,LblText,ItmValue:String;ro:Boolean;IsResource:Boolean;attribHint:St'
  +'ring);'#13#10'var'#13#10'  NewColorPicker:TXColorPicker;'#13#10'  VBoxNode,'
  +'HBoxNode:TDataNode;'#13#10'  NewHBox:TXHBox;'#13#10'begin'#13#10'  NewHBox:'
  +'=AddPropertyContainer(ParentNode,BoxName,VBoxNode,HBoxNode);'#13#10'  NewHB'
  +'ox.ContainerHeight:='''';'#13#10'  NewColorPicker:=TXColorPicker(AddDynamic'
  +'Widget(''TXColorPicker'',MainForm,HBoxNode,BoxName,'''',''Top'',-1).ScreenO'
  +'bject);'#13#10#13#10'  if (not IsResource) then'#13#10'    AddPropertyEditB'
  +'utton(BoxName,NewHBox,HBoxNode,ro);'#13#10#13#10'  NewColorPicker.ItemValue'
  +':=ItmValue;'#13#10'  NewColorPicker.LabelText:=LblText;'#13#10'  NewColorPi'
  +'cker.BoxWidth:=''120px'';'#13#10'  NewColorPicker.ReadOnly:=ro;'#13#10'  Ne'
  +'wColorPicker.LabelPos:=''Left'';'#13#10'  NewColorPicker.Hint:=attribHint;'
  +#13#10#13#10'  NewHBox.Alignment:=''Right'';     //!!!! why do I have to set'
  +' this again here, for it to take effect??'#13#10#13#10'  // event handler..'
  +'..'#13#10'  NewColorPicker.myNode.registerEvent(''Change'',@OIEventWrapper.'
  +'OIEditProperty);'#13#10'end;'#13#10#13#10'procedure AddEventEditBox(ParentN'
  +'ode:TDataNode;BoxName,LblText,ItmValue:String;ro:Boolean);'#13#10'var'#13#10
  +'  NewHBox:TXHBox;'#13#10'  NewButton:TXButton;'#13#10'  NewEditBox:TXEditBo'
  +'x;'#13#10'  NewNode1,NewNode2:TDataNode;'#13#10'    //                   VB'
  +'ox     <name>VB'#13#10'    //                     HBox     <name>HB'#13#10
  +'    //                       EditBox   <name>'#13#10'    //                '
  +'       Button    <name>Btn'#13#10'begin'#13#10'  NewHBox:=AddPropertyContai'
  +'ner(ParentNode,BoxName,NewNode1,NewNode2);'#13#10'  NewHBox.ContainerHeight'
  +':='''';'#13#10'  NewEditBox:=TXEditBox(AddDynamicWidget(''TXEditBox'',MainF'
  +'orm,NewNode2,BoxName,'''',''Top'',-1).ScreenObject);'#13#10'  NewButton:=TX'
  +'Button(AddDynamicWidget(''TXButton'',MainForm,NewNode2,BoxName+''Btn'','''''
  +',''Top'',-1).ScreenObject);'#13#10#13#10'  NewEditBox.ItemValue:=ItmValue;'
  +#13#10'  NewEditBox.LabelText:=LblText;'#13#10'  NewEditBox.BoxWidth:=''100p'
  +'x'';'#13#10'  NewEditBox.ReadOnly:=ro;'#13#10'  NewEditBox.LabelPos:=''Left'
  +''';'#13#10#13#10'  NewButton.Caption:=''...'';'#13#10'  NewButton.Hint:=''E'
  +'dit Event Code'';'#13#10#13#10'  NewHBox.Alignment:=''Right'';'#13#10#13#10
  +'  // event handlers....'#13#10'  NewEditBox.myNode.registerEvent(''Change'''
  +',@OIEventWrapper.OIEditEvent);'#13#10'  NewButton.myNode.RegisterEvent(''Bu'
  +'ttonClick'',@OIEventWrapper.OIEditEventCode);'#13#10'end;'#13#10#13#10'proc'
  +'edure AddComboBox(PropertiesNode:TDataNode;BoxName,LblText,ItmValue:String;'
  +'ro:Boolean;Options:TStringList;attribHint:String);'#13#10'var'#13#10'  NewC'
  +'omboBox:TXComboBox;'#13#10'  NewHBox:TXHBox;'#13#10'  VBoxNode,HBoxNode:TDa'
  +'taNode;'#13#10'begin'#13#10'  NewHBox:=AddPropertyContainer(PropertiesNode,'
  +'BoxName,VBoxNode,HBoxNode);'#13#10'  NewHBox.ContainerHeight:='''';'#13#10
  +'  NewComboBox:=TXComboBox(AddDynamicWidget(''TXComboBox'',MainForm,HBoxNode'
  +',BoxName,'''',''Top'',-1).ScreenObject);'#13#10#13#10'  AddPropertyEditButt'
  +'on(BoxName,NewHBox,HBoxNode,ro);'#13#10#13#10'  NewComboBox.LabelText:=LblT'
  +'ext;'#13#10'  NewComboBox.BoxWidth:=''120px'';'#13#10'  NewComboBox.ReadOnl'
  +'y:=ro;'#13#10'  NewComboBox.LabelPos:=''Left'';'#13#10'  NewComboBox.Alignm'
  +'ent:=''Right'';'#13#10'  NewComboBox.Hint:=attribHint;'#13#10'  //NewComboB'
  +'ox.OptionList:=StringListToListString(Options);'#13#10'  NewComboBox.Option'
  +'List:=StringListToJSONString(Options);'#13#10#13#10'  NewComboBox.ItemValue'
  +':=ItmValue;  // this will set itemindex'#13#10#13#10'  NewHBox.Alignment:='
  +'''Right'';'#13#10#13#10'  NewComboBox.myNode.registerEvent(''Change'',@OIEv'
  +'entWrapper.OIEditProperty);'#13#10'end;'#13#10#13#10'procedure PopulateObje'
  +'ctInspector(CurrentNode:TDataNode);'#13#10'var AttributePrefix:string;'#13
  +#10'  i:integer;'#13#10'  PropertiesNode, EventsNode,OITabs:TDataNode;'#13#10
  +'  myAttribs:TNodeAttributesArray;'#13#10'  ro:boolean;'#13#10'  s:boolean;'
  ,#13#10'  AttribOptions:TStringList;'#13#10'  tmp1,tmp2:string;'#13#10'  tabI'
  +'ndex:String;'#13#10'  dfltAttrib:TDefaultAttribute;'#13#10'begin'#13#10'  i'
  +'f CurrentNode=nil then EXIT;'#13#10'  s:=SuppressEvents;'#13#10'  SuppressE'
  +'vents:=true;'#13#10#13#10'  //if CurrentNode<>nil then showmessage(''Popula'
  +'teObjectInspector. Node=''+CurrentNode.NodeName);'#13#10'  PropertiesNode:='
  +'FindDataNodeById(SystemNodeTree,PropertyEditorScrollboxName,'''',true);'#13
  +#10'  EventsNode:=FindDataNodeById(SystemNodeTree,EventsEditorScrollboxName,'
  +''''',true);'#13#10'  OITabs:=FindDataNodeById(SystemNodeTree,''OITabs'','''
  +''',true);'#13#10'  if OITabs<>nil then'#13#10'    tabIndex:=OITabs.GetAttri'
  +'bute(''TabIndex'',false).AttribValue'#13#10'  else'#13#10'  begin'#13#10'  '
  +'  showmessage(''cannot find OITabs'');'#13#10'    EXIT;'#13#10'  end;'#13#10
  +#13#10'  //showmessage(''TabIndex=''+TabIndex);'#13#10'  if (PropertiesNode<'
  +'>nil) then'#13#10'  begin'#13#10'    EditAttributeValue(PropertiesNode,''Is'
  +'Visible'',''false'');'#13#10'    DeleteNodeChildren(PropertiesNode);'#13#10
  +'  end;'#13#10'  if (EventsNode<>nil) then'#13#10'  begin'#13#10'    EditAtt'
  +'ributeValue(EventsNode,''IsVisible'',''false'');'#13#10'    DeleteNodeChild'
  +'ren(EventsNode);'#13#10'  end;'#13#10#13#10'  if (PropertiesNode<>nil) and '
  +'(CurrentNode<>nil)  then'#13#10'  begin'#13#10'    if TabIndex=''0'' then'
  +#13#10'    begin'#13#10'      if CurrentNode<>nil then'#13#10'      begin'#13
  +#10'      //showmessage(''show properties'');'#13#10'        {$ifdef JScript'
  +'}'#13#10'        TXTabControl(OITabs.ScreenObject).TabIndex:=0;   //fudge. '
  +'(browser)...make sure tab is still visible //   openTab(TabName,TabControlN'
  +'ame,NameSpace:string);'#13#10'        {$endif}'#13#10'        AttributePref'
  +'ix:=''OI''+AttributeEditorNameDelimiter+CurrentNode.NodeName;'#13#10'      '
  +'  AddPropertyEditBox(PropertiesNode,AttributePrefix+AttributeEditorNameDeli'
  +'miter'#13#10'                                  +''Name''+AttributeEditorNam'
  +'eDelimiter'#13#10'                                  +''0'',''Name'',Current'
  +'Node.NodeName,true,false,CurrentNode.NodeName);'#13#10#13#10'        myAttr'
  +'ibs:=CurrentNode.NodeAttributes;'#13#10'        for i:=0 to length(myAttrib'
  +'s)-1 do'#13#10'        begin'#13#10'          dfltAttrib:=GetDefaultAttrib('
  +'CurrentNode.NodeType,CurrentNode.NodeAttributes[i].AttribName);'#13#10'    '
  +'      ro:=CurrentNode.NodeAttributes[i].AttribReadOnly;'#13#10'          //'
  +'exclude Suppressed properties that user shouldn''t see'#13#10'          if '
  +'(FindSuppressedProperty(CurrentNode.NodeType,CurrentNode.NodeAttributes[i].'
  +'AttribName)<0)'#13#10'          and (CurrentNode.NodeAttributes[i].AttribNa'
  +'me<>''ParentName'') then'#13#10'            if CurrentNode.NodeAttributes[i'
  +'].AttribType = ''Boolean'' then'#13#10'            begin'#13#10'           '
  +'   //showmessage(''bool property ''+CurrentNode.NodeAttributes[i].AttribNam'
  +'e+'' ''+CurrentNode.NodeAttributes[i].AttribValue);'#13#10'              Ad'
  +'dCheckBox(PropertiesNode,AttributePrefix+AttributeEditorNameDelimiter'#13#10
  +'                      +CurrentNode.NodeAttributes[i].AttribName+AttributeEd'
  +'itorNameDelimiter'#13#10'                      +IntToStr(i+2),'#13#10'     '
  +'                  CurrentNode.NodeAttributes[i].AttribName,CurrentNode.Node'
  +'Attributes[i].AttribValue,ro,dfltAttrib.AttribHint);'#13#10'            end'
  +#13#10'            else'#13#10'            begin'#13#10'              Attrib'
  +'Options:=LookupAttribOptions(CurrentNode.NodeType,CurrentNode.NodeAttribute'
  +'s[i].AttribName);'#13#10'              if AttribOptions<>nil then'#13#10'  '
  +'            begin'#13#10'                AddComboBox(PropertiesNode,Attribu'
  +'tePrefix+AttributeEditorNameDelimiter'#13#10'                      +Current'
  +'Node.NodeAttributes[i].AttribName+AttributeEditorNameDelimiter'#13#10'     '
  +'                 +IntToStr(i+2),'#13#10'                       CurrentNode.'
  +'NodeAttributes[i].AttribName,CurrentNode.NodeAttributes[i].AttribValue,ro,'
  +#13#10'                       AttribOptions,dfltAttrib.AttribHint);'#13#10' '
  +'             end'#13#10'              else if CurrentNode.NodeAttributes[i]'
  +'.AttribType=''Color'' then'#13#10'                AddPropertyColorPicker(Pr'
  +'opertiesNode,AttributePrefix+AttributeEditorNameDelimiter'#13#10'          '
  +'            +CurrentNode.NodeAttributes[i].AttribName+AttributeEditorNameDe'
  +'limiter'#13#10'                      +IntToStr(i+2),'#13#10'               '
  +'        CurrentNode.NodeAttributes[i].AttribName,CurrentNode.NodeAttributes'
  +'[i].AttribValue,ro,false,dfltAttrib.AttribHint)'#13#10'              else'
  +#13#10'                AddPropertyEditBox(PropertiesNode,AttributePrefix+Att'
  +'ributeEditorNameDelimiter'#13#10'                    +CurrentNode.NodeAttri'
  +'butes[i].AttribName+AttributeEditorNameDelimiter'#13#10'                   '
  +' +IntToStr(i+2),'#13#10'                     CurrentNode.NodeAttributes[i].'
  ,'AttribName,CurrentNode.NodeAttributes[i].AttribValue,ro,false,dfltAttrib.At'
  +'tribHint);'#13#10'            end;'#13#10#13#10'        end;'#13#10'       '
  +' EditAttributeValue(PropertiesNode,''IsVisible'',''true'');'#13#10'       e'
  +'nd;'#13#10'      end;'#13#10'      //------------------- Display the regist'
  +'ered Events -----------------------'#13#10'      if EventsNode<>nil  then'
  +#13#10'      begin'#13#10' //       EditAttributeValue(''OITabs'',''TabIndex'
  +''',''1'');     // raise the events tab (fudge...sigsiv avoidance...?)'#13#10
  +'        if TabIndex=''1'' then'#13#10'        begin'#13#10'          {$ifde'
  +'f JScript}'#13#10'          TXTabControl(OITabs.ScreenObject).TabIndex:=1; '
  +'  //fudge. (browser)...make sure tab is still visible //   openTab(TabName,'
  +'TabControlName,NameSpace:string);'#13#10'          {$endif}'#13#10#13#10'  '
  +'        if CurrentNode<>nil then'#13#10'          if ((CurrentNode.IsDynami'
  +'c) or (CurrentNode=UIRootNode)) then'#13#10'          begin'#13#10'        '
  +'    AttributePrefix:=''OI''+AttributeEditorNameDelimiter+CurrentNode.NodeNa'
  +'me;'#13#10#13#10'              for i:=0 to CurrentNode.MyEventTypes.count-1'
  +' do'#13#10'              begin'#13#10#13#10'                AddEventEditBox'
  +'(EventsNode,AttributePrefix+AttributeEditorNameDelimiter //OI__nodename__'
  +#13#10'                            +CurrentNode.MyEventTypes[i]+AttributeEdi'
  +'torNameDelimiter   //eventtype__'#13#10'                            +IntToS'
  +'tr(i+2),                                             //suffix'#13#10'      '
  +'                       CurrentNode.MyEventTypes[i],'#13#10'                '
  +'             CurrentNode.myEventHandlers[i].TheCode,'#13#10'               '
  +'              true);'#13#10#13#10'              end;'#13#10'          end;'
  +#13#10'          EditAttributeValue(EventsNode,''IsVisible'',''true'');'#13
  +#10'        end;'#13#10'      end;'#13#10' //     EditAttributeValue(''OITab'
  +'s'',''TabIndex'',TabIndex);     // put back as it was'#13#10'  end;'#13#10
  +#13#10'  SuppressEvents:=s;'#13#10#13#10'end;'#13#10#13#10'procedure OIProps'
  +'EventsTabChange;'#13#10'begin'#13#10'  PopulateObjectInspector(ObjectInspec'
  +'torSelectedNavTreeNode);'#13#10'end;'#13#10#13#10#13#10'function PopulateRe'
  +'sourceInspector(CurrentNode:TDataNode):String;'#13#10'var AttributePrefix:s'
  +'tring;'#13#10'  i:integer;'#13#10'  PropertiesNode,btnNode:TDataNode;'#13#10
  +'  myAttribs,AttrParams:TNodeAttributesArray;'#13#10'  ro:boolean;'#13#10'  '
  +'s:boolean;'#13#10'begin'#13#10'  s:=SuppressEvents;'#13#10'  SuppressEvents'
  +':=true;'#13#10#13#10'  if (CurrentNode<>nil)'#13#10'  and ((CurrentNode.Nod'
  +'eClass=''RSS'')'#13#10'    or (CurrentNode.NodeType=''TXComposite'')) then'
  +#13#10'  begin'#13#10'    btnNode:=FindDataNodeById(systemnodetree,''Resourc'
  +'eTreeDelBtn'','''',true);'#13#10'    TXButton(btnNode.ScreenObject).Enabled'
  +':=true;'#13#10'    btnNode:=FindDataNodeById(systemnodetree,''ResourceTreeL'
  +'oadBtn'','''',true);'#13#10'    TXButton(btnNode.ScreenObject).Enabled:=tru'
  +'e;'#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    btnNode:=FindDataNo'
  +'deById(systemnodetree,''ResourceTreeDelBtn'','''',true);'#13#10'    TXButto'
  +'n(btnNode.ScreenObject).Enabled:=false;'#13#10'    btnNode:=FindDataNodeByI'
  +'d(systemnodetree,''ResourceTreeLoadBtn'','''',true);'#13#10'    TXButton(bt'
  +'nNode.ScreenObject).Enabled:=false;'#13#10'  end;'#13#10#13#10'  Properties'
  +'Node:=FindDataNodeById(SystemNodeTree,ResourceEditorScrollboxName,'''',true'
  +');'#13#10'  if PropertiesNode<>nil  then'#13#10'  begin'#13#10'    EditAttr'
  +'ibuteValue(PropertiesNode,''IsVisible'',''false'');'#13#10'    DeleteNodeCh'
  +'ildren(PropertiesNode);'#13#10#13#10'    if (CurrentNode<>nil) and (Current'
  +'Node.NodeType<>'''') then     // eg. on node headers (placeholders)'#13#10
  +'    begin'#13#10#13#10'      AttributePrefix:=''RI''+AttributeEditorNameDel'
  +'imiter+CurrentNode.NodeName;'#13#10'      AddPropertyEditBox(PropertiesNode'
  +',AttributePrefix+AttributeEditorNameDelimiter'#13#10'                      '
  +'          +''Type''+AttributeEditorNameDelimiter'#13#10'                   '
  +'             +''1'',''Type'',CurrentNode.NodeType,true,true,'''');'#13#10#13
  +#10'      myAttribs:=CurrentNode.NodeAttributes;'#13#10'      for i:=0 to le'
  +'ngth(myAttribs)-1 do'#13#10'      begin'#13#10'        if CurrentNode.NodeA'
  +'ttributes[i].AttribName<>''ParentName'' then'#13#10'        begin'#13#10'  '
  +'        ro:=CurrentNode.NodeAttributes[i].AttribReadOnly;'#13#10'          '
  +'AddPropertyEditBox(PropertiesNode,AttributePrefix+AttributeEditorNameDelimi'
  +'ter'#13#10'                    +CurrentNode.NodeAttributes[i].AttribName+At'
  +'tributeEditorNameDelimiter'#13#10'                    +IntToStr(i+2),'#13#10
  +'                     CurrentNode.NodeAttributes[i].AttribName,CurrentNode.N'
  +'odeAttributes[i].AttribValue,ro,true,'''');'#13#10'        end;'#13#10'    '
  +'  end;'#13#10'    end;'#13#10'    EditAttributeValue(PropertiesNode,''IsVis'
  ,'ible'',''True'');'#13#10'  end;'#13#10'  SuppressEvents:=s;'#13#10'end;'#13
  +#10#13#10'procedure OIAddCodeUnitNode(UnitType:String);'#13#10'var'#13#10'  '
  +'NewName,UnitCode:String;'#13#10'  NewNode:TDataNode;'#13#10'begin'#13#10'  '
  +'// create a data node for the new unit, and add under CodeRootNode.'#13#10
  +'  // Dialog for name entry'#13#10'  NewName:=getname(''Enter Unit Name:'');'
  +#13#10#13#10'  // Is the source node named uniquely?'#13#10'  if (NewName<>'
  +''''') and (ComponentNameIsUnique(NewName,'''')) then'#13#10'  begin'#13#10
  +'    NewNode:=TDataNode.Create(''Code'',NewName,'''',UnitType,true);'#13#10
  +'    NewNode.NodeName:=NewName;'#13#10'    UnitCode:= DfltUnitCode(NewName,U'
  +'nitType);'#13#10'    NewNode.SetAttributeValue(''Code'',UnitCode,''String'''
  +');'#13#10#13#10'    ObjectInspectorSelectedCodeTreeNode:=InsertSystemNode(C'
  +'odeRootNode,NewNode,-1);'#13#10'    ObjectInspectorSelectedCodeNodeText:='''
  +''';'#13#10#13#10'    // rebuild the code tree'#13#10'    RebuildCodeTree;'
  +#13#10#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'procedure OIAddCodeFuncNo'
  +'de;'#13#10'var'#13#10'  NewName,FnCode:String;'#13#10'  NewNode:TDataNode;'
  +#13#10'begin'#13#10'  if (ObjectInspectorSelectedCodeTreeNode=nil)'#13#10'  '
  +'or (ObjectInspectorSelectedCodeTreeNode.NodeName<>''CodeUnits'') then'#13#10
  +'    showmessage(''Please select the parent node ''''CodeUnits'''' first'')'
  +#13#10'  else'#13#10'  begin'#13#10'  // create a data node for the new func'
  +'tion, and add under the selected Unit node.'#13#10'    // Dialog for name e'
  +'ntry'#13#10'    NewName:=getname(''Enter Function Name:'');'#13#10#13#10'  '
  +'   // Is the function node named uniquely?'#13#10'    if (NewName<>'''') an'
  +'d (ComponentNameIsUnique(NewName,'''')) then'#13#10'    begin'#13#10'      '
  +'NewNode:=TDataNode.Create(''Code'',NewName,'''',''Function'',true);'#13#10
  +'      NewNode.NodeName:=NewName;'#13#10'      FnCode:= DfltFunctionCode(New'
  +'Name);'#13#10'      NewNode.SetAttributeValue(''Code'',FnCode,''String'');'
  +#13#10#13#10'      ObjectInspectorSelectedCodeTreeNode:=InsertSystemNode(Obj'
  +'ectInspectorSelectedCodeTreeNode,NewNode,-1);'#13#10'      ObjectInspectorS'
  +'electedCodeNodeText:='''';'#13#10'      // rebuild the code tree'#13#10'   '
  +'   RebuildCodeTree;'#13#10#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10
  +#13#10#13#10#13#10#13#10'procedure OIEditCodeUnit;'#13#10'var'#13#10'  UnitC'
  +'ode, Inputs, EventType:string;'#13#10'  tmp,NodeNameToEdit:String;'#13#10' '
  +' FuncInputs:TCodeInputs;'#13#10'  i:integer;'#13#10'  bits:TStringList;'#13
  +#10'  AllKernels:TAnimCodeArray;'#13#10'begin'#13#10'  if ObjectInspectorSel'
  +'ectedCodeTreeNode<>nil then'#13#10'  begin'#13#10'    if (ObjectInspectorSe'
  +'lectedCodeTreeNode.NodeType=''RawUnit'')'#13#10'    or (ObjectInspectorSele'
  +'ctedCodeTreeNode.NodeType=''Function'') then'#13#10'    begin'#13#10'      '
  +'NodeNameToEdit:=ObjectInspectorSelectedCodeTreeNode.NodeName;'#13#10#13#10
  +'      // pop up the syntax editor.'#13#10'      //CodeEditForm.Initialise('
  +'''Unit'',NodeNameToEdit,'''');'#13#10'      UnitCode:=ObjectInspectorSelect'
  +'edCodeTreeNode.GetAttribute(''Code'',true).AttribValue;'#13#10'      if Uni'
  +'tCode='''' then'#13#10'      begin'#13#10'        // provide a template uni'
  +'t or function'#13#10'        if ObjectInspectorSelectedCodeTreeNode.NodeTyp'
  +'e=''RawUnit'' then'#13#10'          UnitCode:= DfltUnitCode(NodeNameToEdit,'
  +'''RawUnit'')'#13#10'        else'#13#10'          UnitCode:= DfltFunctionCo'
  +'de(NodeNameToEdit);'#13#10'      end;'#13#10'      CodeEditForm.CodeEdit.It'
  +'emValue := UnitCode;'#13#10'      CodeEditForm.CodeEdit.MessageLines:='''';'
  +#13#10#13#10'      if ObjectInspectorSelectedCodeTreeNode.NodeType<>''RawUni'
  +'t'' then'#13#10'      begin'#13#10'        Inputs:=ObjectInspectorSelectedC'
  +'odeTreeNode.GetAttribute(''Inputs'',true).AttribValue;'#13#10'        FuncI'
  +'nputs:=StringToCodeInputs(Inputs);'#13#10'        for i:=0 to length(FuncIn'
  +'puts)-1 do'#13#10'        begin'#13#10'          CodeEditForm.AddInputBox(F'
  +'uncInputs[i]);'#13#10'        end;'#13#10'      end;'#13#10#13#10'      Cod'
  +'eEditForm.Mode:=ObjectInspectorSelectedCodeTreeNode.NodeType+''Code'';'#13
  +#10'      CodeEditForm.InitialiseOnShow(ObjectInspectorSelectedCodeTreeNode.'
  +'NodeType,NodeNameToEdit,'''');'#13#10'      ShowXForm(''CodeEditForm'',true'
  +');'#13#10#13#10'      {$ifndef JScript}'#13#10'      // on return....'#13#10
  +'      //CodeEditorClosed(nil);'#13#10'      {$endif}'#13#10'    end'#13#10
  +'    else'#13#10'    if (ObjectInspectorSelectedCodeTreeNode.NodeClass=''UI'
  +''')'#13#10'    or (ObjectInspectorSelectedCodeTreeNode.NodeClass=''NV'')'#13
  +#10'    or (ObjectInspectorSelectedCodeTreeNode.NodeClass=''SVG'')'#13#10'  '
  +'  or ((ObjectInspectorSelectedCodeTreeNode.NodeClass=''Root'')'#13#10'     '
  +' and (ObjectInspectorSelectedCodeTreeNode.NodeName=''UIRootNode''))'#13#10
  +'    then'#13#10'    begin'#13#10'      // selected node is UI so we are loo'
  ,'king at some event handler code'#13#10'      // OR Selected node is the UI '
  +'Root so we are looking at one of the ''system'' level events'#13#10'      /'
  +'/ navigate to the relevant UI element'#13#10'      DoSelectNavTreeNode(Obje'
  +'ctInspectorSelectedCodeTreeNode,false);'#13#10'      // Find which event to'
  +' edit...'#13#10'      // delete to first )'#13#10'      tmp:=ObjectInspecto'
  +'rSelectedCodeNodeText;'#13#10'      bits:=StringSplit(tmp,'')'');'#13#10'  '
  +'    if bits.Count=2 then'#13#10'      begin'#13#10'        // event follows'
  +' the space'#13#10'        EventType:=TrimWhiteSpace(bits[1]);'#13#10'      '
  +'  if EventType<>'''' then'#13#10'          // Pop up the event code editor'
  +#13#10'          OIEventWrapper.OIEditEventCodeFromCodeTree(ObjectInspectorS'
  +'electedCodeTreeNode.Nodename,EventType)'#13#10'        else if (ObjectInspe'
  +'ctorSelectedCodeTreeNode.NodeType=''TXGPUCanvas'')'#13#10'        then'#13
  +#10'        begin'#13#10'          ShowGPUEditor(ObjectInspectorSelectedCode'
  +'TreeNode);'#13#10' //         // Edit the AnimationCode in a TXGPUCanvas co'
  +'mponent using the dedicated popup editor...'#13#10' //         AllKernels:='
  +'TXGPUCanvas(ObjectInspectorSelectedCodeTreeNode.ScreenObject).FetchAllAnimC'
  +'ode;'#13#10' //         //XGPUCanvas.GPUCodeEditor.ItemValue:=ObjectInspect'
  +'orSelectedCodeTreeNode.GetAttribute(''AnimationCode'',true).AttribValue;'#13
  +#10' //         XGPUEditor.GPUCodeEditor.ItemValue:=AllKernels[0].Text;'#13
  +#10' //         XGPUEditor.GPUCodeEditor.MessageLines:='''';'#13#10' //     '
  +'    XGPUEditor.GPUCodeEditor.MessagesHeight:=''1'';'#13#10' //      //   XG'
  +'PUEditor.GPUMemo.ItemValue:=TXGPUCanvas(ObjectInspectorSelectedCodeTreeNode'
  +'.ScreenObject).GeneratedHTML;'#13#10' //         //!! Lazarus bug?     Have'
  +' to populate GPUMemo later (eg. on tab change), otherwise the popup form cr'
  +'ashes.'#13#10' //         EditingGPUNode:=ObjectInspectorSelectedCodeTreeNo'
  +'de;'#13#10' //         GPUEditorMode:=''Animation'';'#13#10' //         GPU'
  +'ComboBox.OptionList:=TXGPUCanvas(ObjectInspectorSelectedCodeTreeNode.Screen'
  +'Object).BuildKernelList;'#13#10' //         GPUComboBox.ItemIndex:=0;'#13#10
  +' //         GPUComboBox.PriorIndex:=0;'#13#10' //         XGPUEditor.GPUCod'
  +'eEditor.ReadOnly:=false;'#13#10' //         GPUEditorForm.Showing:=''Modal'
  +''';'#13#10'        end;'#13#10#13#10'      end;'#13#10#13#10'    end'#13#10
  +'    else'#13#10#13#10'      showmessage(''Select a Code Node first - select'
  +'ed node is not an appropriate type'');'#13#10#13#10'  end'#13#10'  else'#13
  +#10'  begin'#13#10'    showmessage(''Select a Code Node first'');'#13#10'  e'
  +'nd;'#13#10'end;'#13#10#13#10'procedure OICodeSearch;'#13#10'begin'#13#10#13
  +#10'      // pop up the syntax editor.'#13#10'      CodeEditForm.CodeEdit.It'
  +'emValue := '''';'#13#10'      CodeEditForm.CodeEdit.MessageLines:='''';'#13
  +#10#13#10'      CodeEditForm.Mode:=''SearchCode'';'#13#10'      CodeEditForm'
  +'.InitialiseOnShow(''Search Results'','''','''');'#13#10'      ShowXForm(''C'
  +'odeEditForm'',true);'#13#10'      {$ifdef JScript}'#13#10'      CodeEditFor'
  +'m.CodeEditFindTxt.HasFocus:=true;'#13#10'      {$endif}'#13#10'end;'#13#10
  +#13#10'procedure OIDeleteCodeUnit;'#13#10'begin'#13#10'  if ObjectInspectorS'
  +'electedCodeTreeNode<>nil then'#13#10'  begin'#13#10'    if  (ObjectInspecto'
  +'rSelectedCodeTreeNode.NodeType=''RawUnit'')'#13#10'    or  (ObjectInspector'
  +'SelectedCodeTreeNode.NodeType=''Function'') then'#13#10'    begin'#13#10'  '
  +'    DeleteItem(CodeRootNode,ObjectInspectorSelectedCodeTreeNode)'#13#10'   '
  +' end'#13#10'    else'#13#10'      if  (ObjectInspectorSelectedCodeTreeNode.'
  +'NodeType=''Root'') then'#13#10'        showmessage(''Select a Code Node (Un'
  +'it or Function) first'')'#13#10'      else'#13#10'        showmessage(''Can'
  +'not delete event code here'');'#13#10'  end'#13#10'  else'#13#10'  begin'#13
  +#10'    showmessage(''Select a Code Node (Unit or Function) first'');'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'Procedure OIEncapsulate;'#13#10'var'#13#10
  +'  fullstring,itemName:String;'#13#10'  ok:Boolean;'#13#10'begin'#13#10'  //'
  +' Take the current user-defined system, and store its structure in the resou'
  +'rce tree under ''Composites'', with'#13#10'  // a name provided by the user'
  +', and save to local storage.'#13#10'  ok:=false;'#13#10#13#10'  while not o'
  +'k do'#13#10'  begin'#13#10'    itemName:=trim(getname(''Enter Name of new C'
  +'omposite Item:''));'#13#10'    if FoundString(itemName,''.'')>0 then'#13#10
  +'      showmessage(''Enter the name without dot characters ''''.'''''')'#13
  +#10'    else'#13#10'      ok:=true;'#13#10'  end;'#13#10'  fullstring:=Build'
  +'SystemString(true);'#13#10'  itemName:=itemName+''.xcmp'';'#13#10'  {$ifnde'
  +'f JScript}'#13#10'  itemName:=''SavedSystems/''+itemName;'#13#10'  {$endif}'
  +#13#10'  WriteToLocalStore(itemName,fullstring);'#13#10#13#10'  RebuildResou'
  +'rcesTree;'#13#10'end;'#13#10#13#10'procedure OIAddInterfaceElement;'#13#10
  ,'var'#13#10'  myIntf:TXCompositeIntf;'#13#10'  NewName,tabIndex:String;'#13
  +#10'  ok:Boolean;'#13#10'  OITabs:TDataNode;'#13#10'  i:integer;'#13#10'begi'
  +'n'#13#10'  if (ObjectInspectorSelectedNavTreeNode=nil)'#13#10'  or (ObjectI'
  +'nspectorSelectedNavTreeNode.NodeType<>''TXCompositeIntf'') then'#13#10'    '
  +'showmessage(''Please select a Composite Interface (TXCompositeIntf) element'
  +' first'')'#13#10'  else'#13#10'  begin'#13#10'    myIntf:=TXCompositeIntf(O'
  +'bjectInspectorSelectedNavTreeNode.ScreenObject);'#13#10#13#10'    OITabs:=F'
  +'indDataNodeById(SystemNodeTree,''OITabs'','''',true);'#13#10'    if OITabs<'
  +'>nil then'#13#10'      tabIndex:=OITabs.GetAttribute(''TabIndex'',false).At'
  +'tribValue;'#13#10#13#10'    if tabIndex=''0'' then'#13#10'    begin'#13#10
  +#13#10'      // create a new attribute for the selected node'#13#10'      ok'
  +':=false;'#13#10'      while not ok do'#13#10'      begin'#13#10'        // '
  +'Dialog for name entry'#13#10'        NewName:= XIDEPrompt(''Enter Property '
  +'Name'',NewName);'#13#10#13#10'        ok:=true;'#13#10'         // Is the p'
  +'roperty named uniquely?'#13#10'        if (NewName<>'''') then'#13#10'     '
  +'   begin'#13#10'        if (myIntf.PropertyNameIsUnique(NewName)) then'#13
  +#10'          begin'#13#10'            ObjectInspectorSelectedNavTreeNode.Ad'
  +'dAttribute(NewName,''String'','''',false);'#13#10'            PopulateObjec'
  +'tInspector(ObjectInspectorSelectedNavTreeNode);'#13#10'          end'#13#10
  +'          else'#13#10'          begin'#13#10'            ok:=false;'#13#10
  +'            showmessage(NewName+'' already exists'');'#13#10'          end;'
  +#13#10'        end;'#13#10'      end;'#13#10#13#10'    end'#13#10'    else'
  +#13#10'    begin'#13#10'      // create a new event for the selected node'#13
  +#10'      ok:=false;'#13#10'      while not ok do'#13#10'      begin'#13#10
  +'        // Dialog for name entry'#13#10'        NewName:= XIDEPrompt(''Ente'
  +'r Event Name'',NewName);'#13#10#13#10'        ok:=true;'#13#10'         // '
  +'Is the event named uniquely?'#13#10'        if (NewName<>'''') then'#13#10
  +'        begin'#13#10'        if (myIntf.EventNameIsUnique(NewName)) then'#13
  +#10'          begin'#13#10'            ObjectInspectorSelectedNavTreeNode.Ad'
  +'dEvent(NewName,'''','''');'#13#10'            PopulateObjectInspector(Objec'
  +'tInspectorSelectedNavTreeNode);'#13#10'          end'#13#10'          else'
  +#13#10'          begin'#13#10'            ok:=false;'#13#10'            show'
  +'message(NewName+'' already exists'');'#13#10'          end;'#13#10'        '
  +'end;'#13#10'      end;'#13#10#13#10'    end;'#13#10'  end;'#13#10'end;'#13
  +#10#13#10'{$ifdef JScript}'#13#10'procedure InitAutomatedCursor;'#13#10'begi'
  +'n'#13#10'  asm'#13#10'  // Find the animation rule by name'#13#10'   var ss'
  +' = document.styleSheets[0];'#13#10'   var anim;'#13#10'     for (var i=0; i'
  +'<ss.cssRules.length; i++) {'#13#10'          //alert(''i=''+i+'' name=''+ss'
  +'.cssRules[i].name);'#13#10'   '#9'if (ss.cssRules[i].name === ''anim'') {'
  +#13#10'   '#9'  anim = ss.cssRules[i];'#13#10'   '#9'  break;'#13#10'       '
  +'    }'#13#10'         }'#13#10'      if (anim==null) {'#13#10'        //ale'
  +'rt(''did not find anim'');'#13#10'        // Dynamically create a keyframe '
  +'animation..... Initalise to top left corner'#13#10'        document.styleSh'
  +'eets[0].insertRule("@keyframes anim {from {top: 0px;  left: 0px;} to {top: '
  +'0px;  left: 0px;}}");'#13#10'        var AutomatedCursorDiv = document.getE'
  +'lementById("AutomatedCursor");'#13#10'        AutomatedCursorDiv.style.anim'
  +'ation = "anim 1s linear forwards";'#13#10'        //AutomatedCursorDiv.styl'
  +'e.animation = "anim 1s linear";'#13#10'      }'#13#10'  end;'#13#10'end;'#13
  +#10'{$endif}'#13#10#13#10#13#10#13#10'begin'#13#10'//  setlength(ListOfCompo'
  +'sites,0);'#13#10#13#10'  AddAttribOptions(''Root'',''DeploymentMode'',Deplo'
  +'ymentModeOptions);'#13#10'  AddAttribOptions(''Root'',''ShowResources'',Sho'
  +'wResourcesOptions);'#13#10#13#10'  DesignMode:=true;'#13#10'  OIEventWrappe'
  +'r := TOIEventWrapper.Create;'#13#10'  ObjectInspectorSelectedNavTreeNode:=n'
  +'il;'#13#10'  ObjectInspectorSelectedCodeTreeNode:=nil;'#13#10'  AvailableRe'
  +'sourcesSelectedNode:=nil;'#13#10'  ObjectInspectorSelectedCodeNodeText:='''
  +''';'#13#10'  {$ifndef JScript}'#13#10'  GlobalSuppressFrameDisplay:=true;'
  +#13#10'  {$endif}'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('codeeditor','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit CodeEditor;'#13#10'{$'
  +'ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'int'
  +'erface'#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUtils,Compi'
  +'leUserCode,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, '
  +'Graphics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, StdCtrls, ComCtrls, G'
  +'rids,'#13#10'  TypInfo, LazIDEIntf,'#13#10'  LazsUtils,'#13#10'  Events, Ty'
  +'pes,'#13#10'  SynEdit, SynEditTypes,'#13#10'  {$else}'#13#10'  HTMLUtils,'
  +#13#10'  {$endif}'#13#10'  webTranspilerUtils, UtilsJSCompile, WrapperPanel,'
  +' XScrollBox, XVBox, XHBox, XTree, XMemo, XTabControl, XButton,'#13#10'  XLa'
  +'bel, XEditBox, XCheckBox, XComboBox, XHyperLink, XRadioBtns, XCode, XForm, '
  +'XGPUCanvas, XGPUEditor,'#13#10'  XMenu, InputSelectUnit, PopupMemo,EventsIn'
  +'terface;'#13#10#13#10#13#10#13#10'type'#13#10#13#10'  { TCodeEditForm }'#13
  +#10#13#10'  TCodeEditForm = class(TXForm)'#13#10'    CodeEditInputLabelsHBox'
  +': TXHBox;'#13#10'    CodeEditFormXHBox2: TXHBox;'#13#10'    CodeEditSaveBtn'
  +': TXButton;'#13#10'    CodeEditCancelBtn: TXButton;'#13#10'    CodeEditForm'
  +'XHBox1: TXHBox;'#13#10'    CodeEditFormXVBox1: TXVBox;'#13#10'    CodeEdit:'
  +' TXCode;'#13#10'    CodeEditParamListScrollBox: TXScrollBox;'#13#10'    Cod'
  +'eEditListLbl: TXLabel;'#13#10'    CodeEditAddInputBtn: TXButton;'#13#10'   '
  +' CodeEditDelInputBtn: TXButton;'#13#10'    CodeEditInputsVBox: TXVBox;'#13
  +#10'    CodeEditInputsVBox1: TXVBox;'#13#10'    CodeEditColLabl1: TXLabel;'
  +#13#10'    CodeEditColLbl2: TXLabel;'#13#10'    CodeEditColLbl3: TXLabel;'#13
  +#10'    CodeEditFunctionResultType: TXComboBox;'#13#10'    CodeEditHelpBtn: '
  +'TXButton;'#13#10'    CodeEditMainTabs: TXTabControl;'#13#10'    CodeEditMai'
  +'nCodeTab: TXTabSheet;'#13#10'    CodeEditInitTab: TXTabSheet;'#13#10'    Co'
  +'deEditInit: TXCode;'#13#10'    CodeEditFindBtn: TXButton;'#13#10'    CodeEd'
  +'itFindTxt: TXEditBox;'#13#10'    CodeEditFindNextBtn: TXButton;'#13#10'    '
  +'CodeEditFindCase: TXCheckBox;'#13#10'    CodeEditFindGlobal: TXCheckBox;'#13
  +#10'    CodeEditContextLabel: TXLabel;'#13#10'    {$ifndef JScript}'#13#10' '
  +'   procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResize(S'
  +'ender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13#10'   '
  +' {$endif}'#13#10'    procedure AddInputBox(myInput:TCodeInputRec);'#13#10' '
  +'   procedure Initialise;'#13#10'    procedure InitialiseOnShow(Context,Node'
  +'Name,EvType:String);'#13#10'    procedure CodeEditAddInputBtnHandleButtonCl'
  +'ick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    pro'
  +'cedure CodeEditDelInputBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiStri'
  +'ng; myValue: AnsiString);'#13#10'    procedure CodeEditHandleClickMessage(e'
  +':TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedur'
  +'e CodeEditInitHandleClickMessage(e: TEventStatus; nodeID: AnsiString; myVal'
  +'ue: AnsiString);'#13#10'    procedure CodeEditCancelBtnHandleButtonClick(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure'
  +' CodeEditHelpBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiString;  myVal'
  +'ue: AnsiString);'#13#10'    procedure CodeEditSaveBtnHandleButtonClick(e:TE'
  +'ventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure E'
  +'ditInputSynonym(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'    procedure EditInputSource(e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'    procedure ShowInputSelector(e:TEventStatus;nodeID'
  +': AnsiString;myValue: AnsiString);'#13#10'    procedure InputCheckBoxClick('
  +'e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedu'
  +'re CodeEditFindBtnHandleButtonClick(e: TEventStatus; nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'    procedure CodeEditFindNextBtnHandleButtonCli'
  +'ck(e: TEventStatus; nodeID: AnsiString; myValue: AnsiString);'#13#10'    fu'
  +'nction ValidateInputs:Boolean;'#13#10'    procedure DoLocalSearch(TextToFin'
  +'d:String);'#13#10'    procedure DoGlobalSearch(TextToFind:String);'#13#10' '
  +'   procedure NavigateToFirstError;'#13#10'    procedure DisplayTheCodeBlock'
  +'(targetLine,targetChar:integer);'#13#10'    procedure DisplayIncFile(FileNa'
  +'me,lineNum,charPos:String);'#13#10'    procedure HandleMessageClick(e:TEven'
  +'tStatus;nodeID: AnsiString; myValue: AnsiString; ThisCodeEdit:TXCode);'#13
  +#10'    procedure CodeEditMainTabsHandleChange(e: TEventStatus; nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'  private'#13#10#13#10'  public'#13#10
  ,'    Mode:String;               //  dll, EventCode, FunctionCode, UnitCode, '
  +'RawUnitCode'#13#10'    TargetNodeName:String;'#13#10'    EventType:String;'
  +#13#10#13#10'    NumInputs:integer;'#13#10'    MyInputs:TCodeInputs;'#13#10
  +'    CheckedInputs:Array of Boolean;'#13#10'    {$ifdef JScript}'#13#10'    '
  +'LastSearchIndex:integer;'#13#10'    RegExp:TObject;'#13#10'    {$endif}'#13
  +#10'end;'#13#10#13#10'var'#13#10'  CodeEditForm: TCodeEditForm;'#13#10'  Cod'
  +'eEditStatus:String;'#13#10'  OIEditBox, CodeFormRoot:TDataNode;'#13#10#13#10
  +'implementation'#13#10'uses XObjectInsp;'#13#10#13#10'{$R *.lfm}'#13#10#13#10
  +'{ TCodeEditForm }'#13#10#13#10'procedure TCodeEditForm.InitialiseOnShow(Con'
  +'text,NodeName,EvType:String);'#13#10'begin'#13#10'  TargetNodeName:=NodeNam'
  +'e;'#13#10'  EventType:=EvType;'#13#10'  self.CodeEditContextLabel.LabelCapt'
  +'ion:=Context+'' ''+NodeName+'' ''+EvType;'#13#10'  CodeEdit.LabelText:='''''
  +';'#13#10'  NumInputs:=0;'#13#10'  DeleteNodeChildren(CodeEditParamListScrol'
  +'lBox.myNode);'#13#10#13#10'  CodeEditFindGlobal.Checked:=false;'#13#10#13#10
  +'  if (Mode=''dll'') then'#13#10'  begin'#13#10'    CodeEditFindTxt.ItemValu'
  +'e:='''';'#13#10'    CodeEdit.ContainerHeight:=''100%'';           // CodeEd'
  +'it is % of the parent component (tabpage)'#13#10'    CodeEditInitTab.IsVisi'
  +'ble:=false;'#13#10'    CodeEditFunctionResultType.IsVisible:=false;'#13#10
  +'    CodeEditInputsVBox.IsVisible:=false;'#13#10'    CodeEdit.MessagesHeight'
  +':=''30%'';'#13#10'  end'#13#10'  else if (Mode=''EventCode'') then'#13#10' '
  +' begin'#13#10'    CodeEditFindTxt.ItemValue:='''';'#13#10'    CodeEditFunct'
  +'ionResultType.IsVisible:=false;'#13#10'    CodeEditInputsVBox.IsVisible:=fa'
  +'lse;'#13#10'    if CodeEdit.MessageLines='''' then'#13#10'      CodeEdit.Me'
  +'ssagesHeight:=''1'''#13#10'    else'#13#10'      CodeEdit.MessagesHeight:='
  +'''30%'';'#13#10'    CodeEdit.ContainerHeight:=''95%'';           // CodeEdi'
  +'t is % of the parent component (tabpage)'#13#10#13#10'    if FoundString(Ev'
  +'entType,''Thread'')<>1 then'#13#10'    begin'#13#10'      CodeEditInitTab.I'
  +'sVisible:=true;'#13#10'      CodeEditInit.ContainerHeight:=''95%'';'#13#10
  +'      CodeEditInit.MessagesHeight:=''1'';'#13#10'     end'#13#10'    else'
  +#13#10'    begin'#13#10'      // no initialisation code allowed for worker t'
  +'hreads'#13#10'      CodeEditInitTab.IsVisible:=false;'#13#10'    end;'#13#10
  +'  end'#13#10'  else'#13#10'  if (Mode=''FunctionCode'') then'#13#10'  begin'
  +#13#10'    CodeEdit.ContainerHeight:=''60%'';           // CodeEdit is % of '
  +'the parent component (tabpage)'#13#10'    CodeEditInitTab.IsVisible:=false;'
  +#13#10'    CodeEditFunctionResultType.IsVisible:=true;'#13#10'    if CodeEdi'
  +'t.MessageLines='''' then'#13#10'      CodeEdit.MessagesHeight:=''1'''#13#10
  +'    else'#13#10'      CodeEdit.MessagesHeight:=''10%'';'#13#10'    CodeEdit'
  +'InputsVBox.IsVisible:=true;'#13#10'    CodeEditFindTxt.ItemValue:='''';'#13
  +#10#13#10'    InputSelectForm.ExclNodeName:=TargetNodeName;'#13#10'    Input'
  +'SelectForm.ExclPropertyName:='''';'#13#10'    InputSelectForm.PropType:='''
  +''';'#13#10'    InputSelectForm.Initialise;'#13#10'  end'#13#10'  else'#13#10
  +'  if (Mode=''SearchCode'') then'#13#10'  begin'#13#10'    CodeEdit.Containe'
  +'rHeight:=''100%'';           // CodeEdit is % of the parent component (tabp'
  +'age)'#13#10'    CodeEditInitTab.IsVisible:=false;'#13#10'    CodeEditFuncti'
  +'onResultType.IsVisible:=false;'#13#10'    CodeEditInputsVBox.IsVisible:=fal'
  +'se;'#13#10'    CodeEdit.MessagesHeight:=''30%'';'#13#10'    CodeEditFindGlo'
  +'bal.Checked:=true;'#13#10'    CodeEditFindTxt.HasFocus:=true;'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'    CodeEdit.ContainerHeight:=''95%'';  '
  +'          // CodeEdit is % of the parent component (tabpage)'#13#10'    Cod'
  +'eEditInitTab.IsVisible:=false;'#13#10'    CodeEditFunctionResultType.IsVisi'
  +'ble:=false;'#13#10'    CodeEditInputsVBox.IsVisible:=false;'#13#10'    if C'
  +'odeEdit.MessageLines='''' then'#13#10'      CodeEdit.MessagesHeight:=''1'''
  +#13#10'    else'#13#10'      CodeEdit.MessagesHeight:=''30%'';'#13#10'    Co'
  +'deEditFindTxt.ItemValue:='''';'#13#10'  end;'#13#10#13#10'  if CodeEditInit'
  +'Tab.IsVisible=true then'#13#10'  begin'#13#10'    // make the same messages'
  +' visible on both tabs'#13#10'    CodeEditInit.ContainerHeight:=CodeEdit.Con'
  +'tainerHeight;'#13#10'    CodeEditInit.MessagesHeight:=CodeEdit.MessagesHeig'
  +'ht;'#13#10'    CodeEditInit.MessageLines:=CodeEdit.MessageLines;'#13#10'  e'
  +'nd;'#13#10#13#10'  if (Mode<>''EventCode'') then'#13#10'    CodeEditMainTab'
  +'s.TabIndex:=0;'#13#10#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'proc'
  +'edure TCodeEditForm.FormCreate(Sender: TObject);'#13#10'begin'#13#10'  myNo'
  +'de:=DoXFormCreated(self);'#13#10#13#10'  Initialise;'#13#10'end;'#13#10#13
  +#10'procedure TCodeEditForm.FormResize(Sender: TObject);'#13#10'begin'#13#10
  +'  DoFormResize(self, CodeEditFormXVBox1);'#13#10'  //!! fudge.... have to s'
  ,'et minWidth as alClient fails to reset size of this panel....!!'#13#10'  Co'
  +'deEdit.myControl.Constraints.MinWidth:=CodeEdit.Width;'#13#10'  CodeEdit.my'
  +'Control.Constraints.MinHeight:=CodeEdit.Height;'#13#10'end;'#13#10#13#10'pr'
  +'ocedure TCodeEditForm.FormShow(Sender: TObject);'#13#10'begin'#13#10'  // s'
  +'croll the messages to the bottom'#13#10'  CodeEdit.TheMessages.VertScrollBa'
  +'r.Position:=CodeEdit.TheMessages.Lines.Count-1;'#13#10'  if (Mode=''dll'') '
  +'then'#13#10'    NavigateToFirstError'#13#10'  else if (Mode=''SearchCode'')'
  +' then'#13#10'    TEdit(CodeEditFindTxt.myControl).SetFocus;'#13#10'end;'#13
  +#10#13#10'{$endif}'#13#10#13#10'procedure TCodeEditForm.Initialise;'#13#10'b'
  +'egin'#13#10'  numInputs:=0;'#13#10'  SetLength(MyInputs,0);'#13#10'  SetLen'
  +'gth(CheckedInputs,0);'#13#10'  CodeFormRoot:=FindDataNodeById(myNode,''Code'
  +'EditFormXVBox1'','''',true);'#13#10'  CodeEditFunctionResultType.OptionList'
  +':=Attributetypes;'#13#10'  CodeEditFunctionResultType.ItemIndex:=0;'#13#10
  +#13#10'  TargetNodeName:='''';'#13#10'  EventType:='''';'#13#10'  self.CodeE'
  +'ditContextLabel.LabelCaption:='''';'#13#10'  CodeEdit.LabelText:='''';'#13
  +#10'//  NumInputs:=0;'#13#10'  DeleteNodeChildren(CodeEditParamListScrollBox'
  +'.myNode);'#13#10#13#10'  {$ifndef JScript}'#13#10'  TXForm(self).Height:=tr'
  +'unc(MainForm.Height*90/100);'#13#10'  TXForm(self).Width:=trunc(MainForm.Wi'
  +'dth*90/100);'#13#10'  {$else}'#13#10'  TXForm(self).Top:=50;'#13#10'  TXFor'
  +'m(self).Left:=50;'#13#10#13#10'  asm'#13#10'    var ob=document.getElementB'
  +'yId(this.NameSpace+this.NodeName+''Contents'');'#13#10'    if (ob!=null) {'
  +#13#10'      var str=''90%'';'#13#10'      pas.HTMLUtils.SetHeightWidthHTML('
  +'this,ob,''W'',str);'#13#10'      pas.HTMLUtils.SetHeightWidthHTML(this,ob,'
  +'''H'',str);'#13#10'    }'#13#10'  end;'#13#10#13#10'  {$endif}'#13#10#13#10
  +'end;'#13#10#13#10'procedure TCodeEditForm.AddInputBox(myInput:TCodeInputRec'
  +');'#13#10'var'#13#10'  HBoxNode:TDataNode;'#13#10'  NewHBox:TXHBox;'#13#10
  +'  NewCheckBox:TXCheckBox;'#13#10'  NewEditBox1, NewEditBox2:TXEditBox;'#13
  +#10'  NewButton:TXButton;'#13#10'  ParentNode:TDataNode;'#13#10'  BoxName,It'
  +'mValue:String;'#13#10'begin'#13#10'  numInputs:=numInputs+1;'#13#10'  SetLe'
  +'ngth(myInputs,numInputs);'#13#10'  myInputs[length(myInputs)-1]:=myInput;'
  +#13#10'  SetLength(CheckedInputs,numInputs);'#13#10#13#10'  ParentNode:=Code'
  +'EditParamListScrollBox.myNode;'#13#10'  BoxName:=''CodeEditInputCombo_''+in'
  +'tToStr(numInputs);'#13#10#13#10'  HBoxNode:=AddDynamicWidget(''TXHBox'',Cod'
  +'eEditForm,ParentNode,''HB''+BoxName,'''',''Left'',-1);'#13#10'  NewHBox:=TX'
  +'HBox(HBoxNode.ScreenObject);'#13#10'  NewCheckBox:=TXCheckBox(AddDynamicWid'
  +'get(''TXCheckBox'',CodeEditForm,HBoxNode,''CB''+BoxName,'''',''Top'',-1).Sc'
  +'reenObject);'#13#10'  NewEditBox1:=TXEditBox(AddDynamicWidget(''TXEditBox'''
  +',CodeEditForm,HBoxNode,''EB1''+BoxName,'''',''Top'',-1).ScreenObject);'#13
  +#10'  NewEditBox2:=TXEditBox(AddDynamicWidget(''TXEditBox'',CodeEditForm,HBo'
  +'xNode,''EB2''+BoxName,'''',''Top'',-1).ScreenObject);'#13#10'  NewButton:=T'
  +'XButton(AddDynamicWidget(''TXButton'',CodeEditForm,HBoxNode,''Btn''+BoxName'
  +','''',''Top'',-1).ScreenObject);'#13#10#13#10#13#10'  {$ifndef JScript}'#13
  +#10'  NewHBox.BgColor:=HexRGBToColor(''#BFCDDB'');'#13#10'  {$else}'#13#10' '
  +' NewHBox.BgColor:=''#DBCDBF'';'#13#10'  {$endif}'#13#10#13#10'  NewHBox.Bor'
  +'der:=false;'#13#10#13#10'  NewCheckBox.LabelText:='''';'#13#10'  NewCheckBo'
  +'x.myNode.registerEvent(''Click'',@CodeEditForm.InputCheckBoxClick);'#13#10
  +#13#10'  NewEditBox1.ItemValue:=myInput.InputSynonym;'#13#10'  NewEditBox1.L'
  +'abelText:='''';'#13#10#13#10'  NewEditBox2.LabelText:='''';'#13#10'  NewEdi'
  +'tBox2.ContainerWidth:=''50%'';'#13#10'  NewEditBox2.BoxWidth:=''100%'';'#13
  +#10'  NewEditBox2.ReadOnly:=true;'#13#10#13#10'  NewButton.Caption:=''...'';'
  +#13#10#13#10'  if myInput.InputNodeName<>'''' then'#13#10'    NewEditBox2.It'
  +'emValue:=myInput.InputNodeName+''.''+myInput.InputAttribName;'#13#10#13#10
  +'  NewEditBox1.myNode.registerEvent(''Change'',@CodeEditForm.EditInputSynony'
  +'m);'#13#10'  NewEditBox2.myNode.registerEvent(''Change'',@CodeEditForm.Edit'
  +'InputSource);'#13#10'  NewButton.myNode.registerEvent(''ButtonClick'',@Code'
  +'EditForm.ShowInputSelector);'#13#10'end;'#13#10#13#10'procedure TCodeEditFo'
  +'rm.InputCheckBoxClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStrin'
  +'g);'#13#10'var'#13#10'  numstr:string;'#13#10'  n:integer;'#13#10'  bits:TS'
  +'tringList;'#13#10'begin'#13#10'  bits:=stringsplit(nodeId,''_'');'#13#10'  '
  +'if bits.count>1 then'#13#10'  begin'#13#10'    numstr:=bits[1];'#13#10'    '
  +'n:=strtoint(numstr);'#13#10'    CheckedInputs[n-1]:=MyStrToBool(myValue);'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.EditInputSyno'
  +'nym(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13
  +#10'  numstr:string;'#13#10'  n:integer;'#13#10'  bits:TStringList;'#13#10'b'
  ,'egin'#13#10'  // index for myInputs always matches the integer suffix of th'
  +'e combo box name (-1).'#13#10'  // Gaps due to deleted inputs are handled o'
  +'n form closure.'#13#10'  bits:=stringsplit(nodeId,''_'');'#13#10'  if bits.'
  +'count>1 then'#13#10'  begin'#13#10'    numstr:=bits[1];'#13#10'    n:=strto'
  +'int(numstr);'#13#10'    myInputs[n-1].InputSynonym:=myValue;'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'procedure TCodeEditForm.EditInputSource(e:TEventSta'
  +'tus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  numstr:st'
  +'ring;'#13#10'  n:integer;'#13#10'  bits,SourceBits:TStringList;'#13#10'begi'
  +'n'#13#10'  // index for myInputs always matches the integer suffix of the c'
  +'ombo box name (-1).'#13#10'  // Gaps due to deleted inputs are handled on f'
  +'orm closure.'#13#10'  bits:=stringsplit(nodeId,''_'');'#13#10'  if bits.cou'
  +'nt>1 then'#13#10'  begin'#13#10'    numstr:=bits[1];'#13#10'    n:=strtoint'
  +'(numstr);'#13#10'    SourceBits:=StringSplit(myValue,''.'');'#13#10'    if '
  +'SourceBits.Count=2 then'#13#10'    begin'#13#10'      myInputs[n-1].InputNo'
  +'deName:=SourceBits[0];'#13#10'      myInputs[n-1].InputAttribName:=SourceBi'
  +'ts[1];'#13#10'    end'#13#10'    else'#13#10'    begin'#13#10'      myInput'
  +'s[n-1].InputNodeName:=myValue;'#13#10'    end;'#13#10'  end;'#13#10'end;'#13
  +#10#13#10'procedure TCodeEditForm.ShowInputSelector(e:TEventStatus;nodeID: A'
  +'nsiString; myValue: AnsiString);'#13#10'var'#13#10'  numstr:string;'#13#10
  +'  n:integer;'#13#10'  bits:TStringList;'#13#10'begin'#13#10'  // index for '
  +'myInputs always matches the integer suffix of the combo box name (-1).'#13
  +#10'  // Gaps due to deleted inputs are handled on form closure.'#13#10'  bi'
  +'ts:=stringsplit(nodeId,''_'');'#13#10'  if bits.count>1 then'#13#10'  begin'
  +#13#10'    numstr:=bits[1];'#13#10'    n:=strtoint(numstr);'#13#10'    Input'
  +'SelectForm.TargetEditBoxNode:=FindDataNodeById(UIRootNode,''EB2''+''CodeEdi'
  +'tInputCombo_''+intToStr(n),'''',true);'#13#10#13#10'    InputSelectForm.Ini'
  +'tialise;'#13#10'    ShowXForm(''InputSelectForm'',true);'#13#10#13#10'    {'
  +'$ifndef JScript}'#13#10'    // on return...'#13#10'    InputSelectForm.Inpu'
  +'tSelectClosed;'#13#10'    {$endif}'#13#10'  end;'#13#10'end;'#13#10#13#10'p'
  +'rocedure TCodeEditForm.CodeEditHelpBtnHandleButtonClick(e:TEventStatus;node'
  +'ID: AnsiString;'#13#10'  myValue: AnsiString);'#13#10'begin'#13#10'  ShowXF'
  +'orm(''PopupMemoForm'',false);'#13#10'end;'#13#10#13#10#13#10'procedure TCod'
  +'eEditForm.CodeEditAddInputBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiS'
  +'tring; myValue: AnsiString);'#13#10'var'#13#10'  emptyRec:TCodeInputRec;'#13
  +#10'begin'#13#10'  // add an element to the CodeEditParamListScrollBox'#13#10
  +'  // The element is a ComboBox with avaliable options listing all system pr'
  +'operties, and eligible functions.'#13#10'  AddInputBox(emptyRec);'#13#10'en'
  +'d;'#13#10#13#10'procedure TCodeEditForm.CodeEditDelInputBtnHandleButtonClic'
  +'k(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10
  +'  i:integer;'#13#10'  delNode:TDataNode;'#13#10'begin'#13#10'  //showmessag'
  +'e(''not yet implemented'');'#13#10'  // delete all checked inputs'#13#10'  '
  +'for i:=0 to length(CheckedInputs)-1 do'#13#10'  begin'#13#10'    if Checked'
  +'Inputs[i]=true then'#13#10'    begin'#13#10'      delNode:=FindDataNodeById'
  +'(CodeFormRoot,''HBCodeEditInputCombo_''+IntToStr(i+1),'''',true);'#13#10'  '
  +'    DeleteNode(CodeEditParamListScrollBox.myNode,delNode);'#13#10'      Che'
  +'ckedInputs[i]:=false;'#13#10'      myInputs[i].InputNodeName:='''';'#13#10
  +'      myInputs[i].InputAttribName:='''';'#13#10'    end;'#13#10'  end;'#13
  +#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'Function GetErrorLineNum(Error'
  +'String,Delimiter:string):integer;'#13#10'  var   LinNumPos,linenum:integer;'
  +#13#10'        lineNumStr:string;'#13#10'  begin'#13#10'    lineNumStr:=''-1'
  +''';'#13#10'    LinNumPos:=pos(Delimiter,ErrorString);'#13#10'    if LinNumP'
  +'os >0 then'#13#10'      lineNumStr := rightstr(ErrorString,(1+length(errors'
  +'tring)-length(Delimiter)-LinNumPos));'#13#10'    Try'#13#10'      linenum:='
  +' strtoint(lineNumStr);'#13#10'    except'#13#10'    On E : EConvertError do'
  +#13#10'      linenum:= -1;'#13#10'    end;'#13#10'    result:=linenum;'#13#10
  +'  end;'#13#10'{$endif}'#13#10#13#10'procedure TCodeEditForm.NavigateToFirst'
  +'Error;'#13#10'var'#13#10'  i:integer;'#13#10'  FoundLineNum:Boolean;'#13#10
  +'  FileName,CharPos:string;'#13#10'  LineNum:String;'#13#10'  LNum:integer;'
  +#13#10'  tmp1:TStringList;'#13#10'begin'#13#10'  // search the messages list'
  +'.  Look for a name(line,char) string.'#13#10'  // If the line also contains'
  +' keyword ''Error'' then navigate to the indicated code block'#13#10'  lNum:'
  +'=-1;'#13#10'  {$ifndef JScript}'#13#10'  i:=0;'#13#10'  while i<CodeEdit.Th'
  +'eMessages.lines.count do'#13#10'  begin'#13#10'    if FoundString(CodeEdit.'
  +'TheMessages.lines[i],''Error'')>0 then'#13#10'    begin'#13#10'      CodeEd'
  ,'it.GetFileNameLineNumAndCharPos(FoundLineNum,CodeEdit.TheMessages.lines[i],'
  +' ''('',FileName,LineNum,CharPos );'#13#10'      if (trim(FileName)<>'''')'
  +#13#10'      and (lineNum<>'''') then'#13#10'      begin'#13#10'        LNum'
  +':=i;'#13#10'        i:=CodeEdit.TheMessages.lines.count;'#13#10'      end;'
  +#13#10'    end;'#13#10'    i:=i+1;'#13#10'  end;'#13#10'  {$else}'#13#10'  t'
  +'mp1:=TStringList.Create;'#13#10'  tmp1.Text:=CodeEdit.MessageLines;'#13#10
  +'  i:=0;'#13#10'  while i<tmp1.count do'#13#10'  begin'#13#10'    if FoundSt'
  +'ring(tmp1[i],''Error'')>0 then'#13#10'    begin'#13#10'      CodeEdit.GetFi'
  +'leNameLineNumAndCharPos(FoundLineNum,tmp1[i], ''('',FileName,LineNum,CharPo'
  +'s );'#13#10'      if (trim(FileName)<>'''')'#13#10'      and (lineNum<>'''''
  +') then'#13#10'      begin'#13#10'        LNum:=i;'#13#10'        i:=tmp1.co'
  +'unt;'#13#10'      end;'#13#10'    end;'#13#10'    i:=i+1;'#13#10'  end;'#13
  +#10'  FreeAndNil(tmp1);'#13#10'  {$endif}'#13#10'  if lNum>-1 then'#13#10'  '
  +'begin'#13#10'    DisplayIncFile(Filename,lineNum,CharPos);'#13#10'  end;'#13
  +#10'end;'#13#10#13#10'procedure TCodeEditForm.DisplayTheCodeBlock(targetLine'
  +',targetChar:integer);'#13#10'begin'#13#10'  // showmessage(''targetline=''+'
  +'inttostr(targetline));'#13#10'  // set cursor position'#13#10'  if (targetC'
  +'har>-1) then'#13#10'    if CodeEditMainTabs.TabIndex=0 then'#13#10'      Co'
  +'deEdit.GoToLineCharPos(targetLine,targetChar)'#13#10'    else'#13#10'      '
  +'CodeEditInit.GoToLineCharPos(targetLine,targetChar);'#13#10'end;'#13#10#13
  +#10'procedure TCodeEditForm.DisplayIncFile(FileName,lineNum,charPos:String);'
  +#13#10'var'#13#10'  tmp1:TStringList;'#13#10'  FStrings,FStrings2:TStringLis'
  +'t;'#13#10'  TargetNode:TDataNode;'#13#10'  targetLine:integer;'#13#10'  Con'
  +'text:String;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10'    tmp1:=LoadI'
  +'ncludeFile(nil,FileName,''tempinc/'');'#13#10'  {$else}'#13#10'    tmp1:=Lo'
  +'adIncludeFile(myWebCompiler.Compiler,FileName,''tempinc/'');'#13#10'  {$end'
  +'if}'#13#10#13#10'  if tmp1.Count>0 then'#13#10'  begin'#13#10'    CodeEdit.'
  +'ItemValue:=tmp1.Text;'#13#10'    CodeEditInit.ItemValue:='''';'#13#10'    F'
  +'reeAndNil(tmp1);'#13#10#13#10'    self.TargetNodeName:='''';'#13#10'    sel'
  +'f.EventType:='''';'#13#10'    //filename is NodeName + EventType'#13#10'   '
  +' FStrings2:=StringSplit(FileName,''.'');'#13#10'    if FStrings2.Count=2 th'
  +'en'#13#10'    begin'#13#10'      if FStrings2[1]=''inc'' then'#13#10'      '
  +'begin'#13#10'        // could be a function or an event handler'#13#10'    '
  +'    FStrings:=StringSplit(FStrings2[0],''__'');'#13#10'        if FStrings.'
  +'Count>=2 then'#13#10'        begin'#13#10'          self.TargetNodeName:=FS'
  +'trings[0];'#13#10'          self.EventType:=FStrings[1];'#13#10'          s'
  +'elf.Mode:=''EventCode'';'#13#10'          Context:=''Event Handler'';'#13#10
  +#13#10'          CodeEditInitTab.IsVisible:=true;'#13#10#13#10'          // '
  +'Load up both the main event code AND the initialisation code...'#13#10'    '
  +'      TargetNode:=FindDataNodeById(SystemNodeTree,self.TargetNodeName,'''','
  +'true);'#13#10'          CodeEditInit.ItemValue:=TargetNode.GetEventInitCode'
  +'(self.EventType);'#13#10#13#10'          CodeEdit.ItemValue:=TargetNode.Get'
  +'EventCode(self.EventType);'#13#10'          targetLine:=StrToInt(linenum)-1'
  +';'#13#10'          if FoundString(FileName,''Init.'')>0 then'#13#10'       '
  +'      CodeEditMainTabs.TabIndex:=1;'#13#10'        end'#13#10'        else'
  +#13#10'        begin'#13#10'          self.TargetNodeName:=FStrings[0];'#13
  +#10'          self.Mode:=''FunctionCode'';'#13#10'          Context:=''Funct'
  +'ion'';'#13#10'          targetLine:=StrToInt(linenum);'#13#10'        end;'
  +#13#10#13#10'        //self.CodeEditContextLabel.LabelCaption:=self.TargetNo'
  +'deName+'' ''+self.EventType;'#13#10'        //CodeEdit.LabelText:=self.Targ'
  +'etNodeName+'' ''+self.EventType;'#13#10'        FreeAndNil(FStrings);'#13#10
  +'      end'#13#10'      else'#13#10'      begin'#13#10'        self.TargetNo'
  +'deName:=FStrings2[0];'#13#10'        self.EventType:='''';'#13#10'        s'
  +'elf.Mode:=''UnitCode'';'#13#10'        Context:=''RawUnit'';'#13#10'       '
  +' //self.CodeEditContextLabel.LabelCaption:=self.TargetNodeName;'#13#10'    '
  +'    //CodeEdit.LabelText:=self.TargetNodeName;'#13#10'        targetLine:=S'
  +'trToInt(linenum);'#13#10'      end;'#13#10'    end;'#13#10'    FreeAndNil(F'
  +'Strings2);'#13#10'    self.InitialiseOnShow(Context,self.TargetNodeName,sel'
  +'f.EventType);'#13#10'    DisplayTheCodeBlock(targetLine,strToInt(charPos));'
  +#13#10'  end'#13#10'  else'#13#10'  begin'#13#10'    showmessage(''This file'
  +' is not available for edit'');'#13#10'  end;'#13#10'  FreeAndNil(tmp1);'#13
  +#10'end;'#13#10#13#10'procedure TCodeEditForm.HandleMessageClick(e:TEventSta'
  +'tus;nodeID: AnsiString; myValue: AnsiString; ThisCodeEdit:TXCode);'#13#10'v'
  +'ar linenumber,targetLine:integer;'#13#10'    SelectedLine,FileName,CharPos:'
  ,'string;'#13#10'    FoundLineNum:Boolean;'#13#10'    FStrings:TStringList;'
  +#13#10'    tmp,LineNum,Context:String;'#13#10'    TargetNode:TDataNode;'#13
  +#10'    Messages:TStringList;'#13#10'begin'#13#10'  //showmessage(''CodeEdit'
  +' HandleClickMessage ''+ nodeID + '' ''+myValue);'#13#10' {$ifndef JScript}'
  +#13#10' linenumber:=thisCodeEdit.TheMessages.CaretPos.Y;'#13#10' SelectedLin'
  +'e:= thisCodeEdit.TheMessages.lines[linenumber];'#13#10' thisCodeEdit.GetFil'
  +'eNameLineNumAndCharPos(FoundLineNum,SelectedLine, ''('',FileName,LineNum,Ch'
  +'arPos );'#13#10' {$else}'#13#10' // Find the message line thats been clicke'
  +'d on'#13#10' try'#13#10' linenumber:=StrToInt(myValue);'#13#10' except'#13
  +#10'   On E : EConvertError do'#13#10'   EXIT;'#13#10' end;'#13#10' Messages'
  +':=TStringList.Create;'#13#10' Messages.Text:=thisCodeedit.MessageLines;'#13
  +#10' //showmessage(''linenumber=''+inttostr(linenumber)+'' count=''+inttostr'
  +'(Messages.Count));'#13#10' if linenumber>Messages.Count then'#13#10'   EXIT'
  +';'#13#10' SelectedLine:= Messages[linenumber-1];'#13#10#13#10' // Find the '
  +'indicated line number from the message'#13#10' thisCodeEdit.GetFileNameLine'
  +'NumAndCharPos(FoundLineNum,SelectedLine, ''('',FileName,LineNum,CharPos );'
  +#13#10' //showmessage(''FileName=''+FileName+'' Indicated Linenum is ''+line'
  +'num);'#13#10' {$endif}'#13#10#13#10' CodeEditMainTabs.TabIndex:=0;'#13#10#13
  +#10' //load the indicated file from the tempinc folder into the code edit bo'
  +'x'#13#10' if (trim(FileName)<>'''')'#13#10' and (lineNum<>'''')'#13#10' and'
  +' (charPos<>'''') then'#13#10' begin'#13#10'   FStrings:=StringSplit(FileNam'
  +'e,''.'');'#13#10'   if ((FStrings.Count=2)'#13#10'     and (FStrings[1]=''i'
  +'nc''))'#13#10'   or (CodeEditForm.Mode = ''dll'') then'#13#10'   begin'#13
  +#10'     DisplayIncFile(FileName,lineNum,CharPos);'#13#10'   end'#13#10'   e'
  +'lse'#13#10'   begin'#13#10'     //if Filename includes a dot, then it''s a '
  +'nodename and eventtype.'#13#10'     //if it contains .AnimationCode, then i'
  +'t''s a GPU kernel block'#13#10'     //Otherwise it''s a code element (funct'
  +'ion or rawunit nodename)'#13#10#13#10'     // save any edits already done..'
  +'.'#13#10'     CodeEditStatus:=''ok'';'#13#10'     if CodeEditForm.Mode<>''S'
  +'earchCode'' then'#13#10'       CodeEditorClosed(nil);'#13#10#13#10'     if '
  +'FStrings.Count>1 then'#13#10'     begin'#13#10'       self.TargetNodeName:='
  +'FStrings[0];'#13#10'       targetNode:=FindDataNodeByid(systemNodeTree,self'
  +'.TargetNodeName,'''',false);'#13#10'       if targetNode<>nil then'#13#10' '
  +'      begin'#13#10'         if (FStrings.Count=3)'#13#10'         and (FStr'
  +'ings[2]=''AnimationCode'') then'#13#10'         begin'#13#10'           sel'
  +'f.Mode:=''AnimationCode'';'#13#10'           Context:=targetNode.NodeType;'
  +#13#10'           self.EventType:='''';'#13#10'           CodeEditInit.ItemV'
  +'alue:='''';'#13#10'           CodeEdit.ItemValue:='''';'#13#10'           C'
  +'odeEditMainTabs.TabIndex:=0;'#13#10'         end'#13#10'         else if FS'
  +'trings.Count>2 then'#13#10'         begin'#13#10'           self.EventType:'
  +'=FStrings[1];'#13#10'           self.Mode:=''EventCode'';'#13#10'          '
  +' Context:=''Event Handler'';'#13#10'           CodeEditInit.ItemValue:=Targ'
  +'etNode.GetEventInitCode(self.EventType);'#13#10'           CodeEdit.ItemVal'
  +'ue:=TargetNode.GetEventCode(self.EventType);'#13#10'           if FStrings['
  +'2]=''EventInitCode'' then'#13#10'           begin'#13#10'             CodeE'
  +'ditMainTabs.TabIndex:=1;'#13#10'           end'#13#10'           else'#13#10
  +'           begin'#13#10'             CodeEditMainTabs.TabIndex:=0;'#13#10' '
  +'          end;'#13#10'         end'#13#10'         else'#13#10'         beg'
  +'in'#13#10'           if targetNode.NodeType=''RawUnit'' then'#13#10'       '
  +'      self.Mode:=''RawUnitCode'''#13#10'           else'#13#10'            '
  +' self.Mode:=''FunctionCode'';'#13#10'           Context:=targetNode.NodeTyp'
  +'e;'#13#10'           self.EventType:='''';'#13#10'           CodeEditInit.I'
  +'temValue:='''';'#13#10'           CodeEdit.ItemValue:=TargetNode.GetAttribu'
  +'te(''Code'',true).AttribValue;'#13#10'           CodeEditMainTabs.TabIndex:'
  +'=0;'#13#10'         end;'#13#10'       end;'#13#10'     end;'#13#10#13#10' '
  +'    targetLine:=StrToInt(linenum)+1;'#13#10'     if self.Mode<>''AnimationC'
  +'ode'' then'#13#10'     begin'#13#10'       self.InitialiseOnShow(Context,ta'
  +'rgetNode.NodeName,self.EventType);'#13#10'       DisplayTheCodeBlock(target'
  +'Line,strToInt(charPos));'#13#10'     end'#13#10'     else'#13#10'     begin'
  +#13#10'       // GPU Animation code has a separate editor form...'#13#10'   '
  +'    ShowGPUKernel(targetNode,FileName,targetLine,CharPos);'#13#10#13#10'   '
  +'  end;'#13#10'   end;'#13#10#13#10'   FreeAndNil(FStrings);'#13#10' end;'#13
  +#10'end;'#13#10#13#10'procedure TCodeEditForm.CodeEditHandleClickMessage(e:T'
  +'EventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10' '
  ,' self.HandleMessageClick(e,nodeID,myValue,CodeEdit);'#13#10'end;'#13#10#13
  +#10'procedure TCodeEditForm.CodeEditInitHandleClickMessage(e: TEventStatus;'
  +#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  sel'
  +'f.HandleMessageClick(e,nodeID,myValue,CodeEditInit);'#13#10'end;'#13#10#13
  +#10'procedure TCodeEditForm.CodeEditMainTabsHandleChange(e: TEventStatus;'#13
  +#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  if Cod'
  +'eEditMainTabs.TabIndex = 1 then'#13#10'    if CodeEditForm.CodeEditInit.Ite'
  +'mValue = '''' then'#13#10'      CodeEditForm.CodeEditInit.ItemValue := Dflt'
  +'EventCode;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.DoGlobalSearch('
  +'TextToFind:String);'#13#10'  {$ifndef JScript}'#13#10'  procedure SearchThi'
  +'sText(TheName,TheType,TheText:String);'#13#10'  var'#13#10'    lineNumber: '
  +'integer;'#13#10'    TempMemo:TMemo;'#13#10'    atPos:integer;'#13#10'  begi'
  +'n'#13#10'     TempMemo:=TMemo.Create(nil);'#13#10'     TempMemo.Lines.Text:'
  +'=TheText;'#13#10'      for lineNumber := 0 to TempMemo.lines.count-1 do'#13
  +#10'      begin'#13#10'        if self.CodeEditFindCase.Checked then'#13#10
  +'          atPos:=Pos( UpperCase(TextToFind), UpperCase(TempMemo.lines[lineN'
  +'umber]) )'#13#10'        else'#13#10'          atPos:=Pos( TextToFind, Temp'
  +'Memo.lines[lineNumber] );'#13#10'        if atPos > 0 then'#13#10'         '
  +' //ShowMessage( ''Found in line '' + IntToStr(lineNumber) );'#13#10'       '
  +'   //self.CodeEdit.TheMessages.Append(TheName+'' : ''+TheType+'' : ''+TempM'
  +'emo.lines[lineNumber]);'#13#10'          self.CodeEdit.AddMessage(TheName+'
  +'''.''+TheType+''(''+inttostr(lineNumber)+'',''+inttostr(atPos)+'') ''+TempM'
  +'emo.lines[lineNumber]);'#13#10'      end;'#13#10'  end;'#13#10'  {$else}'#13
  +#10'  procedure SearchThisText(TheName,TheType,TheText:String);'#13#10'  var'
  +#13#10'    lines:TStringList;'#13#10'    i,p:integer;'#13#10'  begin'#13#10
  +'    lines:=TStringList.Create;'#13#10'    lines.Text:=TheText;'#13#10'    f'
  +'or i:=0 to lines.Count-1 do'#13#10'    begin'#13#10'      if self.CodeEditF'
  +'indCase.Checked then'#13#10'        p:=FoundStringCI(lines[i], TextToFind)'
  +#13#10'      else'#13#10'        p:=FoundString(lines[i], TextToFind);'#13#10
  +'      if p>0 then'#13#10'        self.CodeEdit.AddMessage(TheName+''.''+The'
  +'Type+''(''+inttostr(i)+'',''+inttostr(p)+'') ''+lines[i]);'#13#10'    end;'
  +#13#10'  end;'#13#10'  {$endif}'#13#10#13#10'  procedure SearchEventsCode(Cu'
  +'rrentItem:TDataNode);'#13#10'  var dflt:String;'#13#10'      i,k,numchildre'
  +'n:integer;'#13#10'      AllKernels:TAnimCodeArray;'#13#10'  begin'#13#10'  '
  +'  dflt:=DfltEventCode;'#13#10'    if CurrentItem<>nil then'#13#10'    if Cu'
  +'rrentItem.NameSpace='''' then'#13#10'    begin'#13#10'        numchildren:='
  +'length(CurrentItem.ChildNodes);'#13#10'        for i:=0 to CurrentItem.myEv'
  +'entTypes.Count-1 do'#13#10'        begin'#13#10'          if (CurrentItem.H'
  +'asUserEventCode(CurrentItem.myEventTypes[i]))'#13#10'          and (Current'
  +'Item.GetEventCode(CurrentItem.myEventTypes[i])<>dflt) then'#13#10'         '
  +' begin'#13#10'             SearchThisText(CurrentItem.nodeName+''.''+Curren'
  +'tItem.myEventTypes[i],'#13#10'                            ''EventCode'','#13
  +#10'                            CurrentItem.GetEventCode(CurrentItem.myEvent'
  +'Types[i]));'#13#10'             SearchThisText(CurrentItem.nodeName+''.''+C'
  +'urrentItem.myEventTypes[i],'#13#10'                            ''EventInitC'
  +'ode'','#13#10'                            CurrentItem.GetEventInitCode(Curr'
  +'entItem.myEventTypes[i]));'#13#10'          end;'#13#10'        end;'#13#10
  +'        if (CurrentItem.NodeType=''TXGPUCanvas'') then'#13#10'        begin'
  +#13#10'          AllKernels:=TXGPUCanvas(CurrentItem.ScreenObject).FetchAllA'
  +'nimCode;'#13#10'          for k:=0 to length(AllKernels)-1 do'#13#10'      '
  +'    begin'#13#10'            SearchThisText(CurrentItem.nodeName+''.''+intt'
  +'ostr(k),''AnimationCode'',AllKernels[k].Text);'#13#10'          end;'#13#10
  +'        end;'#13#10#13#10'        for i:=0 to numchildren-1 do'#13#10'     '
  +'   begin'#13#10'          SearchEventsCode(CurrentItem.ChildNodes[i]);'#13
  +#10'        end;'#13#10#13#10'    end;'#13#10'  end;'#13#10'  procedure Sear'
  +'chCodeNode(ThisNode:TdataNode);'#13#10'  var'#13#10'    i:integer;'#13#10' '
  +' begin'#13#10'    if (ThisNode.NodeType=''RawUnit'')'#13#10'    or (ThisNod'
  +'e.NodeType=''Function'') then'#13#10'    begin'#13#10'      SearchThisText('
  +'ThisNode.NodeName,ThisNode.NodeType,ThisNode.GetAttribute(''Code'',true).At'
  +'tribValue);'#13#10'    end;'#13#10'    for i:=0 to length(ThisNode.ChildNod'
  +'es)-1 do'#13#10'      SearchCodeNode(ThisNode.ChildNodes[i]);'#13#10'  end;'
  +#13#10#13#10'begin'#13#10'  // text blocks to be searched....'#13#10'  //   '
  +'Raw Units'#13#10'  //   Functions'#13#10'  //   Event handlers'#13#10'  // '
  +'search through each text block, listing name, line number and line text for'
  ,' each found occurrence'#13#10'  // (list found elements in messages block)'
  +#13#10'  //!! save any changes first....??'#13#10'  CodeEditStatus:=''ok'';'
  +#13#10'  if CodeEditForm.Mode<>''SearchCode'' then'#13#10'    CodeEditorClos'
  +'ed(nil);'#13#10#13#10'  self.CodeEdit.MessageLines:='''';'#13#10'  self.Cod'
  +'eEdit.ItemValue:='''';'#13#10'  CodeEditForm.Mode:=''SearchCode'';'#13#10' '
  +' CodeEditForm.InitialiseOnShow(''Search Results'','''','''');'#13#10'  Sear'
  +'chCodeNode(CodeRootNode);'#13#10'  SearchEventsCode(UIRootNode);'#13#10#13
  +#10'end;'#13#10#13#10'procedure TCodeEditForm.DoLocalSearch(TextToFind:Strin'
  +'g);'#13#10'var'#13#10'    found:integer;'#13#10'    {$ifndef JScript}'#13#10
  +'    opts:TSynSearchOptions;'#13#10'    {$else}'#13#10'    txt,qual:String;'
  +#13#10'    {$endif}'#13#10'begin'#13#10'    {$ifndef JScript}'#13#10'    if '
  +'self.CodeEditFindCase.Checked then'#13#10'      opts := [ssoEntireScope]'#13
  +#10'    else'#13#10'      opts:= [ssoEntireScope,ssoMatchCase];'#13#10'    f'
  +'ound:=self.CodeEdit.TheEditor.SearchReplace(TextToFind,'''',opts);'#13#10#13
  +#10'    {$else}'#13#10'    qual:=''g'';'#13#10'    if self.CodeEditFindCase.'
  +'Checked then'#13#10'      qual:=''gi'';'#13#10'    txt:=TextToFind;'#13#10
  +'    asm'#13#10'    var textfield=document.getElementById(''CodeEditContents'
  +'Real'');'#13#10'    //var regex=new RegExp(txt, "gi");'#13#10'    var regex'
  +'=new RegExp(txt, qual);'#13#10'    this.RegExp=regex;'#13#10#13#10'    var '
  +'ok=regex.test(textfield.value);'#13#10'    //alert(''test regex.lastIndex='
  +'''+regex.lastIndex);'#13#10#13#10'    if (!ok)'#13#10'      {found=-1;}'#13
  +#10'    else {'#13#10'      found=regex.lastIndex;  }'#13#10#13#10'    //ale'
  +'rt(''search(regex) ''+regex+'' found=''+found);'#13#10'    this.LastSearchI'
  +'ndex=found;'#13#10'    end;'#13#10'    if found>-1 then'#13#10'      self.C'
  +'odeEdit.GoToCharPos(found-length(txt));'#13#10'    self.LastSearchIndex:=fo'
  +'und;'#13#10'    found:=found+1;'#13#10'    {$endif}'#13#10'  if found<1 the'
  +'n'#13#10'    showmessage(''Not found'');'#13#10#13#10'end;'#13#10#13#10'pro'
  +'cedure TCodeEditForm.CodeEditFindBtnHandleButtonClick(e: TEventStatus;'#13
  +#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'  if sel'
  +'f.CodeEditFindTxt.ItemValue='''' then'#13#10'    showmessage(''Please enter'
  +' text to be found'')'#13#10'  else'#13#10'  begin'#13#10'    if CodeEditFin'
  +'dGlobal.Checked=false then'#13#10'      DoLocalSearch(self.CodeEditFindTxt.'
  +'ItemValue)'#13#10'    else'#13#10'      DoGlobalSearch(self.CodeEditFindTxt'
  +'.ItemValue);'#13#10'  end;'#13#10'end;'#13#10'procedure TCodeEditForm.CodeE'
  +'ditFindNextBtnHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiStrin'
  +'g; myValue: AnsiString);'#13#10'var'#13#10'    found,startidx:integer;'#13
  +#10'    {$ifndef JScript}'#13#10'    opts:TSynSearchOptions;'#13#10'    {$el'
  +'se}'#13#10'    txt:String;'#13#10'    {$endif}'#13#10'begin'#13#10'  if sel'
  +'f.CodeEditFindTxt.ItemValue='''' then'#13#10'    showmessage(''Please enter'
  +' text to be found'')'#13#10'  else'#13#10'  begin'#13#10'    {$ifndef JScri'
  +'pt}'#13#10'    if self.CodeEditFindCase.Checked then'#13#10'      opts := ['
  +'ssoFindContinue]'#13#10'    else'#13#10'      opts:= [ssoFindContinue,ssoMa'
  +'tchCase];'#13#10'    found:=self.CodeEdit.TheEditor.SearchReplace(self.Code'
  +'EditFindTxt.ItemValue,'''',opts);'#13#10'    {$else}'#13#10'    txt:=self.C'
  +'odeEditFindTxt.ItemValue;'#13#10'    startidx:=self.LastSearchIndex;'#13#10
  +'    asm'#13#10'    if ((this.RegExp==null)||(this.RegExp==undefined)) {'#13
  +#10'      alert(''Please use "Find" first''); }'#13#10'    else {'#13#10'   '
  +'   var regex=this.RegExp;'#13#10'      regex.lastIndex=startidx;'#13#10'   '
  +'   var textfield=document.getElementById(''CodeEditContentsReal'');'#13#10
  +'      var ok=regex.test(textfield.value);'#13#10'      if (!ok)'#13#10'    '
  +'    {found=-1;}'#13#10'      else {'#13#10'        found=regex.lastIndex;  '
  +'}'#13#10'      //alert(''test regex.lastIndex=''+regex.lastIndex);'#13#10#13
  +#10'      this.LastSearchIndex=found;'#13#10'      //alert(''regex ''+regex+'
  +''' found=''+found);'#13#10'      }'#13#10'    end;'#13#10'    if found>-1 t'
  +'hen'#13#10'      self.CodeEdit.GoToCharPos(found-length(txt));'#13#10'    f'
  +'ound:=found+1;'#13#10'    {$endif}'#13#10'    if found<1 then'#13#10'      '
  +'showmessage(''No further occurrences'');'#13#10#13#10'  end;'#13#10'end;'#13
  +#10#13#10#13#10'function TCodeEditForm.ValidateInputs:Boolean;'#13#10'var'#13
  +#10'  ok:Boolean;'#13#10'  i:integer;'#13#10'begin'#13#10'  ok:=true;'#13#10
  +'  for i:=0 to length(MyInputs)-1 do'#13#10'    if trim(myInputs[i].InputNod'
  +'eName)<>'''' then'#13#10'    begin'#13#10'      if trim(myInputs[i].InputSy'
  +'nonym)='''' then'#13#10'        ok:=false;'#13#10'    end;'#13#10'  if ok=f'
  +'alse then'#13#10'    showmessage(''Please provide a Synonym for each declar'
  +'ed input'');'#13#10#13#10'  result:=ok;'#13#10'end;'#13#10#13#10'procedure '
  ,'TCodeEditForm.CodeEditSaveBtnHandleButtonClick(e:TEventStatus;nodeID: AnsiS'
  +'tring; myValue: AnsiString);'#13#10'var'#13#10'    XFormNode:TDataNode;'#13
  +#10'    ok:Boolean;'#13#10'begin'#13#10'  ok:=ValidateInputs;'#13#10'  if ok'
  +' then'#13#10'  begin'#13#10'    CodeEditStatus:=''ok'';'#13#10'    TXForm(s'
  +'elf).Showing:=''No'';'#13#10'//      {$ifndef JScript}'#13#10'//       {$el'
  +'se}'#13#10'       CodeEditorClosed(OIEditBox);'#13#10'//      {$endif}'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'procedure TCodeEditForm.CodeEditCancelBt'
  +'nHandleButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'var'#13#10'    XFormNode:TDataNode;'#13#10'begin'#13#10'  CodeEditSta'
  +'tus:=''Cancel'';'#13#10'  TXForm(self).Showing:=''No'';'#13#10'  {$ifndef J'
  +'Script}'#13#10'  {$else}'#13#10'  OIEditBox:=nil;'#13#10'  {$endif}'#13#10
  +'end;'#13#10#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('compileusercode','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit CompileUserCode;'#13
  +#10#13#10'(*'#13#10'This unit manages the Free Pascal compilation of user-cr'
  +'eated event handler code'#13#10'into a dll, with functions callable in run '
  +'mode.'#13#10#13#10'Equivalent compilation to JS, for use in the HTML runtim'
  +'e, is done using pas2js compiler.'#13#10#13#10'*)'#13#10#13#10'{$ifndef JSc'
  +'ript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'interface'#13
  +#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUtils,  UtilsJSC'
  +'ompile,'#13#10'  webTranspilerUtils,'#13#10'  XComposite,'#13#10'{$ifndef J'
  +'Script}'#13#10'  {$if defined ( windows)}'#13#10'  Windows,                '
  +'           // for CurrentThreadID'#13#10'  {$endif}'#13#10'  //CompilerLogU'
  +'nit,'#13#10'  LazsUtils, Controls, URIParser,'#13#10'  PropEdits,TypInfo, D'
  +'ialogs, Dynlibs,Process,'#13#10'  XCode, Forms, Events;'#13#10'{$else}'#13
  +#10'  HTMLUtils,XCode,XIFrame,Events,'#13#10'  webfilecache, pas2jswebcompil'
  +'er,'#13#10'  InterfaceTypes;'#13#10'{$endif}'#13#10#13#10'function CompileE'
  +'ventCode(MyCodeEditor:TXCode;RunMode:String):Boolean;'#13#10'function   Dfl'
  +'tUnitCode(UnitName,UnitType:String):string;'#13#10'function   DfltFunctionC'
  +'ode(FnName:String):string;'#13#10'function   DfltEventCode:string;'#13#10'f'
  +'unction   DfltThreadEventCode(NodeName:String):string;'#13#10'function   Df'
  +'ltTreeNodeEventCode:string;'#13#10'procedure GatherSourcedAttributes(StartN'
  +'ode:TDataNode);'#13#10#13#10'var'#13#10'    ConfigfpcPath:String;'#13#10#13
  +#10'{$ifndef JScript}'#13#10'{$else}'#13#10'var'#13#10'    JSOutput:String;'
  +#13#10#13#10#13#10'    eventsinterfacepas:String;'#13#10'    interfacetypesp'
  +'as:String;'#13#10#13#10'    classespas:String;'#13#10'    contnrspas:String'
  +';'#13#10'    dateutilspas:String;'#13#10'    jspas:String;'#13#10'    mathp'
  +'as:String;'#13#10'    rtlconstspas:String;'#13#10'//    rttipas:String;'#13
  +#10'    strutilspas:String;'#13#10'    systempas:String;'#13#10'    sysutils'
  +'pas:String;'#13#10'    typespas:String;'#13#10'    typinfopas:String;'#13#10
  +#13#10'//      browserconsolepas:String;'#13#10'//      class2paspas:String;'
  +#13#10'//      hotreloadclientpas:String;'#13#10'//      libjquerypas:String'
  +';'#13#10'//      nodejspas:String;'#13#10'//      objpaspas:String;'#13#10
  +'//      timerpas:String;'#13#10'//      webpas:String;'#13#10'//      webau'
  +'diopas:String;'#13#10'//      webbluetoothpas:String;'#13#10'//      webglp'
  +'as:String;'#13#10'//      webrouterpas:String;'#13#10'{$endif}'#13#10#13#10
  +#13#10#13#10'implementation'#13#10'uses  XObjectInsp;'#13#10#13#10'{$ifndef '
  +'JScript}'#13#10'type'#13#10'   TMyDLL = function (var instring:string): str'
  +'ing; stdcall ;'#13#10#13#10'var'#13#10'    AProcess: TProcess;'#13#10'{$end'
  +'if}'#13#10'var'#13#10'    PascalCode,ExportsList,NamespaceUnits:TStringList'
  +';'#13#10#13#10#13#10'{$ifndef JScript}'#13#10'procedure DeleteDynamicIncFil'
  +'es;'#13#10'var'#13#10'  lSearchRec:TSearchRec;'#13#10'  lPath:string;'#13#10
  +'begin'#13#10'  if not DirectoryExists(''tempinc'') then'#13#10'    CreateDi'
  +'r(''tempinc'');'#13#10#13#10'  lPath := ''tempinc/'';'#13#10#13#10'  if Fin'
  +'dFirst(lPath+''*.*'',faAnyFile,lSearchRec) = 0 then'#13#10'  begin'#13#10' '
  +'   try'#13#10'      repeat'#13#10'        SysUtils.DeleteFile(lPath+lSearch'
  +'Rec.Name);    //!! does not delete any files it thinks are open...'#13#10' '
  +'     until SysUtils.FindNext(lSearchRec) <> 0;'#13#10'    finally'#13#10'  '
  +'    SysUtils.FindClose(lSearchRec);  // Free resources on successful find'
  +#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure CloseMyFile'
  +'(FileName:String);'#13#10'var'#13#10'   tf: TextFile;'#13#10'begin'#13#10' '
  +' if FileExists(FileName) then'#13#10'  begin'#13#10'    AssignFile(tf,FileN'
  +'ame);'#13#10'   {$I-}'#13#10'    Reset(tf);'#13#10'   {$I+}'#13#10'   if IO'
  +'Result <> 0 then   // file is open'#13#10'   begin'#13#10'    try'#13#10'  '
  +'    CloseFile(tf);'#13#10'    finally'#13#10'    end;'#13#10'   end;'#13#10
  +' end;'#13#10'end;'#13#10#13#10'procedure WriteRTLIncFile(filepath,filename,'
  +'suffix:String);'#13#10'var'#13#10'  TheStream:TFileStream;'#13#10'  Incname'
  +',tempText,oneLine:string;'#13#10'  TxtLines:TStringList;'#13#10'  i,j:integ'
  +'er;'#13#10'  URI: TURI;'#13#10'begin'#13#10'  // Load up the required file'
  +#13#10'  TxtLines:=TStringList.Create;'#13#10'  TxtLines.LoadFromFile(filepa'
  +'th+filename+''.''+suffix);'#13#10#13#10'  // Set up a file stream for the t'
  +'arget .inc file'#13#10'  IncName:=''tempinc/''+filename+suffix+''.inc'';'#13
  ,#10'  try'#13#10'    TheStream:=TFileStream.Create(IncName,fmCreate or fmOpe'
  +'nRead or fmOpenWrite or fmShareDenyNone);'#13#10'  except'#13#10'    showme'
  +'ssage(''Unable to create file ''+IncName);'#13#10'  end;'#13#10#13#10#13#10
  +'  if suffix=''js'' then'#13#10'  begin'#13#10'    TxtLines.Text:=''''''''+S'
  +'ubstituteSpecials(TxtLines.Text)+'''''''';'#13#10'  end'#13#10'  else'#13#10
  +'  begin'#13#10'      // Substitute single-quotes in the text to be copied'
  +#13#10'      TxtLines.Text:=MyStringReplace(TxtLines.Text,'''''''',''&myapos'
  +';'',-1,-1);'#13#10'      for i:=0 to TxtLines.Count-1 do'#13#10'      begin'
  +#13#10'        TxtLines[i]:=''+ ''''''+TxtLines[i]+''\n'''' '' ;'#13#10'    '
  +'  end;'#13#10'  end;'#13#10#13#10#13#10'  // Wrap the text with pascal code'
  +' that will load it into a string variable.'#13#10'  if filename+suffix=''gp'
  +'ujs'' then'#13#10'  begin'#13#10'    // gpu.js'#13#10'    TxtLines.Insert(0'
  +',''pas.XGPUCanvas.''+filename+suffix+'' = '');'#13#10'  end'#13#10'  else i'
  +'f suffix=''js'' then'#13#10'    TxtLines.Insert(0,''pas.CompileUserCode.''+'
  +'filename+suffix+'' = '')'#13#10'  else'#13#10'    TxtLines.Insert(0,''pas.C'
  +'ompileUserCode.''+filename+suffix+'' = '''''''' '');'#13#10#13#10'  TxtLine'
  +'s.Insert(0,''asm'');'#13#10'  TxtLines.Add('';'');'#13#10'  TxtLines.Add('''
  +'end;'');'#13#10'  //... and will put back the original quote chars'#13#10' '
  +' if suffix=''js'' then'#13#10'  begin'#13#10'  end'#13#10'  else'#13#10'  b'
  +'egin'#13#10'    TxtLines.Add(filename+suffix+'':=MyStringReplace(''+filenam'
  +'e+suffix+'',''''&myapos;'''','''''''''''''''',-1,-1);'');'#13#10'  end;'#13
  +#10#13#10'  // Save the new .inc file'#13#10'  TxtLines.SaveToStream(TheStre'
  +'am);'#13#10#13#10'  TheStream.Free;'#13#10'  TxtLines.Free;'#13#10'end;'#13
  +#10#13#10'procedure WriteRTLIncFile(filepath,filename:String);  overload;'#13
  +#10'begin'#13#10'  WriteRTLIncFile(filepath,filename,''pas'');'#13#10'end;'
  +#13#10#13#10'procedure WriteRTLIncFiles;'#13#10'// Write files required by t'
  +'he pas2js compiler'#13#10'begin'#13#10#13#10'  // minimal required rtl set.'
  +'...'#13#10' // WriteRTLIncFile(''resources/rtl/'',''system'');'#13#10' // W'
  +'riteRTLIncFile(''resources/rtl/'',''rtlconsts'');'#13#10' // WriteRTLIncFil'
  +'e(''resources/rtl/'',''js'');'#13#10' // WriteRTLIncFile(''resources/rtl/'''
  +',''sysutils'');'#13#10' // WriteRTLIncFile(''resources/rtl/'',''types'');'
  +#13#10' // WriteRTLIncFile(''resources/rtl/'',''classes'');'#13#10#13#10'  /'
  +'/ common rtl set.....'#13#10'  WriteRTLIncFile(''resources/rtl/'',''classes'
  +''');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''contnrs'');'#13#10'  Wri'
  +'teRTLIncFile(''resources/rtl/'',''dateutils'');'#13#10'  WriteRTLIncFile('''
  +'resources/rtl/'',''js'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''mat'
  +'h'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''rtlconsts'');'#13#10'  '
  +'WriteRTLIncFile(''resources/rtl/'',''strutils'');'#13#10'  WriteRTLIncFile('
  +'''resources/rtl/'',''system'');'#13#10'  WriteRTLIncFile(''resources/rtl/'''
  +',''sysutils'');'#13#10'  WriteRTLIncFile(''resources/rtl/'',''types'');'#13
  +#10'  WriteRTLIncFile(''resources/rtl/'',''typinfo'');'#13#10#13#10'  //  Wr'
  +'iteRTLIncFile(''resources/rtl/'',''rtti'');'#13#10'  //  WriteRTLIncFile('''
  +'resources/rtl/'',''timer'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'
  +''',''nodejs'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''objpas'')'
  +';'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''libjquery'');'#13#10'  '
  +'//  WriteRTLIncFile(''resources/rtl/'',''hotreloadclient'');'#13#10'  //  W'
  +'riteRTLIncFile(''resources/rtl/'',''class2pas'');'#13#10'  //  WriteRTLIncF'
  +'ile(''resources/rtl/'',''browserconsole'');'#13#10'  //  WriteRTLIncFile('''
  +'resources/rtl/'',''web'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'','
  +'''webaudio'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''webbluetoo'
  +'th'');'#13#10'  //  WriteRTLIncFile(''resources/rtl/'',''webgl'');'#13#10' '
  +' //  WriteRTLIncFile(''resources/rtl/'',''webrouter'');'#13#10#13#10'  Writ'
  +'eRTLIncFile(''resources/project/'',''gpu'',''js'');'#13#10'end;'#13#10#13#10
  +#13#10'procedure LoadFPCConfig;'#13#10'var'#13#10'  TheStream : TFileStream;'
  +#13#10'  TheLines:TStringList;'#13#10'  ProgPath:String;'#13#10'begin'#13#10
  +'  // pick up the last-used config file XIDERunSettings.dta'#13#10'  ProgPat'
  +'h:=ExtractFilePath(Application.ExeName);'#13#10'  TheLines:=TStringList.Cre'
  +'ate;'#13#10'  if FileExists(ProgPath+''XIDERunSettings.dta'') then'#13#10' '
  +' begin'#13#10'    try'#13#10'      TheStream:=TFileStream.Create(ProgPath +'
  +'''XIDERunSettings.dta'',fmOpenRead or fmShareDenyNone);'#13#10'      TheLin'
  +'es.LoadFromStream(TheStream);'#13#10'      TheStream.Free;'#13#10'    excep'
  +'t'#13#10'      TheLines.AddStrings(ConfigFPCPath,true);'#13#10'    end;'#13
  +#10'    if TheLines.Count>0 then'#13#10'    begin'#13#10'      ConfigfpcPath'
  +':=TheLines[0];'#13#10'    end;'#13#10'  end;'#13#10'  FreeAndNil(TheLines);'
  ,#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10#13#10'function BuildEventhead'
  +'er(NameSpace,NodeName,EventType,RunMode,Phase:String):String;'#13#10'var'#13
  +#10'  procName:String;'#13#10'begin'#13#10'  procName:= ''procedure ''+NameS'
  +'pace+NodeName + ''Handle'' + EventType + Phase;'#13#10'  if RunMode<>''JSJS'
  +''' then'#13#10'  begin'#13#10'    result:=procName + ''(e:TEventStatus;node'
  +'ID: AnsiString; myValue: AnsiString); '';'#13#10'    if RunMode=''LazDll'' '
  +'then'#13#10'      result:=result + ''  stdcall; '';'#13#10'  end'#13#10'  e'
  +'lse'#13#10'  begin'#13#10'    result:=procName + ''(e:TEventStatus;nodeID,m'
  +'yValue:String); '';'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure Gather'
  +'EventHeaders(RunMode,NameSpace:String;StartNode:TDataNode;UnitCode:TStringL'
  +'ist;var n:integer);'#13#10'var'#13#10'    i,j:integer;'#13#10'    tmp,Dflt:'
  +'string;'#13#10'begin'#13#10'  if StartNode.NameSpace= NameSpace then'#13#10
  +'  begin'#13#10'    // user-created event code is held in the data nodes (no'
  +'de.myEventHandlers[i].TheCode)'#13#10'    if (StartNode.IsDynamic) or (Star'
  +'tNode=UIRootNode) then'#13#10'      for i:=0 to length(StartNode.myEventHan'
  +'dlers)-1 do'#13#10'      begin'#13#10'        // (exclude events for worker'
  +' threads...)'#13#10'        if (StartNode.NodeType<>''TXThreads'')'#13#10' '
  +'       or (FoundString(StartNode.myEventTypes[i],''Thread'')<>1) then'#13#10
  +'        begin'#13#10'          tmp:=StartNode.myEventHandlers[i].TheCode;'
  +#13#10'          dflt:=DfltEventCode;'#13#10'          if (trim(StartNode.my'
  +'EventHandlers[i].TheCode)<>'''')'#13#10'          and (tmp<>Dflt) then'#13
  +#10'          begin'#13#10'            n:=n+1;'#13#10'            tmp:=Build'
  +'EventHeader(NameSpace,StartNode.NodeName,StartNode.myEventTypes[i],RunMode,'
  +''''');'#13#10'            UnitCode.Add(tmp);'#13#10'          end;'#13#10' '
  +'       end;'#13#10'      end;'#13#10'  end;'#13#10#13#10'    for i:=0 to le'
  +'ngth(StartNode.ChildNodes)-1 do'#13#10'      GatherEventHeaders(RunMode,Nam'
  +'eSpace,StartNode.ChildNodes[i],UnitCode,n);'#13#10#13#10'end;'#13#10#13#10
  +'procedure GatherEventHeadersForWorkerThreads(RunMode:String;StartNode:TData'
  +'Node;CodeBlock:TStringList);'#13#10'var'#13#10'    i,j:integer;'#13#10'    '
  +'tmp,Dflt:string;'#13#10'begin'#13#10#13#10'  if (StartNode.IsDynamic)'#13#10
  +'  and (StartNode.NodeType=''TXThreads'')  then'#13#10'  begin'#13#10'    fo'
  +'r i:=0 to length(StartNode.myEventHandlers)-1 do'#13#10'    begin'#13#10'  '
  +'    if (FoundString(StartNode.myEventTypes[i],''Thread'')=1)'#13#10'      a'
  +'nd (FoundString(StartNode.myEventTypes[i],''ThreadVars'')<>1) then'#13#10' '
  +'     begin'#13#10'        tmp:=StartNode.myEventHandlers[i].TheCode;'#13#10
  +'        dflt:=DfltThreadEventCode(StartNode.NodeName);'#13#10'        if (t'
  +'rim(StartNode.myEventHandlers[i].TheCode)<>'''')'#13#10'        and (tmp<>D'
  +'flt) then'#13#10'        begin'#13#10'          tmp:=BuildEventHeader('''','
  +'StartNode.NodeName,StartNode.myEventTypes[i],RunMode,'''');  //!!!!namespac'
  +'e'#13#10'          CodeBlock.Add(tmp);'#13#10'        end;'#13#10'      end'
  +';'#13#10'    end;'#13#10'  end;'#13#10#13#10'  for i:=0 to length(StartNode'
  +'.ChildNodes)-1 do'#13#10'    GatherEventHeadersForWorkerThreads(RunMode,Sta'
  +'rtNode.ChildNodes[i],CodeBlock);'#13#10'end;'#13#10#13#10'procedure GatherV'
  +'arsForWorkerThreads1(RunMode:String;StartNode:TDataNode;CodeBlock:TStringLi'
  +'st);'#13#10'var'#13#10'    i,j:integer;'#13#10'    tmp,VarNames:string;'#13
  +#10'    VarNamesList:TStringList;'#13#10'begin'#13#10#13#10'  if (StartNode.'
  +'IsDynamic)'#13#10'  and (StartNode.NodeType=''TXThreads'')  then'#13#10'  b'
  +'egin'#13#10'    VarNames := StartNode.GetAttribute(''ThreadVarNums'',true).'
  +'AttribValue;'#13#10'    if VarNames<>'''' then'#13#10'    begin'#13#10'    '
  +'  CodeBlock.Add(''type TXVars''+StartNode.NodeName+'' = class(TObject)'');'
  +#13#10'      CodeBlock.Add(''private'');'#13#10'      VarNamesList:=TStringL'
  +'ist.Create;'#13#10'      VarNamesList.StrictDelimiter:=true;'#13#10'      V'
  +'arNamesList.Delimiter:='','';'#13#10'      VarNamesList.LineBreak:='','';'
  +#13#10'      VarNamesList.Text:=VarNames;'#13#10'      for i:=0 to VarNamesL'
  +'ist.Count-1 do'#13#10'      begin'#13#10'          CodeBlock.Add(''  f''+Va'
  +'rNamesList[i]+'':float;'');'#13#10'      end;'#13#10'      for i:=0 to VarN'
  +'amesList.Count-1 do'#13#10'      begin'#13#10'          CodeBlock.Add(''  p'
  +'rocedure set''+VarNamesList[i]+''(AValue:float);'');'#13#10'      end;'#13
  +#10'      CodeBlock.Add(''public'');'#13#10'      for i:=0 to VarNamesList.C'
  +'ount-1 do'#13#10'      begin'#13#10'          CodeBlock.Add(''  property '''
  +'+VarNamesList[i]+'':float read f''+VarNamesList[i]+'' write set''+VarNamesL'
  +'ist[i]+'';'');'#13#10'      end;'#13#10'      CodeBlock.Add(''end;'');'#13
  +#10'      CodeBlock.Add(''var XVars''+StartNode.NodeName+'':TXVars''+StartNo'
  +'de.NodeName+'';'');'#13#10#13#10'      VarNamesList.Free;'#13#10'    end;'
  ,#13#10'  end'#13#10'  else'#13#10'    for i:=0 to length(StartNode.ChildNode'
  +'s)-1 do'#13#10'      GatherVarsForWorkerThreads1(RunMode,StartNode.ChildNod'
  +'es[i],CodeBlock);'#13#10'end;'#13#10'procedure GatherVarsForWorkerThreads2('
  +'RunMode:String;StartNode:TDataNode;CodeBlock:TStringList);'#13#10'var'#13#10
  +'    i,j:integer;'#13#10'    tmp,VarNames:string;'#13#10'    VarNamesList:TS'
  +'tringList;'#13#10'begin'#13#10#13#10'  if (StartNode.IsDynamic)'#13#10'  an'
  +'d (StartNode.NodeType=''TXThreads'')  then'#13#10'  begin'#13#10'    VarNam'
  +'es := StartNode.GetAttribute(''ThreadVarNums'',true).AttribValue;'#13#10'  '
  +'  if VarNames<>'''' then'#13#10'    begin'#13#10'      VarNamesList:=TStrin'
  +'gList.Create;'#13#10'      VarNamesList.StrictDelimiter:=true;'#13#10'     '
  +' VarNamesList.Delimiter:='','';'#13#10'      VarNamesList.LineBreak:='','';'
  +#13#10'      VarNamesList.Text:=VarNames;'#13#10'      for i:=0 to VarNamesL'
  +'ist.Count-1 do'#13#10'      begin'#13#10'          CodeBlock.Add(''procedur'
  +'e TXVars''+StartNode.NodeName+''.set''+VarNamesList[i]+''(AValue:float);'')'
  +';'#13#10'          CodeBlock.Add(''begin'');'#13#10'          CodeBlock.Add'
  +'(''{$if defined ( windows)}'');'#13#10'          CodeBlock.Add(''  if GetCu'
  +'rrentThreadID = MainThreadID  then '');         //!!!! and browser code????'
  +#13#10'          CodeBlock.Add(''{$endif}'');'#13#10'          CodeBlock.Add'
  +'(''    f''+VarNamesList[i]+'' := AValue;'');                   //!!!! else.'
  +'.. raise error?'#13#10'          CodeBlock.Add(''end;'');'#13#10'      end;'
  +#13#10#13#10'      VarNamesList.Free;'#13#10'    end;'#13#10'  end'#13#10'  '
  +'else'#13#10'    for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'      '
  +'GatherVarsForWorkerThreads2(RunMode,StartNode.ChildNodes[i],CodeBlock);'#13
  +#10'end;'#13#10'procedure GatherVarsForWorkerThreads3(RunMode:String;StartNo'
  +'de:TDataNode;CodeBlock:TStringList);'#13#10'var'#13#10'    i,j:integer;'#13
  +#10'    tmp,VarNames:string;'#13#10'    VarNamesList:TStringList;'#13#10'beg'
  +'in'#13#10#13#10'  if (StartNode.IsDynamic)'#13#10'  and (StartNode.NodeType'
  +'=''TXThreads'')  then'#13#10'  begin'#13#10'    VarNames := StartNode.GetAt'
  +'tribute(''ThreadVarNums'',true).AttribValue;'#13#10'    if VarNames<>'''' t'
  +'hen'#13#10'    begin'#13#10'      CodeBlock.Add(''  XVars''+StartNode.NodeN'
  +'ame+'':=TXVars''+StartNode.NodeName+''.Create;'');'#13#10'    end;'#13#10' '
  +' end'#13#10'  else'#13#10'    for i:=0 to length(StartNode.ChildNodes)-1 do'
  +#13#10'      GatherVarsForWorkerThreads3(RunMode,StartNode.ChildNodes[i],Cod'
  +'eBlock);'#13#10'end;'#13#10#13#10'procedure GatherEventCode(RunMode,NameSpa'
  +'ce:String;Compiler:TObject;StartNode:TDataNode;UnitCode:TStringList);'#13#10
  +'var'#13#10'    i,j:integer;'#13#10'    hdr,tmp,Dflt,nm,et:string;'#13#10'  '
  +'  IncCode,InitCode:TStringList;'#13#10'begin'#13#10'  if StartNode.NameSpac'
  +'e=NameSpace then'#13#10'  begin'#13#10'    nm:=StartNode.NodeName;'#13#10' '
  +'   // user-created event code is held in the data nodes (node.myEventHandle'
  +'rs[i].TheCode)'#13#10'    IncCode:=TStringList.Create;'#13#10'    if (Start'
  +'Node.IsDynamic) or (StartNode=UIRootNode) then'#13#10'      for i:=0 to len'
  +'gth(StartNode.myEventHandlers)-1 do'#13#10'      // (exclude events for wor'
  +'ker threads...)'#13#10'      if (StartNode.NodeType<>''TXThreads'')'#13#10
  +'      or (FoundString(StartNode.myEventTypes[i],''Thread'')<>1) then'#13#10
  +'      begin'#13#10'        et:=StartNode.myEventTypes[i];'#13#10'        tm'
  +'p:=StartNode.myEventHandlers[i].TheCode;'#13#10'        Dflt:=DfltEventCode'
  +';'#13#10'        if (trim(tmp)<>'''')'#13#10'        and (tmp<>Dflt) then'
  +#13#10'        begin'#13#10'           // Insert a procedure containing the '
  +'code for the event initialisation'#13#10'           hdr:=BuildEventHeader(N'
  +'ameSpace,StartNode.NodeName,StartNode.myEventTypes[i],RunMode,''Init'');'#13
  +#10'           tmp:=trim(StartNode.myEventHandlers[i].InitCode);'#13#10'    '
  +'       InitCode:=StringSplit(tmp,LineEnding);'#13#10'           InitCode.In'
  +'sert(0,hdr);'#13#10'           if InitCode.Count=1 then'#13#10'            '
  +' InitCode.Add(''begin end;'');'#13#10'           WriteIncFile(Compiler,Name'
  +'space+StartNode.NodeName, StartNode.myEventTypes[i]+''__Init'',''tempinc/'''
  +', UnitCode, InitCode);'#13#10#13#10'           // Insert a procedure contai'
  +'ning the main code for the event'#13#10'           hdr:=BuildEventHeader(Na'
  +'meSpace,StartNode.NodeName,StartNode.myEventTypes[i],RunMode,''Main'');'#13
  +#10'           IncCode:=StringSplit(StartNode.myEventHandlers[i].TheCode,Lin'
  +'eEnding);'#13#10'           IncCode.Insert(0,hdr);'#13#10'           WriteI'
  +'ncFile(Compiler,NameSpace+StartNode.NodeName, StartNode.myEventTypes[i],''t'
  +'empinc/'', UnitCode, IncCode);'#13#10#13#10'           // Insert a control '
  +'procedure to run the init and main code for the event'#13#10'           tmp'
  +':=BuildEventHeader(NameSpace,StartNode.NodeName,StartNode.myEventTypes[i],R'
  ,'unMode,'''');'#13#10'           UnitCode.Add(tmp);'#13#10#13#10'           '
  +'UnitCode.Add(''begin'');'#13#10'           UnitCode.Add(''  AppMethods.mmiS'
  +'etEventsNameSpace(''''''+NameSpace+'''''');'');'#13#10'           UnitCode.'
  +'Add(''  if (e=nil) or (e.InitRunning=false) then'');'#13#10'           Unit'
  +'Code.Add(''  begin'');'#13#10'           UnitCode.Add(''    if (e=nil) then'
  +''');'#13#10'           UnitCode.Add(''    begin'');'#13#10'           UnitC'
  +'ode.Add(''      e:=TEventStatus.Create(''''''+StartNode.myEventTypes[i]+'''
  +''''',''''''+StartNode.NodeName+'''''');'');'#13#10'           UnitCode.Add('
  +'''      e.NameSpace:=''''''+NameSpace+'''''';'');'#13#10'           UnitCod'
  +'e.Add(''    end;'');'#13#10'            // If the event has initialisation '
  +'code, run this first...'#13#10'           UnitCode.Add(''    e.InitRunning:'
  +'=true;'');'#13#10'           UnitCode.Add(''    ''+NameSpace+StartNode.Node'
  +'Name + ''Handle'' + StartNode.myEventTypes[i] + ''Init(e,nodeID,myValue);'''
  +');'#13#10#13#10'           UnitCode.Add(''  end'');'#13#10'           UnitC'
  +'ode.Add(''  else'');'#13#10'           UnitCode.Add(''    e.InitRunning:=fa'
  +'lse;'');'#13#10#13#10'           // If the initialisation code has called a'
  +'ny async functions, these will have been logged in the'#13#10'           //'
  +' event status.  Do not continue with the main event code unless all of the '
  +'async functions'#13#10'           // have recorded completion.'#13#10'     '
  +'      UnitCode.Add(''  if e.EventHasWaitingAsyncProcs = true then'');'#13#10
  +'           UnitCode.Add(''    EXIT;'');'#13#10#13#10'           // run the '
  +'main event code'#13#10'           UnitCode.Add(''  ''+NameSpace+StartNode.N'
  +'odeName + ''Handle'' + StartNode.myEventTypes[i] + ''Main(e,nodeID,myValue)'
  +';'');'#13#10#13#10'           UnitCode.Add(''end;'');'#13#10#13#10'        '
  +'   {$ifndef JScript}'#13#10'           if RunMode=''LazDll'' then'#13#10'  '
  +'           ExportsList.Add(''exports ''+NameSpace+StartNode.NodeName + ''Ha'
  +'ndle'' + StartNode.myEventTypes[i]+'';'');'#13#10'           {$endif}'#13#10
  +#13#10'        end;'#13#10'      end;'#13#10'    FreeAndNil(IncCode);'#13#10
  +#13#10'  end;'#13#10#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'
  +#13#10'      GatherEventCode(RunMode,NameSpace,Compiler,StartNode.ChildNodes'
  +'[i],UnitCode);'#13#10#13#10'end;'#13#10#13#10'procedure GatherEventCodeForW'
  +'orkerThreads(RunMode,NameSpace:String;Compiler:TObject;StartNode:TDataNode;'
  +'CodeBlock:TStringList);'#13#10'var'#13#10'    i,j:integer;'#13#10'    hdr,t'
  +'mp,Dflt,nm,et:string;'#13#10'    IncCode,InitCode:TStringList;'#13#10'begin'
  +#13#10'  nm:=StartNode.NodeName;'#13#10'  // user-created event code is held'
  +' in the data nodes (node.myEventHandlers[i].TheCode)'#13#10'  IncCode:=TStr'
  +'ingList.Create;'#13#10'  if (StartNode.NodeType=''TXThreads'')'#13#10'  and'
  +' (StartNode.IsDynamic) then'#13#10'    for i:=0 to length(StartNode.myEvent'
  +'Handlers)-1 do'#13#10'    if FoundString(StartNode.myEventTypes[i],''Thread'
  +''')=1 then          // just the Thread<n> events'#13#10'    begin'#13#10'  '
  +'    et:=StartNode.myEventTypes[i];'#13#10'      tmp:=StartNode.myEventHandl'
  +'ers[i].TheCode;'#13#10'      Dflt:=DfltThreadEventCode(StartNode.NodeName);'
  +#13#10'      if (trim(tmp)<>'''')'#13#10'      and (tmp<>Dflt) then'#13#10' '
  +'     begin'#13#10#13#10'         // Insert a procedure containing the main '
  +'code for the event'#13#10'         hdr:=BuildEventHeader(NameSpace,StartNod'
  +'e.NodeName,StartNode.myEventTypes[i],RunMode,'''');'#13#10'         IncCode'
  +':=StringSplit(StartNode.myEventHandlers[i].TheCode,LineEnding);'#13#10'    '
  +'     IncCode.Insert(0,hdr);'#13#10'         WriteIncFile(Compiler,StartNode'
  +'.NodeName, StartNode.myEventTypes[i],''tempinc/'', CodeBlock, IncCode);'#13
  +#10#13#10'         {$ifndef JScript}'#13#10'         if RunMode=''LazDll'' t'
  +'hen'#13#10'           CodeBlock.Add(''exports ''+NameSpace+StartNode.NodeNa'
  +'me + ''Handle'' + StartNode.myEventTypes[i]+'';'');'#13#10'         {$endif'
  +'}'#13#10#13#10'      end;'#13#10'    end;'#13#10'  FreeAndNil(IncCode);'#13
  +#10#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'    GatherE'
  +'ventCodeForWorkerThreads(RunMode,NameSpace,Compiler,StartNode.ChildNodes[i]'
  +',CodeBlock);'#13#10'end;'#13#10#13#10#13#10'function BuildFuncHeaderWithPar'
  +'ams(FuncNode:TDataNode;num:integer):String;'#13#10'var'#13#10'   k:integer;'
  +#13#10'   tmp:string;'#13#10'   FuncInputs:TCodeInputs;'#13#10'begin'#13#10
  +'  tmp:=FuncNode.GetAttribute(''Inputs'',true).AttribValue;'#13#10'  FuncInp'
  +'uts:=StringToCodeInputs(tmp);'#13#10'  if length(FuncInputs)>0 then'#13#10
  +'  begin'#13#10'    tmp:=''function ''+FuncNode.NameSpace+FuncNode.NodeName+'
  +'''('';'#13#10'    for k:=0 to length(FuncInputs)-1 do'#13#10'    begin'#13
  +#10'      if k>0 then tmp:=tmp+'';'';'#13#10'      tmp:=tmp+FuncInputs[k].In'
  +'putSynonym+'':String'';'#13#10'    end;'#13#10'    tmp:=tmp+''):String; '';'
  ,#13#10'    if (num=1) then'#13#10'      tmp:=tmp+'' overload;'';'#13#10'    '
  +'result:=tmp;'#13#10'  end'#13#10'  else'#13#10'    result:='''';'#13#10'end'
  +';'#13#10'function BuildFuncHeaderNoParams(FuncNode:TDataNode;num:integer):S'
  +'tring;'#13#10'var'#13#10'   tmp:string;'#13#10'   FuncInputs:TCodeInputs;'
  +#13#10'begin'#13#10'  tmp:=FuncNode.GetAttribute(''Inputs'',true).AttribValu'
  +'e;'#13#10'  FuncInputs:=StringToCodeInputs(tmp);'#13#10#13#10'  tmp:='''';'
  +#13#10'  tmp:=''function ''+FuncNode.NameSpace+FuncNode.NodeName+'':String;'
  +''';'#13#10'  if (num=1)'#13#10'  and (length(FuncInputs)>0) then'#13#10'   '
  +' tmp:=tmp+'' overload;'';'#13#10'  result:=tmp;'#13#10'end;'#13#10#13#10'pr'
  +'ocedure BuildThreadEventsUnit(Compiler:TObject;RunMode:String);'#13#10'var'
  +#13#10'  UnitCode:TStringList;'#13#10'    procedure AddUnitCodeLine(str:Stri'
  +'ng);'#13#10'    begin'#13#10'      UnitCode.add(str);'#13#10'    end;'#13#10
  +'begin'#13#10'  UnitCode:=TStringList.Create;'#13#10'  // Note: this unit do'
  +'es not contain the user-interface functions provided for main-thread events'
  +#13#10'  // (units InterfaceTypes, or dllInterface).'#13#10#13#10'  AddUnitC'
  +'odeLine(''unit ''+DllName+''Threads;'');'#13#10'  AddUnitCodeLine(''{$ifnde'
  +'f JScript}'');'#13#10'  AddUnitCodeLine(''{$mode objfpc}{$H+}'');'#13#10'  '
  +'AddUnitCodeLine(''{$endif}'');'#13#10'  AddUnitCodeLine(''interface'');'#13
  +#10'  AddUnitCodeLine(''uses Classes, SysUtils, Math, contnrs, dateutils,'')'
  +';'#13#10'  AddUnitCodeLine(''{$if defined ( windows)}'');'#13#10'  AddUnitC'
  +'odeLine(''  windows, '');'#13#10'  AddUnitCodeLine(''{$endif}'');'#13#10'  '
  +'AddUnitCodeLine(''  rtlconsts, strutils, types, typinfo, EventsInterface;'''
  +');'#13#10#13#10'  AddUnitCodeLine('''');'#13#10'  AddUnitCodeLine(''type An'
  +'siString=String;'');'#13#10#13#10'  AddUnitCodeLine('''');'#13#10'  GatherE'
  +'ventHeadersForWorkerThreads(RunMode,SystemNodeTree,UnitCode);'#13#10#13#10
  +'  AddUnitCodeLine('''');'#13#10'  GatherVarsForWorkerThreads1(RunMode,Syste'
  +'mNodeTree,UnitCode);'#13#10#13#10'  AddUnitCodeLine('''');'#13#10'  AddUnit'
  +'CodeLine(''implementation'' );'#13#10'  AddUnitCodeLine('''');'#13#10#13#10
  +'  GatherVarsForWorkerThreads2(RunMode,SystemNodeTree,UnitCode);'#13#10'  Ga'
  +'therEventCodeForWorkerThreads(RunMode,'''',Compiler,SystemNodeTree,UnitCode'
  +');'#13#10#13#10'  AddUnitCodeLine(''    '' );'#13#10'  AddUnitCodeLine(''be'
  +'gin'');'#13#10'  GatherVarsForWorkerThreads3(RunMode,SystemNodeTree,UnitCod'
  +'e);'#13#10'  AddUnitCodeLine(''end.'');'#13#10#13#10'  {$ifndef JScript}'#13
  +#10'  // save the generated pas file'#13#10'  SysUtils.DeleteFile(''tempinc/'
  +'''+DllName+''Threads''+''.pas'');'#13#10'  UnitCode.SaveToFile(''tempinc/'''
  +'+DllName+''Threads''+''.pas'');'#13#10'  {$else}'#13#10'  TPas2JSWebCompile'
  +'r(Compiler).WebFS.SetFileContent(DllName+''Threads''+''.pas'',UnitCode.Text'
  +');'#13#10'  {$endif}'#13#10#13#10'  // add this unit to the uses list in th'
  +'e main module'#13#10'  PascalCode.Add('',''+DllName+''Threads'');'#13#10#13
  +#10'  FreeAndNil(UnitCode);'#13#10'end;'#13#10#13#10'function GatherUserUnit'
  +'s(RunMode:String; Compiler:TObject):String;'#13#10'var'#13#10'    i,j,k:int'
  +'eger;'#13#10'    tmp,FirstUnitName,nm:string;'#13#10'    lines, FuncCode:TS'
  +'tringList;'#13#10'    UnitNode, FuncNode:TdataNode;'#13#10'    UnitCode:TSt'
  +'ringList;'#13#10'    FuncInputs:TCodeInputs;'#13#10'    procedure AddUnitCo'
  +'deLine(str:String);'#13#10'    begin'#13#10'      UnitCode.add(str);'#13#10
  +'    end;'#13#10#13#10'begin'#13#10#13#10'  // user-created units are held a'
  +'s data nodes (attribute ''Code'')'#13#10'  // create a pas file on disk for'
  +' each unit, and insert the unit name for the dll ''uses'' clause'#13#10'  U'
  +'nitCode:=TStringList.Create;'#13#10'  Lines:=TStringList.Create;'#13#10#13
  +#10'  for i:=0 to length(CodeRootNode.ChildNodes)-1 do'#13#10'  begin'#13#10
  +'        if CodeRootNode.ChildNodes[i].NodeType=''RawUnit'' then'#13#10'    '
  +'    begin'#13#10'           UnitNode:=CodeRootNode.ChildNodes[i];'#13#10'  '
  +'         if i=0 then FirstUnitName:=UnitNode.NodeName;'#13#10'           //'
  +' Raw Unit code is all in attribute attribute : Code'#13#10'           UnitC'
  +'ode.Clear;'#13#10'           nm:=UnitNode.NodeName;'#13#10#13#10'          '
  +' // add user-written unit code block'#13#10'           tmp:=UnitNode.GetAtt'
  +'ribute(''Code'',true).AttribValue;'#13#10'           Lines:=StringSplit(tmp'
  +',LineEnding);'#13#10'           for j:=0 to Lines.Count-1 do'#13#10'       '
  +'      AddUnitCodeLine(Lines[j]);'#13#10#13#10'           {$ifndef JScript}'
  +#13#10'           // save the generated pas file'#13#10'           SysUtils.'
  +'DeleteFile(''tempinc/''+UnitNode.NodeName+''.pas'');'#13#10'           Unit'
  +'Code.SaveToFile(''tempinc/''+UnitNode.NodeName+''.pas'');'#13#10'          '
  +' {$else}'#13#10'           TPas2JSWebCompiler(Compiler).WebFS.SetFileConten'
  +'t(UnitNode.NodeName+''.pas'',UnitCode.Text);'#13#10'           {$endif}'#13
  ,#10#13#10'           // add this unit to the uses list in the main module'#13
  +#10'           PascalCode.Add('',''+UnitNode.NodeName);'#13#10'        end;'
  +#13#10'  end;'#13#10#13#10'  // Build a separate unit to hold ''event'' code'
  +' for worker threads (within TXThreads components)'#13#10'  // This code is '
  +'in a separate unit from the main event code so that the scope of worker thr'
  +'eads'#13#10'  // can be limited (they are self-contained, with no access to'
  +' data/functions in the main thread).'#13#10'  BuildThreadEventsUnit(Compile'
  +'r,RunMode);'#13#10#13#10'  FreeAndNil(UnitCode);'#13#10#13#10'  result:=Fir'
  +'stUnitName;'#13#10#13#10'end;'#13#10#13#10'procedure GatherUserFuncs(RunMod'
  +'e,NameSpace:String; Compiler:TObject; StartNode:TDataNode;UnitCode:TStringL'
  +'ist;var n:integer);'#13#10'var'#13#10'    i,j,k:integer;'#13#10'    tmp,nm:'
  +'string;'#13#10'    lines, FuncCode:TStringList;'#13#10'    UnitNode, FuncNo'
  +'de:TdataNode;'#13#10'    FuncInputs:TCodeInputs;'#13#10#13#10'begin'#13#10
  +#13#10'  // user-created units are held as data nodes (attribute ''Code'')'
  +#13#10'  // find the user-defined functions, and add them to the main unit'
  +#13#10'  // in the implementation section (UnitCode)'#13#10#13#10'  if (Star'
  +'tNode=CodeRootNode) then'#13#10'  begin'#13#10'    Lines:=TStringList.Creat'
  +'e;'#13#10'    FuncCode:=TStringList.Create;'#13#10#13#10'    UnitNode:=Star'
  +'tNode;'#13#10#13#10'    // Insert declared functions'#13#10'    for j:=0 to'
  +' length(UnitNode.ChildNodes)-1 do'#13#10'      if (UnitNode.ChildNodes[j].N'
  +'odeType=''Function'')'#13#10'      and (UnitNode.ChildNodes[j].NameSpace=Na'
  +'meSpace) then'#13#10'      begin'#13#10'        n:=n+1;'#13#10'        Func'
  +'Node:=UnitNode.ChildNodes[j];'#13#10'        tmp:=FuncNode.GetAttribute(''I'
  +'nputs'',true).AttribValue;'#13#10'        FuncInputs:=StringToCodeInputs(tm'
  +'p);'#13#10'        if length(FuncInputs)>0 then'#13#10'          tmp:=Build'
  +'FuncHeaderWithParams(FuncNode,2)'#13#10'        else'#13#10'          tmp:='
  +'BuildFuncHeaderNoParams(FuncNode,2);'#13#10#13#10'        UnitCode.Add(tmp)'
  +';'#13#10#13#10'        FuncCode.Clear;'#13#10'        tmp:=FuncNode.GetAttr'
  +'ibute(''Code'',true).AttribValue;'#13#10'        Lines:=StringSplit(tmp,Lin'
  +'eEnding);'#13#10'        for k:=0 to Lines.Count-1 do'#13#10'          Func'
  +'Code.Add(Lines[k]);'#13#10#13#10'        // each function is held in its ow'
  +'n inc file so that we can display the relevant code section'#13#10'        '
  +'// when there are compiler errors'#13#10'        WriteIncFile(Compiler,Func'
  +'Node.NameSpace+FuncNode.NodeName, '''',''tempinc/'', UnitCode, FuncCode);'
  +#13#10#13#10'        // add the overloaded function to fetch values of all d'
  +'eclared inputs'#13#10'        if length(FuncInputs)>0 then'#13#10'        b'
  +'egin'#13#10'          tmp:=BuildFuncHeaderNoParams(FuncNode,2);'#13#10'    '
  +'      Lines:=TStringList.Create;'#13#10'          Lines.Add(tmp);'#13#10'  '
  +'        Lines.Add(''begin'');'#13#10'               tmp:=''result:=''+FuncN'
  +'ode.NameSpace+FuncNode.NodeName+''('';'#13#10'          for k:=0 to length('
  +'FuncInputs)-1 do'#13#10'          begin'#13#10'            if k>0 then tmp:'
  +'=tmp+'','';'#13#10'            // either fetch an attribute value, or execu'
  +'te a function'#13#10'            if FuncInputs[k].InputAttribName<>'''' the'
  +'n'#13#10'              tmp:=tmp+''GetPropertyValue(''''''+FuncInputs[k].Inp'
  +'utNodeName+'''''',''''''+FuncInputs[k].InputAttribName+'''''')'''#13#10'   '
  +'         else'#13#10'              tmp:=tmp+FuncInputs[k].InputNodeName;'#13
  +#10'          end;'#13#10'          tmp:=tmp+'');'';'#13#10'          Lines.'
  +'Add(tmp);'#13#10'          Lines.Add(''end;'');'#13#10'          for k:=0 t'
  +'o Lines.Count-1 do'#13#10'            UnitCode.Add(Lines[k]);'#13#10'      '
  +'  end;'#13#10'      end;'#13#10'    FreeAndNil(FuncCode);'#13#10'    FreeAn'
  +'dNil(Lines);'#13#10'  end;'#13#10#13#10#13#10'  if (StartNode=CodeRootNode)'
  +' then'#13#10'    for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'     '
  +' GatherUserFuncs(RunMode,NameSpace,Compiler,StartNode.ChildNodes[i],UnitCod'
  +'e,n);'#13#10#13#10'end;'#13#10#13#10'procedure BuildNamespaceUnit(RunMode,N'
  +'ameSpace:String; Compiler:TObject);'#13#10'var'#13#10'    UnitCode:TStringL'
  +'ist;'#13#10'    n:integer;'#13#10'    procedure AddUnitCodeLine(str:String)'
  +';'#13#10'    begin'#13#10'      UnitCode.add(str);'#13#10'    end;'#13#10#13
  +#10'begin'#13#10#13#10'  // create a pas file on disk for each unit, and ins'
  +'ert the unit name for the dll ''uses'' clause'#13#10'  {$ifdef JScript}'#13
  +#10'  NamespaceUnits.Add(NameSpace);'#13#10'  {$endif}'#13#10#13#10'  n:=0;'
  +#13#10'  UnitCode:=TStringList.Create;'#13#10#13#10'           // Unit code '
  +'is built from separate attributes : Code, Init.'#13#10'           UnitCode.'
  +'Clear;'#13#10'           AddUnitCodeLine(''unit ''+NameSpace+'';'');'#13#10
  +'           AddUnitCodeLine(''{$ifndef JScript}'');'#13#10'           AddUni'
  ,'tCodeLine(''{$mode objfpc}{$H+}'');'#13#10'           AddUnitCodeLine(''{$e'
  +'ndif}'');'#13#10'           AddUnitCodeLine(''interface'');'#13#10'        '
  +'   AddUnitCodeLine(''uses Classes, SysUtils, Math, contnrs, dateutils,'');'
  +#13#10'           AddUnitCodeLine(''  rtlconsts, strutils, types, typinfo, E'
  +'ventsInterface,'');'#13#10'           if RunMode=''LazDll'' then'#13#10'   '
  +'          AddUnitCodeLine(''  InterfaceTypesDll;'')'#13#10'           else'
  +#13#10'           begin'#13#10'             AddUnitCodeLine(''  InterfaceTyp'
  +'es;'');'#13#10'           end;'#13#10#13#10'           GatherEventHeaders(R'
  +'unMode,NameSpace,SystemNodeTree,UnitCode,n);'#13#10#13#10'           AddUni'
  +'tCodeLine(''implementation'');'#13#10#13#10'           GatherUserFuncs(RunM'
  +'ode,NameSpace,Compiler,CodeRootNode,UnitCode,n);'#13#10#13#10'           Ga'
  +'therEventCode(RunMode,NameSpace,Compiler,SystemNodeTree,UnitCode);'#13#10#13
  +#10'           AddUnitCodeLine(''    '' );'#13#10'           AddUnitCodeLine'
  +'(''begin'');'#13#10'           AddUnitCodeLine(''end.'');'#13#10#13#10'    '
  +'       if n>0 then'#13#10'           begin'#13#10'             {$ifndef JSc'
  +'ript}'#13#10'             // save the generated pas file'#13#10'           '
  +'  //!!!! namespaces....255 char limit on file names !!!!!!!!!'#13#10'      '
  +'       SysUtils.DeleteFile(''tempinc/''+NameSpace+''.pas'');'#13#10'       '
  +'      UnitCode.SaveToFile(''tempinc/''+NameSpace+''.pas'');'#13#10'        '
  +'     {$else}'#13#10'             TPas2JSWebCompiler(Compiler).WebFS.SetFile'
  +'Content(NameSpace+''.pas'',UnitCode.Text);'#13#10'             {$endif}'#13
  +#10#13#10'             // add this unit to the uses list in the main module'
  +#13#10'             PascalCode.Add('',''+NameSpace);'#13#10#13#10'          '
  +' end;'#13#10#13#10'  // Build a separate unit to hold ''event'' code for wo'
  +'rker threads (within TXThreads components)'#13#10'  // This code is in a se'
  +'parate unit from the main event code so that the scope of worker threads'#13
  +#10'  // can be limited (they are self-contained, with no access to data/fun'
  +'ctions in the main thread).'#13#10'  //BuildThreadEventsUnit(Compiler,RunMo'
  +'de);'#13#10#13#10'  FreeAndNil(UnitCode);'#13#10#13#10'end;'#13#10#13#10'fu'
  +'nction ConstructNamespaceUnits(RunMode,NameSpace:String; Compiler:TObject; '
  +'StartNode:TDataNode):String;'#13#10'var'#13#10'    i:integer;'#13#10'    Co'
  +'mpositeNameSpace:String;'#13#10'begin'#13#10'  // Where a system node is an'
  +' encapsulated sub-system, the child nodes will have a non-blank NamesSpace '
  +'value.'#13#10'  // For all ''namespace'' nodes, construct a separate unit t'
  +'o contain user functions and event code local to the namespace group.'#13#10
  +'  CompositeNameSpace:=NameSpace;'#13#10'  if StartNode.NodeType=''TXComposi'
  +'te'' then'#13#10'  begin'#13#10'    CompositeNameSpace:=CompositeNameSpace+'
  +'StartNode.NodeName;'#13#10'    if length(StartNode.ChildNodes)>0 then'#13#10
  +'      BuildNamespaceUnit(RunMode,CompositeNameSpace,Compiler);'#13#10'  end'
  +';'#13#10#13#10'  // Walk the system tree looking for namespace components'
  +#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'    if (StartN'
  +'ode.ChildNodes[i].NodeClass=''UI'')'#13#10'    or (StartNode.ChildNodes[i].'
  +'NodeClass=''Root'') then'#13#10'      ConstructNamespaceUnits(RunMode,Compo'
  +'siteNameSpace,Compiler,StartNode.ChildNodes[i]);'#13#10#13#10'end;'#13#10#13
  +#10'{$ifndef JScript}'#13#10#13#10'procedure WriteProjectIncFiles;'#13#10'be'
  +'gin'#13#10'  WriteRTLIncFile(''resources/xcomponents/'',''eventsinterface'''
  +');'#13#10'  WriteRTLIncFile(''resources/project/'',''interfacetypes'');'#13
  +#10#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'function initialiseCodeToB'
  +'eCompiled(RunMode:String; Compiler:TObject):String;    //RunMode is LazJS, '
  +'LazDll or JSJS'#13#10'var'#13#10'    tmp,FirstUnitName:String;'#13#10'    i'
  +',n:integer;'#13#10'begin'#13#10' // delete old .inc and .pas files'#13#10' '
  +' {$ifndef JScript}'#13#10' DeleteDynamicIncFiles;'#13#10'  WriteRTLIncFiles'
  +';'#13#10'  WriteProjectIncFiles;'#13#10'  {$endif}'#13#10' PascalCode.Clear'
  +';'#13#10' ExportsList.Clear;'#13#10' n:=0;'#13#10#13#10' if (RunMode = ''La'
  +'zJS'') or (RunMode = ''JSJS'') then'#13#10' begin'#13#10'   // Build pascal'
  +' source code for events unit - to be compiled by the Pas2JS compiler'#13#10
  +'   PascalCode.Add(''unit ''+DllName+'';'' );'#13#10'   PascalCode.Add(''int'
  +'erface'' );'#13#10'   PascalCode.Add(''    '' );'#13#10'   PascalCode.Add('
  +'''uses'');'#13#10'   PascalCode.Add(''  Classes, SysUtils, Math, EventsInte'
  +'rface, InterfaceTypes, '');  //!!!! make uses clause editable ??'#13#10'   '
  +'PascalCode.Add(''  contnrs, dateutils, rtlconsts, {rtti,} strutils, types, '
  +'typinfo'');'#13#10#13#10'   FirstUnitName:=GatherUserUnits(RunMode,Compiler'
  +');'#13#10'   ConstructNamespaceUnits(RunMode,'''',Compiler,UIRootItem);'#13
  +#10'   PascalCode.Add('';'');'#13#10'   PascalCode.Add('''');'#13#10#13#10' '
  ,'  GatherEventHeaders(RunMode,'''',SystemNodeTree,PascalCode,n);'#13#10#13#10
  +'   PascalCode.Add('''');'#13#10'   PascalCode.Add(''implementation'' );'#13
  +#10'   PascalCode.Add('''');'#13#10'   GatherUserFuncs(RunMode,'''',Compiler'
  +',CodeRootNode,PascalCode,n);'#13#10#13#10'   GatherEventCode(RunMode,'''',C'
  +'ompiler,SystemNodeTree,PascalCode);'#13#10#13#10'   PascalCode.Add(''    '''
  +' );'#13#10'   PascalCode.Add(''begin'');'#13#10'   PascalCode.Add(''end.'')'
  +';'#13#10' end'#13#10' else if RunMode = ''LazDll'' then'#13#10' begin'#13#10
  +'   // Build source code for events DLL - to be compiled by the Free Pascal '
  +'compiler'#13#10'   PascalCode.Add(''library ''+DllName+'';'' );'#13#10'   P'
  +'ascalCode.Add(''{$mode objfpc}{$H+}{$R+}'');'#13#10'   PascalCode.Add( ''  '
  +'  '' );'#13#10'   PascalCode.Add(''uses'');'#13#10'   //windows, ??'#13#10
  +'   {$ifdef linux}'#13#10'   PascalCode.Add(''  cthreads,'');'#13#10'   {$en'
  +'dif}'#13#10'   PascalCode.Add(''  Classes, SysUtils, Math, {initc,} EventsI'
  +'nterface, InterfaceTypesDll '');'#13#10'   FirstUnitName:=GatherUserUnits(R'
  +'unMode,nil);'#13#10'   ConstructNamespaceUnits(RunMode,'''',nil,SystemNodeT'
  +'ree);'#13#10'   PascalCode.Add('';'');'#13#10'   PascalCode.Add('''');'#13
  +#10'   PascalCode.Add('''');'#13#10#13#10'   GatherUserFuncs(RunMode,'''',ni'
  +'l,CodeRootNode,PascalCode,n);'#13#10#13#10'   GatherEventCode(RunMode,'''','
  +'nil,SystemNodeTree,PascalCode);'#13#10#13#10'   PascalCode.Add( ''    '' );'
  +#13#10'   PascalCode.Add( ''procedure SetDllContext(mmi:IMyMethodInterface);'
  +' stdcall;'' );'#13#10'   PascalCode.Add( ''begin'' );'#13#10'   PascalCode.'
  +'Add( ''  InterfaceTypesDll.SetDllContext(mmi);  '' );'#13#10'   PascalCode.'
  +'Add( ''end;'' );'#13#10'   PascalCode.Add( ''exports SetDllContext;'' );'#13
  +#10'   PascalCode.Add( ''    '' );'#13#10'   for i:=0 to ExportsList.Count-1'
  +' do'#13#10'     PascalCode.Add(ExportsList[i]);'#13#10'   PascalCode.Add( '
  +'''    '' );'#13#10'    PascalCode.Add( ''begin'');'#13#10'    PascalCode.Ad'
  +'d( ''  '' );'#13#10'    PascalCode.Add( ''end.'');'#13#10' end;'#13#10' res'
  +'ult:=FirstUnitName;'#13#10'end;'#13#10#13#10'procedure GatherSourcedAttribu'
  +'tes(StartNode:TDataNode);'#13#10'var'#13#10'  i:integer;'#13#10'  Composite'
  +'Node:TDataNode;'#13#10'  //TCodeInputRec'#13#10'begin'#13#10'  if StartNode'
  +'.IsDynamic then'#13#10'  begin'#13#10'    for i:=0 to length(StartNode.Node'
  +'Attributes)-1 do'#13#10'    begin'#13#10'      if StartNode.NodeAttributes['
  +'i].AttribSource.InputNodeName<>'''' then'#13#10'      begin'#13#10'        '
  +'setlength(SourcedAttribs,length(SourcedAttribs)+1);'#13#10'        SourcedA'
  +'ttribs[length(SourcedAttribs)-1].TheAttribute:=StartNode.NodeAttributes[i];'
  +#13#10'        SourcedAttribs[length(SourcedAttribs)-1].TheNode:=StartNode;'
  +#13#10'        SourcedAttribs[length(SourcedAttribs)-1].InProgress:=false;'
  +#13#10'        SourcedAttribs[length(SourcedAttribs)-1].SourceNode:=FindData'
  +'NodeById(SystemNodeTree,StartNode.NodeAttributes[i].AttribSource.InputNodeN'
  +'ame,'#13#10'                                                               '
  +'               StartNode.NameSpace,true);'#13#10'      end;'#13#10'    end;'
  +#13#10'    // if this node is a TXCompositeIntf (composite interface element'
  +') then each of its non-default attributes'#13#10'    // will need to be set'
  +' up with values sourced from the element container (type TXComposite).'#13
  +#10'    if StartNode.NodeType=''TXCompositeIntf'' then'#13#10'    begin'#13
  +#10'      CompositeNode:=FindCompositeContainer(StartNode);'#13#10'      if '
  +'CompositeNode<>nil then'#13#10'      for i:=0 to length(StartNode.NodeAttri'
  +'butes)-1 do'#13#10'        if (not IsADefaultAttrib(''TXCompositeIntf'',Sta'
  +'rtNode.NodeAttributes[i].AttribName)) then'#13#10'        begin'#13#10'    '
  +'      setlength(SourcedAttribs,length(SourcedAttribs)+1);'#13#10'          '
  +'SourcedAttribs[length(SourcedAttribs)-1].TheAttribute:=StartNode.NodeAttrib'
  +'utes[i];'#13#10'          SourcedAttribs[length(SourcedAttribs)-1].TheNode:'
  +'=StartNode;'#13#10'          SourcedAttribs[length(SourcedAttribs)-1].InPro'
  +'gress:=false;'#13#10'          SourcedAttribs[length(SourcedAttribs)-1].Sou'
  +'rceNode:=FindCompositeContainer(StartNode);'#13#10'          SourcedAttribs'
  +'[length(SourcedAttribs)-1].TheAttribute.AttribSource.InputAttribName:=Start'
  +'Node.NodeAttributes[i].AttribName;'#13#10'          SourcedAttribs[length(S'
  +'ourcedAttribs)-1].TheAttribute.AttribSource.InputNodeName:=CompositeNode.No'
  +'deName;'#13#10'        end;'#13#10'    end;'#13#10'    // if this node is a'
  +' TXComposite (composite element) then each of its non-default attributes'#13
  +#10'    // will need to be set up with values sourced from an interface elem'
  +'ent internal to the composite (type TXCompositeIntf).'#13#10'    if StartNo'
  +'de.NodeType=''TXComposite'' then'#13#10'    begin'#13#10'      for i:=0 to '
  +'length(StartNode.NodeAttributes)-1 do'#13#10'      begin'#13#10'        if '
  ,'(not IsADefaultAttrib(''TXComposite'',StartNode.NodeAttributes[i].AttribNam'
  +'e))'#13#10'        and (StartNode.NodeAttributes[i].AttribSource.InputAttri'
  +'bName='''') then    // don''t do this if there is already an explicit sourc'
  +'e'#13#10'        begin'#13#10'          CompositeNode:=FindInterfaceNode(St'
  +'artNode,StartNode.NodeName,StartNode.NodeAttributes[i].AttribName);'#13#10
  +'          if CompositeNode<>nil then'#13#10'          begin'#13#10'        '
  +'    setlength(SourcedAttribs,length(SourcedAttribs)+1);'#13#10'            '
  +'SourcedAttribs[length(SourcedAttribs)-1].TheAttribute:=StartNode.NodeAttrib'
  +'utes[i];'#13#10'            SourcedAttribs[length(SourcedAttribs)-1].TheNod'
  +'e:=StartNode;'#13#10'            SourcedAttribs[length(SourcedAttribs)-1].I'
  +'nProgress:=false;'#13#10'            SourcedAttribs[length(SourcedAttribs)-'
  +'1].SourceNode:=FindInterfaceNode(StartNode,StartNode.NodeName,StartNode.Nod'
  +'eAttributes[i].AttribName);'#13#10'            SourcedAttribs[length(Source'
  +'dAttribs)-1].TheAttribute.AttribSource.InputAttribName:=StartNode.NodeAttri'
  +'butes[i].AttribName;'#13#10'            SourcedAttribs[length(SourcedAttrib'
  +'s)-1].TheAttribute.AttribSource.InputNodeName:=CompositeNode.NodeName;'#13
  +#10'          end;'#13#10'        end;'#13#10'      end;'#13#10'    end;'#13
  +#10'  end;'#13#10'  for i:=0 to length(StartNode.ChildNodes)-1 do'#13#10'  b'
  +'egin'#13#10'    GatherSourcedAttributes(StartNode.ChildNodes[i]);'#13#10'  '
  +'end;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'function DefaultFPCC'
  +'onfig:String;'#13#10'var'#13#10'  cfg:String;'#13#10'begin'#13#10#13#10'  /'
  +'/cfg.Add(''resources/xcomponents'');       // Location of the units of the '
  +'XComponents package'#13#10'  {$ifdef windows}'#13#10'  cfg:=''C:/fpcupdelux'
  +'e/fpc/bin/i386-win32'';   // Location of Lazarus installation (needed for F'
  +'ree Pascal compilation of user events dll)'#13#10'  {$endif}'#13#10'  {$ifd'
  +'ef linux}'#13#10'  cfg:=''/home/pi/fpcupdeluxe/fpc/bin/arm-linux'';'#13#10
  +'  {$endif}'#13#10'  result:=cfg;'#13#10#13#10'end;'#13#10#13#10'function Co'
  +'mpileEventCode(MyCodeEditor:TXCode; RunMode:String):Boolean;'#13#10'var'#13
  +#10'   TheStream : TFileStream;'#13#10'   Lines:TStringList;'#13#10'   PASFi'
  +'leName:string;'#13#10'   DLLFileName:string;'#13#10'   ProgPath:String;'#13
  +#10'   i:integer;'#13#10'   FoundError,FoundFatal:Boolean;'#13#10'begin'#13
  +#10'  Screen.Cursor := crHourglass;'#13#10#13#10'  ProgPath:=ExtractFilePath'
  +'(Application.ExeName);'#13#10'  Lines:=TStringList.Create;'#13#10'  DllName'
  +':=MainUnitName+''Events'';'#13#10#13#10'  // clean up from previous runs'#13
  +#10'  MyCodeEditor.MessageLines:='''';'#13#10#13#10'  PASFileName:= DllName+'
  +'''.pas'';'#13#10'  SysUtils.DeleteFile(''resources/project/''+PASFileName);'
  +#13#10'  SysUtils.DeleteFile(''resources/project/''+DllName+''.o'');'#13#10
  +#13#10'  InitialiseCodeToBeCompiled(RunMode,nil);'#13#10'  MyCodeEditor.Item'
  +'Value:=PascalCode.Text;'#13#10'  // save the text to be compiled to the .pa'
  +'s file'#13#10'  MyCodeEditor.TheEditor.Lines.SaveToFile(''resources/project'
  +'/''+PASFileName);'#13#10#13#10'  if RunMode = ''LazJS'' then'#13#10'  begin'
  +#13#10'    // run the pas2js compiler just for the events unit to check for '
  +'errors'#13#10'    TranspileMyProgram(DllName,ProgPath,''resources/project/'
  +''',MyCodeEditor,false);'#13#10'  end'#13#10#13#10'  else if RunMode = ''Laz'
  +'Dll'' then'#13#10'  begin'#13#10'    // run the free pascal compiler (FPC) '
  +'to create the dll'#13#10'    // (from http://wiki.freepascal.org/Executing_'
  +'External_Programs#TProcess)'#13#10#13#10'    DLLFileName:= DllName+''.''+Sh'
  +'aredSuffix;'#13#10'    {$ifdef linux}'#13#10'    DLLFileName:=''lib''+DLLFi'
  +'leName;'#13#10'    {$endif}'#13#10'    SysUtils.DeleteFile(''resources/proj'
  +'ect/''+DLLFileName);'#13#10'    SysUtils.DeleteFile(''fpcerrors.txt'');'#13
  +#10'    SysUtils.DeleteFile(''fpcdebug.txt'');'#13#10#13#10'    //Unload the'
  +' lib, if already loaded'#13#10'    if MyLibC <>  DynLibs.NilHandle then'#13
  +#10'      if FreeLibrary(MyLibC) then'#13#10'        MyLibC:= DynLibs.NilHan'
  +'dle;'#13#10#13#10'    // create the TProcess object'#13#10'    AProcess := '
  +'TProcess.Create(nil);'#13#10#13#10'    // Tell the new AProcess what the co'
  +'mmand to execute is.'#13#10'    // Use the Free Pascal compiler'#13#10'    '
  +'AProcess.Executable:= ConfigfpcPath+''/fpc'';'#13#10#13#10'    // add param'
  +'eters'#13#10'    AProcess.Parameters.Add(''@''+ConfigfpcPath+''/fpc.cfg'');'
  +#13#10#13#10'    AProcess.Parameters.Add(''resources/project/''+PASFileName)'
  +';'#13#10'    AProcess.Parameters.Add(''-Fu./resources/xcomponents'');      '
  +'// for EventsInterface.pas'#13#10'    AProcess.Parameters.Add(''-Fu./tempin'
  +'c'');'#13#10'    AProcess.Parameters.Add(''-Fi./tempinc'');'#13#10'    APro'
  +'cess.Parameters.Add(''-Fefpcerrors.txt'');'#13#10'    AProcess.Parameters.A'
  +'dd(''-dDll'');'#13#10'    AProcess.Parameters.Add(''-gl'');'#13#10'    //AP'
  ,'rocess.Parameters.Add(''-debug-log=DllDebugLog.log'');'#13#10'    AProcess.'
  +'Parameters.Add(''-vewilv'');              //verbose     //v: writes to fpcd'
  +'ebug.txt'#13#10'    AProcess.Parameters.Add(''-Xg'');              //debugg'
  +'ing    //compiler debugging'#13#10'    AProcess.Parameters.Add(''-B'');    '
  +'            //build all units'#13#10'    AProcess.Parameters.Add(''-Cr''); '
  +'              //range checking'#13#10'//    AProcess.Parameters.Add(''-k -R'
  +' ./'');               //pass to linker'#13#10'    //AProcess.Parameters.Add'
  +'(''-gw'');'#13#10#13#10'    {$ifdef linux}'#13#10'    AProcess.Parameters.A'
  +'dd(''-fPIC'');              // Generate PIC code'#13#10'    {$endif}'#13#10
  +#13#10'    // We will define an option for when the program'#13#10'    // is'
  +' run. This option will make sure that our program'#13#10'    // does not co'
  +'ntinue until the program we will launch'#13#10'    // has stopped running.'
  +#13#10'    // see for bug fix ..... http://wiki.freepascal.org/Executing_Ext'
  +'ernal_Programs#Reading_large_output'#13#10'    //AProcess.Options := AProce'
  +'ss.Options + [poWaitOnExit, poUsePipes, poNoConsole];'#13#10'    //AProcess'
  +'.Options := AProcess.Options + [poWaitOnExit, poUsePipes, poNewConsole];'#13
  +#10'    AProcess.Options := AProcess.Options + [poWaitOnExit, poUsePipes];'
  +#13#10#13#10'    Lines.clear;'#13#10'    // Now let AProcess run the program'
  +#13#10'    try'#13#10'      try'#13#10'      AProcess.Execute;'#13#10'      '
  +'except'#13#10'        on E:Exception do'#13#10'        begin'#13#10'       '
  +'   showmessage(''Unable to execute process fpc.exe.  Check Run Settings. '''
  +'+e.Message);'#13#10'          MyCodeEditor.MessageLines:=''Error: Unable to'
  +' execute process fpc.exe.  Check Run Settings. ''+e.Message;'#13#10'       '
  +' end;'#13#10'      end;'#13#10'    finally'#13#10'      // Now read the out'
  +'put of fpc into a memo'#13#10'      if FileExists(''fpcerrors.txt'') then'
  +#13#10'      begin'#13#10'        Lines.LoadFromFile(''fpcerrors.txt'');'#13
  +#10'        MyCodeEditor.MessageLines:=Lines.Text;'#13#10'      end'#13#10' '
  +'     else'#13#10'      begin'#13#10'        MyCodeEditor.MessageLines:=''Er'
  +'ror: Cannot find fpc output file fpcerrors.txt.  Check Run Settings.'';'#13
  +#10'      end;'#13#10'    end;'#13#10'    // This is not reached until proce'
  +'ss stops running.'#13#10'    AProcess.Free;'#13#10'  end;'#13#10#13#10'  //'
  +' check messages for errors'#13#10'  FoundError:=false;'#13#10'  FoundFatal:'
  +'=false;'#13#10'  i:=0;'#13#10'  while (i<MyCodeEditor.TheMessages.lines.Cou'
  +'nt)'#13#10'  and (FoundError=false)'#13#10'  and (FoundFatal=false) do'#13
  +#10'  begin'#13#10'    MyCodeEditor.GetMessage(FoundError,MyCodeEditor.TheMe'
  +'ssages.lines[i],''Error:'');'#13#10'    MyCodeEditor.GetMessage(FoundFatal,'
  +'MyCodeEditor.TheMessages.lines[i],''Fatal:'');'#13#10'    i:=i+1;'#13#10'  '
  +'end;'#13#10#13#10'  // does the compiled file exist?'#13#10'  if (RunMode ='
  +' ''LazDll'')'#13#10'  and (not FileExists(''resources/project/''+DLLFileNam'
  +'e)) then'#13#10'    FoundError:=true;'#13#10#13#10'  Lines.Free;'#13#10'  S'
  +'creen.Cursor := crDefault;'#13#10#13#10'  if (FoundError) or (FoundFatal) t'
  +'hen'#13#10'    result:=false'#13#10'  else'#13#10'    result:=true;'#13#10
  +#13#10'end;'#13#10#13#10#13#10'{$else}'#13#10#13#10'function ExtractModuleNa'
  +'me(instr:String):String;'#13#10'var'#13#10'  k:integer;'#13#10'  found:bool'
  +'ean;'#13#10'  modname:String;'#13#10'begin'#13#10'  found:=false;'#13#10'  '
  +'k:=1;'#13#10'  while k< length(instr) do'#13#10'  begin'#13#10'    if instr'
  +'[k]=''"'' then'#13#10'    begin'#13#10'      if found then'#13#10'        k'
  +':=length(inStr)'#13#10'      else'#13#10'        found:=true;'#13#10'    en'
  +'d'#13#10'    else if found then'#13#10'      modname:=modname+instr[k];'#13
  +#10'    k:=k+1;'#13#10'  end;'#13#10'  //showmessage(''found name ''+modname'
  +');'#13#10'  result:=modname;'#13#10'end;'#13#10#13#10'function LocateNextMo'
  +'dule(var inLines:TStringList):integer;'#13#10'var'#13#10'  i,j,k:integer;'
  +#13#10'  modname,tmp:String;'#13#10'begin'#13#10'  result:=-1;'#13#10'  tmp:'
  +'=inLines.Text;'#13#10'  //asm alert(''start of locate...''+tmp); end;'#13#10
  +'  i:=0;'#13#10'  j:=0;'#13#10'  while i < inLines.Count do'#13#10'  begin'
  +#13#10'    j:=FoundString(inLines[i],''rtl.module("'');'#13#10'    if j > 0 '
  +'then'#13#10'    begin'#13#10'      //showmessage(''found ''+inLines[i]);'#13
  +#10'      result:=i;'#13#10'      i:=inLines.Count;'#13#10'    end;'#13#10' '
  +'   i:=i+1;'#13#10'  end;'#13#10'  //showmessage(''linenum=''+inttostr(resul'
  +'t)+'' line is ''+inLines[result]);'#13#10'end;'#13#10#13#10'function Compil'
  +'eEventCode(MyCodeEditor:TXCode; RunMode:String):Boolean;'#13#10'var'#13#10
  +'  tmp,FirstUnitName,CurrentUnitName:String;'#13#10'  ok:Boolean;'#13#10'  i'
  +',j:integer;'#13#10'  args,JSOutputLines,JSKeep : TStringList;'#13#10'  Res,'
  +'PasModuleExists : Boolean;'#13#10'  lWebFS : TPas2JSWebFS;'#13#10'  NSUnits'
  ,':array of String;'#13#10'begin'#13#10'  NamespaceUnits.Clear;'#13#10#13#10
  +'  MyWebCompiler.mycodeeditor:=MyCodeEditor;'#13#10'  DllName:=MainUnitName+'
  +'''Events'';'#13#10'  //showmessage(''CompileEventCode ''+RunMode);'#13#10' '
  +' // clean up from previous runs'#13#10'  MyCodeEditor.MessageLines:='''';'
  +#13#10#13#10'  //.....Run the compiler .......'#13#10#13#10'  //showmessage('
  +'''CompileEventCode. starting compile section...'');'#13#10#13#10'    MyWebC'
  +'ompiler.Compiler.Log.OnLog:=@MyWebCompiler.DoLog;'#13#10#13#10'    MyWebCom'
  +'piler.Compiler.WebFS.LoadBaseURL:='''';'#13#10#13#10'    FirstUnitName:=Ini'
  +'tialiseCodeToBeCompiled(RunMode,MyWebCompiler.Compiler); // populates Pasca'
  +'lCode stringlist, and builds user units'#13#10'    //showmessage(''FirstUni'
  +'tName=''+FirstUnitName);'#13#10'    MyCodeEditor.ItemValue:=PascalCode.Text'
  +';'#13#10#13#10'    Res:=False;'#13#10#13#10'    lWebFS:=MyWebCompiler.Compi'
  +'ler.WebFS;'#13#10'    // Load up the RTL sources that are required for the '
  +'compilation...    //!!!! maybe do this only once??'#13#10'    asm'#13#10'  '
  +'  lWebFS.SetFileContent(''eventsinterface.pas'',pas.CompileUserCode.eventsi'
  +'nterfacepas);'#13#10'    lWebFS.SetFileContent(''interfacetypes.pas'',pas.C'
  +'ompileUserCode.interfacetypespas);'#13#10'    end;'#13#10'    LoadRTLFilesF'
  +'orPas2JS(lWebFS);'#13#10#13#10'    // Load up the main .pas file'#13#10'   '
  +' lWebFS.SetFileContent(DllName+''.pas'',PascalCode.Text);'#13#10#13#10'    '
  +'args:=TStringList.Create;'#13#10'    try'#13#10'      //Args.Add(-Jeutf-8);'
  +'      //  encode messages as:  Unicode UTF-8. Default when using -Fe.'#13#10
  +'      //-Jminclude               //  include Pascal sources in source map.'
  +#13#10'//      Args.Add(''-Tbrowser'');   //  Set target platform'#13#10'   '
  +' // -Tnodejs'#13#10'      Args.Add(''-vwnhe'');'#13#10'      Args.Add(''-O-'
  +''');           //  Disable optimizations'#13#10'      Args.Add(''-Jc'');   '
  +'        //  Write all JavaScript concatenated into the output file'#13#10' '
  +'     //      Args.Add(''-Jirtl.js'');   //  Insert JS file <x> into main JS'
  +' file.'#13#10'      Args.Add(''-Jirtl.js-'');         //  Remove a JS file.'
  +#13#10'      Args.Add(''-dJScript'');'#13#10'      Args.Add(''-B'');        '
  +'        //build all units'#13#10'// -Pecmascript5     // Set target process'
  +'or.'#13#10'// -MobjFPC  // FPC''s Object Pascal compatibility mode (default'
  +')'#13#10'// -Sc      // Support operators like C (*=,+=,/= and -=)'#13#10'/'
  +'/ -Ju<x> : Add <x> to foreign unit paths. Foreign units are not compiled.'
  +#13#10'      Args.Add(DllName+''.pas'');'#13#10#13#10'      //..............'
  +'..........................................'#13#10'      MyWebCompiler.Compi'
  +'ler.Run('''','''',Args,True);'#13#10'      Res:=MyWebCompiler.Compiler.Exit'
  +'Code=0;'#13#10'      //....................................................'
  +'....'#13#10#13#10'    finally'#13#10'     Args.Free;'#13#10'    end;'#13#10
  +#13#10'    //EditAttributeValue(''XMemo2'','''',''ItemValue'',PascalCode.Tex'
  +'t);        //!!!! temporary for debugging'#13#10#13#10'    if res=true then'
  +#13#10'    begin'#13#10'      //showmessage(''compiler all done - success'')'
  +';'#13#10#13#10'    // First De-register the events unit, plus any other use'
  +'r units used'#13#10'    SetLength(NSUnits,NamespaceUnits.Count);'#13#10'   '
  +' for i:=0 to NamespaceUnits.Count-1 do'#13#10'    begin'#13#10'      NSUnit'
  +'s[i]:=NamespaceUnits[i];'#13#10'    end;'#13#10'    asm'#13#10'    try {'#13
  +#10'      var hd=document.head;'#13#10'      var div=document.getElementById'
  +'(''UserEventCodeContainer'');'#13#10'      if (div==null) {'#13#10'        '
  +' div=document.createElement(''div'');'#13#10'         div.id=''UserEventCod'
  +'eContainer'';'#13#10'         hd.appendChild(div);'#13#10'         }'#13#10
  +'      div.innerHTML='''';'#13#10#13#10'      // remove the prior registrati'
  +'on of this module...'#13#10'      if (pas[pas.Events.DllName]) {'#13#10'   '
  +'     pas[pas.Events.DllName]=null;'#13#10'        // and any user units ...'
  +'.'#13#10'        var codeRoot=pas.NodeUtils.CodeRootNode;'#13#10'        fo'
  +'r (var i=0; i<codeRoot.ChildNodes.length; i++) {'#13#10'             if (co'
  +'deRoot.ChildNodes[i].NodeType==''RawUnit'')'#13#10'                {'#13#10
  +'                 //alert(''removing unit ''+codeRoot.ChildNodes[i].NodeName'
  +');'#13#10'                 pas[codeRoot.ChildNodes[i].NodeName]=null;'#13#10
  +'                 }'#13#10'           }'#13#10'        // and any TXComposit'
  +'e (namespace) units....'#13#10'        for (i=0; i<NSUnits.length; i++) {'
  +#13#10'          pas[NSUnits[i]]=null;'#13#10'        }'#13#10'        // an'
  +'d the worker threads unit ....'#13#10'        pas[pas.Events.DllName+''Thre'
  +'ads'']=null;'#13#10'        }'#13#10'      } catch(err) { alert(err.message'
  +' + '' in CompileEventCode (units de-registration) '');     div.innerHTML='''
  +'''; ok=false;}'#13#10'     end;'#13#10#13#10#13#10'    // Capture the outpu'
  ,'t from the Pas2JS compiler'#13#10'    JSOutput:=MyWebCompiler.Compiler.WebF'
  +'S.GetFileContent(DllName+''.js'');'#13#10#13#10'    // Delete from the JS f'
  +'ile all units that already exist in the main page...'#13#10'    if FirstUni'
  +'tName='''' then FirstUnitName:=DllName;'#13#10'    //showmessage(''FirstUni'
  +'tName=''+DllName);'#13#10#13#10'    // pas2js has produced a JS output file'
  +' including all referenced rtl units.'#13#10'    // Chop up the output into '
  +'separate modules, and retain only those rtl modules'#13#10'    // that are '
  +'not already registered...'#13#10'    JSOutputLines:=TStringList.Create;'#13
  +#10'    JSOutputLines.Text:=JSOutput;'#13#10'    JSKeep:=TStringList.Create;'
  +#13#10#13#10'    PasModuleExists:=false;'#13#10#13#10'    CurrentUnitName:='
  +'''.'';'#13#10'    while (CurrentUnitName<>'''')'#13#10'    and (CurrentUnit'
  +'Name<>FirstUnitName) do'#13#10'    begin'#13#10'      i:=LocateNexTModule(J'
  +'SOutputLines);'#13#10'      CurrentUnitName:=ExtractModuleName(JSOutputLine'
  +'s[i]);'#13#10'      //showmessage(''i=''+inttostr(i)+'' checking module ''+'
  +'CurrentUnitName);'#13#10'      if (i-1) > 0 then'#13#10'        for j:=0 to'
  +' i-1 do'#13#10'        begin'#13#10'          if PasModuleExists=false then'
  +#13#10'            JSKeep.Add(JSOutputLines[0]);'#13#10'          JSOutputLi'
  +'nes.Delete(0);'#13#10'        end;'#13#10'      //deal with this module...'
  +#13#10'      if (CurrentUnitName<>FirstUnitName) then'#13#10'      begin'#13
  +#10'        PasModuleExists:=true;'#13#10'        asm'#13#10'        //alert'
  +'(pas[CurrentUnitName]);'#13#10'          if (pas[CurrentUnitName]==undefine'
  +'d) {'#13#10'             PasModuleExists = false;'#13#10'          }'#13#10
  +'        end;'#13#10'        if PasModuleExists = false then'#13#10'        '
  +'begin'#13#10'          //showmessage(''keeping module ''+CurrentUnitName);'
  +#13#10'          JSKeep.Add(JSOutputLines[0]);'#13#10'        end;'#13#10'  '
  +'      JSOutputLines.Delete(0);'#13#10'      end;'#13#10'      //tmp:=CopyTh'
  +'isModule(JSOutputLines);'#13#10'    end;'#13#10#13#10'    //tmp:=JSKeep.Tex'
  +'t;'#13#10'    //asm alert( tmp); end;'#13#10#13#10'    JSOutput:=JSKeep.Tex'
  +'t + JSOutputLines.Text;'#13#10'    JSOutputLines.Free;'#13#10'    JSKeep.Fr'
  +'ee;'#13#10'  end;'#13#10#13#10'  //EditAttributeValue(''XMemo1'','''',''Ite'
  +'mValue'',JSOutput);        //!!!! temporary for debugging'#13#10#13#10'  ok'
  +':=res;'#13#10'  if res=true then'#13#10'  begin'#13#10#13#10'    //showmess'
  +'age(''Events compilation done.  Output=''+JSOutput);'#13#10#13#10'    // In'
  +'ject the generated JS script'#13#10'     asm'#13#10'      try {'#13#10'    '
  +'    //alert(''inject script : ''+ pas.CompileUserCode.JSOutput);'#13#10'   '
  +'     var script = document.createElement(''script'');'#13#10'        script'
  +'.innerHTML = pas.CompileUserCode.JSOutput;'#13#10'        div.appendChild(s'
  +'cript);'#13#10'      } catch(err) { alert(err.message + '' in CompileEventC'
  +'ode (injecting script) '');     div.innerHTML=''''; ok=false;}'#13#10#13#10
  +'      try {'#13#10#13#10'        //alert(''try re-registration...'');'#13#10
  +'        // must re-register the events unit and any user units in its uses '
  +'clause....'#13#10'        var module = pas[pas.Events.DllName];'#13#10'    '
  +'    //alert(''module ''+pas.Events.DllName+''=''+module);'#13#10'        if'
  +' (module!=null) {'#13#10'          rtl.loadintf(module);      // to registe'
  +'r the new module''s properties'#13#10'          rtl.loadimpl(module);      '
  +'// to register the new module''s properties'#13#10'        }'#13#10'       '
  +' else {alert(''Problem encountered with unit registration in rtl'');'#13#10
  +'              ok=false;'#13#10'              }'#13#10'        } catch(err) '
  +'{ alert(err + '' in CompileEventCode (module registration) '');     div.inn'
  +'erHTML=''''; ok=false;}'#13#10'        //} catch(err) { alert(err.name+'' '
  +'''+err.at+'' ''+err.text+'' ''+err.message + '' in CompileEventCode 2 ''); '
  +'    div.innerHTML=''''; ok=false;}'#13#10#13#10'    end;'#13#10'  end;'#13
  +#10#13#10'  //....decide if there are errors or not .......'#13#10'  if ok=f'
  +'alse then showmessage(''Compilation failed'')'#13#10'  else showmessage(''C'
  +'ompilation successful'');'#13#10'  result:=ok;'#13#10'end;'#13#10#13#10#13
  +#10'{$endif}'#13#10#13#10'function   DfltUnitCode(UnitName,UnitType:String):'
  +'string;'#13#10'begin'#13#10'  if UnitType=''RawUnit'' then'#13#10'    resul'
  +'t:=''unit ''+UnitName+'';'' + LineEnding'#13#10'          +''{$ifdef Dll}'''
  +'+ LineEnding'#13#10'          +''{$mode objfpc}{$H+}''+ LineEnding'#13#10' '
  +'         +''{$endif}''+ LineEnding'#13#10'          + ''interface ''+ LineE'
  +'nding'#13#10'          + ''uses Classes, Sysutils,''+ LineEnding'#13#10'   '
  +'       + ''   Math, contnrs, dateutils, rtlconsts, {rtti,} strutils, types,'
  +' typinfo,''+ LineEnding'#13#10'          + ''{$ifdef Dll} InterfaceTypesDll'
  +'; {$else} InterfaceTypes; {$endif} '' + LineEnding'#13#10'          + LineE'
  ,'nding'#13#10'          + ''implementation '' + LineEnding'#13#10'          '
  +'+ '' '' + LineEnding'#13#10'          + ''begin'' + LineEnding'#13#10'     '
  +'     + ''// IMPORTANT: do not use any of the XIDE interface functions '' + '
  +'LineEnding'#13#10'          + ''//(eg. SetPropertyValue etc in unit Interfa'
  +'ceTypesDll) '' + LineEnding'#13#10'          + ''// inside the unit initial'
  +'ization section.....errors will occur.'' + LineEnding'#13#10'          + '''
  +'end. '''#13#10'  else'#13#10'    result:=''// Declare variables and functio'
  +'ns local to this unit...(within implementation section)'';'#13#10'end;'#13
  +#10#13#10'function   DfltFunctionCode(FnName:String):string;'#13#10'begin'#13
  +#10'  result:= ''begin '' + LineEnding +'#13#10'            ''  result := '''
  +''''''';'' + LineEnding +'#13#10'            ''end;'' + LineEnding;'#13#10'e'
  +'nd;'#13#10'function   DfltEventCode:string;'#13#10'begin'#13#10'  result:= '
  +'''begin'' + LineEnding +'#13#10'            '' '' + LineEnding +'#13#10'   '
  +'         ''end;'' + LineEnding;'#13#10'end;'#13#10'function   DfltThreadEve'
  +'ntCode(NodeName:String):string;'#13#10'begin'#13#10'  result:= ''begin'' + '
  +'LineEnding +'#13#10'           ''  with XVars''+NodeName+'' do '' + LineEnd'
  +'ing +'#13#10'           ''  begin'' + LineEnding +'#13#10'           ''  en'
  +'d;'' + LineEnding +'#13#10'           ''end;'' + LineEnding;'#13#10'end;'#13
  +#10'function   DfltTreeNodeEventCode:string;'#13#10'begin'#13#10'  result:= '
  +'''var'' + LineEnding +'#13#10'          ''  values:TNodeEventValue;'' + Lin'
  +'eEnding +'#13#10'          ''  SourceName,SrcText,DstText:String;''  + Line'
  +'Ending +'#13#10'          ''begin'' + LineEnding +'#13#10'          ''  val'
  +'ues:=TNodeEventValue(e.ValueObject);'' + LineEnding +'#13#10'          ''  '
  +'SourceName:=values.SourceName;  // name of tree being dragged from'' + Line'
  +'Ending +'#13#10'          ''  SrcText:=values.SrcText;        // text of tr'
  +'eenode being dragged'' + LineEnding +'#13#10'          ''  DstText:=values.'
  +'DstText;        // text of treenode being dragged over'' + LineEnding +'#13
  +#10'          ''  // set e.ReturnString to "True" or "False" '' + LineEnding'
  +' +'#13#10'          ''  e.ReturnString:=''''True'''';'' + LineEnding +'#13
  +#10'          ''end;'' + LineEnding;'#13#10'end;'#13#10#13#10'begin'#13#10' '
  +' PascalCode:=TStringList.Create;'#13#10'  ExportsList:=TStringList.Create;'
  +#13#10'  {$ifndef JScript}'#13#10'  MyLibC := dynlibs.NilHandle;'#13#10'  Co'
  +'nfigFPCPath:=DefaultFPCConfig;'#13#10'  LoadFPCConfig;'#13#10'  {$else}'#13
  +#10'  NamespaceUnits:=TStringList.Create;'#13#10'  {$endif}'#13#10'end.'#13
  +#10#13#10#13#10
]);
LazarusResources.Add('propertyeditunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit PropertyEditUnit;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10
  +#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, '
  +'NodeUtils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, G'
  +'raphics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, Grids, TypIn'
  +'fo, LazIDEIntf,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'
  +' StdCtrls,'#13#10'  {$else}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  '
  +'WrapperPanel,XVBox,XScrollBox, XHBox, XTree, XTable,XMemo, XTabControl, XBu'
  +'tton, XLabel,'#13#10'  XEditBox, XCheckBox, XHyperLink, XRadioBtns, XCode, '
  +'XForm, XComboBox,'#13#10'  XColorPicker, CodeEditor, InputSelectUnit,Events'
  +'Interface;'#13#10#13#10'type'#13#10#13#10'  { TPropertyEditForm }'#13#10#13
  +#10'  TPropertyEditForm = class(TXForm)'#13#10'    PropertyEditFormXHBox2: T'
  +'XHBox;'#13#10'    PropertyEditFormXTabControl11: TXTabControl;'#13#10'    P'
  +'ropertyEditSourceHBox: TXHBox;'#13#10'    PropertyEditVBox1: TXVBox;'#13#10
  +'    PropertyEditTabSheet1: TXTabSheet;'#13#10'    PropertyEditTabSheet2: TX'
  +'TabSheet;'#13#10'    PropertyEditTab1VBox1: TXVBox;'#13#10'    PropertyEdit'
  +'Name: TXEditBox;'#13#10'    PropertyEditType: TXEditBox;'#13#10'    Propert'
  +'yEditDoneBtn: TXButton;'#13#10'    PropertyEditCancelBtn: TXButton;'#13#10
  +'    PropertyEditSourceBox: TXEditBox;'#13#10' //   PropertyEditSourceTree: '
  +'TXTree;'#13#10'    PropertyEditSourceBtn: TXButton;'#13#10'    PropertyEdit'
  +'TabSheet3: TXTabSheet;'#13#10'    PropertyEditVBox99: TXVBox;'#13#10'    Pr'
  +'opertyEditLabel: TXLabel;'#13#10'    PropertyEditVBox66: TXVBox;'#13#10'   '
  +' {$ifndef JScript}'#13#10'    procedure FormCreate(Sender: TObject);'#13#10
  +'    procedure FormResize(Sender: TObject);'#13#10'    {$endif}'#13#10'    p'
  +'rocedure PropertyEditCancelBtnHandleButtonClick(e:TEventStatus;nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'    procedure PropertyEditDoneBtnHandl'
  +'eButtonClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'    procedure PropertyEditSourceBtnHandleButtonClick(e:TEventStatus;nodeID:'
  +' AnsiString; myValue: AnsiString);'#13#10'//    procedure PropertyEditSourc'
  +'eTreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'    procedure HandleTreeDataNodeSelect(e:TEventStatus;nodeID:'
  +' AnsiString; myValue: AnsiString);'#13#10'    procedure HandleTreeDataDragS'
  +'tart(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    pr'
  +'ocedure HandleTreeDataDrop(e:TEventStatus;nodeID: AnsiString; myValue: Ansi'
  +'String);'#13#10'    procedure InsertSiblingNode(e:TEventStatus;nodeID: Ansi'
  +'String; myValue: AnsiString);'#13#10'    procedure InsertChildNode(e:TEvent'
  +'Status;nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure Delet'
  +'eTreeNode(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10' '
  +'   procedure CopyTreeNode(e:TEventStatus;nodeID: AnsiString; myValue: AnsiS'
  +'tring);'#13#10'    procedure PasteTreeNode(e:TEventStatus;nodeID: AnsiStrin'
  +'g; myValue: AnsiString);'#13#10'    procedure InsertTableRow(e:TEventStatus'
  +';nodeID: AnsiString; myValue: AnsiString);'#13#10'    procedure InsertTable'
  +'Column(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'    '
  +'procedure DeleteTableRow(e:TEventStatus;nodeID: AnsiString; myValue: AnsiSt'
  +'ring);'#13#10'    procedure DeleteTableColumn(e:TEventStatus;nodeID: AnsiSt'
  +'ring; myValue: AnsiString);'#13#10#13#10'    procedure SetupPages;'#13#10' '
  +' private'#13#10#13#10'  public'#13#10'    //myNode:TDataNode;'#13#10'    Ta'
  +'rgetNode:TDataNode;'#13#10'    EditNode:TDataNode;'#13#10'    TargetAttribu'
  +'te:TNodeAttribute;'#13#10'  end;'#13#10#13#10'var'#13#10'  PropertyEditForm'
  +': TPropertyEditForm;'#13#10'  PropertyEditBox:TDataNode;'#13#10'  PropertyE'
  +'ditStatus:String;'#13#10#13#10'  {$ifndef JScript}'#13#10'  CopiedTreeNode:'
  +'TTreeNode;'#13#10'  {$else}'#13#10'  CopiedTreeNode:String;'#13#10'  {$endi'
  +'f}'#13#10#13#10'implementation'#13#10'{$R *.lfm}'#13#10'uses xobjectinsp;'
  +#13#10#13#10'var'#13#10'  SourceOptionsList:String;'#13#10#13#10'procedure T'
  +'PropertyEditForm.SetupPages;'#13#10'var'#13#10'  NewEditBox:TXEditBox;'#13
  +#10'  NewCheckBox:TXCheckBox;'#13#10'  NewColorPicker:TXColorPicker;'#13#10
  +'  NewComboBox:TXComboBox;'#13#10'  NewMemo:TXMemo;'#13#10'  NewTree:TXTree;'
  +#13#10'  NewHBox:TXHBox;'#13#10'  NewTable:TXTable;'#13#10'  NewBtn1,NewBtn2'
  +',NewBtn3,NewBtn4,NewBtn5:TXButton;'#13#10'  AttribOptions:TStringList;'#13
  ,#10'  str:String;'#13#10'begin'#13#10'  PropertyEditStatus:=''Cancel'';'#13
  +#10'  InputSelectForm.ExclNodeName:=TargetNode.NodeName;'#13#10'  InputSelec'
  +'tForm.ExclPropertyName:=TargetAttribute.AttribName;'#13#10'  InputSelectFor'
  +'m.PropType:=TargetAttribute.AttribType;'#13#10#13#10'  DeleteNodeChildren(P'
  +'ropertyEditVBox66.myNode);'#13#10#13#10'  self.Caption := ''Property Editor'
  +' : ''+TargetNode.Nodename + ''.'' + TargetAttribute.AttribName;'#13#10'  Pr'
  +'opertyEditLabel.LabelCaption:=''Edit the value of property ''+TargetAttribu'
  +'te.AttribName;'#13#10#13#10'  //Build the necessary widget(s) for editing t'
  +'he property according to type'#13#10'  if (TargetAttribute.AttribType=''Str'
  +'ing'')'#13#10'  or (TargetAttribute.AttribType=''Integer'') then'#13#10'  b'
  +'egin'#13#10'    AttribOptions:=LookupAttribOptions(TargetNode.NodeType,Targ'
  +'etAttribute.AttribName);'#13#10'    if AttribOptions<>nil then'#13#10'    b'
  +'egin'#13#10'      NewComboBox:=TXComboBox(AddDynamicWidget(''TXComboBox'',P'
  +'ropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditWidget'','''',''Lef'
  +'t'',-1).ScreenObject);'#13#10'      //NewComboBox.OptionList:=StringListToL'
  +'istString(AttribOptions);'#13#10'      NewComboBox.OptionList:=StringListTo'
  +'JSONString(AttribOptions);'#13#10'      NewComboBox.LabelText:='''';'#13#10
  +'      EditNode:=NewComboBox.myNode;'#13#10'      NewComboBox.ItemValue:=Tar'
  +'getAttribute.AttribValue;'#13#10'    end'#13#10'    else'#13#10'    begin'
  +#13#10'       // property Itemvalue in a TXMemo is type String, but needs a '
  +'memo editor'#13#10'      if ((TargetAttribute.AttribName=''ItemValue'') and'
  +' (TargetNode.NodeType=''TXMemo''))'#13#10'            or ((TargetAttribute.'
  +'AttribName=''MapData'') and (TargetNode.NodeType=''TXBitMap''))'#13#10'    '
  +'        or ((TargetAttribute.AttribName=''MapColors'') and (TargetNode.Node'
  +'Type=''TXBitMap''))'#13#10'            or ((TargetAttribute.AttribName=''Ma'
  +'pPixelArray'') and (TargetNode.NodeType=''TXBitMap''))'#13#10'            o'
  +'r ((TargetAttribute.AttribName=''HTMLSource''))'#13#10'            or ((Tar'
  +'getAttribute.AttribName=''SourceText'') and (TargetNode.NodeType=''TXHTMLTe'
  +'xt''))'#13#10'            or ((TargetAttribute.AttribName=''SourceText'') a'
  +'nd (TargetNode.NodeType=''TXHTMLEditor''))'#13#10'            or ((TargetAt'
  +'tribute.AttribName=''XMLString'') and (TargetNode.NodeType=''TXSVGContainer'
  +'''))'#13#10'            or ((TargetAttribute.AttribName=''OptionList''))'#13
  +#10'      then'#13#10'      begin'#13#10'        NewMemo:=TXMemo(AddDynamicW'
  +'idget(''TXMemo'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditW'
  +'idget'','''',''Left'',-1).ScreenObject);'#13#10'        NewMemo.LabelText:='
  +''''';'#13#10'        NewMemo.MemoHeight:=''90%'';'#13#10'        NewMemo.Me'
  +'moWidth:=''95%'';'#13#10'        NewMemo.ItemValue:=TargetAttribute.AttribV'
  +'alue;'#13#10'        EditNode:=NewMemo.myNode;'#13#10'      end'#13#10'    '
  +'  else'#13#10'      begin'#13#10'        // just a short string (or number)'
  +' - EditBox'#13#10'        NewEditBox:=TXEditBox(AddDynamicWidget(''TXEditBo'
  +'x'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditWidget'','''','
  +'''Left'',-1).ScreenObject);'#13#10'        NewEditBox.LabelText:='''';'#13
  +#10'        EditNode:=NewEditBox.myNode;'#13#10'        NewEditBox.ItemValue'
  +':=TargetAttribute.AttribValue;'#13#10'        NewEditBox.BoxWidth:=''300px'
  +''';'#13#10'      end;'#13#10'    end;'#13#10'  end'#13#10'  else if TargetA'
  +'ttribute.AttribType=''TreeString'' then'#13#10'  // property TreeData is ty'
  +'pe String, but needs a special editor'#13#10'  begin'#13#10'     NewTree:=T'
  +'XTree(AddDynamicWidget(''TXTree'',PropertyEditForm,PropertyEditVBox66.myNod'
  +'e,''PropertyEditWidget'','''',''Left'',-1).ScreenObject);'#13#10'     NewTr'
  +'ee.TreeData:=TargetAttribute.AttribValue;'#13#10'     NewTree.TreeHeight:='
  +'''80%'';'#13#10'     NewTree.TreeWidth:=''100%'';'#13#10'     NewTree.Label'
  +'Text:='''';'#13#10'     NewTree.ReadOnly:=false;'#13#10'     NewTree.Dragga'
  +'ble:=true;'#13#10'     // tree needs event handlers for editing'#13#10'    '
  +' // copy, cut, paste, drag/drop, delete, insert'#13#10'     NewTree.myNode.'
  +'registerEvent(''TreeNodeClick'',@PropertyEditForm.HandleTreeDataNodeSelect)'
  +';'#13#10'     NewTree.myNode.registerEvent(''DragStart'',@PropertyEditForm.'
  +'HandleTreeDataDragStart);'#13#10'     NewTree.myNode.registerEvent(''Drop'''
  +',@PropertyEditForm.HandleTreeDataDrop);'#13#10#13#10'     NewHBox:=TXHBox(A'
  +'ddDynamicWidget(''TXHBox'',PropertyEditForm,PropertyEditVBox66.myNode,''Pro'
  +'pertyEditHBox66'','''',''Left'',-1).ScreenObject);'#13#10'     NewHBox.Cont'
  +'ainerHeight:='''';'#13#10#13#10'     NewBtn1:=TXButton(AddDynamicWidget(''T'
  +'XButton'',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn1'','''',''Left'
  +''',-1).ScreenObject);'#13#10'     NewBtn1.Caption:=''Insert Sibling'';'#13
  +#10'     NewBtn1.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.Inse'
  ,'rtSiblingNode);'#13#10#13#10'     NewBtn2:=TXButton(AddDynamicWidget(''TXBu'
  +'tton'',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn2'','''',''Left'',-'
  +'1).ScreenObject);'#13#10'     NewBtn2.Caption:=''Insert Child'';'#13#10'   '
  +'  NewBtn2.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.InsertChil'
  +'dNode);'#13#10#13#10'     NewBtn3:=TXButton(AddDynamicWidget(''TXButton'',P'
  +'ropertyEditForm,NewHBox.myNode,''PropertyEditBtn3'','''',''Left'',-1).Scree'
  +'nObject);'#13#10'     NewBtn3.Caption:=''Delete Node'';'#13#10'     NewBtn3'
  +'.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.DeleteTreeNode);'#13
  +#10#13#10'     NewBtn4:=TXButton(AddDynamicWidget(''TXButton'',PropertyEditF'
  +'orm,NewHBox.myNode,''PropertyEditCopyBtn'','''',''Left'',-1).ScreenObject);'
  +#13#10'     NewBtn4.Caption:=''Copy'';'#13#10'     NewBtn4.myNode.registerEv'
  +'ent(''ButtonClick'',@PropertyEditForm.CopyTreeNode);'#13#10#13#10'     NewB'
  +'tn5:=TXButton(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBox.myNode'
  +',''PropertyEditPasteBtn'','''',''Left'',-1).ScreenObject);'#13#10'     NewB'
  +'tn5.Caption:=''Paste'';'#13#10'     NewBtn5.myNode.registerEvent(''ButtonCl'
  +'ick'',@PropertyEditForm.PasteTreeNode);'#13#10#13#10'     EditNode:=NewTree'
  +'.myNode;'#13#10'  end'#13#10'  else if TargetAttribute.AttribType=''TableSt'
  +'ring'' then'#13#10'  begin'#13#10'    NewTable:=TXTable(AddDynamicWidget('''
  +'TXTable'',PropertyEditForm,PropertyEditVBox66.myNode,''PropertyEditWidget'''
  +','''',''Left'',-1).ScreenObject);'#13#10'    NewTable.TableData:=TargetAttr'
  +'ibute.AttribValue;'#13#10'    str:= NewTable.TableData;'#13#10'    NewTable'
  +'.TableHeight:=''80%'';'#13#10'    NewTable.TableWidth:=''100%'';'#13#10'   '
  +' NewTable.LabelText:='''';'#13#10'    if TargetNode.NodeType=''TXTable'' th'
  +'en'#13#10'    begin'#13#10'      str:=TargetNode.GetAttribute(''ColWidth'','
  +'false).AttribValue;'#13#10'      if str<>'''' then'#13#10'        NewTable.'
  +'ColWidth:=strtoint(str);'#13#10'    end;'#13#10#13#10'    NewTable.HasHeade'
  +'rRow:=false;       // allow for editing col headers'#13#10'//    {$ifndef J'
  +'Script}'#13#10'//    TStringGrid(NewTable.myControl).FixedRows:=0; //allow '
  +'editing column headers'#13#10'//    {$else}'#13#10'//    //!!!!'#13#10'//  '
  +'  {$endif}'#13#10#13#10'    NewHBox:=TXHBox(AddDynamicWidget(''TXHBox'',Pro'
  +'pertyEditForm,PropertyEditVBox66.myNode,''PropertyEditHBox66'','''',''Left'
  +''',-1).ScreenObject);'#13#10'    NewHBox.ContainerHeight:='''';'#13#10#13#10
  +'    NewBtn1:=TXButton(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBo'
  +'x.myNode,''PropertyEditBtn1'','''',''Left'',-1).ScreenObject);'#13#10'    N'
  +'ewBtn1.Caption:=''Insert Row'';'#13#10'    NewBtn1.myNode.registerEvent(''B'
  +'uttonClick'',@PropertyEditForm.InsertTableRow);'#13#10#13#10'    NewBtn2:=T'
  +'XButton(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBox.myNode,''Pro'
  +'pertyEditBtn2'','''',''Left'',-1).ScreenObject);'#13#10'    NewBtn2.Caption'
  +':=''Insert Column'';'#13#10'    NewBtn2.myNode.registerEvent(''ButtonClick'
  +''',@PropertyEditForm.InsertTableColumn);'#13#10#13#10'    NewBtn3:=TXButton'
  +'(AddDynamicWidget(''TXButton'',PropertyEditForm,NewHBox.myNode,''PropertyEd'
  +'itBtn3'','''',''Left'',-1).ScreenObject);'#13#10'    NewBtn3.Caption:=''Del'
  +'ete Row'';'#13#10'    NewBtn3.myNode.registerEvent(''ButtonClick'',@Propert'
  +'yEditForm.DeleteTableRow);'#13#10#13#10'    NewBtn4:=TXButton(AddDynamicWid'
  +'get(''TXButton'',PropertyEditForm,NewHBox.myNode,''PropertyEditBtn4'','''','
  +'''Left'',-1).ScreenObject);'#13#10'    NewBtn4.Caption:=''Delete Column'';'
  +#13#10'    NewBtn4.myNode.registerEvent(''ButtonClick'',@PropertyEditForm.De'
  +'leteTableColumn);'#13#10#13#10'    EditNode:=NewTable.myNode;'#13#10'  end'
  +#13#10'  else if TargetAttribute.AttribType=''Boolean'' then'#13#10'  begin'
  +#13#10'    NewCheckBox:=TXCheckBox(AddDynamicWidget(''TXCheckBox'',PropertyE'
  +'ditForm,PropertyEditVBox66.myNode,''PropertyEditWidget'','''',''Left'',-1).'
  +'ScreenObject);'#13#10'    NewCheckBox.LabelText:='''';'#13#10'    EditNode:'
  +'=NewCheckBox.myNode;'#13#10'    NewCheckBox.Checked:=myStrToBool(TargetAttr'
  +'ibute.AttribValue);'#13#10'  end'#13#10'  else if TargetAttribute.AttribTyp'
  +'e=''Color'' then'#13#10'  begin'#13#10'    NewColorPicker:=TXColorPicker(Ad'
  +'dDynamicWidget(''TXColorPicker'',PropertyEditForm,PropertyEditVBox66.myNode'
  +',''PropertyEditWidget'','''',''Left'',-1).ScreenObject);'#13#10'    NewColo'
  +'rPicker.LabelText:='''';'#13#10'    EditNode:=NewColorPicker.myNode;'#13#10
  +'    NewColorPicker.ItemValue:=TargetAttribute.AttribValue;'#13#10'  end;'#13
  +#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TPropertyEditForm.F'
  +'ormCreate(Sender: TObject);'#13#10'//var'#13#10'//  myNode:TDataNode;'#13#10
  +'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'end;'#13#10#13#10'proce'
  +'dure TPropertyEditForm.FormResize(Sender: TObject);'#13#10'begin'#13#10'  D'
  +'oFormResize(self, PropertyEditVBox1);'#13#10'end;'#13#10#13#10'{$endif}'#13
  ,#10#13#10#13#10'procedure TPropertyEditForm.PropertyEditCancelBtnHandleButto'
  +'nClick('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  PropertyEditStatus:=''Cancel'';'#13#10'  TXForm(self).'
  +'Showing:=''No'';'#13#10'  PropertyEditBox:=nil;'#13#10'end;'#13#10#13#10'pr'
  +'ocedure TPropertyEditForm.PropertyEditDoneBtnHandleButtonClick('#13#10'  e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10
  +'  PropertyEditStatus:=''ok'';'#13#10'  TXForm(self).Showing:=''No'';'#13#10
  +'  PropertyEditorClosed(PropertyEditBox);'#13#10'end;'#13#10#13#10'procedure'
  +' TPropertyEditForm.PropertyEditSourceBtnHandleButtonClick('#13#10'  e:TEven'
  +'tStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'begin'#13#10'    I'
  +'nputSelectForm.TargetEditBoxNode:=PropertyEditSourceBox.myNode;'#13#10'    '
  +'if TargetNode.NodeType<>''TXComposite'' then                   //!!!! impro'
  +'ve this'#13#10'      InputSelectForm.PropType:=TargetAttribute.AttribType'
  +#13#10'    else'#13#10'      InputSelectForm.PropType:='''';'#13#10'    Inpu'
  +'tSelectForm.Initialise;'#13#10'    ShowXForm(''InputSelectForm'',true);'#13
  +#10#13#10'    // on return...'#13#10'    InputSelectForm.InputSelectClosed;'
  +#13#10'end;'#13#10'(*'#13#10'procedure TPropertyEditForm.PropertyEditSourceT'
  +'reeHandleTreeNodeClick('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'var'#13#10'  ObjName:String;'#13#10'  SelectedNode:TD'
  +'ataNode;'#13#10'begin'#13#10'  // value is the node label'#13#10'  //showme'
  +'ssage(''value=''+myValue);'#13#10'  ObjName:=TreeLabelToID( myValue);'#13#10
  +'  //ObjName is  the screen object name (from the name within myvalue)'#13#10
  +'  if ObjName<>'''' then'#13#10'  begin'#13#10'    //showmessage(''PropertyE'
  +'ditSourceTreeHandleTreeNodeClick.  Id=''+ObjName);'#13#10'    // if name co'
  +'ntains a ''.'' then it''s a property.'#13#10'    // Functions have a node t'
  +'ype of Function'#13#10'    if FoundString(ObjName,''.'')>0 then'#13#10'    '
  +'begin'#13#10'      PropertyEditSourceBox.ItemValue:=ObjName;'#13#10'    end'
  +#13#10'    else'#13#10'    begin'#13#10'      SelectedNode:=FindDataNodeById'
  +'(CodeRootNode,ObjName,'''',false);'#13#10'      if SelectedNode<>nil then'
  +#13#10'        if SelectedNode.NodeType=''Function'' then'#13#10'          P'
  +'ropertyEditSourceBox.ItemValue:=ObjName;'#13#10'    end;'#13#10'  end;'#13
  +#10'end;'#13#10'*)'#13#10#13#10'procedure TPropertyEditForm.HandleTreeDataNo'
  +'deSelect('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.Hand'
  +'leTreeDataDragStart('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: A'
  +'nsiString);           //!!!! do this with node id''s....'#13#10'var'#13#10
  +'  treeNode:TDataNode;'#13#10'  myXTree:TXTree;'#13#10'begin'#13#10'  //show'
  +'message(''dragstart. value=''+myValue);'#13#10'  // value is the text of th'
  +'e selected (dragged) node'#13#10'  {$ifndef JScript}'#13#10'  treeNode:=Fin'
  +'dDataNodeById(SystemNodeTree,nodeId,'''',true);'#13#10'  myXTree:=TXTree(tr'
  +'eenode.ScreenObject);'#13#10'  myXTree.SelectedNodeText:=myValue;'#13#10#13
  +#10'  {$else}'#13#10'  //treeNode:=FindDataNodeById(SystemNodeTree,nodeId,'''
  +''',true);'#13#10'  //myXTree:=TXTree(treenode.ScreenObject);'#13#10'  //myX'
  +'Tree.NodeBeingDragged:=myValue;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10
  +'procedure TPropertyEditForm.HandleTreeDataDrop('#13#10'  e:TEventStatus;nod'
  +'eID: AnsiString; myValue: AnsiString);         //!!!! node id''s'#13#10'var'
  +#13#10'  myXTree:TXTree;'#13#10'  treeNode:TDataNode;'#13#10'begin'#13#10'  '
  +'//showmessage(''drop.  data=''+myValue);'#13#10'  // SelectedNodeText is th'
  +'e node being dragged'#13#10'  // myValue is the target node'#13#10'  treeNo'
  +'de:=FindDataNodeById(SystemNodeTree,nodeId,'''',true);'#13#10'  myXTree:=TX'
  +'Tree(treenode.ScreenObject);'#13#10#13#10#13#10'  {$ifndef JScript}'#13#10
  +'  myXTree.MoveNode(myXTree.SelectedNodeText,myValue);'#13#10'  {$else}'#13
  +#10'  myXTree.MoveNode(myXTree.NodeBeingDragged,myValue);         //!!!! cha'
  +'nge this to use node id instead of text'#13#10'  myXTree.NodeBeingDragged:='
  +''''';'#13#10'  {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure TPropertyE'
  +'ditForm.InsertSiblingNode('#13#10'  e:TEventStatus;nodeID: AnsiString; myVa'
  +'lue: AnsiString);'#13#10'var'#13#10'  TheTree:TDataNode;'#13#10'  i:integer'
  +';'#13#10'begin'#13#10'  TheTree:=FindDataNodeById(PropertyEditVBox66.myNode'
  +',''PropertyEditWidget'','''',true);'#13#10'  i:=1;'#13#10'  while (not TXtr'
  +'ee(TheTree.ScreenObject).NodeTextIsUnique(''New Node''+intToStr(i))) do'#13
  +#10'    i:=i+1;'#13#10'  TXtree(TheTree.ScreenObject).InsertNewSiblingNode('
  +'''New Node''+intToStr(i));'#13#10'end;'#13#10#13#10'procedure TPropertyEdit'
  +'Form.InsertChildNode('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: '
  +'AnsiString);'#13#10'var'#13#10'  TheTree:TDataNode;'#13#10'  i:integer;'#13
  ,#10'begin'#13#10'  TheTree:=FindDataNodeById(PropertyEditVBox66.myNode,''Pro'
  +'pertyEditWidget'','''',true);'#13#10'  i:=1;'#13#10'  while (not TXtree(The'
  +'Tree.ScreenObject).NodeTextIsUnique(''New Node''+intToStr(i))) do'#13#10'  '
  +'  i:=i+1;'#13#10'  TXtree(TheTree.ScreenObject).InsertNewChildNode(''New No'
  +'de''+intToStr(i));'#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.Del'
  +'eteTreeNode('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiStrin'
  +'g);'#13#10'var'#13#10'  TheTree:TDataNode;'#13#10'begin'#13#10'  TheTree:=F'
  +'indDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'','''',true)'
  +';'#13#10#13#10'  TXtree(TheTree.ScreenObject).DeleteSelectedNode;'#13#10#13
  +#10#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.CopyTreeNode('#13#10
  +'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10
  +'  TheTree:TDataNode;'#13#10'  {$ifndef JScript}'#13#10'  myTree:TmyTreeView'
  +';'#13#10'  {$endif}'#13#10'begin'#13#10'  TheTree:=FindDataNodeById(Propert'
  +'yEditVBox66.myNode,''PropertyEditWidget'','''',true);'#13#10'  {$ifndef JSc'
  +'ript}'#13#10'  myTree:=TmyTreeView(TXTree(TheTree.ScreenObject).myControl);'
  +#13#10'  if myTree.Selected<>nil then'#13#10'  begin'#13#10'    CopiedTreeNo'
  +'de:=myTree.Selected;'#13#10'  end'#13#10'  else'#13#10'    showmessage(''Pl'
  +'ease select a tree node first'');'#13#10'{$else}'#13#10'  CopiedTreeNode:=T'
  +'XTree(TheTree.ScreenObject).SelectedNodeId;'#13#10'{$endif}'#13#10'end;'#13
  +#10#13#10'{$ifndef JScript}'#13#10'function CopyThisNode(myTree:TmyTreeView;'
  +'ANode,NewParent:TTreeNode):TTreeNode;'#13#10'var'#13#10'  NodeParent:TTreeN'
  +'ode;'#13#10'  NodeText:String;'#13#10'begin'#13#10'  NodeText:=ANode.Text;'
  +#13#10'//  NodeText:=myTree.MakeTextUnique(NodeText);'#13#10'  NodeParent:=m'
  +'yTree.Items.AddChild(NewParent,NodeText);'#13#10'  if ANode.HasChildren the'
  +'n          //!!!! suspect this built-in also needs uniqueness for node text'
  +'s...'#13#10'  begin'#13#10'    ANode:=ANode.GetFirstChild;'#13#10'    if AN'
  +'ode<>nil then'#13#10'    begin'#13#10'      CopyThisNode(myTree,ANode,NodeP'
  +'arent);'#13#10'      repeat'#13#10'        ANode := ANode.getNextSibling;'
  +#13#10'        if ANode<>nil then'#13#10'        begin'#13#10'          Copy'
  +'ThisNode(myTree,ANode,NodeParent);'#13#10'        end;'#13#10'      until A'
  +'Node = nil;'#13#10'    end;'#13#10'  end;'#13#10'  result:=NodeParent;'#13
  +#10'end;'#13#10'{$endif}'#13#10#13#10'procedure TPropertyEditForm.PasteTreeN'
  +'ode('#13#10'  e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13
  +#10'var'#13#10'  TheTree:TDataNode;'#13#10'  {$ifndef JScript}'#13#10'  myTr'
  +'ee:TmyTreeView;'#13#10'  {$endif}'#13#10'  i:integer;'#13#10'begin'#13#10'{'
  +'$ifndef JScript}'#13#10'  if (CopiedTreeNode<>nil) then'#13#10'  begin'#13
  +#10'    TheTree:=FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWi'
  +'dget'','''',true);'#13#10'    myTree:=TmyTreeView(TXTree(TheTree.ScreenObje'
  +'ct).myControl);'#13#10'    if (myTree.Selected<>nil) then'#13#10'    begin'
  +#13#10'      // traverse the copied tree node, inserting new node and childr'
  +'en at selected spot'#13#10'      myTree.Selected:=CopyThisNode(myTree,Copie'
  +'dTreeNode,myTree.Selected);'#13#10'    end'#13#10'    else'#13#10'      sho'
  +'wmessage(''Please select a tree node first'');'#13#10'  end'#13#10'{$else}'
  +#13#10'  if (CopiedTreeNode<>'''') then'#13#10'  begin'#13#10'    TheTree:=F'
  +'indDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'','''',true)'
  +';'#13#10'    if TXTree(TheTree.ScreenObject).SelectedNodeId<>'''' then'#13
  +#10'    begin'#13#10'      //!!!!'#13#10'    end'#13#10'    else'#13#10'    '
  +'  showmessage(''Please select a tree node first'');'#13#10'  end'#13#10'{$e'
  +'ndif}'#13#10'  else'#13#10'    showmessage(''Please copy a tree node first'
  +''');'#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.InsertTableRow(e:'
  +'TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  '
  +'myTable:TXTable;'#13#10'begin'#13#10'  myTable:=TXTable(FindDataNodeById(Pr'
  +'opertyEditVBox66.myNode,''PropertyEditWidget'','''',true).ScreenObject);'#13
  +#10'  myTable.AddTableRows(1);'#13#10'  {$ifndef JScript}'#13#10'  TStringGr'
  +'id(myTable.myControl).FixedRows:=0; //allow editing column headers'#13#10' '
  +' {$endif}'#13#10#13#10'end;'#13#10#13#10'procedure TPropertyEditForm.Insert'
  +'TableColumn(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString);'#13#10
  +'var'#13#10'  myTable:TXTable;'#13#10'begin'#13#10'  myTable:=TXTable(FindDa'
  +'taNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'','''',true).Scre'
  +'enObject);'#13#10'  myTable.AddTableColumns(1);'#13#10'  {$ifndef JScript}'
  +#13#10'  TStringGrid(myTable.myControl).FixedRows:=0; //allow editing column'
  +' headers'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TPropertyEdit'
  +'Form.DeleteTableRow(e:TEventStatus;nodeID: AnsiString; myValue: AnsiString)'
  +';'#13#10'var'#13#10'  myTable:TXTable;'#13#10'begin'#13#10'  myTable:=TXTab'
  ,'le(FindDataNodeById(PropertyEditVBox66.myNode,''PropertyEditWidget'','''',t'
  +'rue).ScreenObject);'#13#10'  myTable.DeleteSelectedRow;'#13#10'end;'#13#10
  +#13#10'procedure TPropertyEditForm.DeleteTableColumn(e:TEventStatus;nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'var'#13#10'  myTable:TXTable;'#13
  +#10'  r,c:integer;'#13#10'begin'#13#10'  myTable:=TXTable(FindDataNodeById(P'
  +'ropertyEditVBox66.myNode,''PropertyEditWidget'','''',true).ScreenObject);'
  +#13#10'  r:=myTable.SelectedRow;'#13#10'  c:=myTable.SelectedCol;'#13#10'  /'
  +'/i:=TStringGridAccess(TStringGrid(myTable.myControl)).Col;'#13#10'  if (r<0'
  +') or (c<0) then'#13#10'    showmessage(''column not selected'')'#13#10'  el'
  +'se if (c=0) and (myTable.NumCols=1) then'#13#10'    showmessage(''cannot de'
  +'lete all columns'')'#13#10'  else'#13#10'  begin'#13#10'    {$ifndef JScrip'
  +'t}'#13#10'    TStringGridAccess(TStringGrid(myTable.myControl)).DeleteCol(c'
  +');'#13#10'    {$else}'#13#10'    asm'#13#10'        var ob = document.getEl'
  +'ementById(myTable.NameSpace+myTable.NodeName+''Contents'');'#13#10'        '
  +'if (ob!=null) {'#13#10'        for (var i = 0, row; row = ob.rows[i]; i++) '
  +'{'#13#10'                row.deleteCell(c);'#13#10'            } }'#13#10' '
  +'   end;'#13#10'    {$endif}'#13#10'    myTable.TableData:=myTable.Construct'
  +'DataString;'#13#10'    {$ifndef JScript}'#13#10'    TStringGrid(myTable.myC'
  +'ontrol).FixedRows:=0; //allow editing column headers'#13#10'    {$endif}'#13
  +#10'  end;'#13#10'end;'#13#10#13#10#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('inputselectunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InputSelectUnit;'#13
  +#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10
  +'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUt'
  +'ils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, Graphic'
  +'s, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, TypInfo, LazIDEInt'
  +'f,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'#13#10'  {$e'
  +'lse}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  XScrollBox, XVBox, XHBo'
  +'x, XTree, XMemo, XTabControl, XButton, XLabel,'#13#10'  XEditBox, XCheckBox'
  +', XHyperLink, XRadioBtns, XCode, XForm, XComboBox,'#13#10'  XColorPicker,Ev'
  +'entsInterface ;'#13#10#13#10'type'#13#10#13#10'  { TInputSelectForm }'#13#10
  +#13#10'  TInputSelectForm = class(TXForm)'#13#10'    InputSelectTree: TXTree'
  +';'#13#10'    InputSelectVBox1: TXVBox;'#13#10'    InputSelectDoneBtn: TXBut'
  +'ton;'#13#10'    {$ifndef JScript}'#13#10'    procedure FormCreate(Sender: T'
  +'Object);'#13#10'    procedure FormResize(Sender: TObject);'#13#10'    {$end'
  +'if}'#13#10'    procedure Initialise;'#13#10'    procedure InputSelectClosed'
  +';'#13#10'    procedure InputSelectDoneBtnHandleButtonClick(e:TEventStatus;n'
  +'odeID: AnsiString; myValue: AnsiString);'#13#10'    procedure InputSelectTr'
  +'eeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStrin'
  +'g);'#13#10'  private'#13#10#13#10'  public'#13#10'    ExclNodeName, ExclPro'
  +'pertyName, PropType : String;'#13#10'    SelectedItem:String;'#13#10'    Ta'
  +'rgetEditBoxNode:TDataNode;'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  In'
  +'putSelectForm: TInputSelectForm;'#13#10'  InputSelectStatus:String;'#13#10
  +#13#10'implementation'#13#10'uses xobjectinsp,CodeEditor;'#13#10'{$R *.lfm}'
  +#13#10#13#10'{ TInputSelectForm }'#13#10'procedure TInputSelectForm.Initiali'
  +'se;'#13#10'var'#13#10'  treestring, excludemyname:string;'#13#10'  Exclusio'
  +'ns:TStringList;'#13#10'begin'#13#10'  SelectedItem:='''';'#13#10'  InputSel'
  +'ectStatus:=''Cancel'';'#13#10'  Exclusions:=TStringList.Create;'#13#10'  Ex'
  +'clusions.Add(ResourceDataRootName);'#13#10'  excludemyname:=ExclNodeName;'
  +#13#10'  if ExclPropertyName<>'''' then'#13#10'    excludemyname:=excludemyn'
  +'ame+''.''+exclPropertyName;'#13#10'  Exclusions.Add(excludemyname);'#13#10
  +'  //showmessage(''ConstructSystemTreeString in inputselectform'');'#13#10' '
  +' treestring:= ConstructSystemTreeString(SystemNodeTree,0,true,true,Exclusio'
  +'ns,PropType);'#13#10'  InputSelectTree.TreeData:=treestring;'#13#10'  FreeA'
  +'ndNil(Exclusions);'#13#10'end;'#13#10#13#10'procedure TInputSelectForm.Inpu'
  +'tSelectDoneBtnHandleButtonClick( e:TEventStatus;nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'begin'#13#10'  InputSelectStatus:=''ok'';'#13#10'  TX'
  +'Form(self).Showing:=''No'';'#13#10'  {$ifdef JScript}'#13#10'  InputSelectC'
  +'losed;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10
  +'procedure TInputSelectForm.FormCreate(Sender: TObject);'#13#10'//var'#13#10
  +'//  myNode:TDataNode;'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'
  +#13#10'end;'#13#10#13#10'procedure TInputSelectForm.FormResize(Sender: TObje'
  +'ct);'#13#10'begin'#13#10'  DoFormResize(self, InputSelectVBox1);'#13#10'end'
  +';'#13#10#13#10'{$endif}'#13#10#13#10'procedure TInputSelectForm.InputSelect'
  +'TreeHandleTreeNodeClick(e:TEventStatus;nodeID: AnsiString; myValue: AnsiStr'
  +'ing);'#13#10'// myValue is the internal ID of the clicked treenode.'#13#10
  +'// SelectedItem stores the selected node Text.'#13#10'var'#13#10'  NodeText'
  +':String;'#13#10'begin'#13#10'  NodeText:=InputSelectTree.SelectedNodeText;'
  +#13#10'  SelectedItem:=NodeText;'#13#10'end;'#13#10#13#10'procedure TInputSe'
  +'lectForm.InputSelectClosed;'#13#10'begin'#13#10'  if InputSelectStatus=''ok'
  +''' then'#13#10'  begin'#13#10'    TXEditBox(TargetEditBoxNode.ScreenObject)'
  +'.ItemValue:=self.SelectedItem;'#13#10'    CodeEditForm.EditInputSource(nil,'
  +'TargetEditBoxNode.NodeName,self.SelectedItem);'#13#10'    //CodeEditForm.Ed'
  +'itInputCombo(TargetEditBoxNode.NodeName,self.SelectedItem);'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('popupmemo','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit PopupMemo;'#13#10#13
  +#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, Nod'
  +'eUtils,'#13#10'  {$ifndef JScript}'#13#10'  LazsUtils,'#13#10'  {$endif}'#13
  +#10'  XVBox,  XMemo, XForm, XHTMLText;'#13#10#13#10'type'#13#10#13#10'  { TP'
  +'opupMemoForm }'#13#10#13#10'  TPopupMemoForm = class(TXForm)'#13#10'    Pop'
  +'upMemoVBox: TXVBox;'#13#10'    PopupHelpText: TXMemo;'#13#10'    {$ifndef J'
  +'Script}'#13#10'    procedure FormCreate(Sender: TObject);'#13#10'    proced'
  +'ure FormResize(Sender: TObject);'#13#10'    procedure FormShow(Sender: TObj'
  +'ect);'#13#10'    {$endif}'#13#10'  private'#13#10#13#10'  public'#13#10'   '
  +' procedure InitialiseMemo;'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  Po'
  +'pupMemoForm: TPopupMemoForm;'#13#10#13#10'implementation'#13#10'uses'#13#10
  +'  XObjectInsp;'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{ TPopupMemoForm }'#13
  +#10#13#10'{$ifndef JScript}'#13#10'procedure TPopupMemoForm.FormCreate(Sende'
  +'r: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'  I'
  +'nitialiseMemo;'#13#10'end;'#13#10#13#10'procedure TPopupMemoForm.FormResize'
  +'(Sender: TObject);'#13#10'begin'#13#10'  DoFormResize(self, PopupMemoVBox);'
  +#13#10'end;'#13#10#13#10'procedure TPopupMemoForm.FormShow(Sender: TObject);'
  +#13#10'begin'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure TPopup'
  +'MemoForm.InitialiseMemo;'#13#10'begin'#13#10'  PopupHelpText.ItemValue:='#13
  +#10'  ''A number of interface functions have been provided for interaction w'
  +'ith the XIDE framework and project data.'' + LineEnding +'#13#10'  '' '' + '
  +'LineEnding +'#13#10'  ''procedure ShowMessage(msg:String);       '' + LineE'
  +'nding +'#13#10'  ''                            displays a popup alert '' + '
  +'LineEnding +'#13#10'  ''procedure ShowXForm(XFormID:String; modal:Boolean);'
  +'  '' + LineEnding +'#13#10'  ''                            opens a XForm. ['
  +'note:''''modal=false'''' currently only effective on desktop] '' + LineEndi'
  +'ng +'#13#10'  ''procedure CloseXForm(XFormID:String);  '' + LineEnding +'#13
  +#10'  ''                            closes a XForm.  '' + LineEnding +'#13#10
  +'  ''procedure SetPropertyValue(nodeName,propName,newValue:String);  '' + Li'
  +'neEnding +'#13#10'  ''                            set a component property '
  +' '' + LineEnding +'#13#10'  ''procedure SetPropertyValueIndexed(nodeName,pr'
  +'opName:String;newValue:TStringArray; x,y:integer); ''  + LineEnding +'#13#10
  +'  ''                            set a portion of a component array property'
  +'  ''  + LineEnding +'#13#10'  ''function  GetPropertyValue(nodeName,propNam'
  +'e:String);  ''  + LineEnding +'#13#10'  ''                            retur'
  +'ns a component property value (as string) ''   + LineEnding +'#13#10'//  '''
  +'function  GetPropertyValueIndexed(nodeName,propName:String; x,y,w,h:integer'
  +'):TstringArray; ''  + LineEnding +'#13#10'//  ''                           '
  +' returns a portion of a component array property '' + LineEnding +'#13#10' '
  +' ''function  Confirm(TextMessage:string):boolean;   ''  + LineEnding +'#13
  +#10'  ''                            displays a confirmation alert; returns t'
  +'rue/false ''  + LineEnding +'#13#10'  ''function  Prompt(TextMessage,prompt'
  +'String:string):string; ''  + LineEnding +'#13#10'  ''                      '
  +'      displays an input box; returns user-entered string ''   + LineEnding '
  +'+'#13#10'  ''procedure CopyToClip(str:String); ''    + LineEnding +'#13#10
  +'  ''                            copies the given string to the clipboard '''
  +'  + LineEnding +'#13#10'  ''function  CopyFromClip(e:TEventStatus):String; '
  +''' + LineEnding +'#13#10'  ''   CopyFromClip is an async function (required'
  +' for browser use), so it must be coded in the  '' + LineEnding +'#13#10'  '
  +'''   ''''Init'''' section of an event handler. The result here is a blank s'
  +'tring.                  '' + LineEnding +'#13#10'  ''   The clipboard strin'
  +'g is held in e.ReturnString, which cn be picked up in the              '' +'
  +' LineEnding +'#13#10'  ''   ''''Main'''' section of the event handler.     '
  +'                                               '' + LineEnding +'#13#10'  '
  +'''function  LoadTableFromExcelCopy(TableName,CopiedString:String);  ''  + L'
  +'ineEnding +'#13#10'  ''                            Populate the given TXTab'
  +'le component with a string in Excel format (eg. as copied from a spreadshee'
  +'t)  ''  + LineEnding +'#13#10'  ''procedure DoEvent(EventType,NodeId,myValu'
  +'e:String); ''  + LineEnding +'#13#10'  ''                            execut'
  ,'es the event handler defined for the given event type and component. ''  + '
  +'LineEnding +'#13#10'  ''procedure MoveComponent(nodeId:string;NewParentId:s'
  +'tring); ''  + LineEnding +'#13#10'  ''                            re-parent'
  +'s the given UI component ''  + LineEnding +'#13#10'  ''procedure CopyCompon'
  +'ent(nodeId,NewParentId,NewName:string); ''  + LineEnding +'#13#10'  ''     '
  +'                       copies the given UI component and places the clone u'
  +'nder the given parent ''  + LineEnding +'#13#10'  ''function  DeleteCompone'
  +'nt(nodeId:string;ShowNotFoundMsg:Boolean=true):Boolean; ''  + LineEnding +'
  +#13#10'  ''                            deletes the given UI component. Retur'
  +'ns false if not done. ''   + LineEnding +'#13#10'  ''function  GetGPUParamN'
  +'umValue(GPUName,pName:String):TNumArray; ''  + LineEnding +'#13#10'  ''    '
  +'                        For the given TXGPUCanvas component, returns the va'
  +'lue of the named numeric parameter as an array ''  + LineEnding +'#13#10'  '
  +'''function  GetGPUConstIntValue(GPUName,pName:String):integer;''  + LineEnd'
  +'ing +'#13#10'  ''                            For the given TXGPUCanvas comp'
  +'onent, returns the value of the named integer parameter ''  + LineEnding +'
  +#13#10'  ''function  GetGPUParamImgValue(GPUName,pName:String):TImgArray;'' '
  +' + LineEnding +'#13#10'  ''                            For the given TXGPUC'
  +'anvas component, returns the value of the named image parameter as an array'
  +' ''  + LineEnding +'#13#10'  ''procedure SetGPUParamNumValue(GPUName,pName:'
  +'String;pValue:TNumArray);''  + LineEnding +'#13#10'  ''                    '
  +'        For the given TXGPUCanvas component, sets the value of the named im'
  +'age parameter as an array ''  + LineEnding +'#13#10'  ''procedure SetGPUCon'
  +'stIntValue(GPUName,pName:String;pValue:integer);''  + LineEnding +'#13#10' '
  +' ''                            For the given TXGPUCanvas component, sets th'
  +'e value of the named integer parameter ''  + LineEnding +'#13#10'  ''proced'
  +'ure SetGPUParamImgValue(GPUName,pName:String;pValue:TImgArray);''  + LineEn'
  +'ding +'#13#10'  ''                            For the given TXGPUCanvas com'
  +'ponent, sets the value of the named image parameter as an array  ''  + Line'
  +'Ending +'#13#10'  ''procedure ShowBusy;''  + LineEnding +'#13#10'  ''      '
  +'                      Shows the busy cursor  ''  + LineEnding +'#13#10'  '''
  +'procedure HideBusy;''   + LineEnding +'#13#10'  ''                         '
  +'   Hides the busy cursor  ''  + LineEnding +'#13#10'  ''procedure ProcessMe'
  +'ssages;''  + LineEnding +'#13#10'  ''                            tba  ''  +'
  +' LineEnding +'#13#10'  ''procedure MovePointerBetweenComponents(NodeName1,N'
  +'odeName2,Sub1,Sub2:String);''  + LineEnding +'#13#10'  ''                  '
  +'          Runs an animated pointer on screen between the two given UI compo'
  +'nents  ''  + LineEnding +'#13#10'  ''procedure HidePointer;''  + LineEnding'
  +' +'#13#10'  ''                            Hides the animated pointer (that '
  +'was raised by MovePointerBetweenComponents)  ''  + LineEnding +'#13#10'  '''
  +'function  UserSystemAsString():String;''  + LineEnding +'#13#10'  ''       '
  +'                     Returns the string representation of the current user '
  +'system (can be imported to XIDE via System>Load)  ''  + LineEnding +'#13#10
  +'  ''function  LoadUserSystemString(SystemString:String);''  + LineEnding +'
  +#13#10'  ''                            Imports a new user system to the XIDE'
  +' framework (can only be done in ''''Design'''' mode) ''  + LineEnding +'#13
  +#10'  ''procedure ConsoleLog(txt:String);''  + LineEnding +'#13#10'  ''     '
  +'                       Writes a debug message to the console log  ''  + Lin'
  +'eEnding;'#13#10'  PopupHelpText.ItemValue:=PopupHelpText.ItemValue +'#13#10
  +'  ''function  Array2DToString(arr:T2DNumArray):String;''  + LineEnding +'#13
  +#10'  ''                            Convert numeric 2D array to string form '
  +'eg. [[...],...,[...]]  ''  + LineEnding +'#13#10'  ''function  GetGPUPixelA'
  +'rray(GPUName:String):T3DNumArray; ''  + LineEnding +'#13#10'  ''           '
  +'                 Fetch the current Pixel array for the given TXGPUCanvas co'
  +'mponent  ''  + LineEnding +'#13#10'  ''function  GetGPUPixelArrayAsString(G'
  +'PUName:String):String;''  + LineEnding +'#13#10'  ''                       '
  +'     Fetch the current Pixel array in string format for the given TXGPUCanv'
  +'as component  ''  + LineEnding +'#13#10'  ''function  GetGPUStageArray(GPUN'
  +'ame:String):T3DNumArray; ''  + LineEnding +'#13#10'  ''                    '
  +'        Fetch the stage array (resulting from the non-graphical kernel stac'
  +'k) for the given TXGPUCanvas component  ''  + LineEnding +'#13#10'  ''funct'
  +'ion  GetGPUStageArrayAsString(GPUName:String):String;''  + LineEnding +'#13
  +#10'  ''                            Fetch the stage array in string format f'
  +'or the given TXGPUCanvas component  ''  + LineEnding;'#13#10#13#10'end;'#13
  ,#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('interfacetypes','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InterfaceTypes;'#13#10
  +'(*'#13#10'   Interface declarations'#13#10'   for use with the dynamically '
  +'created dll, used for executing user event code (also see unit CompileUserC'
  +'ode)'#13#10' *)'#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10
  +'{$endif}'#13#10#13#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtil'
  +'s, EventsInterface;'#13#10#13#10'type'#13#10'Tshowmessage=procedure(msg:Str'
  +'ing) of object;'#13#10'Tsetpropertyvalue=procedure(nodeName:String;propName'
  +':String;newValue:String) of object;'#13#10'TsetpropertyvalueIndexed=procedu'
  +'re(nodeName:String;propName:String;newValue:TStringArray;x,y:integer) of ob'
  +'ject;'#13#10'Tconfirm=function(TextMessage:string):boolean of object;'#13#10
  +'Tgetpropertyvalue=function(nodeName:String;propName:String):string  of obje'
  +'ct;'#13#10'//TgetpropertyvalueIndexed=function(nodeName:String;propName:Str'
  +'ing; x,y,w,h:integer):TStringArray  of object;'#13#10'Tprompt=function(Text'
  +'Message,promptString:string):string of object;'#13#10'Tshowxform=procedure('
  +'XFormID:String; modal:Boolean) of object;'#13#10'Tclosexform=procedure(XFor'
  +'mID:String) of object;'#13#10'TCopyToClip=procedure(str:String) of object;'
  +#13#10'TCopyFromClip=function(e:TEventStatus):String of object;'#13#10'TLoad'
  +'TableFromExcelCopy=procedure(TableName,CopiedString:String) of object;'#13
  +#10'TDoEvent=procedure(EventType,NodeId,myValue:String) of object;'#13#10'TM'
  +'oveComponent=procedure(nodeId:string;NewParentId:string) of object;'#13#10
  +'TCopyComponent=procedure(nodeId,NewParentId,NewName:string) of object;'#13
  +#10'TDeleteComponent=function(nodeId:string;ShowNotFoundMsg:Boolean=true):Bo'
  +'olean of object;'#13#10'TGetGPUParamNumValue=function(GPUName,pName:String)'
  +':TNumArray of object;'#13#10'TGetGPUConstIntValue=function(GPUName,pName:St'
  +'ring):integer of object;'#13#10'TGetGPUParamImgValue=function(GPUName,pName'
  +':String):TImgArray of object;'#13#10'TSetGPUParamNumValue=procedure(GPUName'
  +',pName:String;pValue:TNumArray) of object;'#13#10'TSetGPUConstIntValue=proc'
  +'edure(GPUName,pName:String;pValue:integer) of object;'#13#10'TSetGPUParamIm'
  +'gValue=procedure(GPUName,pName:String;pValue:TImgArray) of object;'#13#10'T'
  +'ShowBusy=procedure of object;'#13#10'THideBusy=procedure of object;'#13#10
  +'TProcessMessages=procedure of object;'#13#10'TMovePointerBetweenComponents='
  +'procedure(NodeName1,NodeName2,Sub1,Sub2:String) of object;'#13#10'THidePoin'
  +'ter=procedure of object;'#13#10'TUserSystemAsString=function():String of ob'
  +'ject;'#13#10'TLoadUserSystemString=procedure(SystemString:String) of object'
  +';'#13#10'TConsoleLog=procedure(txt:String) of object;'#13#10'TArray2DToStri'
  +'ng=function(arr:T2DNumArray):String of object;'#13#10'TGetGPUPixelArray=fun'
  +'ction(GPUName:String):T3DNumArray of object;'#13#10'TGetGPUPixelArrayAsStri'
  +'ng=function(GPUName:String):String of object;'#13#10'TGetGPUStageArray=func'
  +'tion(GPUName:String):T3DNumArray of object;'#13#10'TGetGPUStageArrayAsStrin'
  +'g=function(GPUName:String):String of object;'#13#10#13#10'{$ifdef JScript}'
  +#13#10'var'#13#10'showmessage:Tshowmessage;'#13#10'showxform:Tshowxform;'#13
  +#10'closexform:Tclosexform;'#13#10'confirm:Tconfirm;'#13#10'prompt:Tprompt;'
  +#13#10'setpropertyvalue:Tsetpropertyvalue;'#13#10'setpropertyvalueindexed:Ts'
  +'etpropertyvalueindexed;'#13#10'getpropertyvalue:Tgetpropertyvalue;'#13#10'/'
  +'/getpropertyvalueindexed:Tgetpropertyvalueindexed;'#13#10'copytoclip:TCopyT'
  +'oClip;'#13#10'copyfromclip:TCopyFromClip;'#13#10'LoadTableFromExcelCopy:TLo'
  +'adTableFromExcelCopy;'#13#10'doevent:TDoEvent;'#13#10'movecomponent:TMoveCo'
  +'mponent;'#13#10'copycomponent:TCopyComponent;'#13#10'deletecomponent:TDelet'
  +'eComponent;'#13#10'getgpuparamnumvalue:TGetGPUParamNumValue;'#13#10'getgpuc'
  +'onstintvalue:TGetGPUConstIntValue;'#13#10'getgpuparamimgvalue:TGetGPUParamI'
  +'mgValue;'#13#10'setgpuparamnumvalue:TSetGPUParamNumValue;'#13#10'setgpucons'
  +'tintvalue:TSetGPUConstIntValue;'#13#10'setgpuparamimgvalue:TSetGPUParamImgV'
  +'alue;'#13#10'showbusy:TShowBusy;'#13#10'hidebusy:THideBusy;'#13#10'processm'
  +'essages:TProcessMessages;'#13#10'movepointerbetweencomponents:TMovePointerB'
  +'etweenComponents;'#13#10'hidepointer:THidePointer;'#13#10'UserSystemAsStrin'
  +'g:TUserSystemAsString;'#13#10'LoadUserSystemString:TLoadUserSystemString;'
  +#13#10'ConsoleLog:TConsoleLog;'#13#10'Array2DToString:TArray2DToString;'#13
  +#10'GetGPUPixelArray:TGetGPUPixelArray;'#13#10'GetGPUPixelArrayAsString:TGet'
  +'GPUPixelArrayAsString;'#13#10'GetGPUStageArray:TGetGPUStageArray;'#13#10'Ge'
  ,'tGPUStageArrayAsString:TGetGPUStageArrayAsString;'#13#10#13#10#13#10'var Ev'
  +'entsNameSpace:String;'#13#10#13#10'type TMethodsClass = class(TObject)'#13
  +#10' public'#13#10' CurrentEventType:String;'#13#10' CurrentNodeId:String;'
  +#13#10#13#10' procedure mmiSetEventsNameSpace(NameSpace:String);'#13#10' pro'
  +'cedure mmishowmessage(msg:String);'#13#10' procedure mmiShowXForm(XFormID:S'
  +'tring; modal:Boolean);'#13#10' procedure mmiCloseXForm(XFormID:String);'#13
  +#10' procedure mmisetpropertyvalue(nodeName:String;propName:String;newValue:'
  +'String);'#13#10' procedure mmisetpropertyvalueindexed(nodeName:String;propN'
  +'ame:String;newValue:TStringArray; x,y:integer);'#13#10' function mmigetprop'
  +'ertyvalue(nodeName:String;propName:String):string;'#13#10'// function mmige'
  +'tpropertyvalueindexed(nodeName:String;propName:String; x,y,w,h:integer):Tst'
  +'ringArray;'#13#10' Function mmiconfirm(TextMessage:string):boolean;'#13#10
  +' Function mmiprompt(TextMessage,promptString:string):string;'#13#10' proced'
  +'ure mmiCopyToClip(str:String);'#13#10' function mmiCopyFromClip(e:TEventSta'
  +'tus):String;'#13#10' procedure mmiLoadTableFromExcelCopy(TableName,CopiedSt'
  +'ring:String);'#13#10' procedure mmiDoEvent(EventType,NodeId,myValue:String)'
  +';'#13#10' procedure mmiMoveComponent(nodeId:string;NewParentId:string);'#13
  +#10' procedure mmiCopyComponent(nodeId,NewParentId,NewName:string);'#13#10' '
  +'function mmiDeleteComponent(nodeId:string;ShowNotFoundMsg:Boolean=true):Boo'
  +'lean;'#13#10' function mmiGetGPUParamNumValue(GPUName,pName:String):TNumArr'
  +'ay;'#13#10' function mmiGetGPUConstIntValue(GPUName,pName:String):integer;'
  +#13#10' function mmiGetGPUParamImgValue(GPUName,pName:String):TImgArray;'#13
  +#10' procedure mmiSetGPUParamNumValue(GPUName,pName:String;pValue:TNumArray)'
  +';'#13#10' procedure mmiSetGPUConstIntValue(GPUName,pName:String;pValue:inte'
  +'ger);'#13#10' procedure mmiSetGPUParamImgValue(GPUName,pName:String;pValue:'
  +'TImgArray);'#13#10' procedure mmiShowBusy;'#13#10' procedure mmiHideBusy;'
  +#13#10' procedure mmiProcessMessages;'#13#10' procedure mmiMovePointerBetwee'
  +'nComponents(NodeName1,NodeName2,Sub1,Sub2:String);'#13#10' procedure mmiHid'
  +'ePointer;'#13#10' function mmiUserSystemAsString():String;'#13#10' procedur'
  +'e mmiLoadUserSystemString(SystemString:String);'#13#10' procedure mmiConsol'
  +'eLog(txt:String);'#13#10' function mmiArray2DToString(arr:T2DNumArray):Stri'
  +'ng;'#13#10' function mmiGetGPUPixelArray(GPUName:String):T3DNumArray;'#13#10
  +' function mmiGetGPUPixelArrayAsString(GPUName:String):String;'#13#10' funct'
  +'ion mmiGetGPUStageArray(GPUName:String):T3DNumArray;'#13#10' function mmiGe'
  +'tGPUStageArrayAsString(GPUName:String):String;'#13#10'end;'#13#10#13#10'typ'
  +'e AnsiString=String;'#13#10#13#10'var appmethods : TMethodsClass;'#13#10#13
  +#10#13#10'{$endif}'#13#10#13#10#13#10'implementation'#13#10#13#10'{$ifdef JS'
  +'cript}'#13#10'procedure SetInterfaceContext;'#13#10'begin'#13#10'  appmetho'
  +'ds:=TMethodsClass.Create;'#13#10'  showmessage:=@AppMethods.mmishowmessage;'
  +#13#10'  showxform:=@appmethods.mmishowxform;'#13#10'  closexform:=@appmetho'
  +'ds.mmiclosexform;'#13#10'  setpropertyvalue:=@AppMethods.mmisetpropertyvalu'
  +'e;'#13#10'  setpropertyvalueindexed:=@AppMethods.mmisetpropertyvalueindexed'
  +';'#13#10'  getpropertyvalue:=@AppMethods.mmigetpropertyvalue;'#13#10'//  ge'
  +'tpropertyvalueindexed:=@AppMethods.mmigetpropertyvalueindexed;'#13#10'  con'
  +'firm:=@AppMethods.mmiconfirm;'#13#10'  prompt:=@AppMethods.mmiprompt;'#13#10
  +'  copytoclip:=@AppMethods.mmiCopyToClip;'#13#10'  copyfromclip:=@AppMethods'
  +'.mmiCopyFromClip;'#13#10'  LoadTableFromExcelCopy:=@AppMethods.mmiLoadTable'
  +'FromExcelCopy;'#13#10'  doevent:=@appmethods.mmiDoEvent;'#13#10'  movecompo'
  +'nent:=@appmethods.mmiMoveComponent;'#13#10'  copycomponent:=@appmethods.mmi'
  +'CopyComponent;'#13#10'  deletecomponent:=@appmethods.mmiDeleteComponent;'#13
  +#10'  getgpuparamnumvalue:=@appmethods.mmiGetGPUParamNumValue;'#13#10'  getg'
  +'puconstintvalue:=@appmethods.mmiGetGPUConstIntValue;'#13#10'  getgpuparamim'
  +'gvalue:=@appmethods.mmiGetGPUParamImgValue;'#13#10'  setgpuparamnumvalue:=@'
  +'appmethods.mmiSetGPUParamNumValue;'#13#10'  setgpuconstintvalue:=@appmethod'
  +'s.mmiSetGPUConstIntValue;'#13#10'  setgpuparamimgvalue:=@appmethods.mmiSetG'
  +'PUParamImgValue;'#13#10'  showbusy:=@appmethods.mmiShowBusy;'#13#10'  hideb'
  +'usy:=@appmethods.mmiHideBusy;'#13#10'  processmessages:=@appmethods.mmiProc'
  +'essMessages;'#13#10'  movepointerbetweencomponents:=@appmethods.mmimovepoin'
  +'terbetweencomponents;'#13#10'  hidepointer:=@appmethods.mmihidepointer;'#13
  +#10'  UserSystemAsString:=@appmethods.mmiUserSystemAsString;'#13#10'  LoadUs'
  +'erSystemString:=@appmethods.mmiLoadUserSystemString;'#13#10'  ConsoleLog:=@'
  +'appmethods.mmiConsoleLog;'#13#10'  Array2DToString:=@appmethods.mmiArray2DT'
  +'oString;'#13#10'  GetGPUPixelArray:=@appmethods.mmiGetGPUPixelArray;'#13#10
  +'  GetGPUPixelArrayAsString:=@appmethods.mmiGetGPUPixelArrayAsString;'#13#10
  ,'  GetGPUStageArray:=@appmethods.mmiGetGPUStageArray;'#13#10'  GetGPUStageAr'
  +'rayAsString:=@appmethods.mmiGetGPUStageArrayAsString;'#13#10'end;'#13#10#13
  +#10'procedure TMethodsClass.mmiSetEventsNameSpace(NameSpace:String);'#13#10
  +'begin'#13#10'  asm'#13#10'  pas.InterfaceTypes.EventsNameSpace=NameSpace;'
  +#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmishowmessage(msg:'
  +'String);'#13#10'begin'#13#10'  asm'#13#10'  alert(msg);'#13#10'  end;'#13#10
  +'end;'#13#10'procedure TMethodsClass.mmisetpropertyvalue(nodeName:String;pro'
  +'pName:String;newValue:String);'#13#10'begin'#13#10'  asm'#13#10'  pas.NodeU'
  +'tils.EditAttributeValue2(nodeName,pas.InterfaceTypes.EventsNameSpace,propNa'
  +'me,newValue);'#13#10'  end;'#13#10'end;'#13#10'procedure TMethodsClass.mmis'
  +'etpropertyvalueindexed(nodeName:String;propName:String;newValue:TStringArra'
  +'y; x,y:integer);'#13#10'begin'#13#10'  asm'#13#10'  pas.NodeUtils.EditAttri'
  +'buteValueIndexed(nodeName,pas.InterfaceTypes.EventsNameSpace,propName,newVa'
  +'lue,x,y);'#13#10#13#10#13#10'  if (pas.InterfaceTypes.EventsNameSpace!='''''
  +') {'#13#10#13#10'     var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUti'
  +'ls.SystemNodeTree,nodeName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10
  +'     if (mynode!=null) {'#13#10'       if (myNode.NodeType==''TXCompositeIn'
  +'tf'') {'#13#10'          // find the composite container'#13#10'          v'
  +'ar CompositeContainer=pas.XComposite.FindCompositeContainer(myNode);'#13#10
  +'          // set the equivalent property'#13#10'          if (CompositeCont'
  +'ainer!=null) {'#13#10'            CompositeContainer.SetAttributeValue(prop'
  +'Name,newValue);'#13#10'          }'#13#10'       }'#13#10'     }'#13#10'  }'
  +#13#10'  end;'#13#10'end;'#13#10'function TMethodsClass.mmigetpropertyvalue('
  +'nodeName:String;propName:String):String;'#13#10'var'#13#10'  val:String;'#13
  +#10'begin'#13#10'  asm'#13#10'  var myNode=pas.NodeUtils.FindDataNodeById(pa'
  +'s.NodeUtils.SystemNodeTree,nodeName,pas.InterfaceTypes.EventsNameSpace,true'
  +');'#13#10'  if (myNode!=null) {'#13#10'    // special case for actual heigh'
  +'t/width attributes...'#13#10'    if ((propName==''ActualHeight'')||(propNam'
  +'e==''ActualWidth'')) {'#13#10'      //alert(''mmigetpropertyvalue resetting'
  +' h/w'');'#13#10'      pas.XIFrame.ResetHWAttributes(myNode);'#13#10'    }'
  +#13#10#13#10'    val=myNode.GetAttributeAnyCase(propName,true).AttribValue;'
  +#13#10#13#10'    }'#13#10'  else  {'#13#10'    val='''';'#13#10'    }'#13#10
  +'  end;'#13#10'  result:=val;'#13#10'end;'#13#10'//function TMethodsClass.mm'
  +'igetpropertyvalueindexed(nodeName:String;propName:String; x,y,w,h:integer):'
  +'TstringArray;'#13#10'//begin'#13#10'//  //!!!!'#13#10'//  asm'#13#10'//  en'
  +'d;'#13#10'//end;'#13#10'Function TMethodsClass.mmiconfirm(TextMessage:strin'
  +'g):boolean;'#13#10'var'#13#10'  ok:boolean;'#13#10'begin'#13#10'  asm'#13#10
  +'  //ok=pas.StringUtils.confirm(TextMessage);'#13#10'  ok=pas.XObjectInsp.XI'
  +'DEConfirm(TextMessage);'#13#10'  end;'#13#10'  result:=ok;'#13#10'end;'#13
  +#10'Function TMethodsClass.mmiprompt(TextMessage,promptString:string):string'
  +';'#13#10'var'#13#10'  res:String;'#13#10'begin'#13#10'  asm'#13#10'  //res='
  +'pas.StringUtils.prompt(TextMessage,promptString);'#13#10'  res=pas.XObjectI'
  +'nsp.XIDEPrompt(TextMessage,promptString);'#13#10'  end;'#13#10'  result:=re'
  +'s;'#13#10'end;'#13#10'procedure TMethodsClass.mmiShowXForm(XFormID:String; '
  +'modal:Boolean);'#13#10'begin'#13#10'  asm'#13#10'  //alert(''calling showxf'
  +'orm ''+XFormID+'' ns=''+pas.InterfaceTypes.EventsNameSpace);'#13#10'  pas.X'
  +'Form.ShowXForm(XFormID,modal,pas.InterfaceTypes.EventsNameSpace);'#13#10'  '
  +'end;'#13#10'end;'#13#10'procedure TMethodsClass.mmiCloseXForm(XFormID:Strin'
  +'g);'#13#10'begin'#13#10'  asm'#13#10'  pas.XForm.CloseXForm(XFormID,pas.Int'
  +'erfaceTypes.EventsNameSpace);'#13#10'  end;'#13#10'end;'#13#10'procedure TM'
  +'ethodsClass.mmiCopyToClip(str:String);'#13#10'begin'#13#10'  asm'#13#10'  p'
  +'as.NodeUtils.myCopyToClip(''String'',str);'#13#10'  end;'#13#10'end;'#13#10
  +'function TMethodsClass.mmiCopyFromClip(e:TEventStatus):String;'#13#10'var'
  +#13#10'  str:String;'#13#10'begin'#13#10'  // CopyFromClip is an async funct'
  +'ion (required for browser use), so it must be coded in the'#13#10'  // ''In'
  +'it'' section of an event handler. The result here is a blank string.'#13#10
  +'  // mygetClipboardData pops up the paste dialog form, where the user must '
  +'press Ctrl-V.'#13#10'  // The pasted string is then held in e.ReturnString,'
  +' which cn be picked up in the'#13#10'  // ''Main'' section of the event han'
  +'dler.'#13#10'  str:='''';'#13#10'  asm'#13#10'    if (pas.EventLogging.Macr'
  +'oEventList.Replaying==false)'#13#10'    {'#13#10'      //alert(''CopyFromCl'
  +'ip. not replaying'');'#13#10'      if (e!=null)'#13#10'      {'#13#10'     '
  +'   e.AsyncProcsRunning.Add(''CopyFromClip'');'#13#10'        //alert(''mmiC'
  +'opyFromClip. completion event is ''+e.EventType);'#13#10'        pas.PasteD'
  ,'ialogUnit.CompletionEvent=e;'#13#10'        var str=pas.NodeUtils.mygetClip'
  +'boardData(''String'');'#13#10'      }'#13#10'      else'#13#10'        aler'
  +'t(''CopyFromClip must be called with parameter "e"'');'#13#10'    }'#13#10
  +'    else'#13#10'    {'#13#10'      // replaying an event, so can''t handle '
  +'async stuff...'#13#10'      // Instead, pop the original pasted string off '
  +'the eventlist.'#13#10'      var macroEvent=pas.EventLogging.AdvanceEventLog'
  +'();'#13#10'      if (macroEvent.EventType!=''MemoPaste'')'#13#10'      {'#13
  +#10'        alert(''oops cannot retrieve original pasted input'');'#13#10'  '
  +'      alert(''found event ''+macroEvent.EventType+'' ''+macroEvent.NodeId);'
  +#13#10'      }'#13#10'      else'#13#10'      {'#13#10'        str=macroEven'
  +'t.eventvalue;'#13#10'        e.ReturnString=str;'#13#10'        //alert(''f'
  +'ound MemoPaste.  str=''+str);'#13#10'      }'#13#10'    }'#13#10'  end;'#13
  +#10'  result:=str;   // have to await user pressing ctrl-v to get pasted dat'
  +'a'#13#10'end;'#13#10#13#10'procedure TMethodsClass.mmiLoadTableFromExcelCop'
  +'y(TableName,CopiedString:String);'#13#10'begin'#13#10'  asm'#13#10'    var '
  +'myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,TableNam'
  +'e,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myNode!=null)&&'
  +'(myNode.NodeType==''TXTable''))'#13#10'    {'#13#10'      myNode.LoadTableF'
  +'romExcelCopy(CopiedString);'#13#10'    }'#13#10'  end;'#13#10'end;'#13#10#13
  +#10'procedure TMethodsClass.mmiDoEvent(EventType,NodeId,myValue:String);'#13
  +#10'begin'#13#10'  asm'#13#10'  if (myValue==undefined) {myValue='''';}'#13
  +#10'  pas.EventLogging.ReplayEvent(null,EventType,NodeId,pas.InterfaceTypes.'
  +'EventsNameSpace,myValue);'#13#10#13#10'  end;'#13#10'end;'#13#10#13#10'proc'
  +'edure TMethodsClass.mmiMoveComponent(nodeId:string;NewParentId:string);'#13
  +#10'begin'#13#10'  asm'#13#10'  pas.XObjectInsp.OIMoveItem(nodeId,pas.Interf'
  +'aceTypes.EventsNameSpace,NewParentId);'#13#10'  end;'#13#10'end;'#13#10'pro'
  +'cedure TMethodsClass.mmiCopyComponent(nodeId,NewParentId,NewName:string);'
  +#13#10'begin'#13#10'  asm'#13#10'  pas.XObjectInsp.OICopyToNewParent(nodeId,'
  +'pas.InterfaceTypes.EventsNameSpace,NewParentId,NewName);'#13#10'  end;'#13
  +#10'end;'#13#10'function TMethodsClass.mmiDeleteComponent(nodeId:string;Show'
  +'NotFoundMsg:Boolean=true):Boolean;'#13#10'var'#13#10'  Deleted:Boolean;'#13
  +#10'begin'#13#10'  asm'#13#10'  Deleted=pas.XObjectInsp.OIDeleteItem(nodeId,'
  +'pas.InterfaceTypes.EventsNameSpace,ShowNotFoundMsg);'#13#10'  end;'#13#10' '
  +' result:=Deleted;'#13#10'end;'#13#10'procedure TMethodsClass.mmiSetGPUParam'
  +'NumValue(GPUName,pName:String;pValue:TNumArray);'#13#10'begin'#13#10'  asm'
  +#13#10'  //alert(''mmiSetGPUParamNumValue ''+GPUName+'' ''+pName);'#13#10'  '
  +'  var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,GP'
  +'UName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myNode!=nul'
  +'l)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      //alert(''calling Se'
  +'tParamNumValue ''+pName+'' ''+pValue);'#13#10'      myNode.SetParamNumValue'
  +'(pName,pValue,true);'#13#10'    }'#13#10'  end;'#13#10'end;'#13#10'procedur'
  +'e TMethodsClass.mmiSetGPUConstIntValue(GPUName,pName:String;pValue:integer)'
  +';'#13#10'begin'#13#10'asm'#13#10'//alert(''mmiSetGPUConstIntValue ''+GPUNam'
  +'e+'' ''+pName);'#13#10'  var myNode=pas.NodeUtils.FindDataNodeById(pas.Node'
  +'Utils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13
  +#10'  if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'    /'
  +'/alert(''calling SetConstIntValue ''+pName+'' ''+pValue);'#13#10'    myNode'
  +'.SetConstIntValue(pName,pValue);'#13#10'  }'#13#10'end;'#13#10'end;'#13#10
  +'procedure TMethodsClass.mmiSetGPUParamImgValue(GPUName,pName:String;pValue:'
  +'TImgArray);'#13#10'begin'#13#10'  asm'#13#10'  //alert(''mmiSetGPUParamImgV'
  +'alue ''+GPUName+'' ''+pName);'#13#10'    var myNode=pas.NodeUtils.FindDataN'
  +'odeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameS'
  +'pace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'
  +''')) {'#13#10'      //alert(''calling SetParamImgValue ''+pName+'' ''+pValu'
  +'e);'#13#10'      myNode.SetParamImgValue(pName,pValue,true);'#13#10'    }'
  +#13#10'  end;'#13#10'end;'#13#10'function TMethodsClass.mmiGetGPUParamNumVal'
  +'ue(GPUName,pName:String):TNumArray;'#13#10'var'#13#10'  pval:TNumArray;'#13
  +#10'begin'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById('
  +'pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,tru'
  +'e);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13
  +#10'      pval=myNode.GetParamNumValue(pName);'#13#10'    }'#13#10'  end;'#13
  +#10'  result:=pval;'#13#10'end;'#13#10'function TMethodsClass.mmiGetGPUConst'
  +'IntValue(GPUName,pName:String):integer;'#13#10'var'#13#10'  pval:integer;'
  +#13#10'begin'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeBy'
  ,'Id(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,'
  +'true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'
  +#13#10'      pval=myNode.GetConstIntValue(pName);'#13#10'    }'#13#10'  end;'
  +#13#10'  result:=pval;'#13#10'end;'#13#10#13#10'function TMethodsClass.mmiGe'
  +'tGPUParamImgValue(GPUName,pName:String):TImgArray;'#13#10'var'#13#10'  pval'
  +':TImgArray;'#13#10'begin'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.F'
  +'indDataNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.Eve'
  +'ntsNameSpace,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGP'
  +'UCanvas'')) {'#13#10'      pval=myNode.GetParamImgValue(pName);'#13#10'    '
  +'}'#13#10'  end;'#13#10'  result:=pval;'#13#10'end;'#13#10'procedure TMethod'
  +'sClass.mmiShowBusy;'#13#10'begin'#13#10'  asm'#13#10'    var ob=document.ge'
  +'tElementById(''Grey99'');'#13#10'    if (ob==null) {'#13#10'    pas.HTMLUti'
  +'ls.ShowGreyOverlay(''UIRoot'',''Grey99'');'#13#10'    }'#13#10'  end;'#13#10
  +'end;'#13#10'procedure TMethodsClass.mmiHideBusy;'#13#10'begin'#13#10'  asm'
  +#13#10'    pas.HTMLUtils.DeleteGreyOverlay(''Grey99'');'#13#10'  end;'#13#10
  +'end;'#13#10'procedure TMethodsClass.mmiProcessMessages;'#13#10'begin'#13#10
  +'  asm'#13#10'    //!!!!'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TM'
  +'ethodsClass.mmiMovePointerBetweenComponents(NodeName1,NodeName2,Sub1,Sub2:S'
  +'tring);      //!!!!namespace???'#13#10'begin'#13#10'  asm'#13#10'    pas.Ev'
  +'entLogging.MovePointer(EventsNameSpace,NodeName1,NodeName2,Sub1,Sub2,false)'
  +';'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TMethodsClass.mmiHidePoi'
  +'nter;'#13#10'begin'#13#10'  asm'#13#10'    var ptr = document.getElementByI'
  +'d("AutomatedCursor");'#13#10'    ptr.style.display = "none";'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'function TMethodsClass.mmiUserSystemAsString():Stri'
  +'ng;'#13#10'var'#13#10'  SystemString:String;'#13#10'begin'#13#10'  asm'#13
  +#10'  SystemString=pas.XObjectInsp.BuildSystemString(false);'#13#10'  end;'
  +#13#10'  result:=SystemString;'#13#10'end;'#13#10#13#10'procedure TMethodsCl'
  +'ass.mmiLoadUserSystemString(SystemString:String);'#13#10'begin'#13#10'  asm'
  +#13#10'    pas.NodeUtils.StartingUp=false;'#13#10'    pas.XObjectInsp.DoSyst'
  +'emLoad(SystemString,'''');'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure'
  +' TMethodsClass.mmiConsoleLog(txt:String);'#13#10'begin'#13#10'  asm'#13#10
  +'    console.log(txt);'#13#10'  end;'#13#10'end;'#13#10#13#10'function TMeth'
  +'odsClass.mmiArray2DToString(arr:T2DNumArray):String;'#13#10'var'#13#10'  st'
  +'r:String;'#13#10'begin'#13#10'  asm'#13#10'    str=pas.StringUtils.Num2dArr'
  +'ayToString(arr);'#13#10'  end;'#13#10'  result:=str;'#13#10'end;'#13#10#13
  +#10'function TMethodsClass.mmiGetGPUPixelArray(GPUName:String):T3DNumArray;'
  +#13#10'var'#13#10'  pxval:T3DNumArray;'#13#10'begin'#13#10'  pxval:=nil;'#13
  +#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils'
  +'.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'  '
  +'  if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      px'
  +'val=pas.XGPUCanvas.GetOutputArrayValue(GPUName);'#13#10'    }'#13#10'  end;'
  +#13#10'  result:=pxval;'#13#10'end;'#13#10#13#10'function TMethodsClass.mmiG'
  +'etGPUPixelArrayAsString(GPUName:String):String;'#13#10'var'#13#10'  pxval:S'
  +'tring;'#13#10'begin'#13#10'  pxval:='''';'#13#10'  asm'#13#10'    var myNod'
  +'e=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNodeTree,GPUName,pas.I'
  +'nterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myNode!=null)&&(myNode'
  +'.NodeType==''TXGPUCanvas'')) {'#13#10'      pxval=pas.XGPUCanvas.GetOutputA'
  +'rrayString(GPUName);'#13#10'    }'#13#10'  end;'#13#10'  result:=pxval;'#13
  +#10'end;'#13#10#13#10'function TMethodsClass.mmiGetGPUStageArray(GPUName:Str'
  +'ing):T3DNumArray;'#13#10'var'#13#10'  pxval:T3DNumArray;'#13#10'begin'#13#10
  +'  pxval:=nil;'#13#10'  asm'#13#10'    var myNode=pas.NodeUtils.FindDataNode'
  +'ById(pas.NodeUtils.SystemNodeTree,GPUName,pas.InterfaceTypes.EventsNameSpac'
  +'e,true);'#13#10'    if ((myNode!=null)&&(myNode.NodeType==''TXGPUCanvas''))'
  +' {'#13#10'      pxval=pas.XGPUCanvas.GetStageArrayValue(GPUName);'#13#10'  '
  +'  }'#13#10'  end;'#13#10'  result:=pxval;'#13#10'end;'#13#10#13#10'function'
  +' TMethodsClass.mmiGetGPUStageArrayAsString(GPUName:String):String;'#13#10'v'
  +'ar'#13#10'  pxval:String;'#13#10'begin'#13#10'  pxval:='''';'#13#10'  asm'
  +#13#10'    var myNode=pas.NodeUtils.FindDataNodeById(pas.NodeUtils.SystemNod'
  +'eTree,GPUName,pas.InterfaceTypes.EventsNameSpace,true);'#13#10'    if ((myN'
  +'ode!=null)&&(myNode.NodeType==''TXGPUCanvas'')) {'#13#10'      pxval=pas.XG'
  +'PUCanvas.GetStageArrayString(GPUName);'#13#10'    }'#13#10'  end;'#13#10'  '
  +'result:=pxval;'#13#10'end;'#13#10#13#10#13#10'begin'#13#10'  EventsNameSpac'
  +'e:='''';'#13#10'  SetInterfaceContext;'#13#10'  {$endif}'#13#10'end.'#13#10
  +#13#10
]);
LazarusResources.Add('interfacetypesdll','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit InterfaceTypesDll;'#13
  +#10'(*'#13#10'   Interface declarations.'#13#10'   For inclusion inside the '
  +'dynamically created dll (fpc compiler), providing functions available in us'
  +'er event code'#13#10'   (also see units CompileUserCode and DllInterface).'
  +#13#10' *)'#13#10'{$mode objfpc}{$H+}'#13#10'{$INTERFACES CORBA}'#13#10'inte'
  +'rface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, EventsInterface'#13#10
  +'  ;'#13#10#13#10'{$ifdef Dll}'#13#10'type'#13#10'Tshowmessage=procedure(msg'
  +':String) of object;                                                        '
  +'stdcall;'#13#10'Tsetpropertyvalue=procedure(nodeName:String;propName:String'
  +';newValue:String) of object;              stdcall;'#13#10'Tsetpropertyvalue'
  +'Indexed=procedure(nodeName:String;propName:String;newValue:TStringArray;x,y'
  +':integer) of object;   stdcall;'#13#10'Tconfirm=function(TextMessage:string'
  +'):boolean of object;                                             stdcall;'
  +#13#10'Tgetpropertyvalue=function(nodeName:String;propName:String):string  o'
  +'f object;                        stdcall;'#13#10'//TgetpropertyvalueIndexed'
  +'=function(nodeName:String;propName:String; x,y,w,h:integer):TStringArray  o'
  +'f object;  stdcall;'#13#10'Tprompt=function(TextMessage,promptString:string'
  +'):string of object;                                  stdcall;'#13#10'Tshowx'
  +'form=procedure(XFormID:String; modal:Boolean) of object;                   '
  +'                    stdcall;'#13#10'Tclosexform=procedure(XFormID:String) o'
  +'f object;                                                     stdcall;'#13
  +#10'TCopyToClip=procedure(str:String) of object;                            '
  +'                             stdcall;'#13#10'TCopyFromClip=function(e:TEven'
  +'tStatus):String of object;                                             stdc'
  +'all;'#13#10'TLoadTableFromExcelCopy=procedure(TableName,CopiedString:String'
  +') of object;                         stdcall;'#13#10'TDoEvent=procedure(Eve'
  +'ntType,NodeId,myValue:String) of object;                                   '
  +'   stdcall;'#13#10'TMoveComponent=procedure(nodeId:string;NewParentId:strin'
  +'g) of object;                                stdcall;'#13#10'TCopyComponent'
  +'=procedure(nodeId,NewParentId,NewName:string) of object;                   '
  +'             stdcall;'#13#10'TDeleteComponent=function(nodeId:string;ShowNo'
  +'tFoundMsg:Boolean=true):Boolean of object;             stdcall;'#13#10'TGet'
  +'GPUParamNumValue=function(GPUName,pName:String):TNumArray of object;       '
  +'                         stdcall;'#13#10'TGetGPUConstIntValue=function(GPUN'
  +'ame,pName:String):integer of object;                                stdcall'
  +';'#13#10'TGetGPUParamImgValue=function(GPUName,pName:String):TImgArray of o'
  +'bject;                                stdcall;'#13#10'TSetGPUParamNumValue='
  +'procedure(GPUName,pName:String;pValue:TNumArray) of object;                '
  +'        stdcall;'#13#10'TSetGPUConstIntValue=procedure(GPUName,pName:String'
  +';pValue:integer) of object;                        stdcall;'#13#10'TSetGPUP'
  +'aramImgValue=procedure(GPUName,pName:String;pValue:TImgArray) of object;   '
  +'                     stdcall;'#13#10'TShowBusy=procedure of object;        '
  +'                stdcall;'#13#10'THideBusy=procedure of object;             '
  +'           stdcall;'#13#10'TProcessMessages=procedure of object;           '
  +'             stdcall;'#13#10'TMovePointerBetweenComponents=procedure(NodeNa'
  +'me1,NodeName2,Sub1,Sub2:String) of object; stdcall;'#13#10'THidePointer=pro'
  +'cedure of object; stdcall;'#13#10'TUserSystemAsString=function():String of '
  +'object; stdcall;'#13#10'TLoadUserSystemString=procedure(SystemString:String'
  +') of object; stdcall;'#13#10'TConsoleLog=procedure(txt:String) of object; s'
  +'tdcall;'#13#10'TArray2DToString=function(arr:T2DNumArray):String of object;'
  +'                                 stdcall;'#13#10'TGetGPUPixelArray=function'
  +'(GPUName:String):T3DNumArray of object;                                stdc'
  +'all;'#13#10'TGetGPUPixelArrayAsString=function(GPUName:String):String of ob'
  +'ject;                                stdcall;'#13#10'TGetGPUStageArray=func'
  +'tion(GPUName:String):T3DNumArray of object;                                '
  +'stdcall;'#13#10'TGetGPUStageArrayAsString=function(GPUName:String):String o'
  +'f object;                                stdcall;'#13#10#13#10#13#10'type'
  +#13#10'IMyMethodInterface = interface(IInterface)'#13#10'    procedure mmiSe'
  +'tEventsNameSpace(NameSpace:String);  stdcall;'#13#10'    procedure mmiShowM'
  ,'essage(msg:String); stdcall;'#13#10'    procedure mmiShowXForm(XFormID:Stri'
  +'ng; modal:Boolean);  stdcall;'#13#10'    procedure mmiCloseXForm(XFormID:St'
  +'ring);  stdcall;'#13#10'    procedure mmiSetPropertyValue(nodeName:String;p'
  +'ropName:String;newValue:String);  stdcall;'#13#10'    procedure mmiSetPrope'
  +'rtyValueIndexed(nodeName:String;propName:String;newValue:TStringArray; x,y:'
  +'integer);  stdcall;'#13#10'    function mmiGetPropertyValue(nodeName:String'
  +';propName:String):string;  stdcall;'#13#10'//    function mmiGetPropertyVal'
  +'ueIndexed(nodeName:String;propName:String; x,y,w,h:integer):TstringArray;  '
  +'stdcall;'#13#10'    Function mmiconfirm(TextMessage:string):boolean;  stdca'
  +'ll;'#13#10'    Function mmiprompt(TextMessage,promptString:string):string; '
  +' stdcall;'#13#10'    procedure mmiCopyToClip(str:String);  stdcall;'#13#10
  +'    function mmiCopyFromClip(e:TEventStatus):String;  stdcall;'#13#10'    p'
  +'rocedure mmiLoadTableFromExcelCopy(TableName,CopiedString:String); stdcall;'
  +#13#10'    procedure mmiDoEvent(EventType,NodeId,myValue:String);   stdcall;'
  +#13#10'    procedure mmiMoveComponent(nodeId:string;NewParentId:string);  st'
  +'dcall;'#13#10'    procedure mmiCopyComponent(nodeId,NewParentId,NewName:str'
  +'ing);  stdcall;'#13#10'    function mmiDeleteComponent(nodeId:string;ShowNo'
  +'tFoundMsg:Boolean=true):Boolean;  stdcall;'#13#10'    function mmiGetGPUPar'
  +'amNumValue(GPUName,pName:String):TNumArray;  stdcall;'#13#10'    function m'
  +'miGetGPUConstIntValue(GPUName,pName:String):integer;  stdcall;'#13#10'    f'
  +'unction mmiGetGPUParamImgValue(GPUName,pName:String):TImgArray;  stdcall;'
  +#13#10'    procedure mmiSetGPUParamNumValue(GPUName,pName:String;pValue:TNum'
  +'Array);  stdcall;'#13#10'    procedure mmiSetGPUConstIntValue(GPUName,pName'
  +':String;pValue:integer);  stdcall;'#13#10'    procedure mmiSetGPUParamImgVa'
  +'lue(GPUName,pName:String;pValue:TImgArray);  stdcall;'#13#10'    procedure '
  +'mmiShowBusy; stdcall;'#13#10'    procedure mmiHideBusy; stdcall;'#13#10'   '
  +' procedure mmiProcessMessages; stdcall;'#13#10'    procedure mmiMovePointer'
  +'BetweenComponents(NodeName1,NodeName2,Sub1,Sub2:String); stdcall;'#13#10'  '
  +'  procedure mmiHidePointer; stdcall;'#13#10'    function mmiUserSystemAsStr'
  +'ing():String; stdcall;'#13#10'    procedure mmiLoadUserSystemString(SystemS'
  +'tring:String); stdcall;'#13#10'    procedure mmiConsoleLog(txt:String);  st'
  +'dcall;'#13#10'    function mmiArray2DToString(arr:T2DNumArray):String;     '
  +'    stdcall;'#13#10'    function mmiGetGPUPixelArray(GPUName:String):T3DNum'
  +'Array;                                stdcall;'#13#10'    function mmiGetGP'
  +'UPixelArrayAsString(GPUName:String):String;                             std'
  +'call;'#13#10'    function mmiGetGPUStageArray(GPUName:String):T3DNumArray; '
  +'                               stdcall;'#13#10'    function mmiGetGPUStageA'
  +'rrayAsString(GPUName:String):String;                             stdcall;'
  +#13#10'end;'#13#10#13#10#13#10'var AppMethods : IMyMethodInterface;'#13#10#13
  +#10'var'#13#10'showmessage:Tshowmessage;'#13#10'showxform:Tshowxform;'#13#10
  +'closexform:Tclosexform;'#13#10'confirm:Tconfirm;'#13#10'prompt:Tprompt;'#13
  +#10'setpropertyvalue:Tsetpropertyvalue;'#13#10'setpropertyvalueindexed:Tsetp'
  +'ropertyvalueindexed;'#13#10'getpropertyvalue:Tgetpropertyvalue;'#13#10'//ge'
  +'tpropertyvalueindexed:Tgetpropertyvalueindexed;'#13#10'copytoclip:TCopyToCl'
  +'ip;'#13#10'copyfromclip:TCopyFromClip;'#13#10'LoadTableFromExcelCopy:TLoadT'
  +'ableFromExcelCopy;'#13#10'doevent:TDoEvent;'#13#10'movecomponent:TMoveCompo'
  +'nent;'#13#10'copycomponent:TCopyComponent;'#13#10'deletecomponent:TDeleteCo'
  +'mponent;'#13#10'getgpuparamnumvalue:TGetGPUParamNumValue;'#13#10'getgpucons'
  +'tintvalue:TGetGPUConstIntValue;'#13#10'getgpuparamimgvalue:TGetGPUParamImgV'
  +'alue;'#13#10'setgpuparamnumvalue:TSetGPUParamNumValue;'#13#10'setgpuconstin'
  +'tvalue:TSetGPUConstIntValue;'#13#10'setgpuparamimgvalue:TSetGPUParamImgValu'
  +'e;'#13#10'showbusy:TShowBusy;'#13#10'hidebusy:THideBusy;'#13#10'ProcessMess'
  +'ages:TProcessMessages;'#13#10'MovePointerBetweenComponents:TMovePointerBetw'
  +'eenComponents;'#13#10'HidePointer:THidePointer;'#13#10'UserSystemAsString:T'
  +'UserSystemAsString;'#13#10'LoadUserSystemString:TLoadUserSystemString;'#13
  +#10'ConsoleLog:TConsoleLog;'#13#10'Array2DToString:TArray2DToString;'#13#10
  +'GetGPUPixelArray:TGetGPUPixelArray;'#13#10'GetGPUPixelArrayAsString:TGetGPU'
  +'PixelArrayAsString;'#13#10'GetGPUStageArray:TGetGPUStageArray;'#13#10'GetGP'
  +'UStageArrayAsString:TGetGPUStageArrayAsString;'#13#10#13#10#13#10'procedure'
  +' SetDllContext(mmi : IMyMethodInterface); stdcall;'#13#10'{$endif}'#13#10#13
  +#10#13#10'implementation'#13#10#13#10'{$ifdef Dll}'#13#10'procedure SetDllCo'
  +'ntext(mmi : IMyMethodInterface); stdcall;'#13#10'var'#13#10'  dummy:String;'
  +#13#10'begin'#13#10'  // Map Appmethods onto the interface object passed in'
  +#13#10'  AppMethods := mmi;'#13#10#13#10'  showmessage:=@AppMethods.mmishowm'
  ,'essage;'#13#10'  showxform:=@appmethods.mmishowxform;'#13#10'  closexform:='
  +'@appmethods.mmiclosexform;'#13#10'  setpropertyvalue:=@AppMethods.mmisetpro'
  +'pertyvalue;'#13#10'  setpropertyvalueindexed:=@AppMethods.mmisetpropertyval'
  +'ueindexed;'#13#10'  getpropertyvalue:=@AppMethods.mmigetpropertyvalue;'#13
  +#10'//  getpropertyvalueindexed:=@AppMethods.mmigetpropertyvalueindexed;'#13
  +#10'  confirm:=@AppMethods.mmiconfirm;'#13#10'  prompt:=@AppMethods.mmipromp'
  +'t;'#13#10'  copytoclip:=@AppMethods.mmiCopyToClip;'#13#10'  copyfromclip:=@'
  +'AppMethods.mmiCopyFromClip;'#13#10'  LoadTableFromExcelCopy:=@AppMethods.mm'
  +'iLoadTableFromExcelCopy;'#13#10'  doevent:=@appmethods.mmiDoEvent;'#13#10' '
  +' movecomponent:=@appmethods.mmiMoveComponent;'#13#10'  copycomponent:=@appm'
  +'ethods.mmiCopyComponent;'#13#10'  deletecomponent:=@appmethods.mmiDeleteCom'
  +'ponent;'#13#10'  getgpuparamnumvalue:=@appmethods.mmiGetGPUParamNumValue;'
  +#13#10'  getgpuconstintvalue:=@appmethods.mmiGetGPUConstIntValue;'#13#10'  g'
  +'etgpuparamimgvalue:=@appmethods.mmiGetGPUParamImgValue;'#13#10'  setgpupara'
  +'mnumvalue:=@appmethods.mmiSetGPUParamNumValue;'#13#10'  setgpuconstintvalue'
  +':=@appmethods.mmiSetGPUConstIntValue;'#13#10'  setgpuparamimgvalue:=@appmet'
  +'hods.mmiSetGPUParamImgValue;'#13#10'  showbusy:=@appmethods.mmiShowBusy;'#13
  +#10'  hidebusy:=@appmethods.mmiHideBusy;'#13#10'  ProcessMessages:=@appmetho'
  +'ds.mmiProcessMessages;'#13#10'  MovePointerBetweenComponents:=@appmethods.m'
  +'miMovePointerBetweenComponents;'#13#10'  HidePointer:=@appmethods.mmiHidePo'
  +'inter;'#13#10'  UserSystemAsString:=@appmethods.mmiUserSystemAsString;'#13
  +#10'  LoadUserSystemString:=@appmethods.mmiLoadUserSystemString;'#13#10'  Co'
  +'nsoleLog:=@appmethods.mmiConsoleLog;'#13#10'  Array2DToString:=@appmethods.'
  +'mmiArray2DToString;'#13#10'  GetGPUPixelArray:=@appmethods.mmiGetGPUPixelAr'
  +'ray;'#13#10'  GetGPUPixelArrayAsString:=@appmethods.mmiGetGPUPixelArrayAsSt'
  +'ring;'#13#10'  GetGPUStageArray:=@appmethods.mmiGetGPUStageArray;'#13#10'  '
  +'GetGPUStageArrayAsString:=@appmethods.mmiGetGPUStageArrayAsString;'#13#10#13
  +#10' // dummy:=GetPropertyValue(''UIRoot'',''Name'');     // fudge...didn''t'
  +' work'#13#10#13#10'end;'#13#10'{$endif}'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('aboutunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit AboutUnit;'#13#10'{$i'
  +'fndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'inte'
  +'rface'#13#10#13#10'uses'#13#10'Classes, SysUtils, StringUtils, NodeUtils, X'
  +'Form,'#13#10'{$ifndef JScript}'#13#10'Forms, Controls, Dialogs,LazsUtils,Ut'
  +'ilsJSCompile,pas2jscompiler,'#13#10'{$ifdef Chromium}'#13#10'uCEFApplicatio'
  +'n,'#13#10'{$endif}'#13#10'{$else}'#13#10'HTMLUtils,'#13#10'{$endif}'#13#10
  +'WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13#10'XLabel, XEditBox'#13#10
  +', EventsInterface;'#13#10#13#10'type'#13#10#13#10'  { TAboutXIDEForm }'#13
  +#10#13#10'  TAboutXIDEForm = class(TXForm)'#13#10'    AboutFormXVBox1: TXVBo'
  +'x;'#13#10'    AboutFormXMemo1: TXMemo;'#13#10'    {$ifndef JScript}'#13#10
  +'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResize('
  +'Sender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13#10'  '
  +'  {$endif}'#13#10'  private'#13#10#13#10'  public'#13#10#13#10'  end;'#13#10
  +#13#10'var'#13#10'  AboutXIDEForm: TAboutXIDEForm;'#13#10'  AboutFormRoot:TD'
  +'ataNode;'#13#10#13#10'implementation'#13#10#13#10'{$R *.lfm}'#13#10#13#10'v'
  +'ar'#13#10'  AboutText:String;'#13#10#13#10#13#10'{ TAboutXIDEForm }'#13#10
  +#13#10'{$ifndef JScript}'#13#10'procedure TAboutXIDEForm.FormCreate(Sender: '
  +'TObject);'#13#10'var'#13#10'  str:string;'#13#10'  vs:String;'#13#10'  {$if'
  +'ndef JScript}'#13#10'  MyCompilerObj :TMyCompilerObj;'#13#10'  {$endif}'#13
  +#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'  AboutFormRoot:=Fin'
  +'dDataNodeById(myNode,''AboutFormXVBox1'','''',true);'#13#10#13#10'  str:=Ab'
  +'outText;'#13#10'  str:=myStringReplace(str,''<<<XIDE>>>'',''0.1.beta'',1,-1'
  +');'#13#10'  str:=myStringReplace(str,''<<<LAZ>>>'',''2.1.0'',1,-1);'#13#10
  +'  str:=myStringReplace(str,''<<<FPC>>>'',''3.3.1'',1,-1);'#13#10#13#10'  {$'
  +'ifndef JScript}'#13#10'  // get version of pas2js'#13#10'  MyCompilerObj :='
  +'TMyCompilerObj.Create;'#13#10'  MyCompilerObj.Compiler:=TPas2jsCompiler.Cre'
  +'ate;'#13#10'  vs:=MyCompilerObj.Compiler.GetVersion(false);'#13#10'  str:=m'
  +'yStringReplace(str,''<<<Pas2JS>>>'',vs,1,-1);'#13#10'  MyCompilerObj.Compil'
  +'er.Free;'#13#10'  MyCompilerObj.Free;'#13#10#13#10'  {$ifdef Chromium}'#13
  +#10'  // get version of cef library'#13#10'  str:=myStringReplace(str,''<<<C'
  +'EF>>>'',GlobalCEFApp.LibCefVersion,1,-1);'#13#10'  //showmessage(''CEF Libr'
  +'ary version ''+GlobalCEFApp.LibCefVersion);'#13#10'  {$endif}'#13#10'  {$en'
  +'dif}'#13#10#13#10'  AboutFormXMemo1.ItemValue:=str;'#13#10'end;'#13#10#13#10
  +'procedure TAboutXIDEForm.FormResize(Sender: TObject);'#13#10'begin'#13#10' '
  +' DoFormResize(self, AboutFormXVBox1);'#13#10'end;'#13#10#13#10'procedure TA'
  +'boutXIDEForm.FormShow(Sender: TObject);'#13#10'begin'#13#10#13#10'end;'#13
  +#10'{$endif}'#13#10'begin'#13#10'  AboutText :='#13#10'  ''           Helpin'
  +'g people write simple apps that work "everywhere" '' + LineEnding'#13#10' +'
  +''' '' + LineEnding'#13#10'     +''XIDE is a combined Development and Run Ti'
  +'me Environment designed to run in Chrome/Linux/Windows/Android with as litt'
  +'le installation or learning curve as possible.'' + LineEnding'#13#10'     +'
  +''' '' + LineEnding'#13#10'     +''It allows WYSIWYG Pascal/RAD application '
  +'development in up to date HTML5 browsers and any native code platform that '
  +'supports Electron or Lazarus/Pas2JS and the Chromium Embedded Framework.'' '
  +'+ LineEnding'#13#10'     +'''' + LineEnding'#13#10'     +''The target appli'
  +'cations are small, '#226#128#156'in house'#226#128#157', client side, embed'
  +'ded or exploratory apps where the focus is on rapid development, specialist'
  +' functionality or collaborative working.'' + LineEnding'#13#10'     +'''' +'
  +' LineEnding'#13#10'     +''Applications developed for this run time will ru'
  +'n client side in any of the target environments without modification or dep'
  +'endencies both on line or off line (once the run time has been installed or'
  +' the web page downloaded).'' + LineEnding'#13#10'     +'''' + LineEnding'#13
  +#10'     +''        Version <<<XIDE>>> for Chrome'' + LineEnding'#13#10'    '
  +' +''        Date 11/03/2019'' + LineEnding'#13#10'     +''        Created w'
  +'ith'' + LineEnding'#13#10'     +''            ..............Lazarus    <<<L'
  +'AZ>>>'' + LineEnding'#13#10'     +''            ..............FPC        <<'
  +'<FPC>>>'' + LineEnding'#13#10'     +''            ..............Pas2JS     '
  +'<<<Pas2JS>>>'' + LineEnding'#13#10'     {$ifdef Chromium}'#13#10'     +''  '
  +'          ..............CEF library <<<CEF>>>'' + LineEnding'#13#10'     {$'
  ,'endif}'#13#10'     +''        Copyright  '#194#169' Steve Wright all rights'
  +' reserved'' + LineEnding'#13#10'     +''        License: GPL'' + LineEnding'
  +#13#10'     +''                                                             '
  +'  '' + LineEnding'#13#10'     +''Third Party Libraries and Tools included i'
  +'n the run time'' + LineEnding'#13#10'     +''            Pas2JS (http://wik'
  +'i.freepascal.org/pas2js)  - GPL/LGPL Licence'' + LineEnding'#13#10'     +'''
  +'            GPUJS  (https://github.com/gpujs/gpu.rocks) - MIT Licence'' + L'
  +'ineEnding'#13#10'     +''            Pell   (https://github.com/jaredreich/'
  +'pell) - MIT Licence'' + LineEnding'#13#10'     +'''' + LineEnding'#13#10'  '
  +'   +''This program is free software: you can redistribute it and/or modify'
  +''' + LineEnding'#13#10'     +''    it under the terms of the GNU General Pu'
  +'blic License as published by'' + LineEnding'#13#10'     +''    the Free Sof'
  +'tware Foundation, either version 3 of the License, or'' + LineEnding'#13#10
  +'     +''    any later version. See <https://www.gnu.org/licenses/>'' + Line'
  +'Ending'#13#10'     +'''' + LineEnding'#13#10'     +''    This program is di'
  +'stributed in the hope that it will be useful,'' + LineEnding'#13#10'     +'
  +'''    but WITHOUT ANY WARRANTY; without even the implied warranty of'' + Li'
  +'neEnding'#13#10'     +''    MERCHANTABILITY or FITNESS FOR A PARTICULAR PUR'
  +'POSE.  See the'' + LineEnding'#13#10'     +''    GNU General Public License'
  +' for more details.'' + LineEnding'#13#10' ;'#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('xidehelpunit','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit XIDEHelpUnit;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'i'
  +'nterface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUti'
  +'ls, XForm,'#13#10'  {$ifndef JScript}'#13#10'  Forms, Controls, Dialogs,Laz'
  +'sUtils, Events, IpHTML,'#13#10'//    {$ifdef Chromium}'#13#10'//    uCEFChr'
  +'omium, uCEFWindowParent, uCEFInterfaces, uCEFConstants, uCEFTypes, uCEFChro'
  +'miumEvents,'#13#10'//    {$endif}'#13#10'  {$else}'#13#10'  HTMLUtils,'#13
  +#10'  {$endif}'#13#10'  WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13#10' '
  +' XLabel, XEditBox'#13#10'  , EventsInterface, XHTMLText, XScrollBox, XHTMLE'
  +'ditor;'#13#10#13#10'type'#13#10#13#10'  { TXIDEHelpForm }'#13#10#13#10'  TX'
  +'IDEHelpForm = class(TXForm)'#13#10'    HelpFormVBox1: TXVBox;'#13#10'    He'
  +'lpHTMLText: TXHTMLText;'#13#10'    XIDEHelpScrollBox: TXScrollBox;'#13#10' '
  +'   {$ifndef JScript}'#13#10'    procedure FormActivate(Sender: TObject);'#13
  +#10'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResi'
  +'ze(Sender: TObject);'#13#10'    procedure FormShow(Sender: TObject);'#13#10
  +'    procedure LoadNewText(Data: PtrInt);'#13#10'    {$endif}'#13#10'  priva'
  +'te'#13#10#13#10'  public'#13#10'     procedure InitialiseonShow;'#13#10'  e'
  +'nd;'#13#10#13#10'var'#13#10'  XIDEHelpForm: TXIDEHelpForm;'#13#10'  HelpFor'
  +'mRoot:TDataNode;'#13#10#13#10'implementation'#13#10'uses'#13#10'  XObjectIn'
  +'sp;'#13#10#13#10'{$R *.lfm}'#13#10#13#10'const BaseHtml ='#13#10'//''<h1 st'
  +'yle="text-align: center;"><u>Overview</u></h1><h2 style="text-align: center'
  +';">&nbsp;(Helping people write simple apps that work "everywhere")</h2><h3>'
  +'Purpose</h3><p>XIDE is a combined Development and Run Time Environment desi'
  +'gned to work in exactly the same way in&nbsp; Chrome,Linux,Windows or Andro'
  +'id modes with as close to zero installation or learning curve as possible. '
  +'The initial target applications are small "in house"client side, embedded o'
  +'r exploratory apps where the focus is on specialist functionality and rapid'
  +' development or collaborative working with cosmetic aspects of the design s'
  +'uch as style and speed being a secondary consideration. At the moment, it i'
  +'s not intended as a tool to develop web pages that are widely distributed t'
  +'o the general public although it can be used for prototyping these.</p><h3>'
  +'Functionality</h3><p>In order to ensure that any project developed with&nbs'
  +'p; XIDE will run unmodified in all other environments, its core components '
  +'only supports that subset of functionality that exists on all platforms. Th'
  +'is is typically that found in the browser as this for security reasons is t'
  +'he most restrictive environment. However XIDE is also designed to be easily'
  +' extensible in order to support user specific projects or hardware requirem'
  +'ents that do not need this portability.&nbsp;</p><p>If browser specific fun'
  +'ctionality (e.g. CSS or SVG) is required by the user then this can be provi'
  +'ded by&nbsp; desktop versions of the IDE if the Chromium Embedded Framework'
  +' (CEF) is supported for that implementation.&nbsp;</p><h3>Unified User Inte'
  +'rface</h3><p>The browser supports a number of different standards as part o'
  +'f its user interface. These include HTML, CSS, SVG&nbsp;and GPU to cover pa'
  +'ge layout, style editing, vector graphics and graphics programming respecti'
  +'vely. These all require their own conventions to be used when accessed dire'
  +'ctly from the browser and/or JavaScript.</p><p>XIDE unifies the users acces'
  +'s to these different browser capabilities using a standardised Object Inspe'
  +'ctor / Drag and Drop approach for them all. For HTML and SVG this should ap'
  +'pear seamless to the user with all the SVG containers and components access'
  +'ed in an identical manner to HTML so requiring no further explanation than '
  +'provided below for basic screen layout and editing.&nbsp;</p><h3>CSS Functi'
  +'onality</h3><p>CSS functionality is provided by supporting a style design t'
  +'ree in addition to the Code and UI design trees described below. As with th'
  +'e UI design tree, Style resources (new design rules, targets, properties an'
  +'d rule types ) are dragged from a resources tree and dropped on the relevan'
  +'t node of the style tree. The style tree also supports logical grouping of '
  +'targets using "AND" and "OR" nodes.&nbsp; This speeds up and simplifies the'
  +' CSS syntax generation considerably compared to direct text entry.</p><h3>G'
  +'PU Code</h3><p>The GPU code capability would normally require a separate de'
  ,'velopment environment and a different language to support development of co'
  +'de. XIDE encapsulates the complexities of WebGL by transpiling from (a subs'
  +'et of) pascal into WebGL / JavaScript code. WebGL has been chosen rather th'
  +'an say CUDA or OpenCL et. as WebGL is widely supported "out of the box"&nbs'
  +'p; in most browsers and on most processor/GPU combinations. As such it mini'
  +'mises the&nbsp; installation and configuration needed in order to get XIDE '
  +'running on a new system.</p><p>The Pascal code for the GPU is accessed as a'
  +' property of a GPU Canvas component which has been dropped onto the User In'
  +'terface layout screen and/or as a node on the Code designer tree.&nbsp; The'
  +' Pascal GPU code editor follows the same edit/compile/debug cycle as for us'
  +'er code in the rest of the system. The differences are that this is code fo'
  +'r blocks of threads in parallel. The code describes a single instruction mu'
  +'ltiple data (SIMD) approach where all the threads run the same code with th'
  +'read specific code referencing "this.x" and "this.y" to reflect their posit'
  +'ion in the block of threads. Parameter names are declared using a Paramlist'
  +' property of the GPU canvas component and their transfer and run time execu'
  +'tion is controlled by system calls described below. (N.B. parameters need t'
  +'o be passed as arrays so even scalar parameters passed into the code need t'
  +'o be referenced as follows "myParam[0]" )</p><p>The Pascal GPU code in a th'
  +'read cannot access variables in other threads because these are all execute'
  +'d in an unspecified order depending on the specifics of the GPU available i'
  +'n the host and so allowing access would entail unacceptable race conditions'
  +'. Instead you can synchronise the threads at a number of stages by daisy ch'
  +'aining kernels. (Set the TXGPUCanvas property NumKernels&gt;1) For each ker'
  +'nel in the chain its return value must be set to "MyValue". The next kernel'
  +' in the chain can then read all the thread return values from the previous '
  +'kernel by reading from "MyArray". The final kernel is the graphics display '
  +'kernel where you set the r,g,b values as usual.</p><p>Maths functions avail'
  +'able in the GPU code are as follows:-</p><p></p><ul><li>abs(a) sign(a) trun'
  +'c(a) ceil(a) max(a,b) min(a,b)</li><li>sin(a) cos(a) arcsin(a) arccos(a) ar'
  +'ctan(a,b)</li><li>sqrt(a) power(a,b) ln(a) log10(a) log2(a)&nbsp;</li></ul>'
  +'<p></p><p>At this time, the subset of pascal functionality supported by&nbs'
  +'p; the GPU is limited and no support is provided for the many sophisticated'
  +' code optimisation options provided by specialist GPU programming environme'
  +'nts. As such this capability is aimed at problems that can be made "embarra'
  +'ssingly parallel". See https://gpu.rocks/ for full details of the underlyin'
  +'g JavaScript to webGL transpiler technology (N.B. Our releases lag theirs s'
  +'o some of the features described may not be available yet in our version)<b'
  +'r></p><h3>Designing a User Interface<br></h3><p><b>Resource and Instance tr'
  +'ees</b></p><p>XIDE uses a very simple paradigm. Essentially, it consists of'
  +' three elements.</p><p></p><ol><li>&nbsp;A resources tree, showing the avai'
  +'lable widgets (visual and non visual)</li><li>&nbsp;A system design tree an'
  +'d object property inspector/editor</li><li>&nbsp;A layout panel showing a W'
  +'YSIWYG version of the current page design.</li></ol><p></p> <p>The UI is bu'
  +'ilt by pasting nodes from the resource tree to the system design tree.&nbsp'
  +';</p><p>Each node has object properties defined by a name/value pairs that '
  +'can be edited using the object inspector or referenced and or updated by ru'
  +'n time code.</p><p>Events are also available on each widget so that code ca'
  +'n be attached to them using the built in code editor and compiler.&nbsp;</p'
  +'><p>Each property can be bound to a selected data source at design time and'
  +' code added to validate its status at run time. (Non visual components are '
  +'dragged to the root node of the instance tree.)</p><p><b>Available widgets<'
  +'/b></p><p>The widgets listed in the resource tree include both UI and non v'
  +'isual components. The intention is that each widget is self documenting and'
  +' that the set can be extended using third party contributions</p><p><b>Resp'
  +'onsive Design</b></p><p>Web development has encouraged new and more flexibl'
  +'e approaches to UI design. Unfortunately it has also led to an explosion of'
  +' choice in this area. In practice this fragmentation creates new costs as w'
  +'ell as benefits for our target user base. To counter this trend, XIDE only '
  +'supports a simple responsive design layout paradigm.</p><p>In practice this'
  +' consists of a Main page, Tab controls and Popups to define the constituent'
  +' pages in a UI design. Horizontal and Vertical layout boxes (together with '
  +'associated alignment properties) are then nested within these pages to cont'
  +'rol the final layout of components on the page.</p><p><b>Writing applicatio'
  ,'n code</b></p><p>XIDE uses an event driven model where event handlers writt'
  +'en in Pascal can be attached to pre defined events triggered by objects in '
  +'the user interface. These procedures can be inspected and/or edited by usin'
  +'g the object inspector to navigate to the required UI object then pressing '
  +'the ellipsis button to the right of the required event in its events tab. T'
  +'his creates an entry for that event handler under the "Event Handlers"node '
  +'in the code design tree. So once a handler has been added it can then also '
  +'be navigated to by selecting it in the code designer and pressing the edit '
  +'button.</p><p><b>Pascal Syntax</b></p><p>The Pascal syntax recognised by XI'
  +'DE&nbsp;is that used by the Pas2JS variant of Free Pascal. (http://wiki.fre'
  +'epascal.org/pas2js) A detail description of the supported syntax can be fou'
  +'nd here. (http://wiki.freepascal.org/pas2js#RTL)</p><p><b>Unit Structure</b'
  +'></p><p>Shared code can be written by adding units, procedures and function'
  +'s directly to the code design tree. This allows some automation of routine '
  +'tasks and simplifies the user"s access to others such as binding.&nbsp;</p>'
  +'<p>To allow maximum flexibility, it is also possible to add standard Pascal'
  +' units developed elsewhere as "Raw Units" These must have the "Interface"un'
  +'it added to their uses clause in order to be able to access the XIDE&nbsp;A'
  +'PI. In addition, they can access any of the standard set of PAS2JS run time'
  +' library units. (http://wiki.freepascal.org/pas2js#RTL) Any other required '
  +'units must be imported into XIDE&nbsp;as additional "Raw Units"before they '
  +'can be referenced.</p><p><b>Accessing user interface objects at run time</b'
  +'></p><p>XIDE is designed to be a cross platform rapid application developme'
  +'nt system. In order to do this it uses a text based system description tree'
  +' (The System Design or instance tree) to reflect the state of a users progr'
  +'am at all time. This is similar to the function of the Document Object Mode'
  +'l (DOM) in standard web applications.</p> <p><b>Types of API Calls</b></p><'
  +'p>In XIDE&nbsp;the instance tree describing a users project can be inspecte'
  +'d manually using the Object Inspector. This allows the user to select any n'
  +'ode on the tree and inspect and/or modify its properties or event handlers '
  +'as required. The XIDE&nbsp;API allows the same actions to be available prog'
  +'rammatically. This ability to generate events using code is particularly us'
  +'eful in automated testing, asynchronous call back functions, or multi threa'
  +'ding applications. The functions available fall into eight types viz:-</p><'
  +'p></p><ul><li>&nbsp;Dialog boxes</li><li>&nbsp;Get and/or set a property va'
  +'lue of a UI object</li><li>&nbsp;Save and load user selected data to the cl'
  +'ipboard</li><li>&nbsp;copy or delete a UI component or move it to a new par'
  +'ent.</li><li>&nbsp;Add to, or replace, the event response for a UI object a'
  +'nd/or trigger such an event artificially</li><li>&nbsp;Show or hide a popup'
  +' form.</li><li>&nbsp;Show or hide a busy indicator.</li><li>&nbsp;get and s'
  +'et GPU parameters (integer,number and image)</li></ul><p></p><p>The detail '
  +'syntax for these function calls is appended below. Note that unless explici'
  +'tly stated, all values are either strings or string arrays.</p><p><b>Asynch'
  +'ronous Calls, Multi Threading and Initialization functions</b></p><p>Many w'
  +'eb calls issue requests that need to wait for a response from a web service'
  +', database or other remote service provider. Similarly, when starting anoth'
  +'er thread in parallel, the main thread will often need to wait for such chi'
  +'ld threads to return the results of their work before it can proceed. XIDE&'
  +'nbsp;allows main event handlers to specify a "initalisation"function. This '
  +'is a block of code which issues all such requests prior to running the main'
  +' event code when they have all finished executing. See below for the detail'
  +' syntax of the available calls.</p><p>Note however that all such asynchrono'
  +'us calls first parameter is "e"the event context (automatically declared an'
  +'d populated by Xide, behind the scenes, for every XIDE&nbsp;event) from whi'
  +'ch they have been issued so they know where to return without requiring the'
  +' user to enter complex boilerplate code.</p><p><b>List of&nbsp;XIDE&nbsp;sp'
  +'ecific API procedure and function calls</b></p> <p></p><ul><li>Procedure sh'
  +'owMessage(TextMessage:string);</li><li>Procedure consoleLog(TextMessage:str'
  +'ing);</li><li>Function&nbsp; confirm(TextMessage:string):boolean;</li><li>F'
  +'unction&nbsp; prompt(TextMessage,promptString:string):string;</li><li>Proce'
  +'dure setPropertyValue(nodeName:String;propName:String;newValue:String);</li'
  +'><li>Procedure setPropertyValueIndexed(nodeName:String;propName:String;newV'
  +'alue:TStringArray; x,y:integer);</li><li>Function&nbsp; getPropertyValue(no'
  +'deName:String;propName:String):string;</li><li>Function&nbsp; getPropertyVa'
  ,'lueIndexed(nodeName:String;propName:String; x,y,w,h:integer):TstringArray; '
  +'<i>// When accessing array properties, "x" and "y" are the index positions '
  +'for the top left position for the range to start. "w" and "h" are the width'
  +' and height of the range. The type TStringArray is declared in pascal as&nb'
  +'sp; "My string array = Array of String;"&nbsp; when accesed as a string it"'
  +'s format is [["a","b","c"......"z"],["1","2","3"....."9"],....[...etc....]]'
  +'</i></li><li>Procedure copyToClip(str:String);<i> //Place the string on the'
  +' clipboard&nbsp;</i></li><li>Procedure copyFromClip(e); <i>// Fetch text fr'
  +'om clipboard (note that this is an async operation so this line of code can'
  +' only appear in an initialization tab of an event procedure. After this has'
  +' executed the main event code tab can access the result using the parameter'
  +' e.returnString )</i></li><li>Procedure copycomponent(NodeToBeCopied,NewPar'
  +'entId,NewNodeID:string);</li><li>Function&nbsp; deletecomponent(NodeID:stri'
  +'ng):boolean; <i>// this returns true if the operation succeeds in deleteing'
  +' the node (i.e. it existed and has been deleted)</i></li><li>Procedure move'
  +'Component(nodeId,NewParentId:string);<i>// Re-parent the given XIDE compone'
  +'nt&nbsp;</i></li><li>Procedure doEvent(EventType,NodeId,myValue:string);<i>'
  +' //Execute the event code for the given XIDE event type. To modify the resp'
  +'onse to an exiting event add an "EventTrapper" component to the system this'
  +' will see the full event stream&nbsp; allowing you to filter this for the e'
  +'vent of interest and code the appropriate additional action.&nbsp; Availabl'
  +'e information on each event consists of the following system defined variab'
  +'les. "e.EventType, e.NodeId, e.eventvalue : string;" to then continue to ru'
  +'n the default event code, set "e.ContinueAfterTrappers = true;" at the end '
  +'of the event handler&nbsp;</i></li><li>Procedure showXForm(XFormID:String; '
  +'modal:Boolean);</li><li>Procedure closeXForm(XFormID:String);</li><li>Proce'
  +'dure showBusy;</li><li>Procedure hideBusy;</li><li>Function&nbsp; getGpuPra'
  +'mNumValue(GPUName,pName:String):number;&nbsp;&nbsp;</li><li>Function&nbsp; '
  +'getGpuConstIntValue(GPUName,pName:String):integer;&nbsp;&nbsp;</li><li>Func'
  +'tion&nbsp; getGpuParamImgValue(GPUName,pName:String):TImgArray;&nbsp;&nbsp;'
  +'</li><li>Procedure setGpuParamNumValue(GPUName,pName:String;pValue:number);'
  +'</li><li>Procedure setGpuConstIntValue(GPUName,pName:String;pValue:integer)'
  +';</li><li>Procedure setGpuParamImgValue(GPUName,pName:String;pValue:TImgArr'
  +'ay);&nbsp;</li></ul><p><b>App Development and Deployment</b></p><p>During t'
  +'he development phase of a project XIDE&nbsp;will usually be loaded in inter'
  +'active app design mode where you can edit the user interface design and the'
  +' code behind it. Here by default, the IDE re-loads the project you were las'
  +'t working on.&nbsp;</p><p>New projects can be started by clearing the curre'
  +'nt system or loading a previously saved system from the clipboard. This beh'
  +'aves the same in native host environments (Windows or Linux) as it does in '
  +'Chrome or Android. At the end of this phase, you will sometimes want to dep'
  +'loy the developed app to end users without allowing access to the IDE. In t'
  +'his case, select the "System / Deploy" option from the main menu and this w'
  +'ill generate a self contained HTML page implementing your application and t'
  +'he run time environment needed to execute it, but with the interactive IDE '
  +'features disabled. You can now load this to a server of your choice, or ema'
  +'il directly to your end user so they can run it from their file system.&nbs'
  +'p;</p><p>Alternatively, if you wish to give them access to inspect and perh'
  +'aps contribute to, or modify, the app, then distribute the blank XIDE app f'
  +'or their preferred platform (Chrome / Linux / Windows / Android) and use th'
  +'e "System / Save" option to generate a app definition file that they can lo'
  +'ad into it using the "System / Load" option on the main menu.&nbsp;</p><p><'
  +'b>Debugging</b></p><p>When testing Pascal code you have written using XIDE,'
  +' the PAS2JS compiler error messages will flag any source code syntax proble'
  +'ms. If you click on one of these error messages this will position the curs'
  +'or at the relevant character position in the line of code in the XIDE&nbsp;'
  +'code editor. Run time errors will sometimes be trapped by error handlers bu'
  +'ilt in to XIDE&nbsp;and generate a helpful error message. If this is not su'
  +'fficient to uniquely identify the cause of the problem then "ctrl shift J" '
  +'in Chrome will bring up the built in developer console which will hopefully'
  +' provide the additional information you need to track down the problem.</p>'
  +'<h3>Implementation, Extensibility and Licensing<br></h3><p>XIDE is implemen'
  +'ted using the Pas2JS dialect of the Object Pascal programming language. Thi'
  +'s is because it is efficient, easy to learn, and is available on a wide ran'
  ,'ge of processor architectures.&nbsp;</p><p>Sometimes, as projects go throug'
  +'h their life cycle, new more specialist requirements emerge. At this point '
  +'the XIDE framework can be extended using project or platform specific custo'
  +'m components developed in Lazarus. Alternatively the HTML and JavaScript co'
  +'de generated by XIDE can be imported into a general-purpose web design tool'
  +' stack to enable full enterprise level development.&nbsp;</p><p>XIDE is an '
  +'open source project distributed using the same licence as Lazarus (GPL)</p>'
  +'<h3>Development Roadmap</h3><p>As an open source project, the future develo'
  +'pment of XIDE depends on how many collaborators choose to contribute to the'
  +' project, and which aspects are most important to them.&nbsp;</p><p>The ini'
  +'tial project has focused on functionality rather than style or speed, and o'
  +'n the ability to operate as a fully self contained IDE with the minimum of '
  +'dependencies.&nbsp;</p><p>As the project matures, it is hoped that new coll'
  +'aborators may add web connectivity, database access, comprehensive style su'
  +'pport, support for other operating systems (eg IOS) or browsers other than '
  +'Chrome.&nbsp;</p><h3>Compatibility</h3><p>In desktop mode, XIDE is designed'
  +' to run on platforms supported by Lazarus and the Chromium Embedded Framewo'
  +'rk (i.e. most desktop platforms). If the latter is not available then XIDE '
  +'can still run but will then not support SVG or other embedded browser featu'
  +'res.&nbsp;</p><p>In browser mode XIDE should run on any up to date HTML5 en'
  +'abled browser. However as it is targeting closed user groups (where the bro'
  +'wser can be specified)&nbsp; it is only tested on recent versions of Chrome'
  +'.&nbsp;</p><p>Alternatively, Electron or Cordova and Crosswalk can be used '
  +'to provide a hybrid implementation of XIDE. This gives full Web connectivit'
  +'y and CSS on a wide range of platforms but with a trade off in terms of siz'
  +'e,speed and security.</p><p><br></p><p></p>'';'#13#10'''<h1 style="text-ali'
  +'gn: center;"><u>Overview</u></h1><h2 style="text-align: center;">&nbsp;(Hel'
  +'ping people write simple apps that work "everywhere")</h2><h3>Purpose</h3><'
  +'p>XIDE is a combined Development and Run Time Environment designed to work '
  +'in exactly the same way in&nbsp; Chrome,Linux,Windows or Android modes with'
  +' as close to zero installation or learning curve as possible. The initial t'
  +'arget applications are small "in house"client side, embedded or exploratory'
  +' apps where the focus is on specialist functionality and rapid development '
  +'or collaborative working with cosmetic aspects of the design such as style '
  +'and speed being a secondary consideration. At the moment, it is not intende'
  +'d as a tool to develop web pages that are widely distributed to the general'
  +' public although it can be used for prototyping these.</p><h3>Functionality'
  +'</h3><p>In order to ensure that any project developed with&nbsp; XIDE will '
  +'run unmodified in all other environments, its core components only supports'
  +' that subset of functionality that exists on all platforms. This is typical'
  +'ly that found in the browser as this for security reasons is the most restr'
  +'ictive environment. However XIDE is also designed to be easily extensible i'
  +'n order to support user specific projects or hardware requirements that do '
  +'not need this portability.&nbsp;</p><p>If browser specific functionality (e'
  +'.g. CSS or SVG) is required by the user then this can be provided by&nbsp; '
  +'desktop versions of the IDE if the Chromium Embedded Framework (CEF) is sup'
  +'ported for that implementation.&nbsp;</p><h3>Unified User Interface</h3><p>'
  +'The browser supports a number of different standards as part of its user in'
  +'terface. These include HTML, CSS, SVG&nbsp;and GPU to cover page layout, st'
  +'yle editing, vector graphics and graphics programming respectively. These a'
  +'ll require their own conventions to be used when accessed directly from the'
  +' browser and/or JavaScript.</p><p>XIDE unifies the users access to these di'
  +'fferent browser capabilities using a standardised Object Inspector / Drag a'
  +'nd Drop approach for them all. For HTML and SVG this should appear seamless'
  +' to the user with all the SVG containers and components accessed in an iden'
  +'tical manner to HTML so requiring no further explanation than provided belo'
  +'w for basic screen layout and editing.&nbsp;</p><h3>CSS Functionality</h3><'
  +'p>CSS functionality is provided by supporting a style design tree in additi'
  +'on to the Code and UI design trees described below. As with the UI design t'
  +'ree, Style resources (new design rules, targets, properties and rule types '
  +') are dragged from a resources tree and dropped on the relevant node of the'
  +' style tree. The style tree also supports logical grouping of targets using'
  +' "AND" and "OR" nodes.&nbsp; This speeds up and simplifies the CSS syntax g'
  +'eneration considerably compared to direct text entry.</p><h3>GPU Code</h3><'
  ,'p>The GPU code capability would normally require a separate development env'
  +'ironment and a different language to support development of code. XIDE enca'
  +'psulates the complexities of WebGL by transpiling from (a subset of) pascal'
  +' into WebGL / JavaScript code. WebGL has been chosen rather than say CUDA o'
  +'r OpenCL et. as WebGL is widely supported "out of the box"&nbsp; in most br'
  +'owsers and on most processor/GPU combinations. As such it minimises the&nbs'
  +'p; installation and configuration needed in order to get XIDE running on a '
  +'new system.</p><p>The Pascal code for the GPU is accessed as a property of '
  +'a GPU Canvas component which has been dropped onto the User Interface layou'
  +'t screen and/or as a node on the Code designer tree.&nbsp; The Pascal GPU c'
  +'ode editor follows the same edit/compile/debug cycle as for user code in th'
  +'e rest of the system. The differences are that this is code for blocks of t'
  +'hreads in parallel. The code describes a single instruction multiple data ('
  +'SIMD) approach where all the threads run the same code with thread specific'
  +' code referencing "this.x" and "this.y" to reflect their position in the bl'
  +'ock of threads. Parameter names are declared using a Paramlist property of '
  +'the GPU canvas component and their transfer and run time execution is contr'
  +'olled by system calls described below. (N.B. parameters need to be passed a'
  +'s arrays so even scalar parameters passed into the code need to be referenc'
  +'ed as follows "myParam[0]" )</p><p>The Pascal GPU code in a thread cannot a'
  +'ccess variables in other threads because these are all executed in an unspe'
  +'cified order depending on the specifics of the GPU available in the host an'
  +'d so allowing access would entail unacceptable race conditions. Instead you'
  +' can synchronise the threads at a number of stages by daisy chaining kernel'
  +'s. (Set the TXGPUCanvas property NumKernels&gt;1) For each kernel in the ch'
  +'ain its return value must be set to "MyValue". The next kernel in the chain'
  +' can then read all the thread return values from the previous kernel by rea'
  +'ding from "MyArray". The final kernel is the graphics display kernel where '
  +'you set the r,g,b values as usual.</p><p>Maths functions available in the G'
  +'PU code are as follows:-</p><p></p><ul><li>abs(a) sign(a) trunc(a) ceil(a) '
  +'max(a,b) min(a,b)</li><li>sin(a) cos(a) arcsin(a) arccos(a) arctan(a,b)</li'
  +'><li>sqrt(a) power(a,b) ln(a) log10(a) log2(a)&nbsp;</li></ul><p></p><p>At '
  +'this time, the subset of pascal functionality supported by&nbsp; the GPU is'
  +' limited and no support is provided for the many sophisticated code optimis'
  +'ation options provided by specialist GPU programming environments. As such '
  +'this capability is aimed at problems that can be made "embarrassingly paral'
  +'lel". See https://gpu.rocks/ for full details of the underlying JavaScript '
  +'to webGL transpiler technology (N.B. Our releases lag theirs so some of the'
  +' features described may not be available yet in our version)<br></p><h3>Des'
  +'igning a User Interface<br></h3><p><b>Resource and Instance trees</b></p><p'
  +'>XIDE uses a very simple paradigm. Essentially, it consists of three elemen'
  +'ts.</p><p></p><ol><li>&nbsp;A resources tree, showing the available widgets'
  +' (visual and non visual)</li><li>&nbsp;A system design tree and object prop'
  +'erty inspector/editor</li><li>&nbsp;A layout panel showing a WYSIWYG versio'
  +'n of the current page design.</li></ol><p></p> <p>The UI is built by pastin'
  +'g nodes from the resource tree to the system design tree.&nbsp;</p><p>Each '
  +'node has object properties defined by a name/value pairs that can be edited'
  +' using the object inspector or referenced and or updated by run time code.<'
  +'/p><p>Events are also available on each widget so that code can be attached'
  +' to them using the built in code editor and compiler.&nbsp;</p><p>Each prop'
  +'erty can be bound to a selected data source at design time and code added t'
  +'o validate its status at run time. (Non visual components are dragged to th'
  +'e root node of the instance tree.)</p><p><b>Available widgets</b></p><p>The'
  +' widgets listed in the resource tree include both UI and non visual compone'
  +'nts. The intention is that each widget is self documenting and that the set'
  +' can be extended using third party contributions</p><p><b>Responsive Design'
  +'</b></p><p>Web development has encouraged new and more flexible approaches '
  +'to UI design. Unfortunately it has also led to an explosion of choice in th'
  +'is area. In practice this fragmentation creates new costs as well as benefi'
  +'ts for our target user base. To counter this trend, XIDE only supports a si'
  +'mple responsive design layout paradigm.</p><p>In practice this consists of '
  +'a Main page, Tab controls and Popups to define the constituent pages in a U'
  +'I design. Horizontal and Vertical layout boxes (together with associated al'
  +'ignment properties) are then nested within these pages to control the final'
  ,' layout of components on the page.</p><p><b>Writing application code</b></p'
  +'><p>XIDE uses an event driven model where event handlers written in Pascal '
  +'can be attached to pre defined events triggered by objects in the user inte'
  +'rface. These procedures can be inspected and/or edited by using the object '
  +'inspector to navigate to the required UI object then pressing the ellipsis '
  +'button to the right of the required event in its events tab. This creates a'
  +'n entry for that event handler under the "Event Handlers"node in the code d'
  +'esign tree. So once a handler has been added it can then also be navigated '
  +'to by selecting it in the code designer and pressing the edit button.</p><p'
  +'><b>Pascal Syntax</b></p><p>The Pascal syntax recognised by XIDE&nbsp;is th'
  +'at used by the Pas2JS variant of Free Pascal. (http://wiki.freepascal.org/p'
  +'as2js) A detail description of the supported syntax can be found here. (htt'
  +'p://wiki.freepascal.org/pas2js#RTL)</p><p><b>Unit Structure</b></p><p>Share'
  +'d code can be written by adding units, procedures and functions directly to'
  +' the code design tree. This allows some automation of routine tasks and sim'
  +'plifies the user"s access to others such as binding.&nbsp;</p><p>To allow m'
  +'aximum flexibility, it is also possible to add standard Pascal units develo'
  +'ped elsewhere as "Raw Units" These must have the "Interface"unit added to t'
  +'heir uses clause in order to be able to access the XIDE&nbsp;API. In additi'
  +'on, they can access any of the standard set of PAS2JS run time library unit'
  +'s. (http://wiki.freepascal.org/pas2js#RTL) Any other required units must be'
  +' imported into XIDE&nbsp;as additional "Raw Units"before they can be refere'
  +'nced.</p><p><b>Accessing user interface objects at run time</b></p><p>XIDE '
  +'is designed to be a cross platform rapid application development system. In'
  +' order to do this it uses a text based system description tree (The System '
  +'Design or instance tree) to reflect the state of a users program at all tim'
  +'e. This is similar to the function of the Document Object Model (DOM) in st'
  +'andard web applications.</p> <p><b>Types of API Calls</b></p><p>In XIDE&nbs'
  +'p;the instance tree describing a users project can be inspected manually us'
  +'ing the Object Inspector. This allows the user to select any node on the tr'
  +'ee and inspect and/or modify its properties or event handlers as required. '
  +'The XIDE&nbsp;API allows the same actions to be available programmatically.'
  +' This ability to generate events using code is particularly useful in autom'
  +'ated testing, asynchronous call back functions, or multi threading applicat'
  +'ions. The functions available fall into eight types viz:-</p><p></p><ul><li'
  +'>&nbsp;Dialog boxes</li><li>&nbsp;Get and/or set a property value of a UI o'
  +'bject</li><li>&nbsp;Save and load user selected data to the clipboard</li><'
  +'li>&nbsp;copy or delete a UI component or move it to a new parent.</li><li>'
  +'&nbsp;Add to, or replace, the event response for a UI object and/or trigger'
  +' such an event artificially</li><li>&nbsp;Show or hide a popup form.</li><l'
  +'i>&nbsp;Show or hide a busy indicator.</li><li>&nbsp;get and set GPU parame'
  +'ters (integer,number and image)</li></ul><p></p><p>The detail syntax for th'
  +'ese function calls is appended below. Note that unless explicitly stated, a'
  +'ll values are either strings or string arrays.</p><p><b>Asynchronous Calls,'
  +' Multi Threading and Initialization functions</b></p><p>Many web calls issu'
  +'e requests that need to wait for a response from a web service, database or'
  +' other remote service provider. Similarly, when starting another thread in '
  +'parallel, the main thread will often need to wait for such child threads to'
  +' return the results of their work before it can proceed. XIDE&nbsp;allows m'
  +'ain event handlers to specify a "initalisation"function. This is a block of'
  +' code which issues all such requests prior to running the main event code w'
  +'hen they have all finished executing. See below for the detail syntax of th'
  +'e available calls.</p><p>Note however that all such asynchronous calls firs'
  +'t parameter is "e"the event context (automatically declared and populated b'
  +'y Xide, behind the scenes, for every XIDE&nbsp;event) from which they have '
  +'been issued so they know where to return without requiring the user to ente'
  +'r complex boilerplate code.</p><p><b>List of&nbsp;XIDE&nbsp;specific API pr'
  +'ocedure and function calls</b></p> <p></p><ul><li>Procedure showMessage(Tex'
  +'tMessage:string);</li><li>Procedure consoleLog(TextMessage:string);</li><li'
  +'>Function&nbsp; &nbsp;confirm(TextMessage:string):boolean;</li><li>Function'
  +'&nbsp; &nbsp;prompt(TextMessage,promptString:string):string;</li><li>Proced'
  +'ure setPropertyValue(nodeName:String;propName:String;newValue:String);</li>'
  +'<li>Procedure setPropertyValueIndexed(nodeName:String;propName:String;newVa'
  +'lue:TStringArray; x,y:integer);</li><li>Function&nbsp; &nbsp;getPropertyVal'
  ,'ue(nodeName:String;propName:String):string;</li><li>Function&nbsp; &nbsp;ge'
  +'tPropertyValueIndexed(nodeName:String;propName:String; x,y,w,h:integer):Tst'
  +'ringArray; <i>// When accessing array properties, "x" and "y" are the index'
  +' positions for the top left position for the range to start. "w" and "h" ar'
  +'e the width and height of the range. The type TStringArray is declared in p'
  +'ascal as&nbsp; "My string array = Array of String;"&nbsp; when accesed as a'
  +' string it"s format is [["a","b","c"......"z"],["1","2","3"....."9"],....[.'
  +'..etc....]]</i></li><li>Procedure copyToClip(str:String);<i> //Place the st'
  +'ring on the clipboard&nbsp;</i></li><li>Procedure copyFromClip(e); <i>// Fe'
  +'tch text from clipboard (note that this is an async operation so this line '
  +'of code can only appear in an initialization tab of an event procedure. Aft'
  +'er this has executed the main event code tab can access the result using th'
  +'e parameter e.returnString )</i></li><li>Function&nbsp; loadTableFromExcelC'
  +'opy(TableName,CopiedString:String); //<i> Populate the given TXTable compon'
  +'ent with a string in Excel format (eg. as copied from a spreadsheet)</i></l'
  +'i><li>Procedure copycomponent(NodeToBeCopied,NewParentId,NewNodeID:string);'
  +'</li><li>Function&nbsp; &nbsp;deletecomponent(NodeID:string):boolean; <i>//'
  +' this returns true if the operation succeeds in deleteing the node (i.e. it'
  +' existed and has been deleted)</i></li><li>Procedure moveComponent(nodeId,N'
  +'ewParentId:string);<i>// Re-parent the given XIDE component&nbsp;</i></li><'
  +'li>Procedure doEvent(EventType,NodeId,myValue:string);<i> //Execute the eve'
  +'nt code for the given XIDE event type. To modify the response to an exiting'
  +' event add an "EventTrapper" component to the system this will see the full'
  +' event stream&nbsp; allowing you to filter this for the event of interest a'
  +'nd code the appropriate additional action.&nbsp; Available information on e'
  +'ach event consists of the following system defined variables. "e.EventType,'
  +' e.NodeId, e.eventvalue : string;" to then continue to run the default even'
  +'t code, set "e.ContinueAfterTrappers = true;" at the end of the event handl'
  +'er&nbsp;</i></li><li>Procedure showXForm(XFormID:String; modal:Boolean);</l'
  +'i><li>Procedure closeXForm(XFormID:String);</li><li>Procedure showBusy;</li'
  +'><li>Procedure hideBusy;</li><li>Procedure setGpuParamNumValue(GPUName,pNam'
  +'e:String;pValue:number);</li><li>Procedure setGpuConstIntValue(GPUName,pNam'
  +'e:String;pValue:integer);</li><li>Procedure setGpuParamImgValue(GPUName,pNa'
  +'me:String;pValue:TImgArray);&nbsp;</li><li>Function&nbsp; &nbsp;getGpuPramN'
  +'umValue(GPUName,pName:String):number;&nbsp;&nbsp;</li><li>Function&nbsp; &n'
  +'bsp;getGpuConstIntValue(GPUName,pName:String):integer;&nbsp;&nbsp;</li><li>'
  +'Function&nbsp; &nbsp;getGpuParamImgValue(GPUName,pName:String):TImgArray;&n'
  +'bsp;&nbsp;</li><li><li>Function&nbsp; &nbsp;getGPUPixelArray(GPUName:String'
  +'):T3DNumArray;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp'
  +'; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;get'
  +'GPUPixelArrayAsString(GPUName:String):String;&nbsp; &nbsp; &nbsp; &nbsp; &n'
  +'bsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</li><li'
  +'>Function&nbsp; &nbsp;getGPUStageArray(GPUName:String):T3DNumArray;&nbsp; &'
  +'nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'
  +' &nbsp; &nbsp;&nbsp;</li><li>Function&nbsp; &nbsp;getGPUStageArrayAsString('
  +'GPUName:String):String;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb'
  +'sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</li></li></ul><p><b>App Devel'
  +'opment and Deployment</b></p><p>During the development phase of a project X'
  +'IDE&nbsp;will usually be loaded in interactive app design mode where you ca'
  +'n edit the user interface design and the code behind it. Here by default, t'
  +'he IDE re-loads the project you were last working on.&nbsp;</p><p>New proje'
  +'cts can be started by clearing the current system or loading a previously s'
  +'aved system from the clipboard. This behaves the same in native host enviro'
  +'nments (Windows or Linux) as it does in Chrome or Android. At the end of th'
  +'is phase, you will sometimes want to deploy the developed app to end users '
  +'without allowing access to the IDE. In this case, select the "System / Depl'
  +'oy" option from the main menu and this will generate a self contained HTML '
  +'page implementing your application and the run time environment needed to e'
  +'xecute it, but with the interactive IDE features disabled. You can now load'
  +' this to a server of your choice, or email directly to your end user so the'
  +'y can run it from their file system.&nbsp;</p><p>Alternatively, if you wish'
  +' to give them access to inspect and perhaps contribute to, or modify, the a'
  +'pp, then distribute the blank XIDE app for their preferred platform (Chrome'
  +' / Linux / Windows / Android) and use the "System / Save" option to generat'
  ,'e a app definition file that they can load into it using the "System / Load'
  +'" option on the main menu.&nbsp;</p><p><b>Debugging</b></p><p>When testing '
  +'Pascal code you have written using XIDE, the PAS2JS compiler error messages'
  +' will flag any source code syntax problems. If you click on one of these er'
  +'ror messages this will position the cursor at the relevant character positi'
  +'on in the line of code in the XIDE&nbsp;code editor. Run time errors will s'
  +'ometimes be trapped by error handlers built in to XIDE&nbsp;and generate a '
  +'helpful error message. If this is not sufficient to uniquely identify the c'
  +'ause of the problem then "ctrl shift J" in Chrome will bring up the built i'
  +'n developer console which will hopefully provide the additional information'
  +' you need to track down the problem.</p><h3>Implementation, Extensibility a'
  +'nd Licensing<br></h3><p>XIDE is implemented using the Pas2JS dialect of the'
  +' Object Pascal programming language. This is because it is efficient, easy '
  +'to learn, and is available on a wide range of processor architectures.&nbsp'
  +';</p><p>Sometimes, as projects go through their life cycle, new more specia'
  +'list requirements emerge. At this point the XIDE framework can be extended '
  +'using project or platform specific custom components developed in Lazarus. '
  +'Alternatively the HTML and JavaScript code generated by XIDE can be importe'
  +'d into a general-purpose web design tool stack to enable full enterprise le'
  +'vel development.&nbsp;</p><p>XIDE is an open source project distributed usi'
  +'ng the same licence as Lazarus (GPL)</p><h3>Development Roadmap</h3><p>As a'
  +'n open source project, the future development of XIDE depends on how many c'
  +'ollaborators choose to contribute to the project, and which aspects are mos'
  +'t important to them.&nbsp;</p><p>The initial project has focused on functio'
  +'nality rather than style or speed, and on the ability to operate as a fully'
  +' self contained IDE with the minimum of dependencies.&nbsp;</p><p>As the pr'
  +'oject matures, it is hoped that new collaborators may add web connectivity,'
  +' database access, comprehensive style support, support for other operating '
  +'systems (eg IOS) or browsers other than Chrome.&nbsp;</p><h3>Compatibility<'
  +'/h3><p>In desktop mode, XIDE is designed to run on platforms supported by L'
  +'azarus and the Chromium Embedded Framework (i.e. most desktop platforms). I'
  +'f the latter is not available then XIDE can still run but will then not sup'
  +'port SVG or other embedded browser features.&nbsp;</p><p>In browser mode XI'
  +'DE should run on any up to date HTML5 enabled browser. However as it is tar'
  +'geting closed user groups (where the browser can be specified)&nbsp; it is '
  +'only tested on recent versions of Chrome.&nbsp;</p><p>Alternatively, Electr'
  +'on or Cordova and Crosswalk can be used to provide a hybrid implementation '
  +'of XIDE. This gives full Web connectivity and CSS on a wide range of platfo'
  +'rms but with a trade off in terms of size,speed and security.</p><p><br></p'
  +'><p></p>'';'#13#10#13#10#13#10'{ TXIDEHelpForm }'#13#10#13#10'{$ifndef JScr'
  +'ipt}'#13#10'procedure TXIDEHelpForm.FormCreate(Sender: TObject);'#13#10'beg'
  +'in'#13#10'  myNode:=DoXFormCreated(self);'#13#10'  HelpFormRoot:=FindDataNo'
  +'deById(myNode,''HelpFormVBox1'','''',true);'#13#10#13#10'  HelpHTMLText.Sou'
  +'rceText:=BaseHTML;'#13#10#13#10'//  self.HelpHTMLEditor.SuspendRefresh:=tru'
  +'e;'#13#10'//  self.HelpHTMLEditor.HeaderHTML:=''<h2 style=" text-align: cen'
  +'ter;">XIDE -- (A Free-Pascal Run Time Environment for Chrome/Linux/Windows/'
  +'Android)</h2>'';'#13#10'//  self.HelpHTMLEditor.FooterHTML:=''<h5 style=" t'
  +'ext-align: center;">Powered by PAS2JS courtesy of Michael Van Canneyt and M'
  +'attias Gaertner see http://wiki.freepascal.org/pas2js for details. </h5>'';'
  +#13#10'//  self.HelpHTMLEditor.SuspendRefresh:=false;'#13#10#13#10#13#10'end'
  +';'#13#10#13#10'procedure TXIDEHelpForm.FormActivate(Sender: TObject);'#13#10
  +'begin'#13#10'end;'#13#10#13#10'procedure TXIDEHelpForm.FormResize(Sender: T'
  +'Object);'#13#10'begin'#13#10'  DoFormResize(self, HelpFormVBox1);'#13#10'en'
  +'d;'#13#10#13#10'procedure TXIDEHelpForm.FormShow(Sender: TObject);'#13#10'b'
  +'egin'#13#10'  {$ifdef Chromium}'#13#10'  // cef issue.  Browser is reset to'
  +' nil once the form is displayed (so Editor comes up blank), so reinitialize'
  +' here if reqd.'#13#10'//  HelpHTMLEditor.myStartupTimer.Enabled := True;'#13
  +#10'//  HelpHTMLEditor.RedisplayFrame('''');'#13#10'  {$endif}'#13#10#13#10
  +'end;'#13#10#13#10'procedure TXIDEHelpForm.LoadNewText(Data: PtrInt);'#13#10
  +'var'#13#10'  ss: TStringStream;'#13#10'  NewHTML: TIpHtml;'#13#10' // calle'
  +'d from main thread after all other messages have been processed to allow th'
  +'read safe TMemo access'#13#10'  ReceivedQueueRec: TQueueRec;'#13#10'begin'
  +#13#10'  ReceivedQueueRec := PQueueRec(Data)^;'#13#10'  ss := TStringStream.'
  +'Create(ReceivedQueueRec.QEventValue);'#13#10'  try'#13#10'    NewHTML := TI'
  ,'pHtml.Create; // Will be freed automatically by IpHtmlPanel1'#13#10'    TIp'
  +'HtmlPanel(XIDEHelpForm.HelpHTMLText.myControl).SetHtml(NewHTML);'#13#10'   '
  +' NewHTML.LoadFromStream(ss);'#13#10'  finally'#13#10'    ss.Free;'#13#10'  '
  +'end;'#13#10'end;'#13#10#13#10'(*'#13#10'//!!!! async proc here to fetch new'
  +' value'#13#10'procedure TXIDEHelpForm.HelpHTMLEditorHandleChange(e: TEventS'
  +'tatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'#13#10'var'#13#10
  +'  newText:String;'#13#10'  ss: TStringStream;'#13#10'  NewHTML: TIpHtml;'#13
  +#10'  QueueRecToSend: PQueueRec;'#13#10'begin'#13#10'  // !! got here via an'
  +' event raised inside the HTMLEditor, so there''s some cef-internal threadin'
  +'g going on, so'#13#10'  // we can''t directly update another component from'
  +' here (likely to fall over) and also can''t throw a timer,'#13#10'  // so d'
  +'o whatever is next by using an async function (which will run in the main t'
  +'hread and not cause problems).'#13#10'  // HelpHTMLText.SourceText:=HelpHTM'
  +'LEditor.SourceText;'#13#10#13#10'  newText:=HelpHTMLEditor.SourceText;'#13
  +#10'  newText:=HelpHTMLText.CreateTextURL(newText).Text;'#13#10'  HelpHTMLTe'
  +'xt.myNode.SetAttributeValue(''SourceText'',newText);'#13#10#13#10'  New(Que'
  +'ueRecToSend);'#13#10'  QueueRecToSend^.QEventValue:= newText;'#13#10'  Appl'
  +'ication.QueueAsyncCall(@self.LoadNewText, PtrInt(QueueRecToSend)); // put m'
  +'sg into queue that will be processed from the main thread after all other m'
  +'essages'#13#10'end;'#13#10'*)'#13#10#13#10'{$endif}'#13#10#13#10'procedure '
  +'TXIDEHelpForm.InitialiseonShow;'#13#10'var'#13#10'  txt:String;'#13#10'begi'
  +'n'#13#10'  self.Top:=100;'#13#10'  self.Left:=150;'#13#10'  HelpHTMLText.So'
  +'urceText:=HelpHTMLText.SourceText;'#13#10#13#10'end;'#13#10#13#10'end.'#13
  +#10#13#10
]);
LazarusResources.Add('savedsystems','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit SavedSystems;'#13#10
  +#13#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13
  +#10'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, Nod'
  +'eUtils,'#13#10'  {$ifndef JScript}'#13#10'  FileUtil, Forms, Controls, Grap'
  +'hics, Dialogs,'#13#10'  LCLIntf, ExtCtrls, Menus, ComCtrls, TypInfo, LazIDE'
  +'Intf,'#13#10'  LazsUtils,'#13#10'  UtilsJSCompile, Events, Types,'#13#10'  '
  +'{$else}'#13#10'  HTMLUtils,'#13#10'  {$endif}'#13#10'  XScrollBox, XVBox, X'
  +'HBox, XTree, XMemo, XTabControl, XButton, XLabel,'#13#10'  XEditBox, XCheck'
  +'Box, XHyperLink, XRadioBtns, XForm, XComboBox,'#13#10'  EventsInterface, XO'
  +'bjectInsp ;'#13#10#13#10'type'#13#10#13#10'  { TSavedSystemsForm }'#13#10#13
  +#10'  TSavedSystemsForm = class(TXForm)'#13#10'    SavedSystemsList: TXTree;'
  +#13#10'    SavedSystemsVBox: TXVBox;'#13#10'    SavedSystemsLoad: TXButton;'
  +#13#10'    SavedSystemsBtns: TXHBox;'#13#10'    SavedSystemsCancel: TXButton'
  +';'#13#10'    SavedSystemsDelete: TXButton;'#13#10'    {$ifndef JScript}'#13
  +#10'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormResi'
  +'ze(Sender: TObject);'#13#10'    {$endif}'#13#10'    procedure SavedSystemsC'
  +'ancelHandleButtonClick(e: TEventStatus;'#13#10'      nodeID: AnsiString; my'
  +'Value: AnsiString);'#13#10'    procedure SavedSystemsDeleteHandleButtonClic'
  +'k(e: TEventStatus;'#13#10'      nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'    procedure SavedSystemsLoadHandleButtonClick(e: TEventStatus;'#13
  +#10'      nodeID: AnsiString; myValue: AnsiString);'#13#10#13#10'  public'#13
  +#10'    procedure Initialise;'#13#10#13#10'  end;'#13#10#13#10'var'#13#10'  '
  +'SavedSystemsForm: TSavedSystemsForm;'#13#10'//  TopComponent:TControl;'#13
  +#10#13#10'implementation'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{$ifndef JScri'
  +'pt}'#13#10'//procedure TSavedSystemsForm.FormCreate(Sender: TObject);'#13#10
  +'//begin'#13#10'//  myNode:=DoXFormCreated(self);'#13#10'//end;'#13#10'//'#13
  +#10'//procedure TSavedSystemsForm.FormResize(Sender: TObject);'#13#10'//begi'
  +'n'#13#10'//  DoFormResize(self, SavedSystemsVBox);'#13#10'//end;'#13#10'//'
  +#13#10#13#10'procedure TSavedSystemsForm.FormCreate(Sender: TObject);'#13#10
  +'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'end;'#13#10#13#10'proce'
  +'dure TSavedSystemsForm.FormResize(Sender: TObject);'#13#10'begin'#13#10'  D'
  +'oFormResize(self, SavedSystemsVBox);'#13#10'end;'#13#10#13#10'{$endif}'#13
  +#10#13#10'procedure TSavedSystemsForm.SavedSystemsCancelHandleButtonClick('
  +#13#10'  e: TEventStatus; nodeID: AnsiString; myValue: AnsiString);'#13#10'b'
  +'egin'#13#10'  TXForm(self).Showing:=''No'';'#13#10'end;'#13#10#13#10'functi'
  +'on RemoveDate(NodeString:String):String;'#13#10'var'#13#10'  i,j:integer;'
  +#13#10'begin'#13#10'  i:=FoundString(NodeString,''      '');'#13#10'  if i>1'
  +' then'#13#10'  begin'#13#10'    for j:=1 to i-1 do'#13#10'      result:=res'
  +'ult+NodeString[j];'#13#10'  end'#13#10'  else'#13#10'    result:=NodeString'
  +';'#13#10'end;'#13#10#13#10'procedure TSavedSystemsForm.SavedSystemsDeleteHa'
  +'ndleButtonClick('#13#10'  e: TEventStatus; nodeID: AnsiString; myValue: Ans'
  +'iString);'#13#10'var'#13#10'  SysName:String;'#13#10'begin'#13#10'  // Get '
  +'SysName from the currently selected item in SavedSystemsList'#13#10'  SysNa'
  +'me:=RemoveDate(SavedSystemsList.SelectedNodeText);'#13#10'  {$ifndef JScrip'
  +'t}'#13#10'  SysName:=''SavedSystems/''+SysName;'#13#10'  {$endif}'#13#10'  '
  +'if SysName<>'''' then'#13#10'  begin'#13#10'    if XIDEConfirm(''OK to dele'
  +'te stored system ''+SysName+''?'') then'#13#10'    begin'#13#10'      Clear'
  +'LocalStore( SysName+''.xide'');'#13#10'      Initialise;'#13#10'    end;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'procedure TSavedSystemsForm.SavedSystems'
  +'LoadHandleButtonClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue'
  +': AnsiString);'#13#10'var'#13#10'  SysName:String;'#13#10'begin'#13#10'  //'
  +' Get SysName from the currently selected item in SavedSystemsList'#13#10'  '
  +'SysName:=RemoveDate(SavedSystemsList.SelectedNodeText);'#13#10'  if SysName'
  +'<>'''' then'#13#10'  begin'#13#10'    OILoadSavedSystem2(SysName);'#13#10' '
  +'   TXForm(self).Showing:=''No'';'#13#10'  end;'#13#10'end;'#13#10#13#10'pro'
  +'cedure TSavedSystemsForm.Initialise;'#13#10'var'#13#10'  NamesList:TStringL'
  +'ist;'#13#10'  TreeString:String;'#13#10'  i:integer;'#13#10'begin'#13#10'  '
  +'// populate SavedSystemsList from stored data'#13#10'  NamesList:=TStringLi'
  +'st.Create;'#13#10'  NamesList.Clear;'#13#10'  DiscoverSavedSystems(NamesLis'
  ,'t);'#13#10#13#10'//Example Tree String = ''["myTreeName",["AAAAAA","BBBBB"]'
  +',"CCCCC","DDDDDD",["EEEEE","FFFFF"],"GGGGG"]'';'#13#10'  TreeString:=''["Sa'
  +'ved Systems"'';'#13#10#13#10'  for i:=0 to NamesList.count-1 do'#13#10'  be'
  +'gin'#13#10'    if NamesList[i]<>'''' then'#13#10'      TreeString:=TreeStri'
  +'ng + '',"'' + NamesList[i] + ''"'';'#13#10'  end;'#13#10'  TreeString:=Tree'
  +'String + '']'';'#13#10'  SavedSystemsList.TreeData:=TreeString;'#13#10#13#10
  +'  NamesList.Free;'#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('stylesutils','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit StylesUtils;'#13#10#13
  +#10'{$ifdef Dll}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'int'
  +'erface'#13#10'uses Classes, Sysutils, StringUtils, NodeUtils, EventsInterfa'
  +'ce'#13#10' {$ifndef JScript}'#13#10' , Dialogs,XTree'#13#10' {$else}'#13#10
  +' ,Math, contnrs, dateutils, rtlconsts, strutils, types, typinfo,'#13#10' XT'
  +'ree, InterfaceTypes'#13#10' {$endif}'#13#10' ;'#13#10#13#10'//["StyleResour'
  +'ces","StyleRule",["StyleTargets",["TargetTypes",["WidgetType",["All"],["Num'
  +'eric","ProgressBar","NumericSlider","NumberSpinner"],["Text","LabelText","H'
  +'yperlink","EditBox","Memo","Table"],["Selectors","Button","CheckBox","Radio'
  +'Buttons","ComboBox","Tree","DatePicker","ColorPicker","MainMenu","MenuItem"'
  +'],["LayoutWidgets","HBox","VBox","GroupBox","ScrollBox","TabControl","TabSh'
  +'eet","Form"]],["Identifier","ClassName","WidgetID"]],["TargetGrouping","(An'
  +'d)","(Or)","Not(And)","Not(Or)"]],["StyleProperties",["Widget","WidgetPaddi'
  +'ng","WidgetBorder","WidgetCorners","WidgetMargin","WidgetBackground"],["Fon'
  +'t","FontFamily","FontSize","FontColor","FontBackgroundColor","FontWeight","'
  +'FontStyle"],["Transformations","Rotate","Scale","Skew"],["States","Selectab'
  +'le","Cursor","Visibility"],["Effects","Transition","Filter"]]]'#13#10#13#10
  +'// Priority has four levels'#13#10'//   1) !important external rule'#13#10
  +'//   2) !important internal rule'#13#10'//   3)  normal    external rule'#13
  +#10'//   4)  normal    internal rule'#13#10'// where user style rules are ge'
  +'nerated in an external style sheet and author style rules are inline'#13#10
  +#13#10'//Expanding logical functions using Domorgan''s law'#13#10'//   or...'
  +'.......   A, B, C {}'#13#10'//   and.........   ABC {}'#13#10'//   nor.....'
  +'....  :not(A):not(B):not(C) {}'#13#10'//   nand........  :not(A), :not(B), '
  +':not(C) {}'#13#10#13#10'// <sup>.....</sup>  and  <sub>.....</sub> tags def'
  +'ine superscript and subscript text - it is not done in style markup'#13#10
  +'type'#13#10#13#10'  TCSSTreeNodes = (All,Priority,Group,StyleResources,Styl'
  +'eSheet,StyleRule,StyleTargets,TargetGrouping,_And_,_Or_,Not_And_,Not_Or_,Ta'
  +'rgetTypes,WidgetType,Numeric,ProgressBar,NumericSlider,NumberSpinner,Text,L'
  +'abelText,Hyperlink,EditBox,Memo,Table,Selectors,Button,CheckBox,RadioButton'
  +'s,ComboBox,Tree,DatePicker,ColorPicker,MainMenu,MenuItem,LayoutWidgets,HBox'
  +',VBox,GroupBox,ScrollBox,TabControl,TabSheet,Form,Identifier,ClassName,Widg'
  +'etID,Relationship,ChildrenOf,DescendentsOf,SiblingsOf,State,Hover,Visited,F'
  +'ocused,StyleProperties,Widget,WidgetCorners,WidgetPadding,WidgetMargin,Widg'
  +'etBorder,WidgetBackground,Font,FontFamily,FontSize,FontColor,FontBackground'
  +'Color,FontWeight,FontStyle,Transformations,Rotate,Scale,Skew,States,Selecta'
  +'ble,Cursor,Visibility,Effects,Transition,Filter,NotFound);'#13#10#13#10'// '
  +' TStyleTreeNode = record'#13#10'//    SNodeName,SNodeType,qualifier,Qualifi'
  +'erType : string;'#13#10'//    NodeTypeSetID:TCSSTreeNodes;'#13#10'//    chi'
  +'ldren: Array of  TStyleTreeNode;'#13#10'//  end;'#13#10#13#10'  TCSSTermLis'
  +'t = Array of TStringList;'#13#10#13#10#13#10'// Function RecursivelyGenerat'
  +'eTheTreeDescriptionString(SelectedNode:TStyleTreeNode):string;'#13#10' proc'
  +'edure InitStyleTreeDisplay;'#13#10' Procedure SetCSSNodeTypes;'#13#10' Proc'
  +'edure SetStyleOptions;'#13#10' procedure InitialiseStyleDesigner;'#13#10' P'
  +'rocedure SetCSSEditorStyles;'#13#10' procedure  UpdateOrCreateStyleSheet(St'
  +'yleText,myStyleSheetTitle:string;pos:integer);'#13#10#13#10'var'#13#10'  Al'
  +'lowChildren            : Set of TCSSTreeNodes;'#13#10'  StyleSheetNodes    '
  +'      : Set of TCSSTreeNodes;'#13#10'  StyleRuleNodes           : Set of TC'
  +'SSTreeNodes;'#13#10'  ClassificationNodes      : Set of TCSSTreeNodes;'#13
  +#10'  TargetGroupingNodes      : Set of TCSSTreeNodes;'#13#10'  Relationship'
  +'Nodes        : Set of TCSSTreeNodes;'#13#10'  StyletargetNodes         : Se'
  +'t of TCSSTreeNodes;'#13#10'  StylePropertyNodes       : Set of TCSSTreeNode'
  +'s;'#13#10'  EditableTargetNodes      : Set of TCSSTreeNodes;'#13#10'  Targe'
  +'tNodesWithOptions   : Set of TCSSTreeNodes;'#13#10'  StyleRuleSelectors    '
  +'   : Set of TCSSTreeNodes;'#13#10#13#10'{$ifndef JScript}'#13#10'{$else}'#13
  +#10#13#10'Var'#13#10'  DropTarget:string;'#13#10'  PreviousDropTarget:string'
  +';'#13#10#13#10'//  SelectedStyleSheetNodePointer:TStyleTreeNode ;'#13#10'  '
  +'InlineCSSText,ExternalCSSText:string;'#13#10'  StyleRootNode:TDataNode;'#13
  +#10#13#10'  // these procedures are called from the button event handlers'#13
  ,#10'  Function PasteSelectedStyleResources(AllowDrop:Boolean;HoverOver:Strin'
  +'g;mute:Boolean;ValueObject:TNodeEventValue):boolean;// this paste the selec'
  +'ted style rescource to the style instance tree'#13#10'  Procedure ValidateS'
  +'tyleTree;'#13#10'  Procedure DeleteStyleNode;'#13#10'  Procedure PopulateSt'
  +'yleEditor(editInsteadOfDropDown:boolean);'#13#10'  Procedure GenerateStyleS'
  +'heets;'#13#10'  Procedure RefreshStyleSheet(InternalStyleText,ExternalStyle'
  +'Text:string);'#13#10'  Function NotSystemClassName(TestString:String):Boole'
  +'an;'#13#10'  procedure  RemoveStyleSheet(myStyleSheetTitle:string);'#13#10
  +#13#10#13#10'  // these are forward declarations'#13#10'  procedure Initiali'
  +'seStyleResources;'#13#10'  Function GetTypeFromString(instring:string):stri'
  +'ng;'#13#10'  function GetOptionType(SNodeType:String):String;'#13#10'  func'
  +'tion GetQualifierValue(instring:String):string;'#13#10'  Function ResourceN'
  +'odeSetIDOf(snodename:string;quiet:boolean):TCSSTreeNodes;'#13#10'  Function'
  +' stripOutQualifierInfo(instring:string):string;'#13#10'  Function GetName1('
  +'instring:string):string;'#13#10'  Procedure UpdateNodeQualifierField;'#13#10
  +#13#10'{$endif}'#13#10#13#10'var'#13#10'  StyleOptions:Array of TStringList;'
  +#13#10'  StylesNode:TDataNode;'#13#10'  CSSTermList:TCSSTermList;'#13#10#13
  +#10'implementation'#13#10'uses XObjectInsp;'#13#10#13#10#13#10'{$ifndef JScr'
  +'ipt}'#13#10#13#10'{$else}'#13#10#13#10'Procedure Watch(instring:string);'#13
  +#10'begin'#13#10'  setpropertyvalue(''WatchBox'',''ItemValue'',instring)'#13
  +#10'end;'#13#10#13#10#13#10'  Function GetTypeFromString(instring:string):st'
  +'ring;'#13#10'  var Namestringstart:integer;'#13#10'  begin'#13#10'    //sho'
  +'wmessage(''GetTypeFromString <''+instring+''<'');'#13#10'    instring:=trim'
  +'(instring);'#13#10'    //showmessage(''GetTypeFromString 2'');'#13#10'    i'
  +'f      (LeftStr(instring,5) = ''(And)''   ) then GetTypeFromString:=LeftStr'
  +'(instring,5)'#13#10'    else if (LeftStr(instring,4) = ''(Or)''    ) then G'
  +'etTypeFromString:=LeftStr(instring,4)'#13#10'    else if (LeftStr(instring,'
  +'8) = ''Not(And)'') then GetTypeFromString:=LeftStr(instring,8)'#13#10'    e'
  +'lse if (LeftStr(instring,7) = ''Not(Or)'' ) then GetTypeFromString:=LeftStr'
  +'(instring,7)'#13#10'    else'#13#10'    begin'#13#10'      Namestringstart:'
  +'=Pos(''.'',instring);'#13#10'      if Namestringstart>0 then GetTypeFromStr'
  +'ing:=LeftStr(instring,Namestringstart-1)'#13#10'      else GetTypeFromStrin'
  +'g:=instring ;'#13#10'    end;'#13#10'  end;'#13#10#13#10'Function stripOutQ'
  +'ualifierInfo(instring:string):string;'#13#10'var outstr:string;'#13#10'Qual'
  +'ifierstringstart,Qualifierstringend:integer;'#13#10'begin'#13#10'    outstr'
  +':=instring;'#13#10'    if not(    (LeftStr(instring,5) = ''(And)''   )'#13
  +#10'            or (LeftStr(instring,4) = ''(Or)''    )'#13#10'            o'
  +'r (LeftStr(instring,8) = ''Not(And)'')'#13#10'            or (LeftStr(instr'
  +'ing,7) = ''Not(Or)'' ) )'#13#10'    then'#13#10'    begin'#13#10'      Qual'
  +'ifierstringstart:=Pos(''('',instring);'#13#10'      Qualifierstringend:=Pos'
  +'('')'',instring);'#13#10'      if  ((Qualifierstringend-Qualifierstringstar'
  +'t)>0)'#13#10'      then'#13#10'      begin'#13#10'        outstr:=LeftStr(i'
  +'nstring,Qualifierstringstart-2)+Rightstr(instring,length(instring)-Qualifie'
  +'rstringend);'#13#10'      end;'#13#10'    end;'#13#10'    stripOutQualifier'
  +'Info:=outstr;'#13#10' end;'#13#10#13#10'Function GetName1(instring:string):'
  +'string;'#13#10'var outstr:string;'#13#10'markerPos:integer;'#13#10'begin'#13
  +#10'    outstr:=instring;'#13#10'    markerPos:=RPos(''.'',instring);'#13#10
  +'    outstr:=Rightstr(instring,length(instring)-markerPos+1);'#13#10'    //s'
  +'howmessage(''GetName1 found ''+outstr+'' from ''+instring);'#13#10'    GetN'
  +'ame1:=outstr;'#13#10' end;'#13#10#13#10'function GetQualifierValue(instring'
  +':String):string;'#13#10'var'#13#10'  slist:TStringList;'#13#10'  i:integer;'
  +#13#10'  markerPos1, markerPos2:integer;'#13#10'  str:String;'#13#10'begin'
  +#13#10'  slist:=TStringList.Create;'#13#10'  slist.StrictDelimiter:=true;'#13
  +#10'  slist.Delimiter:=''.'';'#13#10'  slist.LineBreak:=''.'';'#13#10'  slis'
  +'t.SkipLastLineBreak:=true;'#13#10'  slist.Text:=instring;'#13#10'//  for i:'
  +'=0 to slist.count-1 do'#13#10'//    showmessage(''i=''+inttostr(i)+'' ''+sl'
  +'ist[i]);'#13#10#13#10'  // if the list has only 2 elements, then those are '
  +'the type, and the name.'#13#10'  // otherwise, the first element is the typ'
  +'e, and the last is the name.'#13#10'  // the ''middle'' elements concatenat'
  +'e back together to give the qualifier string.'#13#10#13#10'  // NEW: 2 elem'
  +'ents should now be type.value.  (there is no name)'#13#10#13#10'  str:='''''
  +';'#13#10'  if slist.count>2 then'#13#10'  begin'#13#10'    // old data...th'
  +'ere was a ''name''. Remove it.'#13#10'    str:=slist.Text;'#13#10'    if st'
  +'r[length(str)]<>'')'' then'#13#10'      slist.Delete(slist.count-1);'#13#10
  ,'  end;'#13#10'  if slist.count>=2 then'#13#10'  begin'#13#10'    slist.Dele'
  +'te(0);'#13#10'    str:=slist.Text;'#13#10'//    showmessage(''str=>''+str+'
  +'''<'');'#13#10'    if (length(str)>0) then'#13#10'    begin'#13#10'      //'
  +' remove trailing delimiter (.)'#13#10'      if str[length(str)]=''.'' then'
  +#13#10'        Delete(str,length(str),1);'#13#10'      // remove parentheses'
  +' around the qualifier value'#13#10'      if str[1]=''('' then'#13#10'      '
  +'  Delete(str,1,1);'#13#10'      if str[length(str)]='')'' then'#13#10'     '
  +'   Delete(str,length(str),1);'#13#10'    end;'#13#10'//    showmessage(''mo'
  +'dified str=>''+str+''<'');'#13#10#13#10'  end;'#13#10#13#10'  result:=str;'
  +#13#10#13#10'  slist.Free;'#13#10'end;'#13#10#13#10#13#10'Procedure RefreshS'
  +'tyleSheet(InternalStyleText,ExternalStyleText:string);'#13#10'var indirectE'
  +'xternalStyleText:string;'#13#10'begin'#13#10'    if (length(trim(InternalSt'
  +'yleText))>0) then'#13#10'      UpdateOrCreateStyleSheet(InternalStyleText,'
  +'''myInternalStyleSheet'',-1)'#13#10'    else'#13#10'      RemoveStyleSheet('
  +'''myInternalStyleSheet'');'#13#10'    if (length(trim(ExternalStyleText))>0'
  +')'#13#10'    then'#13#10'    begin'#13#10'      //indirectExternalStyleText'
  +':=''@import url("data:text/css;charset=utf-8,''+ExternalStyleText +''") '';'
  +#13#10'      RemoveStyleSheet(''myExternalStyleSheet'');'#13#10'      asm'#13
  +#10'      var link = document.createElement(''link'');'#13#10'      link.id='
  +'''myExternalStyleSheet'';'#13#10'      link.rel = ''stylesheet'';'#13#10'  '
  +'    link.href = ''data:text/css;charset=UTF-8,'' + encodeURIComponent(Exter'
  +'nalStyleText);'#13#10'      document.getElementsByTagName(''head'')[0].appe'
  +'ndChild(link);'#13#10'      end;'#13#10'      //UpdateOrCreateStyleSheet(in'
  +'directExternalStyleText,''myExternalStyleSheet'',1);'#13#10'    end'#13#10
  +'    else'#13#10'      RemoveStyleSheet(''myExternalStyleSheet'');'#13#10'en'
  +'d;'#13#10#13#10'Procedure DeleteStyleNode;'#13#10'var SelectedNodeId, Paren'
  +'tNodeId, NodeText, SNodeType:string;'#13#10'begin'#13#10'  SelectedNodeId:='
  +'TXTree(StylesNode).SelectedNodeId;'#13#10'  ParentNodeId:=TXTree(StylesNode'
  +').GetParentOfNode(SelectedNodeId);'#13#10'  NodeText:=TXTree(StylesNode).Se'
  +'lectedNodeText;'#13#10'  SNodeType:=GetTypeFromString(NodeText);'#13#10'  i'
  +'f (SNodeType=''StyleTargets'')'#13#10'  or (SNodeType=''StyleProperties'')'
  +#13#10'  or (SNodeType=''Priority'')'#13#10'  or (SNodeType=''State'')'#13#10
  +'  or (SNodeType=''Group'')'#13#10'  or (SNodeType=''StyleSheet'')'#13#10'  '
  +'then'#13#10'    showmessage(''This node cannot be deleted'')'#13#10'  else'
  +#13#10'  begin'#13#10'    // use DeleteSelectedNode to remove the visible tr'
  +'ee node, and rebuild TreeData'#13#10'    TXTree(StylesNode).DeleteSelectedN'
  +'ode;'#13#10'    if ParentNodeId<>'''' then'#13#10'      //TXTree(StylesNode'
  +').selectedNodeId:=ParentNodeId+''Summary'';'#13#10'      TXTree(StylesNode)'
  +'.selectedNodeId:=ParentNodeId;'#13#10#13#10'    PopulateStyleEditor(false);'
  +#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'  Procedure ValidateStyleTree;'
  +#13#10'  begin'#13#10'//https://www.w3.org/TR/CSS22/selector.html'#13#10#13
  +#10'    // check all logical groups and relationship nodes have at least one'
  +' child.'#13#10'    // check that classnames and ID values exist in the syst'
  +'em.'#13#10'    // transition can only work with targets of hover, selected,'
  +' and visited.'#13#10'    // check that there is at least one style target a'
  +'nd one style property.'#13#10'    // check that relationship qualifiers onl'
  +'y have one child'#13#10'    // :matches() cannot be nested   :-webkit-any(a'
  +', b)'#13#10'//The ID selector.......................    #ID'#13#10'//The Cl'
  +'ass Selector.....................   .ClassName'#13#10'//type and class.....'
  +'....................   Div.Classname'#13#10'//"or" group...................'
  +'..........   #ID , .Classname  , Div.Classname'#13#10'//"and" group........'
  +'....................   a . b'#13#10'//parentheses..........................'
  +'..   : matches()     n.b. cannot be nested   :-webkit-any(a, b)'#13#10'// l'
  +'ogical inverse.......................   :not()  nb cannot be nested and onl'
  +'y takes a simple selector'#13#10#13#10'//  A . B = B . A'#13#10'//  A + B ='
  +' B + A'#13#10#13#10'//  A(B + C)        =  A.B + A.C      // OR node child '
  +'of an AND node'#13#10'//  (A + B).(A + C) =  A + B . C      // OR node chil'
  +'d of an AND node (term in common)'#13#10'//  A(B.C)          =  A . B . C  '
  +'    // AND node child of an AND node'#13#10'//  A + (B + C)     =  A + B + '
  +'C      // OR node child of an OR node'#13#10'//  A + (B.C)       =  A.B + A'
  +'.C      // AND node child of an OR  node'#13#10#13#10'//  A . 0       = 0'
  +#13#10'//  A . not(A)  = 0'#13#10'//  A + not(A)  = 1'#13#10'//  A + 1      '
  +' = 1'#13#10'//  A + 0       = A'#13#10'//  A . 1       = A'#13#10'//  A + A'
  +'       = A'#13#10'//  A . A       = A'#13#10'//  A + (A.B)   = A'#13#10'// '
  ,' A(A + B)    = A'#13#10'//  not(not(A)) = A'#13#10#13#10'//  not(A+B)    = '
  +'not(A) . not(B)'#13#10'//  not(A.B)    = not(A) + not(B)'#13#10#13#10'//a:h'
  +'over MUST come after a:link and a:visited in the CSS definition in order to'
  +' be effective! a:active MUST come after a:hover in the CSS definition in or'
  +'der to be effective! Pseudo-class names are not case-sensitive.'#13#10#13#10
  +#13#10'end;'#13#10#13#10#13#10'  Function getqualifierdefault(SelectedStyleS'
  +'heetNodeType:string):string;'#13#10'  var i:integer;'#13#10'      temp:stri'
  +'ng;'#13#10'      tempstringlist:tstringlist;'#13#10'  begin'#13#10'     tem'
  +'p:='''';'#13#10'     for i:= 0 to length( StyleOptions)-1 do'#13#10'     be'
  +'gin'#13#10'       tempstringlist:=StyleOptions[i];'#13#10'       if Selecte'
  +'dStyleSheetNodeType=tempstringlist[0]'#13#10'       then temp:=tempstringli'
  +'st[3];'#13#10'     end;'#13#10'     getqualifierdefault:=temp;'#13#10'  end'
  +';'#13#10#13#10'  Function getqualifierType(SelectedStyleSheetNodeType:strin'
  +'g):string;'#13#10'  var i:integer;'#13#10'      temp:string;'#13#10'      t'
  +'empstringlist:tstringlist;'#13#10'  begin'#13#10'     temp:='''';'#13#10'  '
  +'   for i:= 0 to length( StyleOptions)-1 do'#13#10'     begin'#13#10'       '
  +'tempstringlist:=StyleOptions[i];'#13#10'       if SelectedStyleSheetNodeTyp'
  +'e=tempstringlist[0]'#13#10'       then'#13#10'       begin'#13#10'         '
  +'temp:=tempstringlist[2];'#13#10'         //showmessage(''found ''+temp+'' i'
  +'n SelectedStyleSheetNodeType'');'#13#10'       end;'#13#10'     end;'#13#10
  +'      getqualifiertype:=temp;'#13#10'  end;'#13#10#13#10'function NotSystem'
  +'ClassName(TestString:String):Boolean;'#13#10'begin'#13#10'    if ((TestStri'
  +'ng<>''modal-background'')'#13#10'        and(TestString<>''modal-content'')'
  +#13#10'        and(TestString<>''vbox'')'#13#10'        and(TestString<>''vb'
  +'oxNoStretch'')'#13#10'        and(TestString<>''vboxNoFlex'')'#13#10'      '
  +'  and(TestString<>''hbox'')'#13#10'        and(TestString<>''hboxNoStretch'
  +''')'#13#10'        and(TestString<>''AlignmentCentre'')'#13#10'        and('
  +'TestString<>''AlignmentRight'')'#13#10'        and(TestString<>''AlignmentL'
  +'eft'')'#13#10'        and(TestString<>''AlignmentLeftContainer'')'#13#10'  '
  +'      and(TestString<>''AlignmentTop'')'#13#10'        and(TestString<>''Al'
  +'ignmentBottom'')'#13#10'        and(TestString<>''menu'')'#13#10'        an'
  +'d(TestString<>''menuItem'')'#13#10'        and(TestString<>''menuBar'')'#13
  +#10'        and(TestString<>''highlight-border'')'#13#10'        and(TestStr'
  +'ing<>''normal-border'')'#13#10'        and(TestString<>''no-border'')'#13#10
  +'        and(TestString<>''textAreaBorder'')'#13#10'        and(TestString<>'
  +'''TabPage'')'#13#10'        and(TestString<>''TabButton'')'#13#10'        a'
  +'nd(TestString<>''TabButtonDiv'')'#13#10'        and(TestString<>''hasChildr'
  +'en'')'#13#10'        and(TestString<>''noChildren'')'#13#10'        and(Tes'
  +'tString<>''widgetinner''))'#13#10'     then NotSystemClassName:=true'#13#10
  +'     else NotSystemClassName:=false;'#13#10'end;'#13#10#13#10#13#10'Functio'
  +'n ResourceNodeSetIDOf(Snodename:string;quiet:boolean):TCSSTreeNodes;'#13#10
  +'var nodeID:TCssTreeNodes;'#13#10'begin'#13#10'  nodeID :=NotFound;'#13#10' '
  +' if  Snodename<>'''' then'#13#10'  begin'#13#10'    if Snodename =''Priorit'
  +'y'' then nodeID :=Priority'#13#10'    else if Snodename =''State'' then nod'
  +'eID :=State'#13#10'    else if Snodename =''Group'' then nodeID :=Group'#13
  +#10'    else if Snodename =''StyleResources'' then nodeID := StyleResources'
  +#13#10'    else if Snodename =''StyleSheet'' then nodeID := StyleSheet'#13#10
  +'    else if Snodename =''StyleRule'' then nodeID := StyleRule'#13#10'    el'
  +'se if Snodename =''StyleTargets'' then nodeID := StyleTargets'#13#10'    el'
  +'se if Snodename =''TargetGrouping'' then nodeID := TargetGrouping'#13#10'  '
  +'  else if Snodename =''(And)'' then nodeID := _And_'#13#10'    else if Snod'
  +'ename =''(Or)'' then nodeID := _Or_'#13#10'    else if Snodename =''Not(And'
  +')'' then nodeID := Not_And_'#13#10'    else if Snodename =''Not(Or)'' then '
  +'nodeID := Not_Or_'#13#10'    else if Snodename =''TargetTypes'' then nodeID'
  +' := TargetTypes'#13#10'    else if Snodename =''WidgetType'' then nodeID :='
  +' WidgetType'#13#10'    else if Snodename =''Numeric'' then nodeID := Numeri'
  +'c'#13#10'    else if Snodename =''ProgressBar'' then nodeID := ProgressBar'
  +#13#10'    else if Snodename =''NumericSlider'' then nodeID := NumericSlider'
  +#13#10'    else if Snodename =''NumberSpinner'' then nodeID := NumberSpinner'
  +#13#10'    else if Snodename =''Text'' then nodeID := Text'#13#10'    else i'
  +'f Snodename =''LabelText'' then nodeID := LabelText'#13#10'    else if Snod'
  +'ename =''Hyperlink'' then nodeID := Hyperlink'#13#10'    else if Snodename '
  +'=''EditBox'' then nodeID := EditBox'#13#10'    else if Snodename =''Memo'' '
  +'then nodeID := Memo'#13#10'    else if Snodename =''Table'' then nodeID := '
  ,'Table'#13#10'    else if Snodename =''Selectors'' then nodeID := Selectors'
  +#13#10'    else if Snodename =''Button'' then nodeID := Button'#13#10'    el'
  +'se if Snodename =''All'' then nodeID := All'#13#10'    else if Snodename ='
  +'''CheckBox'' then nodeID := CheckBox'#13#10'    else if Snodename =''RadioB'
  +'uttons'' then nodeID := RadioButtons'#13#10'    else if Snodename =''ComboB'
  +'ox'' then nodeID := ComboBox'#13#10'    else if Snodename =''Tree'' then no'
  +'deID := Tree'#13#10'    else if Snodename =''DatePicker'' then nodeID := Da'
  +'tePicker'#13#10'    else if Snodename =''ColorPicker'' then nodeID := Color'
  +'Picker'#13#10'    else if Snodename =''MainMenu'' then nodeID := MainMenu'
  +#13#10'    else if Snodename =''MenuItem'' then nodeID := MenuItem'#13#10'  '
  +'  else if Snodename =''LayoutWidgets'' then nodeID := LayoutWidgets'#13#10
  +'    else if Snodename =''HBox'' then nodeID := HBox'#13#10'    else if Snod'
  +'ename =''VBox'' then nodeID := VBox'#13#10'    else if Snodename =''GroupBo'
  +'x'' then nodeID := GroupBox'#13#10'    else if Snodename =''ScrollBox'' the'
  +'n nodeID := ScrollBox'#13#10'    else if Snodename =''TabControl'' then nod'
  +'eID := TabControl'#13#10'    else if Snodename =''TabSheet'' then nodeID :='
  +' TabSheet'#13#10'    else if Snodename =''Form'' then nodeID := Form'#13#10
  +'    else if Snodename =''Identifier'' then nodeID := Identifier'#13#10'    '
  +'else if Snodename =''ClassName'' then nodeID := ClassName'#13#10'    else i'
  +'f Snodename =''WidgetID'' then nodeID := WidgetID'#13#10'    else if Snoden'
  +'ame =''Relationship'' then nodeID := Relationship'#13#10'    else if Snoden'
  +'ame =''ChildrenOf'' then nodeID := ChildrenOf'#13#10'    else if Snodename '
  +'=''DescendentsOf'' then nodeID := DescendentsOf'#13#10'    else if Snodenam'
  +'e =''SiblingsOf'' then nodeID := SiblingsOf'#13#10'    else if Snodename ='
  +'''State'' then nodeID := State'#13#10'    else if Snodename =''Hover'' then'
  +' nodeID := Hover'#13#10'    else if Snodename =''Visited'' then nodeID := V'
  +'isited'#13#10'    else if Snodename =''Focused'' then nodeID := Focused'#13
  +#10'    else if Snodename =''StyleProperties'' then nodeID := StylePropertie'
  +'s'#13#10'    else if Snodename =''Widget'' then nodeID := Widget'#13#10'   '
  +' else if Snodename =''WidgetCorners'' then nodeID := WidgetCorners'#13#10' '
  +'   else if Snodename =''WidgetPadding'' then nodeID := WidgetPadding'#13#10
  +'    else if Snodename =''WidgetMargin'' then nodeID := WidgetMargin'#13#10
  +'    else if Snodename =''WidgetBorder'' then nodeID := WidgetBorder'#13#10
  +'    else if Snodename =''WidgetBackground'' then nodeID := WidgetBackground'
  +#13#10'    else if Snodename =''Font'' then nodeID := Font'#13#10'    else i'
  +'f Snodename =''FontFamily'' then nodeID := FontFamily'#13#10'    else if Sn'
  +'odename =''FontSize'' then nodeID := FontSize'#13#10'    else if Snodename '
  +'=''FontColor'' then nodeID := FontColor'#13#10'    else if Snodename =''Fon'
  +'tBackgroundColor'' then nodeID := FontBackgroundColor'#13#10'    else if Sn'
  +'odename =''FontWeight'' then nodeID := FontWeight'#13#10'    else if Snoden'
  +'ame =''FontStyle'' then nodeID := FontStyle'#13#10'    else if Snodename ='
  +'''Transformations'' then nodeID := Transformations'#13#10'    else if Snode'
  +'name =''Rotate'' then nodeID := Rotate'#13#10'    else if Snodename =''Scal'
  +'e'' then nodeID := Scale'#13#10'    else if Snodename =''Skew'' then nodeID'
  +' := Skew'#13#10'    else if Snodename =''States'' then nodeID := States'#13
  +#10'    else if Snodename =''Selectable'' then nodeID := Selectable'#13#10' '
  +'   else if Snodename =''Cursor'' then nodeID := Cursor'#13#10'    else if S'
  +'nodename =''Visibility'' then nodeID := Visibility'#13#10'    else if Snode'
  +'name =''Effects'' then nodeID := Effects'#13#10'    else if Snodename =''Tr'
  +'ansition'' then nodeID := Transition'#13#10'    else if Snodename =''Filter'
  +''' then nodeID := Filter'#13#10'    else if (quiet = false) then showmessag'
  +'e(''node name >''+Snodename+''< not found'');'#13#10'  end;'#13#10'  Resour'
  +'ceNodeSetIDOf:= nodeID;'#13#10'end;'#13#10#13#10#13#10'  Procedure LocalSho'
  +'wMessage( var DropAllowed:boolean;mute:boolean;mymessage:string);'#13#10'  '
  +'begin'#13#10'    DropAllowed :=false;'#13#10'    if mute=false'#13#10'    t'
  +'hen ShowMessage(mymessage)'#13#10'    else watch(mymessage);'#13#10'  end;'
  +#13#10#13#10#13#10#13#10'  Function PasteSelectedStyleResources(AllowDrop:Bo'
  +'olean;HoverOver:String;mute:Boolean;ValueObject:TNodeEventValue):boolean;'
  +#13#10'  //if mute=true then nodes are not added or alerts sent to the user '
  +'it just tests if it is ok to drop on this node'#13#10'  var'#13#10'    Sele'
  +'ctedStyleSheetNodeText,SelectedStyleSheetNodeId:string;'#13#10'    SNodeTyp'
  +'e,RNodeType:string;'#13#10'      Qualifier,RuleNodeId,NewNodeId,ANodeId:Str'
  +'ing;'#13#10'      DropIsAllowed:boolean;'#13#10'  begin'#13#10'      DropIs'
  +'Allowed:=true;'#13#10'      RNodeType:=GetTypeFromString(trim(getPropertyVa'
  ,'lue(''StyleResources'',''SelectedNodeText'')));'#13#10'      //if AllowDrop'
  +' then showmessage(''RNodeType=''+RNodeType);'#13#10'      asm'#13#10'      '
  +'  SelectedStyleSheetNodeId=ValueObject.myNode.id;'#13#10'        //if (Allo'
  +'wDrop==true) {alert(''SelectedStyleSheetNodeId=''+SelectedStyleSheetNodeId)'
  +';}'#13#10'        var ob=document.getElementById(ValueObject.myNode.id);'#13
  +#10'        if (ob!=null) {'#13#10'          // make sure the nodeid is the '
  +'''DETAILS'' element'#13#10'          if (ob.tagName==''SUMMARY'') {'#13#10
  +'            var summ=ob;'#13#10'            SelectedStyleSheetNodeId=summ.p'
  +'arentNode.id;}'#13#10'          else summ=ob.getElementsByTagName(''SUMMARY'
  +''')[0];'#13#10'          }'#13#10'          else {alert(''SelectedStyleShee'
  +'tNodeId ''+SelectedStyleSheetNodeId+'' not found''); }'#13#10#13#10'       '
  +' SelectedStyleSheetNodeText=summ.innerHTML;'#13#10'      end;'#13#10#13#10
  +'      SNodeType:=GetTypeFromString(SelectedStyleSheetNodeText);'#13#10'    '
  +'  SelectedStyleSheetNodeText:=stripOutQualifierInfo(SelectedStyleSheetNodeT'
  +'ext);'#13#10'      //if AllowDrop then showmessage(''>''+RNodeType +''<    '
  +'>''+SNodeType+''<'');'#13#10'      //EditAttributeValue(''WatchBox'','''','
  +'''ItemValue'',''>''+RNodeType +''<    >''+SNodeType+''<'');'#13#10'      //'
  +'result:=false;'#13#10'      //EXIT;'#13#10#13#10'      if not(ResourceNodeS'
  +'etIDOf(SNodeType,false )  in AllowChildren ) then'#13#10'        LocalShowM'
  +'essage( DropIsAllowed,mute,''This style tree node cannot have children'')'
  +#13#10'      else if SNodeType =''Priority'' then'#13#10'        LocalShowMe'
  +'ssage( DropIsAllowed,mute,''Priority options can be edited, but cannot have'
  +' children'')'#13#10'      else if SNodeType ='''' then'#13#10'        Local'
  +'ShowMessage( DropIsAllowed,mute,''Select a Style resource before pasting'')'
  +#13#10'      else if SNodeType ='''' then'#13#10'        LocalShowMessage( D'
  +'ropIsAllowed,mute,''Select a StyleSheet node before pasting'')'#13#10'     '
  +' else if (SNodeType =''StyleProperties'')'#13#10'      then'#13#10'      be'
  +'gin'#13#10'          if  (ResourceNodeSetIDOf(RNodeType,false) in StyleProp'
  +'ertyNodes )'#13#10'          then'#13#10'          begin'#13#10'           '
  +'  if (AllowDrop =true) then'#13#10'               //!! assumes the selected'
  +' node is the parent'#13#10'               NewNodeId:=TXTree(StylesNode).Ins'
  +'ertNewChildNode(RNodeType+''.''+''(''+getqualifierdefault(RNodeType)+'')'')'
  +';'#13#10'          end'#13#10'          else LocalShowMessage( DropIsAllowe'
  +'d,mute,''Only Style property types can be added to a set of style property '
  +'nodes. (selected type is ''+RNodeType+'')'');'#13#10'      end'#13#10'     '
  +' else'#13#10'      begin'#13#10'        if (SNodeType =''StyleRule'') then'
  +#13#10'          LocalShowMessage( DropIsAllowed,mute,''You can only add the'
  +' the properties and targets of a style rule - not to the style rule itself'
  +''')'#13#10'        else if (SNodeType =''StyleSheet'')'#13#10'        then'
  +#13#10'        begin'#13#10'          if (RNodeType <>''StyleRule'') then'#13
  +#10'            LocalShowMessage( DropIsAllowed,mute,''Only a StyleRule can '
  +'be added to the StyleSheet node'')'#13#10'          else'#13#10'          b'
  +'egin'#13#10'            Qualifier:='' '';//prompt( ''Please name this Style'
  +' Rule :-'', DateTimeToStr(Now));'#13#10'            if (AllowDrop =true) th'
  +'en'#13#10'            begin'#13#10'              //!! assumes root node has'
  +' been selected'#13#10'              NewNodeId:=TXTree(StylesNode).InsertNew'
  +'ChildNode(''StyleRule'');'#13#10'              //now need to select this no'
  +'de'#13#10'              //TXTree(StylesNode).SelectedNodeId:=NewNodeId+''Su'
  +'mmary'';'#13#10'              TXTree(StylesNode).SelectedNodeId:=NewNodeId;'
  +#13#10'              // and insert the standard set of child nodes'#13#10'  '
  +'            TXTree(StylesNode).InsertNewChildNode(''StyleTargets'');'#13#10
  +'              TXTree(StylesNode).InsertNewChildNode(''StyleProperties'');'
  +#13#10'              ANodeId:=TXTree(StylesNode).InsertNewChildNode(''Priori'
  +'ty.(''+getqualifierdefault(''Priority'')+'')'');'#13#10'              TXTre'
  +'e(StylesNode).InsertNewChildNode(''State.(''+getqualifierdefault(''State'')'
  +'+'')'');'#13#10'              TXTree(StylesNode).InsertNewChildNode(''Group'
  +'.(''+getqualifierdefault(''Group'')+'')'');'#13#10'            end;'#13#10
  +'          end;'#13#10'        end'#13#10'        else'#13#10'        begin'
  +#13#10'          //showmessage(''SelectedStyleSheetNodeId=''+SelectedStyleSh'
  +'eetNodeId);'#13#10'          //showmessage(''num children is ''+inttostr(le'
  +'ngth(TXTree(StylesNode).GetChildNodes(SelectedStyleSheetNodeId))));'#13#10
  +'        if (SNodeType =''StyleTargets'')'#13#10'        and (length(TXTree('
  +'StylesNode).GetChildNodes(SelectedStyleSheetNodeId)) > 0)'#13#10'        th'
  +'en'#13#10'          LocalShowMessage( DropIsAllowed,mute,''To add more than'
  ,' one target use a Logical group node (e.g. (And)) then add them as children'
  +' to it'')'#13#10'        else'#13#10'        begin'#13#10'           if ( ('
  +'ResourceNodeSetIDOf(RNodeType,false) in TargetGroupingNodes)'#13#10'       '
  +'    or (ResourceNodeSetIDOf(RNodeType,false) in StyletargetNodes)'#13#10'  '
  +'         or (ResourceNodeSetIDOf(RNodeType,false) in RelationshipNodes))'#13
  +#10'           then'#13#10'           begin'#13#10'             if (Resource'
  +'NodeSetIDOf(RNodeType,false) in EditableTargetNodes)'#13#10'             or'
  +' (ResourceNodeSetIDOf(RNodeType,false) in TargetNodesWithOptions)'#13#10'  '
  +'           then'#13#10'             begin'#13#10'               if (AllowDr'
  +'op =true) then'#13#10'               begin'#13#10'                 NewNodeI'
  +'d:=TXTree(StylesNode).InsertNewChildNode(RNodeType+''.''+''(''+getqualifier'
  +'default(RNodeType)+'')'');'#13#10'               end;'#13#10'             e'
  +'nd'#13#10'             else'#13#10'             begin'#13#10'              '
  +' if (AllowDrop =true) then'#13#10'               begin'#13#10'             '
  +'    NewNodeId:=TXTree(StylesNode).InsertNewChildNode(RNodeType);'#13#10'   '
  +'            end;'#13#10'             end;'#13#10'            end'#13#10'   '
  +'        else LocalShowMessage( DropIsAllowed,mute,''Only Style target types'
  +' (or logical group or relationship nodes) can be added to a style targets n'
  +'ode'');'#13#10'        end;'#13#10'        end;'#13#10'      end;'#13#10#13
  +#10'      if (AllowDrop=true)'#13#10'      and (NewNodeId<>'''') then'#13#10
  +'      begin'#13#10'        TXTree(StylesNode).SelectedNodeId:=NewNodeId;'#13
  +#10'        PopulateStyleEditor(false);'#13#10'      end;'#13#10#13#10'     '
  +' DropTarget:=SNodeType;'#13#10'      if DropIsAllowed then watch('' '');'#13
  +#10'      result:=DropIsAllowed;'#13#10'  end;'#13#10#13#10'function GetOpti'
  +'onType(SNodeType:String):String;'#13#10'var'#13#10'  i:integer;'#13#10'  te'
  +'mpstringlist:tstringlist;'#13#10'begin'#13#10'  result:='''';'#13#10'  for '
  +'i:= 0 to length( StyleOptions)-1 do'#13#10'  begin'#13#10'    tempstringlis'
  +'t:=StyleOptions[i];'#13#10'    if SNodeType=tempstringlist[0]'#13#10'    th'
  +'en'#13#10'    begin'#13#10'       result := tempstringlist[2];'#13#10'    e'
  +'nd;'#13#10'  end;'#13#10'end;'#13#10#13#10'  Procedure UpdateNodeQualifierF'
  +'ield;'#13#10'  var  SelectedStyleSheetNodeText,SelectedStyleSheetNodeType,C'
  +'urrentOptionValue,CurrentOptionType:string;'#13#10'       itemIndex,i,j:int'
  +'eger;'#13#10'       nodeid:String;'#13#10'  begin'#13#10'      // get the n'
  +'ode type and text string'#13#10'    SelectedStyleSheetNodeText:=trim(getPro'
  +'pertyValue(''StyleSheet'',''SelectedNodeText''));'#13#10'    SelectedStyleS'
  +'heetNodeType:=GetTypeFromString(SelectedStyleSheetNodeText);'#13#10'    Cur'
  +'rentOptionType:=GetOptionType(SelectedStyleSheetNodeType);'#13#10'    if Se'
  +'lectedStyleSheetNodeType<>'''' then'#13#10'    begin'#13#10'      //showmes'
  +'sage(''drop down visible ? =''+getPropertyValue(''StyleNodeQualifier'',''Is'
  +'Visible'') );'#13#10'      if getPropertyValue(''StyleNodeQualifier'',''IsV'
  +'isible'') = ''True'''#13#10'      then'#13#10'      begin'#13#10'         C'
  +'urrentOptionValue := getPropertyValue(''StyleNodeQualifier'',''ItemValue'')'
  +#13#10'      end'#13#10'      else'#13#10'      begin'#13#10'        Current'
  +'OptionValue := trim(getPropertyValue(''QualifierEditBox'',''ItemValue''));'
  +#13#10'        if ((SelectedStyleSheetNodeType=''ClassName'') or (SelectedSt'
  +'yleSheetNodeType=''WidgetID'')) then'#13#10'        begin'#13#10'          '
  +'while ((FoundString(CurrentOptionValue,'' '')>0)'#13#10'             or (Fo'
  +'undString(CurrentOptionValue,''.'')>0)) do'#13#10'             begin'#13#10
  +'               showmessage(''Please enter ''+SelectedStyleSheetNodeType+'' '
  +'without spaces or "." characters'');'#13#10'               CurrentOptionVal'
  +'ue:= XIDEPrompt(''Enter ''+SelectedStyleSheetNodeType,CurrentOptionValue);'
  +#13#10'               setPropertyValue(''QualifierEditBox'',''ItemValue'',Cu'
  +'rrentOptionValue);'#13#10'             end;'#13#10'        end;'#13#10'    '
  +'  end;'#13#10'      if  (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,fal'
  +'se) in StylePropertyNodes ) then'#13#10'        SelectedStyleSheetNodeText '
  +':= SelectedStyleSheetNodeType+''.(''+CurrentOptionValue+'')'''#13#10'      '
  +'else'#13#10'        SelectedStyleSheetNodeText := SelectedStyleSheetNodeTyp'
  +'e+''.(''+CurrentOptionValue+'')'';'#13#10'      nodeid:=TXTree(StylesNode).'
  +'SelectedNodeId;'#13#10'      //showmessage(''nodeid=''+nodeid+'' new text ='
  +' ''+ SelectedStyleSheetNodeText);'#13#10'      TXTree(StylesNode).SetNodeTe'
  +'xt(nodeid,SelectedStyleSheetNodeText);'#13#10'      TXTree(StylesNode).Sele'
  +'ctedNodeId:=nodeid;'#13#10'    end;'#13#10'    setPropertyValue(''StyleTree'
  +'ApplyBtn'',''IsVisible'',''false'');'#13#10'  end;'#13#10#13#10'Procedure P'
  +'opulateStyleEditor(editInsteadOfDropDown:boolean);'#13#10'var  SelectedStyl'
  ,'eSheetNodeText,SelectedStyleSheetNodeType,CurrentOptionValue:string;'#13#10
  +'     nodeid:String;'#13#10'     CurrentOptionIndex,i,j:integer;'#13#10'    '
  +' optionstring:string;'#13#10'     tempstringlist:tstringlist;'#13#10'begin'
  +#13#10'  // get the node type and text string'#13#10'  SelectedStyleSheetNod'
  +'eText:=trim(getPropertyValue(''StyleSheet'',''SelectedNodeText''));'#13#10
  +'  nodeid:=TXTree(StylesNode).SelectedNodeId;'#13#10'  //showmessage(''Popul'
  +'ateStyleEditor ''+nodeid);'#13#10'  if (nodeid<>'''') then'#13#10'  begin'
  +#13#10'  SelectedStyleSheetNodeType:=GetTypeFromString(SelectedStyleSheetNod'
  +'eText);'#13#10'  CurrentOptionValue:=GetQualifierValue(SelectedStyleSheetNo'
  +'deText);'#13#10'  //showmessage(''PopulateStyleEditor ''+nodeid+'' type=''+'
  +'SelectedStyleSheetNodeType+'' qual=''+CurrentOptionValue);'#13#10'  if ((Re'
  +'sourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in StylePropertyNodes)/'
  +'/ to edit colors, line widths etc. using the drop down options'#13#10'     '
  +' or (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in  TargetNodesW'
  +'ithOptions)'#13#10'      or (ResourceNodeSetIDOf(SelectedStyleSheetNodeType'
  +',false)in StyleRuleSelectors))'#13#10'  and (editInsteadOfDropDown = false)'
  +#13#10'  then'#13#10'  begin'#13#10'     CurrentOptionIndex:=0;'#13#10'     '
  +'optionstring:='''';'#13#10'     // get option list for this resource type a'
  +'nd set current option values" e.g.....["Option 1","Option 2","Option 3"]'#13
  +#10'     for i:= 0 to length( StyleOptions)-1 do'#13#10'     begin'#13#10'  '
  +'     tempstringlist:=StyleOptions[i];'#13#10'       if trim(SelectedStyleSh'
  +'eetNodeType)=trim(tempstringlist[0])'#13#10'       then'#13#10'       begin'
  +#13#10'         setPropertyValue(''StyleNodeQualifier'',''Hint'',tempstringl'
  +'ist[1]);'#13#10'         for j:=3 to tempstringlist.count-1'#13#10'        '
  +' do'#13#10'         begin;'#13#10'            //showmessage(''>''+tempstrin'
  +'glist[j]+''<>''+CurrentOptionValue+''<'');'#13#10'            if trim(temps'
  +'tringlist[j]) = trim(CurrentOptionValue )'#13#10'            then  CurrentO'
  +'ptionIndex:=j-3;'#13#10'         end;'#13#10'         optionstring:=''["''+'
  +'tempstringlist[3]+''"'';'#13#10'         for j:=4 to tempstringlist.count-1'
  +' do'#13#10'         begin'#13#10'           optionstring:=optionstring+'',"'
  +'''+tempstringlist[j]+''"'';'#13#10'         end;'#13#10'         optionstri'
  +'ng:=optionstring+'']'';'#13#10'  //       setPropertyValue(''OptionEditorLa'
  +'bel'',''IsVisible'',''true'');'#13#10'       end;'#13#10'     end;'#13#10' '
  +'     // make StyleNodeQualifier drop down list visible and hide the edit bo'
  +'x'#13#10'     setPropertyValue(''QualifierEditBox'',''IsVisible'',''false'''
  +');'#13#10'     setPropertyValue(''StyleNodeQualifier'',''IsVisible'',''true'
  +''');'#13#10'     setPropertyValue(''StyleNodeQualifier'',''OptionList'',opt'
  +'ionstring);'#13#10'     setPropertyValue(''StyleNodeQualifier'',''ItemIndex'
  +''',inttostr(CurrentOptionIndex));'#13#10'     setPropertyValue(''StyleTreeE'
  +'ditBtn'',''IsVisible'',''true'');'#13#10'     setPropertyValue(''StyleTreeA'
  +'pplyBtn'',''IsVisible'',''false'');'#13#10'  end'#13#10'  else'#13#10'  // '
  +'Editing.......................'#13#10'  if ((ResourceNodeSetIDOf(SelectedSt'
  +'yleSheetNodeType,false) in StylePropertyNodes)and (editInsteadOfDropDown = '
  +'true)) // to manually edit the css string instead of using the drop downs'
  +#13#10'  or (ResourceNodeSetIDOf(SelectedStyleSheetNodeType,false) in Editab'
  +'leTargetNodes)// to edit class and widget ids'#13#10'  or (ResourceNodeSetI'
  +'DOf(SelectedStyleSheetNodeType,false) in StyleRuleNodes)// to edit the styl'
  +'e rule name'#13#10'  then'#13#10'  begin'#13#10'     // make StyleNodeQuali'
  +'fier drop down list not visible and show the edit box'#13#10'    //showmess'
  +'age(''CurrentOptionValue=''+CurrentOptionValue);'#13#10'     setPropertyVal'
  +'ue(''QualifierEditBox'',''IsVisible'',''true'');'#13#10'     setPropertyVal'
  +'ue(''StyleNodeQualifier'',''IsVisible'',''false'');'#13#10'     setProperty'
  +'Value(''QualifierEditBox'',''ItemValue'',CurrentOptionValue);'#13#10'     s'
  +'etPropertyValue(''StyleTreeEditBtn'',''IsVisible'',''true'');'#13#10'     s'
  +'etPropertyValue(''StyleTreeApplyBtn'',''IsVisible'',''true'');'#13#10'  end'
  +#13#10'  else'#13#10'  begin'#13#10'     setPropertyValue(''StyleTreeEditBtn'
  +''',''IsVisible'',''false'');'#13#10'     setPropertyValue(''StyleTreeApplyB'
  +'tn'',''IsVisible'',''true'');'#13#10'     setPropertyValue(''QualifierEditB'
  +'ox'',''ItemValue'',CurrentOptionValue);'#13#10'     setPropertyValue(''Qual'
  +'ifierEditBox'',''IsVisible'',''true'');'#13#10'     setPropertyValue(''Styl'
  +'eNodeQualifier'',''IsVisible'',''false'');'#13#10'  end;'#13#10'  end'#13#10
  +'  else'#13#10'  begin'#13#10'     // there is no tree node selected'#13#10
  +'    setPropertyValue(''StyleNodeQualifier'',''OptionList'',''[]'');'#13#10
  +'    setPropertyValue(''StyleTreeEditBtn'',''IsVisible'',''false'');'#13#10
  ,'    setPropertyValue(''StyleTreeApplyBtn'',''IsVisible'',''false'');'#13#10
  +'    setPropertyValue(''QualifierEditBox'',''ItemValue'','' '');'#13#10'    '
  +'setPropertyValue(''QualifierEditBox'',''IsVisible'',''false'');'#13#10'    '
  +'setPropertyValue(''StyleNodeQualifier'',''IsVisible'',''false'');'#13#10'  '
  +'end;'#13#10'end;'#13#10#13#10'//  A(B + C)        =  A.B + A.C      // OR n'
  +'ode child of an AND node'#13#10'//  (A + B).(A + C) =  A + B . C      // OR'
  +' node child of an AND node (term in common)'#13#10'//  A(B.C)          =  A'
  +' . B . C      // AND node child of an AND node'#13#10'//  A + (B + C)     ='
  +'  A + B + C      // OR node child of an OR node'#13#10'//  A + (B.C)       '
  +'=  A.B + A.C      // AND node child of an OR  node'#13#10'//Expanding logic'
  +'al functions using Domorgan''s law'#13#10'//   or..........   A, B, C {}'#13
  +#10'//   and.........   ABC {}'#13#10'//   nor.........  :not(A):not(B):not('
  +'C) {}'#13#10'//   nand........  :not(A), :not(B), :not(C) {}'#13#10#13#10'F'
  +'unction GetStyleProperties(PropertiesNodeId,StylePriority:String):string;'
  +#13#10'var i,numchildren:integer;'#13#10'    CurrentPropertyString,CSSText:s'
  +'tring;'#13#10'    props:TStringArray;'#13#10'Begin'#13#10'  CSSText:= '''';'
  +#13#10' // showmessage(''GetStyleProperties ''+PropertiesNodeId);'#13#10'  /'
  +'/ style properties are the children of this node.'#13#10'  props:=TXTree(St'
  +'ylesNode).GetChildNodes(PropertiesNodeId);'#13#10'  asm'#13#10'    for (var'
  +' i=0; i<props.length; i++) {'#13#10'      var propid=props[i];'#13#10'     '
  +' //alert(''propid=''+propid);'#13#10'      var ob=document.getElementById(p'
  +'ropid+''Summary'');'#13#10'      if (ob!=null) {'#13#10'        var txt=ob.'
  +'innerHTML;   }'#13#10'      //alert(''txt=''+txt);'#13#10'      var qt=pas.'
  +'StylesUtils.GetOptionType(pas.StylesUtils.GetTypeFromString(txt));'#13#10' '
  +'     var qv=pas.StylesUtils.GetQualifierValue(txt);'#13#10'      //alert('''
  +'qt=''+qt+'' qv=''+qv);'#13#10'      CSSText=CSSText + qt + qv ;'#13#10#13#10
  +'      if ((StylePriority == ''1;'') || (StylePriority==''2;''))'#13#10'    '
  +'  {'#13#10'        // delete trailing spaces'#13#10'        CSSText=CSSText'
  +'.trim();'#13#10'        //remove the final ; character'#13#10'        if (C'
  +'SSText[CSSText.length-1]=='';'') {CSSText=CSSText.substring(0,CSSText.lengt'
  +'h-1);}'#13#10'        // make it important'#13#10'        CSSText=CSSText+'
  +''' !important;'''#13#10'       }'#13#10#13#10'      }'#13#10'  end;'#13#10
  +'  //showmessage(''props=''+CSSText);'#13#10'  result:=CSSText;'#13#10'end;'
  +#13#10#13#10'Function GetStylePriority(CurrentNode:String):string;'#13#10'  '
  +'Begin'#13#10'    GetStylePriority:='' Priority '';'#13#10'  end;'#13#10#13
  +#10'function MakeATermStringList:TStringList;'#13#10'var'#13#10'  newStringL'
  +'ist:TStringList;'#13#10'begin'#13#10'  newStringList := TStringList.Create;'
  +#13#10'  newStringList.Delimiter := ''.'';'#13#10'  newStringList.StrictDeli'
  +'miter := True;'#13#10'  newStringList.duplicates:=dupAccept;'#13#10'  newSt'
  +'ringList.Sorted := False;'#13#10'  newStringList.SkipLastLineBreak:=true;'
  +#13#10'  newStringList.Linebreak:='''';'#13#10'  result:=newStringList;'#13
  +#10'end;'#13#10#13#10'  Function  mergeTermLists2(SNodeType:String;list1,lis'
  +'t2:TCSSTermList;invert:boolean):TCSSTermList;'#13#10'  var i,j,k,n,m:intege'
  +'r;'#13#10'      newOutlist:TCSSTermList;'#13#10'  begin'#13#10'    if ( (Le'
  +'ftStr(SNodeType,5) = ''(And)'') and (invert=false))'#13#10'    or ((LeftStr'
  +'(SNodeType,7) = ''Not(Or)'' )and (invert=true))'#13#10'     // (a+b).(c+d) '
  +' =>  a.c + a.d  + b.c + b.d'#13#10'    then'#13#10'    begin'#13#10'      S'
  +'etlength(newOutlist,0);'#13#10'      For i:= 0 to length(list1)-1 do'#13#10
  +'      begin'#13#10'        for j:= 0 to length(list2)-1 do'#13#10'        b'
  +'egin'#13#10'          k:=length(newOutlist);'#13#10'          Setlength(new'
  +'Outlist, k+1);'#13#10'          newOutlist[ k] := MakeATermStringList;'#13
  +#10'          for n:= 0 to list1[i].count-1 do newOutlist[ k].add(list1[i][n'
  +']);'#13#10'          for m:= 0 to list2[j].count-1 do newOutlist[ k].add(li'
  +'st2[j][m]);'#13#10'        end;'#13#10'      end;'#13#10'    end'#13#10'   '
  +' else'#13#10'    if ((LeftStr(SNodeType,4) = ''(Or)'')  and (invert=false))'
  +#13#10'    or  ((LeftStr(SNodeType,8) = ''Not(And)'')and (invert=true))'#13
  +#10'    then'#13#10'    begin'#13#10'     // (a+b)+(c+d)  =>  a + b + c + d'
  +#13#10'     Setlength(newOutlist,0);'#13#10'     For i:= 0 to length(list1)-'
  +'1 do'#13#10'      begin'#13#10'        k:=length(newOutlist);'#13#10'      '
  +'  Setlength(newOutlist, k+1);'#13#10'        newOutlist[ k] := MakeATermStr'
  +'ingList;'#13#10'        newOutlist[ k].assign(list1[i]);'#13#10'      end;'
  +#13#10'      for j:= 0 to length(list2)-1 do'#13#10'      begin'#13#10'     '
  +'   k:=length(newOutlist);'#13#10'        Setlength(newOutlist, k+1);'#13#10
  +'        newOutlist[ k] := MakeATermStringList;'#13#10'        newOutlist[ k'
  ,'].assign(list2[j]);'#13#10'      end;'#13#10'    end;'#13#10'    mergeTermL'
  +'ists2:=newOutlist;'#13#10'  end;'#13#10#13#10'  Function FlattenSubTree2(Cu'
  +'rrentNodeId:String;invert:boolean):TCSSTermList;'#13#10'  var i, j, numchil'
  +'dren:integer;'#13#10'      nodestring, SNodeType, SQualifier, str :string;'
  +#13#10'      childnodes:TStringArray;'#13#10'      OutList1,OutList2:TCSSTer'
  +'mList;'#13#10'  begin'#13#10'    //showmessage(''FlattenSubTree2 ''+Current'
  +'NodeId);'#13#10'    childnodes:=TXTree(StylesNode).GetChildNodes(CurrentNod'
  +'eId);'#13#10'    SNodeType:=GetTypeFromString(TXTree(StylesNode).TextOfNode'
  +'(CurrentNodeId));'#13#10'    numchildren:= length(childnodes);'#13#10'    i'
  +'f numchildren = 0 then'#13#10'    begin'#13#10'      //showmessage(''target'
  +'s ''+CurrentNodeId+'' no children'');'#13#10'      Setlength(OutList1,1);'
  +#13#10'      OutList1[0] := MakeATermStringList;'#13#10'      //showmessage('
  +'''type=''+SNodeType);'#13#10'      SQualifier:=GetQualifierValue(TXTree(Sty'
  +'lesNode).TextOfNode(CurrentNodeId));'#13#10'      //showmessage(''qual=''+S'
  +'Qualifier);'#13#10'      if (SNodeType=''ClassName'')or(SNodeType=''WidgetI'
  +'D'')'#13#10'      then nodestring :=SQualifier'#13#10'      else nodestring'
  +' :=SNodeType;'#13#10'      nodestring:=''.''+nodestring;'#13#10'      if in'
  +'vert = false'#13#10'      then OutList1[0].Add(nodestring )'#13#10'      el'
  +'se OutList1[0].Add('':not(''+nodestring +'')'')'#13#10'    end'#13#10'    e'
  +'lse'#13#10'    begin'#13#10'     // showmessage(''haschildren.  SNodeType='
  +'''+SNodeType);'#13#10'      if ((LeftStr(SNodeType,8) = ''Not(And)''))'#13
  +#10'      or ((LeftStr(SNodeType,7) = ''Not(Or)'' ))'#13#10'      then'#13#10
  +'      begin'#13#10'        if invert=true then invert:=false else invert:=t'
  +'rue;'#13#10'      end;'#13#10'      OutList1:= FlattenSubTree2(childnodes[0'
  +'],invert);'#13#10'      if numchildren >1 then'#13#10'      for i := 1 to  '
  +'numchildren - 1'#13#10'      do'#13#10'      begin'#13#10'        OutList2:'
  +'= FlattenSubTree2(childnodes[i],invert);'#13#10'        OutList1:=mergeTerm'
  +'Lists2(SNodeType,OutList1,OutList2,invert);'#13#10'//        str:='''';'#13
  +#10'//        for j:=0 to length(OutList1)-1 do str:=str+OutList1[j].Text;'
  +#13#10'//        showmessage(''i=''+inttostr(i)+'' OutList1=''+str+''<'');'
  +#13#10'      end;'#13#10'    end;'#13#10'    result:=outlist1;'#13#10'  end;'
  +#13#10#13#10'  Function MaybeAddTXForWidgetTypeTargets(TargetString:string):'
  +'string;'#13#10'  var teststring:string;'#13#10'  begin'#13#10'    teststrin'
  +'g:=stringreplace(TargetString,''"'','''',[rfReplaceAll]);  // delete double'
  +' quotes'#13#10'    teststring:=rightstr(teststring,length(teststring)-1); /'
  +'/ delete leading full stop'#13#10'    if ResourceNodeSetIDOf(teststring,tru'
  +'e) in styletargetnodes'#13#10'    then TargetString:=''".TX''+teststring+'''
  +'"'';'#13#10'    if TargetString = ''".TXAll"'' then   TargetString:= ''*'';'
  +#13#10'    MaybeAddTXForWidgetTypeTargets:=TargetString;'#13#10'  end;'#13#10
  +#13#10'Function GetStyleTargets(CurrentNode:String):string;'#13#10'var CSSTe'
  +'rmList:TCSSTermList;'#13#10'    CSSText:string;'#13#10'    i,numterms:integ'
  +'er;'#13#10'Begin'#13#10'  //showmessage(''GetStyleTargets ''+CurrentNode);'
  +#13#10'  setlength(CSSTermList,0);'#13#10'  CSSTermList:=FlattenSubTree2(Cur'
  +'rentNode,false);'#13#10#13#10'  numterms:=length(CSSTermList) ;'#13#10'  if'
  +' numterms >0 then'#13#10'  begin'#13#10'    //CSSText:=  MaybeAddTXForWidge'
  +'tTypeTargets(CSSTermList[0].DelimitedText);'#13#10'    CSSText:=  MaybeAddT'
  +'XForWidgetTypeTargets(CSSTermList[0].Text);'#13#10'    // showmessage(''CSS'
  +'Text=''+CSSText);'#13#10'    for i:=1 to numterms-1 do'#13#10'    begin'#13
  +#10'      CSSText:=CSSText+'' , ''+MaybeAddTXForWidgetTypeTargets(CSSTermLis'
  +'t[i].Text);'#13#10'    end;'#13#10'  end;'#13#10'  result:=stringreplace(CS'
  +'SText,''"'','''',[rfReplaceAll]);'#13#10'end;'#13#10#13#10#13#10'Function G'
  +'enerateStyleRule(RuleNodeId:String):string;'#13#10'var i:integer;'#13#10'  '
  +'  Stylepriority,StyleState,StyleTargets,StyleProperties,StyleGroup,TargetSt'
  +'ring:String;'#13#10'    ruleNodes:TStringArray;'#13#10'    str:string;'#13
  +#10'    TopNode:TDataNode;'#13#10'begin'#13#10'  //showmessage(''GenerateSty'
  +'leRule ''+RuleNodeId);'#13#10'  setlength(ruleNodes,0);'#13#10'  ruleNodes:'
  +'=TXTree(StylesNode).GetChildNodes(RuleNodeId);'#13#10#13#10'  StyleTargets:'
  +'=GetStyleTargets(ruleNodes[0]);'#13#10'  Stylepriority:=trim(GetQualifierVa'
  +'lue(TXTree(StylesNode).TextOfNode(RuleNodes[2])));'#13#10'  StyleProperties'
  +':=GetStyleProperties(ruleNodes[1],Stylepriority);'#13#10'  //showmessage('''
  +'priority=''+Stylepriority);'#13#10'//  StyleState:=trim(RuleNode.children[3'
  +'].Qualifier);'#13#10'  StyleState:=trim(GetQualifierValue(TXTree(StylesNode'
  +').TextOfNode(RuleNodes[3])));'#13#10'//  StyleGroup:=trim(RuleNode.children'
  +'[4].Qualifier);'#13#10'  StyleGroup:=trim(GetQualifierValue(TXTree(StylesNo'
  ,'de).TextOfNode(RuleNodes[4])));'#13#10#13#10#13#10'  StyleTargets:='' :-web'
  +'kit-any(''+StyleTargets+'').UI'';'#13#10#13#10'  if styleState<>''Normal;'''
  +' then StyleTargets:=StyleTargets+StyleState;'#13#10'  if StyleGroup<>''Self'
  +';'''#13#10'  then'#13#10'  begin'#13#10'    if StyleGroup =''SiblingsOf;'' '
  +'then StyleTargets:=StyleTargets+''~*'' ;'#13#10'    if StyleGroup =''Childr'
  +'enOf;'' then StyleTargets:=StyleTargets+''>*'' ;'#13#10'    if StyleGroup ='
  +'''DescendentsOf;'' then StyleTargets:=StyleTargets+ '' *'' ;'#13#10'  end;'
  +#13#10#13#10#13#10'  TargetString:=''#UIRootContents''+StyleTargets;'#13#10
  +'  //!!!! other forms.....!!!!'#13#10'  // now look for other XForms'#13#10
  +'  TopNode:=FindDataNodeById(SystemNodeTree,SystemRootName,'''',true);'#13#10
  +'  for i:=0 to length(TopNode.ChildNodes)-1 do'#13#10'  begin'#13#10'    if '
  +'(TopNode.ChildNodes[i].NodeType=''TXForm'')'#13#10'    and (TopNode.NodeNam'
  +'e<>''CodeEditForm'')'#13#10'    and (TopNode.NodeName<>''PasteDialog'')'#13
  +#10'    and (TopNode.ChildNodes[i].IsDynamic)'#13#10'    and (TopNode.ChildN'
  +'odes[i].NameSpace='''')'#13#10'    then'#13#10'    begin'#13#10'      Targe'
  +'tString:=TargetString + '' ,#''+TopNode.ChildNodes[i].NodeName+StyleTargets'
  +';'#13#10'    end;'#13#10'  end;'#13#10#13#10'  if (Stylepriority = ''1;'') '
  +'or (Stylepriority=''3;'')'#13#10'  then'#13#10'    ExternalCSSText:=Externa'
  +'lCSSText+TargetString+'' {''+ StyleProperties +''}'''#13#10'  else'#13#10' '
  +'   InlineCSSText:=InlineCSSText+TargetString+'' {''+ StyleProperties +''} '
  +''';'#13#10#13#10#13#10'end;'#13#10#13#10'  Procedure GenerateStyleSheets;'
  +#13#10'  var CSSText,CurrentRule,PriorityOneStyleRules,PriorityTwoStyleRules'
  +',PriorityThreeStyleRules,PriorityFourStyleRules:string;'#13#10'      i, num'
  +'children:integer;'#13#10'      rules:TStringArray;'#13#10'  begin'#13#10'  '
  +'  //!!!! change this use JSON parser on the underlying treedata????'#13#10
  +#13#10' //   showmessage(''GenerateStyleSheets'');'#13#10'    PriorityOneSty'
  +'leRules:='''';'#13#10'    PriorityTwoStyleRules:='''';'#13#10'    PriorityT'
  +'hreeStyleRules:='''';'#13#10'    PriorityFourStyleRules:='''';'#13#10'    I'
  +'nlineCSSText:= '''';'#13#10'    ExternalCSSText:= '''';'#13#10#13#10'    se'
  +'tlength(rules,0);'#13#10'   // rules:=TXTree(StylesNode).GetChildNodes(''St'
  +'yleSheetContentsScrollNode'');'#13#10'    rules:=TXTree(StylesNode).GetChil'
  +'dNodes(''StyleSheetNode0'');'#13#10#13#10'    numchildren:= length(rules);'
  +#13#10'//    showmessage(''numchildren=''+inttostr(numchildren));'#13#10'   '
  +' if numchildren >0 then'#13#10'    for i := 0 to  numchildren - 1'#13#10'  '
  +'  do'#13#10'    begin'#13#10'      GenerateStyleRule(rules[i]);'#13#10'    '
  +'  //GenerateStyleRule generates the text in  InlineCSSText and  ExternalCSS'
  +'Text'#13#10'    end;'#13#10#13#10'    setPropertyValue(''GeneratedStyleShee'
  +'tText'',''ItemValue'',InlineCSSText);'#13#10' //   setPropertyValue(''Exter'
  +'nalCssText'',''ItemValue'',ExternalCSSText);'#13#10'    RefreshStyleSheet(I'
  +'nlineCSSText,ExternalCSSText);'#13#10'  end;'#13#10#13#10'procedure Initial'
  +'iseStyleResources;'#13#10'begin'#13#10'  EditAttributeValue(''StyleResource'
  +'s'','''',''TreeData'',''["StyleResources","StyleRule",["StyleTargets",["Tar'
  +'getTypes",["WidgetType",["All"],["Numeric","ProgressBar","NumericSlider","N'
  +'umberSpinner"],["Text","LabelText","Hyperlink","EditBox","Memo","Table"],["'
  +'Selectors","Button","CheckBox","RadioButtons","ComboBox","Tree","DatePicker'
  +'","ColorPicker","MainMenu","MenuItem"],["LayoutWidgets","HBox","VBox","Grou'
  +'pBox","ScrollBox","TabControl","TabSheet","Form"]],["Identifier","ClassName'
  +'","WidgetID"]],["TargetGrouping","(And)","(Or)","Not(And)","Not(Or)"]],["St'
  +'yleProperties",["Widget","WidgetPadding","WidgetBorder","WidgetCorners","Wi'
  +'dgetMargin","WidgetBackground"],["Font","FontFamily","FontSize","FontColor"'
  +',"FontBackgroundColor","FontWeight","FontStyle"],["Transformations","Rotate'
  +'","Scale","Skew"],["States","Selectable","Cursor","Visibility"],["Effects",'
  +'"Transition","Filter"]]]'');'#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10
  +'procedure  UpdateOrCreateStyleSheet(StyleText,myStyleSheetTitle:string;pos:'
  +'integer);'#13#10'//https://www.w3.org/wiki/Dynamic_style_-_manipulating_CSS'
  +'_with_JavaScript'#13#10'begin'#13#10'  {$ifdef JScript}'#13#10'  asm'#13#10
  +'    var foundCSSSheet;'#13#10'    foundCSSSheet = false;'#13#10'    var x ='
  +' document.getElementById(myStyleSheetTitle);'#13#10'    if (x!=null) {x.inn'
  +'erHTML = StyleText;}'#13#10'    else'#13#10'    {'#13#10'      var myStyleS'
  +'heet = document.createElement(''style'');'#13#10'      myStyleSheet.id=mySt'
  +'yleSheetTitle;'#13#10'      myStyleSheet.innerHTML = StyleText;'#13#10'    '
  +'  if (pos<0) {'#13#10'        document.head.appendChild(myStyleSheet); }'#13
  +#10'      else {'#13#10'        document.head.prepend(myStyleSheet); }'#13#10
  +'    }'#13#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10' procedure  Remove'
  ,'StyleSheet(myStyleSheetTitle:string);'#13#10' begin'#13#10'   {$ifdef JScri'
  +'pt}'#13#10'   asm'#13#10'     var x = document.getElementById(myStyleSheetT'
  +'itle);'#13#10'     if (x!=null) {x.parentNode.removeChild(x);}'#13#10'   en'
  +'d;'#13#10'   {$endif}'#13#10' end;'#13#10#13#10'Function GetIdsOrClassNames'
  +'(GetIDs:Boolean):TStringList;'#13#10'var'#13#10'   list:TStringList;'#13#10
  +'   TopNode:TdataNode;'#13#10'   i:integer;'#13#10'   function DrillDown(Sta'
  +'rtNode:TdataNode; GetIDs:Boolean):TStringList;'#13#10'   var'#13#10'     th'
  +'eList,cList:TStringList;'#13#10'     classes,tmp:String;'#13#10'     c:inte'
  +'ger;'#13#10'   begin'#13#10'     theList:=TStringList.Create;'#13#10'     t'
  +'heList.Sorted:=true;'#13#10'     theList.Duplicates := dupIgnore;'#13#10'  '
  +'   if StartNode.IsDynamic then'#13#10'       if GetIds then'#13#10'       b'
  +'egin'#13#10'         theList.Add(StartNode.NameSpace+StartNode.nodeName);'
  +#13#10'       end'#13#10'       else'#13#10'       begin'#13#10'         if '
  +'StartNode.HasAttribute(''HTMLClasses'') then'#13#10'         begin'#13#10' '
  +'          classes:=StartNode.GetAttribute(''HTMLClasses'',false).AttribValu'
  +'e;'#13#10'           if classes<>'''' then'#13#10'           begin'#13#10' '
  +'            cList:=TStringList.Create;'#13#10'             cList.StrictDeli'
  +'miter:=true;'#13#10'             cList.Delimiter:='' '';'#13#10'           '
  +'  cList.LineBreak:='' '';'#13#10'             cList.Text:=classes;'#13#10' '
  +'            cList.Sorted := True;'#13#10'             cList.Duplicates := d'
  +'upIgnore;'#13#10'             for c := clist.count - 1 downto 0 do'#13#10' '
  +'            begin'#13#10'               if Trim(clist[c]) = '''' then'#13#10
  +'                 clist.Delete(c);'#13#10'             end;'#13#10'         '
  +'    theList.AddStrings(cList);'#13#10'             cList.Free;'#13#10'     '
  +'        //tmp:=theList.Text;'#13#10'             //tmp:=cList.Text;'#13#10
  +'           end;'#13#10'         end;'#13#10'       end;'#13#10#13#10'     f'
  +'or c:=0 to length(StartNode.childnodes)-1 do'#13#10'     begin'#13#10'     '
  +'  theList.AddStrings(DrillDown(StartNode.childnodes[c],GetIDs));'#13#10'   '
  +'  end;'#13#10'     result:=theList;'#13#10'   end;'#13#10'begin'#13#10'  Cl'
  +'earInspectors;'#13#10'  list := DrillDown( MainFormProjectRoot, GetIDs);'#13
  +#10'  list.StrictDelimiter:=true;'#13#10'  list.Delimiter:=''|'';'#13#10'  l'
  +'ist.LineBreak:=''|'';'#13#10'  list.SkipLastLineBreak:=true;'#13#10'  // no'
  +'w look for other XForms'#13#10'  TopNode:=FindDataNodeById(SystemNodeTree,S'
  +'ystemRootName,'''',true);'#13#10'  for i:=0 to length(TopNode.ChildNodes)-1'
  +' do'#13#10'  begin'#13#10'    if (TopNode.ChildNodes[i].NodeType=''TXForm'''
  +')'#13#10'    and (TopNode.NodeName<>''CodeEditForm'')'#13#10'    and (TopNo'
  +'de.NodeName<>''PasteDialog'')'#13#10'    and (TopNode.ChildNodes[i].IsDynam'
  +'ic)'#13#10'    then'#13#10'    begin'#13#10'      list.AddStrings(DrillDown'
  +'(TopNode.ChildNodes[i],GetIDs));'#13#10'    end;'#13#10'  end;'#13#10'  res'
  +'ult:=list;'#13#10'end;'#13#10#13#10#13#10'Procedure SetCSSEditorStyles;'#13
  +#10'var WhiteSpaceRule,indirectWhiteSpaceRule,spoof:string;'#13#10'begin'#13
  +#10'  WhiteSpaceRule:=''.noChildren,.hasChildren { white-space: pre;}'';'#13
  +#10'  // spoof:= ''.noChildren,.hasChildren { white-space: normal;}'';'#13#10
  +'  //indirectWhiteSpaceRule:=''@import url("data:text/css;charset=utf-8,''+W'
  +'hiteSpaceRule +''") '';'#13#10'  //UpdateOrCreateStyleSheet('' '',''CSSEdit'
  +'orStyles'');'#13#10'  //UpdateOrCreateStyleSheet(spoof,''CSSEditorStyles1'''
  +');'#13#10'  UpdateOrCreateStyleSheet(WhiteSpaceRule,''CSSEditorStyles'',-1)'
  +';'#13#10#13#10'end;'#13#10#13#10'Procedure AddToOptionList(instring:string)'
  +';'#13#10'var numOptionTypes:integer;'#13#10'begin'#13#10'  numOptionTypes:='
  +'length(StyleOptions);'#13#10'  setlength(StyleOptions,numOptionTypes+1);'#13
  +#10'  StyleOptions[numOptionTypes] := TStringList.Create();'#13#10'  StyleOp'
  +'tions[numOptionTypes].Delimiter := ''|'';'#13#10'  StyleOptions[numOptionTy'
  +'pes].StrictDelimiter := True;'#13#10'  StyleOptions[numOptionTypes].Sorted '
  +':= False;'#13#10'  StyleOptions[numOptionTypes].DelimitedText:=instring;'#13
  +#10'  // the first element is the style type'#13#10'  // the second element '
  +'is the hint to be added to the editor popup'#13#10'  // the third option is'
  +' the property designator for CSS'#13#10'  // following items are the option'
  +'s for that style type'#13#10'  // an item described as "FreeFormatEdit" mea'
  +'ns the user simply types the string value with no other checking'#13#10'end'
  +';'#13#10#13#10'Procedure SetStyleOptions;'#13#10'var'#13#10'  theList:TStri'
  +'ngList;'#13#10'  begin'#13#10'     setlength(StyleOptions,0);'#13#10' //   '
  +' AddToOptionList( ''ClassName|hint|FreeFormatEdit|Class Name Not Set'');'#13
  +#10' //    AddToOptionList( ''WidgetID|hint|FreeFormatEdit|Widget ID not set'
  +''');'#13#10'    theList:=GetIdsOrClassNames(false);'#13#10'    AddToOptionL'
  ,'ist( ''ClassName||class|''+ theList.Text);'#13#10'    theList:=GetIdsOrClas'
  +'sNames(true);'#13#10'    AddToOptionList( ''WidgetID||id|''+ theList.Text);'
  +#13#10' //   theList.Free;'#13#10'    //showmessage( ''WidgetID||id''+ GetId'
  +'sOrClassNames(true));'#13#10#13#10'    AddToOptionList(''Priority|StylePrio'
  +'rityare:-1)!important in external file 2)!important inline 3)inline 4)exter'
  +'nal file |priority:|4;|3;|2;|1;'');'#13#10'    AddToOptionList(''State||Sta'
  +'te:|Normal;|:focus|:hover'');'#13#10'    AddToOptionList(''Group||Relations'
  +'hip:|Self;|SiblingsOf;|ChildrenOf;|DescendentsOf;'');'#13#10#13#10'    AddT'
  +'oOptionList(''FontFamily|Asubsetofwebsafefonts|font-family:|CourierNew,Cour'
  +'ier,monospace;|Arial,Helvetica,sans-serif;|TimesNewRoman,Times,serif;|inher'
  +'it;'');'#13#10'    AddToOptionList(''FontSize||font-size:|xx-small;|x-small'
  +';|small;|medium;|large;|x-large;|xx-large;|inherit;'');'#13#10'    AddToOpt'
  +'ionList(''FontColor||color:|white;|silver;|gray;|black;|red;|maroon;|yellow'
  +';|olive;|lime;|green;|aqua;|teal;|blue;|navy;|fuchsia;|purple;|inherit;'');'
  +#13#10'    AddToOptionList(''FontBackgroundColor||background-color:|white;|s'
  +'ilver;|gray;|black;|red;|maroon;|yellow;|olive;|lime;|green;|aqua;|teal;|bl'
  +'ue;|navy;|fuchsia;|purple;|inherit;'');'#13#10'    AddToOptionList(''FontWe'
  +'ight||font-weight:|lighter;|normal;|bold;|bolder;|inherit;'');'#13#10'    A'
  +'ddToOptionList(''FontStyle||font-style:|normal;|italic;|oblique;|line-throu'
  +'gh;|underline;|inherit;'');'#13#10#13#10'    AddToOptionList( ''WidgetBorde'
  +'r|a selection of border colors and thicknesses| border: |0.1em red solid;|0'
  +'.3em red solid;|0.5em red solid;|0.1em green solid;|0.3em green solid;|0.5e'
  +'m green solid;|0.1em blue solid;|0.3em blue solid;|0.5em blue solid;|0.1em '
  +'black solid;|0.3em black solid;|0.5em black solid;|0.1em white solid;|0.3em'
  +' white solid;|0.5em white solid;|inherit; '') ;'#13#10'    // margin is the'
  +' space around the widget'#13#10'    AddToOptionList( ''WidgetMargin|Some op'
  +'tions for the width of the margin between the widget and its border| margin'
  +': | 0.1em; | 0.3em; | 0.5em ; |  0.7em; |  0.9em; | inherit; '') ;'#13#10' '
  +'   // padding is the space around the widget and inside the border'#13#10' '
  +'   AddToOptionList( ''WidgetPadding|Some options for the width of the paddi'
  +'ng between widget border and other components|padding:|0.1em;|0.3em;|0.5em;'
  +'|0.7em;|0.9em;|inherit;'');'#13#10'    AddToOptionList( ''WidgetCorners|cho'
  +'ose one of the first four options to have one corner rounded or the finally'
  +' one to round them all |border-radius:|20px 0 0 0;|0 20px 0 0;|0 0 20px0 ;|'
  +'0 0 0 20px;|20px 20px 20px 20px;|inherit;'') ;'#13#10'    AddToOptionList('
  +'''WidgetBackground||background:|white;|silver;|gray;|black;|red;|maroon;|ye'
  +'llow;|olive;|lime;|green;|aqua;|teal;|blue;|navy;|fuchsia;|purple;|inherit;'
  +''');'#13#10#13#10'    AddToOptionList(''Scale||transform:|scale(0.5);|scale'
  +'(0.7);|scale(1.0);|scale(1.3);|scale(1.6);|scale(2.0);|inherit;'');'#13#10
  +'    AddToOptionList(''Rotate||transform:|rotate(45deg);|rotate(90deg);|rota'
  +'te(135deg);|rotate(180deg);|rotate(225deg);|rotate(270deg);|rotate(315deg);'
  +'|inherit;'');'#13#10'    AddToOptionList( ''Skew|  |transform:| skew(10deg '
  +'10deg);|skew(5deg 5deg);|skew(5deg 15deg);|skew(15deg 5deg);|inherit;'') ;'
  +#13#10#13#10'    AddToOptionList(''Cursor||cursor:|default;|pointer;|crossha'
  +'ir;|move;|text;|wait;|progress;|help;|n-resize;|ne-resize;|e-resize;|se-res'
  +'ize;|inherit;'');'#13#10'    AddToOptionList(''Visibility||visibility:|visi'
  +'ble;|hidden;|inherit;'');'#13#10'    AddToOptionList( ''Selectable|>all< se'
  +'lects text with one click instead of a double click|user-select: |auto;|non'
  +'e;|text;|all;|inherit;'');//all selects text with one click intstead of a d'
  +'oubleclick'#13#10#13#10'    AddToOptionList( ''Transition| |transition:|1s '
  +'linear;|1s ease; |0.5s linear;|0.5s ease;|1.5s linear;|1.5s ease;| inherit;'
  +''') ;'#13#10'    AddToOptionList(''Filter||filter:|none|blur(3px);|brightne'
  +'ss(0.5);|contrast(2);|grayscale(0.5);|hue-rotate(180deg);|opacity(0.5);|sat'
  +'urate(1.5);|sepia(1);|inherit;'');'#13#10#13#10'  end;'#13#10#13#10#13#10'P'
  +'rocedure SetCSSNodeTypes;'#13#10'begin'#13#10'  AllowChildren          :=[ '
  +'StyleSheet, StyleTargets, StyleProperties,_And_,_Or_,Not_And_,Not_Or_];'#13
  +#10'  StyleSheetNodes        :=[StyleSheet];'#13#10'  StyleRuleNodes        '
  +' :=[StyleRule];'#13#10'  ClassificationNodes    :=[Identifier,StyleResource'
  +'s,TargetGrouping,TargetTypes,WidgetType,Numeric,Text,Selectors,LayoutWidget'
  +'s,Relationship,State,StyleProperties,Widget,Font,Transformations,States,Eff'
  +'ects];'#13#10'  TargetGroupingNodes    :=[_And_,_Or_,Not_And_,Not_Or_];'#13
  +#10'  RelationshipNodes      :=[ChildrenOf,DescendentsOf,SiblingsOf];'#13#10
  +'  StylePropertyNodes     :=[WidgetCorners,WidgetPadding,WidgetMargin,Widget'
  +'Border,WidgetBackground,FontFamily,FontSize,FontColor,FontBackgroundColor,F'
  ,'ontWeight,FontStyle,Rotate,Scale,Skew,Selectable,Cursor,Visibility,Transiti'
  +'on,Filter];'#13#10'  StyletargetNodes       :=[All,ProgressBar,NumericSlide'
  +'r,NumberSpinner,LabelText,Hyperlink,EditBox,Memo,Table,Button,CheckBox,Radi'
  +'oButtons,ComboBox,Tree,DatePicker,ColorPicker,MainMenu,MenuItem,HBox,VBox,G'
  +'roupBox,ScrollBox,TabControl,TabSheet,Form,ClassName,WidgetID,Hover,Visited'
  +',Focused];'#13#10'  TargetNodesWithOptions :=[ClassName,WidgetID];'#13#10' '
  +' EditableTargetNodes    :=[];'#13#10'  StyleRuleSelectors     :=[Priority,S'
  +'tate,Group];'#13#10#13#10'end;'#13#10#13#10'procedure InitStyleTreeDisplay;'
  +#13#10' var'#13#10'   str:String;'#13#10' begin'#13#10'//   str:=Recursively'
  +'GenerateTheTreeDescriptionString(StyleTree);'#13#10'   EditAttributeValue('
  +'''StyleSheet'','''', ''TreeData'' ,''["StyleSheet"]'');'#13#10' end;'#13#10
  +#13#10' procedure InitialiseStyleDesigner;'#13#10' begin'#13#10'   Setlength'
  +'(StyleOptions,0);'#13#10'   Setlength(CSSTermList,1);'#13#10'   CSSTermList'
  +'[0] := TStringList.Create;'#13#10'   CSSTermList[0].Add(''*'');'#13#10'   S'
  +'etCSSNodeTypes;'#13#10'   SetStyleOptions;'#13#10'   SetCSSEditorStyles;'#13
  +#10'   EditAttributeValue(''QualifierEditBox'','''',''IsVisible'',''false'')'
  +';'#13#10'   EditAttributeValue(''StyleNodeQualifier'','''',''IsVisible'','''
  +'false'');'#13#10'   EditAttributeValue(''StyleTreeEditBtn'','''',''IsVisibl'
  +'e'',''false'');'#13#10'   EditAttributeValue(''StyleTreeApplyBtn'','''',''I'
  +'sVisible'',''false'');'#13#10'   InitStyleTreeDisplay;'#13#10#13#10'   Styl'
  +'esNode:=FindDataNodeById(systemnodetree,''StyleSheet'','''',true);'#13#10#13
  +#10' end;'#13#10#13#10'end.'#13#10#13#10#13#10
]);
LazarusResources.Add('eventlogging','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit EventLogging;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10'interfa'
  +'ce'#13#10'uses'#13#10'  SysUtils,Classes, StringUtils, NodeUtils, EventsInt'
  +'erface,TypInfo,'#13#10'  Events, XForm, XTree, XComboBox, XTabControl, XMen'
  +'u, ReplayUserDialog,'#13#10'  MacroComment, PasteDialogUnit,'#13#10'  {$ifn'
  +'def JScript}'#13#10'  Dialogs, Forms, Controls, ComCtrls, MouseAndKeyInput,'
  +' LazsUtils,'#13#10'  UtilsJSCompile;'#13#10'  {$Else}'#13#10'  HTMLUtils;'
  +#13#10'  {$endif}'#13#10#13#10'const fieldDelimiter:string = ''%^&'';'#13#10
  +'      eventDelimiter:string = ''&^%'';'#13#10#13#10'{$ifndef JScript}'#13#10
  +'type  TmouseAnimParams = record'#13#10'  Shift:TShiftState;'#13#10'  Screen'
  +'X:integer;'#13#10'  ScreenY:integer;'#13#10'  duration:integer;'#13#10'end;'
  +#13#10'  PmouseAnimParams = ^TmouseAnimParams;'#13#10'type THelperProcs = cl'
  +'ass(TObject)'#13#10'   procedure CallMove(Data:PtrInt);'#13#10'end;'#13#10
  +'{$endif}'#13#10#13#10'type'#13#10#13#10'  TMacroEvent = record'#13#10'    E'
  +'ventType:String;'#13#10'    NodeId:String;'#13#10'    eventvalue:string;'#13
  +#10'  end;'#13#10#13#10'  TMacroEvents= Array of TMacroEvent;'#13#10#13#10' '
  +' TMacroEventList = class(TObject)'#13#10'      MacroEvents:TMacroEvents;'#13
  +#10'      RecordingEnabled:boolean;'#13#10'      ReplayEnabled:boolean;'#13
  +#10'      Replaying:Boolean;'#13#10'      Eventcount:integer;'#13#10'      C'
  +'urrentEvent:integer;     // used during replay'#13#10'      CompletedEvent:'
  +'integer;   // used during replay'#13#10'      initialised:Boolean;'#13#10' '
  +'     StartState:String;'#13#10'      constructor create;'#13#10'  //    fun'
  +'ction CheckForResumeFromLocalStorage:boolean;'#13#10'      procedure add(e:'
  +'TMacroEvent);'#13#10'      function  ToMyString:string;'#13#10'      proced'
  +'ure FromMyString(instring:String);'#13#10'      procedure clear;'#13#10'   '
  +'   procedure SetMenuVisibility;'#13#10'  //    procedure ContinueReplay;'#13
  +#10'   end;'#13#10#13#10'procedure TrapEventForMacro(e:TEventStatus);'#13#10
  +'procedure StartRecording;'#13#10'procedure StopRecording;'#13#10'procedure '
  +'ResumeMacroRecording;'#13#10'procedure StartReplay;'#13#10'procedure Finish'
  +'Replay;'#13#10'procedure InsertComment;'#13#10'procedure SaveMacroToClip;'
  +#13#10'procedure DoMacroLoad(MacroString:String);'#13#10'procedure LoadMacro'
  +'FromClip(e:TEventStatus;nodeId:string);'#13#10'function ReplayUserInput(pro'
  +'mptText:String):String;'#13#10'procedure DoNextEvent(idx:integer);'#13#10'f'
  +'unction AdvanceEventLog:TMacroEvent;'#13#10'procedure SetCompletedEvent(idx'
  +':integer);'#13#10'{$ifndef JScript}'#13#10'procedure  ReplayEvent(e:TEventS'
  +'tatus;EventType,nodeID,NameSpace,myValue:PChar);'#13#10'{$else}'#13#10'proc'
  +'edure CheckEventDone(i,waitcount:integer);'#13#10'{$endif}'#13#10'procedure'
  +' ReplayEvent(e:TEventStatus;EventType,nodeID,NameSpace,myValue:String);'#13
  +#10'procedure MovePointer(NameSpace,NodeName1,NodeName2,Sub1,Sub2:String;dra'
  +'g:Boolean);'#13#10#13#10'var'#13#10'    MacroEventList:TMacroEventList;'#13
  +#10'    LoggingLabelNode:TDataNode;'#13#10'    {$ifndef JScript}'#13#10'    '
  +'Helperprocs:THelperProcs;'#13#10'    {$else}'#13#10'    MyTimeoutFunc:Strin'
  +'g;'#13#10'    {$endif}'#13#10#13#10'implementation'#13#10'uses XObjectInsp;'
  +#13#10#13#10#13#10'function StringToSubStringList(InString,delimiter:String)'
  +':TStringList;'#13#10'var items : TStringList;'#13#10'begin'#13#10'//showmes'
  +'sage(''splitting >''+Instring+''<'');'#13#10'  items := TstringList.Create;'
  +#13#10'  items.StrictDelimiter:=true;'#13#10'  items.LineBreak:=delimiter;'
  +#13#10'  items.text:= InString;'#13#10'//showmessage(''bitcount=''+inttostr('
  +'items.count));'#13#10'  StringToSubStringList:=items;'#13#10'end;'#13#10#13
  +#10#13#10'function stringsplit(str:string; separator:string):TStringList;'#13
  +#10'var'#13#10'   localStringList:TStringList;'#13#10'begin'#13#10'  localSt'
  +'ringList:=StringToSubStringList(str,separator);'#13#10'  result:=localStrin'
  +'gList;'#13#10'end;'#13#10#13#10'procedure ReplayEvent(e:TEventStatus;EventT'
  +'ype,nodeID,NameSpace,myValue:string);'#13#10'// this procedure mirrors the '
  +'''user'' actions required on UI widgets prior to'#13#10'// re-executing the'
  +' relevant event handler.'#13#10#13#10'  procedure SetAStringproperty(Widget'
  +':TObject;PropName,NewValue:String);'#13#10'  begin'#13#10'    {$ifndef JScr'
  +'ipt}'#13#10'    SetStrProp(Widget,PropName,NewValue);'#13#10'    {$else}'#13
  +#10'    SetStringProp(Widget,PropName,NewValue);'#13#10'    {$endif}'#13#10
  ,'  end;'#13#10'  procedure SetAIntegerproperty(Widget:TObject;PropName:Strin'
  +'g;NewValue:integer);'#13#10'  begin'#13#10'    {$ifndef JScript}'#13#10'   '
  +' SetOrdProp(Widget,PropName,NewValue);'#13#10'    {$else}'#13#10'    SetNat'
  +'iveIntProp(Widget,PropName,NewValue);'#13#10'    {$endif}'#13#10'  end;'#13
  +#10#13#10'  var'#13#10'    eventNode:TDataNode;'#13#10'    handled:Boolean;'
  +#13#10'    i:integer;'#13#10'    bits:TStringList;'#13#10'    NodeObj:TNodeE'
  +'ventValue;'#13#10'    {$ifndef JScript}'#13#10'    MyRecPtr: PNodeDataRec;'
  +#13#10'    {$else}'#13#10'    ob:TObject;'#13#10'    {$endif}'#13#10'  begin'
  +#13#10'//    showmessage(''ReplayEvent ''+EventType+'' ''+nodeID+'' ''+myVal'
  +'ue);'#13#10'    handled:=false;'#13#10'    if NodeId<>'''' then'#13#10'    '
  +'begin'#13#10'      eventNode:=FindDataNodeById(SystemNodeTree,NodeId,NameSp'
  +'ace,true);'#13#10'      // depending on the type of node, and the event typ'
  +'e, we may need to set the state of the widget.'#13#10'      if EventType='''
  +'Change'' then'#13#10'      begin'#13#10'        if (eventNode.NodeType=''TX'
  +'EditBox'')'#13#10'        or (eventNode.NodeType=''TXCode'')'#13#10'       '
  +' or (eventNode.NodeType=''TXColorPicker'')'#13#10'        or (eventNode.Nod'
  +'eType=''TXDatePicker'')'#13#10'        or (eventNode.NodeType=''TXMemo'')'
  +#13#10'        or (eventNode.NodeType=''TXNumberSpinner'')'#13#10'        or'
  +' (eventNode.NodeType=''TXNumericSlider'')'#13#10'        or (eventNode.Node'
  +'Type=''TXRadioBtns'')'#13#10'        then'#13#10'        begin'#13#10'     '
  +'     {$ifndef JScript}'#13#10'          if (eventNode.NodeType<>''TXEditBox'
  +''')  //desktop: not handled - this will not raise a new change event, so st'
  +'ill need to call the change handler'#13#10'          then'#13#10'          '
  +'  handled:=true;'#13#10'          {$else}'#13#10'          if (eventNode.No'
  +'deType<>''TXEditBox'')  //browser: not handled - this will not raise a new '
  +'change event, so still need to call the change handler'#13#10'          and'
  +' (eventNode.NodeType<>''TXRadioBtns'')'#13#10'          then'#13#10'       '
  +'     handled:=true;'#13#10'          {$endif}'#13#10'          SetAStringpr'
  +'operty(eventNode.ScreenObject,''ItemValue'',myValue);'#13#10'        end'#13
  +#10'        else if (eventNode.NodeType=''TXComboBox'')  then'#13#10'       '
  +' begin'#13#10'          //handled:=true;'#13#10'          i:=TXComboBox(eve'
  +'ntNode.ScreenObject).IndexOfOption(myValue);'#13#10'          SetAIntegerpr'
  +'operty(eventNode.ScreenObject,''ItemIndex'',i);'#13#10'        end'#13#10' '
  +'       else if (eventNode.NodeType=''TXTabControl'') then'#13#10'        be'
  +'gin'#13#10'          //handled:=true;'#13#10'          {$ifndef JScript}'#13
  +#10'          i:=TXTabControl(eventNode.ScreenObject).IndexOfPage(myValue);'
  +#13#10'          SetAIntegerproperty(eventNode.ScreenObject,''TabIndex'',i);'
  +#13#10'          {$else}'#13#10'          ChangeTabPage(myValue,NodeId,NameS'
  +'pace);'#13#10'          {$endif}'#13#10'        end'#13#10'        else if '
  +'(eventNode.NodeType=''TXTable'') then'#13#10'        begin'#13#10'         '
  +' handled:=true;'#13#10'          SetAStringproperty(eventNode.ScreenObject,'
  +'''TableData'',myValue);'#13#10'        end;'#13#10'      end'#13#10'      e'
  +'lse if EventType=''Click'' then'#13#10'      begin'#13#10'        if (event'
  +'Node.NodeType=''TXTable'') then'#13#10'        begin'#13#10'          // Cl'
  +'ick needs to set SelectedRow, column...'#13#10'          // event data is <'
  +'row>,<col>'#13#10'          bits:=TStringList.Create;'#13#10'          bits'
  +'.StrictDelimiter:=true;'#13#10'          bits.Delimiter:='','';'#13#10'    '
  +'      bits.Text:=myValue;'#13#10'          if bits.count=2 then'#13#10'    '
  +'      begin'#13#10'            SetAIntegerproperty(eventNode.ScreenObject,'
  +'''SelectedRow'',StrToInt(bits[0]));'#13#10'            SetAIntegerproperty('
  +'eventNode.ScreenObject,''SelectedCol'',StrToInt(bits[1]));'#13#10'         '
  +' end;'#13#10'          bits.Free;'#13#10'        end;'#13#10'      end'#13
  +#10#13#10'      else if EventType=''ButtonClick'' then'#13#10'      begin'#13
  +#10'        {$ifndef JScript}'#13#10'        {$else}'#13#10'        if (even'
  +'tNode.NodeType=''TXButton'') then'#13#10'        begin'#13#10'          //h'
  +'andled:=true;'#13#10'          asm'#13#10'            ob=document.getElemen'
  +'tById(myValue+''Contents'');'#13#10'            if (ob!=null) {'#13#10'    '
  +'          // visual click...'#13#10'              //ob.style.WebkitAnimatio'
  +'nPlayState = "running";   // "paused";'#13#10'              //ob.className '
  +'= current[0].className.replace(" active", "");'#13#10'              //ob.fo'
  +'cus();'#13#10'              ob.className += " replayButton";'#13#10'       '
  +'       myTimeout(function(){pas.HTMLUtils.removeClassName(ob, "replayButton'
  +'");}, 300, ''replayButton'',0);'#13#10'            }'#13#10'          end;'
  +#13#10'        end;'#13#10'        {$endif}'#13#10'      end'#13#10'      el'
  ,'se if EventType=''TreeNodeClick'' then'#13#10'      begin'#13#10'        if'
  +' (eventNode.NodeType=''TXTree'') then'#13#10'        begin'#13#10'         '
  +' // TreeNodeClick needs to set the selected node in the tree'#13#10'       '
  +'   // event data is node id (eg DETAILS element in HTML)'#13#10'          S'
  +'etAStringproperty(eventNode.ScreenObject,''SelectedNodeId'',myValue);'#13#10
  +'        end;'#13#10'      end'#13#10'      else if EventType=''DragStart'' '
  +'then'#13#10'      begin'#13#10'        if (eventNode.NodeType=''TXTree'') t'
  +'hen'#13#10'        begin'#13#10'          {$ifndef JScript}'#13#10'        '
  +'  handled:=true;  //!!!! tbd'#13#10'          {$else}'#13#10'          Drag'
  +'gingTree:=TXTree(eventNode.ScreenObject);'#13#10'          DraggingTree.Nod'
  +'eBeingDragged:=myValue;'#13#10'          {$endif}'#13#10'        end;'#13#10
  +#13#10'      end'#13#10'      else if EventType=''Drop'' then'#13#10'      b'
  +'egin'#13#10'        if (eventNode.NodeType=''TXTree'') then'#13#10'        '
  +'begin'#13#10'          {$ifndef JScript}'#13#10'          //!!!!'#13#10'   '
  +'       {$else}'#13#10'          if DraggingTree<>nil then'#13#10'          '
  +'begin'#13#10'            // set up ''e'' data'#13#10'            NodeObj:=T'
  +'NodeEventValue.Create;'#13#10'            e:=TEventStatus.Create(''Drop'',n'
  +'odeId);'#13#10'            e.NameSpace:=NameSpace;'#13#10'            asm'
  +#13#10'              ob=document.getElementById(myValue+''Summary'');'#13#10
  +'              if (ob!=null) {'#13#10'                NodeObj.DstText=ob.inn'
  +'erHTML; //TEXT of node being dropped on'#13#10'              }'#13#10'     '
  +'       end;'#13#10'            NodeObj.myTree:=eventNode.ScreenObject;'#13
  +#10'            NodeObj.SrcText:=DraggingTree.NodeBeingDragged;'#13#10'     '
  +'       NodeObj.SourceName:=DraggingTree.myNode.NodeName;'#13#10'           '
  +' NodeObj.myNode:=ob;   //!!!! the summary node being dropped on'#13#10'    '
  +'        e.ValueObject:=NodeObj;'#13#10'          end;'#13#10'          {$en'
  +'dif}'#13#10'        end;'#13#10'      end;'#13#10'    end;'#13#10#13#10'   '
  +' if not handled then'#13#10'    begin'#13#10'      {$ifndef JScript}'#13#10
  +'      handleEvent(e,EventType,nodeId,NameSpace,myValue);'#13#10'      {$els'
  +'e}'#13#10'      // timeout here basically (eg.) because TreeNodeClick opens'
  +' the tree node on a timeout, and we want to see'#13#10'      // those chang'
  +'es on screen before continuing.'#13#10'      asm'#13#10'        myTimeout(p'
  +'as.Events.handleEvent,5,''handleEvent'',0,e,EventType,nodeID,NameSpace,myVa'
  +'lue);'#13#10'      end;'#13#10'      {$endif}'#13#10#13#10'    end;'#13#10
  +'end;'#13#10'{$ifndef JScript}'#13#10'procedure  ReplayEvent(e:TEventStatus;'
  +'EventType,nodeID,NameSpace,myValue:PChar);'#13#10'begin'#13#10'  ReplayEven'
  +'t(e,EventType,nodeID,NameSpace,StrPas(myValue));'#13#10'end;'#13#10'{$endif'
  +'}'#13#10#13#10'procedure MovePointer(NameSpace,NodeName1,NodeName2,Sub1,Sub'
  +'2:String;drag:Boolean);'#13#10'  var'#13#10'    Node1,Node2:TDataNode;'#13
  +#10'    {$ifndef JScript}'#13#10'    SelectedControl1,SelectedControl2:TCont'
  +'rol;'#13#10'    PmouseAnimInfo1,PmouseAnimInfo2: PmouseAnimParams;'#13#10' '
  +'   P:TPoint;'#13#10'    function FindTreeNodePos(TreeNode:TDataNode; id:Str'
  +'ing):TPoint;'#13#10'      var'#13#10'        theTree:TXTree;'#13#10'       '
  +' theNode:TTreeNode;'#13#10'        lRect: TRect;'#13#10'        lPoint: TPo'
  +'int;'#13#10'    begin'#13#10'       theTree:=TXTree(TreeNode.ScreenObject);'
  +#13#10'       theNode:=TMyTreeView(theTree.myControl).FindNodeById(id);'#13
  +#10'       if theNode<>nil then'#13#10'       begin'#13#10'         lRect :='
  +' theNode.DisplayRect(true);'#13#10'         lPoint.X := lRect.Left;'#13#10
  +'         lPoint.Y := lRect.Bottom;'#13#10'         lPoint := TTreeView(theT'
  +'ree.myControl).ClientToScreen(lPoint);'#13#10'       end;'#13#10'       res'
  +'ult:=lPoint;'#13#10'    end;'#13#10'    {$endif}'#13#10#13#10'begin'#13#10
  +'  {$ifndef JScript}'#13#10'  Node1:=findDataNodeById(SystemNodeTree,NodeNam'
  +'e1,NameSpace,true);'#13#10'  Node2:=findDataNodeById(SystemNodeTree,NodeNam'
  +'e2,NameSpace,true);'#13#10#13#10'  if (Node1<>nil) and (Node2<>nil)'#13#10
  +'  and (Node1.MyForm = Node2.myForm)'#13#10'  and (Node1.NodeClass=''UI'') a'
  +'nd (Node2.NodeClass=''UI'')'#13#10'  then'#13#10'  begin'#13#10'     // cha'
  +'nge the cursor to the pointy finger cursor during the move'#13#10'     Node'
  +'1.MyForm.Cursor := crHandPoint;       //!!!! not working'#13#10#13#10'     '
  +'new(PmouseAnimInfo1);'#13#10'     PmouseAnimInfo1^.duration:=500;'#13#10'  '
  +'   PmouseAnimInfo1^.Shift:=[];'#13#10#13#10'     if (Node1.NodeType= ''TXTr'
  +'ee'')'#13#10'     and (sub1<>'''') then'#13#10'     begin'#13#10'        P:'
  +'=FindTreeNodePos(Node1,sub1);'#13#10'        PmouseAnimInfo1^.ScreenX:=P.X;'
  +#13#10'        PmouseAnimInfo1^.ScreenY:=P.Y;'#13#10'        PmouseAnimInfo1'
  +'^.ScreenX:=-1;'#13#10'        PmouseAnimInfo1^.ScreenY:=-1;'#13#10'     end'
  ,#13#10'     else'#13#10'     begin'#13#10'       // find the lazarus control'
  +'s handles'#13#10'       SelectedControl1:=TControl(Node1.screenobject);'#13
  +#10#13#10'       // if there is an inner component, use that...'#13#10'     '
  +'  if HasProperty(SelectedControl1,''myControl'') then'#13#10'         Selec'
  +'tedControl1:=TControl(GetObjectProp(SelectedControl1,''myControl''));'#13#10
  +#13#10'       if (SelectedControl1.Visible=true)'#13#10'       and (Selected'
  +'Control1.ClassName<>''TXMenuItem'') then'#13#10'       begin'#13#10'       '
  +'  P:=SelectedControl1.ClientToScreen(Point(0,0));'#13#10'         //showmes'
  +'sage(inttostr(P.X)+'' ''+inttostr(P.Y));'#13#10'         PmouseAnimInfo1^.S'
  +'creenX:=P.X+trunc(SelectedControl1.width/2);'#13#10'         PmouseAnimInfo'
  +'1^.ScreenY:=P.Y+trunc(SelectedControl1.height/2);'#13#10'       end;'#13#10
  +'     end;'#13#10#13#10'     if PmouseAnimInfo1^.ScreenX>-1 then'#13#10'    '
  +' begin'#13#10'       //showmessage(''move to ''+inttostr(PmouseAnimInfo1^.S'
  +'creenX)+'',''+inttostr(PmouseAnimInfo1^.ScreenY));'#13#10'       // move th'
  +'e mouse instantly to the middle of the first control on the form'#13#10'   '
  +'    Application.QueueAsyncCall(@HelperProcs.CallMove,PtrInt(PmouseAnimInfo1'
  +'));'#13#10'     end;'#13#10#13#10'     new(PmouseAnimInfo2);'#13#10'     Pm'
  +'ouseAnimInfo2^.duration:=500;'#13#10'     PmouseAnimInfo2^.Shift:=[];'#13#10
  +'     PmouseAnimInfo2^.ScreenX:=-1;'#13#10'     PmouseAnimInfo2^.ScreenY:=-1'
  +';'#13#10#13#10'     if (Node2.NodeType= ''TXTree'')'#13#10'     and (sub2<>'
  +''''') then'#13#10'     begin'#13#10'        P:=FindTreeNodePos(Node2,sub2);'
  +#13#10'        PmouseAnimInfo2^.ScreenX:=P.X;'#13#10'        PmouseAnimInfo2'
  +'^.ScreenY:=P.Y;'#13#10'     end'#13#10'     else'#13#10'     begin'#13#10' '
  +'      SelectedControl2:=TControl(Node2.screenobject);'#13#10#13#10'       i'
  +'f HasProperty(SelectedControl2,''myControl'') then'#13#10'         Selected'
  +'Control2:=TControl(GetObjectProp(SelectedControl2,''myControl''));'#13#10#13
  +#10'       if SelectedControl2.Visible'#13#10'       and (SelectedControl2.C'
  +'lassName<>''TXMenuItem'') then'#13#10'       begin'#13#10'         P:=Selec'
  +'tedControl2.ClientToScreen(Point(0,0));'#13#10'         PmouseAnimInfo2^.Sc'
  +'reenX:=P.X+trunc(SelectedControl2.width/2);'#13#10'         PmouseAnimInfo2'
  +'^.ScreenY:=P.Y+trunc(SelectedControl2.height/2);'#13#10'       end;'#13#10
  +'     end;'#13#10#13#10'     if PmouseAnimInfo2^.ScreenX>-1 then'#13#10'    '
  +' begin'#13#10'       //showmessage(''move to ''+inttostr(PmouseAnimInfo2^.S'
  +'creenX)+'',''+inttostr(PmouseAnimInfo2^.ScreenY));'#13#10'       // move th'
  +'e mouse slowly to the middle of the second control on the form'#13#10'     '
  +'  Application.QueueAsyncCall(@HelperProcs.CallMove,PtrInt(PmouseAnimInfo2))'
  +';'#13#10'     end;'#13#10#13#10'   end;'#13#10#13#10'  {$else}'#13#10#13#10
  +'     asm'#13#10#13#10'      function CursorMove(x1,y1,x2,y2,drag) {'#13#10
  +'           // This function will change the anim'#13#10'           // Find '
  +'your animation rule by name'#13#10'    '#9'var ss = document.styleSheets[0]'
  +';'#13#10'    '#9'var anim;'#13#10'            try {'#13#10'              fo'
  +'r (var i=0; i<ss.cssRules.length; i++) {'#13#10'                   //alert('
  +'''i=''+i+'' name=''+ss.cssRules[i].name);'#13#10'    '#9#9'if (ss.cssRules['
  +'i].name === ''anim'') {'#13#10'    '#9#9'  anim = ss.cssRules[i];'#13#10'  '
  +'  '#9#9'  break;'#13#10'    '#9'        }'#13#10'                  }'#13#10
  +'               if (anim==null) {alert(''did not find anim'');}'#13#10'     '
  +'          else {'#13#10'       '#9'      var SelectedcssRule1 = anim.cssRul'
  +'es[0]; // This indicates the first line of "anim" above.'#13#10'    '#9'   '
  +'   var SelectedcssRule2 = anim.cssRules[1]; // This indicates the second li'
  +'ne of "anim" above.'#13#10'    '#9'      // Change the attributes'#13#10'  '
  +'  '#9'      SelectedcssRule1.style.cssText = '' top: ''+y1+''px; ''+'' left'
  +': ''+x1+''px; '';'#13#10'    '#9'      SelectedcssRule2.style.cssText = '' '
  +'top: ''+y2+''px; ''+'' left: ''+x2+''px; '';'#13#10'               }'#13#10
  +'            }'#13#10'            catch(err) { alert(''Error ''+ err.message'
  +'); }'#13#10'    }'#13#10'      function ACTransEnd(event) {'#13#10'        '
  +'// NB. this doesn''t fire if the animation is interrupted'#13#10'        //'
  +' Next event replay needs to wait for this animation to complete.'#13#10'   '
  +'     AnimationWaiting=false;'#13#10'      }'#13#10#13#10'      function DoA'
  +'nimation(){'#13#10'         // run the new animation by re-creating the Aut'
  +'omatedCursor div...'#13#10'         var elm = document.getElementById("Auto'
  +'matedCursor");'#13#10'      '#9'   var newone = elm.cloneNode(true);'#13#10
  +'      '#9'   elm.parentNode.replaceChild(newone, elm);'#13#10'         newo'
  +'ne.id = "AutomatedCursor";'#13#10'         if (drag==true) {'#13#10'       '
  +'    newone.innerHTML = "&#128188;";'#13#10'         }'#13#10'         else '
  ,'{'#13#10'           newone.innerHTML = "&#9756;";'#13#10'         }'#13#10
  +'         AnimationWaiting=true;'#13#10'         newone.addEventListener("an'
  +'imationend", ACTransEnd);'#13#10'      }'#13#10#13#10'       function Point'
  +'(x, y) {'#13#10'          this.x = x;'#13#10'          this.y = y;'#13#10' '
  +'       }'#13#10'       function GetElementXY(SelectedControlName) {'#13#10
  +'         var SelectedElement = document.getElementById(SelectedControlName)'
  +';'#13#10'         var rect = SelectedElement.getBoundingClientRect();'#13#10
  +'         console.log(''GetElementXY(''+SelectedControlName+'') rect=''+rect'
  +'.top+'',''+rect.left+'' ''+rect.width+'',''+rect.height);'#13#10'         v'
  +'ar p = new Point(Math.trunc(rect.left + rect.width/2), Math.trunc(rect.top '
  +'+ rect.height/2));'#13#10'         return p;'#13#10'       }'#13#10#13#10' '
  +'      console.log('' CursorMove ''+NodeName1+'':''+Sub1+'' to ''+NodeName2+'
  +''':''+Sub2);'#13#10'       var ptr = document.getElementById("AutomatedCurs'
  +'or");'#13#10'       ptr.style.display = "block";'#13#10#13#10'       if (Su'
  +'b1=='''') {'#13#10'         // Find the centre-point of the given element'
  +#13#10'         var p1=GetElementXY(NodeName1);'#13#10'       }'#13#10'     '
  +'  else {'#13#10'         // Find the centre-point of the given tree node'#13
  +#10'         p1=GetElementXY(Sub1);'#13#10'       }'#13#10'       if (Sub2=='
  +''''') {'#13#10'         // Find the centre-point of the given element'#13#10
  +'         var p2=GetElementXY(NodeName2);'#13#10'       }'#13#10'       else'
  +' {'#13#10'         // Find the centre-point of the given tree node'#13#10' '
  +'        p2=GetElementXY(Sub2);'#13#10'       }'#13#10'       if ((p2.x==0)&'
  +'&(p2.y==0)) {p2.x=p1.x; p2.y=p1.y}   //!! sometimes the returned rect is ze'
  +'ro...'#13#10'       console.log(''cursormove ''+p1.x+'',''+p1.y+'' to ''+p2'
  +'.x+'',''+p2.y);'#13#10'       CursorMove(p1.x,p1.y,p2.x,p2.y,drag);'#13#10
  +'       DoAnimation();'#13#10'     end;'#13#10'  {$endif}'#13#10'end;'#13#10
  +#13#10'procedure HidePointer;'#13#10'begin'#13#10'  {$ifndef JScript}'#13#10
  +'  // not relevant in the Lazarus/desktop environment'#13#10'  {$else}'#13#10
  +' asm'#13#10'   var ptr = document.getElementById("AutomatedCursor");'#13#10
  +'   ptr.style.display = "none";'#13#10' end;'#13#10'  {$endif}'#13#10'end;'
  +#13#10#13#10'procedure SetCompletedEvent(idx:integer);'#13#10'begin'#13#10' '
  +'  MacroEventList.CompletedEvent:=idx;'#13#10'end;'#13#10#13#10'procedure Do'
  +'NextEvent(idx:integer);'#13#10'var p1,p2,p3:string;'#13#10'    TempEvent:TM'
  +'acroEvent;'#13#10'    StartTime,EndTime,NewTime: TDateTime;'#13#10'    i:in'
  +'teger;'#13#10'    sub1,sub2:String;'#13#10'    LastNode,ThisNode:TDataNode;'
  +#13#10'begin'#13#10'  MacroEventList.CurrentEvent:=idx;'#13#10'  i:=idx;'#13
  +#10'  TempEvent:=MacroEventList.MacroEvents[i];'#13#10'  p1:=TempEvent.Event'
  +'Type;'#13#10'  p2:=TempEvent.NodeId;'#13#10'  p3:=TempEvent.eventvalue;'#13
  +#10#13#10#13#10'  EditAttributeValue(LoggingLabelNode,''LabelCaption'',''Rep'
  +'lay... >''+  p1 +''<  >''+  p2+''<  >''+ p3 +''< '');'#13#10#13#10'     if '
  +' TempEvent.EventType = ''OpenSubMenu'''#13#10'     then'#13#10'     begin'
  +#13#10'       ThisNode:=FindDataNodeById(SystemNodeTree,TempEvent.NodeId,'''
  +''',true);'#13#10'       {$ifndef JScript}'#13#10'       TXMenuItem(ThisNode'
  +'.ScreenObject).Click;'#13#10'       {$else}'#13#10'       {$endif}'#13#10' '
  +'    end'#13#10'     else'#13#10'     begin'#13#10'       if   (TempEvent.No'
  +'deId <> ''EventsMacroStartRecording'')'#13#10'       and  (TempEvent.NodeId'
  +' <> ''EventsMacroStopRecording'')'#13#10'       and  (TempEvent.NodeId <> '
  +'''EventsMacroStartReplay'')'#13#10'       and  (TempEvent.NodeId <> ''Event'
  +'sMacroSaveToClip'')'#13#10'       and  (TempEvent.NodeId <> ''EventsMacroLo'
  +'adFromClip'')'#13#10'       and  (TempEvent.NodeId <> ''EventsMacroResumeRe'
  +'cording'')'#13#10'       and  (TempEvent.NodeId <> ''MacroCommentForm'')'#13
  +#10'       then'#13#10'       begin'#13#10'         // Move the animated poi'
  +'nter....'#13#10'         if (length(trim(p2))>0)'#13#10'         then'#13#10
  +'         begin'#13#10'           sub1:='''';'#13#10'           sub2:='''';'
  +#13#10'           if (i>0) and (length(trim(MacroEventList.MacroEvents[i-1].'
  +'NodeId))>0) then'#13#10'             LastNode:=FindDataNodeById(SystemNodeT'
  +'ree,MacroEventList.MacroEvents[i-1].NodeId,'''',true)'#13#10'           els'
  +'e'#13#10'             LastNode:=UIRootNode;'#13#10'           ThisNode:=Fin'
  +'dDataNodeById(SystemNodeTree,MacroEventList.MacroEvents[i].NodeId,'''',true'
  +');'#13#10'           {$ifdef JScript}'#13#10'           asm'#13#10'        '
  +'   console.log(''DoNextEvent ''+i+'' EventType=''+p1+'' LastNode=''+LastNod'
  +'e.NodeName+'' ThisNode=''+ThisNode.NodeName);'#13#10'           end;'#13#10
  +'           {$endif}'#13#10'           if (LastNode<>nil) and (ThisNode<>nil'
  +') then'#13#10'           begin'#13#10'             if LastNode.NodeType=''T'
  ,'XTree'' then'#13#10'               sub1:=TXTree(LastNode.ScreenObject).Sele'
  +'ctedNodeId;'#13#10'             if ThisNode.NodeType=''TXTree'' then'#13#10
  +'               sub2:=TXTree(ThisNode.ScreenObject).SelectedNodeId;'#13#10' '
  +'            if (TempEvent.EventType=''Drop'') then'#13#10'               Mo'
  +'vePointer('''',LastNode.NodeName,p2,sub1,sub2,true)'#13#10'             els'
  +'e'#13#10'               MovePointer('''',ThisNode.NodeName,p2,sub1,sub2,fal'
  +'se);'#13#10'           end;'#13#10'         end;'#13#10#13#10'         // D'
  +'o the Event processing......'#13#10'         {$ifndef JScript}'#13#10'     '
  +'    ReplayEvent(nil,p1,p2,'''',p3);'#13#10'         {$else}'#13#10'        '
  +' asm'#13#10'         myTimeout(pas.EventLogging.ReplayEvent,20,''ReplayEven'
  +'t'',0,null,p1,p2,'''',p3);'#13#10'         end;'#13#10'         {$endif}'#13
  +#10'         //...........................'#13#10#13#10'       end;'#13#10' '
  +' //     else'#13#10'  //     begin'#13#10'  //       if TempEvent.NodeId <>'
  +' ''EventsMacroStopRecording'' then'#13#10'  //         showmessage(''Event '
  +'>''+TempEvent.NodeId +''< logged in the macro but not replayed'' );'#13#10
  +'  //     end;'#13#10'     end;'#13#10#13#10'     if i>=length(MacroEventLis'
  +'t.MacroEvents)-1 then'#13#10'     begin'#13#10'       FinishReplay;'#13#10
  +'     end;'#13#10#13#10'     {$ifndef JScript}'#13#10'     SetCompletedEvent'
  +'(idx);'#13#10'     {$else}'#13#10'     asm'#13#10'       if (TempEvent.Node'
  +'Id != ''EventsMacroInsertComment'') {'#13#10'         myTimeout(pas.EventLo'
  +'gging.CheckEventDone, 210, ''checkdone'',0,idx,0);'#13#10'         myTimeou'
  +'t(pas.EventLogging.SetCompletedEvent,200,(''SetCompletedEvent ''+idx.toStri'
  +'ng()),0,idx);'#13#10'       }'#13#10'     end;'#13#10'     {$endif}'#13#10
  +'end;'#13#10#13#10#13#10#13#10'Procedure TMacroEventList.SetMenuVisibility;'
  +#13#10'begin'#13#10' if self.Replaying=false then'#13#10' begin'#13#10'   if'
  +' self.RecordingEnabled then'#13#10'   begin'#13#10'     EditAttributeValue('
  +'''EventsMacroMenu'','''',''Caption'',''Macro - Recording'');'#13#10'     Ed'
  +'itAttributeValue(''EventsMacroStopRecording'','''',''isEnabled'', ''true'')'
  +' ;'#13#10'     EditAttributeValue(''EventsMacroStartRecording'','''',''isEn'
  +'abled'', ''false'');'#13#10'     EditAttributeValue(''EventsMacroStartRepla'
  +'y'','''',''isEnabled'', ''false'');'#13#10'     EditAttributeValue(''Events'
  +'MacroInsertComment'','''',''isEnabled'', ''true'') ;'#13#10'     EditAttrib'
  +'uteValue(''EventsMacroSaveToClip'','''',''isEnabled'', ''false'') ;'#13#10
  +'     EditAttributeValue(''EventsMacroLoadFromClip'','''',''isEnabled'', ''f'
  +'alse'') ;'#13#10'     EditAttributeValue(''EventsMacroResumeRecording'','''
  +''',''isEnabled'', ''false'') ;'#13#10'   end'#13#10'   else'#13#10'   begin'
  +#13#10'     EditAttributeValue(''EventsMacroMenu'','''',''Caption'',''Macro'
  +''');'#13#10'     EditAttributeValue(''EventsMacroStopRecording'','''',''isE'
  +'nabled'', ''false'') ;'#13#10'     EditAttributeValue(''EventsMacroStartRec'
  +'ording'','''',''isEnabled'', ''true'');'#13#10'     EditAttributeValue(''Ev'
  +'entsMacroStartReplay'','''',''isEnabled'', ''true'');'#13#10'     EditAttri'
  +'buteValue(''EventsMacroInsertComment'','''',''isEnabled'', ''false'') ;'#13
  +#10'     EditAttributeValue(''EventsMacroSaveToClip'','''',''isEnabled'', '''
  +'true'') ;'#13#10'     EditAttributeValue(''EventsMacroLoadFromClip'','''','
  +'''isEnabled'', ''true'') ;'#13#10'     EditAttributeValue(''EventsMacroResu'
  +'meRecording'','''',''isEnabled'', ''true'') ;'#13#10'   end;'#13#10' end'#13
  +#10' else'#13#10' begin'#13#10'   //!!!! but basically need to disallow ANY '
  +'user interaction during replay ....?????'#13#10'   EditAttributeValue(''Eve'
  +'ntsMacroMenu'','''',''Caption'',''Macro - Replaying'');'#13#10'   EditAttri'
  +'buteValue(''EventsMacroStopRecording'','''',''isEnabled'', ''false'') ;'#13
  +#10'   EditAttributeValue(''EventsMacroStartRecording'','''',''isEnabled'', '
  +'''false'');'#13#10'   EditAttributeValue(''EventsMacroStartReplay'','''','''
  +'isEnabled'', ''false'');'#13#10'   EditAttributeValue(''EventsMacroInsertCo'
  +'mment'','''',''isEnabled'', ''false'') ;'#13#10'   EditAttributeValue(''Eve'
  +'ntsMacroSaveToClip'','''',''isEnabled'', ''false'') ;'#13#10'   EditAttribu'
  +'teValue(''EventsMacroLoadFromClip'','''',''isEnabled'', ''false'') ;'#13#10
  +'   EditAttributeValue(''EventsMacroResumeRecording'','''',''isEnabled'', '''
  +'false'') ;'#13#10' end;'#13#10'//         SetPropertyValue(''StopMacroRepla'
  +'y'',''isVisible'', ''true'');'#13#10'//         SetPropertyValue(''ResumeMa'
  +'croReplay'',''isVisible'', ''true'');'#13#10#13#10'end;'#13#10#13#10'constr'
  +'uctor TMacroEventList.create;'#13#10'begin'#13#10'  setlength(MacroEvents,0'
  +');'#13#10'  EventCount:=0;'#13#10'  RecordingEnabled:=false;'#13#10'  Repla'
  +'yEnabled:=false;'#13#10'  Replaying:=false;'#13#10'  initialised:=false;'#13
  +#10'end;'#13#10#13#10'//      function TMacroEventList.CheckForResumeFromLoc'
  ,'alStorage:boolean;'#13#10'//      var startstring:string;'#13#10'//      be'
  +'gin'#13#10'//        RecordingEnabled:=false;'#13#10'//        ReplayEnable'
  +'d:=false;'#13#10'//        startstring:=getPropertyValue(''StoreMacro'',''D'
  +'ataValue'');'#13#10'//        if length(trim(startstring))>1 then'#13#10'//'
  +'        begin'#13#10'//          //showmessage(''Saved Event List is >''+st'
  +'artstring +''< '');'#13#10'//          FromMyString(startstring );'#13#10'/'
  +'/        end;'#13#10'//        SetMenuVisibility;'#13#10'//        //SetPro'
  +'pertyValue(''RecordingStatus'',''LabelCaption'',''Not Recording'');'#13#10
  +'//        initialised:=true;'#13#10'//        if (ReplayEnabled=true)'#13#10
  +'//        then  CheckForResumeFromLocalStorage:=true'#13#10'//        else '
  +' CheckForResumeFromLocalStorage:=false;'#13#10'//      end;'#13#10#13#10'pr'
  +'ocedure TMacroEventList.add(e:TMacroEvent);'#13#10'begin'#13#10'  if Record'
  +'ingEnabled = true then'#13#10'  begin'#13#10'    Eventcount:=Eventcount+1;'
  +#13#10'    setlength(MacroEvents,Eventcount);'#13#10'    MacroEvents[Eventco'
  +'unt-1].EventType:=e.EventType;'#13#10'    MacroEvents[Eventcount-1].NodeId:'
  +'=e.NodeId;'#13#10'    MacroEvents[Eventcount-1].eventvalue:=e.eventvalue;'
  +#13#10'  end;'#13#10'end;'#13#10#13#10'procedure TMacroEventList.clear;'#13
  +#10'begin'#13#10'    Eventcount:=0;'#13#10'    MacroEventList.CurrentEvent :'
  +'=0;'#13#10'    MacroEventList.CompletedEvent:=-1;'#13#10'    setlength(Macr'
  +'oEvents,Eventcount);'#13#10'end;'#13#10#13#10'function  TMacroEventList.ToM'
  +'yString:string;'#13#10'var i:integer;'#13#10'    tempstring:string;'#13#10
  +'begin'#13#10'  //tempstring:=SubstituteSpecials(self.StartState) + eventDel'
  +'imiter +LineEnding;'#13#10'  tempstring:=self.StartState + eventDelimiter +'
  +'LineEnding;'#13#10'  if RecordingEnabled then tempstring:=tempstring + ''Tr'
  +'ue'' + eventDelimiter else tempstring:=tempstring + ''False'' + eventDelimi'
  +'ter +LineEnding;'#13#10'  if ReplayEnabled then tempstring:=tempstring + '''
  +'True'' + eventDelimiter else tempstring:=tempstring + ''False'' + eventDeli'
  +'miter +LineEnding;'#13#10'  if initialised then tempstring:=tempstring + '''
  +'True'' + eventDelimiter else tempstring:=tempstring + ''False'' + eventDeli'
  +'miter +LineEnding;'#13#10'  tempstring:=tempstring + inttostr(Eventcount) +'
  +' eventDelimiter +LineEnding;'#13#10'  tempstring:=tempstring + inttostr(Cur'
  +'rentEvent) + eventDelimiter +LineEnding;'#13#10'  tempstring:=tempstring + '
  +'inttostr(CompletedEvent) + eventDelimiter +LineEnding;'#13#10'  for i:=0 to'
  +' Eventcount - 1 do'#13#10'  begin'#13#10'    tempstring:=tempstring + Macro'
  +'Events[i].EventType + fieldDelimiter'#13#10'                           + Ma'
  +'croEvents[i].eventvalue +fieldDelimiter'#13#10'                          + '
  +'MacroEvents[i].NodeId     + eventDelimiter +LineEnding;'#13#10'  end;'#13#10
  +'  ToMyString:=tempstring;'#13#10'end;'#13#10#13#10'procedure TMacroEventLis'
  +'t.FromMyString(instring:String);'#13#10'var tempstringlist1,tempstringlist2'
  +':TStringList;'#13#10'    i:integer;'#13#10'    str:string;'#13#10'begin'#13
  +#10'  setlength(MacroEvents,0);'#13#10'  instring:=myStringReplace(instring,'
  +'eventDelimiter+LineEnding,eventDelimiter,-1,-1);'#13#10#13#10'  tempstringl'
  +'ist1:=stringsplit(instring,eventDelimiter);'#13#10'//  StartState:=UnSubsti'
  +'tuteSpecials(tempstringlist1[0]);'#13#10'  StartState:=tempstringlist1[0];'
  +#13#10'  if tempstringlist1[1]=''True'' then RecordingEnabled:=true else Rec'
  +'ordingEnabled:=false;'#13#10'  if tempstringlist1[2]=''True'' then ReplayEn'
  +'abled:=true else ReplayEnabled:=false;'#13#10'  if tempstringlist1[3]=''Tru'
  +'e'' then initialised:=true else initialised:=false;'#13#10'  Eventcount:=st'
  +'rtoint(tempstringlist1[4]);'#13#10'  CurrentEvent:=strtoint(tempstringlist1'
  +'[5]);'#13#10'  CompletedEvent:=strtoint(tempstringlist1[6]);'#13#10'  //set'
  +'length(MacroEvents,tempstringlist1.Count-7);'#13#10'  //showmessage(''Num E'
  +'vents = >''+inttostr(tempstringlist1.Count-7)+''<'');'#13#10'  for i:=7 to '
  +' tempstringlist1.Count - 1 do'#13#10'  begin'#13#10'    str:=tempstringlist'
  +'1[i];'#13#10'    setlength(MacroEvents,i-6);'#13#10'    //showmessage(''Eve'
  +'nt >''+inttostr(i-7)+''< =  >''+tempstringlist1[i]+''<'');'#13#10'    temps'
  +'tringlist2:=stringsplit( tempstringlist1[i],fieldDelimiter);'#13#10'    if '
  +'tempstringlist2.Count<>3 then showmessage(''Error in creating event from ev'
  +'ent list item >''+tempstringlist1[i]+''<'')'#13#10'    else'#13#10'    begi'
  +'n'#13#10'      MacroEvents[i-7].EventType   :=tempstringlist2[0];'#13#10'  '
  +'    MacroEvents[i-7].eventvalue  :=tempstringlist2[1];'#13#10'      MacroEv'
  +'ents[i-7].NodeId      :=tempstringlist2[2];'#13#10'    end;'#13#10'  end;'
  +#13#10'end;'#13#10#13#10'procedure StartRecording;'#13#10'var'#13#10'  ok:Bo'
  +'olean;'#13#10'begin'#13#10'  if (MacroEventList.RecordingEnabled=false )'#13
  +#10'  then'#13#10'  begin'#13#10'    ok:=true;'#13#10'    if length(MacroEve'
  ,'ntList.MacroEvents)>0 then'#13#10'      ok:=confirm(''OK to start recording'
  +' a new Macro?'')'#13#10'    else'#13#10'      showmessage(''Recording a new'
  +' Macro'');'#13#10'    if ok then'#13#10'    begin'#13#10'      MacroEventLi'
  +'st.clear;'#13#10'      //      SetPropertyValue(''StoreMacro'',''DataValue'
  +''','' ''); // initalise the stored macro string to a blank string'#13#10'  '
  +'    MacroEventList.RecordingEnabled:=true;'#13#10'      MacroEventList.SetM'
  +'enuVisibility;'#13#10'      MacroEventList.StartState:=BuildSystemString(fa'
  +'lse);'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10#13#10'procedure Stop'
  +'Recording;'#13#10'begin'#13#10'  if (MacroEventList.RecordingEnabled=true )'
  +#13#10'  then'#13#10'  begin'#13#10'    MacroEventList.RecordingEnabled:=fal'
  +'se;'#13#10'    MacroEventList.SetMenuVisibility;'#13#10'    Showmessage(''M'
  +'acro Recording has ended'');'#13#10'  end;'#13#10'end;'#13#10#13#10'procedu'
  +'re ResumeMacroRecording;'#13#10'begin'#13#10'  MacroEventList.RecordingEnab'
  +'led:=true;'#13#10'  MacroEventList.SetMenuVisibility;'#13#10'  showmessage('
  +'''Macro Recording has been resumed'');'#13#10'end;'#13#10#13#10'procedure F'
  +'inishReplay;'#13#10'begin'#13#10'  if MacroEventList.Replaying=true then'#13
  +#10'  begin'#13#10'     Hidepointer;'#13#10'     EditAttributeValue(LoggingL'
  +'abelNode,''LabelCaption'','' '');'#13#10'     showmessage(''End of Macro Re'
  +'play'');'#13#10'     MacroEventList.Replaying:=false;'#13#10'     MacroEven'
  +'tList.SetMenuVisibility;'#13#10'  end;'#13#10'end;'#13#10#13#10'{$ifdef JSc'
  +'ript}'#13#10#13#10'procedure CheckEventDone(i,waitcount:integer);'#13#10'be'
  +'gin'#13#10'   asm'#13#10'       // console.log(''checkdone. i=''+i+'' waitc'
  +'ount=''+waitcount);'#13#10'         // waiting for event i to complete'#13
  +#10'         if (waitcount>999) {alert(''wait ''+i+''timed out'');}'#13#10' '
  +'        else'#13#10'         {'#13#10'           if ((pas.EventLogging.Macr'
  +'oEventList.CompletedEvent<i)||(JobsWaiting.length>0)) {'#13#10'            '
  +' myTimeout(pas.EventLogging.CheckEventDone, 200, (''checkdone ''+i.toString'
  +'()), 0, i, (waitcount+1));'#13#10'           }'#13#10'           else'#13#10
  +'           {'#13#10'             if (pas.EventLogging.MacroEventList.Comple'
  +'tedEvent>=i) {'#13#10'               if (i>0) {i=pas.EventLogging.MacroEven'
  +'tList.CurrentEvent;}'#13#10'               if (i< pas.EventLogging.MacroEve'
  +'ntList.Eventcount-1) {'#13#10'//                 console.log(''************'
  +'******** queueing event ''+(i+1)+'' ''+pas.EventLogging.MacroEventList.Macr'
  +'oEvents[i+1].EventType+'' ****************************'');'#13#10'         '
  +'        var diagn=(''DoNextEvent ''+(i+1).toString()+'' ''+pas.EventLogging'
  +'.MacroEventList.MacroEvents[i+1].EventType);'#13#10'                 myTime'
  +'out(pas.EventLogging.DoNextEvent, 800, diagn, 0, i+1);'#13#10'             '
  +'    }'#13#10'               else {pas.EventLogging.FinishReplay();}'#13#10
  +'             }'#13#10'             else {console.log(''doing nothing. i=''+'
  +'i+'' CurrentEvent=''+pas.EventLogging.MacroEventList.CurrentEvent);}'#13#10
  +'           }'#13#10'         }'#13#10'   end;'#13#10'end;'#13#10'{$endif}'
  +#13#10#13#10'procedure StartReplay;'#13#10'var'#13#10'  RowCount,i:integer;'
  +#13#10'begin'#13#10'  if (MacroEventList.RecordingEnabled=false )'#13#10'  t'
  +'hen'#13#10'  begin'#13#10'    if not DesignMode then'#13#10'      showmessa'
  +'ge(''Cannot load system string - switch to Design Mode first'')'#13#10'    '
  +'else'#13#10'    begin'#13#10'      if (MacroEventList.StartState='''')'#13
  +#10'      or (length(MacroEventList.MacroEvents)=0) then'#13#10'      begin'
  +#13#10'        showmessage(''No recorded macro available for replay'');'#13
  +#10'        Hidepointer;'#13#10'        MacroEventList.SetMenuVisibility;'#13
  +#10'      end'#13#10'      else'#13#10'      begin'#13#10'        DoSystemLo'
  +'ad(MacroEventList.StartState,'''');'#13#10#13#10'        //  LastNodeName:='
  +'''UIRoot'';'#13#10'        MacroEventList.Replaying:=true;'#13#10'        M'
  +'acroEventList.CurrentEvent:=0;'#13#10'        MacroEventList.CompletedEvent'
  +':=-1;'#13#10'        MacroEventList.Eventcount:=length(MacroEventList.Macro'
  +'Events);'#13#10'        MacroEventList.RecordingEnabled:=false;'#13#10'    '
  +'    MacroEventList.SetMenuVisibility;'#13#10'        RowCount:= MacroEventL'
  +'ist.Eventcount;'#13#10#13#10'        i:=0;'#13#10'        {$ifndef JScript}'
  +#13#10'        for i:=0 to RowCount-1'#13#10'        do'#13#10'        begin'
  +#13#10'          //MacroEventList.CurrentEvent:=MacroEventList.CurrentEvent+'
  +'1;'#13#10'          Application.ProcessMessages;'#13#10'          sleep(600'
  +');'#13#10'          DoNextEvent(i);'#13#10'        end;'#13#10'        {$el'
  +'se}'#13#10'        // using myTimeout so that the screen is refreshed with '
  +'any updates, before running next event'#13#10'        // BUT NEED TO HAVE T'
  +'HE PREVIOUS EVENT COMPLETED BEFORE FIRING OFF THE NEXT ONE, TO KEEP THE IN-'
  ,'EVENT TIMEOUTS IN ORDER'#13#10'        CheckEventDone(-1,0);'#13#10'       '
  +' {$endif}'#13#10'      end;'#13#10'    end;'#13#10'  end;'#13#10'end;'#13#10
  +#13#10'procedure InsertComment;'#13#10'var'#13#10'  macroEvent:TMacroEvent;'
  +#13#10'begin'#13#10'  if (MacroEventList.RecordingEnabled=false )'#13#10'  t'
  +'hen'#13#10'  begin'#13#10'    if MacroEventList.Replaying then'#13#10'    b'
  +'egin'#13#10'      // replay the comment      (original events logged are: C'
  +'hange, ButtonClick, UserInput)'#13#10'      while macroevent.EventType<>''U'
  +'serInput''  do'#13#10'        macroevent:=EventLogging.AdvanceEventLog;'#13
  +#10#13#10'      if macroevent.EventType<>''UserInput'' then'#13#10'      beg'
  +'in'#13#10'        showmessage(''unable to replay inserted comment...'');'#13
  +#10'      end'#13#10'      else'#13#10'      begin'#13#10'        //showmess'
  +'age(macroevent.eventvalue);'#13#10'        MacroCommentForm.ShowHTMLText(ma'
  +'croevent.eventvalue);'#13#10'        ShowXForm(''MacroCommentForm'',true,'''
  +''');'#13#10'      end;'#13#10'    end'#13#10'    else'#13#10'      showmess'
  +'age(''Comments can only be added when Macro recording is active - Command i'
  +'gnored'');'#13#10'  end'#13#10'  else'#13#10'    //TextMessage:= XIDEPrompt'
  +'(''Enter a comment to be shown when this macro is replayed.......'','''') ;'
  +#13#10'  begin'#13#10'    // pop up a Memo component'#13#10'    MacroComment'
  +'Form.ShowMemo;'#13#10'    ShowXForm(''MacroCommentForm'',true,'''');'#13#10
  +'  end;'#13#10'end;'#13#10#13#10'function AdvanceEventLog:TMacroEvent;'#13#10
  +'var'#13#10'  emptyrec:TMacroEvent;'#13#10'begin'#13#10'  if MacroEventList.'
  +'CurrentEvent<(length(MacroEventList.MacroEvents)-1) then'#13#10'  begin'#13
  +#10'    MacroEventList.CurrentEvent:=MacroEventList.CurrentEvent+1;'#13#10' '
  +'   result:=MacroEventList.MacroEvents[MacroEventList.CurrentEvent];'#13#10
  +'  end'#13#10'  else'#13#10'  begin'#13#10'    emptyrec.eventvalue:='''';'#13
  +#10'    result:=emptyrec;'#13#10'  end;'#13#10'end;'#13#10#13#10#13#10'funct'
  +'ion ReplayUserInput(promptText:String):String;'#13#10'var i,NameLength:inte'
  +'ger;'#13#10'    tempstr:string;'#13#10'    macroEvent:TMacroEvent;'#13#10'b'
  +'egin'#13#10'  // pop the original user-entered string off the event log (sh'
  +'ould be next event...)'#13#10'  macroEvent:=AdvanceEventLog;'#13#10'  if ma'
  +'croEvent.EventType<>''UserInput'' then'#13#10'    showmessage(''oops cannot'
  +' retrieve original user input'')'#13#10'  else'#13#10'  begin'#13#10'    te'
  +'mpstr:=macroEvent.eventvalue;'#13#10'    NameLength:=length(tempstr);'#13#10
  +'//    showmessage(''showing popup to test replay of get name dialogue ... s'
  +'tring = ''+tempstr);'#13#10'    ReplayUserDialog.theText:=tempstr;'#13#10#13
  +#10'    showXForm(''ReplayUserDialogForm'',true);'#13#10'    {$ifndef JScrip'
  +'t}'#13#10'    while ReplayUserDialogForm.Showing<>''No'' do'#13#10'      Ap'
  +'plication.ProcessMessages;'#13#10'    {$else}'#13#10'    ReplayUserDialogFo'
  +'rm.RunReplayDialog(nil);'#13#10'    {$endif}'#13#10'    result:=tempstr;'#13
  +#10'  end;'#13#10'end;'#13#10#13#10'procedure SaveMacroToClip;'#13#10'var'#13
  +#10'  str:String;'#13#10'begin'#13#10'  str:=MacroEventList.ToMyString;'#13
  +#10'  myCopyToClip(''Macro'',str );'#13#10'end;'#13#10#13#10'procedure DoMac'
  +'roLoad(MacroString:String);'#13#10'begin'#13#10'  MacroEventList.FromMyStri'
  +'ng(MacroString);'#13#10'end;'#13#10#13#10'procedure LoadMacroFromClip(e:TEv'
  +'entStatus;nodeId:string);'#13#10'var'#13#10'  MacroString:String;'#13#10'  '
  +'macroEvent:TMacroEvent;'#13#10'begin'#13#10#13#10'   if (e=nil)  or (e.Init'
  +'Running=false) then'#13#10'   begin'#13#10'     //showmessage(''new e'');'
  +#13#10'     if (e=nil) then'#13#10'     begin'#13#10'       e:=TEventStatus.'
  +'Create(''Click'',nodeId);'#13#10'     end;'#13#10'     e.initRunning:=true;'
  +#13#10'     PasteDialogUnit.CompletionEvent:=e;'#13#10'     {$ifdef JScript}'
  +#13#10'     e.AsyncProcsRunning.Add(''CopyFromClip'');'#13#10'     {$endif}'
  +#13#10#13#10'   end'#13#10'   else'#13#10'   begin'#13#10'     e.InitRunning'
  +':=false;'#13#10'   end;'#13#10#13#10'   if e.InitRunning then'#13#10'   beg'
  +'in'#13#10'     PasteDoneBtn.IsVisible:=false;'#13#10'     MacroString:=myge'
  +'tClipboardData(''Macro'');'#13#10'   end;'#13#10#13#10'   if e.EventHasWait'
  +'ingAsyncProcs = false then'#13#10'   // this is lazarus and a confirm dialo'
  +'g is not needed'#13#10'   // otherwise this is HTML and we have waited for '
  +'a ctrl-V event from the PasteDialog form'#13#10'   begin'#13#10'     {$ifnd'
  +'ef JScript}'#13#10'     // Lazarus only'#13#10'     //showmessage(''call Do'
  +'SystemLoad ''+SystemDescription);'#13#10'     DoMacroLoad(MacroString);'#13
  +#10'     {$else}'#13#10'     asm'#13#10'       pas.NodeUtils.StartingUp=fals'
  +'e;'#13#10'       var pasteTarget = document.getElementById(''PasteTargetCon'
  +'tents'');'#13#10'       var PasteString = pasteTarget.value;'#13#10'       '
  +'//alert(''Paste string = >''+PasteString+''<'' );'#13#10'       pas.EventLo'
  ,'gging.DoMacroLoad(PasteString);'#13#10'     end;'#13#10'     {$endif}'#13#10
  +'   end;'#13#10' end;'#13#10#13#10'//.......................trapper code....'
  +'..................'#13#10'procedure TrapEventForMacro(e:TEventStatus);'#13
  +#10'var'#13#10'  TempEvent:TMacroEvent;'#13#10'  ok:boolean;'#13#10'begin'#13
  +#10#13#10'   TempEvent.EventType  := e.EventType;'#13#10'   TempEvent.NodeId'
  +'     := e.NodeId;'#13#10'   TempEvent.eventvalue := e.eventvalue;'#13#10#13
  +#10'   if (MacroEventList.RecordingEnabled=true )   // recording is in progr'
  +'ess'#13#10'   then'#13#10'   begin'#13#10'     ok:=true;'#13#10'     if Tem'
  +'pEvent.NodeId = ''EventsMacroSaveToClip'' then'#13#10'     begin'#13#10'   '
  +'    Showmessage(''Stop The Macro Recording before calling Save Macro To Cli'
  +'p'');'#13#10'       ok:=false;'#13#10'     end'#13#10'     else if TempEven'
  +'t.NodeId = ''EventsMacroLoadFromClip'' then'#13#10'     begin'#13#10'      '
  +' Showmessage(''Stop The Macro Recording before calling Load Macro From Clip'
  +''');'#13#10'       ok:=false;'#13#10'     end'#13#10'     else if TempEvent'
  +'.NodeId = ''EventsMacroResumeRecording'' then'#13#10'     begin'#13#10'    '
  +'   Showmessage(''Macro Recording is already active - Resume Recording Comma'
  +'nd ignored'');'#13#10'       ok:=false;'#13#10'     end'#13#10'     else if'
  +'   (TempEvent.NodeId = ''EventsMacroStartRecording'') then'#13#10'     begi'
  +'n'#13#10'       Showmessage(''Macro Recording is already active - Start Rec'
  +'ording Command ignored'');'#13#10'       ok:=false;'#13#10'     end'#13#10
  +'     else if  (TempEvent.NodeId = ''EventsMacroStartReplay'') then'#13#10' '
  +'    begin'#13#10'       Showmessage(''Macro Recording is already active - R'
  +'eplay Command ignored'');'#13#10'       ok:=false;'#13#10'     end;'#13#10
  +#13#10'     if (ok) and (TempEvent.NodeId <> ''EventsMacroStopRecording'') t'
  +'hen'#13#10'     begin'#13#10'       MacroEventList.add(TempEvent);'#13#10' '
  +'      EditAttributeValue(LoggingLabelNode,''LabelCaption'',''Record.... >'''
  +'+  e.EventType +''<  >''+  e.NodeId+''<  >''+ e.eventvalue +''< '');'#13#10
  +'     end;'#13#10'   end;'#13#10'end;'#13#10#13#10'{$ifndef JScript}'#13#10
  +'procedure THelperProcs.CallMove(Data:PtrInt);'#13#10'var'#13#10' Params: Tm'
  +'ouseAnimParams;'#13#10'begin'#13#10' Params:=PmouseAnimParams(Data)^;'#13#10
  +' MouseInput.Move(Params.Shift,Params.ScreenX,Params.ScreenY,Params.duration'
  +');'#13#10'end;'#13#10'{$endif}'#13#10#13#10'begin'#13#10'  // IMPORTANT: do'
  +' not use any of the dll interface functions inside the'#13#10'  // unit ini'
  +'tialization section.....errors will occur.'#13#10'   MacroEventList:=TMacro'
  +'EventList.create;'#13#10'   {$ifndef JScript}'#13#10'   HelperProcs:=THelpe'
  +'rProcs.Create;'#13#10'   AdditionalScript:='#13#10'   ''<script> '' +LineEn'
  +'ding'#13#10'//   +''function mywait(ms) {   ''  +LineEnding'#13#10'//   +'''
  +'     return new Promise(resolve => setTimeout(resolve, ms));  ''  +LineEndi'
  +'ng     //!!!! but this timeout does not refresh the screen'#13#10'//   +''}'
  +'    ''  +LineEnding'#13#10'//   +''async function mysleep(ms) {  ''  +LineE'
  +'nding'#13#10'//   +''     await mywait(ms); ''  +LineEnding'#13#10'//   +'''
  +'     return;   ''  +LineEnding'#13#10'//   +''}  ''  +LineEnding'#13#10#13
  +#10'   +''var glbTimeoutWaiting=false;  ''  +LineEnding'#13#10'   +''var Ani'
  +'mationWaiting=false;  ''  +LineEnding'#13#10'   +''var jobId=0;     ''  +Li'
  +'neEnding'#13#10'   +''var JobsWaiting=[];  ''  +LineEnding'#13#10#13#10'   '
  +'+''function runFn(fn,ms,fname,job,...args) {  ''  +LineEnding'#13#10'   +'''
  +'  var ars='''''''';  ''  +LineEnding'#13#10'   +''  for (var i = 2; i < arg'
  +'uments.length; i++) {ars=ars+'''' ''''+arguments[i];} ''  +LineEnding'#13#10
  +'//   +''  console.log(''''running ''''+fname+'''' : ''''+ars); ''  +LineEnd'
  +'ing'#13#10'   +''  fn(...args);  ''  +LineEnding'#13#10'   +''  glbTimeoutW'
  +'aiting=false;  ''  +LineEnding'#13#10'   +''  tryNextJob();  ''  +LineEndin'
  +'g'#13#10'   +''}                           ''  +LineEnding'#13#10'   +''fun'
  +'ction tryNextJob() { ''  +LineEnding'#13#10'   +''  if (JobsWaiting.length='
  +'=0) return; ''  +LineEnding'#13#10'   +''  if ((glbTimeoutWaiting==false) '
  +'''+LineEnding'#13#10'   +''   &&(AnimationWaiting==false)) ''+LineEnding'#13
  +#10'   +''    {  ''  +LineEnding'#13#10'   +''    var nextjob=JobsWaiting.sh'
  +'ift();  ''  +LineEnding'#13#10'   +''    job=nextjob.jobid;  ''  +LineEndin'
  +'g'#13#10'   +''    glbTimeoutWaiting=true;  ''  +LineEnding'#13#10'//   +'''
  +'    console.log(''''Queueing ''''+nextjob.fname);  ''  +LineEnding'#13#10'/'
  +'/   +''    console.log(nextjob); ''  +LineEnding'#13#10'   +''    setTimeou'
  +'t(runFn,nextjob.msec,   ...nextjob.args);    //args===[fn,msec,fname,job,..'
  +'.args]   ''  +LineEnding'#13#10'   +''    }   ''  +LineEnding'#13#10'   +'''
  +'  else {   ''  +LineEnding'#13#10'   +''    setTimeout(tryNextJob,100);  '''
  +'  +LineEnding'#13#10'   +''    }  ''  +LineEnding'#13#10'   +''}  ''  +Line'
  ,'Ending'#13#10'   +''function myTimeout(fn,msec,fname,job,...args) {  ''  +L'
  +'ineEnding'#13#10'   +''  var ars='''''''';   ''  +LineEnding'#13#10'   +'' '
  +' for (var i = 3; i < arguments.length; i++) {ars=ars+'''' ''''+arguments[i]'
  +';}   ''  +LineEnding'#13#10'//   +''  if (job==0) {  ''  +LineEnding'#13#10
  +'   +''    jobId=jobId+1;  ''  +LineEnding'#13#10'   +''    if (jobId>30000)'
  +' jobId=1;  ''  +LineEnding'#13#10'   +''    job=jobId;  ''  +LineEnding'#13
  +#10'//   +''    console.log(''''myTimeout ***** new job ''''+job+'''' ''''+f'
  +'name);   ''  +LineEnding'#13#10'   +''    JobsWaiting.push({jobid:job, func'
  +':fn, msec:msec, fname:fname, args:arguments});  ''  +LineEnding'#13#10'   +'
  +'''    tryNextJob();  ''  +LineEnding'#13#10'//   +''  }   ''  +LineEnding'
  +#13#10'   +''  return job;     ''  +LineEnding'#13#10'   +''}  ''  +LineEndi'
  +'ng'#13#10#13#10'   +''</script>'';'#13#10'   {$endif}'#13#10'end.'#13#10#13
  +#10
]);
LazarusResources.Add('replayuserdialog','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit ReplayUserDialog;'#13
  +#10'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10
  +'interface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUt'
  +'ils, XForm,'#13#10'  {$ifndef JScript}'#13#10'  Forms, Controls, Dialogs, E'
  +'xtCtrls,LazsUtils,'#13#10'  {$else}'#13#10'  HTMLUtils,'#13#10'  {$endif}'
  +#13#10'  WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13#10'  XLabel, XEditB'
  +'ox'#13#10'  , EventsInterface;'#13#10#13#10'type'#13#10#13#10'  { TReplayUs'
  +'erDialogForm }'#13#10#13#10'  TReplayUserDialogForm = class(TXForm)'#13#10
  +'    ReplayUserEntry: TXEditBox;'#13#10'    {$ifndef JScript}'#13#10'    Rep'
  +'layUserDialogTimer: TTimer;'#13#10'    procedure FormCreate(Sender: TObject'
  +');'#13#10'    procedure FormShow(Sender: TObject);'#13#10'    {$endif}'#13
  +#10'  private'#13#10'  public'#13#10'    procedure RunReplayDialog(Sender:TO'
  +'bject);'#13#10'  end;'#13#10#13#10'Procedure AddChars(instring:string;count'
  +'er,loopEnd:integer);'#13#10#13#10'var'#13#10'  ReplayUserDialogForm: TRepla'
  +'yUserDialogForm;'#13#10'  theText:String;'#13#10#13#10'implementation'#13#10
  +#13#10'{$R *.lfm}'#13#10#13#10'Procedure AddChars(instring:string;counter,lo'
  +'opEnd:integer);'#13#10'var tempstr:string;'#13#10'begin'#13#10'{$ifndef JSc'
  +'ript}'#13#10'   if (counter<loopEnd+1) then'#13#10'   begin'#13#10'     tem'
  +'pstr:=LeftStr(instring,counter);'#13#10'     EditAttributeValue(''ReplayUse'
  +'rEntry'','''',''ItemValue'',tempstr);'#13#10'     Application.ProcessMessag'
  +'es;'#13#10'     sleep(200);'#13#10'     AddChars(instring,counter+1,loopEnd'
  +');'#13#10'     if (counter=loopEnd) then'#13#10'     begin'#13#10'       Ap'
  +'plication.ProcessMessages;'#13#10'       sleep(1000);'#13#10'       closeXF'
  +'orm(''ReplayUserDialogForm'','''');'#13#10'     end;'#13#10'   end;'#13#10
  +'{$else}'#13#10'   // already queued up ALL of the AddChars calls (so not da'
  +'isy-chained here)'#13#10'   tempstr:=LeftStr(instring,counter+1);'#13#10'  '
  +' EditAttributeValue(''ReplayUserEntry'','''',''ItemValue'',tempstr);'#13#10
  +'{$endif}'#13#10'end;'#13#10#13#10'procedure TReplayUserDialogForm.RunReplay'
  +'Dialog(Sender:TObject);'#13#10'var'#13#10'  i,loopEnd:integer;'#13#10'begin'
  +#13#10'  {$ifndef JScript}'#13#10'  ReplayUserDialogTimer.Enabled:=false;'#13
  +#10'  AddChars(theText,0,length(theText));'#13#10'  {$else}'#13#10'  loopEnd'
  +':=length(theText);'#13#10'  // Queue up all of the AddChars jobs.'#13#10'  '
  +'asm'#13#10'    //console.log(''RunReplayDialog. text=''+pas.ReplayUserDialo'
  +'g.theText);'#13#10'    for (var i=0; i<loopEnd; i++) {'#13#10'      myTimeo'
  +'ut(pas.ReplayUserDialog.AddChars,200,''AddChars'',0,pas.ReplayUserDialog.th'
  +'eText,i,loopEnd);'#13#10'    }'#13#10'    myTimeout(pas.XForm.CloseXForm,40'
  +'0,''CloseXForm ReplayUserDialogForm'',0,''ReplayUserDialogForm'','''');'#13
  +#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'{ TReplayUserDialogFor'
  +'m }'#13#10#13#10'{$ifndef JScript}'#13#10'procedure TReplayUserDialogForm.F'
  +'ormCreate(Sender: TObject);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(se'
  +'lf);'#13#10'end;'#13#10#13#10'procedure TReplayUserDialogForm.FormShow(Send'
  +'er: TObject);'#13#10'begin'#13#10'  ReplayUserDialogTimer.OnTimer:=@RunRepl'
  +'ayDialog;'#13#10'  ReplayUserDialogTimer.Enabled:=true;'#13#10'end;'#13#10
  +#13#10'{$endif}'#13#10#13#10#13#10'end.'#13#10#13#10
]);
LazarusResources.Add('macrocomment','PAS',[
  '(*'#13#10'    Copyright (c) 2020  Steve Wright'#13#10#13#10'    This unit is'
  +' part of the XIDE project.'#13#10#13#10'    This project is distributed in '
  +'the hope that it will be useful,'#13#10'    but WITHOUT ANY WARRANTY; witho'
  +'ut even the implied warranty of'#13#10'    MERCHANTABILITY or FITNESS FOR A'
  +' PARTICULAR PURPOSE.'#13#10#13#10' ****************************************'
  +'******************************'#13#10' *)'#13#10'unit MacroComment;'#13#10
  +'{$ifndef JScript}'#13#10'{$mode objfpc}{$H+}'#13#10'{$endif}'#13#10#13#10'i'
  +'nterface'#13#10#13#10'uses'#13#10'  Classes, SysUtils, StringUtils, NodeUti'
  +'ls, XForm, Events,'#13#10'  {$ifndef JScript}'#13#10'  Forms, Controls, Dia'
  +'logs, ExtCtrls,LazsUtils,'#13#10'  {$else}'#13#10'  HTMLUtils,'#13#10'  {$e'
  +'ndif}'#13#10'  WrapperPanel, XVBox, XHBox, XMemo, XButton,'#13#10'  XLabel,'
  +' XEditBox'#13#10'  , EventsInterface, XHTMLText;'#13#10#13#10'type'#13#10#13
  +#10'  { TMacroCommentForm }'#13#10#13#10'  TMacroCommentForm = class(TXForm)'
  +#13#10'    MacroCommentMemo: TXMemo;'#13#10'    MacroCommentDone: TXButton;'
  +#13#10'    MacroCommentBtns: TXHBox;'#13#10'    MacroCommentHTMLText: TXHTML'
  +'Text;'#13#10'    XVBox1: TXVBox;'#13#10#13#10'    {$ifndef JScript}'#13#10
  +'    procedure FormCreate(Sender: TObject);'#13#10'    procedure FormShow(Se'
  +'nder: TObject);'#13#10'    {$endif}'#13#10'    procedure MacroCommentDoneHa'
  +'ndleButtonClick(e: TEventStatus; nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'    procedure MacroCommentFormHandleClosure(e: TEventStatus; nodeID: '
  +'AnsiString; myValue: AnsiString);'#13#10'  private'#13#10#13#10'  public'#13
  +#10'    procedure SaveMacroComment;'#13#10'    procedure ShowMemo;'#13#10'  '
  +'  procedure ShowHTMLText(txt:String);'#13#10'  end;'#13#10#13#10'var'#13#10
  +'  MacroCommentForm: TMacroCommentForm;'#13#10#13#10'{$ifdef JScript}'#13#10
  +'procedure  ContinueReplay;'#13#10'{$endif}'#13#10#13#10#13#10'implementatio'
  +'n'#13#10#13#10'{$R *.lfm}'#13#10#13#10'{ TMacroCommentForm }'#13#10#13#10'{'
  +'$ifndef JScript}'#13#10'procedure TMacroCommentForm.FormCreate(Sender: TObj'
  +'ect);'#13#10'begin'#13#10'  myNode:=DoXFormCreated(self);'#13#10'end;'#13#10
  +#13#10'procedure TMacroCommentForm.FormShow(Sender: TObject);'#13#10'begin'
  +#13#10#13#10'end;'#13#10#13#10'{$endif}'#13#10#13#10'procedure TMacroComment'
  +'Form.SaveMacroComment;'#13#10'begin'#13#10'  // user has closed the form af'
  +'ter insertng comment text.'#13#10'//  {$ifndef JScript}'#13#10'   HandleEve'
  +'nt(nil,''UserInput'',''UIRootNode'','''',MacroCommentForm.MacroCommentMemo.'
  +'ItemValue);'#13#10'//  {$else}'#13#10'//  asm'#13#10'//     pas.Events.hand'
  +'leEvent(null,''UserInput'',''UIRootNode'','''',str);'#13#10'//  end;'#13#10
  +'//  {$endif}'#13#10'end;'#13#10#13#10'{$ifdef JScript}'#13#10'procedure  Co'
  +'ntinueReplay;'#13#10'begin'#13#10'  asm'#13#10'    //alert(''continue repla'
  +'y...'');'#13#10'    var idx=pas.EventLogging.MacroEventList.CurrentEvent;'
  +#13#10'    myTimeout(pas.EventLogging.CheckEventDone, 210, ''checkdone'',0,i'
  +'dx,0);'#13#10'    myTimeout(pas.EventLogging.SetCompletedEvent,200,(''SetCo'
  +'mpletedEvent ''+idx.toString()),0,idx);'#13#10'  end;'#13#10'end;'#13#10'{$'
  +'endif}'#13#10#13#10'procedure TMacroCommentForm.MacroCommentDoneHandleButto'
  +'nClick(e: TEventStatus;'#13#10'  nodeID: AnsiString; myValue: AnsiString);'
  +#13#10'begin'#13#10'  if MacroCommentMemo.IsVisible=true then'#13#10'    Sav'
  +'eMacroComment;'#13#10'  closeXForm(''MacroCommentForm'','''');     // will '
  +'call Closure handler'#13#10'end;'#13#10#13#10'procedure TMacroCommentForm.M'
  +'acroCommentFormHandleClosure(e: TEventStatus; nodeID: AnsiString; myValue: '
  +'AnsiString);'#13#10'begin'#13#10'//  showmessage(''comment form closure'');'
  +#13#10'  {$ifdef JScript}'#13#10'  if MacroCommentMemo.IsVisible=false then'
  +#13#10'  // continue replay...'#13#10'  begin'#13#10'    ContinueReplay;'#13
  +#10'  end;'#13#10'  {$endif}'#13#10'end;'#13#10#13#10'procedure TMacroCommen'
  +'tForm.ShowMemo;'#13#10'begin'#13#10'  MacroCommentMemo.ItemValue:='''';'#13
  +#10'  MacroCommentMemo.IsVisible:=true;'#13#10'  MacroCommentHTMLText.IsVisi'
  +'ble:=false;'#13#10'end;'#13#10#13#10'procedure TMacroCommentForm.ShowHTMLTe'
  +'xt(txt:String);'#13#10'begin'#13#10'  MacroCommentMemo.IsVisible:=false;'#13
  +#10'  MacroCommentHTMLText.SourceText:=txt;'#13#10'  MacroCommentHTMLText.Is'
  +'Visible:=true;'#13#10'end;'#13#10#13#10'end.'#13#10#13#10
]);
